/System/Library/Frameworks/CoreDisplay.framework/Versions/A/CoreDisplay [arm64e, 0.036279 seconds]:
    694BD14E-BE76-379A-BBCE-272B5831B1AC /System/Library/Frameworks/CoreDisplay.framework/Versions/A/CoreDisplay [DYLIB, DYLDSHAREDCACHE, FaultedFromDiskDyldSharedCache, MMap64]  
        0x00000001823f6000 (0x124000) __TEXT SEGMENT
            0x00000001823f6000 (  0x51fc) MACH_HEADER
            0x00000001823fb1fc ( 0xe6f5c) __TEXT __text
                0x00000001823fb1fc (   0x130) _GLOBAL__sub_I_Initialization.cpp [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001823fb32c (    0xac) _GLOBAL__sub_I_Display.cpp [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001823fb3d8 (    0x80) _GLOBAL__sub_I_DisplaySurface.mm [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001823fb458 (    0xc0) _GLOBAL__sub_I_MappedDisplay.cpp [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001823fb518 (    0x24) _GLOBAL__sub_I_Framebuffer.cpp [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001823fb53c (    0x98) CoreDisplay_Display_GetCurrentHeadroom [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001823fb5d4 (   0x2f8) GetRealtimeDisplayInfo(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001823fb8cc (   0x170) CoreDisplay::XXH64(unsigned char const*, unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001823fba3c (    0x98) CoreDisplay_Display_GetPotentialHeadroom [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001823fbad4 (    0x98) CoreDisplay_Display_GetReferenceHeadroom [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001823fbb6c (    0x30) MPPriv::~MPPriv() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001823fbb9c (    0xf4) std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char>>::~basic_ostringstream() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001823fbc90 (     0x4) CoreDisplay::DimmingController::~DimmingController() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001823fbc94 (     0x4) CFTypePtr<__IOPresentmentGPUWrangler*>::~CFTypePtr() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001823fbc98 (    0x34) CFTypePtr<__IOPresentmentGPUWrangler*>::~CFTypePtr() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001823fbccc (    0x70) CDNotificationRegisterCallbackFunction [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001823fbd3c (    0xf4) (anonymous namespace)::CDNotificationContext() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001823fbe30 (   0x12c) (anonymous namespace)::register_notification_callback_common(char const*, void*, int, dispatch_queue_s*, int, void (int, void*, int, void*) block_pointer, void*, void (*)(int, void*, int, void*), void*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001823fbf5c (   0x52c) (anonymous namespace)::client_insert_callback_common((anonymous namespace)::context_t*, dispatch_queue_s*, int, void (int, void*, int, void*) block_pointer, void*, void (*)(int, void*, int, void*), void*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001823fc488 (   0x618) (anonymous namespace)::initialize_client_context(char const*, void*, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001823fcaa0 (     0x8) __52-[VirtualDisplayListener initWithDemux:strong:name:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001823fcaa8 (    0x94) (anonymous namespace)::get_pid_self() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001823fcb3c (   0x1f8) (anonymous namespace)::setup_local_port(char const*, unsigned int*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001823fcd34 (    0x94) (anonymous namespace)::get_pid_version_self() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001823fcdc8 (    0xf4) (anonymous namespace)::send_port(unsigned int, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001823fcebc (    0x10) __copy_helper_block_e8_32r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001823fcecc (     0x8) -[VirtualDisplayClient name] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001823fced4 (     0x8) -[VirtualDisplayClient displayID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001823fcedc (   0x110) -[VirtualDisplayClient proxyGone] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001823fcfec (   0x1a0) __33-[VirtualDisplayClient proxyGone]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001823fd18c (     0xc) __destroy_helper_block_e8_32o [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001823fd198 (    0x10) __copy_helper_block_e8_32o [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001823fd1a8 (    0x48) __33-[VirtualDisplayClient proxyGone]_block_invoke.26 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001823fd1f0 (     0xc) __destroy_helper_block_e8_32b [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001823fd1fc (    0x10) __copy_helper_block_e8_32b [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001823fd20c (   0x6cc) -[VirtualDisplayClient applySettings:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001823fd8d8 (   0x16c) invocation function for block in SendVirtualDisplayMetrics(unsigned int, unsigned int, NSDictionary*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001823fda44 (   0x140) invocation function for block in getanalytics_send_event_lazySymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001823fdb84 (     0xc) __destroy_helper_block_e8_32r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001823fdb90 (    0x74) invocation function for block in CoreAnalyticsLibraryCore(char**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001823fdc04 (    0xac) -[VirtualDisplayClient dealloc] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001823fdcb0 (   0x188) -[VirtualDisplayClient initWithOptions:queue:terminationHandler:context:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001823fde38 (    0x64) __73-[VirtualDisplayClient initWithOptions:queue:terminationHandler:context:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001823fde9c (   0x160) demux(mach_msg_header_t*, mach_msg_header_t*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001823fdffc (   0x34c) -[VirtualDisplayClient initWithVendorID:productID:serialNum:name:sizeInMillimeters:maxPixelsWide:maxPixelsHigh:redPrimary:greenPrimary:bluePrimary:whitePoint:queue:terminationHandler:arg:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001823fe348 (    0xa8) -[VirtualDisplayClient unplug] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001823fe3f0 (   0x118) __30-[VirtualDisplayClient unplug]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001823fe508 (   0x548) -[VirtualDisplayClient pluginWithOptions:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001823fea50 (   0x2ac) CDVirtualDisplayCreate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001823fecfc (   0x198) CDVirtualDisplayCreateWithOptions [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001823fee94 (   0x184) CDVirtualDisplayApplySettings [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001823ff018 (   0x134) CDVirtualDisplayApplySettingsDictionary [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001823ff14c (   0x19c) CDVirtualDisplayDestroy [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001823ff2e8 (    0x90) CoreDisplay_GetCalibrationInfo [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001823ff378 (    0xd0) SkyLightLibraryCore(char**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001823ff448 (   0x11c) getSLSDisplayGetCalibrationInfoSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001823ff564 (    0x50) invocation function for block in getSLSDisplayGetCalibrationInfoSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001823ff5b4 (    0x88) SkyLightLibrary() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001823ff63c (    0x74) invocation function for block in SkyLightLibraryCore(char**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001823ff6b0 (    0xc0) CoreDisplay_Display_CopyCalibrationInfo [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001823ff770 (   0x11c) getSLSDisplayCopyCalibrationInfoSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001823ff88c (    0x50) invocation function for block in getSLSDisplayCopyCalibrationInfoSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001823ff8dc (    0xa8) CoreDisplay_Display_CopyCalibrationInfo_Server [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001823ff984 (    0xa8) CoreDisplay_Display_CopyUserAdjustment [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001823ffa2c (   0x11c) getSLSDisplayCopyUserAdjustmentSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001823ffb48 (    0x50) invocation function for block in getSLSDisplayCopyUserAdjustmentSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001823ffb98 (    0xa8) CoreDisplay_Display_CopyUserAdjustment_Server [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001823ffc40 (    0xb0) CoreDisplay_Display_SetUserAdjustment [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001823ffcf0 (   0x11c) getSLSDisplaySetUserAdjustmentSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001823ffe0c (    0x50) invocation function for block in getSLSDisplaySetUserAdjustmentSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001823ffe5c (    0xe0) CoreDisplay_Display_SetUserAdjustment_Server [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001823fff3c (    0xa8) CoreDisplay_Display_CopyUserAdjustmentData [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001823fffe4 (   0x11c) getSLSDisplayCopyUserAdjustmentDataSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182400100 (    0x50) invocation function for block in getSLSDisplayCopyUserAdjustmentDataSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182400150 (    0xa8) CoreDisplay_Display_CopyUserAdjustmentData_Server [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824001f8 (    0xb0) CoreDisplay_Display_SetUserAdjustmentData [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824002a8 (   0x11c) getSLSDisplaySetUserAdjustmentDataSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824003c4 (    0x50) invocation function for block in getSLSDisplaySetUserAdjustmentDataSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182400414 (    0xe0) CoreDisplay_Display_SetUserAdjustmentData_Server [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824004f4 (    0x8c) CoreDisplay_Display_FactoryResetUserAdjustment [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182400580 (   0x11c) getSLSDisplayFactoryResetSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240069c (    0x64) SLSDisplayFactoryResetFunc(unsigned int, unsigned char) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182400700 (    0x50) invocation function for block in getSLSDisplayFactoryResetSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182400750 (    0xe0) CoreDisplay_Display_FactoryResetWithType_Server [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182400830 (    0xa8) CoreDisplay_Display_IsUserAdjustmentSupported [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824008d8 (   0x11c) getSLSDisplayIsUserAdjustmentSupportedSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824009f4 (    0x50) invocation function for block in getSLSDisplayIsUserAdjustmentSupportedSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182400a44 (    0xd0) CoreDisplay_Display_IsUserAdjustmentSupported_Server [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182400b14 (    0xa8) CoreDisplay_Display_IsUserAdjustmentValid [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182400bbc (   0x11c) getSLSDisplayIsUserAdjustmentValidSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182400cd8 (    0x50) invocation function for block in getSLSDisplayIsUserAdjustmentValidSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182400d28 (    0xd0) CoreDisplay_Display_IsUserAdjustmentValid_Server [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182400df8 (    0xa8) CoreDisplay_Display_InvalidateUserAdjustment [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182400ea0 (   0x11c) getSLSDisplayInvalidateUserAdjustmentSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182400fbc (    0x50) invocation function for block in getSLSDisplayInvalidateUserAdjustmentSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240100c (    0xd0) CoreDisplay_Display_InvalidateUserAdjustment_Server [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824010dc (    0x8c) CoreDisplay_Display_FactoryReset [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182401168 (    0x78) -[VirtualDisplayServer spawnProxyWithOptions:clientHandler_port:proxyRPC_port:displayID:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824011e0 (    0xf0) -[VirtualDisplayServer close] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824012d0 (    0xd8) -[VirtualDisplayServer dealloc] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824013a8 (   0x154) -[VirtualDisplayServer init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824014fc (    0x64) invocation function for block in init_once() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182401560 (   0x2f4) demux(mach_msg_header_t*, mach_msg_header_t*) (.43) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182401854 (    0xc8) __VirtualDisplayServerStart_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240191c (   0x200) serverRPC_server_spawnProxy [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182401b1c (   0x29c) proxyRPC_proxy_applyProxy [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182401db8 (   0xcec) invocation function for block in CGXSampleHIDDisplayReportingData(CGXDisplayDevice*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182402aa4 (    0x24) __Block_byref_object_copy_ [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182402ac8 (    0x18) __Block_byref_object_dispose_ [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182402ae0 (   0x180) invocation function for block in FetchReportingData(__CFString const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182402c60 (    0x84) std::__1::vector<double, std::__1::allocator<double>>::vector(std::__1::vector<double, std::__1::allocator<double>> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182402ce4 (    0xa0) std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::basic_string[abi:v160006]<std::nullptr_t>(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182402d84 (    0x88) HIDDisplayReportingData() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182402e0c (    0x18) std::__1::vector<double, std::__1::allocator<double>>::__throw_length_error[abi:v160006]() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182402e24 (    0x40) std::__1::vector<double, std::__1::allocator<double>>::__vallocate[abi:v160006](unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182402e64 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<double>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<double>>(std::__1::allocator<double>&, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182402e9c (    0x34) std::__throw_bad_array_new_length[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182402ed0 (    0x5c) std::__1::__throw_length_error[abi:v160006](char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182402f2c (    0x34) std::length_error::length_error[abi:v160006](char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182402f60 (    0x6c) std::__1::__string_hash<char, std::__1::allocator<char>>::operator()(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182402fcc (    0xb4) std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>::operator()[abi:v160006](std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182403080 (    0x58) void std::__1::allocator_traits<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, CGXHIDDisplayReportingData>, void*>>>::destroy[abi:v160006]<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const, CGXHIDDisplayReportingData>, void, void>(std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, CGXHIDDisplayReportingData>, void*>>&, std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const, CGXHIDDisplayReportingData>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824030d8 (   0x208) std::__1::__murmur2_or_cityhash<unsigned long, 64ul>::operator()(void const*, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824032e0 (     0xc) __clang_call_terminate [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824032ec (    0xf8) std::__1::__murmur2_or_cityhash<unsigned long, 64ul>::__hash_len_0_to_16(char const*, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824033e4 (    0xac) std::__1::__murmur2_or_cityhash<unsigned long, 64ul>::__hash_len_17_to_32(char const*, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182403490 (   0x110) std::__1::__murmur2_or_cityhash<unsigned long, 64ul>::__hash_len_33_to_64(char const*, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824035a0 (    0x3c) std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, CGXHIDDisplayReportingData, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const, CGXHIDDisplayReportingData>>>::~unordered_map[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824035dc (    0x40) std::__1::__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, CGXHIDDisplayReportingData>, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, CGXHIDDisplayReportingData>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, CGXHIDDisplayReportingData>, std::__1::equal_to<std::__1::basic_string<cha...
                0x000000018240361c (    0x94) std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char>>::basic_stringbuf[abi:v160006](std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824036b0 (    0x18) std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824036c8 (    0x44) __destroy_helper_block_e8_32r40r [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240370c (    0x50) __copy_helper_block_e8_32r40r [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240375c (   0x288) invocation function for block in FetchReportingData(__CFString const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824039e4 (    0xc0) invocation function for block in FetchReportingData(__CFString const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182403aa4 (    0x2c) invocation function for block in HIDDisplayReportingQueue() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182403ad0 (   0x1a4) invocation function for block in CGXSendHIDDisplayReportingData() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182403c74 (    0x94) invocation function for block in CGXSendHIDDisplayReportingData() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182403d08 (    0x3c) invocation function for block in CGXSendHIDDisplayReportingData() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182403d44 (    0x2c) invocation function for block in CoreDisplay::IsAppleInternal() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182403d70 (    0x3c) std::__1::unordered_map<unsigned long long, CoreDisplay::DisplayPipe, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<unsigned long long const, CoreDisplay::DisplayPipe>>>::~unordered_map[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182403dac (    0x40) std::__1::__hash_table<std::__1::__hash_value_type<unsigned long long, CoreDisplay::DisplayPipe>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, CoreDisplay::DisplayPipe>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, CoreDisplay::DisplayPipe>, std::__1::equal_to<unsigned long long>, std::__1::hash<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, CoreDisplay::DisplayPipe>>>::__deallocate_node(std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, CoreDisplay::DisplayPipe>, void*>*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182403dec (    0xd0) CoreDisplay::GetBoolCFPreference(__CFString const*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182403ebc (    0x34) CFTypePtr<void const*>::~CFTypePtr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182403ef0 (    0xfc) CoreDisplay::GetInt32CFPreference(__CFString const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182403fec (    0xd8) CoreDisplay::GetFloatCFPreference(__CFString const*, float) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824040c4 (    0xe4) CoreDisplay::GetFloatCFPreference(__CFString const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824041a8 (   0x1a0) CoreDisplay::GetStringCFPreference(__CFString const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182404348 (    0x18) std::__1::vector<char, std::__1::allocator<char>>::__throw_length_error[abi:v160006]() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182404360 (    0x24) invocation function for block in CoreDisplay::StartCrashLogMessageTimer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182404384 (   0x3dc) CoreDisplay::UpdateCrashLogMessage(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182404760 (    0x74) std::__1::__shared_weak_count::__release_shared[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824047d4 (    0x8c) invocation function for block in CoreDisplay::StartTimeStampString() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182404860 (    0xe0) CoreDisplay::GetCurrentSystemGPUVendorName() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182404940 (   0x5ac) CoreDisplay::GetDisplayOutputModePreference(__CFString const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182404eec (    0x90) CoreDisplay::DisplaySType::string() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182404f7c (    0xb4) bool std::__1::operator==[abi:v160006]<std::__1::allocator<char>>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182405030 (    0xc8) CoreDisplay::DisplaySType::cfString() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824050f8 (    0x34) CFTypePtr<__CFString const*>::~CFTypePtr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240512c (    0x88) CoreDisplay::PlatformUseIOBacklight() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824051b4 (    0x4c) invocation function for block in CoreDisplay::RegisterForDumpIOPCapabilities() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182405200 (   0x220) invocation function for block in CoreDisplay::RegisterForDumpIOPCapabilities() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182405420 (    0x98) CoreDisplay::DisplayPipeForService(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824054b8 (    0x34) CFTypePtr<__CFWriteStream*>::~CFTypePtr() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824054ec (    0x34) CFTypePtr<__CFURL const*>::~CFTypePtr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182405520 (   0x568) CoreDisplay::FindDisplayPipeForService(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182405a88 (    0xb4) std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, CoreDisplay::DisplayPipe>, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<unsigned long long, CoreDisplay::DisplayPipe>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, CoreDisplay::DisplayPipe>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, CoreDisplay::DisplayPipe>, std::__1::equal_to<unsigned long long>, std::__1::hash<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, CoreDisplay::DisplayPipe>>>::find<unsigned long long>(unsigned long long const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182405b3c (    0x4c) invocation function for block in CoreDisplay::RegisterForDumpFirstFrameAfterWake() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182405b88 (    0x98) invocation function for block in CoreDisplay::RegisterForDumpFirstFrameAfterWake() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182405c20 (    0x4c) invocation function for block in CoreDisplay::RegisterForDumpLastFrameBeforeExit() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182405c6c (    0x98) invocation function for block in CoreDisplay::RegisterForDumpLastFrameBeforeExit() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182405d04 (    0x4c) invocation function for block in CoreDisplay::RegisterForDumpCurrentFrame() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182405d50 (   0x3f8) invocation function for block in CoreDisplay::RegisterForDumpCurrentFrame() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182406148 (    0xd0) CoreDisplay::UseIOPresentment() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182406218 (    0x4c) invocation function for block in CoreDisplay::RegisterForSetDataDumpFrameCount() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182406264 (    0xc0) invocation function for block in CoreDisplay::RegisterForSetDataDumpFrameCount() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182406324 (    0x68) CoreDisplay::SetDataDumpFrameCount() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240638c (    0xac) CoreDisplay::SetDataDumpFrameCountForDevice(CGXDisplayDevice*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182406438 (    0x4c) invocation function for block in CoreDisplay::RegisterForUpdateDumpPreferences() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182406484 (   0x2d8) invocation function for block in CoreDisplay::RegisterForUpdateDumpPreferences() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240675c (    0x4c) invocation function for block in CoreDisplay::RegisterForDisplayPipeDebugFlags() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824067a8 (    0xb8) invocation function for block in CoreDisplay::RegisterForDisplayPipeDebugFlags() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182406860 (    0x68) invocation function for block in CoreDisplay::RegisterForDisplayPipeDebugFlags() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824068c8 (    0xa0) std::__1::future<decltype(std::declval<void>())> WSMainThreadDispatchAsync<void>(void () block_pointer) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182406968 (   0x120) std::__1::future<std::__1::invoke_result<std::__1::decay<applesauce::dispatch::v1::block<void ()>>::type>::type> WSMainThreadDispatchAfter<applesauce::dispatch::v1::block<void ()>>(double, applesauce::dispatch::v1::block<void ()>&&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182406a88 (    0x68) std::__1::packaged_task<void ()>::packaged_task[abi:v160006]<applesauce::dispatch::v1::block<void ()>, void>(applesauce::dispatch::v1::block<void ()>&&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182406af0 (    0x88) std::__1::packaged_task<void ()>::packaged_task[abi:v160006](std::__1::packaged_task<void ()>&&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182406b78 (    0xa8) std::__1::__packaged_task_function<void ()>::~__packaged_task_function() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182406c20 (    0x54) std::__1::unique_ptr<std::__1::pair<std::__1::packaged_task<void ()>, std::__1::tuple<>>, std::__1::default_delete<std::__1::pair<std::__1::packaged_task<void ()>, std::__1::tuple<>>>>::reset[abi:v160006](std::__1::pair<std::__1::packaged_task<void ()>, std::__1::tuple<>>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182406c74 (    0x7c) std::__1::future<std::__1::invoke_result<std::__1::decay<applesauce::dispatch::v1::block<void ()>>::type>::type> WSMainThreadDispatchAfter<applesauce::dispatch::v1::block<void ()>>(double, applesauce::dispatch::v1::block<void ()>&&)::'lambda'(void*, double)::__invoke(void*, double) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182406cf0 (   0x108) std::__1::packaged_task<void ()>::operator()() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182406df8 (    0x68) std::__1::__throw_future_error[abi:v160006](std::__1::future_errc) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182406e60 (    0x10) std::__1::__packaged_task_func<applesauce::dispatch::v1::block<void ()>, std::__1::allocator<applesauce::dispatch::v1::block<void ()>>, void ()>::operator()() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182406e70 (    0x44) std::__1::__packaged_task_func<applesauce::dispatch::v1::block<void ()>, std::__1::allocator<applesauce::dispatch::v1::block<void ()>>, void ()>::destroy_deallocate() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182406eb4 (    0x24) std::__1::__packaged_task_func<applesauce::dispatch::v1::block<void ()>, std::__1::allocator<applesauce::dispatch::v1::block<void ()>>, void ()>::destroy() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182406ed8 (    0x28) std::__1::__packaged_task_func<applesauce::dispatch::v1::block<void ()>, std::__1::allocator<applesauce::dispatch::v1::block<void ()>>, void ()>::__move_to(std::__1::__packaged_task_base<void ()>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182406f00 (    0x60) std::__1::__packaged_task_func<applesauce::dispatch::v1::block<void ()>, std::__1::allocator<applesauce::dispatch::v1::block<void ()>>, void ()>::~__packaged_task_func() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182406f60 (    0x50) std::__1::__packaged_task_func<applesauce::dispatch::v1::block<void ()>, std::__1::allocator<applesauce::dispatch::v1::block<void ()>>, void ()>::~__packaged_task_func() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182406fb0 (    0x4c) invocation function for block in CoreDisplay::RegisterForSetSystemGamma() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182406ffc (   0x100) invocation function for block in CoreDisplay::RegisterForSetSystemGamma() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824070fc (    0x64) invocation function for block in CoreDisplay::RegisterForSetSystemGamma() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182407160 (    0x4c) invocation function for block in CoreDisplay::RegisterForSetEDRAnimParams() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824071ac (    0xa0) invocation function for block in CoreDisplay::RegisterForSetEDRAnimParams() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240724c (    0x4c) invocation function for block in CoreDisplay::RegisterForDumpState() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182407298 (    0x84) invocation function for block in CoreDisplay::RegisterForDumpState() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240731c (   0x120) std::__1::future<std::__1::invoke_result<std::__1::decay<void (&)()>::type>::type> WSMainThreadDispatchAfter<void (&)()>(double, void (&)()) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240743c (    0x60) std::__1::packaged_task<void ()>::packaged_task[abi:v160006]<void (&)(), void>(void (&)()) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240749c (    0x7c) std::__1::future<std::__1::invoke_result<std::__1::decay<void (&)()>::type>::type> WSMainThreadDispatchAfter<void (&)()>(double, void (&)())::'lambda'(void*, double)::__invoke(void*, double) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182407518 (     0x8) std::__1::__packaged_task_func<void (*)(), std::__1::allocator<void (*)()>, void ()>::operator()() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182407520 (     0x4) std::__1::__packaged_task_func<void (*)(), std::__1::allocator<void (*)()>, void ()>::destroy_deallocate() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182407524 (     0x4) std::__1::__packaged_task_func<void (*)(), std::__1::allocator<void (*)()>, void ()>::destroy() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182407528 (    0x24) std::__1::__packaged_task_func<void (*)(), std::__1::allocator<void (*)()>, void ()>::__move_to(std::__1::__packaged_task_base<void ()>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240754c (     0x4) std::__1::__packaged_task_func<void (*)(), std::__1::allocator<void (*)()>, void ()>::~__packaged_task_func() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182407550 (     0x4) std::__1::__packaged_task_func<void (*)(), std::__1::allocator<void (*)()>, void ()>::~__packaged_task_func() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182407554 (     0xc) CoreDisplay::DumpState() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182407560 (    0x4c) invocation function for block in CoreDisplay::RegisterForDumpGammaTransferData() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824075ac (   0x254) invocation function for block in CoreDisplay::RegisterForDumpGammaTransferData() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182407800 (    0x4c) invocation function for block in CoreDisplay::RegisterForSetDebugLogState() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240784c (    0xa8) invocation function for block in CoreDisplay::RegisterForSetDebugLogState() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824078f4 (   0x324) invocation function for block in CoreDisplay::RegisterForDumpStateForSysDiagnose() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182407c18 (   0x104) std::__1::promise<os_state_data_s*>::~promise() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182407d1c (    0xa8) std::__1::__packaged_task_function<os_state_data_s* ()>::~__packaged_task_function() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182407dc4 (    0x54) std::__1::unique_ptr<std::__1::pair<std::__1::packaged_task<os_state_data_s* ()>, std::__1::tuple<>>, std::__1::default_delete<std::__1::pair<std::__1::packaged_task<os_state_data_s* ()>, std::__1::tuple<>>>>::reset[abi:v160006](std::__1::pair<std::__1::packaged_task<os_state_data_s* ()>, std::__1::tuple<>>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182407e18 (   0x1ac) std::__1::future<std::__1::invoke_result<std::__1::decay<os_state_data_s* (&)()>::type>::type> WSMainThreadDispatchAfter<os_state_data_s* (&)()>(double, os_state_data_s* (&)())::'lambda'(void*, double)::__invoke(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182407fc4 (    0x90) std::__1::promise<os_state_data_s*>::set_exception(std::exception_ptr) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182408054 (    0x7c) std::__1::__assoc_sub_state::__attach_future[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824080d0 (    0x8c) std::exception_ptr std::make_exception_ptr[abi:v160006]<std::__1::future_error>(std::__1::future_error) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240815c (    0x24) std::__1::__assoc_state<os_state_data_s*>::__on_zero_shared() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182408180 (    0x70) std::__1::__assoc_state<os_state_data_s*>::~__assoc_state() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824081f0 (    0x6c) std::__1::__assoc_state<os_state_data_s*>::~__assoc_state() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240825c (     0x8) std::__1::__packaged_task_func<os_state_data_s* (*)(), std::__1::allocator<os_state_data_s* (*)()>, os_state_data_s* ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182408264 (     0x4) std::__1::__packaged_task_func<os_state_data_s* (*)(), std::__1::allocator<os_state_data_s* (*)()>, os_state_data_s* ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182408268 (     0x4) std::__1::__packaged_task_func<os_state_data_s* (*)(), std::__1::allocator<os_state_data_s* (*)()>, os_state_data_s* ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240826c (    0x24) std::__1::__packaged_task_func<os_state_data_s* (*)(), std::__1::allocator<os_state_data_s* (*)()>, os_state_data_s* ()>::__move_to(std::__1::__packaged_task_base<os_state_data_s* ()>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182408290 (     0x4) std::__1::__packaged_task_func<os_state_data_s* (*)(), std::__1::allocator<os_state_data_s* (*)()>, os_state_data_s* ()>::~__packaged_task_func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182408294 (     0x4) std::__1::__packaged_task_func<os_state_data_s* (*)(), std::__1::allocator<os_state_data_s* (*)()>, os_state_data_s* ()>::~__packaged_task_func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182408298 (   0x124) CoreDisplay::DumpStateForSysDiagnose() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824083bc (    0x34) CFTypePtr<__CFData const*>::~CFTypePtr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824083f0 (    0xc4) invocation function for block in CoreDisplay::DefaultWhitePointMode() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824084b4 (     0xc) invocation function for block in CoreDisplay::PlatformUseIOBacklight() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824084c0 (    0x7c) invocation function for block in CoreDisplay::VorpalBlade() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240853c (    0xa4) std::__1::pair<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, CoreDisplay::DisplayPipe>, void*>*>, bool> std::__1::__hash_table<std::__1::__hash_value_type<unsigned long long, CoreDisplay::DisplayPipe>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, CoreDisplay::DisplayPipe>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, CoreDisplay::DisplayPipe>, std::__1::equal_to<unsigned long long>, std::__1::hash<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, CoreDisplay::DisplayPipe>>>::__emplace_unique_impl<std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned long long&>, std::__1::tuple<unsigned long long&>>(std::__1::piecewise_construct_t const&, s...
                0x00000001824085e0 (   0xbd4) std::__1::unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, CoreDisplay::DisplayPipe>, void*>, std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, CoreDisplay::DisplayPipe>, void*>>>> std::__1::__hash_table<std::__1::__hash_value_type<unsigned long long, CoreDisplay::DisplayPipe>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, CoreDisplay::DisplayPipe>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, CoreDisplay::DisplayPipe>, std::__1::equal_to<unsigned long long>, std::__1::hash<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, CoreDisplay::DisplayPipe>>>::__construct_node<std::__1::piecewise_construct_...
                0x00000001824091b4 (    0x58) std::__1::__hash_table<std::__1::__hash_value_type<unsigned long long, CoreDisplay::DisplayPipe>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, CoreDisplay::DisplayPipe>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, CoreDisplay::DisplayPipe>, std::__1::equal_to<unsigned long long>, std::__1::hash<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, CoreDisplay::DisplayPipe>>>::__node_insert_unique(std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, CoreDisplay::DisplayPipe>, void*>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240920c (    0x58) std::__1::unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, CoreDisplay::DisplayPipe>, void*>, std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, CoreDisplay::DisplayPipe>, void*>>>>::reset[abi:v160006](std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, CoreDisplay::DisplayPipe>, void*>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182409264 (   0x108) std::__1::__hash_table<std::__1::__hash_value_type<unsigned long long, CoreDisplay::DisplayPipe>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, CoreDisplay::DisplayPipe>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, CoreDisplay::DisplayPipe>, std::__1::equal_to<unsigned long long>, std::__1::hash<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, CoreDisplay::DisplayPipe>>>::__node_insert_unique_prepare[abi:v160006](unsigned long, std::__1::__hash_value_type<unsigned long long, CoreDisplay::DisplayPipe>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240936c (    0xb8) std::__1::__hash_table<std::__1::__hash_value_type<unsigned long long, CoreDisplay::DisplayPipe>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, CoreDisplay::DisplayPipe>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, CoreDisplay::DisplayPipe>, std::__1::equal_to<unsigned long long>, std::__1::hash<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, CoreDisplay::DisplayPipe>>>::__node_insert_unique_perform[abi:v160006](std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, CoreDisplay::DisplayPipe>, void*>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182409424 (    0xf0) void std::__1::__hash_table<std::__1::__hash_value_type<unsigned long long, CoreDisplay::DisplayPipe>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, CoreDisplay::DisplayPipe>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, CoreDisplay::DisplayPipe>, std::__1::equal_to<unsigned long long>, std::__1::hash<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, CoreDisplay::DisplayPipe>>>::__rehash<true>(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182409514 (   0x15c) void std::__1::__hash_table<std::__1::__hash_value_type<unsigned long long, CoreDisplay::DisplayPipe>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, CoreDisplay::DisplayPipe>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, CoreDisplay::DisplayPipe>, std::__1::equal_to<unsigned long long>, std::__1::hash<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, CoreDisplay::DisplayPipe>>>::__do_rehash<true>(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182409670 (   0x130) CoreDisplay::GetDisplayPipes() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824097a0 (    0x18) std::__1::vector<CoreDisplay::DisplayPipe*, std::__1::allocator<CoreDisplay::DisplayPipe*>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824097b8 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<CoreDisplay::DisplayPipe*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<CoreDisplay::DisplayPipe*>>(std::__1::allocator<CoreDisplay::DisplayPipe*>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824097f0 (    0xd0) CoreDisplay::EnableWSAA() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824098c0 (    0x5c) invocation function for block in CoreDisplay::Enable8kVIC() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240991c (   0x214) CoreDisplay::DumpGammaTransferInfoForDeviceToFile(CGXDisplayDevice*, __sFILE*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182409b30 (   0x18c) CoreDisplay::logGammaTransferInfoForDevice(CGXDisplayDevice*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182409cbc (   0x108) CoreDisplay::AllowMatrixNightShift() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182409dc4 (   0x108) CoreDisplay::ConstraintUntrustedPointToRect(CGPoint, CGRect) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182409ecc (   0x214) CoreDisplay::GetDisplayZoomParameters(CGXDisplayDevice*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240a0e0 (    0x34) CFTypePtr<CGSRegionObject*>::~CFTypePtr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240a114 (     0x4) CoreDisplay_UseIOPresentment [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240a118 (   0x344) CoreDisplay_CopyCurrentState [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240a45c (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<__CFString const*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<__CFString const*>>(std::__1::allocator<__CFString const*>&, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240a494 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<void const*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<void const*>>(std::__1::allocator<void const*>&, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240a4cc (    0x18) std::__1::vector<__CFString const*, std::__1::allocator<__CFString const*>>::__throw_length_error[abi:v160006]() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240a4e4 (    0x18) std::__1::vector<void const*, std::__1::allocator<void const*>>::__throw_length_error[abi:v160006]() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240a4fc (   0x254) CoreDisplay_SetZoomParameters [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240a750 (    0x40) CGXMuxGetService [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240a790 (   0x124) CGXMuxGetState [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240a8b4 (   0x108) CGXMuxSetPolicyEnabled [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240a9bc (   0x340) mux_initialize() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240acfc (   0x100) CGXMuxGetPolicy [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240adfc (   0x160) CGXMuxBoot [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240af5c (    0x98) mux_enable_ports(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240aff4 (   0x26c) CGXMuxCapture [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240b260 (   0x1d0) mux_lock_entrypoint(void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240b430 (    0x54) -[VirtualDisplayListener objectForPort:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240b484 (   0x10c) -[VirtualDisplayListener forgetPort:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240b590 (   0x11c) -[VirtualDisplayListener rememberPort:forObject:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240b6ac (    0xc8) -[VirtualDisplayListener dealloc] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240b774 (     0x4) __33-[VirtualDisplayListener dealloc]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240b778 (   0x2b8) -[VirtualDisplayListener initWithDemux:strong:name:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240ba30 (    0x34) invocation function for block in init_once(NSString*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240ba64 (   0x118) -[VirtualDisplayListener rx] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240bb7c (    0x68) std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>::~vector[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240bbe4 (    0x54) std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>::__destroy_vector::operator()[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240bc38 (    0x58) std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>::__clear[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240bc90 (   0x184) CoreDisplay::SetDimmingFactorOnDisplays(double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240be14 (   0x128) CoreDisplay::DimmingController::Animate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240bf3c (    0x54) CoreDisplay::DimmingController::AnimateCallback(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240bf90 (    0xfc) CoreDisplay::DimmingController::Undim(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240c08c (   0x23c) CoreDisplay::LoadCapabilities(__IOPresentment*, sPipelineDictionary*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240c2c8 (    0x44) std::__1::shared_timed_mutex::~shared_timed_mutex[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240c30c (    0x34) CFTypePtr<__IOPresentment*>::~CFTypePtr() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240c340 (    0x74) CoreDisplay::IOPCapabilities::~IOPCapabilities() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240c3b4 (    0x38) std::__1::unique_lock<std::__1::shared_timed_mutex>::~unique_lock[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240c3ec (   0x4e0) CoreDisplay::IOPCapabilities::CapabilitiesForClients() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240c8cc (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<unsigned int>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<unsigned int>>(std::__1::allocator<unsigned int>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240c904 (    0x18) std::__1::vector<unsigned int, std::__1::allocator<unsigned int>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240c91c (    0x34) CFTypePtr<__CFNumber const*>::~CFTypePtr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240c950 (    0x34) CFTypePtr<__CFArray*>::~CFTypePtr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240c984 (    0x38) std::__1::shared_lock<std::__1::shared_timed_mutex>::~shared_lock[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240c9bc (    0xe0) CoreDisplay::IOPCapabilities::CanCSC() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240ca9c (   0x1a0) CoreDisplay::IOPPixelFormatMaskForIOSurfacePixelFormat(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240cc3c (    0xd4) CoreDisplay::IOPCapabilities::GetEndpointSize() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240cd10 (    0xb8) CoreDisplay::IOPCapabilities::PlaneCount() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240cdc8 (   0x208) CoreDisplay::IOPCapabilities::GammaChannelTableEntryCountAndType() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240cfd0 (   0x134) CoreDisplay::IOPCapabilities::IsLinearizationTableBased(unsigned int) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240d104 (   0x1b8) CoreDisplay::IOPCapabilities::GetPlaneIndices() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240d2bc (   0x11c) CoreDisplay::IOPCapabilities::SupportsPixelFormat(unsigned int, unsigned int) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240d3d8 (   0x258) CoreDisplay::IOPCapabilities::SupportsUpscalingToEndpoint(unsigned int, unsigned int, CGRect) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240d630 (   0x258) CoreDisplay::IOPCapabilities::SupportsDownscalingToEndpoint(unsigned int, unsigned int, CGRect) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240d888 (   0x158) CoreDisplay::IOPCapabilities::SupportsLinearization(unsigned int, bool) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240d9e0 (   0x148) CoreDisplay::IOPCapabilities::SupportsCSC(unsigned int, bool) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240db28 (    0xc8) CoreDisplay::IOPCapabilities::CursorBlendIsPostSpatialScaler() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240dbf0 (    0x70) CoreDisplay::Logger::signpost_handle() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240dc60 (    0x70) CoreDisplay::Logger::display_reconfig_signpost_handle() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240dcd0 (    0x70) CoreDisplay::Logger::log_handle() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240dd40 (   0x114) CoreDisplay::Logger::Debug(char const*, int, char const*, ...) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240de54 (   0x110) CoreDisplay::Logger::Info(char const*, int, char const*, ...) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240df64 (   0x110) CoreDisplay::Logger::Warning(char const*, int, char const*, ...) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240e074 (   0x114) CoreDisplay::Logger::Error(char const*, int, char const*, ...) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240e188 (   0x110) CoreDisplay::Logger::Fault(char const*, int, char const*, ...) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240e298 (   0x178) std::__1::deque<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>::~deque[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240e410 (    0xb8) CoreDisplay::IsPixelFormatSubsampledYUV(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240e4c8 (    0xc4) CoreDisplay::Assert(char const*, char const*, int, char const*, char const*, ...) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240e58c (   0x540) CoreDisplay::AssertTracer(char const*, char const*, int, unsigned long long, bool, char const*, char const*, ...) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240eacc (     0x4) invocation function for block in CoreDisplay::AssertTracer(char const*, char const*, int, unsigned long long, bool, char const*, char const*, ...) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240ead0 (     0xc) invocation function for block in CoreDisplay::GetCurrentTimeInMilliSeconds() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240eadc (   0xa7c) CoreDisplay::AddMainOfflineBreadcrumb(bool, char const*, ...) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240f558 (   0x2a8) std::__1::basic_stringstream<char, std::__1::char_traits<char>, std::__1::allocator<char>>::basic_stringstream[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240f800 (   0x1d0) std::__1::basic_ostream<char, std::__1::char_traits<char>>& std::__1::__put_character_sequence[abi:v160006]<char, std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>>&, char const*, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240f9d0 (   0x128) std::__1::basic_stringstream<char, std::__1::char_traits<char>, std::__1::allocator<char>>::~basic_stringstream() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240faf8 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*>>(std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*>&, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240fb30 (   0x1b4) std::__1::ostreambuf_iterator<char, std::__1::char_traits<char>> std::__1::__pad_and_output[abi:v160006]<char, std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char, std::__1::char_traits<char>>, char const*, char const*, char const*, std::__1::ios_base&, char) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240fce4 (    0x9c) std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::basic_string[abi:v160006](unsigned long, char) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240fd80 (    0x58) std::__1::unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, CFTypePtr<CGColorSpace*>>, void*>, std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, CFTypePtr<CGColorSpace*>>, void*>>>>::reset[abi:v160006](std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, CFTypePtr<CGColorSpace*>>, void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240fdd8 (    0x34) CFTypePtr<CGColorSpace*>::~CFTypePtr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240fe0c (    0x60) std::__1::unordered_map<unsigned long, CFTypePtr<CGColorSpace*>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<unsigned long const, CFTypePtr<CGColorSpace*>>>>::~unordered_map[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018240fe6c (   0x4b0) CoreDisplay::DumpSurface(CoreDisplay::DisplayPipe*, CoreDisplay::DisplaySurface*, char const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018241031c (    0xc0) CoreDisplay::GetCSCMatrix(CGColorSpace*, CGColorSpace*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824103dc (   0x108) CoreDisplay::convert_to_smpte_2084_EOTF(float, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824104e4 (   0x114) CoreDisplay::IsMatrixIdentity(std::__1::array<double, 9ul>&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824105f8 (    0x3c) invocation function for block in CoreDisplay::IsMatrixIdentity(std::__1::array<double, 9ul>&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182410634 (    0x9c) invocation function for block in CoreDisplay::MinSystemSchedulerQuantum() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824106d0 (   0x158) CoreDisplay::CRPrintf(char const*, ...) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182410828 (    0xc4) invocation function for block in CoreDisplay::CRPrintf(char const*, ...) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824108ec (    0x4c) CoreDisplay::PlaneRect::SetBoundingBox(CGRect) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182410938 (    0x4c) CoreDisplay::PlaneRect::SetBoundingBox(CGSize) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182410984 (    0x3c) CoreDisplay::PlaneRect::SetViewport(CGRect) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824109c0 (    0x78) CoreDisplay::PlaneRect::SetViewport(double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182410a38 (    0x40) CoreDisplay::PlaneRect::IntegralizeViewport() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182410a78 (    0x98) WSGLLabelObject(CGLSContextRec*, unsigned int, char const*, ...) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182410b10 (   0x2c0) CGXGLAccelAccess [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182410dd0 (    0xc8) CursorBitmapCreate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182410e98 (    0x68) CursorBitmapCreateNoCopy [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182410f00 (    0x9c) CursorBitmapCreateGrayCopy [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182410f9c (    0x64) CursorBitmapRelease [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182411000 (     0x8) CursorBitmapGetWidth [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182411008 (     0xc) CursorBitmapGetBytesPerRow [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182411014 (     0x8) CursorBitmapGetHeight [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018241101c (     0x8) CursorBitmapGetData [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182411024 (     0x8) CursorBitmapGetFrameWidth [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018241102c (     0xc) CursorBitmapGetFrameHeight [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182411038 (    0x28) CursorBitmapGetFrameData [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182411060 (     0x8) CursorBitmapGetHotSpot [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182411068 (     0x8) CursorBitmapGetFrameCount [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182411070 (   0x18c) readPlist [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824111fc (    0xac) IOFBMakeIntegerKeys(__CFDictionary const*, unsigned char) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824112a8 (   0x124) IOFBMakeNumKeys(void const*, void const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824113cc (    0x94) IOFramebufferOpen [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182411460 (   0x288) IOFramebufferServerOpen(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824116e8 (   0x4f8) IOFBInterestCallback(void*, unsigned int, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182411be0 (    0xb8) _IOFBGetAttributeForFramebuffer(unsigned int, unsigned int, unsigned int, unsigned int*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182411c98 (    0x74) IOFBUpdateConnectState(IOFBConnect*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182411d0c (  0x108c) IOFBRebuild(IOFBConnect*, unsigned char) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182412d98 (   0x1e0) IOFBProcessConnectChange(IOFBConnect*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182412f78 (    0x68) IOFBGetDisplayModeInformation [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182412fe0 (    0xf0) IOFBSetGamma [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824130d0 (   0x30c) IOFBSetDisplayModeAndDepth [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824133dc (    0xf0) IOFBGetAttributeForFramebuffer [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824134cc (   0x174) IOFBSetAttributeForFramebuffer [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182413640 (    0x34) CFTypePtr<__CFDictionary*>::~CFTypePtr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182413674 (   0x1d4) IOFBResetTransform(IOFBConnect*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182413848 (   0x12c) _IOFBGetPixelInformation(IOFBConnect*, int, int, int, IOPixelInformation*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182413974 (    0x10) IOFBDictRemoveModePI(void const*, void const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182413984 (   0x284) _IOFBGetDisplayModeInformation(IOFBConnect*, int, IODisplayModeInformation*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182413c08 (    0x34) CFTypePtr<__CFDictionary const*>::~CFTypePtr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182413c3c (  0x23f8) IOFBBuildModeList(IOFBConnect*, unsigned char) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182416034 (    0xb0) IOFBIndexForPixelBits(IOFBConnect*, int, int, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824160e4 (    0x90) __IOFBGetCurrentDisplayModeAndDepth(IOFBConnect*, int*, int*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182416174 (    0xe0) IOFBCreateDisplayModeInformation(IOFBConnect*, int, IOFBDisplayModeDescription*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182416254 (    0xec) GetTovr(IOFBConnect*, unsigned int, unsigned int*, unsigned int*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182416340 (    0x44) ValidateTimingInformation(IOFBConnect*, IOTimingInformation const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182416384 (    0xbc) IOFBSetImageSize(IOFBConnect*, IOFBDisplayModeDescription*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182416440 (   0x7c8) IOFBInstallMode [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182416c08 (    0x18) std::__1::vector<IOFBDisplayModeDescription, std::__1::allocator<IOFBDisplayModeDescription>>::__throw_length_error[abi:v160006]() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182416c20 (    0x4c) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<IOFBDisplayModeDescription>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<IOFBDisplayModeDescription>>(std::__1::allocator<IOFBDisplayModeDescription>&, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182416c6c (    0xf0) UpdateTimingInfoForTransform [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182416d5c (   0x35c) IOFBInstallScaledMode(IOFBConnect*, IOFBDisplayModeDescription*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824170b8 (    0xf0) IOFBInstallScaledResolution(IOFBConnect*, IOFBDisplayModeDescription*, float, float, float, float, unsigned int, unsigned int, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824171a8 (   0x2dc) DetailedTimingsEqual(IODetailedTimingInformationV2 const*, IODetailedTimingInformationV2 const*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182417484 (   0x254) _IOFBInstallScaledResolution(IOFBConnect*, IOFBDisplayModeDescription*, float, float, float, float, unsigned int, unsigned int, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824176d8 (   0x174) IOFBDriverPreflight [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018241784c (    0x4c) IOFBTimingSanity(IOTimingInformation*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182417898 (    0x58) CalculateRefreshLines(IOFBConnect*, IODetailedTimingInformationV2*, float) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824178f0 (   0x6d8) IOFBCreateSharedCursor [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182417fc8 (   0x1fc) IOFBGetPixelInformation [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824181c4 (    0x88) IOFBSetStartupDisplayModeAndDepth [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018241824c (    0xc8) IOFBGetFramebufferOffsetForAperture [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182418314 (    0x88) IOFBGetCurrentDisplayModeAndDepth [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018241839c (    0xa8) IOFBGetDisplayModes [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182418444 (    0xa0) IOFBGetDisplayModeTimingInformation(unsigned int, int, IODetailedTimingInformationV2*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824184e4 (    0x14) IOFBDictSetValues(void const*, void const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824184f8 (   0x168) IOFBGetGraphicsContentProtectionStatus [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182418660 (   0x340) IOFBAcknowledgeNotification [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824189a0 (    0xa0) IOFBSetNewCursor [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182418a40 (    0xa4) IOFBSetCursorVisible [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182418ae4 (   0x218) IOPSAllocateBlitEngine [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182418cfc (   0x108) IOPSBlitFill [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182418e04 (   0x11c) IOFBBlitVRAMCopy [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182418f20 (   0x170) IOFBBlitSurfaceCopy [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182419090 (    0x98) IOFBGetBacklightData(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182419128 (    0x3c) std::__1::__optional_destruct_base<BacklightData, false>::~__optional_destruct_base[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182419164 (    0x4c) CFTypePtr<__CFBundle*>::operator=(CFTypePtr<__CFBundle*> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824191b0 (    0x34) CFTypePtr<__CFBundle*>::~CFTypePtr() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824191e4 (    0x9c) IODisplayEDIDName [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182419280 (   0x314) IOCheckTimingWithDisplay [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182419594 (   0x7e0) CheckTimingWithRange(IOFBConnect*, IODisplayTimingRangeV2*, IODetailedTimingInformationV2*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182419d74 (   0x5dc) getParameterNodes() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018241a350 (    0x80) std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, parameter_node_t, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const, parameter_node_t>>>::unordered_map(std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, parameter_node_t, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<ch...
                0x000000018241a3d0 (   0x274) std::__1::pair<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, parameter_node_t>, void*>*>, bool> std::__1::__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, parameter_node_t>, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, parameter_node_t>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char...
                0x000000018241a644 (    0xb4) std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, unsigned short>, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<unsigned short, unsigned short>, std::__1::__unordered_map_hasher<unsigned short, std::__1::__hash_value_type<unsigned short, unsigned short>, std::__1::hash<unsigned short>, std::__1::equal_to<unsigned short>, true>, std::__1::__unordered_map_equal<unsigned short, std::__1::__hash_value_type<unsigned short, unsigned short>, std::__1::equal_to<unsigned short>, std::__1::hash<unsigned short>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned short, unsigned short>>>::find<unsigned short>(unsigned short const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018241a6f8 (   0x210) std::__1::pair<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, unsigned short>, void*>*>, bool> std::__1::__hash_table<std::__1::__hash_value_type<unsigned short, unsigned short>, std::__1::__unordered_map_hasher<unsigned short, std::__1::__hash_value_type<unsigned short, unsigned short>, std::__1::hash<unsigned short>, std::__1::equal_to<unsigned short>, true>, std::__1::__unordered_map_equal<unsigned short, std::__1::__hash_value_type<unsigned short, unsigned short>, std::__1::equal_to<unsigned short>, std::__1::hash<unsigned short>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned short, unsigned short>>>::__emplace_unique_key_args<unsigned short, std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned short const&>, std::__1::tuple<>>(unsigned short const&, std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned short const&>&&, std::__1::tuple<>&&) [FUNC,...
                0x000000018241a908 (    0x60) std::__1::__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, parameter_node_t>, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, parameter_node_t>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, parameter_node_t>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>...
                0x000000018241a968 (    0x50) void std::__1::allocator_traits<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, parameter_node_t>, void*>>>::destroy[abi:v160006]<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const, parameter_node_t>, void, void>(std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, parameter_node_t>, void*>>&, std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const, parameter_node_t>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018241a9b8 (    0x4c) std::__1::__hash_table<std::__1::__hash_value_type<unsigned short, unsigned short>, std::__1::__unordered_map_hasher<unsigned short, std::__1::__hash_value_type<unsigned short, unsigned short>, std::__1::hash<unsigned short>, std::__1::equal_to<unsigned short>, true>, std::__1::__unordered_map_equal<unsigned short, std::__1::__hash_value_type<unsigned short, unsigned short>, std::__1::equal_to<unsigned short>, std::__1::hash<unsigned short>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned short, unsigned short>>>::~__hash_table() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018241aa04 (   0x1fc) void std::__1::__hash_table<std::__1::__hash_value_type<unsigned short, unsigned short>, std::__1::__unordered_map_hasher<unsigned short, std::__1::__hash_value_type<unsigned short, unsigned short>, std::__1::hash<unsigned short>, std::__1::equal_to<unsigned short>, true>, std::__1::__unordered_map_equal<unsigned short, std::__1::__hash_value_type<unsigned short, unsigned short>, std::__1::equal_to<unsigned short>, std::__1::hash<unsigned short>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned short, unsigned short>>>::__rehash<true>(unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018241ac00 (   0x1fc) void std::__1::__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, parameter_node_t>, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, parameter_node_t>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, parameter_node_t>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<...
                0x000000018241adfc (    0x54) std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, parameter_node_t>, void*>>>::operator()[abi:v160006](std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, parameter_node_t>, void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018241ae50 (   0x284) std::__1::pair<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, parameter_node_t>, void*>*>, bool> std::__1::__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, parameter_node_t>, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, parameter_node_t>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char...
                0x000000018241b0d4 (    0x78) std::__1::unordered_map<unsigned short, unsigned short, std::__1::hash<unsigned short>, std::__1::equal_to<unsigned short>, std::__1::allocator<std::__1::pair<unsigned short const, unsigned short>>>::unordered_map(std::__1::unordered_map<unsigned short, unsigned short, std::__1::hash<unsigned short>, std::__1::equal_to<unsigned short>, std::__1::allocator<std::__1::pair<unsigned short const, unsigned short>>> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018241b14c (   0x204) std::__1::pair<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, unsigned short>, void*>*>, bool> std::__1::__hash_table<std::__1::__hash_value_type<unsigned short, unsigned short>, std::__1::__unordered_map_hasher<unsigned short, std::__1::__hash_value_type<unsigned short, unsigned short>, std::__1::hash<unsigned short>, std::__1::equal_to<unsigned short>, true>, std::__1::__unordered_map_equal<unsigned short, std::__1::__hash_value_type<unsigned short, unsigned short>, std::__1::equal_to<unsigned short>, std::__1::hash<unsigned short>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned short, unsigned short>>>::__emplace_unique_key_args<unsigned short, std::__1::pair<unsigned short const, unsigned short> const&>(unsigned short const&, std::__1::pair<unsigned short const, unsigned short> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018241b350 (    0x78) std::__1::unordered_map<unsigned short, unsigned short, std::__1::hash<unsigned short>, std::__1::equal_to<unsigned short>, std::__1::allocator<std::__1::pair<unsigned short const, unsigned short>>>::unordered_map(std::initializer_list<std::__1::pair<unsigned short const, unsigned short>>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018241b3c8 (    0x5c) std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const, parameter_node_t>::pair[abi:v160006]<true, (void*)0>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, parameter_node_t const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018241b424 (    0x88) std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, parameter_node_t, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const, parameter_node_t>>>::unordered_map(std::initializer_list<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const, parameter_node_t>>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018241b4ac (    0x3c) std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const, parameter_node_t>::~pair() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018241b4e8 (     0x4) std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, parameter_node_t, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const, parameter_node_t>>>::~unordered_map[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018241b4ec (     0x4) std::__1::unordered_map<unsigned short, unsigned short, std::__1::hash<unsigned short>, std::__1::equal_to<unsigned short>, std::__1::allocator<std::__1::pair<unsigned short const, unsigned short>>>::~unordered_map[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018241b4f0 (  0x1150) IODisplayInstallTimings [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018241c640 (    0x44) CFTypePtr<__CFData const*>::operator=(CFTypePtr<__CFData const*>&&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018241c684 (   0xeb0) LookExtensions(IOFBConnect*, EDID*, unsigned char*, unsigned long long, bool, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018241d534 (   0x138) ParseMonitorDescriptor(IOFBConnect*, EDID*, EDIDDesc*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018241d66c (   0x4b4) InstallFromEDIDDesc(IOFBConnect*, EDID*, EDIDDetailedTimingDesc*, unsigned int, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018241db20 (   0x76c) InstallTimingForResolution(IOFBConnect*, EDID*, IOFBResolutionSpec*, unsigned int, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018241e28c (    0xb4) DecodeStandardTiming(EDID*, unsigned short, unsigned int*, unsigned int*, float*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018241e340 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000018241e350 (   0x154) TimingToHost(IODetailedTimingInformationV2 const*, IODetailedTimingInformationV2*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018241e4a4 (   0x5b0) InstallTiming(IOFBConnect*, IOFBDisplayModeDescription*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018241ea54 (   0x1d8) InstallGTFResolution(IOFBConnect*, EDID*, float, float) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018241ec2c (   0x424) InstallTimingImpl(IOFBConnect*, IOFBDisplayModeDescription*, unsigned int, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018241f050 (   0xc5c) log_mode_add(IOFBConnect*, IOFBDisplayModeDescription*, int, char const*, bool, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018241fcac (    0x48) drive_display_2020(IOFBConnect*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018241fcf4 (  0x13e4) InstallTimingWithWireFormats(IOFBConnect*, IOFBDisplayModeDescription*, unsigned int, std::__1::vector<WireFormatDesc, std::__1::allocator<WireFormatDesc>> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824210d8 (    0xa0) std::__1::vector<WireFormatDesc, std::__1::allocator<WireFormatDesc>>::vector[abi:v160006](std::initializer_list<WireFormatDesc>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182421178 (    0x18) std::__1::vector<WireFormatDesc, std::__1::allocator<WireFormatDesc>>::__throw_length_error[abi:v160006]() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182421190 (   0x16c) std::__1::map<WireEncoding, unsigned short, std::__1::less<WireEncoding>, std::__1::allocator<std::__1::pair<WireEncoding const, unsigned short>>>::map[abi:v160006](std::initializer_list<std::__1::pair<WireEncoding const, unsigned short>>, std::__1::less<WireEncoding> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824212fc (    0x50) std::__1::map<WireEncoding, unsigned short, std::__1::less<WireEncoding>, std::__1::allocator<std::__1::pair<WireEncoding const, unsigned short>>>::at(WireEncoding const&) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242134c (   0x16c) std::__1::map<unsigned short, unsigned short, std::__1::less<unsigned short>, std::__1::allocator<std::__1::pair<unsigned short const, unsigned short>>>::map[abi:v160006](std::initializer_list<std::__1::pair<unsigned short const, unsigned short>>, std::__1::less<unsigned short> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824214b8 (    0x50) std::__1::map<unsigned short, unsigned short, std::__1::less<unsigned short>, std::__1::allocator<std::__1::pair<unsigned short const, unsigned short>>>::at(unsigned short const&) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182421508 (   0x16c) std::__1::map<WireColor, unsigned short, std::__1::less<WireColor>, std::__1::allocator<std::__1::pair<WireColor const, unsigned short>>>::map[abi:v160006](std::initializer_list<std::__1::pair<WireColor const, unsigned short>>, std::__1::less<WireColor> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182421674 (    0x50) std::__1::map<WireColor, unsigned short, std::__1::less<WireColor>, std::__1::allocator<std::__1::pair<WireColor const, unsigned short>>>::at(WireColor const&) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824216c4 (   0x16c) std::__1::map<WireRange, unsigned short, std::__1::less<WireRange>, std::__1::allocator<std::__1::pair<WireRange const, unsigned short>>>::map[abi:v160006](std::initializer_list<std::__1::pair<WireRange const, unsigned short>>, std::__1::less<WireRange> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182421830 (    0x50) std::__1::map<WireRange, unsigned short, std::__1::less<WireRange>, std::__1::allocator<std::__1::pair<WireRange const, unsigned short>>>::at(WireRange const&) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182421880 (    0x84) std::__1::map<std::__1::pair<WireEncoding, unsigned short>, unsigned long long, std::__1::less<std::__1::pair<WireEncoding, unsigned short>>, std::__1::allocator<std::__1::pair<std::__1::pair<WireEncoding, unsigned short> const, unsigned long long>>>::map[abi:v160006](std::initializer_list<std::__1::pair<std::__1::pair<WireEncoding, unsigned short> const, unsigned long long>>, std::__1::less<std::__1::pair<WireEncoding, unsigned short>> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182421904 (    0x4c) std::__1::__tree<std::__1::__value_type<std::__1::pair<WireEncoding, unsigned short>, unsigned long long>, std::__1::__map_value_compare<std::__1::pair<WireEncoding, unsigned short>, std::__1::__value_type<std::__1::pair<WireEncoding, unsigned short>, unsigned long long>, std::__1::less<std::__1::pair<WireEncoding, unsigned short>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<WireEncoding, unsigned short>, unsigned long long>>>::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::pair<WireEncoding, unsigned short>, unsigned long long>, void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182421950 (    0x88) std::__1::map<std::__1::pair<WireEncoding, WireColor>, unsigned short, std::__1::less<std::__1::pair<WireEncoding, WireColor>>, std::__1::allocator<std::__1::pair<std::__1::pair<WireEncoding, WireColor> const, unsigned short>>>::map[abi:v160006](std::initializer_list<std::__1::pair<std::__1::pair<WireEncoding, WireColor> const, unsigned short>>, std::__1::less<std::__1::pair<WireEncoding, WireColor>> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824219d8 (    0xbc) std::__1::map<std::__1::pair<WireEncoding, WireColor>, unsigned short, std::__1::less<std::__1::pair<WireEncoding, WireColor>>, std::__1::allocator<std::__1::pair<std::__1::pair<WireEncoding, WireColor> const, unsigned short>>>::map[abi:v160006](std::__1::map<std::__1::pair<WireEncoding, WireColor>, unsigned short, std::__1::less<std::__1::pair<WireEncoding, WireColor>>, std::__1::allocator<std::__1::pair<std::__1::pair<WireEncoding, WireColor> const, unsigned short>>> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182421a94 (    0x88) std::__1::__tree_iterator<std::__1::__value_type<std::__1::pair<WireEncoding, WireColor>, unsigned short>, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<WireEncoding, WireColor>, unsigned short>, void*>*, long> std::__1::__tree<std::__1::__value_type<std::__1::pair<WireEncoding, WireColor>, unsigned short>, std::__1::__map_value_compare<std::__1::pair<WireEncoding, WireColor>, std::__1::__value_type<std::__1::pair<WireEncoding, WireColor>, unsigned short>, std::__1::less<std::__1::pair<WireEncoding, WireColor>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<WireEncoding, WireColor>, unsigned short>>>::find<std::__1::pair<WireEncoding, WireColor>>(std::__1::pair<WireEncoding, WireColor> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182421b1c (    0x4c) std::__1::__tree<std::__1::__value_type<std::__1::pair<WireEncoding, WireColor>, unsigned short>, std::__1::__map_value_compare<std::__1::pair<WireEncoding, WireColor>, std::__1::__value_type<std::__1::pair<WireEncoding, WireColor>, unsigned short>, std::__1::less<std::__1::pair<WireEncoding, WireColor>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<WireEncoding, WireColor>, unsigned short>>>::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::pair<WireEncoding, WireColor>, unsigned short>, void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182421b68 (    0x84) mode_format_result(IOFBConnect*, IOFBDisplayModeDescription*, char const*, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182421bec (   0x1fc) std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<std::__1::pair<WireEncoding, WireColor>, unsigned short>, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<WireEncoding, WireColor>, unsigned short>, void*>*, long>, bool> std::__1::__tree<std::__1::__value_type<std::__1::pair<WireEncoding, WireColor>, unsigned short>, std::__1::__map_value_compare<std::__1::pair<WireEncoding, WireColor>, std::__1::__value_type<std::__1::pair<WireEncoding, WireColor>, unsigned short>, std::__1::less<std::__1::pair<WireEncoding, WireColor>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<WireEncoding, WireColor>, unsigned short>>>::__emplace_hint_unique_key_args<std::__1::pair<WireEncoding, WireColor>, std::__1::pair<std::__1::pair<WireEncoding, WireColor> const, unsigned short> const&>(std::__1::__tree_const_iterator<std::__1::__value_type<std::__1::pair<WireEncoding, WireColor>, unsigned short>, std::__1::__tr...
                0x0000000182421de8 (   0x198) void std::__1::__tree_balance_after_insert[abi:v160006]<std::__1::__tree_node_base<void*>*>(std::__1::__tree_node_base<void*>*, std::__1::__tree_node_base<void*>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182421f80 (    0x60) std::__1::__tree_node_base<void*>*& std::__1::__tree<std::__1::__value_type<std::__1::pair<WireEncoding, WireColor>, unsigned short>, std::__1::__map_value_compare<std::__1::pair<WireEncoding, WireColor>, std::__1::__value_type<std::__1::pair<WireEncoding, WireColor>, unsigned short>, std::__1::less<std::__1::pair<WireEncoding, WireColor>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<WireEncoding, WireColor>, unsigned short>>>::__find_equal<std::__1::pair<WireEncoding, WireColor>>(std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*&, std::__1::pair<WireEncoding, WireColor> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182421fe0 (    0x2c) std::__1::map<std::__1::pair<WireEncoding, WireColor>, unsigned short, std::__1::less<std::__1::pair<WireEncoding, WireColor>>, std::__1::allocator<std::__1::pair<std::__1::pair<WireEncoding, WireColor> const, unsigned short>>>::~map[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242200c (   0x1f4) std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<std::__1::pair<WireEncoding, unsigned short>, unsigned long long>, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<WireEncoding, unsigned short>, unsigned long long>, void*>*, long>, bool> std::__1::__tree<std::__1::__value_type<std::__1::pair<WireEncoding, unsigned short>, unsigned long long>, std::__1::__map_value_compare<std::__1::pair<WireEncoding, unsigned short>, std::__1::__value_type<std::__1::pair<WireEncoding, unsigned short>, unsigned long long>, std::__1::less<std::__1::pair<WireEncoding, unsigned short>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<WireEncoding, unsigned short>, unsigned long long>>>::__emplace_hint_unique_key_args<std::__1::pair<WireEncoding, unsigned short>, std::__1::pair<std::__1::pair<WireEncoding, unsigned short> const, unsigned long long> const&>(std::__1::__tree_const_iterator<std::__1::__value_type<std...
                0x0000000182422200 (    0x60) std::__1::__tree_node_base<void*>*& std::__1::__tree<std::__1::__value_type<std::__1::pair<WireEncoding, unsigned short>, unsigned long long>, std::__1::__map_value_compare<std::__1::pair<WireEncoding, unsigned short>, std::__1::__value_type<std::__1::pair<WireEncoding, unsigned short>, unsigned long long>, std::__1::less<std::__1::pair<WireEncoding, unsigned short>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<WireEncoding, unsigned short>, unsigned long long>>>::__find_equal<std::__1::pair<WireEncoding, unsigned short>>(std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*&, std::__1::pair<WireEncoding, unsigned short> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182422260 (    0x2c) std::__1::map<std::__1::pair<WireEncoding, unsigned short>, unsigned long long, std::__1::less<std::__1::pair<WireEncoding, unsigned short>>, std::__1::allocator<std::__1::pair<std::__1::pair<WireEncoding, unsigned short> const, unsigned long long>>>::~map[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242228c (    0x5c) std::__1::__throw_out_of_range[abi:v160006](char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824222e8 (    0x34) std::out_of_range::out_of_range[abi:v160006](char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242231c (    0x2c) std::__1::map<WireRange, unsigned short, std::__1::less<WireRange>, std::__1::allocator<std::__1::pair<WireRange const, unsigned short>>>::~map[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182422348 (    0x4c) std::__1::__tree<std::__1::__value_type<WireRange, unsigned short>, std::__1::__map_value_compare<WireRange, std::__1::__value_type<WireRange, unsigned short>, std::__1::less<WireRange>, true>, std::__1::allocator<std::__1::__value_type<WireRange, unsigned short>>>::destroy(std::__1::__tree_node<std::__1::__value_type<WireRange, unsigned short>, void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182422394 (    0x2c) std::__1::map<WireColor, unsigned short, std::__1::less<WireColor>, std::__1::allocator<std::__1::pair<WireColor const, unsigned short>>>::~map[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824223c0 (    0x4c) std::__1::__tree<std::__1::__value_type<WireColor, unsigned short>, std::__1::__map_value_compare<WireColor, std::__1::__value_type<WireColor, unsigned short>, std::__1::less<WireColor>, true>, std::__1::allocator<std::__1::__value_type<WireColor, unsigned short>>>::destroy(std::__1::__tree_node<std::__1::__value_type<WireColor, unsigned short>, void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242240c (    0x2c) std::__1::map<unsigned short, unsigned short, std::__1::less<unsigned short>, std::__1::allocator<std::__1::pair<unsigned short const, unsigned short>>>::~map[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182422438 (    0x4c) std::__1::__tree<std::__1::__value_type<unsigned short, unsigned short>, std::__1::__map_value_compare<unsigned short, std::__1::__value_type<unsigned short, unsigned short>, std::__1::less<unsigned short>, true>, std::__1::allocator<std::__1::__value_type<unsigned short, unsigned short>>>::destroy(std::__1::__tree_node<std::__1::__value_type<unsigned short, unsigned short>, void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182422484 (    0x2c) std::__1::map<WireEncoding, unsigned short, std::__1::less<WireEncoding>, std::__1::allocator<std::__1::pair<WireEncoding const, unsigned short>>>::~map[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824224b0 (    0x4c) std::__1::__tree<std::__1::__value_type<WireEncoding, unsigned short>, std::__1::__map_value_compare<WireEncoding, std::__1::__value_type<WireEncoding, unsigned short>, std::__1::less<WireEncoding>, true>, std::__1::allocator<std::__1::__value_type<WireEncoding, unsigned short>>>::destroy(std::__1::__tree_node<std::__1::__value_type<WireEncoding, unsigned short>, void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824224fc (   0x194) std::__1::map<unsigned short, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::less<unsigned short>, std::__1::allocator<std::__1::pair<unsigned short const, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>>::map[abi:v160006](std::initializer_list<std::__1::pair<unsigned short const, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>, std::__1::less<unsigned short> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182422690 (    0x48) map_find_with_default(std::__1::map<unsigned short, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::less<unsigned short>, std::__1::allocator<std::__1::pair<unsigned short const, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>> const&, unsigned short, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824226d8 (    0x2c) std::__1::map<unsigned short, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::less<unsigned short>, std::__1::allocator<std::__1::pair<unsigned short const, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>>::~map[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182422704 (    0x5c) std::__1::__tree<std::__1::__value_type<unsigned short, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::__map_value_compare<unsigned short, std::__1::__value_type<unsigned short, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::less<unsigned short>, true>, std::__1::allocator<std::__1::__value_type<unsigned short, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>>::destroy(std::__1::__tree_node<std::__1::__value_type<unsigned short, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182422760 (    0xf4) StandardResolutionToDetailedTiming(IOFBConnect*, EDID*, IOFBResolutionSpec*, IOTimingInformation*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182422854 (   0x4c8) InstallCEA861EXTColor(IOFBConnect*, EDID*, CEA861EXT*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182422d1c (   0xa10) InstallDisplayIDEXT(IOFBConnect*, EDID*, DisplayIDEXT*, bool, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242372c (    0x44) CFTypePtr<__CFString const*>::operator=(CFTypePtr<__CFString const*>&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182423770 (   0x544) IODisplayAdjustEDIDBacklightTable(__CFDictionary*, __CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182423cb4 (    0xa8) std::__1::vector<float, std::__1::allocator<float>>::reserve(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182423d5c (    0x18) std::__1::vector<float, std::__1::allocator<float>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182423d74 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<float>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<float>>(std::__1::allocator<float>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182423dac (   0x414) AdjustBacklightTable(std::__1::vector<float, std::__1::allocator<float>> const&, std::__1::vector<float, std::__1::allocator<float>> const&, float, float) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824241c0 (    0x74) std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>::vector(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182424234 (    0x44) std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>::__vallocate[abi:v160006](unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182424278 (    0x18) std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182424290 (    0xf0) IODisplayForFramebuffer [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182424380 (  0x2718) _IODisplayCreateInfoDictionary [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182426a98 (    0x4c) CFTypePtr<__CFDictionary*>::operator=(CFTypePtr<__CFDictionary*> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182426ae4 (   0x190) getOverridesPaths() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182426c74 (    0x54) std::__1::optional<CFTypePtr<__CFDictionary*>>& std::__1::optional<CFTypePtr<__CFDictionary*>>::operator=[abi:v160006]<CFTypePtr<__CFDictionary*>&, void>(CFTypePtr<__CFDictionary*>&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182426cc8 (    0x4c) CFTypePtr<__CFString const*>::operator=(CFTypePtr<__CFString const*> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182426d14 (    0x54) std::__1::optional<CFTypePtr<__CFString const*>>& std::__1::optional<CFTypePtr<__CFString const*>>::operator=[abi:v160006]<CFTypePtr<__CFString const*>&, void>(CFTypePtr<__CFString const*>&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182426d68 (    0x88) setDictionaryDisplayIconValue(__CFDictionary*, __CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182426df0 (   0x354) setDictionaryDisplayResolutionPreviewValues(__CFDictionary*, __CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182427144 (    0x98) CFDictionaryAddInt32(__CFDictionary*, void const*, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824271dc (    0x8c) MaxTimingRangeRec(IODisplayTimingRangeV2*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182427268 (   0x11c) IODisplayIsHDMISink(__CFDictionary*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182427384 (    0x98) CFDictionaryAddFloat(__CFDictionary*, void const*, float) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242741c (    0x34) CFTypePtr<__CFUUID const*>::~CFTypePtr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182427450 (   0x194) MakeOneLocalization(void const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824275e4 (    0x14) IODisplayDictAddValues(void const*, void const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824275f8 (   0x160) std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>::vector[abi:v160006](std::initializer_list<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182427758 (     0x4) std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>::~vector[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242775c (    0x38) std::__1::__exception_guard_exceptions<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>::__destroy_vector>::~__exception_guard_exceptions[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182427794 (    0x68) std::__1::__exception_guard_exceptions<std::__1::_AllocatorDestroyRangeReverse<std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*>>::~__exception_guard_exceptions[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824277fc (    0x18) std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182427814 (    0x48) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>(std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242785c (   0x114) IODisplayGetIntegerRangeParameter [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182427970 (    0xa0) IODisplayGetFloatParameter [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182427a10 (   0x144) IODisplaySetFloatParameter [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182427b54 (    0x2c) std::__1::vector<unsigned int, std::__1::allocator<unsigned int>>::resize(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182427b80 (   0x11c) std::__1::vector<unsigned int, std::__1::allocator<unsigned int>>::__append(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182427c9c (    0x54) CoreDisplay::Mach::Message::Message() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182427cf0 (  0x1448) CoreDisplay::Mach::Message::Receive(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182429138 (   0x124) (null) [FUNC, FunctionStarts] 
                0x000000018242925c (    0x88) CoreDisplay::Mach::Message::Reply() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824292e4 (    0x44) CFTypePtr<__CFDictionary*>::operator=(CFTypePtr<__CFDictionary*>&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182429328 (    0x64) void CoreDisplay::Mach::Message::Append<unsigned long>(unsigned long const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242938c (    0x7c) CoreDisplay::Mach::Message::Append(unsigned char const*, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182429408 (   0x1b8) std::__1::invoke_result<std::__1::decay<void (&)(unsigned int, float*, float*, float*, float*, float*, float*, float*, float*)>::type, std::__1::decay<unsigned int&>::type, std::__1::decay<float (&) [8]>::type, std::__1::decay<float*>::type, std::__1::decay<float*>::type, std::__1::decay<float*>::type, std::__1::decay<float*>::type, std::__1::decay<float*>::type, std::__1::decay<float*>::type, std::__1::decay<float*>::type>::type WSMainThreadDispatch<void (&)(unsigned int, float*, float*, float*, float*, float*, float*, float*, float*), unsigned int&, float (&) [8], float*, float*, float*, float*, float*, float*, float*>(void (&)(unsigned int, float*, float*, float*, float*, float*, float*, float*, float*), unsigned int&, float (&) [8], float*&&, float*&&, float*&&, float*&&, float*&&, float*&&, float*&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824295c0 (   0x1c0) std::__1::invoke_result<std::__1::decay<void (&)(unsigned int, float*, float*, float*, float*, float*, float*, float*, float*)>::type, std::__1::decay<unsigned int&>::type, std::__1::decay<float*>::type, std::__1::decay<float*>::type, std::__1::decay<float*>::type, std::__1::decay<float*>::type, std::__1::decay<float*>::type, std::__1::decay<float*>::type, std::__1::decay<float*>::type, std::__1::decay<float*>::type>::type WSMainThreadDispatch<void (&)(unsigned int, float*, float*, float*, float*, float*, float*, float*, float*), unsigned int&, float*, float*, float*, float*, float*, float*, float*, float*>(void (&)(unsigned int, float*, float*, float*, float*, float*, float*, float*, float*), unsigned int&, float*&&, float*&&, float*&&, float*&&, float*&&, float*&&, float*&&, float*&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182429780 (   0x28c) std::__1::invoke_result<std::__1::decay<bool (&)(unsigned int)>::type, std::__1::decay<unsigned int&>::type>::type WSMainThreadDispatch<bool (&)(unsigned int), unsigned int&>(bool (&)(unsigned int), unsigned int&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182429a0c (   0x1e8) std::__1::invoke_result<std::__1::decay<void (&)(unsigned int, bool)>::type, std::__1::decay<unsigned int&>::type, std::__1::decay<bool&>::type>::type WSMainThreadDispatch<void (&)(unsigned int, bool), unsigned int&, bool&>(void (&)(unsigned int, bool), unsigned int&, bool&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182429bf4 (    0xa8) std::__1::__packaged_task_function<void (unsigned int, bool)>::~__packaged_task_function() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182429c9c (    0x54) std::__1::unique_ptr<std::__1::pair<std::__1::packaged_task<void (unsigned int, bool)>, std::__1::tuple<unsigned int, bool>>, std::__1::default_delete<std::__1::pair<std::__1::packaged_task<void (unsigned int, bool)>, std::__1::tuple<unsigned int, bool>>>>::reset[abi:v160006](std::__1::pair<std::__1::packaged_task<void (unsigned int, bool)>, std::__1::tuple<unsigned int, bool>>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182429cf0 (   0x148) std::__1::future<std::__1::invoke_result<std::__1::decay<void (&)(unsigned int, bool)>::type, std::__1::decay<unsigned int&>::type, std::__1::decay<bool&>::type>::type> WSMainThreadDispatchAfter<void (&)(unsigned int, bool), unsigned int&, bool&>(double, void (&)(unsigned int, bool), unsigned int&, bool&)::'lambda'(void*, double)::__invoke(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182429e38 (    0x10) std::__1::__packaged_task_func<void (*)(unsigned int, bool), std::__1::allocator<void (*)(unsigned int, bool)>, void (unsigned int, bool)>::operator()(unsigned int&&, bool&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182429e48 (     0x4) std::__1::__packaged_task_func<void (*)(unsigned int, bool), std::__1::allocator<void (*)(unsigned int, bool)>, void (unsigned int, bool)>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182429e4c (     0x4) std::__1::__packaged_task_func<void (*)(unsigned int, bool), std::__1::allocator<void (*)(unsigned int, bool)>, void (unsigned int, bool)>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182429e50 (    0x24) std::__1::__packaged_task_func<void (*)(unsigned int, bool), std::__1::allocator<void (*)(unsigned int, bool)>, void (unsigned int, bool)>::__move_to(std::__1::__packaged_task_base<void (unsigned int, bool)>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182429e74 (     0x4) std::__1::__packaged_task_func<void (*)(unsigned int, bool), std::__1::allocator<void (*)(unsigned int, bool)>, void (unsigned int, bool)>::~__packaged_task_func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182429e78 (     0x4) std::__1::__packaged_task_func<void (*)(unsigned int, bool), std::__1::allocator<void (*)(unsigned int, bool)>, void (unsigned int, bool)>::~__packaged_task_func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182429e7c (    0xb8) std::__1::future<bool>::get() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182429f34 (    0xf4) std::__1::__assoc_state<bool>::move() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242a028 (   0x104) std::__1::promise<bool>::~promise() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242a12c (    0xa8) std::__1::__packaged_task_function<bool (unsigned int)>::~__packaged_task_function() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242a1d4 (    0x54) std::__1::unique_ptr<std::__1::pair<std::__1::packaged_task<bool (unsigned int)>, std::__1::tuple<unsigned int>>, std::__1::default_delete<std::__1::pair<std::__1::packaged_task<bool (unsigned int)>, std::__1::tuple<unsigned int>>>>::reset[abi:v160006](std::__1::pair<std::__1::packaged_task<bool (unsigned int)>, std::__1::tuple<unsigned int>>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242a228 (   0x13c) std::__1::future<std::__1::invoke_result<std::__1::decay<bool (&)(unsigned int)>::type, std::__1::decay<unsigned int&>::type>::type> WSMainThreadDispatchAfter<bool (&)(unsigned int), unsigned int&>(double, bool (&)(unsigned int), unsigned int&)::'lambda'(void*, double)::__invoke(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242a364 (    0x34) std::__1::promise<bool>::set_value(bool&&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242a398 (    0x90) std::__1::promise<bool>::set_exception(std::exception_ptr) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242a428 (    0xd0) void std::__1::__assoc_state<bool>::set_value<bool>(bool&&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242a4f8 (    0x24) std::__1::__assoc_state<bool>::__on_zero_shared() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242a51c (    0x70) std::__1::__assoc_state<bool>::~__assoc_state() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242a58c (    0x6c) std::__1::__assoc_state<bool>::~__assoc_state() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242a5f8 (     0xc) std::__1::__packaged_task_func<bool (*)(unsigned int), std::__1::allocator<bool (*)(unsigned int)>, bool (unsigned int)>::operator()(unsigned int&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242a604 (     0x4) std::__1::__packaged_task_func<bool (*)(unsigned int), std::__1::allocator<bool (*)(unsigned int)>, bool (unsigned int)>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242a608 (     0x4) std::__1::__packaged_task_func<bool (*)(unsigned int), std::__1::allocator<bool (*)(unsigned int)>, bool (unsigned int)>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242a60c (    0x24) std::__1::__packaged_task_func<bool (*)(unsigned int), std::__1::allocator<bool (*)(unsigned int)>, bool (unsigned int)>::__move_to(std::__1::__packaged_task_base<bool (unsigned int)>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242a630 (     0x4) std::__1::__packaged_task_func<bool (*)(unsigned int), std::__1::allocator<bool (*)(unsigned int)>, bool (unsigned int)>::~__packaged_task_func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242a634 (     0x4) std::__1::__packaged_task_func<bool (*)(unsigned int), std::__1::allocator<bool (*)(unsigned int)>, bool (unsigned int)>::~__packaged_task_func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242a638 (    0x60) std::__1::packaged_task<void (unsigned int, float*, float*, float*, float*, float*, float*, float*, float*)>::packaged_task[abi:v160006]<void (&)(unsigned int, float*, float*, float*, float*, float*, float*, float*, float*), void>(void (&)(unsigned int, float*, float*, float*, float*, float*, float*, float*, float*)) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242a698 (    0x88) std::__1::packaged_task<void (unsigned int, float*, float*, float*, float*, float*, float*, float*, float*)>::packaged_task[abi:v160006](std::__1::packaged_task<void (unsigned int, float*, float*, float*, float*, float*, float*, float*, float*)>&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242a720 (    0xa8) std::__1::__packaged_task_function<void (unsigned int, float*, float*, float*, float*, float*, float*, float*, float*)>::~__packaged_task_function() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242a7c8 (    0x54) std::__1::unique_ptr<std::__1::pair<std::__1::packaged_task<void (unsigned int, float*, float*, float*, float*, float*, float*, float*, float*)>, std::__1::tuple<unsigned int, float*, float*, float*, float*, float*, float*, float*, float*>>, std::__1::default_delete<std::__1::pair<std::__1::packaged_task<void (unsigned int, float*, float*, float*, float*, float*, float*, float*, float*)>, std::__1::tuple<unsigned int, float*, float*, float*, float*, float*, float*, float*, float*>>>>::reset[abi:v160006](std::__1::pair<std::__1::packaged_task<void (unsigned int, float*, float*, float*, float*, float*, float*, float*, float*)>, std::__1::tuple<unsigned int, float*, float*, float*, float*, float*, float*, float*, float*>>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242a81c (    0x8c) std::__1::future<std::__1::invoke_result<std::__1::decay<void (&)(unsigned int, float*, float*, float*, float*, float*, float*, float*, float*)>::type, std::__1::decay<unsigned int&>::type, std::__1::decay<float*>::type, std::__1::decay<float*>::type, std::__1::decay<float*>::type, std::__1::decay<float*>::type, std::__1::decay<float*>::type, std::__1::decay<float*>::type, std::__1::decay<float*>::type, std::__1::decay<float*>::type>::type> WSMainThreadDispatchAfter<void (&)(unsigned int, float*, float*, float*, float*, float*, float*, float*, float*), unsigned int&, float*, float*, float*, float*, float*, float*, float*, float*>(double, void (&)(unsigned int, float*, float*, float*, float*, float*, float*, float*, float*), unsigned int&, float*&&, float*&&, float*&&, float*&&, float*&&, float*&&, float*&&, float*&&)::'lambda'(void*, double)::__invoke(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242a8a8 (   0x17c) std::__1::packaged_task<void (unsigned int, float*, float*, float*, float*, float*, float*, float*, float*)>::operator()(unsigned int, float*, float*, float*, float*, float*, float*, float*, float*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242aa24 (    0x34) std::__1::__packaged_task_func<void (*)(unsigned int, float*, float*, float*, float*, float*, float*, float*, float*), std::__1::allocator<void (*)(unsigned int, float*, float*, float*, float*, float*, float*, float*, float*)>, void (unsigned int, float*, float*, float*, float*, float*, float*, float*, float*)>::operator()(unsigned int&&, float*&&, float*&&, float*&&, float*&&, float*&&, float*&&, float*&&, float*&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242aa58 (     0x4) std::__1::__packaged_task_func<void (*)(unsigned int, float*, float*, float*, float*, float*, float*, float*, float*), std::__1::allocator<void (*)(unsigned int, float*, float*, float*, float*, float*, float*, float*, float*)>, void (unsigned int, float*, float*, float*, float*, float*, float*, float*, float*)>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242aa5c (     0x4) std::__1::__packaged_task_func<void (*)(unsigned int, float*, float*, float*, float*, float*, float*, float*, float*), std::__1::allocator<void (*)(unsigned int, float*, float*, float*, float*, float*, float*, float*, float*)>, void (unsigned int, float*, float*, float*, float*, float*, float*, float*, float*)>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242aa60 (    0x24) std::__1::__packaged_task_func<void (*)(unsigned int, float*, float*, float*, float*, float*, float*, float*, float*), std::__1::allocator<void (*)(unsigned int, float*, float*, float*, float*, float*, float*, float*, float*)>, void (unsigned int, float*, float*, float*, float*, float*, float*, float*, float*)>::__move_to(std::__1::__packaged_task_base<void (unsigned int, float*, float*, float*, float*, float*, float*, float*, float*)>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242aa84 (     0x4) std::__1::__packaged_task_func<void (*)(unsigned int, float*, float*, float*, float*, float*, float*, float*, float*), std::__1::allocator<void (*)(unsigned int, float*, float*, float*, float*, float*, float*, float*, float*)>, void (unsigned int, float*, float*, float*, float*, float*, float*, float*, float*)>::~__packaged_task_func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242aa88 (     0x4) std::__1::__packaged_task_func<void (*)(unsigned int, float*, float*, float*, float*, float*, float*, float*, float*), std::__1::allocator<void (*)(unsigned int, float*, float*, float*, float*, float*, float*, float*, float*)>, void (unsigned int, float*, float*, float*, float*, float*, float*, float*, float*)>::~__packaged_task_func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242aa8c (    0x8c) std::__1::future<std::__1::invoke_result<std::__1::decay<void (&)(unsigned int, float*, float*, float*, float*, float*, float*, float*, float*)>::type, std::__1::decay<unsigned int&>::type, std::__1::decay<float (&) [8]>::type, std::__1::decay<float*>::type, std::__1::decay<float*>::type, std::__1::decay<float*>::type, std::__1::decay<float*>::type, std::__1::decay<float*>::type, std::__1::decay<float*>::type, std::__1::decay<float*>::type>::type> WSMainThreadDispatchAfter<void (&)(unsigned int, float*, float*, float*, float*, float*, float*, float*, float*), unsigned int&, float (&) [8], float*, float*, float*, float*, float*, float*, float*>(double, void (&)(unsigned int, float*, float*, float*, float*, float*, float*, float*, float*), unsigned int&, float (&) [8], float*&&, float*&&, float*&&, float*&&, float*&&, float*&&, float*&&)::'lambda'(void*, double)::__invoke(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, ...
                0x000000018242ab18 (    0xc0) CoreDisplay::Mach::Message::Send(unsigned int, gsl::span<unsigned int, -1l>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242abd8 (   0x380) CoreDisplay::Mach::Message::SendAndReceive(unsigned int, gsl::span<unsigned int, -1l>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242af58 (    0xd8) CGXVFBSelectModeForOnlineState [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242b030 (   0x334) select_mode_by_mode_number(CGXDisplayDevice*, int, CGXSelectModeOption) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242b364 (    0xcc) VFBModeDescription(CGXDisplayDevice*, int, _CGSDisplayModeDescription*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242b430 (   0x2c0) VFRebuildDevice(CGXDisplayDevice*, bool, CGRect const*, CGRect const*, CGRect const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242b6f0 (    0xb8) _VFBSetDeviceBounds(CGXDisplayDevice const*, VFBPriv const*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242b7a8 (   0x104) get_hid_service_connection() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242b8ac (   0x374) CGXVFBSelectOnlineState [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242bc20 (   0x1a0) CGXConstructVirtualFramebufferSet [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242bdc0 (    0xf0) CGXVirtualDisplayROInfo [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242beb0 (   0x6ac) CGXConstructVirtualFramebuffer [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242c55c (   0x29c) update_virtual_display_user_mode(CGXDisplayDevice*, CGRect, CGSize, double, CGSDepth, int, int, int, int, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242c7f8 (    0x14) (null) [FUNC, FunctionStarts] 
                0x000000018242c80c (   0x4cc) CGXDestroyVirtualFramebuffer [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242ccd8 (     0x8) VFBIsLinkMode(CGXDisplayDevice*, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242cce0 (     0x8) VFBGetGPUVendor(CGXDisplayDevice const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242cce8 (     0x4) VFBSetAccessibilityDisplayStateDidChanged(CGXDisplayDevice*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242ccec (     0x8) VFBAccessibilityDisplayStateDidChanged(CGXDisplayDevice*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242ccf4 (     0x4) VFBSetHMDStateDidChanged(CGXDisplayDevice*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242ccf8 (     0x8) VFBHMDStateDidChanged(CGXDisplayDevice*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242cd00 (     0x8) VFBGetHDRScalingFactor(CGXDisplayDevice const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242cd08 (     0x4) VFBSetHDRScalingFactor(CGXDisplayDevice*, float) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242cd0c (     0xc) VFBIsAirPlayDevice(CGXDisplayDevice const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242cd18 (     0x4) VFBEndDisplayConfiguration(CGXDisplayDevice*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242cd1c (     0x4) VFBBeginDisplayConfiguration(CGXDisplayDevice*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242cd20 (     0x4) VFBDisplayCaptured(CGXDisplayDevice const*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242cd24 (   0x114) VFBGetVBLTiming(CGXDisplayDevice const*, unsigned long long*, unsigned long long*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242ce38 (    0x48) find_online_physical_display(CGXDisplayDevice const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242ce80 (    0xf8) VFBGetNextWakeupTime(CGXDisplayDevice*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242cf78 (     0x4) VFBUpdateGammaTablesOnDisplayDevice(CGXDisplayDevice const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242cf7c (     0x4) VFBResetGammaTablesOnDisplayDevice(CGXDisplayDevice const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242cf80 (     0x4) VFBGenerateUpdate(CGXDisplayDevice*, CGSRegionObject*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242cf84 (    0x40) VFBAccessCaptureSurfaceForDisplayDevice(CGXDisplayDevice*, void**, unsigned int*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242cfc4 (     0x8) VFBDisplayDeviceSurfaceIsReady(CGXDisplayDevice*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242cfcc (     0x4) VFBDisplayDeviceDidFlush(CGXDisplayDevice*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242cfd0 (     0x4) VFBResetSurfaceForDisplayDevice(CGXDisplayDevice*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242cfd4 (     0x4) VFBFinishSurfaceForDisplayDevice(CGXDisplayDevice*, unsigned int, int, CGRect, CGSRegionObject*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242cfd8 (    0x58) VFBAccessSurfaceForDisplayDevice(CGXDisplayDevice*, void**, unsigned int*, bool, bool*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242d030 (   0x134) VFBFramebufferForDisplayDevice(CGXDisplayDevice const*, unsigned int, void**, unsigned int*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242d164 (   0x120) VFBAcceleratorForDisplayDevice(CGXDisplayDevice const*, int, unsigned int*, unsigned int*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242d284 (    0x5c) VFBDevice(CGXDisplayDevice const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242d2e0 (    0x28) VFBServiceForDisplayDevice(CGXDisplayDevice const*, int, unsigned int*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242d308 (     0x4) VFBHWWaitTokenRelease(CGXDisplayDevice const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242d30c (     0x4) VFBHWWait(CGXDisplayDevice const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242d310 (     0x4) VFBHWCopyForwardRegion(CGXDisplayDevice*, CGSRegionObject*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242d314 (   0x288) VFBHWCopyPixels(CGXDisplayDevice const*, int, unsigned int, bool, int, int, int, int, unsigned long, unsigned long, void**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242d59c (    0x68) VFBHWPurgeSurface(CGXDisplayDevice const*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242d604 (     0x8) VFBHWMoveRegion(CGXDisplayDevice const*, int, CGSRegionObject*, unsigned int, int, int, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242d60c (   0x1dc) VFBHWFillRegion(CGXDisplayDevice*, int, CGSRegionObject*, unsigned int, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242d7e8 (   0x220) VFBHWCopyRegion(CGXDisplayDevice const*, int, CGSRegionObject*, int, int, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242da08 (     0x4) VFBHWSync(CGXDisplayDevice const*, int, int, int, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242da0c (   0x18c) VFBSetOriginFinish(CGXDisplayDevice*, CGXMonitor const*, bool, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242db98 (    0xbc) VFBSetOriginMiddle(CGXDisplayDevice*, CGXMonitor const*, bool, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242dc54 (    0x48) VFBSetOriginStart(CGXDisplayDevice*, CGXMonitor const*, bool, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242dc9c (     0x4) VFBSetStartupMode(CGXDisplayDevice*, CGDisplayMode*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242dca0 (   0x228) VFBSelectMode(CGXDisplayDevice*, CGDisplayMode*, CoreDisplay::DisplayOutputMode, CGXSelectModeOption) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242dec8 (    0xb4) create_mode_with_mode_number(CGXDisplayDevice*, int, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242df7c (     0xc) VFBCurrentModeNumber(CGXDisplayDevice const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242df88 (     0x8) VFBGetVRRMinRefreshRate(CGXDisplayDevice*, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242df90 (     0x8) VFBVRRSupportForMode(CGXDisplayDevice*, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242df98 (    0x40) VFBNumberOfAvailableModes(CGXDisplayDevice const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242dfd8 (   0x1f0) VFBGetMonitorInfo(CGXDisplayDevice const*, CGXMonitor*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242e1c8 (    0x1c) (null) [FUNC, FunctionStarts] 
                0x000000018242e1e4 (     0x4) VFBResetDevice(CGXDisplayDevice*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242e1e8 (     0x8) VFBDeviceOptions(CGXDisplayDevice*, char const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242e1f0 (     0x4) VFBCompleteTransferCrossfade(CGXDisplayDevice*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242e1f4 (     0x4) VFBTransferCrossfade(CGXDisplayDevice*, float) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242e1f8 (     0x4) VFBInitTransferCrossfade(CGXDisplayDevice*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242e1fc (    0x18) VFBBlendWithColor(CGXDisplayDevice*, float, float, float, float, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242e214 (    0xd8) VFBSetDeviceTransfer(CGXDisplayDevice*, int, float const*, float const*, float const*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242e2ec (    0x2c) VFBGetDeviceTransfer(CGXDisplayDevice const*, int*, float**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242e318 (     0x8) VFBGetTransferTableSize(CGXDisplayDevice const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242e320 (    0x10) VFBRegisterScreen(CGXDisplayDevice*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242e330 (    0xa8) VFBPing(CGXDisplayDevice const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242e3d8 (   0x3e4) VFBInitScreen(CGXDisplayDevice*, bool*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242e7bc (    0xf8) generate_display_uuid_from_device_info(bool, unsigned int, unsigned int, unsigned int, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242e8b4 (    0x54) set_default_mode(VFBPriv*, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242e908 (     0x8) CGXConstructVirtualFramebufferFromBackingStore [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242e910 (     0x8) CGXConstructVirtualFramebufferFromDevice [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242e918 (   0x20c) CGXUpdateVirtualFramebufferSettings [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242eb24 (   0x260) CGXDestroyVirtualFramebufferSet [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242ed84 (   0x41c) CGXExtendedDisplayStart [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242f1a0 (    0x58) CGXVirtualDisplayGetRefreshDeadline [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242f1f8 (   0x1dc) CGXVirtualDisplayCreate [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242f3d4 (    0x60) CGXVirtualDisplaySetOptions [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242f434 (   0x2e8) CGXVirtualDisplayApply [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242f71c (   0x120) CGXVirtualDisplayDestroy [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242f83c (     0x4) airdisplay_connection_death(CGXConnection*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242f840 (   0x124) airdisplay_offline(CGXConnection*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242f964 (    0x7c) CGXAirDisplayOffline [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242f9e0 (    0xd0) CoreDisplay::DestroyIOPresentment(__IOPresentment*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242fab0 (    0xc8) std::__1::deque<unsigned long, std::__1::allocator<unsigned long>>::~deque[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242fb78 (   0x150) std::__1::deque<CFTypePtr<__IOSurface*>, std::__1::allocator<CFTypePtr<__IOSurface*>>>::~deque[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242fcc8 (   0x15c) std::__1::deque<std::__1::shared_ptr<CoreDisplay::IOPTransaction>, std::__1::allocator<std::__1::shared_ptr<CoreDisplay::IOPTransaction>>>::~deque[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242fe24 (    0x34) CFTypePtr<__IOSurface*>::~CFTypePtr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018242fe58 (   0xfb0) CoreDisplay::IOPAttachment::IOPAttachment(unsigned long long, unsigned long long, CoreDisplay::DisplayPipe*)::$_0::__invoke(void*, __CFString const*, unsigned long*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182430e08 (   0x354) CoreDisplay::IOPAttachment::HandleTransactionCompletionEvent(unsigned long*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018243115c (   0x284) std::__1::deque<std::__1::shared_ptr<CoreDisplay::IOPTransaction>, std::__1::allocator<std::__1::shared_ptr<CoreDisplay::IOPTransaction>>>::erase(std::__1::__deque_iterator<std::__1::shared_ptr<CoreDisplay::IOPTransaction>, std::__1::shared_ptr<CoreDisplay::IOPTransaction> const*, std::__1::shared_ptr<CoreDisplay::IOPTransaction> const&, std::__1::shared_ptr<CoreDisplay::IOPTransaction> const* const*, long, 256l>, std::__1::__deque_iterator<std::__1::shared_ptr<CoreDisplay::IOPTransaction>, std::__1::shared_ptr<CoreDisplay::IOPTransaction> const*, std::__1::shared_ptr<CoreDisplay::IOPTransaction> const&, std::__1::shared_ptr<CoreDisplay::IOPTransaction> const* const*, long, 256l>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824313e0 (    0x44) std::__1::unique_lock<std::__1::mutex>::unlock() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182431424 (   0x1b4) invocation function for block in CoreDisplay::IOPAttachment::HandleTransactionPerformEvent(unsigned long*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824315d8 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<unsigned long*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<unsigned long*>>(std::__1::allocator<unsigned long*>&, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182431610 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<CFTypePtr<__IOSurface*>*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<CFTypePtr<__IOSurface*>*>>(std::__1::allocator<CFTypePtr<__IOSurface*>*>&, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182431648 (    0x54) std::__1::__deque_iterator<std::__1::shared_ptr<CoreDisplay::IOPTransaction>, std::__1::shared_ptr<CoreDisplay::IOPTransaction>*, std::__1::shared_ptr<CoreDisplay::IOPTransaction>&, std::__1::shared_ptr<CoreDisplay::IOPTransaction>**, long, 256l>::operator+[abi:v160006](long) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018243169c (    0xec) std::__1::pair<std::__1::__deque_iterator<std::__1::shared_ptr<CoreDisplay::IOPTransaction>, std::__1::shared_ptr<CoreDisplay::IOPTransaction>*, std::__1::shared_ptr<CoreDisplay::IOPTransaction>&, std::__1::shared_ptr<CoreDisplay::IOPTransaction>**, long, 256l>, std::__1::__deque_iterator<std::__1::shared_ptr<CoreDisplay::IOPTransaction>, std::__1::shared_ptr<CoreDisplay::IOPTransaction>*, std::__1::shared_ptr<CoreDisplay::IOPTransaction>&, std::__1::shared_ptr<CoreDisplay::IOPTransaction>**, long, 256l>> std::__1::__move_backward_loop<std::__1::_ClassicAlgPolicy>::operator()[abi:v160006]<std::__1::__deque_iterator<std::__1::shared_ptr<CoreDisplay::IOPTransaction>, std::__1::shared_ptr<CoreDisplay::IOPTransaction>*, std::__1::shared_ptr<CoreDisplay::IOPTransaction>&, std::__1::shared_ptr<CoreDisplay::IOPTransaction>**, long, 256l>, std::__1::__deque_iterator<std::__1::shared_ptr<CoreDisplay::IOPTransaction>, std::__1::shared_ptr<CoreDi...
                0x0000000182431788 (    0x58) std::__1::deque<std::__1::shared_ptr<CoreDisplay::IOPTransaction>, std::__1::allocator<std::__1::shared_ptr<CoreDisplay::IOPTransaction>>>::__maybe_remove_front_spare[abi:v160006](bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824317e0 (    0xe0) std::__1::pair<std::__1::__deque_iterator<std::__1::shared_ptr<CoreDisplay::IOPTransaction>, std::__1::shared_ptr<CoreDisplay::IOPTransaction>*, std::__1::shared_ptr<CoreDisplay::IOPTransaction>&, std::__1::shared_ptr<CoreDisplay::IOPTransaction>**, long, 256l>, std::__1::__deque_iterator<std::__1::shared_ptr<CoreDisplay::IOPTransaction>, std::__1::shared_ptr<CoreDisplay::IOPTransaction>*, std::__1::shared_ptr<CoreDisplay::IOPTransaction>&, std::__1::shared_ptr<CoreDisplay::IOPTransaction>**, long, 256l>> std::__1::__move_loop<std::__1::_ClassicAlgPolicy>::operator()[abi:v160006]<std::__1::__deque_iterator<std::__1::shared_ptr<CoreDisplay::IOPTransaction>, std::__1::shared_ptr<CoreDisplay::IOPTransaction>*, std::__1::shared_ptr<CoreDisplay::IOPTransaction>&, std::__1::shared_ptr<CoreDisplay::IOPTransaction>**, long, 256l>, std::__1::__deque_iterator<std::__1::shared_ptr<CoreDisplay::IOPTransaction>, std::__1::shared_ptr<CoreDisplay::IO...
                0x00000001824318c0 (    0x68) std::__1::deque<std::__1::shared_ptr<CoreDisplay::IOPTransaction>, std::__1::allocator<std::__1::shared_ptr<CoreDisplay::IOPTransaction>>>::__maybe_remove_back_spare[abi:v160006](bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182431928 (    0xd4) std::__1::pair<std::__1::shared_ptr<CoreDisplay::IOPTransaction>*, std::__1::__deque_iterator<std::__1::shared_ptr<CoreDisplay::IOPTransaction>, std::__1::shared_ptr<CoreDisplay::IOPTransaction>*, std::__1::shared_ptr<CoreDisplay::IOPTransaction>&, std::__1::shared_ptr<CoreDisplay::IOPTransaction>**, long, 256l>> std::__1::__move_loop<std::__1::_ClassicAlgPolicy>::operator()[abi:v160006]<std::__1::shared_ptr<CoreDisplay::IOPTransaction>*, std::__1::__deque_iterator<std::__1::shared_ptr<CoreDisplay::IOPTransaction>, std::__1::shared_ptr<CoreDisplay::IOPTransaction>*, std::__1::shared_ptr<CoreDisplay::IOPTransaction>&, std::__1::shared_ptr<CoreDisplay::IOPTransaction>**, long, 256l>, 0>(std::__1::shared_ptr<CoreDisplay::IOPTransaction>*, std::__1::shared_ptr<CoreDisplay::IOPTransaction>*, std::__1::__deque_iterator<std::__1::shared_ptr<CoreDisplay::IOPTransaction>, std::__1::shared_ptr<CoreDisplay::IOPTransaction>*, std::__1::shared_ptr<...
                0x00000001824319fc (    0xe8) std::__1::pair<std::__1::shared_ptr<CoreDisplay::IOPTransaction>*, std::__1::__deque_iterator<std::__1::shared_ptr<CoreDisplay::IOPTransaction>, std::__1::shared_ptr<CoreDisplay::IOPTransaction>*, std::__1::shared_ptr<CoreDisplay::IOPTransaction>&, std::__1::shared_ptr<CoreDisplay::IOPTransaction>**, long, 256l>> std::__1::__move_backward_loop<std::__1::_ClassicAlgPolicy>::operator()[abi:v160006]<std::__1::shared_ptr<CoreDisplay::IOPTransaction>*, std::__1::__deque_iterator<std::__1::shared_ptr<CoreDisplay::IOPTransaction>, std::__1::shared_ptr<CoreDisplay::IOPTransaction>*, std::__1::shared_ptr<CoreDisplay::IOPTransaction>&, std::__1::shared_ptr<CoreDisplay::IOPTransaction>**, long, 256l>, 0>(std::__1::shared_ptr<CoreDisplay::IOPTransaction>*, std::__1::shared_ptr<CoreDisplay::IOPTransaction>*, std::__1::__deque_iterator<std::__1::shared_ptr<CoreDisplay::IOPTransaction>, std::__1::shared_ptr<CoreDisplay::IOPTransaction>*, std::__1::sh...
                0x0000000182431ae4 (    0x68) std::__1::pair<std::__1::shared_ptr<CoreDisplay::IOPTransaction>*, std::__1::shared_ptr<CoreDisplay::IOPTransaction>*> std::__1::__move_backward_loop<std::__1::_ClassicAlgPolicy>::operator()[abi:v160006]<std::__1::shared_ptr<CoreDisplay::IOPTransaction>*, std::__1::shared_ptr<CoreDisplay::IOPTransaction>*, std::__1::shared_ptr<CoreDisplay::IOPTransaction>*>(std::__1::shared_ptr<CoreDisplay::IOPTransaction>*, std::__1::shared_ptr<CoreDisplay::IOPTransaction>*, std::__1::shared_ptr<CoreDisplay::IOPTransaction>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182431b4c (    0x88) CoreDisplay::IOPAttachment::~IOPAttachment() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182431bd4 (   0x6c0) CoreDisplay::IOPAttachment::CreateTransaction() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182432294 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<std::__1::shared_ptr<CoreDisplay::IOPTransaction>*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<std::__1::shared_ptr<CoreDisplay::IOPTransaction>*>>(std::__1::allocator<std::__1::shared_ptr<CoreDisplay::IOPTransaction>*>&, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824322cc (     0x4) std::__1::__shared_ptr_emplace<CoreDisplay::IOPTransaction, std::__1::allocator<CoreDisplay::IOPTransaction>>::__on_zero_shared_weak() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824322d0 (    0xa0) std::__1::__shared_ptr_emplace<CoreDisplay::IOPTransaction, std::__1::allocator<CoreDisplay::IOPTransaction>>::__on_zero_shared() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182432370 (    0x44) std::__1::__shared_ptr_emplace<CoreDisplay::IOPTransaction, std::__1::allocator<CoreDisplay::IOPTransaction>>::~__shared_ptr_emplace() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824323b4 (    0x20) std::__1::__shared_ptr_emplace<CoreDisplay::IOPTransaction, std::__1::allocator<CoreDisplay::IOPTransaction>>::~__shared_ptr_emplace() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824323d4 (   0x2f0) CoreDisplay::IOPAttachment::RemoveTransactionFromList(std::__1::shared_ptr<CoreDisplay::IOPTransaction> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824326c4 (   0x23c) CoreDisplay::IOPAttachment::GetTransactionsForIOSurface(__IOSurface*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182432900 (    0x68) std::__1::vector<std::__1::shared_ptr<CoreDisplay::IOPTransaction>, std::__1::allocator<std::__1::shared_ptr<CoreDisplay::IOPTransaction>>>::~vector[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182432968 (    0x54) std::__1::vector<std::__1::shared_ptr<CoreDisplay::IOPTransaction>, std::__1::allocator<std::__1::shared_ptr<CoreDisplay::IOPTransaction>>>::__destroy_vector::operator()[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824329bc (    0x54) std::__1::vector<std::__1::shared_ptr<CoreDisplay::IOPTransaction>, std::__1::allocator<std::__1::shared_ptr<CoreDisplay::IOPTransaction>>>::__clear[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182432a10 (    0x18) std::__1::vector<std::__1::shared_ptr<CoreDisplay::IOPTransaction>, std::__1::allocator<std::__1::shared_ptr<CoreDisplay::IOPTransaction>>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182432a28 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<std::__1::shared_ptr<CoreDisplay::IOPTransaction>>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<std::__1::shared_ptr<CoreDisplay::IOPTransaction>>>(std::__1::allocator<std::__1::shared_ptr<CoreDisplay::IOPTransaction>>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182432a60 (    0x78) std::__1::vector<std::__1::shared_ptr<CoreDisplay::IOPTransaction>, std::__1::allocator<std::__1::shared_ptr<CoreDisplay::IOPTransaction>>>::__swap_out_circular_buffer(std::__1::__split_buffer<std::__1::shared_ptr<CoreDisplay::IOPTransaction>, std::__1::allocator<std::__1::shared_ptr<CoreDisplay::IOPTransaction>>&>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182432ad8 (    0x34) std::__1::__split_buffer<std::__1::shared_ptr<CoreDisplay::IOPTransaction>, std::__1::allocator<std::__1::shared_ptr<CoreDisplay::IOPTransaction>>&>::~__split_buffer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182432b0c (    0x54) std::__1::__split_buffer<std::__1::shared_ptr<CoreDisplay::IOPTransaction>, std::__1::allocator<std::__1::shared_ptr<CoreDisplay::IOPTransaction>>&>::clear[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182432b60 (    0xc4) std::__1::reverse_iterator<std::__1::shared_ptr<CoreDisplay::IOPTransaction>*> std::__1::__uninitialized_allocator_move_if_noexcept[abi:v160006]<std::__1::allocator<std::__1::shared_ptr<CoreDisplay::IOPTransaction>>, std::__1::reverse_iterator<std::__1::shared_ptr<CoreDisplay::IOPTransaction>*>, std::__1::reverse_iterator<std::__1::shared_ptr<CoreDisplay::IOPTransaction>*>, std::__1::reverse_iterator<std::__1::shared_ptr<CoreDisplay::IOPTransaction>*>>(std::__1::allocator<std::__1::shared_ptr<CoreDisplay::IOPTransaction>>&, std::__1::reverse_iterator<std::__1::shared_ptr<CoreDisplay::IOPTransaction>*>, std::__1::reverse_iterator<std::__1::shared_ptr<CoreDisplay::IOPTransaction>*>, std::__1::reverse_iterator<std::__1::shared_ptr<CoreDisplay::IOPTransaction>*>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182432c24 (    0x38) std::__1::__exception_guard_exceptions<std::__1::_AllocatorDestroyRangeReverse<std::__1::allocator<std::__1::shared_ptr<CoreDisplay::IOPTransaction>>, std::__1::reverse_iterator<std::__1::shared_ptr<CoreDisplay::IOPTransaction>*>>>::~__exception_guard_exceptions[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182432c5c (    0x44) std::__1::_AllocatorDestroyRangeReverse<std::__1::allocator<std::__1::shared_ptr<CoreDisplay::IOPTransaction>>, std::__1::reverse_iterator<std::__1::shared_ptr<CoreDisplay::IOPTransaction>*>>::operator()[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182432ca0 (   0x2c8) CoreDisplay::IOPAttachment::WaitUntilAllTransactionsActive() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182432f68 (   0x188) std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char>>::basic_ostringstream[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824330f0 (   0x214) CGXStartSubsidiaryServices [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182433304 (    0x2c) (null) [FUNC, FunctionStarts] 
                0x0000000182433330 (   0x26c) run_dmproxy(char const*, CGXCredentials) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018243359c (    0x7c) invocation function for block in use_colorsync_display_sevices() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182433618 (     0xc) CoreDisplay::Display::BoundingBox() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182433624 (     0x8) CoreDisplay::Display::GetMetalDevice() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018243362c (     0x8) CoreDisplay::Display::GetCGXDisplayDevice() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182433634 (    0x48) CoreDisplay::Display::GetCGLSContext() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018243367c (    0x70) CoreDisplay::Display::GetAccelerator() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824336ec (    0x28) CoreDisplay::Display::~Display() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182433714 (   0x160) CoreDisplay::Display::~Display() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182433874 (   0x21c) CoreDisplay::Display::SetThermalCompensationAttributes(float, float, float) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182433a90 (    0x4c) std::__1::__tree<std::__1::__value_type<CoreDisplay::ColorMatrixType, simd_double3x3>, std::__1::__map_value_compare<CoreDisplay::ColorMatrixType, std::__1::__value_type<CoreDisplay::ColorMatrixType, simd_double3x3>, std::__1::less<CoreDisplay::ColorMatrixType>, true>, std::__1::allocator<std::__1::__value_type<CoreDisplay::ColorMatrixType, simd_double3x3>>>::destroy(std::__1::__tree_node<std::__1::__value_type<CoreDisplay::ColorMatrixType, simd_double3x3>, void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182433adc (    0x4c) std::__1::__hash_table<std::__1::__hash_value_type<CoreDisplay::SensorLocation, float>, std::__1::__unordered_map_hasher<CoreDisplay::SensorLocation, std::__1::__hash_value_type<CoreDisplay::SensorLocation, float>, std::__1::hash<CoreDisplay::SensorLocation>, std::__1::equal_to<CoreDisplay::SensorLocation>, true>, std::__1::__unordered_map_equal<CoreDisplay::SensorLocation, std::__1::__hash_value_type<CoreDisplay::SensorLocation, float>, std::__1::equal_to<CoreDisplay::SensorLocation>, std::__1::hash<CoreDisplay::SensorLocation>, true>, std::__1::allocator<std::__1::__hash_value_type<CoreDisplay::SensorLocation, float>>>::~__hash_table() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182433b28 (    0x50) std::__1::unique_ptr<CoreDisplay::EDRDisplay, std::__1::default_delete<CoreDisplay::EDRDisplay>>::reset[abi:v160006](CoreDisplay::EDRDisplay*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182433b78 (    0x5c) std::__1::default_delete<CoreDisplay::DisplaySurfacePool>::operator()[abi:v160006](CoreDisplay::DisplaySurfacePool*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182433bd4 (    0x68) std::__1::vector<std::__1::shared_ptr<CoreDisplay::DisplaySurface>, std::__1::allocator<std::__1::shared_ptr<CoreDisplay::DisplaySurface>>>::~vector[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182433c3c (    0x54) std::__1::vector<std::__1::shared_ptr<CoreDisplay::DisplaySurface>, std::__1::allocator<std::__1::shared_ptr<CoreDisplay::DisplaySurface>>>::__destroy_vector::operator()[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182433c90 (    0x54) std::__1::vector<std::__1::shared_ptr<CoreDisplay::DisplaySurface>, std::__1::allocator<std::__1::shared_ptr<CoreDisplay::DisplaySurface>>>::__clear[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182433ce4 (     0x8) CoreDisplay::WrapperCDSetDeviceTransfer(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182433cec (     0x4) CoreDisplay::Display::~Display() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182433cf0 (    0x88) std::__1::unordered_map<CGXDisplayDevice const*, std::__1::unique_ptr<CoreDisplay::Display, std::__1::default_delete<CoreDisplay::Display>>, std::__1::hash<CGXDisplayDevice const*>, std::__1::equal_to<CGXDisplayDevice const*>, std::__1::allocator<std::__1::pair<CGXDisplayDevice const* const, std::__1::unique_ptr<CoreDisplay::Display, std::__1::default_delete<CoreDisplay::Display>>>>>::~unordered_map[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182433d78 (    0x28) CoreDisplay_GetDisplayForCGXDisplayDevice [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182433da0 (   0x170) CoreDisplay::GetDisplayForCGXDisplayDevice(CGXDisplayDevice const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182433f10 (    0xf4) std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<CGXDisplayDevice const*, std::__1::unique_ptr<CoreDisplay::Display, std::__1::default_delete<CoreDisplay::Display>>>, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<CGXDisplayDevice const*, std::__1::unique_ptr<CoreDisplay::Display, std::__1::default_delete<CoreDisplay::Display>>>, std::__1::__unordered_map_hasher<CGXDisplayDevice const*, std::__1::__hash_value_type<CGXDisplayDevice const*, std::__1::unique_ptr<CoreDisplay::Display, std::__1::default_delete<CoreDisplay::Display>>>, std::__1::hash<CGXDisplayDevice const*>, std::__1::equal_to<CGXDisplayDevice const*>, true>, std::__1::__unordered_map_equal<CGXDisplayDevice const*, std::__1::__hash_value_type<CGXDisplayDevice const*, std::__1::unique_ptr<CoreDisplay::Display, std::__1::default_delete<CoreDisplay::Display>>>, std::__1::equal_to<CGXDisplayDevice const*>, std::__1::hash<CGXDisplayDevice ...
                0x0000000182434004 (    0x4c) CoreDisplay_PresentScreenRefresh [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182434050 (   0x1f8) CoreDisplay::Display::PresentScreenRefresh(PresentSyncType) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182434248 (   0x19c) CoreDisplay::Display::GetActiveDisplayPipes() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824343e4 (   0x184) CoreDisplay::Display::Commit(std::__1::vector<std::__1::unique_ptr<CoreDisplay::DisplayPipe::Transaction, std::__1::default_delete<CoreDisplay::DisplayPipe::Transaction>>, std::__1::allocator<std::__1::unique_ptr<CoreDisplay::DisplayPipe::Transaction, std::__1::default_delete<CoreDisplay::DisplayPipe::Transaction>>>>&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182434568 (    0x18) std::__1::vector<std::__1::unique_ptr<CoreDisplay::DisplayPipe::Transaction, std::__1::default_delete<CoreDisplay::DisplayPipe::Transaction>>, std::__1::allocator<std::__1::unique_ptr<CoreDisplay::DisplayPipe::Transaction, std::__1::default_delete<CoreDisplay::DisplayPipe::Transaction>>>>::__throw_length_error[abi:v160006]() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182434580 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<std::__1::unique_ptr<CoreDisplay::DisplayPipe::Transaction, std::__1::default_delete<CoreDisplay::DisplayPipe::Transaction>>>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<std::__1::unique_ptr<CoreDisplay::DisplayPipe::Transaction, std::__1::default_delete<CoreDisplay::DisplayPipe::Transaction>>>>(std::__1::allocator<std::__1::unique_ptr<CoreDisplay::DisplayPipe::Transaction, std::__1::default_delete<CoreDisplay::DisplayPipe::Transaction>>>&, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824345b8 (    0x5c) std::__1::vector<std::__1::unique_ptr<CoreDisplay::DisplayPipe::Transaction, std::__1::default_delete<CoreDisplay::DisplayPipe::Transaction>>, std::__1::allocator<std::__1::unique_ptr<CoreDisplay::DisplayPipe::Transaction, std::__1::default_delete<CoreDisplay::DisplayPipe::Transaction>>>>::__swap_out_circular_buffer(std::__1::__split_buffer<std::__1::unique_ptr<CoreDisplay::DisplayPipe::Transaction, std::__1::default_delete<CoreDisplay::DisplayPipe::Transaction>>, std::__1::allocator<std::__1::unique_ptr<CoreDisplay::DisplayPipe::Transaction, std::__1::default_delete<CoreDisplay::DisplayPipe::Transaction>>>&>&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182434614 (    0x5c) std::__1::__split_buffer<std::__1::unique_ptr<CoreDisplay::DisplayPipe::Transaction, std::__1::default_delete<CoreDisplay::DisplayPipe::Transaction>>, std::__1::allocator<std::__1::unique_ptr<CoreDisplay::DisplayPipe::Transaction, std::__1::default_delete<CoreDisplay::DisplayPipe::Transaction>>>&>::~__split_buffer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182434670 (    0xa8) std::__1::default_delete<CoreDisplay::DisplayPipe::Transaction>::operator()[abi:v160006](CoreDisplay::DisplayPipe::Transaction*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182434718 (    0x78) std::__1::vector<std::__1::unique_ptr<CoreDisplay::DisplayPipe::Transaction, std::__1::default_delete<CoreDisplay::DisplayPipe::Transaction>>, std::__1::allocator<std::__1::unique_ptr<CoreDisplay::DisplayPipe::Transaction, std::__1::default_delete<CoreDisplay::DisplayPipe::Transaction>>>>::~vector[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182434790 (   0x6ec) CoreDisplay::Display::SetEDRScaleFactor(double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182434e7c (   0x150) std::__1::future<std::__1::invoke_result<std::__1::decay<void (*&)(void*)>::type, std::__1::decay<CGXDisplayDevice*&>::type>::type> WSMainThreadDispatchAfter<void (*&)(void*), CGXDisplayDevice*&>(double, void (*&)(void*), CGXDisplayDevice*&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182434fcc (    0x88) std::__1::packaged_task<void (CGXDisplayDevice*)>::packaged_task[abi:v160006](std::__1::packaged_task<void (CGXDisplayDevice*)>&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182435054 (    0xa8) std::__1::__packaged_task_function<void (CGXDisplayDevice*)>::~__packaged_task_function() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824350fc (    0x54) std::__1::unique_ptr<std::__1::pair<std::__1::packaged_task<void (CGXDisplayDevice*)>, std::__1::tuple<CGXDisplayDevice*>>, std::__1::default_delete<std::__1::pair<std::__1::packaged_task<void (CGXDisplayDevice*)>, std::__1::tuple<CGXDisplayDevice*>>>>::reset[abi:v160006](std::__1::pair<std::__1::packaged_task<void (CGXDisplayDevice*)>, std::__1::tuple<CGXDisplayDevice*>>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182435150 (    0x78) std::__1::future<std::__1::invoke_result<std::__1::decay<void (*&)(void*)>::type, std::__1::decay<CGXDisplayDevice*&>::type>::type> WSMainThreadDispatchAfter<void (*&)(void*), CGXDisplayDevice*&>(double, void (*&)(void*), CGXDisplayDevice*&)::'lambda'(void*, double)::__invoke(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824351c8 (   0x114) std::__1::packaged_task<void (CGXDisplayDevice*)>::operator()(CGXDisplayDevice*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824352dc (     0xc) std::__1::__packaged_task_func<void (*)(void*), std::__1::allocator<void (*)(void*)>, void (CGXDisplayDevice*)>::operator()(CGXDisplayDevice*&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824352e8 (     0x4) std::__1::__packaged_task_func<void (*)(void*), std::__1::allocator<void (*)(void*)>, void (CGXDisplayDevice*)>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824352ec (     0x4) std::__1::__packaged_task_func<void (*)(void*), std::__1::allocator<void (*)(void*)>, void (CGXDisplayDevice*)>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824352f0 (    0x24) std::__1::__packaged_task_func<void (*)(void*), std::__1::allocator<void (*)(void*)>, void (CGXDisplayDevice*)>::__move_to(std::__1::__packaged_task_base<void (CGXDisplayDevice*)>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182435314 (     0x4) std::__1::__packaged_task_func<void (*)(void*), std::__1::allocator<void (*)(void*)>, void (CGXDisplayDevice*)>::~__packaged_task_func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182435318 (     0x4) std::__1::__packaged_task_func<void (*)(void*), std::__1::allocator<void (*)(void*)>, void (CGXDisplayDevice*)>::~__packaged_task_func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018243531c (    0xa8) CoreDisplay::Display::GetBrightnessAttenuationFactor() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824353c4 (     0x8) invocation function for block in CoreDisplay::Display::SetEDRScaleFactor(double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824353cc (   0x2f8) CoreDisplay::Display::SetEDRMetaDataAttributes(bool, float, bool, float, bool, float, bool, float) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824356c4 (    0x4c) CoreDisplay::Display::GetIOBacklight() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182435710 (    0x58) std::__1::shared_lock<std::__1::shared_timed_mutex>::try_lock() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182435768 (   0x124) invocation function for block in CoreDisplay::Display::SetBacklightBrightness(double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018243588c (    0xb0) invocation function for block in CoreDisplay::Display::SetBacklightBrightness(double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018243593c (   0x634) CoreDisplay::Display::GetMasterDisplayPipe() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182435f70 (   0x2e4) CoreDisplay::Display::PostHDRNotification() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182436254 (   0x1c0) CoreDisplay::Display::CurrentHeadroom(CoreDisplay::HeadroomQueryQualifier) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182436414 (    0x58) CoreDisplay::Display::PotentialHeadroom() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018243646c (    0x60) CoreDisplay::Display::ReferenceHeadroom(CoreDisplay::HeadroomQueryQualifier) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824364cc (    0x74) CoreDisplay::Display::NominalPixelNits() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182436540 (    0x40) CoreDisplay_IsForce2084 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182436580 (    0xc0) invocation function for block in CoreDisplay::GetRealtimeDisplayInfoMemory() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182436640 (    0x50) CoreDisplay_PresentScreenRefreshWithTimestamp [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182436690 (   0x208) CoreDisplay::Display::PresentScreenRefreshWithTimestamp(unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182436898 (    0x1c) CoreDisplay_Display_GetMTLDeviceSPI [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824368b4 (    0x18) CoreDisplay_Display_GetMTLCommandQueue [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824368cc (    0x88) CoreDisplay_Display_GetAcceleratorRegistryID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182436954 (    0x84) CoreDisplay::Display::AcceleratorRegistryID() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824369d8 (    0xac) CoreDisplay_Display_GetCurrentGraphicsContentProtectionStatus [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182436a84 (    0x88) CoreDisplay_Display_GetCurrentSurface [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182436b0c (   0x280) CoreDisplay::Display::GetCurrentSurface() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182436d8c (     0x8) CoreDisplay_Display_GetNextSurface [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182436d94 (   0x17c) CoreDisplay_Display_GetNextSurfaceWithProtection [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182436f10 (   0x5e4) CoreDisplay::Display::GetNextSurface(CGSRegionObject*, CGSRegionObject*, CGSRegionObject*, double, double, unsigned int, unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824374f4 (    0xd0) CoreDisplay::Display::GetActualSurfaceFormat(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824375c4 (    0xcc) CoreDisplay::DisplaySurface::Cache::Insert(std::__1::shared_ptr<CoreDisplay::DisplaySurface>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182437690 (    0xd4) std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<CoreDisplay::DisplaySurface*, std::__1::weak_ptr<CoreDisplay::DisplaySurface>>, std::__1::__tree_node<std::__1::__value_type<CoreDisplay::DisplaySurface*, std::__1::weak_ptr<CoreDisplay::DisplaySurface>>, void*>*, long>, bool> std::__1::__tree<std::__1::__value_type<CoreDisplay::DisplaySurface*, std::__1::weak_ptr<CoreDisplay::DisplaySurface>>, std::__1::__map_value_compare<CoreDisplay::DisplaySurface*, std::__1::__value_type<CoreDisplay::DisplaySurface*, std::__1::weak_ptr<CoreDisplay::DisplaySurface>>, std::__1::less<CoreDisplay::DisplaySurface*>, true>, std::__1::allocator<std::__1::__value_type<CoreDisplay::DisplaySurface*, std::__1::weak_ptr<CoreDisplay::DisplaySurface>>>>::__emplace_unique_key_args<CoreDisplay::DisplaySurface*, std::__1::pair<CoreDisplay::DisplaySurface*, std::__1::shared_ptr<CoreDisplay::DisplaySurface>>>(CoreDisplay::DisplaySurface* const&, std::__...
                0x0000000182437764 (    0x58) std::__1::__tree<std::__1::__value_type<CoreDisplay::DisplaySurface*, std::__1::weak_ptr<CoreDisplay::DisplaySurface>>, std::__1::__map_value_compare<CoreDisplay::DisplaySurface*, std::__1::__value_type<CoreDisplay::DisplaySurface*, std::__1::weak_ptr<CoreDisplay::DisplaySurface>>, std::__1::less<CoreDisplay::DisplaySurface*>, true>, std::__1::allocator<std::__1::__value_type<CoreDisplay::DisplaySurface*, std::__1::weak_ptr<CoreDisplay::DisplaySurface>>>>::__insert_node_at(std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*, std::__1::__tree_node_base<void*>*&, std::__1::__tree_node_base<void*>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824377bc (     0x4) std::__1::__shared_ptr_emplace<CoreDisplay::DisplaySurface, std::__1::allocator<CoreDisplay::DisplaySurface>>::__on_zero_shared_weak() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824377c0 (     0x8) std::__1::__shared_ptr_emplace<CoreDisplay::DisplaySurface, std::__1::allocator<CoreDisplay::DisplaySurface>>::__on_zero_shared() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824377c8 (    0x44) std::__1::__shared_ptr_emplace<CoreDisplay::DisplaySurface, std::__1::allocator<CoreDisplay::DisplaySurface>>::~__shared_ptr_emplace() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018243780c (    0x20) std::__1::__shared_ptr_emplace<CoreDisplay::DisplaySurface, std::__1::allocator<CoreDisplay::DisplaySurface>>::~__shared_ptr_emplace() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018243782c (    0x54) CoreDisplay::Display::IsHeadroomRequested() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182437880 (    0x54) CoreDisplay::Display::IsEDREnabled() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824378d4 (     0x8) CoreDisplay_Display_GetNextSurfaceWithFormat [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824378dc (    0x90) CoreDisplay_Display_GetNextSurfaceWithFormatAndProtection [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018243796c (    0x14) CoreDisplay_Display_GetActualSurfaceFormatForRequestedSurfaceFormat [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182437980 (     0xc) CoreDisplay_Display_GetCompositingColorSpace [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018243798c (     0xc) CoreDisplay_Display_IsEDREnabled [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182437998 (   0x1f8) CoreDisplay_Display_SetCompositingColorSpace [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182437b90 (    0xa4) CoreDisplay::getsRGB() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182437c34 (    0x44) CFTypePtr<CGColorSpace*>::operator=(CFTypePtr<CGColorSpace*>&&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182437c78 (    0xb8) std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<CoreDisplay::ColorMatrixType, simd_double3x3>, std::__1::__tree_node<std::__1::__value_type<CoreDisplay::ColorMatrixType, simd_double3x3>, void*>*, long>, bool> std::__1::__tree<std::__1::__value_type<CoreDisplay::ColorMatrixType, simd_double3x3>, std::__1::__map_value_compare<CoreDisplay::ColorMatrixType, std::__1::__value_type<CoreDisplay::ColorMatrixType, simd_double3x3>, std::__1::less<CoreDisplay::ColorMatrixType>, true>, std::__1::allocator<std::__1::__value_type<CoreDisplay::ColorMatrixType, simd_double3x3>>>::__emplace_unique_key_args<CoreDisplay::ColorMatrixType, std::__1::piecewise_construct_t const&, std::__1::tuple<CoreDisplay::ColorMatrixType&&>, std::__1::tuple<>>(CoreDisplay::ColorMatrixType const&, std::__1::piecewise_construct_t const&, std::__1::tuple<CoreDisplay::ColorMatrixType&&>&&, std::__1::tuple<>&&) [FUNC, NameNList, MangledNameNList, Merged, NList...
                0x0000000182437d30 (    0x58) std::__1::__tree<std::__1::__value_type<CoreDisplay::ColorMatrixType, simd_double3x3>, std::__1::__map_value_compare<CoreDisplay::ColorMatrixType, std::__1::__value_type<CoreDisplay::ColorMatrixType, simd_double3x3>, std::__1::less<CoreDisplay::ColorMatrixType>, true>, std::__1::allocator<std::__1::__value_type<CoreDisplay::ColorMatrixType, simd_double3x3>>>::__insert_node_at(std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*, std::__1::__tree_node_base<void*>*&, std::__1::__tree_node_base<void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182437d88 (     0x4) CFTypePtr<CGColorSpace*>::~CFTypePtr() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182437d8c (   0x1c0) CoreDisplay_SetAccessibilityMatrix [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182437f4c (    0x80) std::__1::vector<unsigned int, std::__1::allocator<unsigned int>>::vector(unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182437fcc (    0x70) gsl::span<unsigned int, -1l>::span<std::__1::vector<unsigned int, std::__1::allocator<unsigned int>>, void>(std::__1::vector<unsigned int, std::__1::allocator<unsigned int>>&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018243803c (     0x4) gsl::narrowing_error::~narrowing_error() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182438040 (    0x28) gsl::narrowing_error::~narrowing_error() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182438068 (   0x200) CoreDisplay_SetAccessibilityMatrix_Server [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182438268 (   0x444) CoreDisplay::Display::SetMatrix(simd_double3x3 const&, CoreDisplay::ColorMatrixType) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824386ac (   0x5e0) CoreDisplay::Display::UpdateCSC(std::__1::unique_ptr<CoreDisplay::DisplayPipe::Transaction, std::__1::default_delete<CoreDisplay::DisplayPipe::Transaction>>&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182438c8c (    0x68) invocation function for block in CoreDisplay::Display::SetMatrix(simd_double3x3 const&, CoreDisplay::ColorMatrixType) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182438cf4 (   0x384) void std::__1::__tree_remove[abi:v160006]<std::__1::__tree_node_base<void*>*>(std::__1::__tree_node_base<void*>*, std::__1::__tree_node_base<void*>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182439078 (     0xc) CoreDisplay_Display_IsReady [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182439084 (   0x150) CoreDisplay::Display::IsReady() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824391d4 (    0xdc) CoreDisplay_Create_Display_Triage [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824392b0 (   0xfe8) CoreDisplay::Display::TransactionStateString() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018243a298 (    0x50) (null) [FUNC, FunctionStarts] 
                0x000000018243a2e8 (    0x3c) invocation function for block in CoreDisplay::Display::TransactionStateString() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018243a324 (   0x118) CoreDisplay_Display_IsTripleBuffered [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018243a43c (    0x10) CoreDisplay_Display_PresentScreenRefresh [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018243a44c (     0xc) CoreDisplay_Display_PresentScreenRefreshWithTimestamp [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018243a458 (    0x14) CoreDisplay_Display_PresentDisplaySurface [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018243a46c (   0x1d8) CoreDisplay::Display::Present(CoreDisplay::DisplaySurface*, PresentSyncType, unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018243a644 (    0xd4) CoreDisplay::DisplaySurface::Cache::Get(CoreDisplay::DisplaySurface*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018243a718 (   0x4bc) CoreDisplay::Display::Present(std::__1::shared_ptr<CoreDisplay::DisplaySurface>, CGRect, CGRect, PresentSyncType, bool, PresentOptionsType, unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018243abd4 (   0x2c8) CoreDisplay::Display::UpdateWSAAState() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018243ae9c (   0x210) CoreDisplay::Display::WaitUntilPresentIsActive() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018243b0ac (    0xc4) std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<CoreDisplay::DisplaySurface*, std::__1::weak_ptr<CoreDisplay::DisplaySurface>>, std::__1::__tree_node<std::__1::__value_type<CoreDisplay::DisplaySurface*, std::__1::weak_ptr<CoreDisplay::DisplaySurface>>, void*>*, long>, bool> std::__1::__tree<std::__1::__value_type<CoreDisplay::DisplaySurface*, std::__1::weak_ptr<CoreDisplay::DisplaySurface>>, std::__1::__map_value_compare<CoreDisplay::DisplaySurface*, std::__1::__value_type<CoreDisplay::DisplaySurface*, std::__1::weak_ptr<CoreDisplay::DisplaySurface>>, std::__1::less<CoreDisplay::DisplaySurface*>, true>, std::__1::allocator<std::__1::__value_type<CoreDisplay::DisplaySurface*, std::__1::weak_ptr<CoreDisplay::DisplaySurface>>>>::__emplace_unique_key_args<CoreDisplay::DisplaySurface*, std::__1::piecewise_construct_t const&, std::__1::tuple<CoreDisplay::DisplaySurface* const&>, std::__1::tuple<>>(CoreDisplay::DisplaySurface*...
                0x000000018243b170 (    0x10) CoreDisplay_Display_PresentDisplaySurfaceWithTimestamp [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018243b180 (   0x1f8) CoreDisplay_Display_PresentDisplaySurfaceWithTimestampAndVRRParams [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018243b378 (   0x600) CoreDisplay::Display::Present(std::__1::shared_ptr<CoreDisplay::DisplaySurface>, CGRect, CGRect, PresentSyncType, bool, PresentOptionsType, unsigned long long, unsigned long long, unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018243b978 (    0x78) CoreDisplay::Display::GetCurrentModeAndDepth() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018243b9f0 (     0xc) CoreDisplay_Display_PresentIOSurface [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018243b9fc (   0x220) CoreDisplay::Display::Present(__IOSurface*, PresentSyncType) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018243bc1c (    0xb4) std::__1::shared_ptr<CoreDisplay::DisplaySurface> std::__1::allocate_shared[abi:v160006]<CoreDisplay::DisplaySurface, std::__1::allocator<CoreDisplay::DisplaySurface>, __IOSurface*, CoreDisplay::Display*, bool, bool, void>(std::__1::allocator<CoreDisplay::DisplaySurface> const&, __IOSurface*&&, CoreDisplay::Display*&&, bool&&, bool&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018243bcd0 (    0x64) CoreDisplay::GenerateFullscreenRectFromRect(CGRect, double, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018243bd34 (    0x10) CoreDisplay_Display_PresentIOSurfaceWithSrcAndDstRect [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018243bd44 (   0x228) CoreDisplay::Display::Present(__IOSurface*, CGRect, CGRect, PresentSyncType, PresentOptionsType, unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018243bf6c (    0x10) CoreDisplay_Display_PresentIOSurfaceWithSrcAndDstRectAndWithOptions [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018243bf7c (    0x10) CoreDisplay_Display_PresentIOSurfaceWithSrcAndDstRectWithOptionsAndTimestamp [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018243bf8c (   0x244) CoreDisplay_Display_PresentIOSurfaceWithSrcAndDstRectWithOptionsTimestampAndVRRParams [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018243c1d0 (     0xc) CoreDisplay_SystemStateSeed [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018243c1dc (   0x400) CoreDisplay_Display_PresentIOAccelSurfaceWithIOAccelSurfaceInfoAndBufferIndex [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018243c5dc (    0x34) CoreDisplay_Display_GetCapabilities [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018243c610 (    0x64) CoreDisplay_Display_GetHeadroom [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018243c674 (    0x9c) CoreDisplay::Display::IsHDR10() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018243c710 (    0x8c) CoreDisplay_Display_RequestHeadroom [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018243c79c (    0x80) CoreDisplay_Display_GetDisplayBrightnessInNits [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018243c81c (   0x150) CoreDisplay_Display_GetAmbientBrightnessInNits [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018243c96c (     0xc) CoreDisplay_Display_IsHDR10 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018243c978 (    0x60) CoreDisplay_Display_SetAccessibility [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018243c9d8 (    0x48) CoreDisplay_Display_IsAccessibility [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018243ca20 (    0x9c) CoreDisplay_Display_RegisterForIsReadyCallback [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018243cabc (    0x70) CoreDisplay_Display_RegisterForTransactionCompletionCallback [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018243cb2c (    0x70) CoreDisplay_Display_RegisterForTransactionPerformCallback [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018243cb9c (    0x70) CoreDisplay_Display_RegisterForVRRTimestampsCallback [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018243cc0c (    0x4c) CoreDisplay_Display_CopyAndResetDisplayArrangementData [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018243cc58 (   0x428) CoreDisplay_IsIOSurfaceReadyForUse [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018243d080 (   0xb60) CoreDisplay_CreateDisplayForCGXDisplayDevice [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018243dbe0 (    0x6c) std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<CGXDisplayDevice const*, std::__1::unique_ptr<CoreDisplay::Display, std::__1::default_delete<CoreDisplay::Display>>>, void*>>>::operator()[abi:v160006](std::__1::__hash_node<std::__1::__hash_value_type<CGXDisplayDevice const*, std::__1::unique_ptr<CoreDisplay::Display, std::__1::default_delete<CoreDisplay::Display>>>, void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018243dc4c (   0x5e0) CoreDisplay::Display::InitializeBrightnessControl() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018243e22c (   0x190) CoreDisplay::Display::UpdateLinearBrightnessRange() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018243e3bc (   0x198) CoreDisplay_GetWhitePointMode [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018243e554 (   0x1c0) CoreDisplay_SetWhitePoint [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018243e714 (    0x60) __CoreDisplay_SetWhitePoint_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018243e774 (    0xdc) WaitForWindowServerPort() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018243e850 (   0x3a0) CoreDisplay_SetWhitePointWithDuration [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018243ebf0 (   0x3ec) CoreDisplay_SetWhitePointWithDuration_Server [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018243efdc (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000018243efec (    0x78) __CoreDisplay_SetWhitePointWithDuration_Server_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018243f064 (     0x4) CoreDisplay_GetNominalWhitepoint [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018243f068 (     0x4) CoreDisplay_GetCurrentWhitepoint [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018243f06c (   0x1b0) CoreDisplay_GetCurrentWhitePoint [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018243f21c (   0x1a8) CoreDisplay_DisableCustomWhitePoint [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018243f3c4 (   0x10c) CoreDisplay_DisableCustomWhitePoint_Server [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018243f4d0 (    0x3c) __CoreDisplay_DisableCustomWhitePoint_Server_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018243f50c (   0x1a0) CoreDisplay_IsCustomWhitePointSet [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018243f6ac (    0x60) CoreDisplay_IsCustomWhitePointSet_Server [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018243f70c (   0x214) CoreDisplay_Display_IsCustomWhitePointSet [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018243f920 (    0x48) CoreDisplay_Display_IsCustomWhitePointSet_Server [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018243f968 (   0x2d8) CoreDisplay_Display_SetDynamicSliderFactor [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018243fc40 (   0x1fc) CoreDisplay_Display_SetDynamicSliderFactor_Server [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018243fe3c (   0x3e8) CoreDisplay::Display::GetUserBrightness() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182440224 (   0x340) CoreDisplay::Display::RefreshUserBrightness(double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182440564 (    0xb4) CoreDisplay::Display::SetLinearBrightness(double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182440618 (   0x3b8) CoreDisplay::Display::SetLinearBacklightBrightness(double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824409d0 (    0x7c) std::__1::future<std::__1::invoke_result<std::__1::decay<void (*&)()>::type>::type> WSMainThreadDispatchAfter<void (*&)()>(double, void (*&)())::'lambda'(void*, double)::__invoke(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182440a4c (    0x7c) std::__1::future<std::__1::invoke_result<std::__1::decay<CoreDisplay::Display::SetLinearBacklightBrightness(double)::$_3>::type>::type> WSMainThreadDispatchAfter<CoreDisplay::Display::SetLinearBacklightBrightness(double)::$_3>(double, CoreDisplay::Display::SetLinearBacklightBrightness(double)::$_3&&)::'lambda'(void*, double)::__invoke(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182440ac8 (    0x24) std::__1::__packaged_task_func<CoreDisplay::Display::SetLinearBacklightBrightness(double)::$_3, std::__1::allocator<CoreDisplay::Display::SetLinearBacklightBrightness(double)::$_3>, void ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182440aec (     0x4) std::__1::__packaged_task_func<CoreDisplay::Display::SetLinearBacklightBrightness(double)::$_3, std::__1::allocator<CoreDisplay::Display::SetLinearBacklightBrightness(double)::$_3>, void ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182440af0 (     0x4) std::__1::__packaged_task_func<CoreDisplay::Display::SetLinearBacklightBrightness(double)::$_3, std::__1::allocator<CoreDisplay::Display::SetLinearBacklightBrightness(double)::$_3>, void ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182440af4 (    0x28) std::__1::__packaged_task_func<CoreDisplay::Display::SetLinearBacklightBrightness(double)::$_3, std::__1::allocator<CoreDisplay::Display::SetLinearBacklightBrightness(double)::$_3>, void ()>::__move_to(std::__1::__packaged_task_base<void ()>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182440b1c (     0x4) std::__1::__packaged_task_func<CoreDisplay::Display::SetLinearBacklightBrightness(double)::$_3, std::__1::allocator<CoreDisplay::Display::SetLinearBacklightBrightness(double)::$_3>, void ()>::~__packaged_task_func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182440b20 (     0x4) std::__1::__packaged_task_func<CoreDisplay::Display::SetLinearBacklightBrightness(double)::$_3, std::__1::allocator<CoreDisplay::Display::SetLinearBacklightBrightness(double)::$_3>, void ()>::~__packaged_task_func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182440b24 (   0x228) CoreDisplay_Display_GetDynamicSliderParameters [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182440d4c (    0xc4) CoreDisplay_Display_GetDynamicSliderParameters_Server [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182440e10 (   0x2d4) CoreDisplay_Display_SetDynamicLinearBrightness [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824410e4 (   0x29c) CoreDisplay_Display_SetDynamicLinearBrightness_Server [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182441380 (   0x214) CoreDisplay_Display_GetDynamicLinearBrightness [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182441594 (   0x18c) CoreDisplay_Display_GetDynamicLinearBrightness_Server [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182441720 (   0x2d4) CoreDisplay_Display_SetLinearBrightness [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824419f4 (    0x90) CoreDisplay_Display_SetLinearBrightness_Server [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182441a84 (   0x2d4) CoreDisplay_Display_SetUserBrightness [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182441d58 (    0xc4) CoreDisplay_Display_SetUserBrightness_Server [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182441e1c (   0x214) CoreDisplay_Display_GetLinearBrightness [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182442030 (    0x8c) CoreDisplay_Display_GetLinearBrightness_Server [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824420bc (   0x214) CoreDisplay_Display_GetUserBrightness [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824422d0 (    0x90) CoreDisplay_Display_GetUserBrightness_Server [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182442360 (   0x2e4) CoreDisplay_Display_SetAutoBrightnessIsEnabled [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182442644 (    0xe8) CoreDisplay_Display_SetAutoBrightnessIsEnabled_Server [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244272c (   0x2dc) CoreDisplay_SetAttenuationAdjustmentTable [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182442a08 (    0x98) CoreDisplay_SetAttenuationAdjustmentTable_Server [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182442aa0 (    0x14) CoreDisplay_RegisterForIsIOSurfaceReadyForUse [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182442ab4 (    0x14) CoreDisplay_UnregisterForIsIOSurfaceReadyForUse [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182442ac8 (   0x240) CoreDisplay_Display_GetThermalCompensation [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182442d08 (   0x1ac) CoreDisplay_Display_GetThermalCompensation_Server [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182442eb4 (   0x40c) CoreDisplay_Display_SetThermalCompensation [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824432c0 (   0x278) CoreDisplay_Display_SetThermalCompensation_Server [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182443538 (   0x224) CoreDisplay_Display_GetRefreshTiming [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244375c (    0x78) CoreDisplay_Display_GetRefreshTiming_Server [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824437d4 (   0x20c) CoreDisplay_GetServiceIDForDisplayID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824439e0 (    0x98) CoreDisplay_GetServiceIDForDisplayID_Server [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182443a78 (   0x1dc) CoreDisplay_GetDisplayIDList [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182443c54 (   0x188) CoreDisplay_GetDisplayIDList_Server() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182443ddc (    0x18) std::__1::vector<CDDisplayIDPair, std::__1::allocator<CDDisplayIDPair>>::__throw_length_error[abi:v160006]() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182443df4 (   0x210) CoreDisplay_Display_IsBuiltIn [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182444004 (    0x48) CoreDisplay_Display_IsBuiltIn_Server [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244404c (   0x210) CoreDisplay_Display_IsMain [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244425c (    0x48) CoreDisplay_Display_IsMain_Server [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824442a4 (   0x20c) CoreDisplay_Display_ProductNumber [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824444b0 (    0x40) CoreDisplay_Display_ProductNumber_Server [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824444f0 (   0x20c) CoreDisplay_Display_SerialNumber [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824446fc (    0x40) CoreDisplay_Display_SerialNumber_Server [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244473c (   0x20c) CoreDisplay_Display_VendorNumber [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182444948 (    0x40) CoreDisplay_Display_VendorNumber_Server [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182444988 (   0x168) CoreDisplay_Display_CopyDisplayContainerID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182444af0 (    0xd0) SkyLightLibraryCore(char**) (.1016) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182444bc0 (   0x11c) getSLSCopyDisplayInfoDictionarySymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182444cdc (    0x5c) SLSCopyDisplayInfoDictionaryFunc(int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182444d38 (    0x50) invocation function for block in getSLSCopyDisplayInfoDictionarySymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182444d88 (    0x88) SkyLightLibrary() (.1020) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182444e10 (    0x74) invocation function for block in SkyLightLibraryCore(char**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182444e84 (    0xf4) CoreDisplay_Display_CopyContainerID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182444f78 (    0xa8) CoreDisplay_Display_CopyDisplayContainerID_Server [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182445020 (   0x31c) CoreDisplay_Display_CopyDisplayInfo [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244533c (    0x98) CoreDisplay_Display_CopyDisplayInfo_Server [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824453d4 (    0x58) CoreDisplay_DisplayCreateInfoDictionary [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244542c (    0x80) CoreDisplay_DisplayCreateInfoDictionary_Server [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824454ac (   0x27c) CoreDisplay_CopyDisplayUUID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182445728 (    0xe0) CoreDisplay_CopyRealtimeDisplayInfoShmem [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182445808 (   0x11c) getSLSDisplayGetCurrentHeadroomSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182445924 (   0x11c) getSLSGetRealtimeDisplayInfoShmemSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182445a40 (    0x50) invocation function for block in getSLSGetRealtimeDisplayInfoShmemSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182445a90 (    0x50) invocation function for block in getSLSDisplayGetCurrentHeadroomSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182445ae0 (   0x11c) getSLSDisplayGetReferenceHeadroomSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182445bfc (    0x50) invocation function for block in getSLSDisplayGetReferenceHeadroomSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182445c4c (    0x54) CoreDisplay_Display_GetReferenceHeadroom_Server [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182445ca0 (   0x11c) getSLSDisplayGetPotentialHeadroomSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182445dbc (    0x50) invocation function for block in getSLSDisplayGetPotentialHeadroomSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182445e0c (    0x50) CoreDisplay_Display_GetPotentialHeadroom_Server [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182445e5c (   0x218) CoreDisplay_Display_ContrastRatio [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182446074 (    0x64) CoreDisplay_Display_ContrastRatio_Server [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824460d8 (    0x60) CoreDisplay_DisplayPtr_ContrastRatio [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182446138 (    0x18) CoreDisplay_DisplayPtr_SetCursorPosition [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182446150 (   0x218) CoreDisplay_Display_GetNominalPixelNits [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182446368 (    0x44) CoreDisplay_Display_GetNominalPixelNits_Server [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824463ac (   0x470) CoreDisplay_Display_CopyMasteringInfo [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244681c (    0xb4) CoreDisplay_Display_CopyMasteringInfo_Server [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824468d0 (   0x784) CoreDisplay::Display::GetMasteringInfo() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182447054 (   0x18c) std::__1::map<unsigned short, int, std::__1::less<unsigned short>, std::__1::allocator<std::__1::pair<unsigned short const, int>>>::map[abi:v160006](std::initializer_list<std::__1::pair<unsigned short const, int>>, std::__1::less<unsigned short> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824471e0 (    0x78) std::__1::vector<int, std::__1::allocator<int>>::vector(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182447258 (    0x44) std::__1::vector<int, std::__1::allocator<int>>::__vallocate[abi:v160006](unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244729c (    0x18) std::__1::vector<int, std::__1::allocator<int>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824472b4 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<int>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<int>>(std::__1::allocator<int>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824472ec (    0x2c) std::__1::map<unsigned short, int, std::__1::less<unsigned short>, std::__1::allocator<std::__1::pair<unsigned short const, int>>>::~map[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182447318 (    0x4c) std::__1::__tree<std::__1::__value_type<unsigned short, int>, std::__1::__map_value_compare<unsigned short, std::__1::__value_type<unsigned short, int>, std::__1::less<unsigned short>, true>, std::__1::allocator<std::__1::__value_type<unsigned short, int>>>::destroy(std::__1::__tree_node<std::__1::__value_type<unsigned short, int>, void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182447364 (    0x84) CoreDisplay_Display_IsThermallyLimited [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824473e8 (   0x11c) getSLSDisplayIsThermallyLimitedSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182447504 (    0x50) invocation function for block in getSLSDisplayIsThermallyLimitedSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182447554 (    0x48) CoreDisplay_Display_IsThermallyLimited_Server [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244759c (   0x4ec) CoreDisplay_Display_ForceColorOutput [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182447a88 (   0x1cc) CoreDisplay_Display_ForceColorOutput_Server [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182447c54 (   0x2ac) CoreDisplay_Display_GetShinyData [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182447f00 (   0x178) CoreDisplay_Display_GetShinyData_Server [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182448078 (   0xe04) CoreDisplay_Display_SetShinyData [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182448e7c (   0x204) CoreDisplay_Display_SetShinyData_Server [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182449080 (   0xf2c) CoreDisplay::Display::PropertyChanged() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182449fac (    0x20) (null) [FUNC, FunctionStarts] 
                0x0000000182449fcc (   0x18c) std::__1::map<float, float, std::__1::less<float>, std::__1::allocator<std::__1::pair<float const, float>>>::map[abi:v160006](std::initializer_list<std::__1::pair<float const, float>>, std::__1::less<float> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244a158 (    0x2c) std::__1::map<float, float, std::__1::less<float>, std::__1::allocator<std::__1::pair<float const, float>>>::~map[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244a184 (    0x4c) std::__1::__tree<std::__1::__value_type<float, float>, std::__1::__map_value_compare<float, std::__1::__value_type<float, float>, std::__1::less<float>, true>, std::__1::allocator<std::__1::__value_type<float, float>>>::destroy(std::__1::__tree_node<std::__1::__value_type<float, float>, void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244a1d0 (    0x84) CoreDisplay_Display_SupportsHDRMode [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244a254 (   0x11c) getSLSDisplaySupportsHDRModeSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244a370 (    0x50) invocation function for block in getSLSDisplaySupportsHDRModeSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244a3c0 (    0x40) CoreDisplay_Display_SupportsHDRMode_Server [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244a400 (   0x1dc) CoreDisplay::Display::SupportsHDRMode() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244a5dc (    0x84) CoreDisplay_Display_IsHDRModeEnabled [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244a660 (   0x11c) getSLSDisplayIsHDRModeEnabledSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244a77c (    0x50) invocation function for block in getSLSDisplayIsHDRModeEnabledSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244a7cc (    0x48) CoreDisplay_Display_IsHDRModeEnabled_Server [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244a814 (    0x88) CoreDisplay_Display_SetHDRModeEnabled [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244a89c (   0x11c) getSLSDisplaySetHDRModeEnabledSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244a9b8 (    0x50) invocation function for block in getSLSDisplaySetHDRModeEnabledSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244aa08 (   0x2c0) CoreDisplay_Display_SetHDRModeEnabled_Server [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244acc8 (     0xc) CoreDisplay::saveConfigurationTimerFunc(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244acd4 (    0x84) CoreDisplay_Display_PreferHDR10 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244ad58 (   0x11c) getSLSDisplayGetPreferHDR10SymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244ae74 (    0x50) invocation function for block in getSLSDisplayGetPreferHDR10SymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244aec4 (    0x40) CoreDisplay_Display_PreferHDR10_Server [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244af04 (    0xac) CoreDisplay_Display_IsActivePresetReference [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244afb0 (    0x38) std::__1::optional<bool> CoreDisplay::CFDictionaryGetValue<bool>(__CFDictionary const*, __CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244afe8 (    0x68) std::__1::optional<float> CoreDisplay::CFDictionaryGetValue<float>(__CFDictionary const*, __CFString const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244b050 (    0x1c) CoreDisplay_DisplayPtr_SetLuminanceLimit [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244b06c (  0x1888) CoreDisplay_NotReady [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244c8f4 (    0x18) std::__1::vector<std::__1::reference_wrapper<CoreDisplay::Display>, std::__1::allocator<std::__1::reference_wrapper<CoreDisplay::Display>>>::__throw_length_error[abi:v160006]() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244c90c (    0x78) std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>::__swap_out_circular_buffer(std::__1::__split_buffer<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>&>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244c984 (    0x38) std::__1::__split_buffer<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>&>::~__split_buffer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244c9bc (    0x58) std::__1::__split_buffer<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>&>::__destruct_at_end[abi:v160006](std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244ca14 (    0xcc) std::__1::reverse_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*> std::__1::__uninitialized_allocator_move_if_noexcept[abi:v160006]<std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::reverse_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*>, std::__1::reverse_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*>, std::__1::reverse_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*>>(std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>&, std::__1::reverse_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*>, std::__1::reverse_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1:...
                0x000000018244cae0 (    0x38) std::__1::__exception_guard_exceptions<std::__1::_AllocatorDestroyRangeReverse<std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::reverse_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*>>>::~__exception_guard_exceptions[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244cb18 (    0x48) std::__1::_AllocatorDestroyRangeReverse<std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::reverse_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*>>::operator()[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244cb60 (     0x4) std::__1::bad_function_call::~bad_function_call() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244cb64 (    0x28) std::__1::bad_function_call::~bad_function_call() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244cb8c (    0xa4) CoreDisplay::Display::SetVBLInfo(unsigned long long, unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244cc30 (   0x2bc) CoreDisplay::Display::SetColorSpace(CGColorSpace*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244ceec (   0x2dc) CoreDisplay::Display::SetEOTF(gsl::span<unsigned short, -1l>, gsl::span<unsigned short, -1l>, gsl::span<unsigned short, -1l>, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244d1c8 (   0x10c) CoreDisplay::Display::SetSystemGamma(double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244d2d4 (   0x358) CoreDisplay::Display::AcceleratorChanged() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244d62c (    0x5c) CoreDisplay::Display::ModeChanged() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244d688 (   0xb74) CoreDisplay::Display::UpdateActiveDisplayPreset() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244e1fc (   0x1b0) CoreDisplay::Display::PlatformPrefersHDRPreset() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244e3ac (    0x34) CFTypePtr<__CFString*>::~CFTypePtr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244e3e0 (   0x178) invocation function for block in CoreDisplay::Display::UpdateActiveDisplayPreset() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244e558 (    0x78) invocation function for block in CoreDisplay::UpdateSystemGammaStateInAMBD(unsigned int, bool, bool, float) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244e5d0 (    0xd4) CoreDisplay::UpdateDisplayMode(CGXDisplayDevice*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244e6a4 (   0x158) std::__1::future<std::__1::invoke_result<std::__1::decay<void (&)(CGXDisplayDevice*)>::type, std::__1::decay<CGXDisplayDevice*&>::type>::type> WSMainThreadDispatchAfter<void (&)(CGXDisplayDevice*), CGXDisplayDevice*&>(double, void (&)(CGXDisplayDevice*), CGXDisplayDevice*&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244e7fc (    0x78) std::__1::future<std::__1::invoke_result<std::__1::decay<void (&)(CGXDisplayDevice*)>::type, std::__1::decay<CGXDisplayDevice*&>::type>::type> WSMainThreadDispatchAfter<void (&)(CGXDisplayDevice*), CGXDisplayDevice*&>(double, void (&)(CGXDisplayDevice*), CGXDisplayDevice*&)::'lambda'(void*, double)::__invoke(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244e874 (     0xc) std::__1::__packaged_task_func<void (*)(CGXDisplayDevice*), std::__1::allocator<void (*)(CGXDisplayDevice*)>, void (CGXDisplayDevice*)>::operator()(CGXDisplayDevice*&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244e880 (     0x4) std::__1::__packaged_task_func<void (*)(CGXDisplayDevice*), std::__1::allocator<void (*)(CGXDisplayDevice*)>, void (CGXDisplayDevice*)>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244e884 (     0x4) std::__1::__packaged_task_func<void (*)(CGXDisplayDevice*), std::__1::allocator<void (*)(CGXDisplayDevice*)>, void (CGXDisplayDevice*)>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244e888 (    0x24) std::__1::__packaged_task_func<void (*)(CGXDisplayDevice*), std::__1::allocator<void (*)(CGXDisplayDevice*)>, void (CGXDisplayDevice*)>::__move_to(std::__1::__packaged_task_base<void (CGXDisplayDevice*)>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244e8ac (     0x4) std::__1::__packaged_task_func<void (*)(CGXDisplayDevice*), std::__1::allocator<void (*)(CGXDisplayDevice*)>, void (CGXDisplayDevice*)>::~__packaged_task_func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244e8b0 (     0x4) std::__1::__packaged_task_func<void (*)(CGXDisplayDevice*), std::__1::allocator<void (*)(CGXDisplayDevice*)>, void (CGXDisplayDevice*)>::~__packaged_task_func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244e8b4 (   0x3f0) CoreDisplay::Display::SetAmbientLux(CoreDisplay::SensorLocation, float) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244eca4 (    0x64) invocation function for block in CoreDisplay::Display::OutputTransferCurveMapValue(float) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244ed08 (    0x70) CoreDisplay::GetCurrentTimeInMilliseconds() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244ed78 (     0xc) invocation function for block in CoreDisplay::GetTimebaseInfo() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244ed84 (   0x13c) std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>::__append(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244eec0 (    0xa4) CGSEncoder::encode(CGSize const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244ef64 (    0xbc) CGSEncoder::encode(CGRect const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244f020 (    0x10) WSAGDCSetDebugOptions [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244f030 (    0x48) WS::AGDCService::~AGDCService() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244f078 (    0x88) WS::AGDCService::reset_cached_capabilities() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244f100 (    0x4c) std::__1::__tree<std::__1::__value_type<unsigned int, AGDCFBGetDisplayCapability_t*>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, AGDCFBGetDisplayCapability_t*>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, AGDCFBGetDisplayCapability_t*>>>::destroy(std::__1::__tree_node<std::__1::__value_type<unsigned int, AGDCFBGetDisplayCapability_t*>, void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244f14c (   0x29c) WSAGDCSetDisplayPolicyEnabled [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244f3e8 (    0xf8) convertColorPoint [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244f4e0 (   0x2fc) SL2CDVirtualDisplayCreate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244f7dc (    0x68) SL2CDVirtualDisplayOptions [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244f844 (     0x4) SL2CDVirtualDisplaySetOptions [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244f848 (     0x4) SL2CDVirtualDisplayDestroy [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244f84c (    0x5c) getUintFromNum [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244f8a8 (    0x6c) getSizeFromDict [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244f914 (   0x1b0) convertMode [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244fac4 (   0x36c) SL2CDVirtualDisplayApplyWithDictionary [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244fe30 (    0x78) CGXDefaultDisplaysGrowRight [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018244fea8 (   0x20c) update_config(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824500b4 (   0x1ac) switchMonitorConfigTo8bpc(CGXMonitor**, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182450260 (    0xcc) display_configuration_update_needed(CGXMonitor**, int, __CFArray const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018245032c (   0x130) restoreUnmirroredBounds(CGXMonitor**, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018245045c (   0x244) setup_and_reconfigure_displays(CGXMonitor**, int, bool, char const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824506a0 (  0x1340) autoAdjustDisplayModes(CGXMonitor**, int, CGXMonitor*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824519e0 (  0x1a84) reconfigureDisplays(CGXReconfigurationOptions*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182453464 (   0x31c) reconfigureDisplayHWOnline(CGXReconfigureDisplayHWOnline*, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182453780 (    0xd8) default_mirroring_attributes() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182453858 (   0x174) forceMirroring(CGXMonitor**, int, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824539cc (    0x7c) find_first_tv_or_projector_device() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182453a48 (   0x13c) selectively_copy_monitor(CGXMonitor*, CGXMonitor const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182453b84 (   0x1fc) SetupForMirror(CGXMonitor**, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182453d80 (   0x1e4) checkForModeFixups(CGXMonitor**, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182453f64 (    0x5c) markNewMainDisplay(CGXDisplayDevice*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182453fc0 (    0xec) CGXSaveDisplayConfiguration [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824540ac (    0x84) CGXScheduleSaveDisplayConfiguration [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182454130 (    0x3c) saveDisplayConfigurationCallback(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018245416c (   0x120) moveMainToDeviceListHead(CGXDisplayDevice*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018245428c (   0x104) runDisplayDiscovery(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182454390 (    0x50) set_monitor_ioDisplayLocation(CGXMonitor*, __CFString const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824543e0 (   0x160) unmirrorOneMonitor(CGXMonitor**, CGXMonitor*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182454540 (    0xb4) set_monitor_info_from_mode(CGXMonitor*, CGDisplayMode*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824545f4 (    0x98) reconfigureDisplayHWOffline(unsigned int, void*, unsigned int, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018245468c (   0x2f0) CGXMonitorArraysDiffer [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018245497c (    0x4c) displayPrefsNotifyProc [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824549c8 (   0xcb4) CGXRestoreDisplayConfiguration [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018245567c (   0x124) checkForFixups(unsigned int*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824557a0 (   0x64c) createDefaultConfig(unsigned int*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182455dec (    0xa8) findDefaultMainDevice() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182455e94 (    0x78) default_main_on_builtin_display() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182455f0c (     0x4) reconfigureDisplaysTimedCallback(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182455f10 (    0x1c) restoreDisplays(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182455f2c (    0x9c) displayPrefsApplyProc [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182455fc8 (    0x8c) CGXRestoreDisplayColorPreferences [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182456054 (   0x8ec) CGXPerformInitialDisplayConfiguration [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182456940 (   0x1ac) adjustMonitorPlacement(CGXMonitor*, int, int, int, int, CGXMonitor**, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182456aec (    0xa8) unmirrorMonitor(CGXMonitor**, CGXMonitor*, CGXMonitor**, int, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182456b94 (   0x11c) CGXRestoreDisplayGamma [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182456cb0 (     0x8) restoreNewDeviceSetDelayed [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182456cb8 (   0x490) restoreNewDeviceSet [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182457148 (   0x928) CGXDeviceStateChanged [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182457a70 (    0x90) post_deferred_reconfig_notice_if_needed() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182457b00 (     0xc) WSDisplayGetAcceleratorForcingSWCursor [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182457b0c (   0x2b4) CoreDisplay::CreateDictFromIOSurface(__IOSurface*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182457dc0 (    0xa4) CoreDisplay::SetInt32Value(__CFDictionary*, __CFString const*, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182457e64 (    0xc4) CoreDisplay::SetInt64HexString(__CFDictionary*, __CFString const*, long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182457f28 (    0xc4) CoreDisplay::SetInt32HexString(__CFDictionary*, __CFString const*, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182457fec (    0x7c) CoreDisplay::CreateDictFromSize(CGSize) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182458068 (    0xb4) CoreDisplay::CreateDictFromRect(CGRect) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018245811c (   0x1c4) CoreDisplay::CreateDictFromShape(CoreDisplay::Shape) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824582e0 (   0x81c) CoreDisplay::CreateMPPrivDict(MPPriv const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182458afc (    0xa4) CoreDisplay::SetStringValue(__CFDictionary*, __CFString const*, char const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182458ba0 (    0xc4) CoreDisplay::SetIntHexString(__CFDictionary*, __CFString const*, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182458c64 (    0xa4) CoreDisplay::SetInt64Value(__CFDictionary*, __CFString const*, long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182458d08 (    0xa4) CoreDisplay::SetFloatValue(__CFDictionary*, __CFString const*, float) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182458dac (  0x1610) CoreDisplay::CreateDisplayDeviceDict(CGXDisplayDevice*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018245a3bc (    0xb4) CoreDisplay::CreateDictFromFloatRect(CGFloatRect) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018245a470 (   0x180) CoreDisplay::CreateDictFromRegion(CGSRegionObject*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018245a5f0 (  0x6bc8) CoreDisplay::CreateCoreDisplayStateDictWithOptions(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824611b8 (    0x24) (null) [FUNC, FunctionStarts] 
                0x00000001824611dc (    0x24) (null) [FUNC, FunctionStarts] 
                0x0000000182461200 (    0x24) (null) [FUNC, FunctionStarts] 
                0x0000000182461224 (    0xb0) CoreDisplay::SetFloatValue(__CFDictionary*, __CFString const*, std::__1::optional<float>, float) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824612d4 (    0xc8) CoreDisplay::SetUInt16HexString(__CFDictionary*, __CFString const*, unsigned short) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246139c (   0x204) CoreDisplay::CreateDisplayModeDict(_CGSDisplayModeDescription) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824615a0 (   0x148) CoreDisplay::CreateCurrentIODisplayModeDict(CGXDisplayDevice*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824616e8 (   0x958) CoreDisplay::CreateIODisplayModeDict(CGXDisplayDevice*, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182462040 (    0x24) (null) [FUNC, FunctionStarts] 
                0x0000000182462064 (    0x24) (null) [FUNC, FunctionStarts] 
                0x0000000182462088 (    0x24) (null) [FUNC, FunctionStarts] 
                0x00000001824620ac (    0x24) (null) [FUNC, FunctionStarts] 
                0x00000001824620d0 (   0x280) CoreDisplay::CreateIOPixelDict(int, int, IOPixelInformation) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182462350 (    0xdc) CoreDisplay::CreateStringFromData(__CFData const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246242c (    0x34) CFTypePtr<__CFArray const*>::~CFTypePtr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182462460 (   0x258) CoreDisplay::SaveCoreDisplayState(char const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824626b8 (   0x14c) CoreDisplay::LogCoreDisplayStateWithOptions(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182462804 (     0xc) CoreDisplay::LogCoreDisplayState() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182462810 (    0x9c) CoreDisplay::CreateDictFromIOGBounds(IOGBounds) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824628ac (    0x2c) std::__1::map<CoreDisplay::DisplaySurface*, std::__1::weak_ptr<CoreDisplay::DisplaySurface>, std::__1::less<CoreDisplay::DisplaySurface*>, std::__1::allocator<std::__1::pair<CoreDisplay::DisplaySurface* const, std::__1::weak_ptr<CoreDisplay::DisplaySurface>>>>::~map[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824628d8 (    0x58) std::__1::__tree<std::__1::__value_type<CoreDisplay::DisplaySurface*, std::__1::weak_ptr<CoreDisplay::DisplaySurface>>, std::__1::__map_value_compare<CoreDisplay::DisplaySurface*, std::__1::__value_type<CoreDisplay::DisplaySurface*, std::__1::weak_ptr<CoreDisplay::DisplaySurface>>, std::__1::less<CoreDisplay::DisplaySurface*>, true>, std::__1::allocator<std::__1::__value_type<CoreDisplay::DisplaySurface*, std::__1::weak_ptr<CoreDisplay::DisplaySurface>>>>::destroy(std::__1::__tree_node<std::__1::__value_type<CoreDisplay::DisplaySurface*, std::__1::weak_ptr<CoreDisplay::DisplaySurface>>, void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182462930 (     0xc) CoreDisplay_DisplaySurface_GetIOSurface [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246293c (     0xc) CoreDisplay_DisplaySurface_GetCGXDisplayDeviceSurface [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182462948 (     0xc) CoreDisplay_DisplaySurface_GetIOAccelSurfaceID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182462954 (   0x150) CoreDisplay_DisplaySurface_GetFBO [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182462aa4 (    0x70) CoreDisplay::DisplaySurface::GetCGLSContext() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182462b14 (   0x254) CoreDisplay::DisplaySurface::GetGLTexture() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182462d68 (    0x20) (null) [FUNC, FunctionStarts] 
                0x0000000182462d88 (     0xc) CoreDisplay_DisplaySurface_GetGLTexture [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182462d94 (    0x10) CoreDisplay_DisplaySurface_GetMTLTexture [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182462da4 (   0x898) CoreDisplay::DisplaySurface::GetMTLTexture(CoreDisplay::MetalDevice*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246363c (    0x40) CoreDisplay_DisplaySurface_PrepareForAccess [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246367c (    0x64) CoreDisplay_DisplaySurface_Free [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824636e0 (  0x1cb8) CoreDisplay::DisplaySurface::AccessComplete() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182465398 (    0x94) CoreDisplay::DisplaySurface::Cache::Remove(CoreDisplay::DisplaySurface*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246542c (    0x68) unsigned long std::__1::__tree<std::__1::__value_type<CoreDisplay::DisplaySurface*, std::__1::weak_ptr<CoreDisplay::DisplaySurface>>, std::__1::__map_value_compare<CoreDisplay::DisplaySurface*, std::__1::__value_type<CoreDisplay::DisplaySurface*, std::__1::weak_ptr<CoreDisplay::DisplaySurface>>, std::__1::less<CoreDisplay::DisplaySurface*>, true>, std::__1::allocator<std::__1::__value_type<CoreDisplay::DisplaySurface*, std::__1::weak_ptr<CoreDisplay::DisplaySurface>>>>::__erase_unique<CoreDisplay::DisplaySurface*>(CoreDisplay::DisplaySurface* const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182465494 (    0x40) std::__1::__tree<std::__1::__value_type<CoreDisplay::DisplaySurface*, std::__1::weak_ptr<CoreDisplay::DisplaySurface>>, std::__1::__map_value_compare<CoreDisplay::DisplaySurface*, std::__1::__value_type<CoreDisplay::DisplaySurface*, std::__1::weak_ptr<CoreDisplay::DisplaySurface>>, std::__1::less<CoreDisplay::DisplaySurface*>, true>, std::__1::allocator<std::__1::__value_type<CoreDisplay::DisplaySurface*, std::__1::weak_ptr<CoreDisplay::DisplaySurface>>>>::erase(std::__1::__tree_const_iterator<std::__1::__value_type<CoreDisplay::DisplaySurface*, std::__1::weak_ptr<CoreDisplay::DisplaySurface>>, std::__1::__tree_node<std::__1::__value_type<CoreDisplay::DisplaySurface*, std::__1::weak_ptr<CoreDisplay::DisplaySurface>>, void*>*, long>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824654d4 (    0x74) std::__1::__tree<std::__1::__value_type<CoreDisplay::DisplaySurface*, std::__1::weak_ptr<CoreDisplay::DisplaySurface>>, std::__1::__map_value_compare<CoreDisplay::DisplaySurface*, std::__1::__value_type<CoreDisplay::DisplaySurface*, std::__1::weak_ptr<CoreDisplay::DisplaySurface>>, std::__1::less<CoreDisplay::DisplaySurface*>, true>, std::__1::allocator<std::__1::__value_type<CoreDisplay::DisplaySurface*, std::__1::weak_ptr<CoreDisplay::DisplaySurface>>>>::__remove_node_pointer(std::__1::__tree_node<std::__1::__value_type<CoreDisplay::DisplaySurface*, std::__1::weak_ptr<CoreDisplay::DisplaySurface>>, void*>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182465548 (    0xdc) CoreDisplay::DisplaySurface::GetSize() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182465624 (    0x18) std::__1::vector<std::__1::pair<CGRect, CGRect>, std::__1::allocator<std::__1::pair<CGRect, CGRect>>>::__throw_length_error[abi:v160006]() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246563c (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<std::__1::pair<CGRect, CGRect>>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<std::__1::pair<CGRect, CGRect>>>(std::__1::allocator<std::__1::pair<CGRect, CGRect>>&, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182465674 (    0x4c) CFTypePtr<CGSRegionObject*>::operator=(CFTypePtr<CGSRegionObject*> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824656c0 (    0x44) CFTypePtr<CGSRegionObject*>::operator=(CFTypePtr<CGSRegionObject*>&&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182465704 (    0x88) CoreDisplay::GetIOAccelSurfaceInformation(IOAccelConnectStruct*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246578c (    0x30) CoreDisplay_DisplaySurface_GetAccelerator [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824657bc (    0x48) CoreDisplay_DisplaySurface_GetMTLDeviceSPI [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182465804 (     0xc) CoreDisplay_DisplaySurface_GetCGLSContext [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182465810 (    0x30) CoreDisplay_DisplaySurface_GetCGXDisplayDevice [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182465840 (    0x4c) CoreDisplay_DisplaySurface_GetContentRect [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246588c (    0x4c) CoreDisplay_DisplaySurface_GetSrcZoomRect [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824658d8 (   0x14c) CoreDisplay_DisplaySurface_GetUpdateRect [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182465a24 (    0x2c) CoreDisplay_DisplaySurface_GetSize [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182465a50 (   0x140) CoreDisplay_DisplaySurface_GetBitsPerSample [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182465b90 (    0x28) CoreDisplay_DisplaySurface_GetUpdateArea [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182465bb8 (    0x2c) CoreDisplay_DisplaySurface_GetUpdateShape [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182465be4 (    0x2c) CoreDisplay_DisplaySurface_GetFlushShape [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182465c10 (    0x2c) CoreDisplay_DisplaySurface_GetCopyShape [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182465c3c (    0x40) CoreDisplay_DisplaySurface_GetCopyPosition [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182465c7c (   0x1a4) CoreDisplay::DisplaySurface::DisplaySurface(__IOSurface*, gsl::not_null<CoreDisplay::AbstractDisplay const*>, bool, bool, unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182465e20 (    0x4c) std::__1::__tree<std::__1::__value_type<CoreDisplay::MetalDevice*, id<MTLTexture>>, std::__1::__map_value_compare<CoreDisplay::MetalDevice*, id<MTLTexture>, std::__1::less<CoreDisplay::MetalDevice*>, true>, std::__1::allocator<id<MTLTexture>>>::destroy(std::__1::__tree_node<id<MTLTexture>, void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182465e6c (   0x16c) CoreDisplay::DisplaySurface::~DisplaySurface() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182465fd8 (    0x44) CFTypePtr<__IOSurface*>::operator=(CFTypePtr<__IOSurface*>&&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246601c (   0x180) CoreDisplay::DisplaySurface::GetPixelFormat() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246619c (    0x2c) (null) [FUNC, FunctionStarts] 
                0x00000001824661c8 (    0x38) std::__1::__exception_guard_exceptions<std::__1::_AllocatorDestroyRangeReverse<std::__1::allocator<std::__1::shared_ptr<CoreDisplay::IOPTransaction>>, std::__1::shared_ptr<CoreDisplay::IOPTransaction>*>>::~__exception_guard_exceptions[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182466200 (    0x4c) std::__1::_AllocatorDestroyRangeReverse<std::__1::allocator<std::__1::shared_ptr<CoreDisplay::IOPTransaction>>, std::__1::shared_ptr<CoreDisplay::IOPTransaction>*>::operator()[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246624c (   0x858) CoreDisplay::DisplaySurface::SetUpdateOperationShapes(CGSRegionObject*, CGSRegionObject*, CGSRegionObject*, double, double, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182466aa4 (    0x68) CoreDisplay::DisplaySurface::GetSrcRect() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182466b0c (   0x81c) CoreDisplay::DisplaySurface::GetColorSpace() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182467328 (    0x80) CoreDisplay::DisplaySurface::AppliedEDRScalingFactor() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824673a8 (   0xa70) CoreDisplay::DisplaySurface::CreateStateDict() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182467e18 (    0xc4) CoreDisplay::DictionarySetPointer(__CFDictionary*, __CFString const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182467edc (    0xa0) CoreDisplay::DisplaySurface::SetNeedsBlackFill(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182467f7c (    0x84) std::__1::vector<CGRect, std::__1::allocator<CGRect>>::vector(std::__1::vector<CGRect, std::__1::allocator<CGRect>> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182468000 (    0x44) std::__1::vector<CGRect, std::__1::allocator<CGRect>>::__vallocate[abi:v160006](unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182468044 (    0x18) std::__1::vector<CGRect, std::__1::allocator<CGRect>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246805c (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<CGRect>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<CGRect>>(std::__1::allocator<CGRect>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182468094 (    0x90) CoreDisplay_GetPresetInfo [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182468124 (    0xd0) SkyLightLibraryCore(char**) (.2180) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824681f4 (   0x11c) getSLSDisplayGetPresetInfoSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182468310 (    0x50) invocation function for block in getSLSDisplayGetPresetInfoSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182468360 (    0x88) SkyLightLibrary() (.2183) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824683e8 (    0x74) invocation function for block in SkyLightLibraryCore(char**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246845c (    0xa8) CoreDisplay_Display_GetPresetCount [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182468504 (   0x11c) getSLSDisplayGetPresetCountSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182468620 (    0x50) invocation function for block in getSLSDisplayGetPresetCountSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182468670 (    0x84) CoreDisplay_Display_GetPresetCount_Server [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824686f4 (    0x44) CoreDisplay::Display::GetPresetCount() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182468738 (    0x94) CoreDisplay::Display::GetPresetDevice() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824687cc (   0x154) invocation function for block in CoreDisplay::GetPresetDeviceManager() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182468920 (    0x10) __Block_byref_object_copy_.2197 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182468930 (     0xc) __Block_byref_object_dispose_.2198 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246893c (    0x70) invocation function for block in getSLDisplayPresetDeviceManagerClass() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824689ac (    0xa8) CoreDisplay_Display_GetFactoryDefaultPresetIndex [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182468a54 (   0x11c) getSLSDisplayGetFactoryDefaultPresetIndexSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182468b70 (    0x50) invocation function for block in getSLSDisplayGetFactoryDefaultPresetIndexSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182468bc0 (    0xb4) CoreDisplay_Display_GetFactoryDefaultPresetIndex_Server [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182468c74 (    0xa8) CoreDisplay_Display_GetActivePresetIndex [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182468d1c (   0x11c) getSLSDisplayGetActivePresetIndexSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182468e38 (    0x50) invocation function for block in getSLSDisplayGetActivePresetIndexSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182468e88 (    0x84) CoreDisplay_Display_GetActivePresetIndex_Server [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182468f0c (    0x50) CoreDisplay::Display::GetActivePresetIndex() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182468f5c (    0xa0) CoreDisplay_Display_SetActivePresetIndex [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182468ffc (   0x11c) getSLSDisplaySetActivePresetIndexSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182469118 (    0x50) invocation function for block in getSLSDisplaySetActivePresetIndexSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182469168 (   0x264) CoreDisplay_Display_SetActivePresetIndex_Server [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824693cc (    0x54) CoreDisplay::Display::SetActivePresetIndex(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182469420 (    0xb0) CoreDisplay_Display_IsPresetValid [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824694d0 (   0x11c) getSLSDisplayIsPresetValidSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824695ec (    0x50) invocation function for block in getSLSDisplayIsPresetValidSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246963c (    0xe0) CoreDisplay_Display_IsPresetValid_Server [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246971c (    0xb0) CoreDisplay_Display_IsPresetWritable [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824697cc (   0x11c) getSLSDisplayIsPresetWritableSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824698e8 (    0x50) invocation function for block in getSLSDisplayIsPresetWritableSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182469938 (    0xe0) CoreDisplay_Display_IsPresetWritable_Server [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182469a18 (    0xb0) CoreDisplay_Display_CopyPresetUniqueID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182469ac8 (   0x11c) getSLSDisplayCopyPresetUniqueIDSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182469be4 (    0x50) invocation function for block in getSLSDisplayCopyPresetUniqueIDSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182469c34 (    0x94) CoreDisplay_Display_CopyPresetUniqueID_Server [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182469cc8 (    0xbc) CoreDisplay::Display::CopyPresetUniqueID(unsigned int) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182469d84 (    0xb0) CoreDisplay_Display_CopyPreset [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182469e34 (   0x11c) getSLSDisplayCopyPresetSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182469f50 (    0x50) invocation function for block in getSLSDisplayCopyPresetSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182469fa0 (    0xb0) CoreDisplay_Display_CopyPreset_Server [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246a050 (    0xc4) CoreDisplay_Display_SetPreset [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246a114 (   0x11c) getSLSDisplaySetPresetSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246a230 (    0x50) invocation function for block in getSLSDisplaySetPresetSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246a280 (    0xec) CoreDisplay_Display_SetPreset_Server [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246a36c (    0xb0) CoreDisplay_Display_CopyPresetData [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246a41c (   0x11c) getSLSDisplayCopyPresetDataSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246a538 (    0x50) invocation function for block in getSLSDisplayCopyPresetDataSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246a588 (    0x94) CoreDisplay_Display_CopyPresetData_Server [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246a61c (    0x54) CoreDisplay::Display::CopyPresetData(unsigned int) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246a670 (    0xc4) CoreDisplay_Display_SetPresetData [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246a734 (   0x11c) getSLSDisplaySetPresetDataSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246a850 (    0x50) invocation function for block in getSLSDisplaySetPresetDataSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246a8a0 (    0xec) CoreDisplay_Display_SetPresetData_Server [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246a98c (    0xb0) CoreDisplay_Display_ResetPreset [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246aa3c (   0x11c) getSLSDisplayResetPresetSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246ab58 (    0x50) invocation function for block in getSLSDisplayResetPresetSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246aba8 (    0xe0) CoreDisplay_Display_ResetPreset_Server [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246ac88 (    0xa8) CoreDisplay_Display_GetLuminanceCorrectionFactor [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246ad30 (   0x11c) getSLSDisplayGetLuminanceCorrectionFactorSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246ae4c (    0x50) invocation function for block in getSLSDisplayGetLuminanceCorrectionFactorSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246ae9c (    0x98) CoreDisplay_Display_GetLuminanceCorrectionFactor_Server [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246af34 (   0x11c) getSLDisplayPresetDeviceClass() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246b050 (    0x70) invocation function for block in getSLDisplayPresetDeviceClass() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246b0c0 (    0xcc) CoreDisplay_Display_GetUserAdjustmentLuminanceCorrectionFactor [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246b18c (   0x11c) getSLSDisplayGetUserAdjustmentLuminanceCorrectionFactorSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246b2a8 (    0x50) invocation function for block in getSLSDisplayGetUserAdjustmentLuminanceCorrectionFactorSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246b2f8 (    0x98) CoreDisplay_Display_GetUserAdjustmentLuminanceCorrectionFactor_Server [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246b390 (    0xac) CoreDisplay_Display_FactoryResetPreset [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246b43c (   0x11c) getSLSDisplayFactoryResetSymbolLoc() (.2266) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246b558 (    0x50) invocation function for block in getSLSDisplayFactoryResetSymbolLoc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246b5a8 (     0x8) CoreDisplay_Display_FactoryResetPreset_Server [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246b5b0 (   0x104) invocation function for block in CoreDisplay::StartPresetDeviceManager() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246b6b4 (    0x4c) invocation function for block in CoreDisplay::StartPresetDeviceManager() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246b700 (    0x88) CoreDisplay::AcceleratorFBCounts() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246b788 (     0x4) std::__1::unordered_map<unsigned int, unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, unsigned int>>>::~unordered_map[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246b78c (    0x4c) std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, unsigned int>>>::~__hash_table() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246b7d8 (   0x22c) std::__1::pair<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void*>*>, bool> std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, unsigned int>>>::__emplace_unique_key_args<unsigned int, std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned int const&>, std::__1::tuple<>>(unsigned int const&, std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned int const&>&&, std::__1::tuple<>&&) [FUNC, NameNList, MangledNameNList, Merged, NL...
                0x000000018246ba04 (    0x5c) std::__1::vector<CoreDisplay::Framebuffer, std::__1::allocator<CoreDisplay::Framebuffer>>::~vector[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246ba60 (    0x34) CFTypePtr<__GPUWranglerGPU*>::~CFTypePtr() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246ba94 (    0x18) std::__1::vector<CoreDisplay::Framebuffer, std::__1::allocator<CoreDisplay::Framebuffer>>::__throw_length_error[abi:v160006]() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246baac (    0x50) std::__1::__split_buffer<CoreDisplay::Framebuffer, std::__1::allocator<CoreDisplay::Framebuffer>&>::~__split_buffer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246bafc (    0xf0) void std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, unsigned int>>>::__rehash<true>(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246bbec (   0x15c) void std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, unsigned int>>>::__do_rehash<true>(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246bd48 (   0x804) CoreDisplay::GPU::GPU(__GPUWranglerGPU*, dispatch_queue_s*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246c54c (    0x64) CoreDisplay::GPU::~GPU() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246c5b0 (    0xcc) CoreDisplay::GPU::ID() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246c67c (    0x34) invocation function for block in CoreDisplay::GPU::ID() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246c6b0 (   0x128) void std::__1::__call_once_proxy[abi:v160006]<std::__1::tuple<CoreDisplay::GPU::UpdateAcceleratorForMetal()::$_0&&>>(void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246c7d8 (   0x1e0) CoreDisplay::GPU::MappedDisplayList() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246c9b8 (    0x18) std::__1::vector<CGXMappedDisplay, std::__1::allocator<CGXMappedDisplay>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246c9d0 (    0x48) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<CGXMappedDisplay>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<CGXMappedDisplay>>(std::__1::allocator<CGXMappedDisplay>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246ca18 (    0xcc) CoreDisplay::GPU::IsIntegrated() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246cae4 (    0x30) invocation function for block in CoreDisplay::GPU::IsIntegrated() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246cb14 (    0xcc) CoreDisplay::GPU::IsRemovable() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246cbe0 (    0x30) invocation function for block in CoreDisplay::GPU::IsRemovable() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246cc10 (    0xdc) CoreDisplay::GPU::IsInUse() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246ccec (    0x50) invocation function for block in CoreDisplay::GPU::IsInUse() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246cd3c (    0x8c) invocation function for block in CoreDisplay::GPU::IsPCI() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246cdc8 (   0x24c) CoreDisplay::GPU::PostAcceleratorChangeNotification() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246d014 (    0xec) std::__1::vector<CGSDisplayMode, std::__1::allocator<CGSDisplayMode>>::vector(std::__1::vector<CGSDisplayMode, std::__1::allocator<CGSDisplayMode>> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246d100 (    0x68) std::__1::vector<CGSDisplayMode, std::__1::allocator<CGSDisplayMode>>::~vector[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246d168 (    0x54) std::__1::vector<CGSDisplayMode, std::__1::allocator<CGSDisplayMode>>::__destroy_vector::operator()[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246d1bc (    0x58) std::__1::vector<CGSDisplayMode, std::__1::allocator<CGSDisplayMode>>::__clear[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246d214 (    0x18) std::__1::vector<CGSDisplayState, std::__1::allocator<CGSDisplayState>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246d22c (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<CGSDisplayState>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<CGSDisplayState>>(std::__1::allocator<CGSDisplayState>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246d264 (    0x54) std::__1::__split_buffer<CGSDisplayState, std::__1::allocator<CGSDisplayState>&>::~__split_buffer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246d2b8 (    0x58) std::__1::vector<CGSDisplayMode, std::__1::allocator<CGSDisplayMode>>::__vallocate[abi:v160006](unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246d310 (   0x104) CGSDisplayMode* std::__1::__uninitialized_allocator_copy[abi:v160006]<std::__1::allocator<CGSDisplayMode>, CGSDisplayMode*, CGSDisplayMode*, CGSDisplayMode*>(std::__1::allocator<CGSDisplayMode>&, CGSDisplayMode*, CGSDisplayMode*, CGSDisplayMode*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246d414 (    0x38) std::__1::__exception_guard_exceptions<std::__1::vector<CGSDisplayMode, std::__1::allocator<CGSDisplayMode>>::__destroy_vector>::~__exception_guard_exceptions[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246d44c (    0x38) std::__1::__exception_guard_exceptions<std::__1::_AllocatorDestroyRangeReverse<std::__1::allocator<CGSDisplayMode>, CGSDisplayMode*>>::~__exception_guard_exceptions[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246d484 (    0x50) std::__1::_AllocatorDestroyRangeReverse<std::__1::allocator<CGSDisplayMode>, CGSDisplayMode*>::operator()[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246d4d4 (    0x18) std::__1::vector<CGSDisplayMode, std::__1::allocator<CGSDisplayMode>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246d4ec (    0x4c) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<CGSDisplayMode>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<CGSDisplayMode>>(std::__1::allocator<CGSDisplayMode>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246d538 (    0x68) std::__1::vector<CGSDisplayState, std::__1::allocator<CGSDisplayState>>::~vector[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246d5a0 (    0x88) std::__1::vector<CGSDisplayState, std::__1::allocator<CGSDisplayState>>::__destroy_vector::operator()[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246d628 (   0x264) CGSDisplaySystemStateGetStatus [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246d88c (    0x74) (null) [FUNC, FunctionStarts] 
                0x000000018246d900 (    0x64) CGSDisplaySystemState::displayByDisplayID(int) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246d964 (    0x40) primary_alias_display_id(CGSDisplaySystemState const*, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246d9a4 (    0x28) CGSDisplaySystemState::mainDisplay() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246d9cc (    0x50) CGSDisplaySystemStateGetCurrentMode [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246da1c (    0xc8) std::__1::pair<CGSDisplayState*, CGSDisplayState*> std::__1::__copy_loop<std::__1::_ClassicAlgPolicy>::operator()[abi:v160006]<CGSDisplayState*, CGSDisplayState*, CGSDisplayState*>(CGSDisplayState*, CGSDisplayState*, CGSDisplayState*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246dae4 (    0xdc) CGSDisplayState* std::__1::__uninitialized_allocator_copy[abi:v160006]<std::__1::allocator<CGSDisplayState>, CGSDisplayState*, CGSDisplayState*, CGSDisplayState*>(std::__1::allocator<CGSDisplayState>&, CGSDisplayState*, CGSDisplayState*, CGSDisplayState*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246dbc0 (   0x1a4) void std::__1::vector<CGSDisplayMode, std::__1::allocator<CGSDisplayMode>>::assign<CGSDisplayMode*, 0>(CGSDisplayMode*, CGSDisplayMode*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246dd64 (    0x8c) std::__1::pair<CGSDisplayMode*, CGSDisplayMode*> std::__1::__unwrap_and_dispatch[abi:v160006]<std::__1::__overload<std::__1::__copy_loop<std::__1::_ClassicAlgPolicy>, std::__1::__copy_trivial>, CGSDisplayMode*, CGSDisplayMode*, CGSDisplayMode*, 0>(CGSDisplayMode*, CGSDisplayMode*, CGSDisplayMode*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246ddf0 (    0x3c) std::__1::vector<CGSDisplayMode, std::__1::allocator<CGSDisplayMode>>::__vdeallocate() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246de2c (   0x114) MPSetCursorPosition [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246df40 (    0x74) MPResetCursor [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246dfb4 (    0xa4) sys_hide_cursor(CGXDisplayDevice*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246e058 (    0xe0) cursor_present(CGXDisplayDevice*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246e138 (    0x70) MPHideCursor [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246e1a8 (    0x70) MPShowCursor [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246e218 (   0x220) sys_show_cursor(CGXDisplayDevice*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246e438 (    0x68) invocation function for block in deferShowingCursor(CGXDisplayDevice*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246e4a0 (   0x1b4) MPForceShowCursor [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246e654 (    0x7c) MPRevealCursor [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246e6d0 (    0x80) MPObscureCursor [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246e750 (   0x880) update_cursor_data(CGXDisplayDevice*, CursorBitmap const*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246efd0 (    0x9c) SRGBToLinearFloat(unsigned char) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246f06c (    0xc8) generateAlphaLUT() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246f134 (    0x34) std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>::~vector[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246f168 (   0x11c) generateSRGBToLinear() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246f284 (    0x34) std::__1::vector<float, std::__1::allocator<float>>::~vector[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246f2b8 (    0x84) std::__1::vector<float, std::__1::allocator<float>>::vector(unsigned long, float const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246f33c (    0x44) std::__1::vector<float, std::__1::allocator<float>>::__vallocate[abi:v160006](unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246f380 (    0xb0) update_cursor_data_callback(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246f430 (   0x128) MPSetCursor [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246f558 (   0x1d8) set_cursor_data(CGXDisplayDevice*, CursorBitmap*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246f730 (    0x60) MPHardwareCursorActive [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246f790 (    0x44) MPMaxCursorSize [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246f7d4 (   0x230) _MPInitializeCursor [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246fa04 (   0x184) _MPActivateCursor [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246fb88 (    0x90) int_for_key(__CFDictionary const*, __CFString const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246fc18 (   0x138) create_filtered_array(__CFArray const*, __CFString const*, filter_comp_type, __CFNumber const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246fd50 (    0x14) (null) [FUNC, FunctionStarts] 
                0x000000018246fd64 (    0x90) compare_resolutions(void const*, void const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018246fdf4 (   0x2c0) compare_modes(void const*, void const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824700b4 (   0x4a4) CGCreateModeDictFromDescription [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182470558 (   0x2dc) CDVirtualDisplaySettingsIsValid [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182470834 (   0x168) ColorSyncUtilsUpdateDisplayProfiles [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018247099c (   0x1e0) __ColorSyncUtilsUpdateDisplayProfiles_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182470b7c (   0xb7c) ColorSyncUtilsUpdateDisplayProfilesCallback(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824716f8 (    0x88) invocation function for block in ColorSyncUtilsUpdateDisplayProfilesCallback(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182471780 (    0x98) get_profile_name(ColorSyncProfile const*, char*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182471818 (    0x34) CFTypePtr<ColorSyncProfile const*>::~CFTypePtr() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018247184c (    0x9c) invocation function for block in get_profile_name(ColorSyncProfile const*, char*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824718e8 (     0x8) null_function() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824718f0 (    0x60) invocation function for block in load_colorsync_dyld() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182471950 (    0x9c) invocation function for block in ColorSyncUtilsUpdateDisplayProfilesCallback(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824719ec (    0x60) invocation function for block in load_ambient_display_dyld() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182471a4c (    0x9c) invocation function for block in ColorSyncUtilsUpdateDisplayProfilesCallback(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182471ae8 (    0x60) invocation function for block in load_skylight_dyld() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182471b48 (    0x9c) invocation function for block in ColorSyncUtilsUpdateDisplayProfilesCallback(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182471be4 (    0x9c) invocation function for block in ColorSyncUtilsUpdateDisplayProfilesCallback(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182471c80 (    0x9c) invocation function for block in ColorSyncUtilsUpdateDisplayProfilesCallback(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182471d1c (    0x9c) invocation function for block in ColorSyncUtilsUpdateDisplayProfilesCallback(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182471db8 (    0x9c) __ColorSyncUtilsUpdateDisplayProfiles_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182471e54 (    0x2c) invocation function for block in subsidiary_services_queue() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182471e80 (    0x70) AmbientDisplayUtilsRunService [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182471ef0 (    0x74) AmbientDisplayUtilsTerminateService [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182471f64 (    0x54) __AmbientDisplayUtilsTerminateService_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182471fb8 (    0x9c) __AmbientDisplayUtilsTerminateService_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182472054 (     0x4) CoreDisplay_UpdateDisplayProfiles [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182472058 (     0x4) CoreDisplay_RunAmbientDisplayService [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018247205c (     0x4) CoreDisplay_TerminateAmbientDisplayService [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182472060 (    0x5c) std::__1::vector<std::__1::pair<CFTypePtr<__IOSurface*>, CGRect>, std::__1::allocator<std::__1::pair<CFTypePtr<__IOSurface*>, CGRect>>>::~vector[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824720bc (    0xf8) std::__1::unique_ptr<CoreDisplay::IOPResource, std::__1::default_delete<CoreDisplay::IOPResource>>::reset[abi:v160006](CoreDisplay::IOPResource*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824721b4 (    0x50) std::__1::__split_buffer<std::__1::pair<CFTypePtr<__IOSurface*>, CGRect>, std::__1::allocator<std::__1::pair<CFTypePtr<__IOSurface*>, CGRect>>&>::~__split_buffer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182472204 (    0xa8) std::__1::vector<sIOPresentmentColorTable, std::__1::allocator<sIOPresentmentColorTable>>::reserve(unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824722ac (    0x18) std::__1::vector<sIOPresentmentColorTable, std::__1::allocator<sIOPresentmentColorTable>>::__throw_length_error[abi:v160006]() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824722c4 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<sIOPresentmentColorTable>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<sIOPresentmentColorTable>>(std::__1::allocator<sIOPresentmentColorTable>&, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824722fc (   0x22c) CoreDisplay::IOPTransaction::SetPipeGamma(std::__1::vector<float, std::__1::allocator<float>> const&, std::__1::vector<float, std::__1::allocator<float>> const&, std::__1::vector<float, std::__1::allocator<float>> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182472528 (  0x1658) CoreDisplay::IOPTransaction::Submit() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182473b80 (    0xbc) std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>::reserve(unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182473c3c (    0x68) CoreDisplay::IOPTransaction::IsActive() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182473ca4 (    0xa0) CoreDisplay::IOPTransaction::WaitUntilActive() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182473d44 (   0x214) std::__1::vector<bool, std::__1::allocator<bool>>::resize(unsigned long, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182473f58 (    0x18) std::__1::vector<bool, std::__1::allocator<bool>>::__throw_length_error[abi:v160006]() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182473f70 (    0x5c) CoreDisplay::IOPTransaction::UnsetLinearizationBypass(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182473fcc (    0xc4) CGXGetCFDictIntValueForKey [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182474090 (     0x8) -[CDVirtualDisplayConnect connect] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182474098 (    0x7c) -[CDVirtualDisplayConnect dealloc] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182474114 (    0xe4) -[CDVirtualDisplayConnect init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824741f8 (     0x8) -[VirtualDisplayProxy displayID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182474200 (    0xb0) -[VirtualDisplayProxy terminateProxy] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824742b0 (   0x67c) -[VirtualDisplayProxy applyProxySettings:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018247492c (    0xa8) std::__1::__packaged_task_function<bool (unsigned int, unsigned int, unsigned int, CGXVirtualDisplaySettings*)>::~__packaged_task_function() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824749d4 (    0x54) std::__1::unique_ptr<std::__1::pair<std::__1::packaged_task<bool (unsigned int, unsigned int, unsigned int, CGXVirtualDisplaySettings*)>, std::__1::tuple<unsigned int, unsigned int, unsigned int, CGXVirtualDisplaySettings*>>, std::__1::default_delete<std::__1::pair<std::__1::packaged_task<bool (unsigned int, unsigned int, unsigned int, CGXVirtualDisplaySettings*)>, std::__1::tuple<unsigned int, unsigned int, unsigned int, CGXVirtualDisplaySettings*>>>>::reset[abi:v160006](std::__1::pair<std::__1::packaged_task<bool (unsigned int, unsigned int, unsigned int, CGXVirtualDisplaySettings*)>, std::__1::tuple<unsigned int, unsigned int, unsigned int, CGXVirtualDisplaySettings*>>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182474a28 (   0x168) std::__1::future<std::__1::invoke_result<std::__1::decay<bool (&)(unsigned int, unsigned int, unsigned int, CGXVirtualDisplaySettings*)>::type, std::__1::decay<unsigned int&>::type, std::__1::decay<unsigned int&>::type, std::__1::decay<unsigned int&>::type, std::__1::decay<CGXVirtualDisplaySettings*>::type>::type> WSMainThreadDispatchAfter<bool (&)(unsigned int, unsigned int, unsigned int, CGXVirtualDisplaySettings*), unsigned int&, unsigned int&, unsigned int&, CGXVirtualDisplaySettings*>(double, bool (&)(unsigned int, unsigned int, unsigned int, CGXVirtualDisplaySettings*), unsigned int&, unsigned int&, unsigned int&, CGXVirtualDisplaySettings*&&)::'lambda'(void*, double)::__invoke(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182474b90 (    0x18) std::__1::__packaged_task_func<bool (*)(unsigned int, unsigned int, unsigned int, CGXVirtualDisplaySettings*), std::__1::allocator<bool (*)(unsigned int, unsigned int, unsigned int, CGXVirtualDisplaySettings*)>, bool (unsigned int, unsigned int, unsigned int, CGXVirtualDisplaySettings*)>::operator()(unsigned int&&, unsigned int&&, unsigned int&&, CGXVirtualDisplaySettings*&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182474ba8 (     0x4) std::__1::__packaged_task_func<bool (*)(unsigned int, unsigned int, unsigned int, CGXVirtualDisplaySettings*), std::__1::allocator<bool (*)(unsigned int, unsigned int, unsigned int, CGXVirtualDisplaySettings*)>, bool (unsigned int, unsigned int, unsigned int, CGXVirtualDisplaySettings*)>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182474bac (     0x4) std::__1::__packaged_task_func<bool (*)(unsigned int, unsigned int, unsigned int, CGXVirtualDisplaySettings*), std::__1::allocator<bool (*)(unsigned int, unsigned int, unsigned int, CGXVirtualDisplaySettings*)>, bool (unsigned int, unsigned int, unsigned int, CGXVirtualDisplaySettings*)>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182474bb0 (    0x24) std::__1::__packaged_task_func<bool (*)(unsigned int, unsigned int, unsigned int, CGXVirtualDisplaySettings*), std::__1::allocator<bool (*)(unsigned int, unsigned int, unsigned int, CGXVirtualDisplaySettings*)>, bool (unsigned int, unsigned int, unsigned int, CGXVirtualDisplaySettings*)>::__move_to(std::__1::__packaged_task_base<bool (unsigned int, unsigned int, unsigned int, CGXVirtualDisplaySettings*)>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182474bd4 (     0x4) std::__1::__packaged_task_func<bool (*)(unsigned int, unsigned int, unsigned int, CGXVirtualDisplaySettings*), std::__1::allocator<bool (*)(unsigned int, unsigned int, unsigned int, CGXVirtualDisplaySettings*)>, bool (unsigned int, unsigned int, unsigned int, CGXVirtualDisplaySettings*)>::~__packaged_task_func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182474bd8 (     0x4) std::__1::__packaged_task_func<bool (*)(unsigned int, unsigned int, unsigned int, CGXVirtualDisplaySettings*), std::__1::allocator<bool (*)(unsigned int, unsigned int, unsigned int, CGXVirtualDisplaySettings*)>, bool (unsigned int, unsigned int, unsigned int, CGXVirtualDisplaySettings*)>::~__packaged_task_func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182474bdc (   0x2c8) -[VirtualDisplayProxy dealloc] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182474ea4 (    0xa8) std::__1::__packaged_task_function<void (unsigned int)>::~__packaged_task_function() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182474f4c (    0x54) std::__1::unique_ptr<std::__1::pair<std::__1::packaged_task<void (unsigned int)>, std::__1::tuple<unsigned int>>, std::__1::default_delete<std::__1::pair<std::__1::packaged_task<void (unsigned int)>, std::__1::tuple<unsigned int>>>>::reset[abi:v160006](std::__1::pair<std::__1::packaged_task<void (unsigned int)>, std::__1::tuple<unsigned int>>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182474fa0 (   0x134) std::__1::future<std::__1::invoke_result<std::__1::decay<void (&)(unsigned int)>::type, std::__1::decay<unsigned int&>::type>::type> WSMainThreadDispatchAfter<void (&)(unsigned int), unsigned int&>(double, void (&)(unsigned int), unsigned int&)::'lambda'(void*, double)::__invoke(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824750d4 (     0xc) std::__1::__packaged_task_func<void (*)(unsigned int), std::__1::allocator<void (*)(unsigned int)>, void (unsigned int)>::operator()(unsigned int&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824750e0 (     0x4) std::__1::__packaged_task_func<void (*)(unsigned int), std::__1::allocator<void (*)(unsigned int)>, void (unsigned int)>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824750e4 (     0x4) std::__1::__packaged_task_func<void (*)(unsigned int), std::__1::allocator<void (*)(unsigned int)>, void (unsigned int)>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824750e8 (    0x24) std::__1::__packaged_task_func<void (*)(unsigned int), std::__1::allocator<void (*)(unsigned int)>, void (unsigned int)>::__move_to(std::__1::__packaged_task_base<void (unsigned int)>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018247510c (     0x4) std::__1::__packaged_task_func<void (*)(unsigned int), std::__1::allocator<void (*)(unsigned int)>, void (unsigned int)>::~__packaged_task_func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182475110 (     0x4) std::__1::__packaged_task_func<void (*)(unsigned int), std::__1::allocator<void (*)(unsigned int)>, void (unsigned int)>::~__packaged_task_func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182475114 (   0x8f8) -[VirtualDisplayProxy initWithListener:options:clientHandler_port:proxyRPC_port:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182475a0c (    0x78) invocation function for block in displayInfoFromOptions(NSDictionary*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182475a84 (   0x104) std::__1::promise<unsigned int>::~promise() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182475b88 (    0xa8) std::__1::__packaged_task_function<unsigned int (unsigned int, unsigned int, unsigned int, CGSize, __CFDictionary const*)>::~__packaged_task_function() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182475c30 (    0x54) std::__1::unique_ptr<std::__1::pair<std::__1::packaged_task<unsigned int (unsigned int, unsigned int, unsigned int, CGSize, __CFDictionary const*)>, std::__1::tuple<unsigned int, unsigned int, unsigned int, CGSize, __CFDictionary const*>>, std::__1::default_delete<std::__1::pair<std::__1::packaged_task<unsigned int (unsigned int, unsigned int, unsigned int, CGSize, __CFDictionary const*)>, std::__1::tuple<unsigned int, unsigned int, unsigned int, CGSize, __CFDictionary const*>>>>::reset[abi:v160006](std::__1::pair<std::__1::packaged_task<unsigned int (unsigned int, unsigned int, unsigned int, CGSize, __CFDictionary const*)>, std::__1::tuple<unsigned int, unsigned int, unsigned int, CGSize, __CFDictionary const*>>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182475c84 (   0x1e4) std::__1::future<std::__1::invoke_result<std::__1::decay<unsigned int (&)(unsigned int, unsigned int, unsigned int, CGSize, __CFDictionary const*)>::type, std::__1::decay<unsigned int&>::type, std::__1::decay<unsigned int&>::type, std::__1::decay<unsigned int&>::type, std::__1::decay<CGSize&>::type, std::__1::decay<__CFDictionary const*>::type>::type> WSMainThreadDispatchAfter<unsigned int (&)(unsigned int, unsigned int, unsigned int, CGSize, __CFDictionary const*), unsigned int&, unsigned int&, unsigned int&, CGSize&, __CFDictionary const*>(double, unsigned int (&)(unsigned int, unsigned int, unsigned int, CGSize, __CFDictionary const*), unsigned int&, unsigned int&, unsigned int&, CGSize&, __CFDictionary const*&&)::'lambda'(void*, double)::__invoke(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182475e68 (    0x90) std::__1::promise<unsigned int>::set_exception(std::exception_ptr) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182475ef8 (    0x24) std::__1::__assoc_state<unsigned int>::__on_zero_shared() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182475f1c (    0x70) std::__1::__assoc_state<unsigned int>::~__assoc_state() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182475f8c (    0x6c) std::__1::__assoc_state<unsigned int>::~__assoc_state() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182475ff8 (    0x1c) std::__1::__packaged_task_func<unsigned int (*)(unsigned int, unsigned int, unsigned int, CGSize, __CFDictionary const*), std::__1::allocator<unsigned int (*)(unsigned int, unsigned int, unsigned int, CGSize, __CFDictionary const*)>, unsigned int (unsigned int, unsigned int, unsigned int, CGSize, __CFDictionary const*)>::operator()(unsigned int&&, unsigned int&&, unsigned int&&, CGSize&&, __CFDictionary const*&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182476014 (     0x4) std::__1::__packaged_task_func<unsigned int (*)(unsigned int, unsigned int, unsigned int, CGSize, __CFDictionary const*), std::__1::allocator<unsigned int (*)(unsigned int, unsigned int, unsigned int, CGSize, __CFDictionary const*)>, unsigned int (unsigned int, unsigned int, unsigned int, CGSize, __CFDictionary const*)>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182476018 (     0x4) std::__1::__packaged_task_func<unsigned int (*)(unsigned int, unsigned int, unsigned int, CGSize, __CFDictionary const*), std::__1::allocator<unsigned int (*)(unsigned int, unsigned int, unsigned int, CGSize, __CFDictionary const*)>, unsigned int (unsigned int, unsigned int, unsigned int, CGSize, __CFDictionary const*)>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018247601c (    0x24) std::__1::__packaged_task_func<unsigned int (*)(unsigned int, unsigned int, unsigned int, CGSize, __CFDictionary const*), std::__1::allocator<unsigned int (*)(unsigned int, unsigned int, unsigned int, CGSize, __CFDictionary const*)>, unsigned int (unsigned int, unsigned int, unsigned int, CGSize, __CFDictionary const*)>::__move_to(std::__1::__packaged_task_base<unsigned int (unsigned int, unsigned int, unsigned int, CGSize, __CFDictionary const*)>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182476040 (     0x4) std::__1::__packaged_task_func<unsigned int (*)(unsigned int, unsigned int, unsigned int, CGSize, __CFDictionary const*), std::__1::allocator<unsigned int (*)(unsigned int, unsigned int, unsigned int, CGSize, __CFDictionary const*)>, unsigned int (unsigned int, unsigned int, unsigned int, CGSize, __CFDictionary const*)>::~__packaged_task_func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182476044 (     0x4) std::__1::__packaged_task_func<unsigned int (*)(unsigned int, unsigned int, unsigned int, CGSize, __CFDictionary const*), std::__1::allocator<unsigned int (*)(unsigned int, unsigned int, unsigned int, CGSize, __CFDictionary const*)>, unsigned int (unsigned int, unsigned int, unsigned int, CGSize, __CFDictionary const*)>::~__packaged_task_func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182476048 (   0x270) invocation function for block in displayInfoFromOptions(NSDictionary*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824762b8 (    0x30) invocation function for block in init_once() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824762e8 (  0x1204) CoreDisplay::IOPReturnToString(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824774ec (    0x28) (null) [FUNC, FunctionStarts] 
                0x0000000182477514 (    0x1c) (null) [FUNC, FunctionStarts] 
                0x0000000182477530 (    0x88) (null) [FUNC, FunctionStarts] 
                0x00000001824775b8 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001824775cc (    0x20) (null) [FUNC, FunctionStarts] 
                0x00000001824775ec (    0x14) (null) [FUNC, FunctionStarts] 
                0x0000000182477600 (    0x4c) _CGXGetSizeOfDisplayTransfer [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018247764c (    0x5c) _CGXEnableAmbientDisplay [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824776a8 (    0x24) _CGXIsAmbientDisplayEnabled [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824776cc (   0x120) _CGXSetDisplayIntention [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824777ec (    0x38) _CGXSetDisplayIntentionWiper [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182477824 (    0xc0) _CGXGetDisplayTransferByTable [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824778e4 (   0x1c0) _CGXSetDisplayTransferByTable [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182477aa4 (    0x64) _CGXGetDisplayTransferByFormula [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182477b08 (   0x1e4) _CGXSetDisplayTransferByFormula [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182477cec (    0x58) _CGXSetDisplayBrightness [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182477d44 (    0x48) _CGXGetDisplayBrightness [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182477d8c (    0x40) _CGXGetDisplayMaximumHDRValue [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182477dcc (    0x74) _CGXEnableHDR [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182477e40 (    0x40) _CGXIsHDREnabled [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182477e80 (    0x2c) _CGXIsHDRSupported [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182477eac (    0x20) _CGXInitializeGamma [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182477ecc (    0x10) _CGXGetDisplaySystemState [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182477edc (  0x245c) _CDS_GetDisplaySystemState [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018247a338 (    0x60) _CGXServiceForDisplayNumber [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018247a398 (    0x74) _CGXAcceleratorForDisplayNumber [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018247a40c (   0xebc) _CGXCompleteDisplayConfiguration [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018247b2c8 (    0x1c) (null) [FUNC, FunctionStarts] 
                0x000000018247b2e4 (   0x218) _CGXDisplayVisualBell [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018247b4fc (    0x94) _CGXSetDisplayOption [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018247b590 (    0x6c) _CGXAcquireDisplayFadeReservation [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018247b5fc (     0x8) _CGXReleaseDisplayFadeReservation [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018247b604 (    0x18) _CGXDisplayFade [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018247b61c (    0x40) _CGXSetDisplayContrast [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018247b65c (    0x50) _CGXSetDisplayColorProfile [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018247b6ac (    0xbc) _CGXSetDisplayColorProfileAndTransfer [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018247b768 (   0x22c) _CGXCopyDisplayInfoDictionary [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018247b994 (    0x54) _CGXDisplayGetRefreshTiming [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018247b9e8 (   0x8b8) _CGXAirDisplayOnline [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018247c2a0 (    0x30) _CGXAirDisplayOffline [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018247c2d0 (     0xc) _CGXMachineSupportsLowPowerVideo [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018247c2dc (    0x68) _CGXMainDisplayBoundsIgnoringCapture [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018247c344 (    0x3c) _CGXSetDisplayRotation [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018247c380 (   0x6bc) CGXMessageTraceMux [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018247ca3c (    0xb4) init_mux_stats(CGXMuxStats*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018247caf0 (   0x720) create_bad_app_list(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018247d210 (    0x1c) per_bundle_id_callback(void const*, void const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018247d22c (   0x290) per_bundle_version_callback(void const*, void const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018247d4bc (    0x94) invocation function for block in check_time_of_day() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018247d550 (    0x94) invocation function for block in check_time_of_day() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018247d5e4 (    0xa0) update_version_dict(void const*, void const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018247d684 (    0xa0) update_blame_dict(void const*, void const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018247d724 (   0x128) update_blame_counts(void const*, void const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018247d84c (   0x144) create_blame_info_for_pid(int, __CFString const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018247d990 (    0x58) cache_value_release_callback(void*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018247d9e8 (     0x4) cache_key_release_callback(void*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018247d9ec (    0x7c) CGXMessageTraceMuxTimerCallback [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018247da68 (   0x13c) log_device_state_change_stats(CGXMessageTraceDeviceState*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018247dba4 (    0x4c) init_display_arrangement_stats(CGXDisplaysMessageStats*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018247dbf0 (    0x6c) init_displays_stats(CGXDisplaysMessageStats*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018247dc5c (   0xb44) CGXMessageTraceDisplays [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018247e7a0 (   0x378) per_arrangement_callback(void const*, void const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018247eb18 (   0x228) per_display_sig_callback(void const*, void const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018247ed40 (    0x7c) CGXMessageTraceDisplaysTimerCallback [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018247edbc (    0x98) CGXMessageTraceAppFlushes [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018247ee54 (    0xc0) init_flush_stats(__CFDictionary**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018247ef14 (   0x26c) per_flush_callback(void const*, void const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018247f180 (    0x8c) __CGXMessageTraceAppFlushes_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018247f20c (    0x80) CGXMessageTraceAppFlushesTimerCallback [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018247f28c (  0x1014) invocation function for block in CoreDisplay::GPUController::GPUController() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824802a0 (    0x1c) (null) [FUNC, FunctionStarts] 
                0x00000001824802bc (   0x848) CoreDisplay::GPUController::RebuildMappedDisplayList() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182480b04 (    0x5c) std::__1::vector<CoreDisplay::GPU, std::__1::allocator<CoreDisplay::GPU>>::~vector[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182480b60 (   0x418) invocation function for block in CoreDisplay::GPUController::GPUController() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182480f78 (    0xd4) _GPUWranglerStringAppend(char*, unsigned long, unsigned long*, char const*, ...) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018248104c (    0x64) _GPUWrangler_getPathByEntryId(unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824810b0 (   0x154) _GPUWrangler_printGpuEntry(char*, unsigned long, unsigned long*, unsigned short, char const*, unsigned long long, char const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182481204 (   0x9f8) void std::__1::__introsort<std::__1::_ClassicAlgPolicy, CoreDisplay::GPUController::RebuildMappedDisplayList()::$_10&, CGXMappedDisplay*>(CGXMappedDisplay*, CGXMappedDisplay*, CoreDisplay::GPUController::RebuildMappedDisplayList()::$_10&, std::__1::iterator_traits<CGXMappedDisplay*>::difference_type) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182481bfc (    0x18) (null) [FUNC, FunctionStarts] 
                0x0000000182481c14 (   0x198) unsigned int std::__1::__sort3[abi:v160006]<std::__1::_ClassicAlgPolicy, CoreDisplay::GPUController::RebuildMappedDisplayList()::$_10&, CGXMappedDisplay*>(CGXMappedDisplay*, CGXMappedDisplay*, CGXMappedDisplay*, CoreDisplay::GPUController::RebuildMappedDisplayList()::$_10&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182481dac (   0x14c) unsigned int std::__1::__sort4[abi:v160006]<std::__1::_ClassicAlgPolicy, CoreDisplay::GPUController::RebuildMappedDisplayList()::$_10&, CGXMappedDisplay*>(CGXMappedDisplay*, CGXMappedDisplay*, CGXMappedDisplay*, CGXMappedDisplay*, CoreDisplay::GPUController::RebuildMappedDisplayList()::$_10&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182481ef8 (   0x1a4) unsigned int std::__1::__sort5_wrap_policy[abi:v160006]<std::__1::_ClassicAlgPolicy, CoreDisplay::GPUController::RebuildMappedDisplayList()::$_10&, CGXMappedDisplay*>(CGXMappedDisplay*, CGXMappedDisplay*, CGXMappedDisplay*, CGXMappedDisplay*, CGXMappedDisplay*, CoreDisplay::GPUController::RebuildMappedDisplayList()::$_10&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018248209c (   0x258) bool std::__1::__insertion_sort_incomplete<CoreDisplay::GPUController::RebuildMappedDisplayList()::$_10&, CGXMappedDisplay*>(CGXMappedDisplay*, CGXMappedDisplay*, CoreDisplay::GPUController::RebuildMappedDisplayList()::$_10&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824822f4 (    0x18) (null) [FUNC, FunctionStarts] 
                0x000000018248230c (     0x8) invocation function for block in CoreDisplay::GPUController::ProcessGPUEjectFinalize(__GPUWranglerGPU*, GPUWrangler_Event_t*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182482314 (    0x1c) invocation function for block in CoreDisplay::GPUController::ProcessGPUAdded(__GPUWranglerGPU*, GPUWrangler_Event_t*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182482330 (    0x18) std::__1::vector<MPPriv*, std::__1::allocator<MPPriv*>>::__throw_length_error[abi:v160006]() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182482348 (    0x3c) invocation function for block in CoreDisplay::GPUController::ProcessGPUAdded(__GPUWranglerGPU*, GPUWrangler_Event_t*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182482384 (    0x18) std::__1::vector<CoreDisplay::GPU, std::__1::allocator<CoreDisplay::GPU>>::__throw_length_error[abi:v160006]() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018248239c (    0x50) std::__1::__split_buffer<CoreDisplay::GPU, std::__1::allocator<CoreDisplay::GPU>&>::~__split_buffer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824823ec (    0xb4) CoreDisplay::GPUController::GetWranglerPort() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824824a0 (    0x2c) invocation function for block in CoreDisplay::GPUController::GetWranglerPort() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824824cc (    0x74) CoreDisplay::GPUController::IsRemovableGPUPresent() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182482540 (   0x124) get_display_pipe_vtable() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182482664 (   0x24c) std::__1::unordered_map<unsigned int, unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, unsigned int>>>::unordered_map(std::initializer_list<std::__1::pair<unsigned int const, unsigned int>>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824828b0 (   0x218) std::__1::pair<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void*>*>, bool> std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, unsigned int>>>::__emplace_unique_key_args<unsigned int, std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned int&&>, std::__1::tuple<>>(unsigned int const&, std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned int&&>&&, std::__1::tuple<>&&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList,...
                0x0000000182482ac8 (   0x2c4) CoreDisplay::Mach::Port::Port(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, CoreDisplay::Mach::Port::PortLookup) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182482d8c (   0x294) CoreDisplay::Mach::Port::~Port() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182483020 (   0x1a8) CGXInsertDisplaySets [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824831c8 (   0x71c) CGXWriteStoredDisplayConfig [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824838e4 (   0xa04) CGXSanityCheckModes [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824842e8 (   0x144) CGXReadStoredDisplayConfig [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018248442c (  0x1cb0) read_stored_display_config_from_sets(__CFArray*, unsigned int*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824860dc (    0x24) (null) [FUNC, FunctionStarts] 
                0x0000000182486100 (    0x7c) copy_number_from_dict(__CFDictionary const*, __CFString const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018248617c (    0x90) cleanup_cgxmonitor_array(CGXMonitor**, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018248620c (   0x11c) CGSDisplayStateIsValid [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182486328 (    0x78) std::__1::vector<CGSDisplayMode, std::__1::allocator<CGSDisplayMode>>::__swap_out_circular_buffer(std::__1::__split_buffer<CGSDisplayMode, std::__1::allocator<CGSDisplayMode>&>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824863a0 (    0x38) std::__1::__split_buffer<CGSDisplayMode, std::__1::allocator<CGSDisplayMode>&>::~__split_buffer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824863d8 (    0x58) std::__1::__split_buffer<CGSDisplayMode, std::__1::allocator<CGSDisplayMode>&>::__destruct_at_end[abi:v160006](CGSDisplayMode*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182486430 (    0xf4) std::__1::reverse_iterator<CGSDisplayMode*> std::__1::__uninitialized_allocator_move_if_noexcept[abi:v160006]<std::__1::allocator<CGSDisplayMode>, std::__1::reverse_iterator<CGSDisplayMode*>, std::__1::reverse_iterator<CGSDisplayMode*>, std::__1::reverse_iterator<CGSDisplayMode*>>(std::__1::allocator<CGSDisplayMode>&, std::__1::reverse_iterator<CGSDisplayMode*>, std::__1::reverse_iterator<CGSDisplayMode*>, std::__1::reverse_iterator<CGSDisplayMode*>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182486524 (    0x38) std::__1::__exception_guard_exceptions<std::__1::_AllocatorDestroyRangeReverse<std::__1::allocator<CGSDisplayMode>, std::__1::reverse_iterator<CGSDisplayMode*>>>::~__exception_guard_exceptions[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018248655c (    0x48) std::__1::_AllocatorDestroyRangeReverse<std::__1::allocator<CGSDisplayMode>, std::__1::reverse_iterator<CGSDisplayMode*>>::operator()[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824865a4 (    0xd0) CGSGetDisplayStateNull() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182486674 (    0x60) (anonymous namespace)::DecodeNSError(NSError const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824866d4 (    0x30) (anonymous namespace)::BacklightModule::~BacklightModule() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182486704 (   0x140) CoreDisplay::IOBacklightWrapper::SetBrightnessAttributes(__CFString const*, __CFData const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182486844 (    0xc8) CoreDisplay::EDRDisplay::EDRDisplay(float, float, float, bool, bool)::$_1::__invoke(float, float, float) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018248690c (    0x30) CoreDisplay::EDRDisplay::EDRDisplay(float, float, float, bool, bool)::$_0::__invoke(float, float, float) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018248693c (    0x2c) CoreDisplay::EDRDisplay::UpdateEDROn() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182486968 (    0x74) CoreDisplay::EDRDisplay::UpdateEDR() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824869dc (    0x88) CoreDisplay::EDRDisplay::SetMinEDRScaleFactor(float) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182486a64 (    0xe0) CoreDisplay::EDRDisplay::GetCurrentEDRScaleFactor() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182486b44 (    0x90) CoreDisplay::EDRDisplay::MoveAnimationForward() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182486bd4 (    0x84) CoreDisplay::EDRDisplay::GetCurrentBrightness() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182486c58 (    0xa0) CGXDumpShmemAllocator [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182486cf8 (    0xc0) shmem_check(CGXShmemAllocator*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182486db8 (   0x1d8) CGXAcquireSystemDisplayFadeReservation [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182486f90 (   0x1d0) performVisualBell(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182487160 (   0x304) CGXDisplayFade [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182487464 (   0x168) CGXReleaseDisplayFadeReservation [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824875cc (    0xc0) applyBlendToDisplays(float, float, float, float, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018248768c (    0x58) expireReservation(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824876e4 (   0x258) performFade(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018248793c (    0x84) setFadeRunningState(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824879c0 (   0x154) CGXWaitForDisplayFadeCompletion [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182487b14 (    0x48) CGXReleaseDisplayConfigurationData [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182487b5c (    0x54) CGXUpdateSessionLastNotifiedConfigurationData [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182487bb0 (    0x84) create_display_configuration_data() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182487c34 (    0x54) CGXUpdateSessionCurrentConfigurationData [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182487c88 (    0xc0) CGXConfigurationNotificationNeeded [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182487d48 (    0x5c) CGXDesktopShapeChanged [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182487da4 (    0xcc) SLSRunningOnInstallerDisk [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182487e70 (   0x12c) std::__1::vector<void*, std::__1::allocator<void*>>::resize(unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182487f9c (    0x18) std::__1::vector<void*, std::__1::allocator<void*>>::__throw_length_error[abi:v160006]() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182487fb4 (   0x808) CoreDisplay::Backtrace::Backtrace() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824887bc (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001824887cc (   0x1b0) CoreDisplay::Backtrace::GetString() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018248897c (    0x88) MPIsLinkMode(CGXDisplayDevice*, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182488a04 (    0xb4) index_to_mode(MPPriv*, int, int*, int*, float*, MPDisplayModeInfo const**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182488ab8 (   0xff0) build_mode_list_if_needed(MPPriv*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182489aa8 (   0x2e0) extended_is_projector(__CFDictionary const*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182489d88 (    0xa8) displaySizeInMM(__CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182489e30 (   0x118) isDisplayDeviceHIDPI(MPPriv*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182489f48 (   0x108) invocation function for block in machine_is_hidpi() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018248a050 (    0x34) CFTypePtr<__CFLocale const*>::~CFTypePtr() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018248a084 (    0x50) invocation function for block in isMuxSystem() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018248a0d4 (   0x19c) invocation function for block in isBroadwellOrLater() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018248a270 (    0x98) std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::basic_string[abi:v160006](char const*, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018248a308 (     0xc) MPGetGPUVendor(CGXDisplayDevice const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018248a314 (     0xc) MPSetAccessibilityDisplayStateDidChanged(CGXDisplayDevice*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018248a320 (     0xc) MPAccessibilityDisplayStateDidChanged(CGXDisplayDevice*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018248a32c (    0x10) MPSetHMDStateDidChanged(CGXDisplayDevice*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018248a33c (    0x20) MPHMDStateDidChanged(CGXDisplayDevice*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018248a35c (     0xc) MPGetHDRScalingFactor(CGXDisplayDevice const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018248a368 (   0x158) MPSetHDRScalingFactor(CGXDisplayDevice*, float) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018248a4c0 (     0xc) saveConfigurationTimerFunc(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018248a4cc (     0x8) MPIsAirPlayDevice(CGXDisplayDevice const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018248a4d4 (   0x178) MPEndDisplayConfiguration(CGXDisplayDevice*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018248a64c (   0x170) set_device_transfer(CGXDisplayDevice*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018248a7bc (   0x17c) update_gl_acceleration(CGXDisplayDevice*, char const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018248a938 (   0x21c) MPGetNextWakeupTime(CGXDisplayDevice*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018248ab54 (   0x3a8) create_gamma_transfer(MPPriv*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018248aefc (   0x740) set_gamma_transfer(MPPriv*, MPGammaTransfer*, char const*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018248b63c (    0xa0) access_display_pipe_info(MPPriv*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018248b6dc (    0xdc) UseIOPGamma(CGXDisplayDevice const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018248b7b8 (    0x20) (null) [FUNC, FunctionStarts] 
                0x000000018248b7d8 (    0xbc) compute_pipe_gamma_tables(MPDisplayPipeInfo*, MPGammaTransfer const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018248b894 (   0x204) MPUpdateGammaTablesOnDisplayDevice(CGXDisplayDevice const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018248ba98 (    0x9c) concatenate_color_table_in_place(float*, int, unsigned short const*, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018248bb34 (    0xec) set_device_transfer_callback(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018248bc20 (    0xe4) MPBeginDisplayConfiguration(CGXDisplayDevice*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018248bd04 (    0xf0) MPDisplayCaptured(CGXDisplayDevice const*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018248bdf4 (    0xe8) MPGetVBLTiming(CGXDisplayDevice const*, unsigned long long*, unsigned long long*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018248bedc (    0x38) MPResetGammaTablesOnDisplayDevice(CGXDisplayDevice const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018248bf14 (    0x60) MPGenerateUpdate(CGXDisplayDevice*, CGSRegionObject*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018248bf74 (   0xa48) generate_update(CGXDisplayDevice*, int, CGSRegionObject*, CGRect, unsigned int, unsigned int, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018248c9bc (   0x7a8) MPHWFillRegion(CGXDisplayDevice*, int, CGSRegionObject*, unsigned int, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018248d164 (   0x188) MPAccessCaptureSurfaceForDisplayDevice(CGXDisplayDevice*, void**, unsigned int*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018248d2ec (    0x18) (null) [FUNC, FunctionStarts] 
                0x000000018248d304 (    0x70) CGXMappedDisplaySetFramebuffersAttribute [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018248d374 (    0xd4) __CGXSetDisplayPolicyEnabled_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018248d448 (    0xcc) CGXSetDisplayPolicyEnabled [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018248d514 (    0xc0) set_framebuffer_active_attribute(unsigned int, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018248d5d4 (    0x5c) MPDisplayDevicePriv(CGXDisplayDevice const*, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018248d630 (    0xac) MPDisplayDeviceSurfaceIsReady(CGXDisplayDevice*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018248d6dc (   0x110) MPDisplayDeviceDidFlush(CGXDisplayDevice*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018248d7ec (    0xa4) MPResetSurfaceForDisplayDevice(CGXDisplayDevice*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018248d890 (   0x1a8) reset_hardware(MPPriv*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018248da38 (    0xc0) resetPageFlipState(CGXDisplayDevice*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018248daf8 (    0x64) release_display_pipe [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018248db5c (   0x190) MPFinishSurfaceForDisplayDevice(CGXDisplayDevice*, unsigned int, int, CGRect, CGSRegionObject*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018248dcec (   0x4e8) MPAccessSurfaceForDisplayDevice(CGXDisplayDevice*, void**, unsigned int*, bool, bool*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018248e1d4 (    0x18) (null) [FUNC, FunctionStarts] 
                0x000000018248e1ec (    0x48) all_devices_in_hw_mirror_loop_are_accelerator_backed(CGXDisplayDevice*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018248e234 (    0x64) MPAcquireSurfaceID() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018248e298 (    0x44) MPFramebufferForDisplayDevice(CGXDisplayDevice const*, unsigned int, void**, unsigned int*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018248e2dc (    0x9c) MPAcceleratorForDisplayDevice(CGXDisplayDevice const*, int, unsigned int*, unsigned int*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018248e378 (    0x78) MPServiceForDisplayDevice(CGXDisplayDevice const*, int, unsigned int*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018248e3f0 (    0x64) MPHWWaitTokenRelease(CGXDisplayDevice const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018248e454 (   0x124) MPHWWait(CGXDisplayDevice const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018248e578 (    0x8c) MPHWCopyForwardRegion(CGXDisplayDevice*, CGSRegionObject*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018248e604 (   0x2e4) copy_forward_region(CGXDisplayDevice*, CGSRegionObject*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018248e8e8 (   0xdbc) MPHWCopyPixels(CGXDisplayDevice const*, int, unsigned int, bool, int, int, int, int, unsigned long, unsigned long, void**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018248f6a4 (    0x18) (null) [FUNC, FunctionStarts] 
                0x000000018248f6bc (    0x88) MPHWPurgeSurface(CGXDisplayDevice const*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018248f744 (   0x938) MPHWMoveRegion(CGXDisplayDevice const*, int, CGSRegionObject*, unsigned int, int, int, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018249007c (   0x734) MPHWCopyRegion(CGXDisplayDevice const*, int, CGSRegionObject*, int, int, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824907b0 (    0xa8) MPHWSync(CGXDisplayDevice const*, int, int, int, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182490858 (   0x394) MPSetOriginFinish(CGXDisplayDevice*, CGXMonitor const*, bool, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182490bec (   0x96c) MPRebuildDevice(CGXDisplayDevice*, bool, CGRect const*, CGRect const*, CGRect const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182491558 (   0xa48) description_for_mode_number(MPPriv*, int, bool, bool, _CGSDisplayModeDescription*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182491fa0 (    0x20) (null) [FUNC, FunctionStarts] 
                0x0000000182491fc0 (   0x164) CDSetDeviceBounds [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182492124 (   0x650) setup_hardware(CGXDisplayDevice*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182492774 (    0x18) (null) [FUNC, FunctionStarts] 
                0x000000018249278c (   0x810) MPSetOriginMiddle(CGXDisplayDevice*, CGXMonitor const*, bool, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182492f9c (    0x98) MPSetOriginStart(CGXDisplayDevice*, CGXMonitor const*, bool, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182493034 (   0x23c) MPSetStartupMode(CGXDisplayDevice*, CGDisplayMode*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182493270 (    0x24) (null) [FUNC, FunctionStarts] 
                0x0000000182493294 (   0x25c) match_mode_to_mode_index(CGXDisplayDevice*, int*, CGDisplayMode*, int*, bool, bool, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824934f0 (    0xb4) create_mode_with_mode_number(CGXDisplayDevice*, int, bool, bool, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824935a4 (   0x9c0) MPSelectMode(CGXDisplayDevice*, CGDisplayMode*, CoreDisplay::DisplayOutputMode, CGXSelectModeOption) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182493f64 (    0x24) (null) [FUNC, FunctionStarts] 
                0x0000000182493f88 (    0x24) (null) [FUNC, FunctionStarts] 
                0x0000000182493fac (   0x194) IOModeIDForDisplayOutputMode [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182494140 (    0x1c) (null) [FUNC, FunctionStarts] 
                0x000000018249415c (   0x3d4) FindIOModeIDForIODynamicRange(unsigned int, int, unsigned short) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182494530 (     0xc) MPCurrentModeNumber(CGXDisplayDevice const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018249453c (   0x15c) current_mode_index [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182494698 (    0x7c) MPGetVRRMinRefreshRate(CGXDisplayDevice*, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182494714 (    0x88) MPVRRSupportForMode(CGXDisplayDevice*, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018249479c (    0x18) MPModeDescription(CGXDisplayDevice*, int, _CGSDisplayModeDescription*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824947b4 (    0x38) MPNumberOfAvailableModes(CGXDisplayDevice const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824947ec (   0x408) MPGetMonitorInfo(CGXDisplayDevice const*, CGXMonitor*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182494bf4 (    0x18) (null) [FUNC, FunctionStarts] 
                0x0000000182494c0c (    0x28) MPResetDevice(CGXDisplayDevice*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182494c34 (   0x1fc) MPDeviceOptions(CGXDisplayDevice*, char const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182494e30 (    0x48) MPCompleteTransferCrossfade(CGXDisplayDevice*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182494e78 (    0x18) MPTransferCrossfade(CGXDisplayDevice*, float) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182494e90 (   0x47c) MPInitTransferCrossfade(CGXDisplayDevice*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018249530c (   0x20c) MPGetServiceProperty [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182495518 (    0x20) (null) [FUNC, FunctionStarts] 
                0x0000000182495538 (    0x80) alt_gamma_create(MPPriv*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824955b8 (    0x28) MPBlendWithColor(CGXDisplayDevice*, float, float, float, float, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824955e0 (   0x118) MPSetDeviceTransfer(CGXDisplayDevice*, int, float const*, float const*, float const*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824956f8 (   0x100) setup_device_transfer(MPPriv*, int, float const*, float const*, float const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824957f8 (    0x2c) MPGetDeviceTransfer(CGXDisplayDevice const*, int*, float**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182495824 (    0x14) MPGetTransferTableSize(CGXDisplayDevice const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182495838 (   0x168) MPRegisterScreen(CGXDisplayDevice*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824959a0 (    0x24) MPPing(CGXDisplayDevice const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824959c4 (   0x6d8) MPInitScreen(CGXDisplayDevice*, bool*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018249609c (   0x188) getDisplayDeviceDimensions(CGXDisplayDevice*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182496224 (   0x20c) reset_framebuffer_information(MPPriv*, float) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182496430 (  0x172c) get_display_device_info(CGXDisplayDevice*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182497b5c (    0xd4) init_hmd(CGXDisplayDevice*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182497c30 (    0xec) init_hdr_scaling_factor_from_preferences(CGXDisplayDevice*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182497d1c (    0xf4) init_prefer_hdr_modes_from_preferences(CGXDisplayDevice*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182497e10 (   0x324) displayNotification [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182498134 (    0x14) (null) [FUNC, FunctionStarts] 
                0x0000000182498148 (    0xc8) RemoveFramebufferPorts [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182498210 (    0xb0) AddFramebufferPorts [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824982c0 (   0x3a4) displayAcceleratorChange(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182498664 (   0x184) displayContentProtectionStatusChange(void*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824987e8 (    0x94) invocation function for block in displayContentProtectionStatusChange(void*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018249887c (    0x18) postLocalNotificationForContentProtectionGracePeriodTimerExpiring() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182498894 (    0x20) displayUndim(void*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824988b4 (    0xc8) displayDim(void*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018249897c (   0x13c) displayWillSleepWithImages(void*, void*, unsigned int, unsigned long long*, unsigned long long*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182498ab8 (   0x1a8) invocation function for block in displayWillSleepWithImages(void*, void*, unsigned int, unsigned long long*, unsigned long long*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182498c60 (   0x428) mp_display_will_sleep_common(MPPriv*, int (bool) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182499088 (    0xb0) cleanupSleepingDisplays(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000182499138 (  0x1630) displayConnectChange [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018249a768 (   0xeac) displayAliasActivate(CGXDisplayDevice*, MPPriv*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018249b614 (    0x78) displayAliasDeactivate(CGXDisplayDevice*, MPPriv*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018249b68c (   0x2c0) resetIOBacklightAfterConnectChange(CGXDisplayDevice*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018249b94c (   0x150) UpdateDisplayAccelerators(CGXDisplayDevice const*, MPPriv const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018249ba9c (    0x80) compare_display_mode_info(MPDisplayModeInfo const*, MPDisplayModeInfo const*, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018249bb1c (   0x814) complete_connect_change [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018249c330 (    0x80) set_gamma(MPPriv*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018249c3b0 (   0x77c) displayDidWake(void*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018249cb2c (    0x98) displayWillSleep(void*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018249cbc4 (     0x8) invocation function for block in displayWillSleep(void*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018249cbcc (   0x128) generate_display_uuid_from_cfdata(__CFData const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018249ccf4 (    0x94) invocation function for block in isMobileSystem() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018249cd88 (    0x94) __isSafeBoot_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018249ce1c (    0xa8) __isMacPro7_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018249cec4 (    0xa8) invocation function for block in isSkylakeMacBook() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018249cf6c (    0xcc) invocation function for block in isSkylakeMux() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018249d038 (   0x1b4) (null) [FUNC, FunctionStarts] 
                0x000000018249d1ec (   0x1a8) __isSkylakeOrLater_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018249d394 (    0x2c) std::__1::unique_ptr<CoreDisplay::GPUController, std::__1::default_delete<CoreDisplay::GPUController>>::~unique_ptr[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018249d3c0 (    0x6c) std::__1::unique_ptr<CoreDisplay::GPUController, std::__1::default_delete<CoreDisplay::GPUController>>::reset[abi:v160006](CoreDisplay::GPUController*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018249d42c (    0x40) CFTypePtr<__IOPresentmentGPUWrangler*>::operator=(CFTypePtr<__IOPresentmentGPUWrangler*>&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018249d46c (   0x758) GPUWranglerEventCallback(void*, __CFString const*, sIOPresentmentDeviceState) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018249dbc4 (    0x88) GPUWranglerDevices() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018249dc4c (   0x25c) HasDeviceSetChanged() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018249dea8 (    0xbc) std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUWranglerDevice>, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<unsigned long long, GPUWranglerDevice>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, GPUWranglerDevice>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, GPUWranglerDevice>, std::__1::equal_to<unsigned long long>, std::__1::hash<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, GPUWranglerDevice>>>::find<unsigned long long>(unsigned long long const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018249df64 (   0x4b4) InitializeDeviceSet(std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018249e418 (    0x4c) std::__1::__hash_table<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>::~__hash_table() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018249e464 (    0x68) std::__1::__hash_table<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>::clear() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018249e4cc (     0x4) std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>::~unordered_set[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018249e4d0 (    0x4c) std::__1::unordered_map<unsigned long long, GPUWranglerDevice, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<unsigned long long const, GPUWranglerDevice>>>::~unordered_map[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018249e51c (    0x84) CoreDisplay_IsXGPresent [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018249e5a0 (    0x8c) get_acceleration_flags [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018249e62c (    0x88) get_gamma_count [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018249e6b4 (   0x54c) DumpIORegistryFrameBufferInfo [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018249ec00 (   0x414) DumpIORegistryIOGraphicsLERInfo [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018249f014 (   0x594) DumpIORegistryAcceleratorInfo [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018249f5a8 (  0x35b8) CGXMappedDisplayStart [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824a2b60 (    0x68) GetCoreDisplayIOFBOpenInfo(CoreDisplayIOFBOpenInfo*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824a2bc8 (    0x24) mapped_display_compare(void const*, void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824a2bec (    0x20) WranglerPortNotification(unsigned int, mach_msg_header_t*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824a2c0c (    0xd4) CGXCopyDefaultDisplayMode(CGXDisplayDevice*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824a2ce0 (     0xc) WSSetIntraVBLWaitCoefficient [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824a2cec (    0x94) GetAcceleratorForGVA [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824a2d80 (    0x54) Display::iosurface_plane_size(unsigned long, unsigned long, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824a2dd4 (  0x15f0) CD_IOSurfaceCreate [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824a43c4 (   0x1ac) create_plane_dict(long, long, long, long, unsigned long, unsigned long, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824a4570 (   0x168) rowbytes_for_packed_format(unsigned long, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824a46d8 (    0x50) CGXLGetDisplayByID [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824a4728 (    0xc4) CGXLGetMainDisplay [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824a47ec (   0xa74) CGXLCorrectDisplays [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824a5260 (   0x1e0) CorrectMirrors(CGXMonitor**, CGXMonitor*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824a5440 (    0xac) DisplayPositionedOK(CGXMonitor**, CGXMonitor*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824a54ec (   0x230) RectIntersects(CGXMonitor*, CGXMonitor*, CGXMonitor*, long*, long*, long*, long*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824a571c (    0x4c) ClearDisplaysFlags(CGXMonitor**, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824a5768 (    0x1c) compareLimitX(void const*, void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824a5784 (    0x8c) PointOnRect(CGXMonitor*, long, long, CGXMonitor*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824a5810 (    0x68) CGXLDisplayHasMirrors [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824a5878 (    0xe0) CGXLMirrorDisplays [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824a5958 (    0xb4) CGXWaitForService [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824a5a0c (    0x5c) SLSCurrentRealTime [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824a5a68 (    0x74) invocation function for block in timestamp_scale() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824a5adc (    0xb0) CGSMinSchedulerQuantum() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824a5b8c (    0x74) invocation function for block in timeout_reached(unsigned long long, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824a5c00 (   0x138) CGSShmemRWLockTryLockForWriting [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824a5d38 (    0xa4) CGXPostDisplayChangedEvent [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824a5ddc (    0xe4) CGXTellConnectionDisplayWillReconfigure [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824a5ec0 (   0x2f8) CGXTellConnectionDisplayDidReconfigure [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824a61b8 (   0x96c) CGXDisplaysWillReconfigure [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824a6b24 (   0x348) create_display_debug_description(CGXDisplayDevice*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824a6e6c (    0x9c) CGXAllDisplaysAreCaptured [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824a6f08 (   0xcd0) CGXDisplaysDidReconfigure [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824a7bd8 (   0x994) CheckDisplaySet() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824a856c (    0x4c) std::__1::__tree<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long>>::destroy(std::__1::__tree_node<unsigned long, void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824a85b8 (    0x48) CGXBroadcastDisplayChangeNotificationsAsNeeded [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824a8600 (   0x164) broadcast_display_change_notifications() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824a8764 (   0x19c) CGXDisplayWillSleepNotification [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824a8900 (   0x424) fullScreenAppDetectorProc [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824a8d24 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001824a8d3c (    0x5c) CGXDisplaysAreCaptured [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824a8d98 (   0x234) CGXDisplayDidWakeNotification [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824a8fcc (   0x324) CGXDisplayDidWake [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824a92f0 (    0xa0) CGXSetDisplayConfigFadeParameters [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824a9390 (   0x9f4) WSCopyBestDisplayMode [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824a9d84 (   0x110) create_display_mode_list(CGXDisplayDevice*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824a9e94 (   0x1cc) CGXCreateDeepMatchingMode [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824aa060 (    0xa8) CGXCopyDisplayModeByMatchingDictionary [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824aa108 (    0x9c) CGXCopyDisplayModeByMatchingMode [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824aa1a4 (    0x34) CGXFullScreenAppIsRunning [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824aa1d8 (   0x124) CGXConnDisplayCapture [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824aa2fc (   0x4c0) CGXConnDisplayRelease [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824aa7bc (    0x10) CGXConnectionHasCapturedDisplay [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824aa7cc (   0x640) CGXSelectDisplaySet [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824aae0c (     0xc) WSGetDesktopColor [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824aae18 (   0x2a4) get_color_for_usage(__CFString const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824ab0bc (   0x11c) dictToColor(__CFDictionary const*, CGSDeviceColor*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824ab1d8 (     0xc) WSGetStartupColor [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824ab1e4 (   0x100) assert_check_region [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824ab2e4 (    0x44) region_create_with_shape [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824ab328 (    0xb8) shape_accum_cost(int, int, int, int, int, int*, int*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824ab3e0 (    0x88) CGGetRegionRectCount [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824ab468 (   0x2f0) CGRegionCreateByScalingRegion [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824ab758 (   0x654) CGRegionCreateBySimplifyingRegion [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824abdac (    0x7c) CDTypeCreateInstance [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824abe28 (    0x80) CDCFDictionaryGetBoolean [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824abea8 (    0xbc) CDCFDictionaryGetFloat [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824abf64 (    0xc0) CDCFDictionaryGetInteger [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824ac024 (    0x9c) CDCFDictionarySetFloat [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824ac0c0 (    0x9c) CDCFDictionarySetInteger [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824ac15c (   0x114) CoreDisplay::DisplayPipeState::DisplayPipeState() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824ac270 (   0x124) CoreDisplay::ComputeTransferFunctionCharacteristics(std::__1::vector<float, std::__1::allocator<float>> const&, std::__1::vector<float, std::__1::allocator<float>> const&, std::__1::vector<float, std::__1::allocator<float>> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824ac394 (   0x16c) std::__1::deque<UseCountProxy<std::__1::shared_ptr<CoreDisplay::DisplaySurface>>, std::__1::allocator<UseCountProxy<std::__1::shared_ptr<CoreDisplay::DisplaySurface>>>>::~deque[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824ac500 (    0x9c) CoreDisplay::DisplayPipeState::~DisplayPipeState() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824ac59c (    0x40) std::__1::unique_ptr<CoreDisplay::DisplaySurface, std::__1::default_delete<CoreDisplay::DisplaySurface>>::reset[abi:v160006](CoreDisplay::DisplaySurface*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824ac5dc (   0x404) CoreDisplay::DisplayPipe::~DisplayPipe() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824ac9e0 (    0x60) CoreDisplay::DumpGammaTransferInfoForDisplayToFile(CoreDisplay::Display const&, __sFILE*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824aca40 (    0xe8) CoreDisplay::DisplayPipe::CreateTransaction() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824acb28 (   0x11c) CoreDisplay::DisplayPipe::RefreshCapabilities() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824acc44 (   0x270) CoreDisplay::DisplayPipe::AcceleratorChanged() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824aceb4 (    0x58) CoreDisplay::DisplayPipe::ModeChanged() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824acf0c (    0x4c) CFTypePtr<CGColorSpace*>::operator=(CFTypePtr<CGColorSpace*> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824acf58 (   0x21c) CoreDisplay::DisplayPipeState::operator=(CoreDisplay::DisplayPipeState const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824ad174 (   0x10c) void std::__1::vector<float, std::__1::allocator<float>>::assign<float*, 0>(float*, float*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824ad280 (    0x18) std::__1::vector<CoreDisplay::DisplayPipeOperation, std::__1::allocator<CoreDisplay::DisplayPipeOperation>>::__throw_length_error[abi:v160006]() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824ad298 (    0x50) std::__1::vector<CoreDisplay::DisplayPipeOperation, std::__1::allocator<CoreDisplay::DisplayPipeOperation>>::__vallocate[abi:v160006](unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824ad2e8 (   0x398) std::__1::deque<UseCountProxy<std::__1::shared_ptr<CoreDisplay::DisplaySurface>>, std::__1::allocator<UseCountProxy<std::__1::shared_ptr<CoreDisplay::DisplaySurface>>>>::erase(std::__1::__deque_iterator<UseCountProxy<std::__1::shared_ptr<CoreDisplay::DisplaySurface>>, UseCountProxy<std::__1::shared_ptr<CoreDisplay::DisplaySurface>> const*, UseCountProxy<std::__1::shared_ptr<CoreDisplay::DisplaySurface>> const&, UseCountProxy<std::__1::shared_ptr<CoreDisplay::DisplaySurface>> const* const*, long, 256l>, std::__1::__deque_iterator<UseCountProxy<std::__1::shared_ptr<CoreDisplay::DisplaySurface>>, UseCountProxy<std::__1::shared_ptr<CoreDisplay::DisplaySurface>> const*, UseCountProxy<std::__1::shared_ptr<CoreDisplay::DisplaySurface>> const&, UseCountProxy<std::__1::shared_ptr<CoreDisplay::DisplaySurface>> const* const*, long, 256l>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824ad680 (    0x54) std::__1::__deque_iterator<UseCountProxy<std::__1::shared_ptr<CoreDisplay::DisplaySurface>>, UseCountProxy<std::__1::shared_ptr<CoreDisplay::DisplaySurface>>*, UseCountProxy<std::__1::shared_ptr<CoreDisplay::DisplaySurface>>&, UseCountProxy<std::__1::shared_ptr<CoreDisplay::DisplaySurface>>**, long, 256l>::operator+[abi:v160006](long) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824ad6d4 (    0xd4) std::__1::pair<UseCountProxy<std::__1::shared_ptr<CoreDisplay::DisplaySurface>>*, std::__1::__deque_iterator<UseCountProxy<std::__1::shared_ptr<CoreDisplay::DisplaySurface>>, UseCountProxy<std::__1::shared_ptr<CoreDisplay::DisplaySurface>>*, UseCountProxy<std::__1::shared_ptr<CoreDisplay::DisplaySurface>>&, UseCountProxy<std::__1::shared_ptr<CoreDisplay::DisplaySurface>>**, long, 256l>> std::__1::__move_loop<std::__1::_ClassicAlgPolicy>::operator()[abi:v160006]<UseCountProxy<std::__1::shared_ptr<CoreDisplay::DisplaySurface>>*, std::__1::__deque_iterator<UseCountProxy<std::__1::shared_ptr<CoreDisplay::DisplaySurface>>, UseCountProxy<std::__1::shared_ptr<CoreDisplay::DisplaySurface>>*, UseCountProxy<std::__1::shared_ptr<CoreDisplay::DisplaySurface>>&, UseCountProxy<std::__1::shared_ptr<CoreDisplay::DisplaySurface>>**, long, 256l>, 0>(UseCountProxy<std::__1::shared_ptr<CoreDisplay::DisplaySurface>>*, UseCountProxy<std::__1::shared_ptr<Cor...
                0x00000001824ad7a8 (    0x64) UseCountProxy<std::__1::shared_ptr<CoreDisplay::DisplaySurface>>::operator=(UseCountProxy<std::__1::shared_ptr<CoreDisplay::DisplaySurface>>&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824ad80c (    0xd8) std::__1::pair<UseCountProxy<std::__1::shared_ptr<CoreDisplay::DisplaySurface>>*, std::__1::__deque_iterator<UseCountProxy<std::__1::shared_ptr<CoreDisplay::DisplaySurface>>, UseCountProxy<std::__1::shared_ptr<CoreDisplay::DisplaySurface>>*, UseCountProxy<std::__1::shared_ptr<CoreDisplay::DisplaySurface>>&, UseCountProxy<std::__1::shared_ptr<CoreDisplay::DisplaySurface>>**, long, 256l>> std::__1::__move_backward_loop<std::__1::_ClassicAlgPolicy>::operator()[abi:v160006]<UseCountProxy<std::__1::shared_ptr<CoreDisplay::DisplaySurface>>*, std::__1::__deque_iterator<UseCountProxy<std::__1::shared_ptr<CoreDisplay::DisplaySurface>>, UseCountProxy<std::__1::shared_ptr<CoreDisplay::DisplaySurface>>*, UseCountProxy<std::__1::shared_ptr<CoreDisplay::DisplaySurface>>&, UseCountProxy<std::__1::shared_ptr<CoreDisplay::DisplaySurface>>**, long, 256l>, 0>(UseCountProxy<std::__1::shared_ptr<CoreDisplay::DisplaySurface>>*, UseCountProxy<std::__1::share...
                0x00000001824ad8e4 (   0x284) CoreDisplay::DisplayPipe::UpdateTargetStateColorProcessing() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824adb68 (   0x1dc) CoreDisplay::IsLinearizationEqual(CGColorSpace*, CGColorSpace*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824add44 (   0x2e0) CoreDisplay::DisplayPipe::IsEOTFSupportedInHW(unsigned int, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824ae024 (   0x33c) CoreDisplay::DisplayPipe::IsLetterAndPillarBoxSupportedInHW(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824ae360 (    0x64) CoreDisplay::DisplayPipe::GetCurrentModeSizeInPixels() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824ae3c4 (   0x328) CoreDisplay::DisplayPipe::IsOperationTypeSupportedInHW(CoreDisplay::DisplayPipeOperation::Type, unsigned int, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824ae6ec (   0x754) CoreDisplay::DisplayPipe::AreOperationsSupportedInHW(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824aee40 (    0x18) std::__1::vector<CoreDisplay::DisplayPipe::HWPipeSupport, std::__1::allocator<CoreDisplay::DisplayPipe::HWPipeSupport>>::__throw_length_error[abi:v160006]() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824aee58 (   0x338) CoreDisplay::DisplayPipe::AddFetch(CoreDisplay::IOPTransaction*, CoreDisplay::DisplaySurface const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824af190 (   0x87c) CoreDisplay::DisplayPipe::AddLinearization(CoreDisplay::IOPTransaction*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824afa0c (    0x70) gsl::span<float, -1l>::span<std::__1::vector<float, std::__1::allocator<float>>, void>(std::__1::vector<float, std::__1::allocator<float>>&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824afa7c (   0x338) CoreDisplay::CombineLUTs(float, bool, bool, float, float, float, std::__1::vector<float, std::__1::allocator<float>> const&, CoreDisplay::Display const*, CGDisplayColorCurve*, CGDisplayColorCurve*, CGDisplayColorCurve*, CGDisplayColorCurve*, float, float, float, float) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824afdb4 (   0x114) CoreDisplay::CGColorCurveMapValueUnclamped(CGDisplayColorCurve*, float) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824afec8 (  0x1048) CoreDisplay::DisplayPipe::AddEOTF(CoreDisplay::IOPTransaction*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824b0f10 (    0x24) __Block_byref_object_copy_.4495 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824b0f34 (    0x18) __Block_byref_object_dispose_.4496 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824b0f4c (   0x178) CoreDisplay::CombineLUTsPreCalc(float*, float*, float*, float*, float, std::__1::vector<float, std::__1::allocator<float>> const&, CoreDisplay::Display const*, CGDisplayColorCurve*, CGDisplayColorCurve*, CGDisplayColorCurve*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824b10c4 (   0x13c) invocation function for block in CoreDisplay::DisplayPipe::AddEOTF(CoreDisplay::IOPTransaction*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824b1200 (    0x84) std::__1::vector<float, std::__1::allocator<float>>::vector(std::__1::vector<float, std::__1::allocator<float>> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824b1284 (    0x80) __destroy_helper_block_e8_32r40r48r64c39_ZTSNSt3__16vectorIfNS_9allocatorIfEEEE128c39_ZTSNSt3__16vectorIfNS_9allocatorIfEEEE184c39_ZTSNSt3__16vectorIfNS_9allocatorIfEEEE [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824b1304 (   0x104) __copy_helper_block_e8_32r40r48r64c39_ZTSNSt3__16vectorIfNS_9allocatorIfEEEE128c39_ZTSNSt3__16vectorIfNS_9allocatorIfEEEE184c39_ZTSNSt3__16vectorIfNS_9allocatorIfEEEE [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824b1408 (    0x78) CoreDisplay::DisplayPipe::IsDisplaySurfaceSubsampledYUV() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824b1480 (   0xa30) CoreDisplay::DisplayPipe::BuildTransactions(UseCountProxy<CoreDisplay::DisplaySurface*>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824b1eb0 (    0x38) std::__1::__exception_guard_exceptions<std::__1::vector<std::__1::shared_ptr<CoreDisplay::IOPTransaction>, std::__1::allocator<std::__1::shared_ptr<CoreDisplay::IOPTransaction>>>::__destroy_vector>::~__exception_guard_exceptions[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824b1ee8 (   0x470) CoreDisplay::DisplayPipe::CommitState() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824b2358 (   0xa28) CoreDisplay::DisplayPipeState::operator std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824b2d80 (     0xc) CoreDisplay::ReloadCursor(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824b2d8c (   0x2ac) CoreDisplay::GetTargetPixelFormatSearchList(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824b3038 (   0x188) CoreDisplay::DisplayPipe::GetAndRemovePresentSurfaceForTransactionSurface(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824b31c0 (    0xb4) std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, unsigned int>>>::find<unsigned int>(unsigned int const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824b3274 (  0x3178) CoreDisplay::DisplayPipe::RunFullDisplayPipe(UseCountProxy<CoreDisplay::DisplaySurface*>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824b63ec (   0x124) invocation function for block in CoreDisplay::DisplayPipe::RunFullDisplayPipe(UseCountProxy<CoreDisplay::DisplaySurface*>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824b6510 (    0x68) __destroy_helper_block_e8_72c39_ZTSNSt3__16vectorIfNS_9allocatorIfEEEE136c39_ZTSNSt3__16vectorIfNS_9allocatorIfEEEE200c39_ZTSNSt3__16vectorIfNS_9allocatorIfEEEE [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824b6578 (    0x90) __copy_helper_block_e8_72c39_ZTSNSt3__16vectorIfNS_9allocatorIfEEEE136c39_ZTSNSt3__16vectorIfNS_9allocatorIfEEEE200c39_ZTSNSt3__16vectorIfNS_9allocatorIfEEEE [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824b6608 (   0x114) CoreDisplay::GetRectToRectTransform(CGRect, CGRect) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824b671c (  0x1cfc) CoreDisplay::DisplayPipe::RunGPUDisplayPipe() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824b8418 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<CGSize>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<CGSize>>(std::__1::allocator<CGSize>&, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824b8450 (   0xa20) void std::__1::__introsort<std::__1::_ClassicAlgPolicy, CoreDisplay::DisplayPipe::RunGPUDisplayPipe()::$_5&, CGSize*>(CGSize*, CGSize*, CoreDisplay::DisplayPipe::RunGPUDisplayPipe()::$_5&, std::__1::iterator_traits<CGSize*>::difference_type) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824b8e70 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001824b8e88 (   0x1bc) unsigned int std::__1::__sort3[abi:v160006]<std::__1::_ClassicAlgPolicy, CoreDisplay::DisplayPipe::RunGPUDisplayPipe()::$_5&, CGSize*>(CGSize*, CGSize*, CGSize*, CoreDisplay::DisplayPipe::RunGPUDisplayPipe()::$_5&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824b9044 (   0x160) unsigned int std::__1::__sort4[abi:v160006]<std::__1::_ClassicAlgPolicy, CoreDisplay::DisplayPipe::RunGPUDisplayPipe()::$_5&, CGSize*>(CGSize*, CGSize*, CGSize*, CGSize*, CoreDisplay::DisplayPipe::RunGPUDisplayPipe()::$_5&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824b91a4 (   0x1b8) unsigned int std::__1::__sort5_wrap_policy[abi:v160006]<std::__1::_ClassicAlgPolicy, CoreDisplay::DisplayPipe::RunGPUDisplayPipe()::$_5&, CGSize*>(CGSize*, CGSize*, CGSize*, CGSize*, CGSize*, CoreDisplay::DisplayPipe::RunGPUDisplayPipe()::$_5&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824b935c (   0x24c) bool std::__1::__insertion_sort_incomplete<CoreDisplay::DisplayPipe::RunGPUDisplayPipe()::$_5&, CGSize*>(CGSize*, CGSize*, CoreDisplay::DisplayPipe::RunGPUDisplayPipe()::$_5&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824b95a8 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001824b95c0 (  0x2e2c) CoreDisplay::DisplayPipe::Commit(CoreDisplay::DisplayPipe::Transaction const&, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824bc3ec (    0xc0) UseCountProxy<std::__1::shared_ptr<CoreDisplay::DisplaySurface>>& std::__1::deque<UseCountProxy<std::__1::shared_ptr<CoreDisplay::DisplaySurface>>, std::__1::allocator<UseCountProxy<std::__1::shared_ptr<CoreDisplay::DisplaySurface>>>>::emplace_back<UseCountProxy<std::__1::shared_ptr<CoreDisplay::DisplaySurface>>&>(UseCountProxy<std::__1::shared_ptr<CoreDisplay::DisplaySurface>>&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824bc4ac (    0x7c) CoreDisplay::GetCommitDiagnose(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824bc528 (    0xc4) UseCountProxy<std::__1::shared_ptr<CoreDisplay::DisplaySurface>>& std::__1::deque<UseCountProxy<std::__1::shared_ptr<CoreDisplay::DisplaySurface>>, std::__1::allocator<UseCountProxy<std::__1::shared_ptr<CoreDisplay::DisplaySurface>>>>::emplace_back<std::__1::shared_ptr<CoreDisplay::DisplaySurface>>(std::__1::shared_ptr<CoreDisplay::DisplaySurface>&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824bc5ec (   0x47c) std::__1::deque<UseCountProxy<std::__1::shared_ptr<CoreDisplay::DisplaySurface>>, std::__1::allocator<UseCountProxy<std::__1::shared_ptr<CoreDisplay::DisplaySurface>>>>::__add_back_capacity() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824bca68 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<UseCountProxy<std::__1::shared_ptr<CoreDisplay::DisplaySurface>>*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<UseCountProxy<std::__1::shared_ptr<CoreDisplay::DisplaySurface>>*>>(std::__1::allocator<UseCountProxy<std::__1::shared_ptr<CoreDisplay::DisplaySurface>>*>&, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824bcaa0 (   0x8e0) CoreDisplay::DisplayPipe::CreateStateDict() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824bd380 (    0x98) CoreDisplay::DisplayPipe::NotifyIsReady() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824bd418 (   0x54c) CoreDisplay::DisplayPipe::NotifyIsActive(__IOSurface*, unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824bd964 (    0x18) std::__1::vector<CFTypePtr<__IOSurface*>, std::__1::allocator<CFTypePtr<__IOSurface*>>>::__throw_length_error[abi:v160006]() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824bd97c (    0x5c) std::__1::vector<CFTypePtr<__IOSurface*>, std::__1::allocator<CFTypePtr<__IOSurface*>>>::~vector[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824bd9d8 (    0x4c) CoreDisplay::DisplayPipe::Transaction::SetPlaneInput(std::__1::shared_ptr<CoreDisplay::DisplaySurface>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824bda24 (    0x8c) std::__1::optional<std::__1::vector<float, std::__1::allocator<float>>>& std::__1::optional<std::__1::vector<float, std::__1::allocator<float>>>::operator=[abi:v160006]<std::__1::vector<float, std::__1::allocator<float>>, void>(std::__1::vector<float, std::__1::allocator<float>>&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824bdab0 (    0x34) gsl::details::span_iterator<gsl::span<unsigned short, -1l>, false>::operator*() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824bdae4 (    0xec) std::__1::back_insert_iterator<std::__1::vector<float, std::__1::allocator<float>>>::operator=[abi:v160006](float&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824bdbd0 (   0x140) CoreDisplay::DisplayPipe::AllPendingSurfacesMatchModeSize() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824bdd10 (    0x3c) std::__1::unique_ptr<dispatch_queue_s, void (*)(dispatch_queue_s*)>::~unique_ptr[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824bdd4c (     0xc) CoreDisplay::ReleaseWSRootQueue(dispatch_queue_s*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824bdd58 (     0x8) CoreDisplay_IsPostingWSNotifications [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824bdd60 (    0x68) InitializeCoreDisplay [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824bddc8 (     0x8) CoreDisplay_IsSystem2012OrLater [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824bddd0 (    0x64) CoreDisplay::Mach::PortSet::~PortSet() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824bde34 (   0x240) CDWSNotifyProc [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824be074 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001824be084 (   0x160) CGXVFBMoveCursor [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824be1e4 (    0x1c) VFBHideCursor [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824be200 (    0x1c) VFBShowCursor [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824be21c (    0x5c) VFBSetCursorPosition [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824be278 (    0x18) VFBResetCursor [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824be290 (    0xfc) VFBForceShowCursor [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824be38c (    0x28) VFBRevealCursor [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824be3b4 (    0x30) VFBObscureCursor [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824be3e4 (    0xf4) VFBSetCursor [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824be4d8 (    0xe8) set_cursor_data [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824be5c0 (    0x1c) VFBHardwareCursorActive [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824be5dc (    0x44) VFBMaxCursorSize [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824be620 (   0x138) CoreDisplay_XRPresent [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824be758 (   0x138) CoreDisplay::EnableEDR(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824be890 (   0x1ac) CGSLogTimeline [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824bea3c (    0x98) find_or_create_timeline_logger(char const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824bead4 (    0x7c) CGSPrintableCString [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824beb50 (    0x88) CoreDisplay::Shape::Union(CoreDisplay::Shape const&) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824bebd8 (    0x88) CoreDisplay::Shape::Intersection(CoreDisplay::Shape const&) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824bec60 (    0x8c) CoreDisplay::Shape::Translate(float, float) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824becec (    0x88) CoreDisplay::Shape::Scale(float) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824bed74 (   0x190) CoreDisplay::Shape::GetRectList() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824bef04 (   0x1ec) WSSetSurfaceRegion [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824bf0f0 (   0xa78) CGXAcquireDisplayDeviceSurface [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824bfb68 (    0xdc) ws_padded_rowbytes(unsigned int, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824bfc44 (    0x64) dispose_display_device_surface(CGXDisplayDeviceSurface*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824bfca8 (   0x5b4) CGXAccessDisplayDeviceSurface [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c025c (   0xcb8) CGXReleaseDisplayDeviceSurface [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c0f14 (    0x88) CGXDisplayDeviceSurfaceCreate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c0f9c (     0x4) CGXDisplayDeviceSurfaceDestroy [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c0fa0 (     0xc) CGXDisplayDeviceSurfaceGetDevice [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c0fac (     0xc) CGXDisplayDeviceSurfaceGetXPos [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c0fb8 (     0xc) CGXDisplayDeviceSurfaceSetXPos [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c0fc4 (     0xc) CGXDisplayDeviceSurfaceGetYPos [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c0fd0 (     0xc) CGXDisplayDeviceSurfaceSetYPos [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c0fdc (     0xc) CGXDisplayDeviceSurfaceGetWidth [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c0fe8 (     0xc) CGXDisplayDeviceSurfaceSetWidth [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c0ff4 (     0xc) CGXDisplayDeviceSurfaceGetHeight [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c1000 (     0xc) CGXDisplayDeviceSurfaceSetHeight [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c100c (    0x10) CGXDisplayDeviceSurfaceGetBitsPerSample [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c101c (     0xc) CGXDisplayDeviceSurfaceGetAccelerator [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c1028 (     0xc) CGXDisplayDeviceSurfaceSetAccelerator [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c1034 (     0xc) CGXDisplayDeviceSurfaceGetCGLSContext [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c1040 (     0xc) CGXDisplayDeviceSurfaceSetCGLSContext [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c104c (     0xc) CGXDisplayDeviceSurfaceGetUpdateXPos [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c1058 (     0xc) CGXDisplayDeviceSurfaceGetUpdateYPos [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c1064 (     0xc) CGXDisplayDeviceSurfaceGetUpdateWidth [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c1070 (     0xc) CGXDisplayDeviceSurfaceGetUpdateHeight [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c107c (     0xc) CGXDisplayDeviceSurfaceGetSurfaceID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c1088 (    0x14) CGXDisplayDeviceSurfaceIsDeviceBuffer [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c109c (    0x14) CGXDisplayDeviceSurfaceIsDoubleBuffered [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c10b0 (     0xc) CGXDisplayDeviceSurfaceGetArea [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c10bc (     0xc) CGXDisplayDeviceSurfaceGetIOSurface [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c10c8 (     0xc) CGXDisplayDeviceSurfaceSetIOSurface [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c10d4 (     0xc) CGXDisplayDeviceSurfaceGetDataPtr [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c10e0 (     0xc) CGXDisplayDeviceSurfaceGetBytesPerRow [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c10ec (     0xc) CGXDisplayDeviceSurfaceGetUpdateRegion [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c10f8 (     0xc) CGXDisplayDeviceSurfaceGetCopyXPos [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c1104 (     0xc) CGXDisplayDeviceSurfaceGetCopyYPos [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c1110 (     0xc) CGXDisplayDeviceSurfaceGetDeviceCopyRegion [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c111c (     0xc) CGXDisplayDeviceSurfaceGetDeviceFlushRegion [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c1128 (   0x228) CDNotificationStartService [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c1350 (    0x68) std::__1::unordered_multimap<int, (anonymous namespace)::port_t, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<int const, (anonymous namespace)::port_t>>>::clear[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c13b8 (    0x6c) (anonymous namespace)::get_server_dispatch_queue() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c1424 (   0x788) invocation function for block in (anonymous namespace)::start_notification_service(char const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c1bac (   0x134) invocation function for block in (anonymous namespace)::start_notification_service(char const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c1ce0 (    0xb4) (anonymous namespace)::release_port(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c1d94 (   0x310) (anonymous namespace)::recv_msg(unsigned int, int*, int*, (anonymous namespace)::msg_type_t*, unsigned int*, int*, void*, int*, int*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c20a4 (    0xe0) std::__1::unordered_multimap<int, (anonymous namespace)::port_t, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<int const, (anonymous namespace)::port_t>>>::equal_range[abi:v160006](int const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c2184 (   0x150) std::__1::unordered_multimap<int, (anonymous namespace)::port_t, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<int const, (anonymous namespace)::port_t>>>::erase[abi:v160006](std::__1::__hash_map_iterator<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<int, (anonymous namespace)::port_t>, void*>*>>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c22d4 (   0x1e8) (anonymous namespace)::execute_handlers((anonymous namespace)::context_t*, int, int, void*, int, int*, void*, int*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c24bc (   0x1ec) (anonymous namespace)::send_data(unsigned int, int, void const*, int, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c26a8 (    0xb4) std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<int, (anonymous namespace)::handler_t>, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<int, (anonymous namespace)::handler_t>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, (anonymous namespace)::handler_t>, std::__1::hash<int>, std::__1::equal_to<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, (anonymous namespace)::handler_t>, std::__1::equal_to<int>, std::__1::hash<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, (anonymous namespace)::handler_t>>>::find<int>(int const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c275c (    0x88) invocation function for block in (anonymous namespace)::execute_handler((anonymous namespace)::handler_t, int, int, void*, int, int*, void*, int*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c27e4 (    0xb0) invocation function for block in (anonymous namespace)::get_audit_token_self() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c2894 (    0xb4) (anonymous namespace)::destroy_port(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c2948 (   0x134) CDNotificationPostNotification [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c2a7c (   0x150) (anonymous namespace)::execute_callbacks((anonymous namespace)::context_t*, int, void*, int, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c2bcc (   0x114) invocation function for block in (anonymous namespace)::post_notification(void*, int, void const*, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c2ce0 (   0x134) (anonymous namespace)::server_remove_client_with_no_send_right((anonymous namespace)::context_t*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c2e14 (    0x48) std::__1::unordered_multimap<int, (anonymous namespace)::callback_t, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<int const, (anonymous namespace)::callback_t>>>::equal_range[abi:v160006](int const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c2e5c (   0x160) (anonymous namespace)::execute_callback((anonymous namespace)::callback_t, int, void*, int, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c2fbc (    0x70) invocation function for block in (anonymous namespace)::execute_callback((anonymous namespace)::callback_t, int, void*, int, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c302c (    0xb4) std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<int, (anonymous namespace)::callback_t>, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<int, (anonymous namespace)::callback_t>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, (anonymous namespace)::callback_t>, std::__1::hash<int>, std::__1::equal_to<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, (anonymous namespace)::callback_t>, std::__1::equal_to<int>, std::__1::hash<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, (anonymous namespace)::callback_t>>>::find<int>(int const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c30e0 (   0x1b4) CDNotificationPostSynchronousNotification [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c3294 (   0x380) (anonymous namespace)::transceive_data(unsigned int, int, void*, int, int, unsigned int, int*, int*, int*, void*, int*, int*, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c3614 (    0xa0) CDNotificationPostLocalNotification [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c36b4 (    0x70) CDNotificationRegisterCallbackBlock [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c3724 (    0x48) invocation function for block in (anonymous namespace)::initialize_client_context(char const*, void*, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c376c (   0x234) invocation function for block in (anonymous namespace)::initialize_client_context(char const*, void*, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c39a0 (    0xd8) invocation function for block in (anonymous namespace)::initialize_client_context(char const*, void*, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c3a78 (     0xc) invocation function for block in (anonymous namespace)::setup_remote_port(char const*, unsigned int*, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c3a84 (    0x7c) CDNotificationRegisterCallbackBlockOnQueue [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c3b00 (    0x7c) CDNotificationRegisterCallbackFunctionOnQueue [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c3b7c (    0x60) CDNotificationRegisterWSDeathCallbackBlock [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c3bdc (    0xe0) (anonymous namespace)::register_server_death_callback_common(char const*, void*, dispatch_queue_s*, void (int, void*, int, void*) block_pointer, void*, void (*)(int, void*, int, void*), void*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c3cbc (    0x98) (anonymous namespace)::client_insert_server_death_callback_common((anonymous namespace)::context_t*, dispatch_queue_s*, void (int, void*, int, void*) block_pointer, void*, void (*)(int, void*, int, void*), void*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c3d54 (    0x60) CDNotificationRegisterWSDeathCallbackFunction [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c3db4 (    0x70) CDNotificationRegisterWSDeathCallbackBlockOnQueue [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c3e24 (    0x70) CDNotificationRegisterWSDeathCallbackFunctionOnQueue [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c3e94 (    0x74) CDNotificationRegisterLocalCallbackBlock [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c3f08 (    0x74) CDNotificationRegisterLocalCallbackFunction [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c3f7c (    0x80) CDNotificationRegisterLocalCallbackBlockOnQueue [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c3ffc (    0x80) CDNotificationRegisterLocalCallbackFunctionOnQueue [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c407c (    0xe4) CDNotificationUnregisterCallbackBlock [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c4160 (   0x150) std::__1::__hash_table<std::__1::__hash_value_type<int, (anonymous namespace)::callback_t>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, (anonymous namespace)::callback_t>, std::__1::hash<int>, std::__1::equal_to<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, (anonymous namespace)::callback_t>, std::__1::equal_to<int>, std::__1::hash<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, (anonymous namespace)::callback_t>>>::erase(std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<int, (anonymous namespace)::callback_t>, void*>*>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c42b0 (    0xd4) CDNotificationUnregisterCallbackFunction [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c4384 (    0xe8) CDNotificationUnregisterCallback [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c446c (    0xa0) WSIsDisplaySystemAirPlayCompatible [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c450c (    0x70) WSDisplayReconfigEnableDisplayUpdates [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c457c (    0xb8) CGXCreateDisplayRegion [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c4634 (    0x60) CGXNextOnlineEnabledDisplayDevice [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c4694 (    0x10) WSDisplayUpdatesAreDisabled [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c46a4 (    0x98) WSDisplayReconfigScheduleDisplayUpdate [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c473c (    0x84) display_update_callback(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c47c0 (   0x128) CGXGenerateDisplayID [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c48e8 (    0x48) CGXNextDisplayDevice [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c4930 (    0x18) CGXNextHardwareDisplayDevice [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c4948 (   0x328) CGXMonitorSetMatch [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c4c70 (   0x140) RebuildMonList [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c4db0 (    0x98) FreeMon [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c4e48 (    0x78) CGXOnlineDisplayDevices [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c4ec0 (    0xe0) CopyMonList [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c4fa0 (   0x120) logMonitorList [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c50c0 (    0xe4) CGXRegisterScreen [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c51a4 (    0x44) CGXDisplayROInfo [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c51e8 (     0xc) CGXCurrentDisplaySet [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c51f4 (   0x4e0) UpdateCGXDisplayDevice [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c56d4 (    0x60) WSDisplayDevSetIsOnline [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c5734 (     0xc) CGXServiceForDisplayDevice [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c5740 (    0xf8) AddCGXDisplayDeviceToDeviceList [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c5838 (    0xe4) CGXDisplayDeviceWithContainerID [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c591c (    0x68) CGXNextLiveDisplayDevice [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c5984 (   0x14c) GetLuminanceForContainer(__CFUUID const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c5ad0 (    0x14) __Block_byref_object_copy_.5062 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c5ae4 (     0x4) __Block_byref_object_dispose_.5063 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c5ae8 (    0x6c) GetHIDDispatchQueue() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c5b54 (   0x2cc) invocation function for block in GetLuminanceForContainer(__CFUUID const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c5e20 (    0x34) CFTypePtr<__IOHIDEvent*>::~CFTypePtr() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c5e54 (    0x34) CFTypePtr<__IOHIDDevice*>::~CFTypePtr() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c5e88 (    0x3c) scope_exit<GetHIDOrientationSensor(__CFUUID const*)::$_1>::~scope_exit() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c5ec4 (    0x3c) scope_exit<GetHIDOrientationSensor(__CFUUID const*)::$_0>::~scope_exit() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c5f00 (   0x11c) GetDisplayOrientation [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c601c (   0x448) GetOrientationForContainer(__CFUUID const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c6464 (   0x4b0) HIDEventAmbientLightSensorCallback(void*, void*, void*, __IOHIDEvent*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c6914 (    0x34) CFTypePtr<__CFBoolean const*>::~CFTypePtr() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c6948 (    0xa8) std::__1::__packaged_task_function<void (CFTypePtr<__CFUUID const*>, CoreDisplay::SensorLocation, double)>::~__packaged_task_function() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c69f0 (    0x50) std::__1::default_delete<std::__1::pair<std::__1::packaged_task<void (CFTypePtr<__CFUUID const*>, CoreDisplay::SensorLocation, double)>, std::__1::tuple<CFTypePtr<__CFUUID const*>, CoreDisplay::SensorLocation, double>>>::operator()[abi:v160006](std::__1::pair<std::__1::packaged_task<void (CFTypePtr<__CFUUID const*>, CoreDisplay::SensorLocation, double)>, std::__1::tuple<CFTypePtr<__CFUUID const*>, CoreDisplay::SensorLocation, double>>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c6a40 (   0x1ac) std::__1::future<std::__1::invoke_result<std::__1::decay<void (&)(CFTypePtr<__CFUUID const*>, CoreDisplay::SensorLocation, float)>::type, std::__1::decay<CFTypePtr<__CFUUID const*>&>::type, std::__1::decay<CoreDisplay::SensorLocation&>::type, std::__1::decay<double&>::type>::type> WSMainThreadDispatchAfter<void (&)(CFTypePtr<__CFUUID const*>, CoreDisplay::SensorLocation, float), CFTypePtr<__CFUUID const*>&, CoreDisplay::SensorLocation&, double&>(double, void (&)(CFTypePtr<__CFUUID const*>, CoreDisplay::SensorLocation, float), CFTypePtr<__CFUUID const*>&, CoreDisplay::SensorLocation&, double&)::'lambda'(void*, double)::__invoke(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c6bec (    0x90) std::__1::__packaged_task_func<void (*)(CFTypePtr<__CFUUID const*>, CoreDisplay::SensorLocation, float), std::__1::allocator<void (*)(CFTypePtr<__CFUUID const*>, CoreDisplay::SensorLocation, float)>, void (CFTypePtr<__CFUUID const*>, CoreDisplay::SensorLocation, double)>::operator()(CFTypePtr<__CFUUID const*>&&, CoreDisplay::SensorLocation&&, double&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c6c7c (     0x4) std::__1::__packaged_task_func<void (*)(CFTypePtr<__CFUUID const*>, CoreDisplay::SensorLocation, float), std::__1::allocator<void (*)(CFTypePtr<__CFUUID const*>, CoreDisplay::SensorLocation, float)>, void (CFTypePtr<__CFUUID const*>, CoreDisplay::SensorLocation, double)>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c6c80 (     0x4) std::__1::__packaged_task_func<void (*)(CFTypePtr<__CFUUID const*>, CoreDisplay::SensorLocation, float), std::__1::allocator<void (*)(CFTypePtr<__CFUUID const*>, CoreDisplay::SensorLocation, float)>, void (CFTypePtr<__CFUUID const*>, CoreDisplay::SensorLocation, double)>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c6c84 (    0x24) std::__1::__packaged_task_func<void (*)(CFTypePtr<__CFUUID const*>, CoreDisplay::SensorLocation, float), std::__1::allocator<void (*)(CFTypePtr<__CFUUID const*>, CoreDisplay::SensorLocation, float)>, void (CFTypePtr<__CFUUID const*>, CoreDisplay::SensorLocation, double)>::__move_to(std::__1::__packaged_task_base<void (CFTypePtr<__CFUUID const*>, CoreDisplay::SensorLocation, double)>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c6ca8 (     0x4) std::__1::__packaged_task_func<void (*)(CFTypePtr<__CFUUID const*>, CoreDisplay::SensorLocation, float), std::__1::allocator<void (*)(CFTypePtr<__CFUUID const*>, CoreDisplay::SensorLocation, float)>, void (CFTypePtr<__CFUUID const*>, CoreDisplay::SensorLocation, double)>::~__packaged_task_func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c6cac (     0x4) std::__1::__packaged_task_func<void (*)(CFTypePtr<__CFUUID const*>, CoreDisplay::SensorLocation, float), std::__1::allocator<void (*)(CFTypePtr<__CFUUID const*>, CoreDisplay::SensorLocation, float)>, void (CFTypePtr<__CFUUID const*>, CoreDisplay::SensorLocation, double)>::~__packaged_task_func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c6cb0 (    0x64) SetAmbientLuxForContainerID(CFTypePtr<__CFUUID const*>, CoreDisplay::SensorLocation, float) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c6d14 (    0xa8) std::__1::__packaged_task_function<void (double)>::~__packaged_task_function() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c6dbc (    0x54) std::__1::unique_ptr<std::__1::pair<std::__1::packaged_task<void (double)>, std::__1::tuple<double>>, std::__1::default_delete<std::__1::pair<std::__1::packaged_task<void (double)>, std::__1::tuple<double>>>>::reset[abi:v160006](std::__1::pair<std::__1::packaged_task<void (double)>, std::__1::tuple<double>>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c6e10 (   0x13c) std::__1::future<std::__1::invoke_result<std::__1::decay<void (&)(float)>::type, std::__1::decay<double&>::type>::type> WSMainThreadDispatchAfter<void (&)(float), double&>(double, void (&)(float), double&)::'lambda'(void*, double)::__invoke(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c6f4c (    0x10) std::__1::__packaged_task_func<void (*)(float), std::__1::allocator<void (*)(float)>, void (double)>::operator()(double&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c6f5c (     0x4) std::__1::__packaged_task_func<void (*)(float), std::__1::allocator<void (*)(float)>, void (double)>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c6f60 (     0x4) std::__1::__packaged_task_func<void (*)(float), std::__1::allocator<void (*)(float)>, void (double)>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c6f64 (    0x24) std::__1::__packaged_task_func<void (*)(float), std::__1::allocator<void (*)(float)>, void (double)>::__move_to(std::__1::__packaged_task_base<void (double)>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c6f88 (     0x4) std::__1::__packaged_task_func<void (*)(float), std::__1::allocator<void (*)(float)>, void (double)>::~__packaged_task_func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c6f8c (     0x4) std::__1::__packaged_task_func<void (*)(float), std::__1::allocator<void (*)(float)>, void (double)>::~__packaged_task_func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c6f90 (    0xa8) SetAmbientLuxForBuiltIn(float) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c7038 (    0x28) CoreDisplay_NotificationServiceInitialize [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c7060 (    0x50) __CoreDisplay_NotificationServiceInitialize_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c70b0 (   0xcd4) CGXDisplayDriverInitialize [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c7d84 (    0xb0) CGXSetDisplayConfigurationOrigin [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c7e34 (    0xac) setup_virtual_framebuffers() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c7ee0 (    0xd4) CGXOnlineEnabledHardwareDisplayDevices [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c7fb4 (   0x1a4) CGXSetDisplaySet [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c8158 (   0x15c) CGXIsHDRSupported [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c82b4 (   0x164) invocation function for block in StartIOHIDEventSystemClient() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c8418 (     0x8) __destroy_helper_block_e8_32c27_ZTS9CFTypePtrIP9__CFArrayE [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c8420 (    0x34) __copy_helper_block_e8_32c27_ZTS9CFTypePtrIP9__CFArrayE [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c8454 (    0x30) invocation function for block in StartIOHIDEventSystemClient() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c8484 (    0xa0) HIDEventCallback(void*, void*, void*, __IOHIDEvent*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c8524 (    0x88) __WSMachineIsMux_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c85ac (    0x98) __WSMachineIsAMD_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c8644 (    0xe8) increment_display_changed_seed() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c872c (    0xe8) CGXLatchLastDisplayLayoutChangedSeed [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c8814 (    0xf0) CGXIncrementDisplaySystemStateSeed [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c8904 (    0xbc) UpdateOnPowerSourceChange(unsigned int, mach_msg_header_t*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c89c0 (    0x8c) invocation function for block in first_run_since_boot() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c8a4c (    0x18) CGXIsHDREnabled [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c8a64 (    0x10) CGXActivateDisplays [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c8a74 (   0x1b0) CGXInitializeGamma [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c8c24 (    0xd0) __CGXInitializeGamma_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c8cf4 (   0x23c) stop_deferring_display_reconfiguration() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c8f30 (    0x4c) crossfade_bail() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c8f7c (   0x148) initialize_gamma_callback(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c90c4 (    0x70) CGXNextActiveDisplayDevice [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c9134 (   0x118) crossfade_callback(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c924c (    0x48) invocation function for block in release_deferred_display_config_data(WSDeferredDisplayConfigRecord*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c9294 (     0x4) stop_deferring_display_reconfiguration_callback(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c9298 (   0x7a4) CGXShutdownDisplays [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c9a3c (   0x220) CGXSetDisplayTransferByTable [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824c9c5c (   0x4ac) CGXSetDisplayIntentionWiper [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824ca108 (    0x5c) invocation function for block in StopIOHIDEventSystemClient() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824ca164 (    0x58) CGXNextOnlineDisplayDevice [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824ca1bc (   0x194) logOneDisplayState [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824ca350 (    0x90) logDisplayState [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824ca3e0 (    0x4c) CGXSynchronizeDisplayDrivers [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824ca42c (    0x70) CGXSynchronizeDisplayDevice [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824ca49c (    0x6c) CGXNextPotentiallyActiveDisplayDevice [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824ca508 (    0x5c) CGXNextHMDDisplayDevice [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824ca564 (    0x60) CGXNextAccessibilityDisplayDevice [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824ca5c4 (    0x10) CGXDisplayDeviceIsHMD [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824ca5d4 (    0x10) CGXDisplayDeviceIsAccessibilityDisplay [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824ca5e4 (    0x68) AdjustHWMirrorLoopDevicesForPrimary [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824ca64c (   0x400) WSCanonicalMirrorMasterForDisplayDevice [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824caa4c (   0x25c) CGXMainDisplayDevice [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824caca8 (    0xb0) CGXDisplayDeviceForDisplayID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cad58 (    0x48) WSDisplayIsCanonicalMirrorMaster [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cada0 (    0x3c) CGXActiveDisplayDevices [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824caddc (    0x5c) CGXPotentiallyActiveDisplayDevices [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cae38 (    0x50) CGXAllDisplayDevices [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cae88 (    0x8c) CGXDisplayDeviceForDisplayNumber [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824caf14 (    0x5c) CGXHWDisplayDeviceForDisplayID [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824caf70 (    0x4c) CoreDisplay_HWDisplayDeviceForDisplayID [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cafbc (    0xb0) CGXDisplayDeviceForAliasedMonitor [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cb06c (    0x98) CGXDisplayDeviceForMonitor [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cb104 (    0x2c) CGXDisplayHWDeviceForUnit [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cb130 (    0x98) CGXDisplayModeCreateWithModeNumber [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cb1c8 (    0x44) CGXCopyCurrentDisplayMode [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cb20c (    0x88) CGXCurrentDisplayModeIsDeep [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cb294 (    0xa8) CGXCreateWindowedDisplayRegion [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cb33c (     0xc) CGXGetSizeOfDisplayTransfer [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cb348 (   0x2d4) CGXSetDisplayTransferByFormula [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cb61c (    0x30) CGXGetDisplayMaximumHDRValue [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cb64c (    0x3c) WSUpdateHDRState [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cb688 (    0x18) CGXAcceleratorForDisplayDevice [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cb6a0 (   0x1bc) CGXGetActiveDisplaysNeedingUpdate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cb85c (   0x124) __CGXGetActiveDisplaysNeedingUpdate_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cb980 (    0xb4) CGXCreateRegionByMappingToDevice [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cba34 (    0x30) CGXSetOpenGLAcceleration [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cba64 (     0xc) CGXHWCopyRegion [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cba70 (     0xc) CGXHWFillRegion [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cba7c (     0xc) CGXHWMoveRegion [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cba88 (    0x74) CGXHWPurgeSurface [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cbafc (    0x5c) CGXHWCopyPixels [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cbb58 (    0x14) CGXHWWait [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cbb6c (    0x18) CGXFramebufferForDisplayDevice [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cbb84 (    0x18) CGXAccessSurfaceForDisplayDevice [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cbb9c (     0xc) CGXFinishSurfaceForDisplayDevice [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cbba8 (     0xc) CGXResetSurfaceForDisplayDevice [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cbbb4 (     0xc) CGXDisplayDeviceDidFlush [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cbbc0 (     0xc) CGXDisplayDeviceSurfaceIsReady [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cbbcc (     0xc) CGXAccessCaptureSurfaceForDisplayDevice [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cbbd8 (   0x16c) CGXDisplayUnionFlushShape [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cbd44 (    0xd4) CGXDisplayCreateCopyForwardShape [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cbe18 (     0xc) CGXDisplayDeviceGenerateUpdate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cbe24 (     0xc) CGXGetNextWakeupTime [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cbe30 (     0xc) CGXDisplayGetVBLTiming [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cbe3c (     0xc) WSDisplayIsAirPlayDevice [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cbe48 (    0xf4) _CGXGetDisplayShmem [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cbf3c (   0x138) CGXLockDisplayWithTimeout [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cc074 (    0x54) CGXDisplayChangedSeed [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cc0c8 (    0x24) CGXLastDisplayLayoutChangedSeed [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cc0ec (    0xb4) CGXUnlockDisplay [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cc1a0 (    0xe8) CGXIncrementDisplayMappingChangedSeed [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cc288 (    0x24) CGXLastDisplaySynchronizeSeed [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cc2ac (    0x30) CGXNextDisplaySynchronizeSeed [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cc2dc (    0x84) CGXUpdateDisplaySynchronizeSeed [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cc360 (    0xdc) CGXDisplaySynchronizeSeedTest [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cc43c (    0xd0) CGXGetDisplaysWithPoint [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cc50c (    0xe8) CGXGetDisplaysWithRect [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cc5f4 (    0xa8) CGXGetDisplaysWithRegion [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cc69c (    0xe4) CGXGetDisplaysWithFramebufferMask [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cc780 (   0x35c) CGXGetDisplayWithOptions [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824ccadc (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001824ccaec (    0x78) CGXDisplayFillBlack [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824ccb64 (   0x188) CGXDisplayFillBlackMatteIfNeeded [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cccec (   0x45c) CGXSetDisplayOption [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cd148 (    0x50) (null) [FUNC, FunctionStarts] 
                0x00000001824cd198 (    0xf4) setDeviceGrayscale(CGXDisplayDevice*, bool, CGXConnection*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cd28c (    0xe8) setDeviceReverseGamma(CGXDisplayDevice*, bool, CGXConnection*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cd374 (    0xa0) updateGrayscaleState(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cd414 (    0xc0) restoreDisplayGamma(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cd4d4 (    0xc4) CGXSetDisplayContrast [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cd598 (     0xc) CGXForceHardResetOnTermination [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cd5a4 (    0xd8) CGXDisplayUpdateDoNotDimState [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cd67c (    0x90) CGXAdjustDisplaysForScreenWatcher [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cd70c (    0x14) CGXDisplayRegisterExclusiveSurface [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cd720 (    0x28) CGXDisplayDeregisterExclusiveSurface [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cd748 (    0xd8) CGXDisplaySynchronizeExclusiveSurface [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cd820 (   0x48c) CGXCopyDisplayInfoDictionary [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cdcac (   0x3a8) add_additional_device_info(__CFDictionary*, CGXDisplayDevice*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824ce054 (    0xa8) void CoreDisplay::CFDictionaryAddValue<unsigned int>(__CFDictionary*, __CFString const*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824ce0fc (    0x64) displayWillCreateSessionProc [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824ce160 (    0x28) displayDidCreateSessionProc [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824ce188 (    0x60) displayWillDestroySessionProc [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824ce1e8 (    0xdc) displayDidDestroySessionProc [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824ce2c4 (   0x10c) displaySessionConsoleDisconnectProc [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824ce3d0 (   0x1ec) displaySessionConsoleConnectProc [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824ce5bc (    0x7c) setDeviceColorSpace(CGXDisplayDevice*, CGColorSpace*, CGXConnection*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824ce638 (    0x60) displayServerLoginNotifyProc [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824ce698 (    0x54) initialize_gamma_failsafe(void*, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824ce6ec (   0x10c) CGXDisplayRegisterSessionHandler [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824ce7f8 (   0x154) CGXSetDisplayColorProfile [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824ce94c (    0xb4) post_profile_changed_notification_and_force_repaint(CGXDisplayDevice*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cea00 (   0x340) CGXSetDisplayColorProfileAndTransfer [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824ced40 (    0x10) CGXGetDisplayColorProfileID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824ced50 (    0xd8) CGXDisplaySetPageFlip [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cee28 (    0xf0) CGXDisplaySetPipeGamma [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cef18 (     0x4) CGXDisplayEnableYUVModeOnDisplayPipe [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cef1c (   0x180) CGXDisplaySetResolution [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cf09c (    0xf4) compare_pixel_encodings [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cf190 (    0x68) bits_per_pixel_for_encoding [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cf1f8 (    0x68) bits_per_sample_for_encoding [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cf260 (    0x24) cinematic_boot_was_apple_preserved [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cf284 (    0xa0) __WSMachineUsesNewStyleMirroring_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cf324 (    0x54) WSGetGeometrySeed [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cf378 (    0x6c) CGXSetAccessibilityDisplay [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cf3e4 (    0x10) CGXIsAccessibilityDisplay [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cf3f4 (   0x214) GetGPUVendorForFramebufferService [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cf608 (   0x108) __GetSystemGPUVendors_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cf710 (   0x1b4) CDUpdateReconfigDeferral [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cf8c4 (   0x164) invocation function for block in update_and_validate_deferred_display_config_record(WSDeferredDisplayConfigRecord*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cfa28 (    0x9c) copy_display_sets_for_key(__CFString const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cfac4 (    0xd8) WSDeferringDisplayConfiguration [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cfb9c (   0x184) __WSDeferringDisplayConfiguration_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cfd20 (     0xc) WSDisplayReconfigureTime [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824cfd2c (  0x18fc) WSDisplayAddActiveDisplaysToExternalDebuggingDictionary [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d1628 (    0x8c) CGXDisplaySetDither [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d16b4 (     0xc) CGXDisplayGetDither [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d16c0 (   0x16c) CGXSetCursorWithBitmap [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d182c (     0xc) CGXSetServerRunningInBringupMode [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d1838 (     0xc) CGXSetServerRunningInSafeMode [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d1844 (   0x65c) CGXSetDisplayRotation [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d1ea0 (    0x50) CGXInvalidateGeometrySeed [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d1ef0 (    0x4c) CGXInitialGeometrySeed [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d1f3c (    0x78) CGXGetCurrentDisplayModeDescription [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d1fb4 (    0x58) CGXDisplayDeviceGetHDRScalingFactor [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d200c (    0xf0) CGXDisplayDeviceSetHDRScalingFactor [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d20fc (    0x14) CGXHWWaitTokenRelease [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d2110 (    0x50) CGXMPShowCursor [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d2160 (    0x50) CGXMaxCursorSize [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d21b0 (     0x8) CGXMPHardwareCursorSupported [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d21b8 (    0x50) CGXMPSetCursor [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d2208 (    0x50) CGXMPSetCursorPosition [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d2258 (    0x50) CGXMPResetCursor [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d22a8 (    0x50) CGXMPHideCursor [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d22f8 (    0x50) CGXMPForceShowCursor [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d2348 (    0x50) CGXMPRevealCursor [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d2398 (    0x50) CGXMPObscureCursor [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d23e8 (    0x50) CGXMPHardwareCursorActive [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d2438 (   0x35c) CoreDisplay_CopyCursorStateDict [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d2794 (    0x14) CGXMPRegisterScreen [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d27a8 (    0x84) invocation function for block in CoreDisplay::GTrace::CreateBuffer(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d282c (   0x2bc) CoreDisplay::MTLPixelFormatForIOSurface(__IOSurface*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d2ae8 (   0x114) CoreDisplay::FindAcceleratorWithMTLDevice() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d2bfc (   0xb50) CoreDisplay::MetalDevice::GetGPUPassRenderPipelineState(unsigned int, unsigned int, unsigned long) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d374c (    0x4c) std::__1::__hash_table<std::__1::__hash_value_type<CoreDisplay::KeyWithPixelFormat, id<MTLRenderPipelineState>>, std::__1::__unordered_map_hasher<CoreDisplay::KeyWithPixelFormat, id<MTLRenderPipelineState>, CoreDisplay::KeyWithPixelFormatHash, std::__1::equal_to<CoreDisplay::KeyWithPixelFormat>, true>, std::__1::__unordered_map_equal<CoreDisplay::KeyWithPixelFormat, id<MTLRenderPipelineState>, std::__1::equal_to, std::__1::__unordered_map_hasher, true>, std::__1::allocator<id<MTLRenderPipelineState>>>::~__hash_table() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d3798 (    0x4c) std::__1::__hash_table<std::__1::__hash_value_type<unsigned long, id<MTLRenderPipelineState>>, std::__1::__unordered_map_hasher<unsigned long, id<MTLRenderPipelineState>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, id<MTLRenderPipelineState>, std::__1::equal_to, std::__1::hash, true>, std::__1::allocator<id<MTLRenderPipelineState>>>::~__hash_table() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d37e4 (    0x4c) std::__1::__hash_table<std::__1::__hash_value_type<unsigned long long, id<MTLFunction>>, std::__1::__unordered_map_hasher<unsigned long long, id<MTLFunction>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, id<MTLFunction>, std::__1::equal_to, std::__1::hash, true>, std::__1::allocator<id<MTLFunction>>>::~__hash_table() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d3830 (   0x1e4) CoreDisplay::MetalDevice::GetMTLCommandQueue() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d3a14 (    0x10) __Block_byref_object_copy_.5624 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d3a24 (     0xc) __Block_byref_object_dispose_.5625 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d3a30 (    0x5c) invocation function for block in CoreDisplay::MetalDevice::GetMTLCommandQueue() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d3a8c (    0xb0) std::__1::__hash_iterator<std::__1::__hash_node<id<MTLRenderPipelineState>, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<unsigned long, id<MTLRenderPipelineState>>, std::__1::__unordered_map_hasher<unsigned long, id<MTLRenderPipelineState>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, id<MTLRenderPipelineState>, std::__1::equal_to, std::__1::hash, true>, std::__1::allocator<id<MTLRenderPipelineState>>>::find<unsigned long>(unsigned long const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d3b3c (   0x3e8) std::__1::pair<std::__1::__hash_iterator<std::__1::__hash_node<id<MTLRenderPipelineState>, void*>*>, bool> std::__1::__hash_table<std::__1::__hash_value_type<unsigned long, id<MTLRenderPipelineState>>, std::__1::__unordered_map_hasher<unsigned long, id<MTLRenderPipelineState>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, id<MTLRenderPipelineState>, std::__1::equal_to, std::__1::hash, true>, std::__1::allocator<id<MTLRenderPipelineState>>>::__emplace_unique_key_args<unsigned long, unsigned long&, objc_object<MTLRenderPipelineState>&>(unsigned long const&, unsigned long&, objc_object<MTLRenderPipelineState>&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d3f24 (    0x98) CoreDisplay::MakeOrtho2D(float, float, float, float) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d3fbc (  0x1638) CoreDisplay::MetalDevice::SurfaceColorFill(CoreDisplay::DisplaySurface&, float, float, float, float) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d55f4 (    0x88) CoreDisplay::GetMetalDeviceCache() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d567c (    0x2c) std::__1::map<unsigned int, std::__1::weak_ptr<CoreDisplay::MetalDevice>, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, std::__1::weak_ptr<CoreDisplay::MetalDevice>>>>::~map[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d56a8 (    0x58) std::__1::__tree<std::__1::__value_type<unsigned int, std::__1::weak_ptr<CoreDisplay::MetalDevice>>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::weak_ptr<CoreDisplay::MetalDevice>>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::weak_ptr<CoreDisplay::MetalDevice>>>>::destroy(std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::weak_ptr<CoreDisplay::MetalDevice>>, void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d5700 (   0x380) CoreDisplay::CreateMetalDevice(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d5a80 (    0xd8) std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<unsigned int, std::__1::weak_ptr<CoreDisplay::MetalDevice>>, std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::weak_ptr<CoreDisplay::MetalDevice>>, void*>*, long>, bool> std::__1::__tree<std::__1::__value_type<unsigned int, std::__1::weak_ptr<CoreDisplay::MetalDevice>>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::weak_ptr<CoreDisplay::MetalDevice>>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::weak_ptr<CoreDisplay::MetalDevice>>>>::__emplace_unique_key_args<unsigned int, std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned int const&>, std::__1::tuple<>>(unsigned int const&, std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned int const&>&&, std::__1::tuple<>&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d5b58 (     0x4) std::__1::__shared_ptr_emplace<CoreDisplay::MetalDevice, std::__1::allocator<CoreDisplay::MetalDevice>>::__on_zero_shared_weak() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d5b5c (   0x108) std::__1::__shared_ptr_emplace<CoreDisplay::MetalDevice, std::__1::allocator<CoreDisplay::MetalDevice>>::__on_zero_shared() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d5c64 (    0x44) std::__1::__shared_ptr_emplace<CoreDisplay::MetalDevice, std::__1::allocator<CoreDisplay::MetalDevice>>::~__shared_ptr_emplace() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d5ca8 (    0x20) std::__1::__shared_ptr_emplace<CoreDisplay::MetalDevice, std::__1::allocator<CoreDisplay::MetalDevice>>::~__shared_ptr_emplace() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d5cc8 (   0x664) CoreDisplay::Mach::Server::Server() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d632c (   0x15c) CoreDisplay::Mach::Server::Stop() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d6488 (    0xd8) CoreDisplay::Mach::Server::~Server() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d6560 (    0xf4) CoreDisplay::Mach::Server::Start() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d6654 (    0x50) std::__1::unique_ptr<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct>>, void (CoreDisplay::Mach::Server::*)(), CoreDisplay::Mach::Server*>, std::__1::default_delete<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct>>, void (CoreDisplay::Mach::Server::*)(), CoreDisplay::Mach::Server*>>>::reset[abi:v160006](std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct>>, void (CoreDisplay::Mach::Server::*)(), CoreDisplay::Mach::Server*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d66a4 (    0x40) std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct>>::reset[abi:v160006](std::__1::__thread_struct*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d66e4 (    0xbc) void* std::__1::__thread_proxy[abi:v160006]<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct>>, void (CoreDisplay::Mach::Server::*)(), CoreDisplay::Mach::Server*>>(void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d67a0 (    0xa0) CoreDisplay::Mach::GetMessageServer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d6840 (    0x18) std::__1::vector<std::__1::shared_ptr<CoreDisplay::DisplaySurface>, std::__1::allocator<std::__1::shared_ptr<CoreDisplay::DisplaySurface>>>::__throw_length_error[abi:v160006]() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d6858 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<std::__1::shared_ptr<CoreDisplay::DisplaySurface>>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<std::__1::shared_ptr<CoreDisplay::DisplaySurface>>>(std::__1::allocator<std::__1::shared_ptr<CoreDisplay::DisplaySurface>>&, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d6890 (    0x64) std::__1::vector<std::__1::shared_ptr<CoreDisplay::DisplaySurface>, std::__1::allocator<std::__1::shared_ptr<CoreDisplay::DisplaySurface>>>::__swap_out_circular_buffer(std::__1::__split_buffer<std::__1::shared_ptr<CoreDisplay::DisplaySurface>, std::__1::allocator<std::__1::shared_ptr<CoreDisplay::DisplaySurface>>&>&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d68f4 (    0x60) std::__1::__split_buffer<std::__1::shared_ptr<CoreDisplay::DisplaySurface>, std::__1::allocator<std::__1::shared_ptr<CoreDisplay::DisplaySurface>>&>::~__split_buffer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d6954 (   0x110) CoreDisplay::DisplaySurfacePool::DisplaySurfacePool(gsl::not_null<CoreDisplay::AbstractDisplay const*>, int, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d6a64 (    0x78) CoreDisplay::DisplaySurfacePool::GetCurrentSurface() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d6adc (   0x908) CoreDisplay::DisplaySurfacePool::GetNextSurface(int, int, CGSRegionObject*, CGSRegionObject*, CGSRegionObject*, double, double, unsigned int, CGColorSpace*, bool, unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d73e4 (    0xa4) std::__1::shared_ptr<CoreDisplay::DisplaySurface> std::__1::allocate_shared[abi:v160006]<CoreDisplay::DisplaySurface, std::__1::allocator<CoreDisplay::DisplaySurface>, __IOSurface*&, gsl::not_null<CoreDisplay::AbstractDisplay const*>&, bool&, unsigned long long&, void>(std::__1::allocator<CoreDisplay::DisplaySurface> const&, __IOSurface*&, gsl::not_null<CoreDisplay::AbstractDisplay const*>&, bool&, unsigned long long&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d7488 (    0x88) CoreDisplay::DisplaySurfacePool::IsReady() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d7510 (   0x20c) CoreDisplay::DisplaySurfacePool::AcceleratorChanged() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d771c (    0x74) CoreDisplay::DisplaySurfacePool::SetNeedsBlackFill(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d7790 (   0x1d8) CoreDisplay::DisplaySurfacePool::SurfaceUseCountString() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d7968 (   0x26c) CoreDisplay::DisplaySurfacePool::CreateStateDict() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d7bd4 (   0x334) cdglsInitialize [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d7f08 (    0x10) cdglsChoosePixelFormat [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d7f18 (    0x10) cdglsDestroyPixelFormat [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d7f28 (    0x24) cdglsQueryRendererInfo [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d7f4c (    0x24) cdglsDestroyRendererInfo [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d7f70 (   0x2bc) cdglsCreateContext [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d822c (    0x20) cdglsSetInteger [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d824c (   0x32c) cdglsDestroyContext [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d8578 (    0x20) cdglsGetPixelFormat [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d8598 (   0x18c) cdglsAttachDrawable [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d8724 (    0x14) cdglsGetVirtualScreen [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d8738 (    0x20) cdglsGetInteger [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d8758 (     0x8) cdglsAttachSurface [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d8760 (    0xfc) attach_surface [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d885c (     0x8) cdglsAttachSurfaceUnflipped [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d8864 (    0x68) cdglsGetSurface [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d88cc (   0x110) cdglsAttachState [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d89dc (    0x40) cdglsGetContext [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d8a1c (    0x58) cdglsGetState [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d8a74 (   0x138) cdglsCreatePBuffer [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d8bac (    0x64) cdglsDestroyPBuffer [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d8c10 (    0xa4) cdglsTexImagePBuffer [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d8cb4 (   0x21c) cdglsAttachPBuffer [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d8ed0 (    0x84) cdglsTexImageIOSurface2D [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d8f54 (    0x84) cdglsTexImagePBuffer2D [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d8fd8 (    0x80) cdglsTexImageSurface2D [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d9058 (    0xa0) CoreDisplay_CopyDisplayContainerID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d90f8 (     0x8) CoreDisplay_IODisplayCreateInfoDictionary [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d9100 (   0x11c) CoreDisplay_SystemHasNightShiftCabableDisplays [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d921c (     0xc) CoreDisplay_IsMetalProtectionEnabled [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d9228 (     0xc) CoreDisplay_SetMetalProtectionEnabled [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d9234 (    0x54) std::__1::unique_ptr<CoreDisplay::IOBacklightWrapper, std::__1::default_delete<CoreDisplay::IOBacklightWrapper>>::reset[abi:v160006](CoreDisplay::IOBacklightWrapper*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d9288 (    0x4c) scope_exit<auto make_scope_fail<CoreDisplay::Framebuffer::Framebuffer(unsigned int, unsigned long long, unsigned int, unsigned long long)::$_3>(CoreDisplay::Framebuffer::Framebuffer(unsigned int, unsigned long long, unsigned int, unsigned long long)::$_3)::'lambda'()>::~scope_exit() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d92d4 (    0x64) scope_exit<auto make_scope_fail<CoreDisplay::Framebuffer::Framebuffer(unsigned int, unsigned long long, unsigned int, unsigned long long)::$_2>(CoreDisplay::Framebuffer::Framebuffer(unsigned int, unsigned long long, unsigned int, unsigned long long)::$_2)::'lambda'()>::~scope_exit() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d9338 (    0x50) scope_exit<auto make_scope_fail<CoreDisplay::Framebuffer::Framebuffer(unsigned int, unsigned long long, unsigned int, unsigned long long)::$_1>(CoreDisplay::Framebuffer::Framebuffer(unsigned int, unsigned long long, unsigned int, unsigned long long)::$_1)::'lambda'()>::~scope_exit() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d9388 (    0x50) scope_exit<auto make_scope_fail<CoreDisplay::Framebuffer::Framebuffer(unsigned int, unsigned long long, unsigned int, unsigned long long)::$_0>(CoreDisplay::Framebuffer::Framebuffer(unsigned int, unsigned long long, unsigned int, unsigned long long)::$_0)::'lambda'()>::~scope_exit() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d93d8 (   0x1b4) CoreDisplay::Framebuffer::InitializeMPPrivAccelerator() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d958c (    0x18) std::__1::vector<std::__1::tuple<unsigned int, unsigned int>, std::__1::allocator<std::__1::tuple<unsigned int, unsigned int>>>::__throw_length_error[abi:v160006]() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d95a4 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<std::__1::tuple<unsigned int, unsigned int>>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<std::__1::tuple<unsigned int, unsigned int>>>(std::__1::allocator<std::__1::tuple<unsigned int, unsigned int>>&, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824d95dc (  0x1484) CoreDisplay::Framebuffer::Framebuffer(unsigned int, unsigned long long, unsigned int, unsigned long long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824daa60 (   0x41c) CoreDisplay::Framebuffer::~Framebuffer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824dae7c (    0xb8) CoreDisplay::Framebuffer::GetMappedDisplay() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824daf34 (   0x464) WSGLRegisterFramebufferService [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824db398 (    0x80) unit_manager() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824db418 (   0x1b4) void std::__1::vector<WSGLFramebufferInfo, std::__1::allocator<WSGLFramebufferInfo>>::__push_back_slow_path<WSGLFramebufferInfo const&>(WSGLFramebufferInfo const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824db5cc (    0x74) WSGLAcceleratorInfo::~WSGLAcceleratorInfo() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824db640 (   0x1ac) void std::__1::allocator<WSGLAcceleratorInfo>::construct[abi:v160006]<WSGLAcceleratorInfo, WSGLAcceleratorInfo const&>(WSGLAcceleratorInfo*, WSGLAcceleratorInfo const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824db7ec (    0x54) std::__1::vector<WSGLFramebufferInfo, std::__1::allocator<WSGLFramebufferInfo>>::__destroy_vector::operator()[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824db840 (    0x58) std::__1::vector<WSGLFramebufferInfo, std::__1::allocator<WSGLFramebufferInfo>>::__clear[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824db898 (    0x18) std::__1::vector<WSGLAcceleratorInfo, std::__1::allocator<WSGLAcceleratorInfo>>::__throw_length_error[abi:v160006]() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824db8b0 (    0x50) std::__1::__split_buffer<WSGLAcceleratorInfo, std::__1::allocator<WSGLAcceleratorInfo>&>::~__split_buffer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824db900 (    0x70) std::__1::allocator<WSGLAcceleratorInfo>::destroy[abi:v160006](WSGLAcceleratorInfo*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824db970 (    0x68) std::__1::__exception_guard_exceptions<std::__1::_AllocatorDestroyRangeReverse<std::__1::allocator<WSGLFramebufferInfo>, WSGLFramebufferInfo*>>::~__exception_guard_exceptions[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824db9d8 (    0x18) std::__1::vector<WSGLFramebufferInfo, std::__1::allocator<WSGLFramebufferInfo>>::__throw_length_error[abi:v160006]() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824db9f0 (    0x48) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<WSGLFramebufferInfo>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<WSGLFramebufferInfo>>(std::__1::allocator<WSGLFramebufferInfo>&, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824dba38 (    0x64) std::__1::__split_buffer<WSGLFramebufferInfo, std::__1::allocator<WSGLFramebufferInfo>&>::~__split_buffer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824dba9c (   0x5b0) WSGLAssignUnitNumbers [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824dc04c (   0xdec) void std::__1::__introsort<std::__1::_ClassicAlgPolicy, bool (*&)(WSGLAcceleratorInfo&, WSGLAcceleratorInfo&), WSGLAcceleratorInfo*>(WSGLAcceleratorInfo*, WSGLAcceleratorInfo*, bool (*&)(WSGLAcceleratorInfo&, WSGLAcceleratorInfo&), std::__1::iterator_traits<WSGLAcceleratorInfo*>::difference_type) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824dce38 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001824dce50 (   0x180) std::__1::enable_if<is_move_constructible<WSGLAcceleratorInfo>::value && is_move_assignable<WSGLAcceleratorInfo>::value, void>::type std::__1::swap[abi:v160006]<WSGLAcceleratorInfo>(WSGLAcceleratorInfo&, WSGLAcceleratorInfo&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824dcfd0 (    0x3c) std::__1::vector<WSGLFramebufferInfo, std::__1::allocator<WSGLFramebufferInfo>>::__vdeallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824dd00c (    0xe0) unsigned int std::__1::__sort3[abi:v160006]<std::__1::_ClassicAlgPolicy, bool (*&)(WSGLAcceleratorInfo&, WSGLAcceleratorInfo&), WSGLAcceleratorInfo*>(WSGLAcceleratorInfo*, WSGLAcceleratorInfo*, WSGLAcceleratorInfo*, bool (*&)(WSGLAcceleratorInfo&, WSGLAcceleratorInfo&)) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824dd0ec (    0xc4) unsigned int std::__1::__sort4[abi:v160006]<std::__1::_ClassicAlgPolicy, bool (*&)(WSGLAcceleratorInfo&, WSGLAcceleratorInfo&), WSGLAcceleratorInfo*>(WSGLAcceleratorInfo*, WSGLAcceleratorInfo*, WSGLAcceleratorInfo*, WSGLAcceleratorInfo*, bool (*&)(WSGLAcceleratorInfo&, WSGLAcceleratorInfo&)) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824dd1b0 (    0xf8) unsigned int std::__1::__sort5<bool (*&)(WSGLAcceleratorInfo&, WSGLAcceleratorInfo&), WSGLAcceleratorInfo*>(WSGLAcceleratorInfo*, WSGLAcceleratorInfo*, WSGLAcceleratorInfo*, WSGLAcceleratorInfo*, WSGLAcceleratorInfo*, bool (*&)(WSGLAcceleratorInfo&, WSGLAcceleratorInfo&)) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824dd2a8 (   0x344) bool std::__1::__insertion_sort_incomplete<bool (*&)(WSGLAcceleratorInfo&, WSGLAcceleratorInfo&), WSGLAcceleratorInfo*>(WSGLAcceleratorInfo*, WSGLAcceleratorInfo*, bool (*&)(WSGLAcceleratorInfo&, WSGLAcceleratorInfo&)) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824dd5ec (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001824dd604 (    0x40) accelerator_comparator(WSGLAcceleratorInfo&, WSGLAcceleratorInfo&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824dd644 (    0xbc) WSGLGetAssignedFramebufferUnitNumber [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824dd700 (    0x88) SLDisplayModeGetResolution [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824dd788 (    0x78) CDCGDisplayModeGetIOFlags [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824dd800 (    0xdc) CGDisplayModeMatchIgnoringBytesPerRow [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824dd8dc (    0xb8) CGDisplayModeMatchIgnoringModeNumberIgnoringKeys [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824dd994 (   0x100) mode_internal_key_value_pair_comparer(void const*, void const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824dda94 (     0x8) CGDisplayModeMatchIgnoringModeNumber [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824dda9c (    0x78) CGDisplayModeGetModeNum [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824ddb14 (    0x78) CGDisplayModeGetPixelDepthFormat [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824ddb8c (    0x84) CGDisplayModeGetBitPerSample [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824ddc10 (    0xd4) CGDisplayModeMatchIgnoringIOMode [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824ddce4 (    0x3c) CGDisplayModeIsSuitableForUI [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824ddd20 (    0x44) CGDisplayModeIsUnavailable [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824ddd64 (   0x35c) CGDisplayModeCreate [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824de0c0 (    0xe8) CoreDisplay::SaveTGA(unsigned char*, unsigned long, unsigned long, unsigned long, char const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824de1a8 (   0x1a4) CoreDisplay::SaveTGA(CGImage*, char const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824de34c (   0x108) CoreDisplay::SaveTGA(IOAccelConnectStruct*, char const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824de454 (   0x4d4) CoreDisplay::SaveTGA(IOAccelConnectStruct*, char const*, std::__1::vector<CGRect, std::__1::allocator<CGRect>>, std::__1::vector<CGRect, std::__1::allocator<CGRect>>, std::__1::vector<CGRect, std::__1::allocator<CGRect>>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824de928 (   0x260) CoreDisplay::SaveTIFF(IOAccelConnectStruct*, char const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824deb88 (    0x90) CoreDisplay::DrawRects(unsigned int*, unsigned int, unsigned int, std::__1::vector<CGRect, std::__1::allocator<CGRect>>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824dec18 (   0x484) CoreDisplay::SaveTIFF(void*, unsigned long, unsigned long, unsigned int, unsigned short, unsigned int, unsigned int, char const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824df09c (   0x108) CoreDisplay::SaveTGA(__IOSurface*, char const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824df1a4 (  0x1068) CoreDisplay::SaveTGA(__IOSurface*, char const*, std::__1::vector<CGRect, std::__1::allocator<CGRect>>, std::__1::vector<CGRect, std::__1::allocator<CGRect>>, std::__1::vector<CGRect, std::__1::allocator<CGRect>>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824e020c (   0x2fc) CoreDisplay::SaveTIFF(__IOSurface*, char const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824e0508 (   0x20c) CoreDisplay::Convert_420_to_RGB(char, int, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned char const*, unsigned char const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824e0714 (   0x27c) CoreDisplay::Convert_420_to_RGB_10(char, int, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned char const*, unsigned char const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824e0990 (     0xc) CoreDisplay::providerReleaseCFInfoCallback(void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824e099c (    0x48) CoreDisplay::providerReleaseBytePointerCallback(void*, void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824e09e4 (    0x78) CoreDisplay::providerGetBytePointerCallback(void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824e0a5c (   0x104) CoreDisplay::providerGetBytesAtPositionCallback_1C0h_surface(void*, void*, long long, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824e0b60 (    0x30) invocation function for block in CoreDisplay::providerGetBytesAtPositionCallback_1C0h_surface(void*, void*, long long, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824e0b90 (   0x1a4) CoreDisplay::SurfaceApplyPlaneReadOnlyBlock(__IOSurface*, void (void const*, unsigned long, unsigned long, unsigned long, unsigned long) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824e0d34 (   0x104) CoreDisplay::providerGetBytesAtPositionCallback_1C0f_surface(void*, void*, long long, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824e0e38 (    0x4c) invocation function for block in CoreDisplay::providerGetBytesAtPositionCallback_1C0f_surface(void*, void*, long long, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824e0e84 (   0x104) CoreDisplay::providerGetBytesAtPositionCallback_A008_surface(void*, void*, long long, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824e0f88 (    0x48) invocation function for block in CoreDisplay::providerGetBytesAtPositionCallback_A008_surface(void*, void*, long long, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824e0fd0 (   0x104) CoreDisplay::providerGetBytesAtPositionCallback_1C08_surface(void*, void*, long long, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824e10d4 (    0x4c) invocation function for block in CoreDisplay::providerGetBytesAtPositionCallback_1C08_surface(void*, void*, long long, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824e1120 (   0x104) CoreDisplay::providerGetBytesAtPositionCallback_2C0f_surface(void*, void*, long long, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824e1224 (    0x58) invocation function for block in CoreDisplay::providerGetBytesAtPositionCallback_2C0f_surface(void*, void*, long long, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824e127c (   0x104) CoreDisplay::providerGetBytesAtPositionCallback_2C0h_surface(void*, void*, long long, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824e1380 (    0x30) invocation function for block in CoreDisplay::providerGetBytesAtPositionCallback_2C0h_surface(void*, void*, long long, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824e13b0 (   0x104) CoreDisplay::providerGetBytesAtPositionCallback_CbYCrYFull_surface(void*, void*, long long, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824e14b4 (   0x108) invocation function for block in CoreDisplay::providerGetBytesAtPositionCallback_CbYCrYFull_surface(void*, void*, long long, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824e15bc (    0xcc) CoreDisplay::Convert_one_YCC_to_RGB(char, int, unsigned char*, unsigned char const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824e1688 (   0x17c) CoreDisplay::Convert_one_YCC_to_RGB_float(char, int, float*, float*, float*, float, float, float) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824e1804 (   0x104) CoreDisplay::providerGetBytesAtPositionCallback_YCbYCrFull_surface(void*, void*, long long, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824e1908 (   0x100) invocation function for block in CoreDisplay::providerGetBytesAtPositionCallback_YCbYCrFull_surface(void*, void*, long long, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824e1a08 (   0x104) CoreDisplay::providerGetBytesAtPositionCallback_CbYCrY_surface(void*, void*, long long, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824e1b0c (   0x108) invocation function for block in CoreDisplay::providerGetBytesAtPositionCallback_CbYCrY_surface(void*, void*, long long, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824e1c14 (   0x104) CoreDisplay::providerGetBytesAtPositionCallback_YCbYCr_surface(void*, void*, long long, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824e1d18 (   0x100) invocation function for block in CoreDisplay::providerGetBytesAtPositionCallback_YCbYCr_surface(void*, void*, long long, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824e1e18 (   0x104) CoreDisplay::providerGetBytesAtPositionCallback_2C08_surface(void*, void*, long long, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824e1f1c (    0x50) invocation function for block in CoreDisplay::providerGetBytesAtPositionCallback_2C08_surface(void*, void*, long long, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824e1f6c (   0x144) CoreDisplay::providerGetBytesAtPositionCallback_HtoF_surface(void*, void*, long long, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824e20b0 (    0x10) invocation function for block in CoreDisplay::providerGetBytesAtPositionCallback_HtoF_surface(void*, void*, long long, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824e20c0 (    0x30) _GLOBAL__sub_I_Utilities.cpp [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824e20f0 (    0x34) _GLOBAL__sub_I_Initialization.cpp.4743 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001824e2124 (    0x34) _GLOBAL__sub_I_Display.cpp.4957 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
            0x00000001824e2158 (  0x2f60) __TEXT __auth_stubs
                0x00000001824e2158 (    0x10) DYLD-STUB$$CC_MD5 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2168 (    0x10) DYLD-STUB$$CC_SHA1 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2178 (    0x10) DYLD-STUB$$CFArrayAppendValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2188 (    0x10) DYLD-STUB$$CFArrayApplyFunction [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2198 (    0x10) DYLD-STUB$$CFArrayContainsValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e21a8 (    0x10) DYLD-STUB$$CFArrayCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e21b8 (    0x10) DYLD-STUB$$CFArrayCreateMutable [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e21c8 (    0x10) DYLD-STUB$$CFArrayCreateMutableCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e21d8 (    0x10) DYLD-STUB$$CFArrayGetCount [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e21e8 (    0x10) DYLD-STUB$$CFArrayGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e21f8 (    0x10) DYLD-STUB$$CFArrayGetValueAtIndex [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2208 (    0x10) DYLD-STUB$$CFArrayInsertValueAtIndex [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2218 (    0x10) DYLD-STUB$$CFArrayRemoveValueAtIndex [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2228 (    0x10) DYLD-STUB$$CFArraySetValueAtIndex [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2238 (    0x10) DYLD-STUB$$CFArraySortValues [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2248 (    0x10) DYLD-STUB$$CFBooleanGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2258 (    0x10) DYLD-STUB$$CFBooleanGetValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2268 (    0x10) DYLD-STUB$$CFBundleCopyBundleLocalizations [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2278 (    0x10) DYLD-STUB$$CFBundleCopyBundleURL [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2288 (    0x10) DYLD-STUB$$CFBundleCopyLocalizationForLocalizationInfo [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2298 (    0x10) DYLD-STUB$$CFBundleCopyPreferredLocalizationsFromArray [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e22a8 (    0x10) DYLD-STUB$$CFBundleCopyResourceURLForLocalization [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e22b8 (    0x10) DYLD-STUB$$CFBundleCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e22c8 (    0x10) DYLD-STUB$$CFBundleGetIdentifier [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e22d8 (    0x10) DYLD-STUB$$CFBundleGetLocalizationInfoForLocalization [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e22e8 (    0x10) DYLD-STUB$$CFBundleGetValueForInfoDictionaryKey [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e22f8 (    0x10) DYLD-STUB$$CFCopyDescription [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2308 (    0x10) DYLD-STUB$$CFDataAppendBytes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2318 (    0x10) DYLD-STUB$$CFDataCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2328 (    0x10) DYLD-STUB$$CFDataCreateMutable [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2338 (    0x10) DYLD-STUB$$CFDataCreateWithBytesNoCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2348 (    0x10) DYLD-STUB$$CFDataGetBytePtr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2358 (    0x10) DYLD-STUB$$CFDataGetBytes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2368 (    0x10) DYLD-STUB$$CFDataGetLength [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2378 (    0x10) DYLD-STUB$$CFDataGetMutableBytePtr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2388 (    0x10) DYLD-STUB$$CFDataGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2398 (    0x10) DYLD-STUB$$CFDataSetLength [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e23a8 (    0x10) DYLD-STUB$$CFDictionaryAddValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e23b8 (    0x10) DYLD-STUB$$CFDictionaryApplyFunction [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e23c8 (    0x10) DYLD-STUB$$CFDictionaryContainsKey [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e23d8 (    0x10) DYLD-STUB$$CFDictionaryCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e23e8 (    0x10) DYLD-STUB$$CFDictionaryCreateCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e23f8 (    0x10) DYLD-STUB$$CFDictionaryCreateMutable [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2408 (    0x10) DYLD-STUB$$CFDictionaryCreateMutableCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2418 (    0x10) DYLD-STUB$$CFDictionaryGetCount [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2428 (    0x10) DYLD-STUB$$CFDictionaryGetKeysAndValues [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2438 (    0x10) DYLD-STUB$$CFDictionaryGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2448 (    0x10) DYLD-STUB$$CFDictionaryGetValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2458 (    0x10) DYLD-STUB$$CFDictionaryGetValueIfPresent [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2468 (    0x10) DYLD-STUB$$CFDictionaryRemoveValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2478 (    0x10) DYLD-STUB$$CFDictionaryReplaceValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2488 (    0x10) DYLD-STUB$$CFDictionarySetValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2498 (    0x10) DYLD-STUB$$CFEqual [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e24a8 (    0x10) DYLD-STUB$$CFErrorCopyDescription [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e24b8 (    0x10) DYLD-STUB$$CFGetRetainCount [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e24c8 (    0x10) DYLD-STUB$$CFGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e24d8 (    0x10) DYLD-STUB$$CFHash [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e24e8 (    0x10) DYLD-STUB$$CFLocaleCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e24f8 (    0x10) DYLD-STUB$$CFNumberCompare [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2508 (    0x10) DYLD-STUB$$CFNumberCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2518 (    0x10) DYLD-STUB$$CFNumberGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2528 (    0x10) DYLD-STUB$$CFNumberGetValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2538 (    0x10) DYLD-STUB$$CFPreferencesCopyValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2548 (    0x10) DYLD-STUB$$CFPropertyListCreateData [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2558 (    0x10) DYLD-STUB$$CFPropertyListCreateFromXMLData [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2568 (    0x10) DYLD-STUB$$CFPropertyListCreateWithData [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2578 (    0x10) DYLD-STUB$$CFPropertyListCreateXMLData [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2588 (    0x10) DYLD-STUB$$CFPropertyListWrite [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2598 (    0x10) DYLD-STUB$$CFRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e25a8 (    0x10) DYLD-STUB$$CFRetain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e25b8 (    0x10) DYLD-STUB$$CFStringAppendCString [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e25c8 (    0x10) DYLD-STUB$$CFStringAppendFormat [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e25d8 (    0x10) DYLD-STUB$$CFStringCompare [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e25e8 (    0x10) DYLD-STUB$$CFStringCreateByCombiningStrings [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e25f8 (    0x10) DYLD-STUB$$CFStringCreateFromExternalRepresentation [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2608 (    0x10) DYLD-STUB$$CFStringCreateMutableCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2618 (    0x10) DYLD-STUB$$CFStringCreateWithBytes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2628 (    0x10) DYLD-STUB$$CFStringCreateWithCString [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2638 (    0x10) DYLD-STUB$$CFStringCreateWithFileSystemRepresentation [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2648 (    0x10) DYLD-STUB$$CFStringCreateWithFormat [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2658 (    0x10) DYLD-STUB$$CFStringFind [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2668 (    0x10) DYLD-STUB$$CFStringGetCString [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2678 (    0x10) DYLD-STUB$$CFStringGetCStringPtr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2688 (    0x10) DYLD-STUB$$CFStringGetLength [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2698 (    0x10) DYLD-STUB$$CFStringGetMaximumSizeForEncoding [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e26a8 (    0x10) DYLD-STUB$$CFStringGetSystemEncoding [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e26b8 (    0x10) DYLD-STUB$$CFStringGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e26c8 (    0x10) DYLD-STUB$$CFStringUppercase [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e26d8 (    0x10) DYLD-STUB$$CFURLCopyPath [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e26e8 (    0x10) DYLD-STUB$$CFURLCreateDataAndPropertiesFromResource [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e26f8 (    0x10) DYLD-STUB$$CFURLCreateFromFileSystemRepresentation [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2708 (    0x10) DYLD-STUB$$CFURLCreateWithFileSystemPath [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2718 (    0x10) DYLD-STUB$$CFUUIDCreateFromString [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2728 (    0x10) DYLD-STUB$$CFUUIDCreateFromUUIDBytes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2738 (    0x10) DYLD-STUB$$CFUUIDCreateString [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2748 (    0x10) DYLD-STUB$$CFUUIDCreateWithBytes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2758 (    0x10) DYLD-STUB$$CFUUIDGetConstantUUIDWithBytes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2768 (    0x10) DYLD-STUB$$CFUUIDGetUUIDBytes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2778 (    0x10) DYLD-STUB$$CFWriteStreamClose [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2788 (    0x10) DYLD-STUB$$CFWriteStreamCreateWithFile [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2798 (    0x10) DYLD-STUB$$CFWriteStreamOpen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e27a8 (    0x10) DYLD-STUB$$CGAffineTransformConcat [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e27b8 (    0x10) DYLD-STUB$$CGAffineTransformInvert [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e27c8 (    0x10) DYLD-STUB$$CGAffineTransformIsIdentity [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e27d8 (    0x10) DYLD-STUB$$CGAffineTransformMakeScale [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e27e8 (    0x10) DYLD-STUB$$CGAffineTransformMakeTranslation [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e27f8 (    0x10) DYLD-STUB$$CGAffineTransformScale [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2808 (    0x10) DYLD-STUB$$CGAffineTransformTranslate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2818 (    0x10) DYLD-STUB$$CGBitmapContextCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2828 (    0x10) DYLD-STUB$$CGBlt_copyBytes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2838 (    0x10) DYLD-STUB$$CGBlt_fillBytes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2848 (    0x10) DYLD-STUB$$CGColorCurveGetGamma [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2858 (    0x10) DYLD-STUB$$CGColorCurveGetParameters [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2868 (    0x10) DYLD-STUB$$CGColorCurveGetTRC [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2878 (    0x10) DYLD-STUB$$CGColorCurveMapValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2888 (    0x10) DYLD-STUB$$CGColorCurveRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2898 (    0x10) DYLD-STUB$$CGColorMatrixConcat [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e28a8 (    0x10) DYLD-STUB$$CGColorSpaceCopyICCProfileDescription [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e28b8 (    0x10) DYLD-STUB$$CGColorSpaceCopyPropertyList [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e28c8 (    0x10) DYLD-STUB$$CGColorSpaceCreateConversionCurve [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e28d8 (    0x10) DYLD-STUB$$CGColorSpaceCreateDeviceGray [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e28e8 (    0x10) DYLD-STUB$$CGColorSpaceCreateDeviceRGB [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e28f8 (    0x10) DYLD-STUB$$CGColorSpaceCreateWithName [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2908 (    0x10) DYLD-STUB$$CGColorSpaceCreateWithPropertyList [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2918 (    0x10) DYLD-STUB$$CGColorSpaceEqualToColorSpace [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2928 (    0x10) DYLD-STUB$$CGColorSpaceGetConversionMatrix [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2938 (    0x10) DYLD-STUB$$CGColorSpaceGetIdentifier [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2948 (    0x10) DYLD-STUB$$CGColorSpaceRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2958 (    0x10) DYLD-STUB$$CGColorSpaceRetain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2968 (    0x10) DYLD-STUB$$CGContextDrawImage [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2978 (    0x10) DYLD-STUB$$CGContextRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2988 (    0x10) DYLD-STUB$$CGContextScaleCTM [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2998 (    0x10) DYLD-STUB$$CGContextTranslateCTM [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e29a8 (    0x10) DYLD-STUB$$CGDataProviderCreateDirect [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e29b8 (    0x10) DYLD-STUB$$CGDataProviderCreateWithCFData [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e29c8 (    0x10) DYLD-STUB$$CGDataProviderCreateWithCopyOfData [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e29d8 (    0x10) DYLD-STUB$$CGDataProviderRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e29e8 (    0x10) DYLD-STUB$$CGDisplayModeGetHeight [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e29f8 (    0x10) DYLD-STUB$$CGDisplayModeGetIODisplayModeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2a08 (    0x10) DYLD-STUB$$CGDisplayModeGetPixelHeight [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2a18 (    0x10) DYLD-STUB$$CGDisplayModeGetPixelWidth [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2a28 (    0x10) DYLD-STUB$$CGDisplayModeGetPixelsWide [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2a38 (    0x10) DYLD-STUB$$CGDisplayModeGetRefreshRate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2a48 (    0x10) DYLD-STUB$$CGDisplayModeGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2a58 (    0x10) DYLD-STUB$$CGDisplayModeGetWidth [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2a68 (    0x10) DYLD-STUB$$CGDisplayModeRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2a78 (    0x10) DYLD-STUB$$CGDisplayModeRetain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2a88 (    0x10) DYLD-STUB$$CGGetOnlineDisplayList [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2a98 (    0x10) DYLD-STUB$$CGImageCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2aa8 (    0x10) DYLD-STUB$$CGImageGetColorSpace [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2ab8 (    0x10) DYLD-STUB$$CGImageGetHeight [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2ac8 (    0x10) DYLD-STUB$$CGImageGetWidth [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2ad8 (    0x10) DYLD-STUB$$CGImageRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2ae8 (    0x10) DYLD-STUB$$CGPointMakeWithDictionaryRepresentation [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2af8 (    0x10) DYLD-STUB$$CGPostError [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2b08 (    0x10) DYLD-STUB$$CGRectApplyAffineTransform [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2b18 (    0x10) DYLD-STUB$$CGRectContainsPoint [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2b28 (    0x10) DYLD-STUB$$CGRectContainsRect [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2b38 (    0x10) DYLD-STUB$$CGRectEqualToRect [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2b48 (    0x10) DYLD-STUB$$CGRectGetMaxX [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2b58 (    0x10) DYLD-STUB$$CGRectGetMaxY [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2b68 (    0x10) DYLD-STUB$$CGRectGetMidX [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2b78 (    0x10) DYLD-STUB$$CGRectGetMidY [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2b88 (    0x10) DYLD-STUB$$CGRectGetMinX [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2b98 (    0x10) DYLD-STUB$$CGRectGetMinY [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2ba8 (    0x10) DYLD-STUB$$CGRectIntegral [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2bb8 (    0x10) DYLD-STUB$$CGRectIntersection [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2bc8 (    0x10) DYLD-STUB$$CGRectIntersectsRect [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2bd8 (    0x10) DYLD-STUB$$CGRectIsEmpty [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2be8 (    0x10) DYLD-STUB$$CGRectIsNull [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2bf8 (    0x10) DYLD-STUB$$CGRectOffset [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2c08 (    0x10) DYLD-STUB$$CGRectUnion [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2c18 (    0x10) DYLD-STUB$$CGRegionCreateCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2c28 (    0x10) DYLD-STUB$$CGRegionCreateDifferenceWithRegion [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2c38 (    0x10) DYLD-STUB$$CGRegionCreateEmptyRegion [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2c48 (    0x10) DYLD-STUB$$CGRegionCreateIntersectionWithRegion [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2c58 (    0x10) DYLD-STUB$$CGRegionCreateUnionWithRegion [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2c68 (    0x10) DYLD-STUB$$CGRegionCreateWithOffset [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2c78 (    0x10) DYLD-STUB$$CGRegionCreateWithRect [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2c88 (    0x10) DYLD-STUB$$CGRegionCreateWithRects [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2c98 (    0x10) DYLD-STUB$$CGRegionEnumeratorCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2ca8 (    0x10) DYLD-STUB$$CGRegionEnumeratorCreateWithDirection [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2cb8 (    0x10) DYLD-STUB$$CGRegionEnumeratorGetNextRect [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2cc8 (    0x10) DYLD-STUB$$CGRegionEnumeratorRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2cd8 (    0x10) DYLD-STUB$$CGRegionEqualToRegion [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2ce8 (    0x10) DYLD-STUB$$CGRegionForwardEnumeratorGetNextRect [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2cf8 (    0x10) DYLD-STUB$$CGRegionForwardEnumeratorMake [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2d08 (    0x10) DYLD-STUB$$CGRegionGetBoundingBox [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2d18 (    0x10) DYLD-STUB$$CGRegionGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2d28 (    0x10) DYLD-STUB$$CGRegionIntersectsRegion [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2d38 (    0x10) DYLD-STUB$$CGRegionIsEmpty [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2d48 (    0x10) DYLD-STUB$$CGRegionRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2d58 (    0x10) DYLD-STUB$$CGRegionRetain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2d68 (    0x10) DYLD-STUB$$CGSCopyDisplayModePixelEncoding [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2d78 (    0x10) DYLD-STUB$$CGSDisplayChangedSeed [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2d88 (    0x10) DYLD-STUB$$CGSDisplayMappingChangedSeed [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2d98 (    0x10) DYLD-STUB$$CGSDisplayStatusQuery [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2da8 (    0x10) DYLD-STUB$$CGSInitialize [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2db8 (    0x10) DYLD-STUB$$CGSNextRect [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2dc8 (    0x10) DYLD-STUB$$CGSRegionEnumerator [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2dd8 (    0x10) DYLD-STUB$$CGSReleaseRegionEnumerator [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2de8 (    0x10) DYLD-STUB$$CGSizeMakeWithDictionaryRepresentation [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2df8 (    0x10) DYLD-STUB$$DSBrightnessExternalConvertLinearToUser [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2e08 (    0x10) DYLD-STUB$$DSBrightnessExternalConvertUserToLinear [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2e18 (    0x10) DYLD-STUB$$DSBrightnessExternalCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2e28 (    0x10) DYLD-STUB$$DSBrightnessExternalGetLinearBrightness [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2e38 (    0x10) DYLD-STUB$$DSBrightnessExternalGetRanges [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2e48 (    0x10) DYLD-STUB$$DSBrightnessExternalRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2e58 (    0x10) DYLD-STUB$$DSBrightnessExternalSetLinearBrightness [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2e68 (    0x10) DYLD-STUB$$GPUWranglerClose [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2e78 (    0x10) DYLD-STUB$$GPUWranglerDispatchEvent [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2e88 (    0x10) DYLD-STUB$$GPUWranglerForEachGPU [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2e98 (    0x10) DYLD-STUB$$GPUWranglerGPUByID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2ea8 (    0x10) DYLD-STUB$$GPUWranglerGPUCopyPropertyStr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2eb8 (    0x10) DYLD-STUB$$GPUWranglerGPUCopyRegistryService [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2ec8 (    0x10) DYLD-STUB$$GPUWranglerGPUEjectFinalized [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2ed8 (    0x10) DYLD-STUB$$GPUWranglerGPUGetAttribute [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2ee8 (    0x10) DYLD-STUB$$GPUWranglerGPUGetFramebufferAccelIndex [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2ef8 (    0x10) DYLD-STUB$$GPUWranglerGPUGetFramebufferCount [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2f08 (    0x10) DYLD-STUB$$GPUWranglerGPUGetID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2f18 (    0x10) DYLD-STUB$$GPUWranglerGPUGetPCIDeviceID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2f28 (    0x10) DYLD-STUB$$GPUWranglerGPUGetPCIVendorID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2f38 (    0x10) DYLD-STUB$$GPUWranglerGPUGetPropertyBool [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2f48 (    0x10) DYLD-STUB$$GPUWranglerGPUGetRegistryEntryID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2f58 (    0x10) DYLD-STUB$$GPUWranglerGPUIsEjectFinalized [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2f68 (    0x10) DYLD-STUB$$GPUWranglerGPUIsEjectFinalizing [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2f78 (    0x10) DYLD-STUB$$GPUWranglerGPUIsIntegrated [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2f88 (    0x10) DYLD-STUB$$GPUWranglerGPUIsRemovable [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2f98 (    0x10) DYLD-STUB$$GPUWranglerGetEventPort [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2fa8 (    0x10) DYLD-STUB$$GPUWranglerOpen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2fb8 (    0x10) DYLD-STUB$$GPUWranglerRegisterEventBlock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2fc8 (    0x10) DYLD-STUB$$GPUWranglerWaitForPublish [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2fd8 (    0x10) DYLD-STUB$$IOAccelCreateAccelID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2fe8 (    0x10) DYLD-STUB$$IOAccelCreateSurface [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e2ff8 (    0x10) DYLD-STUB$$IOAccelDestroyAccelID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3008 (    0x10) DYLD-STUB$$IOAccelDestroySurface [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3018 (    0x10) DYLD-STUB$$IOAccelDeviceCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3028 (    0x10) DYLD-STUB$$IOAccelDeviceGetConfig64 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3038 (    0x10) DYLD-STUB$$IOAccelDeviceRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3048 (    0x10) DYLD-STUB$$IOAccelFindAccelerator [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3058 (    0x10) DYLD-STUB$$IOAccelFlushSurfaceOnFramebuffers [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3068 (    0x10) DYLD-STUB$$IOAccelReadLockSurfaceWithOptions [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3078 (    0x10) DYLD-STUB$$IOAccelReadSurface [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3088 (    0x10) DYLD-STUB$$IOAccelReadUnlockSurface [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3098 (    0x10) DYLD-STUB$$IOAccelReadUnlockSurfaceWithOptions [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e30a8 (    0x10) DYLD-STUB$$IOAccelSetSurfaceFramebufferShape [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e30b8 (    0x10) DYLD-STUB$$IOAccelSetSurfaceFramebufferShapeWithBackingAndLength [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e30c8 (    0x10) DYLD-STUB$$IOAccelSetSurfaceScale [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e30d8 (    0x10) DYLD-STUB$$IOAccelSurfaceControl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e30e8 (    0x10) DYLD-STUB$$IOAccelWaitForSurface [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e30f8 (    0x10) DYLD-STUB$$IOAccelWriteLockSurface [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3108 (    0x10) DYLD-STUB$$IOAccelWriteLockSurfaceWithOptions [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3118 (    0x10) DYLD-STUB$$IOAccelWriteUnlockSurfaceWithOptions [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3128 (    0x10) DYLD-STUB$$IOConnectAddClient [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3138 (    0x10) DYLD-STUB$$IOConnectCallMethod [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3148 (    0x10) DYLD-STUB$$IOConnectCallScalarMethod [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3158 (    0x10) DYLD-STUB$$IOConnectCallStructMethod [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3168 (    0x10) DYLD-STUB$$IOConnectGetService [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3178 (    0x10) DYLD-STUB$$IOConnectMapMemory [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3188 (    0x10) DYLD-STUB$$IOConnectSetCFProperty [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3198 (    0x10) DYLD-STUB$$IOConnectSetNotificationPort [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e31a8 (    0x10) DYLD-STUB$$IOConnectUnmapMemory [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e31b8 (    0x10) DYLD-STUB$$IOCreatePlugInInterfaceForService [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e31c8 (    0x10) DYLD-STUB$$IODestroyPlugInInterface [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e31d8 (    0x10) DYLD-STUB$$IODispatchCalloutFromMessage [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e31e8 (    0x10) DYLD-STUB$$IOHIDDeviceClose [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e31f8 (    0x10) DYLD-STUB$$IOHIDDeviceCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3208 (    0x10) DYLD-STUB$$IOHIDDeviceGetProperty [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3218 (    0x10) DYLD-STUB$$IOHIDDeviceGetReport [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3228 (    0x10) DYLD-STUB$$IOHIDDeviceOpen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3238 (    0x10) DYLD-STUB$$IOHIDEventCreateVendorDefinedEvent [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3248 (    0x10) DYLD-STUB$$IOHIDEventGetDataValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3258 (    0x10) DYLD-STUB$$IOHIDEventGetFloatValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3268 (    0x10) DYLD-STUB$$IOHIDEventGetIntegerValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3278 (    0x10) DYLD-STUB$$IOHIDEventGetType [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3288 (    0x10) DYLD-STUB$$IOHIDEventSystemClientActivate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3298 (    0x10) DYLD-STUB$$IOHIDEventSystemClientCancel [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e32a8 (    0x10) DYLD-STUB$$IOHIDEventSystemClientCopyServices [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e32b8 (    0x10) DYLD-STUB$$IOHIDEventSystemClientCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e32c8 (    0x10) DYLD-STUB$$IOHIDEventSystemClientRegisterEventCallback [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e32d8 (    0x10) DYLD-STUB$$IOHIDEventSystemClientSetCancelHandler [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e32e8 (    0x10) DYLD-STUB$$IOHIDEventSystemClientSetDispatchQueue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e32f8 (    0x10) DYLD-STUB$$IOHIDEventSystemClientSetMatchingMultiple [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3308 (    0x10) DYLD-STUB$$IOHIDEventSystemClientUnregisterDeviceMatchingBlock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3318 (    0x10) DYLD-STUB$$IOHIDEventSystemClientUnregisterEventCallback [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3328 (    0x10) DYLD-STUB$$IOHIDRegisterVirtualDisplay [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3338 (    0x10) DYLD-STUB$$IOHIDServiceClientConformsTo [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3348 (    0x10) DYLD-STUB$$IOHIDServiceClientCopyEvent [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3358 (    0x10) DYLD-STUB$$IOHIDServiceClientCopyProperty [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3368 (    0x10) DYLD-STUB$$IOHIDSetCursorBounds [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3378 (    0x10) DYLD-STUB$$IOHIDSetCursorEnable [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3388 (    0x10) DYLD-STUB$$IOHIDSetVirtualDisplayBounds [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3398 (    0x10) DYLD-STUB$$IOIteratorIsValid [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e33a8 (    0x10) DYLD-STUB$$IOIteratorNext [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e33b8 (    0x10) DYLD-STUB$$IOIteratorReset [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e33c8 (    0x10) DYLD-STUB$$IOLoadPEFsFromURL [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e33d8 (    0x10) DYLD-STUB$$IOMainPort [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e33e8 (    0x10) DYLD-STUB$$IONotificationPortCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e33f8 (    0x10) DYLD-STUB$$IONotificationPortGetMachPort [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3408 (    0x10) DYLD-STUB$$IOObjectConformsTo [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3418 (    0x10) DYLD-STUB$$IOObjectCopyClass [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3428 (    0x10) DYLD-STUB$$IOObjectRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3438 (    0x10) DYLD-STUB$$IOObjectRetain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3448 (    0x10) DYLD-STUB$$IOPMAssertionCreateWithName [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3458 (    0x10) DYLD-STUB$$IOPMAssertionRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3468 (    0x10) DYLD-STUB$$IOPMLogWakeProgress [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3478 (    0x10) DYLD-STUB$$IOPSCopyPowerSourcesInfo [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3488 (    0x10) DYLD-STUB$$IOPSGetTimeRemainingEstimate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3498 (    0x10) DYLD-STUB$$IOPSPowerSourceSupported [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e34a8 (    0x10) DYLD-STUB$$IOPlatformGetDeviceColor [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e34b8 (    0x10) DYLD-STUB$$IOPresentmentBegin [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e34c8 (    0x10) DYLD-STUB$$IOPresentmentBindIOAccelSurfaceToResource [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e34d8 (    0x10) DYLD-STUB$$IOPresentmentBindIOSurfaceToResourcePlane [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e34e8 (    0x10) DYLD-STUB$$IOPresentmentCapabilitiesStructureFree [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e34f8 (    0x10) DYLD-STUB$$IOPresentmentCapabilitiesStructureFromDictionary [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3508 (    0x10) DYLD-STUB$$IOPresentmentCopyCapabilities [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3518 (    0x10) DYLD-STUB$$IOPresentmentCreateForRegistryID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3528 (    0x10) DYLD-STUB$$IOPresentmentCreateGPUWranglerEventHandler [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3538 (    0x10) DYLD-STUB$$IOPresentmentCreateNotifyCallback [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3548 (    0x10) DYLD-STUB$$IOPresentmentCreateResource [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3558 (    0x10) DYLD-STUB$$IOPresentmentDestroy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3568 (    0x10) DYLD-STUB$$IOPresentmentDestroyResource [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3578 (    0x10) DYLD-STUB$$IOPresentmentEnableGPUWranglerEvents [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3588 (    0x10) DYLD-STUB$$IOPresentmentEnd [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3598 (    0x10) DYLD-STUB$$IOPresentmentGetMap [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e35a8 (    0x10) DYLD-STUB$$IOPresentmentInitialize [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e35b8 (    0x10) DYLD-STUB$$IOPresentmentIsActive [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e35c8 (    0x10) DYLD-STUB$$IOPresentmentQueryTransactionState [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e35d8 (    0x10) DYLD-STUB$$IOPresentmentReleaseMap [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e35e8 (    0x10) DYLD-STUB$$IOPresentmentSetPipeColorMatrix [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e35f8 (    0x10) DYLD-STUB$$IOPresentmentSetPipeGammaTable [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3608 (    0x10) DYLD-STUB$$IOPresentmentSetPlaneLinearizationTable [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3618 (    0x10) DYLD-STUB$$IOPresentmentSetPlaneState [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3628 (    0x10) DYLD-STUB$$IOPresentmentSetSDP [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3638 (    0x10) DYLD-STUB$$IOPresentmentSetVerticalBlankingExtensions [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3648 (    0x10) DYLD-STUB$$IOPresentmentTerminate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3658 (    0x10) DYLD-STUB$$IOPresentmentTransactionBindResource [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3668 (    0x10) DYLD-STUB$$IOPresentmentTransactionRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3678 (    0x10) DYLD-STUB$$IOPresentmentTransactionSet [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3688 (    0x10) DYLD-STUB$$IOPresentmentWaitActive [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3698 (    0x10) DYLD-STUB$$IORegistryEntryCopyPath [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e36a8 (    0x10) DYLD-STUB$$IORegistryEntryCreateCFProperties [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e36b8 (    0x10) DYLD-STUB$$IORegistryEntryCreateCFProperty [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e36c8 (    0x10) DYLD-STUB$$IORegistryEntryCreateIterator [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e36d8 (    0x10) DYLD-STUB$$IORegistryEntryFromPath [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e36e8 (    0x10) DYLD-STUB$$IORegistryEntryGetName [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e36f8 (    0x10) DYLD-STUB$$IORegistryEntryGetPath [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3708 (    0x10) DYLD-STUB$$IORegistryEntryGetProperty [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3718 (    0x10) DYLD-STUB$$IORegistryEntryGetRegistryEntryID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3728 (    0x10) DYLD-STUB$$IORegistryEntryIDMatching [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3738 (    0x10) DYLD-STUB$$IORegistryEntrySearchCFProperty [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3748 (    0x10) DYLD-STUB$$IORegistryEntrySetCFProperties [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3758 (    0x10) DYLD-STUB$$IORegistryEntrySetCFProperty [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3768 (    0x10) DYLD-STUB$$IORegistryGetRootEntry [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3778 (    0x10) DYLD-STUB$$IOServiceAddInterestNotification [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3788 (    0x10) DYLD-STUB$$IOServiceClose [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3798 (    0x10) DYLD-STUB$$IOServiceGetBusyState [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e37a8 (    0x10) DYLD-STUB$$IOServiceGetMatchingService [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e37b8 (    0x10) DYLD-STUB$$IOServiceGetMatchingServices [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e37c8 (    0x10) DYLD-STUB$$IOServiceMatching [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e37d8 (    0x10) DYLD-STUB$$IOServiceOpen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e37e8 (    0x10) DYLD-STUB$$IOServiceRequestProbe [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e37f8 (    0x10) DYLD-STUB$$IOServiceWaitQuiet [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3808 (    0x10) DYLD-STUB$$IOSurfaceAlignProperty [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3818 (    0x10) DYLD-STUB$$IOSurfaceBindAccel [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3828 (    0x10) DYLD-STUB$$IOSurfaceCopyValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3838 (    0x10) DYLD-STUB$$IOSurfaceCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3848 (    0x10) DYLD-STUB$$IOSurfaceDecrementUseCount [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3858 (    0x10) DYLD-STUB$$IOSurfaceGetAllocSize [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3868 (    0x10) DYLD-STUB$$IOSurfaceGetBaseAddress [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3878 (    0x10) DYLD-STUB$$IOSurfaceGetBaseAddressOfPlane [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3888 (    0x10) DYLD-STUB$$IOSurfaceGetBulkAttachments [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3898 (    0x10) DYLD-STUB$$IOSurfaceGetBytesPerElement [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e38a8 (    0x10) DYLD-STUB$$IOSurfaceGetBytesPerRow [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e38b8 (    0x10) DYLD-STUB$$IOSurfaceGetBytesPerRowOfPlane [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e38c8 (    0x10) DYLD-STUB$$IOSurfaceGetElementHeight [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e38d8 (    0x10) DYLD-STUB$$IOSurfaceGetElementWidth [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e38e8 (    0x10) DYLD-STUB$$IOSurfaceGetHeight [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e38f8 (    0x10) DYLD-STUB$$IOSurfaceGetHeightOfPlane [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3908 (    0x10) DYLD-STUB$$IOSurfaceGetID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3918 (    0x10) DYLD-STUB$$IOSurfaceGetIndexedTimestamp [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3928 (    0x10) DYLD-STUB$$IOSurfaceGetPixelFormat [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3938 (    0x10) DYLD-STUB$$IOSurfaceGetPlaneCount [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3948 (    0x10) DYLD-STUB$$IOSurfaceGetProtectionOptions [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3958 (    0x10) DYLD-STUB$$IOSurfaceGetWidth [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3968 (    0x10) DYLD-STUB$$IOSurfaceGetWidthOfPlane [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3978 (    0x10) DYLD-STUB$$IOSurfaceIncrementUseCount [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3988 (    0x10) DYLD-STUB$$IOSurfaceLock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3998 (    0x10) DYLD-STUB$$IOSurfaceLog [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e39a8 (    0x10) DYLD-STUB$$IOSurfaceSetBulkAttachments2 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e39b8 (    0x10) DYLD-STUB$$IOSurfaceSetDetachModeCode [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e39c8 (    0x10) DYLD-STUB$$IOSurfaceSetPurgeable [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e39d8 (    0x10) DYLD-STUB$$IOSurfaceSetValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e39e8 (    0x10) DYLD-STUB$$IOSurfaceSetYCbCrMatrix [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e39f8 (    0x10) DYLD-STUB$$IOSurfaceUnlock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3a08 (    0x10) DYLD-STUB$$MTLCopyAllDevices [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3a18 (    0x10) DYLD-STUB$$MTLCopyDeviceForRegistryID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3a28 (    0x10) DYLD-STUB$$SCDynamicStoreCopyConsoleUser [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3a38 (    0x10) DYLD-STUB$$_Block_copy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3a48 (    0x10) DYLD-STUB$$_Block_object_assign [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3a58 (    0x10) DYLD-STUB$$_Block_object_dispose [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3a68 (    0x10) DYLD-STUB$$_Block_release [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3a78 (    0x10) DYLD-STUB$$_CFBundleCreateWithExecutableURLIfLooksLikeBundle [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3a88 (    0x10) DYLD-STUB$$_CFCopySystemVersionDictionary [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3a98 (    0x10) DYLD-STUB$$_CFRuntimeCreateInstance [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3aa8 (    0x10) DYLD-STUB$$_GPUWranglerGPUGetKernGPU [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3ab8 (    0x10) DYLD-STUB$$_Unwind_Resume [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3ac8 (    0x10) DYLD-STUB$$std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::compare(char const*) const [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3ad8 (    0x10) DYLD-STUB$$std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char>>::str() const [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3ae8 (    0x10) DYLD-STUB$$std::__1::locale::use_facet(std::__1::locale::id&) const [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3af8 (    0x10) DYLD-STUB$$std::__1::ios_base::getloc() const [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3b08 (    0x10) DYLD-STUB$$std::logic_error::logic_error(char const*) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3b18 (    0x10) DYLD-STUB$$std::logic_error::logic_error(std::logic_error const&) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3b28 (    0x10) DYLD-STUB$$std::exception_ptr::exception_ptr(std::exception_ptr const&) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3b38 (    0x10) DYLD-STUB$$std::exception_ptr::~exception_ptr() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3b48 (    0x10) DYLD-STUB$$std::runtime_error::runtime_error(char const*) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3b58 (    0x10) DYLD-STUB$$std::runtime_error::runtime_error(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3b68 (    0x10) DYLD-STUB$$std::bad_array_new_length::bad_array_new_length() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3b78 (    0x10) DYLD-STUB$$std::__1::__call_once(unsigned long volatile&, void*, void (*)(void*)) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3b88 (    0x10) DYLD-STUB$$std::__1::__next_prime(unsigned long) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3b98 (    0x10) DYLD-STUB$$std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::append(char const*) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3ba8 (    0x10) DYLD-STUB$$std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::append(char const*, unsigned long) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3bb8 (    0x10) DYLD-STUB$$std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::assign(char const*) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3bc8 (    0x10) DYLD-STUB$$std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::push_back(char) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3bd8 (    0x10) DYLD-STUB$$std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::basic_string(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3be8 (    0x10) DYLD-STUB$$std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::operator=(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3bf8 (    0x10) DYLD-STUB$$std::__1::future_error::future_error(std::__1::error_code) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3c08 (    0x10) DYLD-STUB$$std::__1::future_error::~future_error() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3c18 (    0x10) DYLD-STUB$$std::__1::basic_istream<char, std::__1::char_traits<char>>::sentry::sentry(std::__1::basic_istream<char, std::__1::char_traits<char>>&, bool) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3c28 (    0x10) DYLD-STUB$$std::__1::basic_ostream<char, std::__1::char_traits<char>>::sentry::sentry(std::__1::basic_ostream<char, std::__1::char_traits<char>>&) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3c38 (    0x10) DYLD-STUB$$std::__1::basic_ostream<char, std::__1::char_traits<char>>::sentry::~sentry() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3c48 (    0x10) DYLD-STUB$$std::__1::basic_ostream<char, std::__1::char_traits<char>>::~basic_ostream() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3c58 (    0x10) DYLD-STUB$$std::__1::basic_ostream<char, std::__1::char_traits<char>>::operator<<(void const*) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3c68 (    0x10) DYLD-STUB$$std::__1::basic_ostream<char, std::__1::char_traits<char>>::operator<<(double) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3c78 (    0x10) DYLD-STUB$$std::__1::basic_ostream<char, std::__1::char_traits<char>>::operator<<(float) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3c88 (    0x10) DYLD-STUB$$std::__1::basic_ostream<char, std::__1::char_traits<char>>::operator<<(int) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3c98 (    0x10) DYLD-STUB$$std::__1::basic_ostream<char, std::__1::char_traits<char>>::operator<<(unsigned int) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3ca8 (    0x10) DYLD-STUB$$std::__1::basic_ostream<char, std::__1::char_traits<char>>::operator<<(long) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3cb8 (    0x10) DYLD-STUB$$std::__1::basic_ostream<char, std::__1::char_traits<char>>::operator<<(unsigned long) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3cc8 (    0x10) DYLD-STUB$$std::__1::basic_ostream<char, std::__1::char_traits<char>>::operator<<(unsigned short) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3cd8 (    0x10) DYLD-STUB$$std::__1::basic_ostream<char, std::__1::char_traits<char>>::operator<<(unsigned long long) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3ce8 (    0x10) DYLD-STUB$$std::__1::__shared_count::~__shared_count() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3cf8 (    0x10) DYLD-STUB$$std::__1::basic_iostream<char, std::__1::char_traits<char>>::~basic_iostream() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3d08 (    0x10) DYLD-STUB$$std::__1::__thread_struct::__thread_struct() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3d18 (    0x10) DYLD-STUB$$std::__1::__thread_struct::~__thread_struct() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3d28 (    0x10) DYLD-STUB$$std::__1::basic_streambuf<char, std::__1::char_traits<char>>::basic_streambuf() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3d38 (    0x10) DYLD-STUB$$std::__1::basic_streambuf<char, std::__1::char_traits<char>>::~basic_streambuf() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3d48 (    0x10) DYLD-STUB$$std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char>>::str(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3d58 (    0x10) DYLD-STUB$$std::__1::future_category() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3d68 (    0x10) DYLD-STUB$$std::__1::__assoc_sub_state::__sub_wait(std::__1::unique_lock<std::__1::mutex>&) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3d78 (    0x10) DYLD-STUB$$std::__1::__assoc_sub_state::set_exception(std::exception_ptr) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3d88 (    0x10) DYLD-STUB$$std::__1::condition_variable::notify_all() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3d98 (    0x10) DYLD-STUB$$std::__1::condition_variable::__do_timed_wait(std::__1::unique_lock<std::__1::mutex>&, std::__1::chrono::time_point<std::__1::chrono::system_clock, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000000000l>>>) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3da8 (    0x10) DYLD-STUB$$std::__1::condition_variable::wait(std::__1::unique_lock<std::__1::mutex>&) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3db8 (    0x10) DYLD-STUB$$std::__1::condition_variable::~condition_variable() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3dc8 (    0x10) DYLD-STUB$$std::__1::shared_timed_mutex::lock_shared() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3dd8 (    0x10) DYLD-STUB$$std::__1::shared_timed_mutex::unlock_shared() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3de8 (    0x10) DYLD-STUB$$std::__1::shared_timed_mutex::try_lock_shared() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3df8 (    0x10) DYLD-STUB$$std::__1::shared_timed_mutex::lock() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3e08 (    0x10) DYLD-STUB$$std::__1::shared_timed_mutex::unlock() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3e18 (    0x10) DYLD-STUB$$std::__1::shared_timed_mutex::shared_timed_mutex() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3e28 (    0x10) DYLD-STUB$$std::__1::__shared_weak_count::__release_weak() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3e38 (    0x10) DYLD-STUB$$std::__1::__shared_weak_count::lock() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3e48 (    0x10) DYLD-STUB$$std::__1::__shared_weak_count::~__shared_weak_count() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3e58 (    0x10) DYLD-STUB$$std::__1::__thread_local_data() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3e68 (    0x10) DYLD-STUB$$std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char>>::operator=(std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char>>&&) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3e78 (    0x10) DYLD-STUB$$std::__1::__throw_system_error(int, char const*) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3e88 (    0x10) DYLD-STUB$$std::__1::mutex::lock() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3e98 (    0x10) DYLD-STUB$$std::__1::mutex::unlock() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3ea8 (    0x10) DYLD-STUB$$std::__1::mutex::~mutex() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3eb8 (    0x10) DYLD-STUB$$std::__1::chrono::steady_clock::now() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3ec8 (    0x10) DYLD-STUB$$std::__1::chrono::system_clock::now() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3ed8 (    0x10) DYLD-STUB$$std::__1::future<void>::get() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3ee8 (    0x10) DYLD-STUB$$std::__1::future<void>::~future() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3ef8 (    0x10) DYLD-STUB$$std::__1::locale::~locale() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3f08 (    0x10) DYLD-STUB$$std::__1::thread::join() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3f18 (    0x10) DYLD-STUB$$std::__1::thread::~thread() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3f28 (    0x10) DYLD-STUB$$std::__1::promise<void>::get_future() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3f38 (    0x10) DYLD-STUB$$std::__1::promise<void>::set_exception(std::exception_ptr) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3f48 (    0x10) DYLD-STUB$$std::__1::promise<void>::set_value() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3f58 (    0x10) DYLD-STUB$$std::__1::promise<void>::promise() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3f68 (    0x10) DYLD-STUB$$std::__1::promise<void>::~promise() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3f78 (    0x10) DYLD-STUB$$std::__1::ios_base::__set_badbit_and_consider_rethrow() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3f88 (    0x10) DYLD-STUB$$std::__1::ios_base::init(void*) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3f98 (    0x10) DYLD-STUB$$std::__1::ios_base::clear(unsigned int) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3fa8 (    0x10) DYLD-STUB$$std::__1::basic_ios<char, std::__1::char_traits<char>>::~basic_ios() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3fb8 (    0x10) DYLD-STUB$$std::__1::to_string(int) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3fc8 (    0x10) DYLD-STUB$$std::__1::to_string(unsigned int) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3fd8 (    0x10) DYLD-STUB$$std::exception::~exception() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3fe8 (    0x10) DYLD-STUB$$std::current_exception() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e3ff8 (    0x10) DYLD-STUB$$std::rethrow_exception(std::exception_ptr) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4008 (    0x10) DYLD-STUB$$std::uncaught_exceptions() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4018 (    0x10) DYLD-STUB$$std::terminate() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4028 (    0x10) DYLD-STUB$$operator delete[](void*) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4038 (    0x10) DYLD-STUB$$operator delete(void*) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4048 (    0x10) DYLD-STUB$$operator new[](unsigned long) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4058 (    0x10) DYLD-STUB$$operator new(unsigned long) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4068 (    0x10) DYLD-STUB$$__assert_rtn [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4078 (    0x10) DYLD-STUB$$__cxa_allocate_exception [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4088 (    0x10) DYLD-STUB$$__cxa_atexit [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4098 (    0x10) DYLD-STUB$$__cxa_begin_catch [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e40a8 (    0x10) DYLD-STUB$$__cxa_demangle [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e40b8 (    0x10) DYLD-STUB$$__cxa_end_catch [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e40c8 (    0x10) DYLD-STUB$$__cxa_free_exception [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e40d8 (    0x10) DYLD-STUB$$__cxa_guard_abort [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e40e8 (    0x10) DYLD-STUB$$__cxa_guard_acquire [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e40f8 (    0x10) DYLD-STUB$$__cxa_guard_release [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4108 (    0x10) DYLD-STUB$$__cxa_rethrow [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4118 (    0x10) DYLD-STUB$$__cxa_throw [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4128 (    0x10) DYLD-STUB$$__error [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4138 (    0x10) DYLD-STUB$$__maskrune [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4148 (    0x10) DYLD-STUB$$__stack_chk_fail [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4158 (    0x10) DYLD-STUB$$_exit [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4168 (    0x10) DYLD-STUB$$_os_log_debug_impl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4178 (    0x10) DYLD-STUB$$_os_log_error_impl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4188 (    0x10) DYLD-STUB$$_os_log_fault_impl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4198 (    0x10) DYLD-STUB$$_os_log_impl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e41a8 (    0x10) DYLD-STUB$$_os_nospin_lock_lock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e41b8 (    0x10) DYLD-STUB$$_os_nospin_lock_trylock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e41c8 (    0x10) DYLD-STUB$$_os_nospin_lock_unlock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e41d8 (    0x10) DYLD-STUB$$_os_signpost_emit_with_name_impl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e41e8 (    0x10) DYLD-STUB$$_sl_dlopen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e41f8 (    0x10) DYLD-STUB$$abort [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4208 (    0x10) DYLD-STUB$$abort_report_np [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4218 (    0x10) DYLD-STUB$$access [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4228 (    0x10) DYLD-STUB$$asctime [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4238 (    0x10) DYLD-STUB$$asprintf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4248 (    0x10) DYLD-STUB$$audit_token_to_pid [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4258 (    0x10) DYLD-STUB$$audit_token_to_pidversion [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4268 (    0x10) DYLD-STUB$$auditon [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4278 (    0x10) DYLD-STUB$$backtrace [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4288 (    0x10) DYLD-STUB$$backtrace_symbols [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4298 (    0x10) DYLD-STUB$$basename [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e42a8 (    0x10) DYLD-STUB$$bootstrap_check_in [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e42b8 (    0x10) DYLD-STUB$$bootstrap_look_up [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e42c8 (    0x10) DYLD-STUB$$bootstrap_strerror [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e42d8 (    0x10) DYLD-STUB$$bzero [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e42e8 (    0x10) DYLD-STUB$$cache_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e42f8 (    0x10) DYLD-STUB$$cache_get_and_retain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4308 (    0x10) DYLD-STUB$$cache_release_value [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4318 (    0x10) DYLD-STUB$$cache_remove_all [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4328 (    0x10) DYLD-STUB$$cache_set_and_retain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4338 (    0x10) DYLD-STUB$$calloc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4348 (    0x10) DYLD-STUB$$chdir [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4358 (    0x10) DYLD-STUB$$close [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4368 (    0x10) DYLD-STUB$$cos [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4378 (    0x10) DYLD-STUB$$crc32 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4388 (    0x10) DYLD-STUB$$csr_check [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4398 (    0x10) DYLD-STUB$$ctime_r [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e43a8 (    0x10) DYLD-STUB$$dispatch_after [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e43b8 (    0x10) DYLD-STUB$$dispatch_apply [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e43c8 (    0x10) DYLD-STUB$$dispatch_assert_queue$V2 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e43d8 (    0x10) DYLD-STUB$$dispatch_async [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e43e8 (    0x10) DYLD-STUB$$dispatch_async_f [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e43f8 (    0x10) DYLD-STUB$$dispatch_get_global_queue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4408 (    0x10) DYLD-STUB$$dispatch_once [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4418 (    0x10) DYLD-STUB$$dispatch_pthread_root_queue_copy_current [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4428 (    0x10) DYLD-STUB$$dispatch_pthread_root_queue_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4438 (    0x10) DYLD-STUB$$dispatch_queue_attr_make_with_qos_class [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4448 (    0x10) DYLD-STUB$$dispatch_queue_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4458 (    0x10) DYLD-STUB$$dispatch_release [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4468 (    0x10) DYLD-STUB$$dispatch_resume [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4478 (    0x10) DYLD-STUB$$dispatch_retain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4488 (    0x10) DYLD-STUB$$dispatch_semaphore_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4498 (    0x10) DYLD-STUB$$dispatch_semaphore_signal [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e44a8 (    0x10) DYLD-STUB$$dispatch_semaphore_wait [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e44b8 (    0x10) DYLD-STUB$$dispatch_set_target_queue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e44c8 (    0x10) DYLD-STUB$$dispatch_source_cancel [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e44d8 (    0x10) DYLD-STUB$$dispatch_source_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e44e8 (    0x10) DYLD-STUB$$dispatch_source_set_cancel_handler [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e44f8 (    0x10) DYLD-STUB$$dispatch_source_set_event_handler [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4508 (    0x10) DYLD-STUB$$dispatch_source_set_timer [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4518 (    0x10) DYLD-STUB$$dispatch_sync [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4528 (    0x10) DYLD-STUB$$dispatch_time [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4538 (    0x10) DYLD-STUB$$dladdr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4548 (    0x10) DYLD-STUB$$dlclose [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4558 (    0x10) DYLD-STUB$$dlerror [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4568 (    0x10) DYLD-STUB$$dlopen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4578 (    0x10) DYLD-STUB$$dlsym [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4588 (    0x10) DYLD-STUB$$dup2 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4598 (    0x10) DYLD-STUB$$execle [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e45a8 (    0x10) DYLD-STUB$$exit [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e45b8 (    0x10) DYLD-STUB$$exp2f [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e45c8 (    0x10) DYLD-STUB$$expf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e45d8 (    0x10) DYLD-STUB$$fclose [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e45e8 (    0x10) DYLD-STUB$$fflush [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e45f8 (    0x10) DYLD-STUB$$fmod [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4608 (    0x10) DYLD-STUB$$fopen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4618 (    0x10) DYLD-STUB$$fork [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4628 (    0x10) DYLD-STUB$$fprintf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4638 (    0x10) DYLD-STUB$$free [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4648 (    0x10) DYLD-STUB$$fstat [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4658 (    0x10) DYLD-STUB$$fwrite [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4668 (    0x10) DYLD-STUB$$geteuid [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4678 (    0x10) DYLD-STUB$$getpid [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4688 (    0x10) DYLD-STUB$$gettimeofday [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4698 (    0x10) DYLD-STUB$$host_info [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e46a8 (    0x10) DYLD-STUB$$kdebug_trace [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e46b8 (    0x10) DYLD-STUB$$kill [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e46c8 (    0x10) DYLD-STUB$$ldexp [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e46d8 (    0x10) DYLD-STUB$$localtime [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e46e8 (    0x10) DYLD-STUB$$log2 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e46f8 (    0x10) DYLD-STUB$$mach_absolute_time [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4708 (    0x10) DYLD-STUB$$mach_error [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4718 (    0x10) DYLD-STUB$$mach_error_string [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4728 (    0x10) DYLD-STUB$$mach_host_self [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4738 (    0x10) DYLD-STUB$$mach_make_memory_entry_64 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4748 (    0x10) DYLD-STUB$$mach_msg [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4758 (    0x10) DYLD-STUB$$mach_msg_destroy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4768 (    0x10) DYLD-STUB$$mach_msg_server_once [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4778 (    0x10) DYLD-STUB$$mach_port_allocate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4788 (    0x10) DYLD-STUB$$mach_port_construct [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4798 (    0x10) DYLD-STUB$$mach_port_deallocate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e47a8 (    0x10) DYLD-STUB$$mach_port_destroy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e47b8 (    0x10) DYLD-STUB$$mach_port_destruct [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e47c8 (    0x10) DYLD-STUB$$mach_port_extract_member [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e47d8 (    0x10) DYLD-STUB$$mach_port_get_refs [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e47e8 (    0x10) DYLD-STUB$$mach_port_insert_member [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e47f8 (    0x10) DYLD-STUB$$mach_port_insert_right [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4808 (    0x10) DYLD-STUB$$mach_port_mod_refs [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4818 (    0x10) DYLD-STUB$$mach_port_move_member [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4828 (    0x10) DYLD-STUB$$mach_port_request_notification [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4838 (    0x10) DYLD-STUB$$mach_thread_self [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4848 (    0x10) DYLD-STUB$$mach_timebase_info [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4858 (    0x10) DYLD-STUB$$mach_vm_allocate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4868 (    0x10) DYLD-STUB$$mach_vm_deallocate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4878 (    0x10) DYLD-STUB$$mach_vm_map [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4888 (    0x10) DYLD-STUB$$malloc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4898 (    0x10) DYLD-STUB$$memchr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e48a8 (    0x10) DYLD-STUB$$memcmp [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e48b8 (    0x10) DYLD-STUB$$memcpy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e48c8 (    0x10) DYLD-STUB$$memmove [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e48d8 (    0x10) DYLD-STUB$$memset [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e48e8 (    0x10) DYLD-STUB$$memset_pattern16 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e48f8 (    0x10) DYLD-STUB$$mig_dealloc_reply_port [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4908 (    0x10) DYLD-STUB$$mig_get_reply_port [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4918 (    0x10) DYLD-STUB$$mig_put_reply_port [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4928 (    0x10) DYLD-STUB$$mmap [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4938 (    0x10) DYLD-STUB$$msgtracer_domain_free [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4948 (    0x10) DYLD-STUB$$msgtracer_domain_new [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4958 (    0x10) DYLD-STUB$$msgtracer_log [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4968 (    0x10) DYLD-STUB$$msgtracer_msg_free [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4978 (    0x10) DYLD-STUB$$msgtracer_msg_new [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4988 (    0x10) DYLD-STUB$$msgtracer_set [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4998 (    0x10) DYLD-STUB$$munmap [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e49a8 (    0x10) DYLD-STUB$$notify_get_state [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e49b8 (    0x10) DYLD-STUB$$notify_post [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e49c8 (    0x10) DYLD-STUB$$notify_register_check [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e49d8 (    0x10) DYLD-STUB$$notify_register_dispatch [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e49e8 (    0x10) DYLD-STUB$$notify_register_mach_port [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e49f8 (    0x10) DYLD-STUB$$notify_set_state [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4a08 (    0x10) DYLD-STUB$$objc_alloc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4a18 (    0x10) DYLD-STUB$$objc_alloc_init [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4a28 (    0x10) DYLD-STUB$$objc_autorelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4a38 (    0x10) DYLD-STUB$$objc_autoreleasePoolPop [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4a48 (    0x10) DYLD-STUB$$objc_autoreleasePoolPush [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4a58 (    0x10) DYLD-STUB$$objc_enumerationMutation [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4a68 (    0x10) DYLD-STUB$$objc_getClass [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4a78 (    0x10) DYLD-STUB$$objc_msgSendSuper2 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4a88 (    0x10) DYLD-STUB$$objc_opt_class [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4a98 (    0x10) DYLD-STUB$$objc_opt_isKindOfClass [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4aa8 (    0x10) DYLD-STUB$$objc_opt_new [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4ab8 (    0x10) DYLD-STUB$$objc_release [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4ac8 (    0x10) DYLD-STUB$$objc_retain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4ad8 (    0x10) DYLD-STUB$$open [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4ae8 (    0x10) DYLD-STUB$$os_log_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4af8 (    0x10) DYLD-STUB$$os_log_type_enabled [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4b08 (    0x10) DYLD-STUB$$os_signpost_enabled [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4b18 (    0x10) DYLD-STUB$$os_state_add_handler [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4b28 (    0x10) DYLD-STUB$$os_variant_is_recovery [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4b38 (    0x10) DYLD-STUB$$posix_spawn [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4b48 (    0x10) DYLD-STUB$$pow [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4b58 (    0x10) DYLD-STUB$$powf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4b68 (    0x10) DYLD-STUB$$proc_pidinfo [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4b78 (    0x10) DYLD-STUB$$pthread_attr_destroy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4b88 (    0x10) DYLD-STUB$$pthread_attr_getschedparam [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4b98 (    0x10) DYLD-STUB$$pthread_attr_init [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4ba8 (    0x10) DYLD-STUB$$pthread_attr_setschedparam [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4bb8 (    0x10) DYLD-STUB$$pthread_attr_setschedpolicy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4bc8 (    0x10) DYLD-STUB$$pthread_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4bd8 (    0x10) DYLD-STUB$$pthread_main_np [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4be8 (    0x10) DYLD-STUB$$pthread_rwlock_rdlock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4bf8 (    0x10) DYLD-STUB$$pthread_rwlock_unlock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4c08 (    0x10) DYLD-STUB$$pthread_rwlock_wrlock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4c18 (    0x10) DYLD-STUB$$pthread_setspecific [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4c28 (    0x10) DYLD-STUB$$qsort [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4c38 (    0x10) DYLD-STUB$$qsort_b [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4c48 (    0x10) DYLD-STUB$$random [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4c58 (    0x10) DYLD-STUB$$read [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4c68 (    0x10) DYLD-STUB$$reboot_np [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4c78 (    0x10) DYLD-STUB$$setaudit_addr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4c88 (    0x10) DYLD-STUB$$setegid [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4c98 (    0x10) DYLD-STUB$$seteuid [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4ca8 (    0x10) DYLD-STUB$$setpgid [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4cb8 (    0x10) DYLD-STUB$$setpriority [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4cc8 (    0x10) DYLD-STUB$$shape_bounds [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4cd8 (    0x10) DYLD-STUB$$shape_count [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4ce8 (    0x10) DYLD-STUB$$shape_empty [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4cf8 (    0x10) DYLD-STUB$$shape_enum_alloc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4d08 (    0x10) DYLD-STUB$$shape_enum_free [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4d18 (    0x10) DYLD-STUB$$shape_enum_next [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4d28 (    0x10) DYLD-STUB$$shape_free [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4d38 (    0x10) DYLD-STUB$$shape_is_empty [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4d48 (    0x10) DYLD-STUB$$shape_length [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4d58 (    0x10) DYLD-STUB$$shape_union [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4d68 (    0x10) DYLD-STUB$$sleep [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4d78 (    0x10) DYLD-STUB$$snprintf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4d88 (    0x10) DYLD-STUB$$snprintf_l [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4d98 (    0x10) DYLD-STUB$$sprintf_l [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4da8 (    0x10) DYLD-STUB$$stat [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4db8 (    0x10) DYLD-STUB$$strcmp [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4dc8 (    0x10) DYLD-STUB$$strdup [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4dd8 (    0x10) DYLD-STUB$$strftime [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4de8 (    0x10) DYLD-STUB$$strlcpy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4df8 (    0x10) DYLD-STUB$$strlen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4e08 (    0x10) DYLD-STUB$$strncmp [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4e18 (    0x10) DYLD-STUB$$strncpy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4e28 (    0x10) DYLD-STUB$$strnlen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4e38 (    0x10) DYLD-STUB$$strrchr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4e48 (    0x10) DYLD-STUB$$strsep [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4e58 (    0x10) DYLD-STUB$$strstr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4e68 (    0x10) DYLD-STUB$$strtol [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4e78 (    0x10) DYLD-STUB$$sync [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4e88 (    0x10) DYLD-STUB$$sysctl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4e98 (    0x10) DYLD-STUB$$sysctlbyname [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4ea8 (    0x10) DYLD-STUB$$syslog$DARWIN_EXTSN [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4eb8 (    0x10) DYLD-STUB$$task_get_special_port [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4ec8 (    0x10) DYLD-STUB$$task_info [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4ed8 (    0x10) DYLD-STUB$$task_set_special_port [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4ee8 (    0x10) DYLD-STUB$$thread_switch [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4ef8 (    0x10) DYLD-STUB$$time [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4f08 (    0x10) DYLD-STUB$$usleep [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4f18 (    0x10) DYLD-STUB$$vImageRotate90_ARGB8888 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4f28 (    0x10) DYLD-STUB$$valloc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4f38 (    0x10) DYLD-STUB$$vasprintf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4f48 (    0x10) DYLD-STUB$$vm_allocate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4f58 (    0x10) DYLD-STUB$$vm_deallocate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4f68 (    0x10) DYLD-STUB$$vm_inherit [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4f78 (    0x10) DYLD-STUB$$voucher_mach_msg_set [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4f88 (    0x10) DYLD-STUB$$vsnprintf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4f98 (    0x10) DYLD-STUB$$waitpid [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4fa8 (    0x10) DYLD-STUB$$write [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4fb8 (    0x10) DYLD-STUB$$xpc_connection_activate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4fc8 (    0x10) DYLD-STUB$$xpc_connection_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4fd8 (    0x10) DYLD-STUB$$xpc_connection_send_message_with_reply_sync [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4fe8 (    0x10) DYLD-STUB$$xpc_connection_set_event_handler [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e4ff8 (    0x10) DYLD-STUB$$xpc_copy_entitlements_for_pid [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e5008 (    0x10) DYLD-STUB$$xpc_create_from_plist [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e5018 (    0x10) DYLD-STUB$$xpc_data_get_bytes_ptr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e5028 (    0x10) DYLD-STUB$$xpc_data_get_length [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e5038 (    0x10) DYLD-STUB$$xpc_dictionary_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e5048 (    0x10) DYLD-STUB$$xpc_dictionary_get_bool [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e5058 (    0x10) DYLD-STUB$$xpc_dictionary_set_bool [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e5068 (    0x10) DYLD-STUB$$xpc_dictionary_set_double [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e5078 (    0x10) DYLD-STUB$$xpc_dictionary_set_string [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e5088 (    0x10) DYLD-STUB$$xpc_dictionary_set_uint64 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e5098 (    0x10) DYLD-STUB$$xpc_get_type [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001824e50a8 (    0x10) DYLD-STUB$$xpc_release [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
            0x00000001824e50b8 (    0x20) __TEXT __init_offsets
            0x00000001824e50d8 (   0x178) __TEXT __objc_methlist
                0x00000001824e50d8 (    0x30) _OBJC_$_INSTANCE_METHODS_CDVirtualDisplayConnect [NameNList, MangledNameNList, NList] 
                0x00000001824e5108 (    0x78) _OBJC_$_INSTANCE_METHODS_VirtualDisplayClient [NameNList, MangledNameNList, NList] 
                0x00000001824e5180 (    0x50) _OBJC_$_INSTANCE_METHODS_VirtualDisplayListener [NameNList, MangledNameNList, NList] 
                0x00000001824e51d0 (    0x48) _OBJC_$_INSTANCE_METHODS_VirtualDisplayProxy [NameNList, MangledNameNList, NList] 
                0x00000001824e5218 (    0x38) _OBJC_$_INSTANCE_METHODS_VirtualDisplayServer [NameNList, MangledNameNList, NList] 
            0x00000001824e5250 (  0x5459) __TEXT __const
                0x00000001824e5af8 (    0x38) CoreDisplayVersionString [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001824e5b30 (     0x8) CoreDisplayVersionNumber [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001824e5b38 (   0x4d4) kAppleProDisplayVESAProductIDs [NameNList, MangledNameNList, NList] 
                0x00000001824e600c (     0x1) std::__1::piecewise_construct [NameNList, MangledNameNList, NList] 
                0x00000001824e600d (     0x4) CoreDisplay::DisplaySArr [NameNList, MangledNameNList, NList] 
                0x00000001824e6011 (    0x4d) typeinfo name for std::__1::__packaged_task_func<os_state_data_s* (*)(), std::__1::allocator<os_state_data_s* (*)()>, os_state_data_s* ()> [NameNList, MangledNameNList, NList] 
                0x00000001824e605e (    0x36) typeinfo name for std::__1::__packaged_task_base<os_state_data_s* ()> [NameNList, MangledNameNList, NList] 
                0x00000001824e6094 (    0x64) typeinfo name for std::__1::__assoc_state<os_state_data_s*> [NameNList, MangledNameNList, NList] 
                0x00000001824e60f8 (    0x10) IOFBSetKernelDisplayConfig::vendors [NameNList, MangledNameNList, NList] 
                0x00000001824e6108 (    0x28) IODisplayInstallTimings::defaultGTFCurves [NameNList, MangledNameNList, NList] 
                0x00000001824e6130 (    0x20) IODisplayInstallTimings::depths [NameNList, MangledNameNList, NList] 
                0x00000001824e6150 (    0x84) IODisplayInstallTimings::modes [NameNList, MangledNameNList, NList] 
                0x00000001824e61d4 (    0xec) InstallVTBEXT(IOFBConnect*, EDID*, VTBEXT*, bool)::cvtRefreshRates [NameNList, MangledNameNList, NList] 
                0x00000001824e62c0 (    0x53) typeinfo name for std::__1::__packaged_task_func<void (*)(unsigned int, float*, float*, float*, float*, float*, float*, float*, float*), std::__1::allocator<void (*)(unsigned int, float*, float*, float*, float*, float*, float*, float*, float*)>, void (unsigned int, float*, float*, float*, float*, float*, float*, float*, float*)> [NameNList, MangledNameNList, NList] 
                0x00000001824e6313 (    0x3c) typeinfo name for std::__1::__packaged_task_base<void (unsigned int, float*, float*, float*, float*, float*, float*, float*, float*)> [NameNList, MangledNameNList, NList] 
                0x00000001824e634f (    0x3c) typeinfo name for std::__1::__packaged_task_func<bool (*)(unsigned int), std::__1::allocator<bool (*)(unsigned int)>, bool (unsigned int)> [NameNList, MangledNameNList, NList] 
                0x00000001824e638b (    0x25) typeinfo name for std::__1::__packaged_task_base<bool (unsigned int)> [NameNList, MangledNameNList, NList] 
                0x00000001824e63b0 (    0x3d) typeinfo name for std::__1::__packaged_task_func<void (*)(unsigned int, bool), std::__1::allocator<void (*)(unsigned int, bool)>, void (unsigned int, bool)> [NameNList, MangledNameNList, NList] 
                0x00000001824e63ed (    0xab) typeinfo name for std::__1::__packaged_task_base<void (unsigned int, bool)> [NameNList, MangledNameNList, NList] 
                0x00000001824e6498 (  0x18d8) gVFBModeList [NameNList, MangledNameNList, NList] 
                0x00000001824e7d70 (    0xa4) typeinfo name for std::__1::__shared_ptr_emplace<CoreDisplay::IOPTransaction, std::__1::allocator<CoreDisplay::IOPTransaction>> [NameNList, MangledNameNList, NList] 
                0x00000001824e7e14 (    0x10) kAppleSDRPresetUUID [NameNList, MangledNameNList, NList] 
                0x00000001824e7e24 (    0x18) typeinfo name for CoreDisplay::Display [NameNList, MangledNameNList, NList] 
                0x00000001824e7e3c (    0x21) typeinfo name for CoreDisplay::AbstractDisplay [NameNList, MangledNameNList, NList] 
                0x00000001824e7e5d (    0x1d) typeinfo name for CoreDisplay::NonCopyable [NameNList, MangledNameNList, NList] 
                0x00000001824e7e7a (     0x1) std::__1::piecewise_construct (.871) [NameNList, MangledNameNList, NList] 
                0x00000001824e7e7b (    0x1c) typeinfo name for std::__1::bad_function_call [NameNList, MangledNameNList, NList] 
                0x00000001824e7e97 (    0x50) typeinfo name for std::__1::__packaged_task_func<void (*)(void*), std::__1::allocator<void (*)(void*)>, void (CGXDisplayDevice*)> [NameNList, MangledNameNList, NList] 
                0x00000001824e7ee7 (    0x37) typeinfo name for std::__1::__packaged_task_base<void (CGXDisplayDevice*)> [NameNList, MangledNameNList, NList] 
                0x00000001824e7f1e (    0x74) typeinfo name for std::__1::__packaged_task_func<CoreDisplay::Display::SetLinearBacklightBrightness(double)::$_3, std::__1::allocator<CoreDisplay::Display::SetLinearBacklightBrightness(double)::$_3>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001824e7f92 (    0x4e) typeinfo name for std::__1::__packaged_task_func<void (*)(CGXDisplayDevice*), std::__1::allocator<void (*)(CGXDisplayDevice*)>, void (CGXDisplayDevice*)> [NameNList, MangledNameNList, NList] 
                0x00000001824e7fe0 (     0x4) kCDDisplayNullPresetIndex [EXT, NameNList, MangledNameNList, NList] 
                0x00000001824e7fe4 (    0x7c) typeinfo name for std::__1::__packaged_task_func<applesauce::dispatch::v1::block<void ()>, std::__1::allocator<applesauce::dispatch::v1::block<void ()>>, void ()> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001824e8060 (    0x57) typeinfo name for std::__1::__packaged_task_func<unsigned int (*)(unsigned int, unsigned int, unsigned int, CGSize, __CFDictionary const*), std::__1::allocator<unsigned int (*)(unsigned int, unsigned int, unsigned int, CGSize, __CFDictionary const*)>, unsigned int (unsigned int, unsigned int, unsigned int, CGSize, __CFDictionary const*)> [NameNList, MangledNameNList, NList] 
                0x00000001824e80b7 (    0x40) typeinfo name for std::__1::__packaged_task_base<unsigned int (unsigned int, unsigned int, unsigned int, CGSize, __CFDictionary const*)> [NameNList, MangledNameNList, NList] 
                0x00000001824e80f7 (    0x1b) typeinfo name for std::__1::__assoc_state<unsigned int> [NameNList, MangledNameNList, NList] 
                0x00000001824e8112 (    0x3c) typeinfo name for std::__1::__packaged_task_func<void (*)(unsigned int), std::__1::allocator<void (*)(unsigned int)>, void (unsigned int)> [NameNList, MangledNameNList, NList] 
                0x00000001824e814e (    0x25) typeinfo name for std::__1::__packaged_task_base<void (unsigned int)> [NameNList, MangledNameNList, NList] 
                0x00000001824e8173 (    0x5a) typeinfo name for std::__1::__packaged_task_func<bool (*)(unsigned int, unsigned int, unsigned int, CGXVirtualDisplaySettings*), std::__1::allocator<bool (*)(unsigned int, unsigned int, unsigned int, CGXVirtualDisplaySettings*)>, bool (unsigned int, unsigned int, unsigned int, CGXVirtualDisplaySettings*)> [NameNList, MangledNameNList, NList] 
                0x00000001824e81cd (    0x43) typeinfo name for std::__1::__packaged_task_base<bool (unsigned int, unsigned int, unsigned int, CGXVirtualDisplaySettings*)> [NameNList, MangledNameNList, NList] 
                0x00000001824e8210 (    0xe0) typeinfo name for std::__1::__assoc_state<bool> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001824e82f0 (     0x1) std::__1::piecewise_construct (.3128) [NameNList, MangledNameNList, NList] 
                0x00000001824e82f1 (    0x3c) typeinfo name for std::__1::__packaged_task_func<void (*)(), std::__1::allocator<void (*)()>, void ()> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001824e832d (    0x27) typeinfo name for std::__1::__packaged_task_base<void ()> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001824e8354 (    0x14) MPFinishSurfaceForDisplayDevice(CGXDisplayDevice*, unsigned int, int, CGRect, CGSRegionObject*)::gEmptyRegion [NameNList, MangledNameNList, NList] 
                0x00000001824e8368 (    0x70) the_empty_shape [NameNList, MangledNameNList, NList] 
                0x00000001824e83d8 (    0x18) typeinfo name for gsl::narrowing_error [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001824e83f0 (    0x70) std::__1::piecewise_construct (.4555) [NameNList, MangledNameNList, NList] 
                0x00000001824e8460 (    0x16) kSLSDisplayConfigurationTimeline [NameNList, MangledNameNList, NList] 
                0x00000001824e8476 (     0xd) kSLSDisplayFadeTimeline [NameNList, MangledNameNList, NList] 
                0x00000001824e8483 (    0x35) kSLSDisplayUUIDCallbackTimeline [NameNList, MangledNameNList, NList] 
                0x00000001824e84b8 (    0x10) kCGInvalidUUIDBytes [NameNList, MangledNameNList, NList] 
                0x00000001824e84c8 (    0x3d) typeinfo name for std::__1::__packaged_task_func<void (*)(float), std::__1::allocator<void (*)(float)>, void (double)> [NameNList, MangledNameNList, NList] 
                0x00000001824e8505 (    0x25) typeinfo name for std::__1::__packaged_task_base<void (double)> [NameNList, MangledNameNList, NList] 
                0x00000001824e852a (    0x79) typeinfo name for std::__1::__packaged_task_func<void (*)(CFTypePtr<__CFUUID const*>, CoreDisplay::SensorLocation, float), std::__1::allocator<void (*)(CFTypePtr<__CFUUID const*>, CoreDisplay::SensorLocation, float)>, void (CFTypePtr<__CFUUID const*>, CoreDisplay::SensorLocation, double)> [NameNList, MangledNameNList, NList] 
                0x00000001824e85a3 (    0x5b) typeinfo name for std::__1::__packaged_task_base<void (CFTypePtr<__CFUUID const*>, CoreDisplay::SensorLocation, double)> [NameNList, MangledNameNList, NList] 
                0x00000001824e85fe (    0x50) typeinfo name for std::__1::__shared_ptr_emplace<CoreDisplay::MetalDevice, std::__1::allocator<CoreDisplay::MetalDevice>> [NameNList, MangledNameNList, NList] 
                0x00000001824e864e (    0x5a) typeinfo name for std::__1::__shared_ptr_emplace<CoreDisplay::DisplaySurface, std::__1::allocator<CoreDisplay::DisplaySurface>> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001824e86a8 (  0x2000) _cdgls_dummy_disp_const [NameNList, MangledNameNList, NList] 
                0x00000001824ea6a8 (     0x1) std::__1::piecewise_construct (.5756) [NameNList, MangledNameNList, NList] 
            0x00000001824ea6ac (  0x7a50) __TEXT __gcc_except_tab
                0x00000001824ea6ac (    0x18) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x00000001824ea6c4 (    0x20) GCC_except_table10 [NameNList, MangledNameNList, NList] 
                0x00000001824ea6e4 (    0x10) GCC_except_table30 [NameNList, MangledNameNList, NList] 
                0x00000001824ea6f4 (    0x10) GCC_except_table35 [NameNList, MangledNameNList, NList] 
                0x00000001824ea704 (    0x20) GCC_except_table37 [NameNList, MangledNameNList, NList] 
                0x00000001824ea724 (    0x10) GCC_except_table39 [NameNList, MangledNameNList, NList] 
                0x00000001824ea734 (    0x20) GCC_except_table41 [NameNList, MangledNameNList, NList] 
                0x00000001824ea754 (    0x10) GCC_except_table43 [NameNList, MangledNameNList, NList] 
                0x00000001824ea764 (    0x20) GCC_except_table45 [NameNList, MangledNameNList, NList] 
                0x00000001824ea784 (    0x10) GCC_except_table47 [NameNList, MangledNameNList, NList] 
                0x00000001824ea794 (    0x20) GCC_except_table49 [NameNList, MangledNameNList, NList] 
                0x00000001824ea7b4 (    0x10) GCC_except_table51 [NameNList, MangledNameNList, NList] 
                0x00000001824ea7c4 (    0x20) GCC_except_table53 [NameNList, MangledNameNList, NList] 
                0x00000001824ea7e4 (    0x10) GCC_except_table55 [NameNList, MangledNameNList, NList] 
                0x00000001824ea7f4 (    0x20) GCC_except_table58 [NameNList, MangledNameNList, NList] 
                0x00000001824ea814 (    0x10) GCC_except_table60 [NameNList, MangledNameNList, NList] 
                0x00000001824ea824 (    0x20) GCC_except_table62 [NameNList, MangledNameNList, NList] 
                0x00000001824ea844 (    0x10) GCC_except_table64 [NameNList, MangledNameNList, NList] 
                0x00000001824ea854 (    0x20) GCC_except_table66 [NameNList, MangledNameNList, NList] 
                0x00000001824ea874 (    0x10) GCC_except_table68 [NameNList, MangledNameNList, NList] 
                0x00000001824ea884 (    0x20) GCC_except_table70 [NameNList, MangledNameNList, NList] 
                0x00000001824ea8a4 (    0x94) GCC_except_table81 [NameNList, MangledNameNList, NList] 
                0x00000001824ea938 (     0xc) GCC_except_table85 [NameNList, MangledNameNList, NList] 
                0x00000001824ea944 (    0x10) GCC_except_table93 [NameNList, MangledNameNList, NList] 
                0x00000001824ea954 (    0x14) GCC_except_table95 [NameNList, MangledNameNList, NList] 
                0x00000001824ea968 (    0x10) GCC_except_table105 [NameNList, MangledNameNList, NList] 
                0x00000001824ea978 (    0x14) GCC_except_table119 [NameNList, MangledNameNList, NList] 
                0x00000001824ea98c (    0x10) GCC_except_table120 [NameNList, MangledNameNList, NList] 
                0x00000001824ea99c (    0x18) GCC_except_table121 [NameNList, MangledNameNList, NList] 
                0x00000001824ea9b4 (    0x14) GCC_except_table122 [NameNList, MangledNameNList, NList] 
                0x00000001824ea9c8 (    0x18) GCC_except_table123 [NameNList, MangledNameNList, NList] 
                0x00000001824ea9e0 (    0x40) GCC_except_table124 [NameNList, MangledNameNList, NList] 
                0x00000001824eaa20 (    0x38) GCC_except_table131 [NameNList, MangledNameNList, NList] 
                0x00000001824eaa58 (    0x14) GCC_except_table134 [NameNList, MangledNameNList, NList] 
                0x00000001824eaa6c (    0x10) GCC_except_table135 [NameNList, MangledNameNList, NList] 
                0x00000001824eaa7c (    0x24) GCC_except_table138 [NameNList, MangledNameNList, NList] 
                0x00000001824eaaa0 (    0x10) GCC_except_table140 [NameNList, MangledNameNList, NList] 
                0x00000001824eaab0 (    0x10) GCC_except_table141 [NameNList, MangledNameNList, NList] 
                0x00000001824eaac0 (    0x2c) GCC_except_table142 [NameNList, MangledNameNList, NList] 
                0x00000001824eaaec (    0x18) GCC_except_table149 [NameNList, MangledNameNList, NList] 
                0x00000001824eab04 (    0x28) GCC_except_table161 [NameNList, MangledNameNList, NList] 
                0x00000001824eab2c (    0x20) GCC_except_table162 [NameNList, MangledNameNList, NList] 
                0x00000001824eab4c (     0xc) GCC_except_table163 [NameNList, MangledNameNList, NList] 
                0x00000001824eab58 (    0x14) GCC_except_table165 [NameNList, MangledNameNList, NList] 
                0x00000001824eab6c (     0xc) GCC_except_table167 [NameNList, MangledNameNList, NList] 
                0x00000001824eab78 (    0x2c) GCC_except_table168 [NameNList, MangledNameNList, NList] 
                0x00000001824eaba4 (    0x10) GCC_except_table169 [NameNList, MangledNameNList, NList] 
                0x00000001824eabb4 (    0x10) GCC_except_table171 [NameNList, MangledNameNList, NList] 
                0x00000001824eabc4 (    0x10) GCC_except_table172 [NameNList, MangledNameNList, NList] 
                0x00000001824eabd4 (    0x10) GCC_except_table174 [NameNList, MangledNameNList, NList] 
                0x00000001824eabe4 (    0x10) GCC_except_table175 [NameNList, MangledNameNList, NList] 
                0x00000001824eabf4 (    0x20) GCC_except_table183 [NameNList, MangledNameNList, NList] 
                0x00000001824eac14 (     0xc) GCC_except_table184 [NameNList, MangledNameNList, NList] 
                0x00000001824eac20 (     0xc) GCC_except_table185 [NameNList, MangledNameNList, NList] 
                0x00000001824eac2c (    0x48) GCC_except_table197 [NameNList, MangledNameNList, NList] 
                0x00000001824eac74 (    0x18) GCC_except_table198 [NameNList, MangledNameNList, NList] 
                0x00000001824eac8c (    0x14) GCC_except_table199 [NameNList, MangledNameNList, NList] 
                0x00000001824eaca0 (    0x44) GCC_except_table201 [NameNList, MangledNameNList, NList] 
                0x00000001824eace4 (     0xc) GCC_except_table202 [NameNList, MangledNameNList, NList] 
                0x00000001824eacf0 (    0x10) GCC_except_table203 [NameNList, MangledNameNList, NList] 
                0x00000001824ead00 (    0x1c) GCC_except_table204 [NameNList, MangledNameNList, NList] 
                0x00000001824ead1c (    0x18) GCC_except_table214 [NameNList, MangledNameNList, NList] 
                0x00000001824ead34 (    0x10) GCC_except_table215 [NameNList, MangledNameNList, NList] 
                0x00000001824ead44 (    0x14) GCC_except_table219 [NameNList, MangledNameNList, NList] 
                0x00000001824ead58 (    0xc0) GCC_except_table220 [NameNList, MangledNameNList, NList] 
                0x00000001824eae18 (    0x18) GCC_except_table227 [NameNList, MangledNameNList, NList] 
                0x00000001824eae30 (    0x10) GCC_except_table237 [NameNList, MangledNameNList, NList] 
                0x00000001824eae40 (    0x3c) GCC_except_table239 [NameNList, MangledNameNList, NList] 
                0x00000001824eae7c (    0x1c) GCC_except_table244 [NameNList, MangledNameNList, NList] 
                0x00000001824eae98 (    0x14) GCC_except_table263 [NameNList, MangledNameNList, NList] 
                0x00000001824eaeac (    0x20) GCC_except_table266 [NameNList, MangledNameNList, NList] 
                0x00000001824eaecc (    0x10) GCC_except_table268 [NameNList, MangledNameNList, NList] 
                0x00000001824eaedc (    0x14) GCC_except_table269 [NameNList, MangledNameNList, NList] 
                0x00000001824eaef0 (    0x3c) GCC_except_table270 [NameNList, MangledNameNList, NList] 
                0x00000001824eaf2c (    0x10) GCC_except_table272 [NameNList, MangledNameNList, NList] 
                0x00000001824eaf3c (    0x10) GCC_except_table273 [NameNList, MangledNameNList, NList] 
                0x00000001824eaf4c (    0x10) GCC_except_table274 [NameNList, MangledNameNList, NList] 
                0x00000001824eaf5c (    0x80) GCC_except_table275 [NameNList, MangledNameNList, NList] 
                0x00000001824eafdc (    0x10) GCC_except_table278 [NameNList, MangledNameNList, NList] 
                0x00000001824eafec (    0x10) GCC_except_table279 [NameNList, MangledNameNList, NList] 
                0x00000001824eaffc (    0x10) GCC_except_table280 [NameNList, MangledNameNList, NList] 
                0x00000001824eb00c (    0x14) GCC_except_table281 [NameNList, MangledNameNList, NList] 
                0x00000001824eb020 (    0x14) GCC_except_table283 [NameNList, MangledNameNList, NList] 
                0x00000001824eb034 (    0x14) GCC_except_table284 [NameNList, MangledNameNList, NList] 
                0x00000001824eb048 (    0x1c) GCC_except_table285 [NameNList, MangledNameNList, NList] 
                0x00000001824eb064 (    0x1c) GCC_except_table286 [NameNList, MangledNameNList, NList] 
                0x00000001824eb080 (    0x20) GCC_except_table287 [NameNList, MangledNameNList, NList] 
                0x00000001824eb0a0 (    0x20) GCC_except_table288 [NameNList, MangledNameNList, NList] 
                0x00000001824eb0c0 (    0x24) GCC_except_table289 [NameNList, MangledNameNList, NList] 
                0x00000001824eb0e4 (    0x24) GCC_except_table290 [NameNList, MangledNameNList, NList] 
                0x00000001824eb108 (    0x1c) GCC_except_table291 [NameNList, MangledNameNList, NList] 
                0x00000001824eb124 (    0x1c) GCC_except_table292 [NameNList, MangledNameNList, NList] 
                0x00000001824eb140 (    0x14) GCC_except_table293 [NameNList, MangledNameNList, NList] 
                0x00000001824eb154 (    0x18) GCC_except_table306 [NameNList, MangledNameNList, NList] 
                0x00000001824eb16c (    0x94) GCC_except_table309 [NameNList, MangledNameNList, NList] 
                0x00000001824eb200 (    0x18) GCC_except_table310 [NameNList, MangledNameNList, NList] 
                0x00000001824eb218 (    0x44) GCC_except_table311 [NameNList, MangledNameNList, NList] 
                0x00000001824eb25c (    0x18) GCC_except_table314 [NameNList, MangledNameNList, NList] 
                0x00000001824eb274 (    0x10) GCC_except_table317 [NameNList, MangledNameNList, NList] 
                0x00000001824eb284 (    0x6c) GCC_except_table319 [NameNList, MangledNameNList, NList] 
                0x00000001824eb2f0 (    0x1c) GCC_except_table360 [NameNList, MangledNameNList, NList] 
                0x00000001824eb30c (    0x10) GCC_except_table363 [NameNList, MangledNameNList, NList] 
                0x00000001824eb31c (    0x34) GCC_except_table367 [NameNList, MangledNameNList, NList] 
                0x00000001824eb350 (    0x10) GCC_except_table368 [NameNList, MangledNameNList, NList] 
                0x00000001824eb360 (    0xa4) GCC_except_table369 [NameNList, MangledNameNList, NList] 
                0x00000001824eb404 (    0x18) GCC_except_table403 [NameNList, MangledNameNList, NList] 
                0x00000001824eb41c (    0x10) GCC_except_table406 [NameNList, MangledNameNList, NList] 
                0x00000001824eb42c (    0x7c) GCC_except_table409 [NameNList, MangledNameNList, NList] 
                0x00000001824eb4a8 (    0x70) GCC_except_table410 [NameNList, MangledNameNList, NList] 
                0x00000001824eb518 (    0x10) GCC_except_table411 [NameNList, MangledNameNList, NList] 
                0x00000001824eb528 (    0x18) GCC_except_table412 [NameNList, MangledNameNList, NList] 
                0x00000001824eb540 (    0x18) GCC_except_table414 [NameNList, MangledNameNList, NList] 
                0x00000001824eb558 (    0x24) GCC_except_table421 [NameNList, MangledNameNList, NList] 
                0x00000001824eb57c (    0x10) GCC_except_table422 [NameNList, MangledNameNList, NList] 
                0x00000001824eb58c (    0x18) GCC_except_table423 [NameNList, MangledNameNList, NList] 
                0x00000001824eb5a4 (     0xc) GCC_except_table424 [NameNList, MangledNameNList, NList] 
                0x00000001824eb5b0 (    0x10) GCC_except_table425 [NameNList, MangledNameNList, NList] 
                0x00000001824eb5c0 (     0xc) GCC_except_table426 [NameNList, MangledNameNList, NList] 
                0x00000001824eb5cc (    0x10) GCC_except_table431 [NameNList, MangledNameNList, NList] 
                0x00000001824eb5dc (    0x44) GCC_except_table438 [NameNList, MangledNameNList, NList] 
                0x00000001824eb620 (   0x114) GCC_except_table441 [NameNList, MangledNameNList, NList] 
                0x00000001824eb734 (    0x70) GCC_except_table443 [NameNList, MangledNameNList, NList] 
                0x00000001824eb7a4 (    0x18) GCC_except_table444 [NameNList, MangledNameNList, NList] 
                0x00000001824eb7bc (    0x10) GCC_except_table446 [NameNList, MangledNameNList, NList] 
                0x00000001824eb7cc (    0x10) GCC_except_table448 [NameNList, MangledNameNList, NList] 
                0x00000001824eb7dc (    0x10) GCC_except_table450 [NameNList, MangledNameNList, NList] 
                0x00000001824eb7ec (    0x10) GCC_except_table452 [NameNList, MangledNameNList, NList] 
                0x00000001824eb7fc (     0xc) GCC_except_table454 [NameNList, MangledNameNList, NList] 
                0x00000001824eb808 (     0xc) GCC_except_table456 [NameNList, MangledNameNList, NList] 
                0x00000001824eb814 (    0x10) GCC_except_table457 [NameNList, MangledNameNList, NList] 
                0x00000001824eb824 (    0x10) GCC_except_table468 [NameNList, MangledNameNList, NList] 
                0x00000001824eb834 (    0x18) GCC_except_table478 [NameNList, MangledNameNList, NList] 
                0x00000001824eb84c (    0x10) GCC_except_table485 [NameNList, MangledNameNList, NList] 
                0x00000001824eb85c (    0x58) GCC_except_table486 [NameNList, MangledNameNList, NList] 
                0x00000001824eb8b4 (    0x34) GCC_except_table490 [NameNList, MangledNameNList, NList] 
                0x00000001824eb8e8 (     0xc) GCC_except_table491 [NameNList, MangledNameNList, NList] 
                0x00000001824eb8f4 (   0x274) GCC_except_table495 [NameNList, MangledNameNList, NList] 
                0x00000001824ebb68 (    0x1c) GCC_except_table497 [NameNList, MangledNameNList, NList] 
                0x00000001824ebb84 (    0x30) GCC_except_table502 [NameNList, MangledNameNList, NList] 
                0x00000001824ebbb4 (    0x10) GCC_except_table507 [NameNList, MangledNameNList, NList] 
                0x00000001824ebbc4 (    0x20) GCC_except_table510 [NameNList, MangledNameNList, NList] 
                0x00000001824ebbe4 (    0x10) GCC_except_table512 [NameNList, MangledNameNList, NList] 
                0x00000001824ebbf4 (     0xc) GCC_except_table521 [NameNList, MangledNameNList, NList] 
                0x00000001824ebc00 (   0x1d0) GCC_except_table522 [NameNList, MangledNameNList, NList] 
                0x00000001824ebdd0 (    0x10) GCC_except_table524 [NameNList, MangledNameNList, NList] 
                0x00000001824ebde0 (    0x28) GCC_except_table527 [NameNList, MangledNameNList, NList] 
                0x00000001824ebe08 (    0x28) GCC_except_table528 [NameNList, MangledNameNList, NList] 
                0x00000001824ebe30 (    0x38) GCC_except_table529 [NameNList, MangledNameNList, NList] 
                0x00000001824ebe68 (    0x34) GCC_except_table530 [NameNList, MangledNameNList, NList] 
                0x00000001824ebe9c (    0x14) GCC_except_table531 [NameNList, MangledNameNList, NList] 
                0x00000001824ebeb0 (    0x34) GCC_except_table533 [NameNList, MangledNameNList, NList] 
                0x00000001824ebee4 (    0x10) GCC_except_table540 [NameNList, MangledNameNList, NList] 
                0x00000001824ebef4 (    0x18) GCC_except_table541 [NameNList, MangledNameNList, NList] 
                0x00000001824ebf0c (    0x18) GCC_except_table542 [NameNList, MangledNameNList, NList] 
                0x00000001824ebf24 (    0x14) GCC_except_table543 [NameNList, MangledNameNList, NList] 
                0x00000001824ebf38 (    0x34) GCC_except_table546 [NameNList, MangledNameNList, NList] 
                0x00000001824ebf6c (     0xc) GCC_except_table548 [NameNList, MangledNameNList, NList] 
                0x00000001824ebf78 (    0x14) GCC_except_table549 [NameNList, MangledNameNList, NList] 
                0x00000001824ebf8c (     0xc) GCC_except_table559 [NameNList, MangledNameNList, NList] 
                0x00000001824ebf98 (    0x14) GCC_except_table561 [NameNList, MangledNameNList, NList] 
                0x00000001824ebfac (     0xc) GCC_except_table563 [NameNList, MangledNameNList, NList] 
                0x00000001824ebfb8 (    0x2c) GCC_except_table564 [NameNList, MangledNameNList, NList] 
                0x00000001824ebfe4 (     0xc) GCC_except_table571 [NameNList, MangledNameNList, NList] 
                0x00000001824ebff0 (    0x14) GCC_except_table572 [NameNList, MangledNameNList, NList] 
                0x00000001824ec004 (    0x78) GCC_except_table573 [NameNList, MangledNameNList, NList] 
                0x00000001824ec07c (    0x18) GCC_except_table651 [NameNList, MangledNameNList, NList] 
                0x00000001824ec094 (    0x24) GCC_except_table656 [NameNList, MangledNameNList, NList] 
                0x00000001824ec0b8 (    0x14) GCC_except_table661 [NameNList, MangledNameNList, NList] 
                0x00000001824ec0cc (    0x10) GCC_except_table665 [NameNList, MangledNameNList, NList] 
                0x00000001824ec0dc (    0xd0) GCC_except_table666 [NameNList, MangledNameNList, NList] 
                0x00000001824ec1ac (    0x34) GCC_except_table667 [NameNList, MangledNameNList, NList] 
                0x00000001824ec1e0 (    0x18) GCC_except_table670 [NameNList, MangledNameNList, NList] 
                0x00000001824ec1f8 (    0x18) GCC_except_table681 [NameNList, MangledNameNList, NList] 
                0x00000001824ec210 (    0x50) GCC_except_table682 [NameNList, MangledNameNList, NList] 
                0x00000001824ec260 (    0x10) GCC_except_table685 [NameNList, MangledNameNList, NList] 
                0x00000001824ec270 (    0x18) GCC_except_table688 [NameNList, MangledNameNList, NList] 
                0x00000001824ec288 (    0x20) GCC_except_table689 [NameNList, MangledNameNList, NList] 
                0x00000001824ec2a8 (    0x14) GCC_except_table690 [NameNList, MangledNameNList, NList] 
                0x00000001824ec2bc (    0x10) GCC_except_table699 [NameNList, MangledNameNList, NList] 
                0x00000001824ec2cc (    0x2c) GCC_except_table701 [NameNList, MangledNameNList, NList] 
                0x00000001824ec2f8 (    0x18) GCC_except_table702 [NameNList, MangledNameNList, NList] 
                0x00000001824ec310 (    0x18) GCC_except_table712 [NameNList, MangledNameNList, NList] 
                0x00000001824ec328 (    0x14) GCC_except_table718 [NameNList, MangledNameNList, NList] 
                0x00000001824ec33c (    0x14) GCC_except_table725 [NameNList, MangledNameNList, NList] 
                0x00000001824ec350 (    0x2c) GCC_except_table726 [NameNList, MangledNameNList, NList] 
                0x00000001824ec37c (    0x28) GCC_except_table729 [NameNList, MangledNameNList, NList] 
                0x00000001824ec3a4 (    0x1c) GCC_except_table730 [NameNList, MangledNameNList, NList] 
                0x00000001824ec3c0 (    0x18) GCC_except_table731 [NameNList, MangledNameNList, NList] 
                0x00000001824ec3d8 (    0xa4) GCC_except_table738 [NameNList, MangledNameNList, NList] 
                0x00000001824ec47c (    0x20) GCC_except_table739 [NameNList, MangledNameNList, NList] 
                0x00000001824ec49c (    0x14) GCC_except_table741 [NameNList, MangledNameNList, NList] 
                0x00000001824ec4b0 (     0xc) GCC_except_table743 [NameNList, MangledNameNList, NList] 
                0x00000001824ec4bc (    0x2c) GCC_except_table744 [NameNList, MangledNameNList, NList] 
                0x00000001824ec4e8 (    0x14) GCC_except_table753 [NameNList, MangledNameNList, NList] 
                0x00000001824ec4fc (    0x18) GCC_except_table756 [NameNList, MangledNameNList, NList] 
                0x00000001824ec514 (    0x6c) GCC_except_table758 [NameNList, MangledNameNList, NList] 
                0x00000001824ec580 (    0x18) GCC_except_table760 [NameNList, MangledNameNList, NList] 
                0x00000001824ec598 (    0x18) GCC_except_table764 [NameNList, MangledNameNList, NList] 
                0x00000001824ec5b0 (    0x28) GCC_except_table767 [NameNList, MangledNameNList, NList] 
                0x00000001824ec5d8 (    0x34) GCC_except_table774 [NameNList, MangledNameNList, NList] 
                0x00000001824ec60c (    0x20) GCC_except_table776 [NameNList, MangledNameNList, NList] 
                0x00000001824ec62c (    0x6c) GCC_except_table777 [NameNList, MangledNameNList, NList] 
                0x00000001824ec698 (    0x14) GCC_except_table779 [NameNList, MangledNameNList, NList] 
                0x00000001824ec6ac (    0x10) GCC_except_table794 [NameNList, MangledNameNList, NList] 
                0x00000001824ec6bc (    0x10) GCC_except_table795 [NameNList, MangledNameNList, NList] 
                0x00000001824ec6cc (    0x30) GCC_except_table799 [NameNList, MangledNameNList, NList] 
                0x00000001824ec6fc (     0xc) GCC_except_table800 [NameNList, MangledNameNList, NList] 
                0x00000001824ec708 (    0x1c) GCC_except_table805 [NameNList, MangledNameNList, NList] 
                0x00000001824ec724 (    0x14) GCC_except_table810 [NameNList, MangledNameNList, NList] 
                0x00000001824ec738 (    0x14) GCC_except_table811 [NameNList, MangledNameNList, NList] 
                0x00000001824ec74c (   0x110) GCC_except_table812 [NameNList, MangledNameNList, NList] 
                0x00000001824ec85c (    0x14) GCC_except_table814 [NameNList, MangledNameNList, NList] 
                0x00000001824ec870 (    0x24) GCC_except_table818 [NameNList, MangledNameNList, NList] 
                0x00000001824ec894 (    0x14) GCC_except_table819 [NameNList, MangledNameNList, NList] 
                0x00000001824ec8a8 (    0x44) GCC_except_table820 [NameNList, MangledNameNList, NList] 
                0x00000001824ec8ec (    0x34) GCC_except_table822 [NameNList, MangledNameNList, NList] 
                0x00000001824ec920 (    0x28) GCC_except_table825 [NameNList, MangledNameNList, NList] 
                0x00000001824ec948 (    0x50) GCC_except_table826 [NameNList, MangledNameNList, NList] 
                0x00000001824ec998 (    0x38) GCC_except_table829 [NameNList, MangledNameNList, NList] 
                0x00000001824ec9d0 (    0x14) GCC_except_table830 [NameNList, MangledNameNList, NList] 
                0x00000001824ec9e4 (    0x28) GCC_except_table833 [NameNList, MangledNameNList, NList] 
                0x00000001824eca0c (    0x28) GCC_except_table836 [NameNList, MangledNameNList, NList] 
                0x00000001824eca34 (    0x60) GCC_except_table838 [NameNList, MangledNameNList, NList] 
                0x00000001824eca94 (    0x10) GCC_except_table842 [NameNList, MangledNameNList, NList] 
                0x00000001824ecaa4 (    0x14) GCC_except_table848 [NameNList, MangledNameNList, NList] 
                0x00000001824ecab8 (    0x30) GCC_except_table853 [NameNList, MangledNameNList, NList] 
                0x00000001824ecae8 (    0x7c) GCC_except_table854 [NameNList, MangledNameNList, NList] 
                0x00000001824ecb64 (    0xb4) GCC_except_table856 [NameNList, MangledNameNList, NList] 
                0x00000001824ecc18 (    0x14) GCC_except_table857 [NameNList, MangledNameNList, NList] 
                0x00000001824ecc2c (    0x30) GCC_except_table858 [NameNList, MangledNameNList, NList] 
                0x00000001824ecc5c (    0x1c) GCC_except_table859 [NameNList, MangledNameNList, NList] 
                0x00000001824ecc78 (    0x1c) GCC_except_table861 [NameNList, MangledNameNList, NList] 
                0x00000001824ecc94 (    0x58) GCC_except_table862 [NameNList, MangledNameNList, NList] 
                0x00000001824eccec (    0x30) GCC_except_table867 [NameNList, MangledNameNList, NList] 
                0x00000001824ecd1c (    0x3c) GCC_except_table868 [NameNList, MangledNameNList, NList] 
                0x00000001824ecd58 (    0x30) GCC_except_table871 [NameNList, MangledNameNList, NList] 
                0x00000001824ecd88 (    0x18) GCC_except_table872 [NameNList, MangledNameNList, NList] 
                0x00000001824ecda0 (    0x30) GCC_except_table873 [NameNList, MangledNameNList, NList] 
                0x00000001824ecdd0 (    0x18) GCC_except_table874 [NameNList, MangledNameNList, NList] 
                0x00000001824ecde8 (    0x40) GCC_except_table875 [NameNList, MangledNameNList, NList] 
                0x00000001824ece28 (    0x60) GCC_except_table877 [NameNList, MangledNameNList, NList] 
                0x00000001824ece88 (    0x60) GCC_except_table878 [NameNList, MangledNameNList, NList] 
                0x00000001824ecee8 (    0x5c) GCC_except_table880 [NameNList, MangledNameNList, NList] 
                0x00000001824ecf44 (     0xc) GCC_except_table881 [NameNList, MangledNameNList, NList] 
                0x00000001824ecf50 (     0xc) GCC_except_table882 [NameNList, MangledNameNList, NList] 
                0x00000001824ecf5c (    0x30) GCC_except_table889 [NameNList, MangledNameNList, NList] 
                0x00000001824ecf8c (    0x18) GCC_except_table890 [NameNList, MangledNameNList, NList] 
                0x00000001824ecfa4 (    0x48) GCC_except_table891 [NameNList, MangledNameNList, NList] 
                0x00000001824ecfec (    0x30) GCC_except_table893 [NameNList, MangledNameNList, NList] 
                0x00000001824ed01c (    0x18) GCC_except_table894 [NameNList, MangledNameNList, NList] 
                0x00000001824ed034 (    0x48) GCC_except_table895 [NameNList, MangledNameNList, NList] 
                0x00000001824ed07c (    0x48) GCC_except_table897 [NameNList, MangledNameNList, NList] 
                0x00000001824ed0c4 (    0x30) GCC_except_table899 [NameNList, MangledNameNList, NList] 
                0x00000001824ed0f4 (    0x18) GCC_except_table900 [NameNList, MangledNameNList, NList] 
                0x00000001824ed10c (    0x30) GCC_except_table901 [NameNList, MangledNameNList, NList] 
                0x00000001824ed13c (    0x18) GCC_except_table902 [NameNList, MangledNameNList, NList] 
                0x00000001824ed154 (    0x48) GCC_except_table903 [NameNList, MangledNameNList, NList] 
                0x00000001824ed19c (    0x18) GCC_except_table904 [NameNList, MangledNameNList, NList] 
                0x00000001824ed1b4 (    0x44) GCC_except_table905 [NameNList, MangledNameNList, NList] 
                0x00000001824ed1f8 (    0x14) GCC_except_table906 [NameNList, MangledNameNList, NList] 
                0x00000001824ed20c (    0x30) GCC_except_table909 [NameNList, MangledNameNList, NList] 
                0x00000001824ed23c (    0x3c) GCC_except_table910 [NameNList, MangledNameNList, NList] 
                0x00000001824ed278 (    0x30) GCC_except_table911 [NameNList, MangledNameNList, NList] 
                0x00000001824ed2a8 (    0x58) GCC_except_table912 [NameNList, MangledNameNList, NList] 
                0x00000001824ed300 (    0x30) GCC_except_table913 [NameNList, MangledNameNList, NList] 
                0x00000001824ed330 (    0x18) GCC_except_table914 [NameNList, MangledNameNList, NList] 
                0x00000001824ed348 (    0x30) GCC_except_table915 [NameNList, MangledNameNList, NList] 
                0x00000001824ed378 (    0x18) GCC_except_table916 [NameNList, MangledNameNList, NList] 
                0x00000001824ed390 (    0x30) GCC_except_table917 [NameNList, MangledNameNList, NList] 
                0x00000001824ed3c0 (    0x1c) GCC_except_table918 [NameNList, MangledNameNList, NList] 
                0x00000001824ed3dc (    0x30) GCC_except_table920 [NameNList, MangledNameNList, NList] 
                0x00000001824ed40c (    0x18) GCC_except_table921 [NameNList, MangledNameNList, NList] 
                0x00000001824ed424 (    0x30) GCC_except_table922 [NameNList, MangledNameNList, NList] 
                0x00000001824ed454 (    0x18) GCC_except_table923 [NameNList, MangledNameNList, NList] 
                0x00000001824ed46c (    0x30) GCC_except_table924 [NameNList, MangledNameNList, NList] 
                0x00000001824ed49c (    0x18) GCC_except_table925 [NameNList, MangledNameNList, NList] 
                0x00000001824ed4b4 (    0x30) GCC_except_table926 [NameNList, MangledNameNList, NList] 
                0x00000001824ed4e4 (    0x18) GCC_except_table927 [NameNList, MangledNameNList, NList] 
                0x00000001824ed4fc (    0x30) GCC_except_table928 [NameNList, MangledNameNList, NList] 
                0x00000001824ed52c (    0x18) GCC_except_table929 [NameNList, MangledNameNList, NList] 
                0x00000001824ed544 (    0x2c) GCC_except_table930 [NameNList, MangledNameNList, NList] 
                0x00000001824ed570 (    0x10) GCC_except_table932 [NameNList, MangledNameNList, NList] 
                0x00000001824ed580 (    0x24) GCC_except_table937 [NameNList, MangledNameNList, NList] 
                0x00000001824ed5a4 (    0x14) GCC_except_table938 [NameNList, MangledNameNList, NList] 
                0x00000001824ed5b8 (    0x30) GCC_except_table939 [NameNList, MangledNameNList, NList] 
                0x00000001824ed5e8 (    0x1c) GCC_except_table940 [NameNList, MangledNameNList, NList] 
                0x00000001824ed604 (    0x54) GCC_except_table943 [NameNList, MangledNameNList, NList] 
                0x00000001824ed658 (    0x10) GCC_except_table946 [NameNList, MangledNameNList, NList] 
                0x00000001824ed668 (    0x38) GCC_except_table947 [NameNList, MangledNameNList, NList] 
                0x00000001824ed6a0 (    0x10) GCC_except_table948 [NameNList, MangledNameNList, NList] 
                0x00000001824ed6b0 (    0x10) GCC_except_table952 [NameNList, MangledNameNList, NList] 
                0x00000001824ed6c0 (    0x18) GCC_except_table954 [NameNList, MangledNameNList, NList] 
                0x00000001824ed6d8 (    0x10) GCC_except_table956 [NameNList, MangledNameNList, NList] 
                0x00000001824ed6e8 (    0x18) GCC_except_table958 [NameNList, MangledNameNList, NList] 
                0x00000001824ed700 (    0x30) GCC_except_table959 [NameNList, MangledNameNList, NList] 
                0x00000001824ed730 (    0x18) GCC_except_table960 [NameNList, MangledNameNList, NList] 
                0x00000001824ed748 (    0x30) GCC_except_table963 [NameNList, MangledNameNList, NList] 
                0x00000001824ed778 (    0x18) GCC_except_table964 [NameNList, MangledNameNList, NList] 
                0x00000001824ed790 (    0x30) GCC_except_table965 [NameNList, MangledNameNList, NList] 
                0x00000001824ed7c0 (    0x1c) GCC_except_table966 [NameNList, MangledNameNList, NList] 
                0x00000001824ed7dc (    0x34) GCC_except_table967 [NameNList, MangledNameNList, NList] 
                0x00000001824ed810 (    0x10) GCC_except_table968 [NameNList, MangledNameNList, NList] 
                0x00000001824ed820 (     0xc) GCC_except_table969 [NameNList, MangledNameNList, NList] 
                0x00000001824ed82c (    0x10) GCC_except_table976 [NameNList, MangledNameNList, NList] 
                0x00000001824ed83c (    0x18) GCC_except_table978 [NameNList, MangledNameNList, NList] 
                0x00000001824ed854 (    0x38) GCC_except_table979 [NameNList, MangledNameNList, NList] 
                0x00000001824ed88c (    0x20) GCC_except_table980 [NameNList, MangledNameNList, NList] 
                0x00000001824ed8ac (    0x30) GCC_except_table981 [NameNList, MangledNameNList, NList] 
                0x00000001824ed8dc (    0x18) GCC_except_table982 [NameNList, MangledNameNList, NList] 
                0x00000001824ed8f4 (   0x100) GCC_except_table983 [NameNList, MangledNameNList, NList] 
                0x00000001824ed9f4 (    0x18) GCC_except_table984 [NameNList, MangledNameNList, NList] 
                0x00000001824eda0c (    0x30) GCC_except_table985 [NameNList, MangledNameNList, NList] 
                0x00000001824eda3c (    0x10) GCC_except_table986 [NameNList, MangledNameNList, NList] 
                0x00000001824eda4c (    0x10) GCC_except_table990 [NameNList, MangledNameNList, NList] 
                0x00000001824eda5c (    0x18) GCC_except_table992 [NameNList, MangledNameNList, NList] 
                0x00000001824eda74 (    0x10) GCC_except_table995 [NameNList, MangledNameNList, NList] 
                0x00000001824eda84 (    0x18) GCC_except_table997 [NameNList, MangledNameNList, NList] 
                0x00000001824eda9c (    0x10) GCC_except_table999 [NameNList, MangledNameNList, NList] 
                0x00000001824edaac (    0x34) GCC_except_table1001 [NameNList, MangledNameNList, NList] 
                0x00000001824edae0 (    0x10) GCC_except_table1004 [NameNList, MangledNameNList, NList] 
                0x00000001824edaf0 (    0x18) GCC_except_table1006 [NameNList, MangledNameNList, NList] 
                0x00000001824edb08 (   0x120) GCC_except_table1011 [NameNList, MangledNameNList, NList] 
                0x00000001824edc28 (    0x10) GCC_except_table1017 [NameNList, MangledNameNList, NList] 
                0x00000001824edc38 (    0x14) GCC_except_table1021 [NameNList, MangledNameNList, NList] 
                0x00000001824edc4c (    0x38) GCC_except_table1022 [NameNList, MangledNameNList, NList] 
                0x00000001824edc84 (    0x28) GCC_except_table1023 [NameNList, MangledNameNList, NList] 
                0x00000001824edcac (    0x18) GCC_except_table1024 [NameNList, MangledNameNList, NList] 
                0x00000001824edcc4 (    0x44) GCC_except_table1025 [NameNList, MangledNameNList, NList] 
                0x00000001824edd08 (    0xf0) GCC_except_table1027 [NameNList, MangledNameNList, NList] 
                0x00000001824eddf8 (    0x20) GCC_except_table1028 [NameNList, MangledNameNList, NList] 
                0x00000001824ede18 (    0x10) GCC_except_table1029 [NameNList, MangledNameNList, NList] 
                0x00000001824ede28 (    0x20) GCC_except_table1033 [NameNList, MangledNameNList, NList] 
                0x00000001824ede48 (     0xc) GCC_except_table1034 [NameNList, MangledNameNList, NList] 
                0x00000001824ede54 (    0x18) GCC_except_table1041 [NameNList, MangledNameNList, NList] 
                0x00000001824ede6c (    0x10) GCC_except_table1049 [NameNList, MangledNameNList, NList] 
                0x00000001824ede7c (    0x34) GCC_except_table1098 [NameNList, MangledNameNList, NList] 
                0x00000001824edeb0 (    0x14) GCC_except_table1107 [NameNList, MangledNameNList, NList] 
                0x00000001824edec4 (    0x14) GCC_except_table1108 [NameNList, MangledNameNList, NList] 
                0x00000001824eded8 (    0x14) GCC_except_table1109 [NameNList, MangledNameNList, NList] 
                0x00000001824edeec (    0x14) GCC_except_table1110 [NameNList, MangledNameNList, NList] 
                0x00000001824edf00 (    0x34) GCC_except_table1113 [NameNList, MangledNameNList, NList] 
                0x00000001824edf34 (    0x24) GCC_except_table1114 [NameNList, MangledNameNList, NList] 
                0x00000001824edf58 (    0x14) GCC_except_table1115 [NameNList, MangledNameNList, NList] 
                0x00000001824edf6c (    0x14) GCC_except_table1116 [NameNList, MangledNameNList, NList] 
                0x00000001824edf80 (    0x14) GCC_except_table1117 [NameNList, MangledNameNList, NList] 
                0x00000001824edf94 (    0x14) GCC_except_table1118 [NameNList, MangledNameNList, NList] 
                0x00000001824edfa8 (    0xf0) GCC_except_table1119 [NameNList, MangledNameNList, NList] 
                0x00000001824ee098 (    0x38) GCC_except_table1121 [NameNList, MangledNameNList, NList] 
                0x00000001824ee0d0 (   0x920) GCC_except_table1122 [NameNList, MangledNameNList, NList] 
                0x00000001824ee9f0 (    0x14) GCC_except_table1123 [NameNList, MangledNameNList, NList] 
                0x00000001824eea04 (    0x14) GCC_except_table1124 [NameNList, MangledNameNList, NList] 
                0x00000001824eea18 (    0x14) GCC_except_table1126 [NameNList, MangledNameNList, NList] 
                0x00000001824eea2c (    0x24) GCC_except_table1127 [NameNList, MangledNameNList, NList] 
                0x00000001824eea50 (    0x30) GCC_except_table1128 [NameNList, MangledNameNList, NList] 
                0x00000001824eea80 (    0x10) GCC_except_table1130 [NameNList, MangledNameNList, NList] 
                0x00000001824eea90 (    0x50) GCC_except_table1131 [NameNList, MangledNameNList, NList] 
                0x00000001824eeae0 (    0x28) GCC_except_table1132 [NameNList, MangledNameNList, NList] 
                0x00000001824eeb08 (    0x8c) GCC_except_table1146 [NameNList, MangledNameNList, NList] 
                0x00000001824eeb94 (   0x1d8) GCC_except_table1149 [NameNList, MangledNameNList, NList] 
                0x00000001824eed6c (    0x10) GCC_except_table1150 [NameNList, MangledNameNList, NList] 
                0x00000001824eed7c (    0x10) GCC_except_table1158 [NameNList, MangledNameNList, NList] 
                0x00000001824eed8c (    0x28) GCC_except_table1166 [NameNList, MangledNameNList, NList] 
                0x00000001824eedb4 (    0x28) GCC_except_table1168 [NameNList, MangledNameNList, NList] 
                0x00000001824eeddc (    0x30) GCC_except_table1174 [NameNList, MangledNameNList, NList] 
                0x00000001824eee0c (    0x18) GCC_except_table1176 [NameNList, MangledNameNList, NList] 
                0x00000001824eee24 (    0x10) GCC_except_table1177 [NameNList, MangledNameNList, NList] 
                0x00000001824eee34 (    0x10) GCC_except_table1179 [NameNList, MangledNameNList, NList] 
                0x00000001824eee44 (   0x108) GCC_except_table1181 [NameNList, MangledNameNList, NList] 
                0x00000001824eef4c (    0x5c) GCC_except_table1183 [NameNList, MangledNameNList, NList] 
                0x00000001824eefa8 (   0x110) GCC_except_table1185 [NameNList, MangledNameNList, NList] 
                0x00000001824ef0b8 (    0x14) GCC_except_table1186 [NameNList, MangledNameNList, NList] 
                0x00000001824ef0cc (     0xc) GCC_except_table1188 [NameNList, MangledNameNList, NList] 
                0x00000001824ef0d8 (    0x10) GCC_except_table1194 [NameNList, MangledNameNList, NList] 
                0x00000001824ef0e8 (    0x10) GCC_except_table1199 [NameNList, MangledNameNList, NList] 
                0x00000001824ef0f8 (    0x18) GCC_except_table1201 [NameNList, MangledNameNList, NList] 
                0x00000001824ef110 (    0x10) GCC_except_table1204 [NameNList, MangledNameNList, NList] 
                0x00000001824ef120 (    0x10) GCC_except_table1209 [NameNList, MangledNameNList, NList] 
                0x00000001824ef130 (    0x20) GCC_except_table1211 [NameNList, MangledNameNList, NList] 
                0x00000001824ef150 (    0x10) GCC_except_table1213 [NameNList, MangledNameNList, NList] 
                0x00000001824ef160 (    0x18) GCC_except_table1215 [NameNList, MangledNameNList, NList] 
                0x00000001824ef178 (    0x10) GCC_except_table1218 [NameNList, MangledNameNList, NList] 
                0x00000001824ef188 (    0x38) GCC_except_table1220 [NameNList, MangledNameNList, NList] 
                0x00000001824ef1c0 (    0x10) GCC_except_table1223 [NameNList, MangledNameNList, NList] 
                0x00000001824ef1d0 (    0x20) GCC_except_table1225 [NameNList, MangledNameNList, NList] 
                0x00000001824ef1f0 (    0x10) GCC_except_table1227 [NameNList, MangledNameNList, NList] 
                0x00000001824ef200 (    0x20) GCC_except_table1229 [NameNList, MangledNameNList, NList] 
                0x00000001824ef220 (    0x10) GCC_except_table1231 [NameNList, MangledNameNList, NList] 
                0x00000001824ef230 (    0x18) GCC_except_table1233 [NameNList, MangledNameNList, NList] 
                0x00000001824ef248 (    0x10) GCC_except_table1236 [NameNList, MangledNameNList, NList] 
                0x00000001824ef258 (    0x20) GCC_except_table1238 [NameNList, MangledNameNList, NList] 
                0x00000001824ef278 (    0x10) GCC_except_table1240 [NameNList, MangledNameNList, NList] 
                0x00000001824ef288 (    0x20) GCC_except_table1242 [NameNList, MangledNameNList, NList] 
                0x00000001824ef2a8 (    0x10) GCC_except_table1244 [NameNList, MangledNameNList, NList] 
                0x00000001824ef2b8 (    0x18) GCC_except_table1246 [NameNList, MangledNameNList, NList] 
                0x00000001824ef2d0 (    0x10) GCC_except_table1249 [NameNList, MangledNameNList, NList] 
                0x00000001824ef2e0 (    0x20) GCC_except_table1251 [NameNList, MangledNameNList, NList] 
                0x00000001824ef300 (    0x10) GCC_except_table1253 [NameNList, MangledNameNList, NList] 
                0x00000001824ef310 (    0x20) GCC_except_table1255 [NameNList, MangledNameNList, NList] 
                0x00000001824ef330 (    0x10) GCC_except_table1257 [NameNList, MangledNameNList, NList] 
                0x00000001824ef340 (    0x18) GCC_except_table1259 [NameNList, MangledNameNList, NList] 
                0x00000001824ef358 (    0x10) GCC_except_table1260 [NameNList, MangledNameNList, NList] 
                0x00000001824ef368 (    0x10) GCC_except_table1263 [NameNList, MangledNameNList, NList] 
                0x00000001824ef378 (    0x18) GCC_except_table1265 [NameNList, MangledNameNList, NList] 
                0x00000001824ef390 (    0x10) GCC_except_table1267 [NameNList, MangledNameNList, NList] 
                0x00000001824ef3a0 (    0x18) GCC_except_table1276 [NameNList, MangledNameNList, NList] 
                0x00000001824ef3b8 (    0x10) GCC_except_table1278 [NameNList, MangledNameNList, NList] 
                0x00000001824ef3c8 (    0xc0) GCC_except_table1283 [NameNList, MangledNameNList, NList] 
                0x00000001824ef488 (    0x10) GCC_except_table1284 [NameNList, MangledNameNList, NList] 
                0x00000001824ef498 (    0x14) GCC_except_table1288 [NameNList, MangledNameNList, NList] 
                0x00000001824ef4ac (    0x20) GCC_except_table1298 [NameNList, MangledNameNList, NList] 
                0x00000001824ef4cc (    0x14) GCC_except_table1299 [NameNList, MangledNameNList, NList] 
                0x00000001824ef4e0 (    0x14) GCC_except_table1300 [NameNList, MangledNameNList, NList] 
                0x00000001824ef4f4 (    0x10) GCC_except_table1307 [NameNList, MangledNameNList, NList] 
                0x00000001824ef504 (    0x10) GCC_except_table1308 [NameNList, MangledNameNList, NList] 
                0x00000001824ef514 (    0x10) GCC_except_table1309 [NameNList, MangledNameNList, NList] 
                0x00000001824ef524 (    0x14) GCC_except_table1313 [NameNList, MangledNameNList, NList] 
                0x00000001824ef538 (    0x10) GCC_except_table1321 [NameNList, MangledNameNList, NList] 
                0x00000001824ef548 (    0x20) GCC_except_table1322 [NameNList, MangledNameNList, NList] 
                0x00000001824ef568 (    0x18) GCC_except_table1336 [NameNList, MangledNameNList, NList] 
                0x00000001824ef580 (    0x10) GCC_except_table1337 [NameNList, MangledNameNList, NList] 
                0x00000001824ef590 (     0xc) GCC_except_table1342 [NameNList, MangledNameNList, NList] 
                0x00000001824ef59c (    0x2c) GCC_except_table1358 [NameNList, MangledNameNList, NList] 
                0x00000001824ef5c8 (    0xa8) GCC_except_table1359 [NameNList, MangledNameNList, NList] 
                0x00000001824ef670 (    0x10) GCC_except_table1362 [NameNList, MangledNameNList, NList] 
                0x00000001824ef680 (    0x14) GCC_except_table1384 [NameNList, MangledNameNList, NList] 
                0x00000001824ef694 (   0x2a4) GCC_except_table1390 [NameNList, MangledNameNList, NList] 
                0x00000001824ef938 (    0x3c) GCC_except_table1403 [NameNList, MangledNameNList, NList] 
                0x00000001824ef974 (    0x14) GCC_except_table1404 [NameNList, MangledNameNList, NList] 
                0x00000001824ef988 (    0x34) GCC_except_table1406 [NameNList, MangledNameNList, NList] 
                0x00000001824ef9bc (    0x34) GCC_except_table1413 [NameNList, MangledNameNList, NList] 
                0x00000001824ef9f0 (    0x14) GCC_except_table1414 [NameNList, MangledNameNList, NList] 
                0x00000001824efa04 (    0x34) GCC_except_table1416 [NameNList, MangledNameNList, NList] 
                0x00000001824efa38 (    0x48) GCC_except_table1423 [NameNList, MangledNameNList, NList] 
                0x00000001824efa80 (    0x18) GCC_except_table1425 [NameNList, MangledNameNList, NList] 
                0x00000001824efa98 (    0x14) GCC_except_table1426 [NameNList, MangledNameNList, NList] 
                0x00000001824efaac (    0x44) GCC_except_table1428 [NameNList, MangledNameNList, NList] 
                0x00000001824efaf0 (     0xc) GCC_except_table1429 [NameNList, MangledNameNList, NList] 
                0x00000001824efafc (    0x20) GCC_except_table1441 [NameNList, MangledNameNList, NList] 
                0x00000001824efb1c (    0xdc) GCC_except_table1459 [NameNList, MangledNameNList, NList] 
                0x00000001824efbf8 (    0xb8) GCC_except_table1504 [NameNList, MangledNameNList, NList] 
                0x00000001824efcb0 (    0x44) GCC_except_table1505 [NameNList, MangledNameNList, NList] 
                0x00000001824efcf4 (    0x18) GCC_except_table1526 [NameNList, MangledNameNList, NList] 
                0x00000001824efd0c (    0x18) GCC_except_table1527 [NameNList, MangledNameNList, NList] 
                0x00000001824efd24 (    0x5c) GCC_except_table1528 [NameNList, MangledNameNList, NList] 
                0x00000001824efd80 (    0x18) GCC_except_table1529 [NameNList, MangledNameNList, NList] 
                0x00000001824efd98 (    0x10) GCC_except_table1542 [NameNList, MangledNameNList, NList] 
                0x00000001824efda8 (    0x10) GCC_except_table1544 [NameNList, MangledNameNList, NList] 
                0x00000001824efdb8 (    0x10) GCC_except_table1546 [NameNList, MangledNameNList, NList] 
                0x00000001824efdc8 (    0x30) GCC_except_table1547 [NameNList, MangledNameNList, NList] 
                0x00000001824efdf8 (    0x10) GCC_except_table1552 [NameNList, MangledNameNList, NList] 
                0x00000001824efe08 (    0x14) GCC_except_table1553 [NameNList, MangledNameNList, NList] 
                0x00000001824efe1c (    0x10) GCC_except_table1555 [NameNList, MangledNameNList, NList] 
                0x00000001824efe2c (    0xa0) GCC_except_table1576 [NameNList, MangledNameNList, NList] 
                0x00000001824efecc (    0x1c) GCC_except_table1577 [NameNList, MangledNameNList, NList] 
                0x00000001824efee8 (    0x30) GCC_except_table1580 [NameNList, MangledNameNList, NList] 
                0x00000001824eff18 (    0x2c) GCC_except_table1581 [NameNList, MangledNameNList, NList] 
                0x00000001824eff44 (    0x10) GCC_except_table1585 [NameNList, MangledNameNList, NList] 
                0x00000001824eff54 (    0x18) GCC_except_table1603 [NameNList, MangledNameNList, NList] 
                0x00000001824eff6c (    0x18) GCC_except_table1640 [NameNList, MangledNameNList, NList] 
                0x00000001824eff84 (    0x50) GCC_except_table1646 [NameNList, MangledNameNList, NList] 
                0x00000001824effd4 (    0x14) GCC_except_table1647 [NameNList, MangledNameNList, NList] 
                0x00000001824effe8 (    0x24) GCC_except_table1657 [NameNList, MangledNameNList, NList] 
                0x00000001824f000c (    0x24) GCC_except_table1682 [NameNList, MangledNameNList, NList] 
                0x00000001824f0030 (    0x14) GCC_except_table1685 [NameNList, MangledNameNList, NList] 
                0x00000001824f0044 (    0x14) GCC_except_table1694 [NameNList, MangledNameNList, NList] 
                0x00000001824f0058 (    0x1c) GCC_except_table1699 [NameNList, MangledNameNList, NList] 
                0x00000001824f0074 (    0x3c) GCC_except_table1700 [NameNList, MangledNameNList, NList] 
                0x00000001824f00b0 (    0x6c) GCC_except_table1702 [NameNList, MangledNameNList, NList] 
                0x00000001824f011c (    0x1c) GCC_except_table1703 [NameNList, MangledNameNList, NList] 
                0x00000001824f0138 (    0x68) GCC_except_table1705 [NameNList, MangledNameNList, NList] 
                0x00000001824f01a0 (    0x10) GCC_except_table1721 [NameNList, MangledNameNList, NList] 
                0x00000001824f01b0 (    0x10) GCC_except_table1723 [NameNList, MangledNameNList, NList] 
                0x00000001824f01c0 (    0x10) GCC_except_table1724 [NameNList, MangledNameNList, NList] 
                0x00000001824f01d0 (    0x20) GCC_except_table1725 [NameNList, MangledNameNList, NList] 
                0x00000001824f01f0 (    0x10) GCC_except_table1727 [NameNList, MangledNameNList, NList] 
                0x00000001824f0200 (    0x20) GCC_except_table1729 [NameNList, MangledNameNList, NList] 
                0x00000001824f0220 (   0x154) GCC_except_table1740 [NameNList, MangledNameNList, NList] 
                0x00000001824f0374 (    0x14) GCC_except_table1746 [NameNList, MangledNameNList, NList] 
                0x00000001824f0388 (    0x3c) GCC_except_table1748 [NameNList, MangledNameNList, NList] 
                0x00000001824f03c4 (    0x58) GCC_except_table1775 [NameNList, MangledNameNList, NList] 
                0x00000001824f041c (    0x50) GCC_except_table1794 [NameNList, MangledNameNList, NList] 
                0x00000001824f046c (    0x20) GCC_except_table1816 [NameNList, MangledNameNList, NList] 
                0x00000001824f048c (    0x20) GCC_except_table1819 [NameNList, MangledNameNList, NList] 
                0x00000001824f04ac (    0x20) GCC_except_table1820 [NameNList, MangledNameNList, NList] 
                0x00000001824f04cc (    0x10) GCC_except_table1821 [NameNList, MangledNameNList, NList] 
                0x00000001824f04dc (    0x10) GCC_except_table1832 [NameNList, MangledNameNList, NList] 
                0x00000001824f04ec (    0x1c) GCC_except_table1834 [NameNList, MangledNameNList, NList] 
                0x00000001824f0508 (    0x4c) GCC_except_table1835 [NameNList, MangledNameNList, NList] 
                0x00000001824f0554 (    0x34) GCC_except_table1837 [NameNList, MangledNameNList, NList] 
                0x00000001824f0588 (    0x64) GCC_except_table1838 [NameNList, MangledNameNList, NList] 
                0x00000001824f05ec (    0x34) GCC_except_table1840 [NameNList, MangledNameNList, NList] 
                0x00000001824f0620 (    0x24) GCC_except_table1841 [NameNList, MangledNameNList, NList] 
                0x00000001824f0644 (   0x130) GCC_except_table1845 [NameNList, MangledNameNList, NList] 
                0x00000001824f0774 (     0xc) GCC_except_table1850 [NameNList, MangledNameNList, NList] 
                0x00000001824f0780 (    0x20) GCC_except_table1852 [NameNList, MangledNameNList, NList] 
                0x00000001824f07a0 (     0xc) GCC_except_table1853 [NameNList, MangledNameNList, NList] 
                0x00000001824f07ac (    0x6c) GCC_except_table1854 [NameNList, MangledNameNList, NList] 
                0x00000001824f0818 (    0x10) GCC_except_table1855 [NameNList, MangledNameNList, NList] 
                0x00000001824f0828 (    0x2c) GCC_except_table1856 [NameNList, MangledNameNList, NList] 
                0x00000001824f0854 (    0x54) GCC_except_table1857 [NameNList, MangledNameNList, NList] 
                0x00000001824f08a8 (   0x2e0) GCC_except_table1862 [NameNList, MangledNameNList, NList] 
                0x00000001824f0b88 (    0x14) GCC_except_table1865 [NameNList, MangledNameNList, NList] 
                0x00000001824f0b9c (   0x150) GCC_except_table1867 [NameNList, MangledNameNList, NList] 
                0x00000001824f0cec (   0x254) GCC_except_table1874 [NameNList, MangledNameNList, NList] 
                0x00000001824f0f40 (    0x30) GCC_except_table1878 [NameNList, MangledNameNList, NList] 
                0x00000001824f0f70 (    0xf0) GCC_except_table1880 [NameNList, MangledNameNList, NList] 
                0x00000001824f1060 (    0x18) GCC_except_table1881 [NameNList, MangledNameNList, NList] 
                0x00000001824f1078 (    0x44) GCC_except_table1882 [NameNList, MangledNameNList, NList] 
                0x00000001824f10bc (    0x18) GCC_except_table1889 [NameNList, MangledNameNList, NList] 
                0x00000001824f10d4 (    0x10) GCC_except_table1891 [NameNList, MangledNameNList, NList] 
                0x00000001824f10e4 (    0x14) GCC_except_table1894 [NameNList, MangledNameNList, NList] 
                0x00000001824f10f8 (    0x10) GCC_except_table1896 [NameNList, MangledNameNList, NList] 
                0x00000001824f1108 (    0x1c) GCC_except_table1910 [NameNList, MangledNameNList, NList] 
                0x00000001824f1124 (    0x1c) GCC_except_table1911 [NameNList, MangledNameNList, NList] 
                0x00000001824f1140 (    0x10) GCC_except_table1915 [NameNList, MangledNameNList, NList] 
                0x00000001824f1150 (    0x10) GCC_except_table1916 [NameNList, MangledNameNList, NList] 
                0x00000001824f1160 (    0x10) GCC_except_table1917 [NameNList, MangledNameNList, NList] 
                0x00000001824f1170 (    0x10) GCC_except_table1918 [NameNList, MangledNameNList, NList] 
                0x00000001824f1180 (    0x18) GCC_except_table1919 [NameNList, MangledNameNList, NList] 
                0x00000001824f1198 (    0x20) GCC_except_table1959 [NameNList, MangledNameNList, NList] 
                0x00000001824f11b8 (    0x10) GCC_except_table1960 [NameNList, MangledNameNList, NList] 
                0x00000001824f11c8 (    0x2c) GCC_except_table1966 [NameNList, MangledNameNList, NList] 
                0x00000001824f11f4 (    0x30) GCC_except_table1969 [NameNList, MangledNameNList, NList] 
                0x00000001824f1224 (    0x20) GCC_except_table1991 [NameNList, MangledNameNList, NList] 
                0x00000001824f1244 (    0x24) GCC_except_table1992 [NameNList, MangledNameNList, NList] 
                0x00000001824f1268 (    0x14) GCC_except_table2039 [NameNList, MangledNameNList, NList] 
                0x00000001824f127c (    0x48) GCC_except_table2045 [NameNList, MangledNameNList, NList] 
                0x00000001824f12c4 (    0x10) GCC_except_table2046 [NameNList, MangledNameNList, NList] 
                0x00000001824f12d4 (    0x10) GCC_except_table2047 [NameNList, MangledNameNList, NList] 
                0x00000001824f12e4 (    0x10) GCC_except_table2048 [NameNList, MangledNameNList, NList] 
                0x00000001824f12f4 (    0x10) GCC_except_table2049 [NameNList, MangledNameNList, NList] 
                0x00000001824f1304 (    0x20) GCC_except_table2050 [NameNList, MangledNameNList, NList] 
                0x00000001824f1324 (    0x68) GCC_except_table2051 [NameNList, MangledNameNList, NList] 
                0x00000001824f138c (    0x74) GCC_except_table2052 [NameNList, MangledNameNList, NList] 
                0x00000001824f1400 (    0x10) GCC_except_table2053 [NameNList, MangledNameNList, NList] 
                0x00000001824f1410 (    0x14) GCC_except_table2054 [NameNList, MangledNameNList, NList] 
                0x00000001824f1424 (    0x40) GCC_except_table2056 [NameNList, MangledNameNList, NList] 
                0x00000001824f1464 (     0xc) GCC_except_table2057 [NameNList, MangledNameNList, NList] 
                0x00000001824f1470 (    0x14) GCC_except_table2064 [NameNList, MangledNameNList, NList] 
                0x00000001824f1484 (    0x34) GCC_except_table2066 [NameNList, MangledNameNList, NList] 
                0x00000001824f14b8 (    0x3c) GCC_except_table2076 [NameNList, MangledNameNList, NList] 
                0x00000001824f14f4 (    0x28) GCC_except_table2082 [NameNList, MangledNameNList, NList] 
                0x00000001824f151c (    0x4c) GCC_except_table2105 [NameNList, MangledNameNList, NList] 
                0x00000001824f1568 (    0x14) GCC_except_table2139 [NameNList, MangledNameNList, NList] 
                0x00000001824f157c (    0x4c) GCC_except_table2194 [NameNList, MangledNameNList, NList] 
                0x00000001824f15c8 (    0x40) GCC_except_table2195 [NameNList, MangledNameNList, NList] 
                0x00000001824f1608 (    0x14) GCC_except_table2196 [NameNList, MangledNameNList, NList] 
                0x00000001824f161c (    0x30) GCC_except_table2223 [NameNList, MangledNameNList, NList] 
                0x00000001824f164c (    0x18) GCC_except_table2225 [NameNList, MangledNameNList, NList] 
                0x00000001824f1664 (    0x60) GCC_except_table2231 [NameNList, MangledNameNList, NList] 
                0x00000001824f16c4 (    0x3c) GCC_except_table2237 [NameNList, MangledNameNList, NList] 
                0x00000001824f1700 (    0x54) GCC_except_table2255 [NameNList, MangledNameNList, NList] 
                0x00000001824f1754 (    0x20) GCC_except_table2258 [NameNList, MangledNameNList, NList] 
                0x00000001824f1774 (    0x48) GCC_except_table2259 [NameNList, MangledNameNList, NList] 
                0x00000001824f17bc (    0x88) GCC_except_table2260 [NameNList, MangledNameNList, NList] 
                0x00000001824f1844 (    0x18) GCC_except_table2269 [NameNList, MangledNameNList, NList] 
                0x00000001824f185c (   0x180) GCC_except_table2271 [NameNList, MangledNameNList, NList] 
                0x00000001824f19dc (    0x40) GCC_except_table2275 [NameNList, MangledNameNList, NList] 
                0x00000001824f1a1c (    0x28) GCC_except_table2278 [NameNList, MangledNameNList, NList] 
                0x00000001824f1a44 (    0xd8) GCC_except_table2281 [NameNList, MangledNameNList, NList] 
                0x00000001824f1b1c (    0x44) GCC_except_table2282 [NameNList, MangledNameNList, NList] 
                0x00000001824f1b60 (    0x28) GCC_except_table2283 [NameNList, MangledNameNList, NList] 
                0x00000001824f1b88 (    0x1c) GCC_except_table2284 [NameNList, MangledNameNList, NList] 
                0x00000001824f1ba4 (    0x10) GCC_except_table2287 [NameNList, MangledNameNList, NList] 
                0x00000001824f1bb4 (    0x10) GCC_except_table2288 [NameNList, MangledNameNList, NList] 
                0x00000001824f1bc4 (    0x10) GCC_except_table2293 [NameNList, MangledNameNList, NList] 
                0x00000001824f1bd4 (    0x98) GCC_except_table2295 [NameNList, MangledNameNList, NList] 
                0x00000001824f1c6c (    0x14) GCC_except_table2296 [NameNList, MangledNameNList, NList] 
                0x00000001824f1c80 (    0x20) GCC_except_table2298 [NameNList, MangledNameNList, NList] 
                0x00000001824f1ca0 (    0x10) GCC_except_table2299 [NameNList, MangledNameNList, NList] 
                0x00000001824f1cb0 (    0x1c) GCC_except_table2300 [NameNList, MangledNameNList, NList] 
                0x00000001824f1ccc (    0x44) GCC_except_table2301 [NameNList, MangledNameNList, NList] 
                0x00000001824f1d10 (    0x14) GCC_except_table2328 [NameNList, MangledNameNList, NList] 
                0x00000001824f1d24 (    0x10) GCC_except_table2335 [NameNList, MangledNameNList, NList] 
                0x00000001824f1d34 (    0x10) GCC_except_table2336 [NameNList, MangledNameNList, NList] 
                0x00000001824f1d44 (    0x10) GCC_except_table2337 [NameNList, MangledNameNList, NList] 
                0x00000001824f1d54 (    0x10) GCC_except_table2338 [NameNList, MangledNameNList, NList] 
                0x00000001824f1d64 (    0x10) GCC_except_table2339 [NameNList, MangledNameNList, NList] 
                0x00000001824f1d74 (   0x240) GCC_except_table2343 [NameNList, MangledNameNList, NList] 
                0x00000001824f1fb4 (    0x28) GCC_except_table2344 [NameNList, MangledNameNList, NList] 
                0x00000001824f1fdc (    0x58) GCC_except_table2346 [NameNList, MangledNameNList, NList] 
                0x00000001824f2034 (     0xc) GCC_except_table2347 [NameNList, MangledNameNList, NList] 
                0x00000001824f2040 (    0x18) GCC_except_table2348 [NameNList, MangledNameNList, NList] 
                0x00000001824f2058 (    0x28) GCC_except_table2350 [NameNList, MangledNameNList, NList] 
                0x00000001824f2080 (    0x34) GCC_except_table2361 [NameNList, MangledNameNList, NList] 
                0x00000001824f20b4 (    0x18) GCC_except_table2367 [NameNList, MangledNameNList, NList] 
                0x00000001824f20cc (    0x10) GCC_except_table2385 [NameNList, MangledNameNList, NList] 
                0x00000001824f20dc (    0x10) GCC_except_table2390 [NameNList, MangledNameNList, NList] 
                0x00000001824f20ec (    0x10) GCC_except_table2423 [NameNList, MangledNameNList, NList] 
            0x00000001824f20fc (   0xbcc) __TEXT __oslogstring
            0x00000001824f2cc8 ( 0x21789) __TEXT __cstring
            0x0000000182514451 (   0x142) __TEXT __dlopen_cstrs
                0x0000000182514451 (    0x58) audit_stringCoreAnalytics [NameNList, MangledNameNList, NList] 
                0x00000001825144a9 (    0x4e) audit_stringSkyLight [NameNList, MangledNameNList, NList] 
                0x00000001825144f7 (    0x4e) audit_stringSkyLight (.1026) [NameNList, MangledNameNList, NList] 
                0x0000000182514545 (    0x4e) audit_stringSkyLight (.2187) [NameNList, MangledNameNList, NList] 
            0x0000000182514594 (  0x3288) __TEXT __unwind_info
            0x0000000182517820 (    0x38) __TEXT __eh_frame
            0x0000000182517858 (    0x6e) __TEXT __objc_classname
            0x00000001825178c6 (  0x10bc) __TEXT __objc_methname
            0x0000000182518982 (   0x1bc) __TEXT __objc_methtype
            0x0000000182518b40 (  0x14c0) __TEXT __objc_stubs
                0x0000000182518b40 (    0x20) objc_msgSend$UTF8String [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182518b60 (    0x20) objc_msgSend$acceleratorPort [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182518b80 (    0x20) objc_msgSend$activePresetIndex [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182518ba0 (    0x20) objc_msgSend$addObject: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182518bc0 (    0x20) objc_msgSend$applyProxySettings: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182518be0 (    0x20) objc_msgSend$applySettings: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182518c00 (    0x20) objc_msgSend$archivedDataWithRootObject:requiringSecureCoding:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182518c20 (    0x20) objc_msgSend$arrayWithObjects:count: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182518c40 (    0x20) objc_msgSend$backlightWithFramebuffer:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182518c60 (    0x20) objc_msgSend$blitCommandEncoder [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182518c80 (    0x20) objc_msgSend$boolValue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182518ca0 (    0x20) objc_msgSend$bundleIdentifier [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182518cc0 (    0x20) objc_msgSend$bundleWithPath: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182518ce0 (    0x20) objc_msgSend$bytes [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182518d00 (    0x20) objc_msgSend$cStringUsingEncoding: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182518d20 (    0x20) objc_msgSend$close [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182518d40 (    0x20) objc_msgSend$code [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182518d60 (    0x20) objc_msgSend$colorAttachments [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182518d80 (    0x20) objc_msgSend$commandBuffer [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182518da0 (    0x20) objc_msgSend$commit [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182518dc0 (    0x20) objc_msgSend$commitAndWaitUntilSubmitted [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182518de0 (    0x20) objc_msgSend$compilerPropagatesThreadPriority: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182518e00 (    0x20) objc_msgSend$containsObject: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182518e20 (    0x20) objc_msgSend$contents [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182518e40 (    0x20) objc_msgSend$copy [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182518e60 (    0x20) objc_msgSend$copyCFContainerId [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182518e80 (    0x20) objc_msgSend$copyCalibrationInfo [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182518ea0 (    0x20) objc_msgSend$copyDeviceForContainer: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182518ec0 (    0x20) objc_msgSend$copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:options: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182518ee0 (    0x20) objc_msgSend$copyPresetAtIndex: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182518f00 (    0x20) objc_msgSend$copyPresetDataAtIndex: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182518f20 (    0x20) objc_msgSend$copyUserAdjustment [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182518f40 (    0x20) objc_msgSend$copyUserAdjustmentData [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182518f60 (    0x20) objc_msgSend$count [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182518f80 (    0x20) objc_msgSend$countByEnumeratingWithState:objects:count: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182518fa0 (    0x20) objc_msgSend$dataWithBytes:length: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182518fc0 (    0x20) objc_msgSend$debugDescription [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182518fe0 (    0x20) objc_msgSend$description [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519000 (    0x20) objc_msgSend$dictionaryWithObjects:forKeys:count: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519020 (    0x20) objc_msgSend$displayID [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519040 (    0x20) objc_msgSend$doubleValue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519060 (    0x20) objc_msgSend$drawPrimitives:vertexStart:vertexCount: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519080 (    0x20) objc_msgSend$endEncoding [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001825190a0 (    0x20) objc_msgSend$enumerateKeysAndObjectsUsingBlock: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001825190c0 (    0x20) objc_msgSend$errorWithDomain:code:userInfo: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001825190e0 (    0x20) objc_msgSend$factoryDefaultPresetIndex [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519100 (    0x20) objc_msgSend$factoryResetWithType: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519120 (    0x20) objc_msgSend$floatValue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519140 (    0x20) objc_msgSend$forgetPort: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519160 (    0x20) objc_msgSend$getCString:maxLength:encoding: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519180 (    0x20) objc_msgSend$getLinearBrightness:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001825191a0 (    0x20) objc_msgSend$getLinearBrightness:forUser:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001825191c0 (    0x20) objc_msgSend$getUserBrightness:forLinear:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001825191e0 (    0x20) objc_msgSend$initWithCapacity: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519200 (    0x20) objc_msgSend$initWithDemux:strong:name: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519220 (    0x20) objc_msgSend$initWithListener:options:clientHandler_port:proxyRPC_port: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519240 (    0x20) objc_msgSend$initWithOptions:queue:terminationHandler:context: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519260 (    0x20) objc_msgSend$initWithVendorID:productID:serialNum:name:sizeInMillimeters:maxPixelsWide:maxPixelsHigh:redPrimary:greenPrimary:bluePrimary:whitePoint:queue:terminationHandler:arg: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519280 (    0x20) objc_msgSend$instance [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001825192a0 (    0x20) objc_msgSend$intValue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001825192c0 (    0x20) objc_msgSend$invalidateUserAdjustment [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001825192e0 (    0x20) objc_msgSend$isLowPower [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519300 (    0x20) objc_msgSend$isPresetValidAtIndex: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519320 (    0x20) objc_msgSend$isPresetWritableAtIndex: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519340 (    0x20) objc_msgSend$isRemovable [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519360 (    0x20) objc_msgSend$isUserAdjustmentSupported [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519380 (    0x20) objc_msgSend$isUserAdjustmentValid [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001825193a0 (    0x20) objc_msgSend$length [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001825193c0 (    0x20) objc_msgSend$load [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001825193e0 (    0x20) objc_msgSend$localizations [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519400 (    0x20) objc_msgSend$localizedDescription [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519420 (    0x20) objc_msgSend$lock [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519440 (    0x20) objc_msgSend$luminanceCorrectionFactorForWhitepoint: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519460 (    0x20) objc_msgSend$mainBundle [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519480 (    0x20) objc_msgSend$maxTextureWidth1D [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001825194a0 (    0x20) objc_msgSend$mutableCopy [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001825194c0 (    0x20) objc_msgSend$name [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001825194e0 (    0x20) objc_msgSend$newBufferWithBytes:length:options: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519500 (    0x20) objc_msgSend$newBufferWithLength:options: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519520 (    0x20) objc_msgSend$newCommandQueue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519540 (    0x20) objc_msgSend$newFunctionWithName: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519560 (    0x20) objc_msgSend$newFunctionWithName:constantValues:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519580 (    0x20) objc_msgSend$newLibraryWithFile:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001825195a0 (    0x20) objc_msgSend$newRenderPipelineStateWithDescriptor:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001825195c0 (    0x20) objc_msgSend$newSamplerStateWithDescriptor: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001825195e0 (    0x20) objc_msgSend$newTextureWithDescriptor: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519600 (    0x20) objc_msgSend$newTextureWithDescriptor:iosurface:plane: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519620 (    0x20) objc_msgSend$newTextureWithSurface:buffer: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519640 (    0x20) objc_msgSend$numberWithDouble: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519660 (    0x20) objc_msgSend$numberWithFloat: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519680 (    0x20) objc_msgSend$numberWithUnsignedInt: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001825196a0 (    0x20) objc_msgSend$objectAtIndex: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001825196c0 (    0x20) objc_msgSend$objectAtIndexedSubscript: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001825196e0 (    0x20) objc_msgSend$objectForKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519700 (    0x20) objc_msgSend$objectForKeyedSubscript: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519720 (    0x20) objc_msgSend$objectForPort: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519740 (    0x20) objc_msgSend$pluginWithOptions: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519760 (    0x20) objc_msgSend$presetCount [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519780 (    0x20) objc_msgSend$presetUUIDAtIndex:toBytes: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001825197a0 (    0x20) objc_msgSend$principalClass [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001825197c0 (    0x20) objc_msgSend$proxyGone [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001825197e0 (    0x20) objc_msgSend$registryID [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519800 (    0x20) objc_msgSend$rememberPort:forObject: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519820 (    0x20) objc_msgSend$removeObjectForKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519840 (    0x20) objc_msgSend$renderCommandEncoderWithDescriptor: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519860 (    0x20) objc_msgSend$resetDisplayWithError: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519880 (    0x20) objc_msgSend$resetPresetAtIndex: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001825198a0 (    0x20) objc_msgSend$rx [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001825198c0 (    0x20) objc_msgSend$setActivePresetIndex: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001825198e0 (    0x20) objc_msgSend$setArrayLength: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519900 (    0x20) objc_msgSend$setBrightnessAttributes:withData:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519920 (    0x20) objc_msgSend$setClearColor: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519940 (    0x20) objc_msgSend$setCompletionQueue: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519960 (    0x20) objc_msgSend$setConstantValue:type:atIndex: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519980 (    0x20) objc_msgSend$setDepth: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001825199a0 (    0x20) objc_msgSend$setFragmentBytes:length:atIndex: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001825199c0 (    0x20) objc_msgSend$setFragmentFunction: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001825199e0 (    0x20) objc_msgSend$setFragmentSamplerState:atIndex: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519a00 (    0x20) objc_msgSend$setFragmentTexture:atIndex: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519a20 (    0x20) objc_msgSend$setGPUPriority: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519a40 (    0x20) objc_msgSend$setHeight: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519a60 (    0x20) objc_msgSend$setLabel: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519a80 (    0x20) objc_msgSend$setLinearBrightness:user:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519aa0 (    0x20) objc_msgSend$setLoadAction: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519ac0 (    0x20) objc_msgSend$setMagFilter: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519ae0 (    0x20) objc_msgSend$setMinFilter: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519b00 (    0x20) objc_msgSend$setMipmapLevelCount: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519b20 (    0x20) objc_msgSend$setName: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519b40 (    0x20) objc_msgSend$setNormalizedCoordinates: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519b60 (    0x20) objc_msgSend$setObject:forKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519b80 (    0x20) objc_msgSend$setObject:forKeyedSubscript: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519ba0 (    0x20) objc_msgSend$setPixelFormat: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519bc0 (    0x20) objc_msgSend$setPresetAtIndex:withData: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519be0 (    0x20) objc_msgSend$setPresetDataAtIndex:withData: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519c00 (    0x20) objc_msgSend$setProtectionOptions: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519c20 (    0x20) objc_msgSend$setRenderPipelineState: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519c40 (    0x20) objc_msgSend$setSAddressMode: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519c60 (    0x20) objc_msgSend$setSubmissionQueue: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519c80 (    0x20) objc_msgSend$setTAddressMode: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519ca0 (    0x20) objc_msgSend$setTexture: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519cc0 (    0x20) objc_msgSend$setTextureType: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519ce0 (    0x20) objc_msgSend$setUsage: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519d00 (    0x20) objc_msgSend$setUserAdjustment: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519d20 (    0x20) objc_msgSend$setUserAdjustmentData: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519d40 (    0x20) objc_msgSend$setVertexBuffer:offset:atIndex: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519d60 (    0x20) objc_msgSend$setVertexBytes:length:atIndex: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519d80 (    0x20) objc_msgSend$setVertexFunction: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519da0 (    0x20) objc_msgSend$setWidth: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519dc0 (    0x20) objc_msgSend$setWithArray: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519de0 (    0x20) objc_msgSend$spawnProxyWithOptions:clientHandler_port:proxyRPC_port:displayID: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519e00 (    0x20) objc_msgSend$startWithBlock:onQueue: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519e20 (    0x20) objc_msgSend$stop [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519e40 (    0x20) objc_msgSend$stringByAppendingPathComponent: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519e60 (    0x20) objc_msgSend$stringWithFormat: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519e80 (    0x20) objc_msgSend$strongToStrongObjectsMapTable [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519ea0 (    0x20) objc_msgSend$strongToWeakObjectsMapTable [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519ec0 (    0x20) objc_msgSend$terminateProxy [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519ee0 (    0x20) objc_msgSend$texture2DDescriptorWithPixelFormat:width:height:mipmapped: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519f00 (    0x20) objc_msgSend$unarchivedObjectOfClasses:fromData:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519f20 (    0x20) objc_msgSend$unlock [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519f40 (    0x20) objc_msgSend$unplug [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519f60 (    0x20) objc_msgSend$unsignedIntValue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519f80 (    0x20) objc_msgSend$unsignedIntegerValue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519fa0 (    0x20) objc_msgSend$userAdjustmentLuminanceCorrectionFactorForWhitepoint: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519fc0 (    0x20) objc_msgSend$waitUntilScheduled [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000182519fe0 (    0x20) objc_msgSend$width [FUNC, PEXT, NameNList, MangledNameNList, NList] 
        0x00000001db004358 (  0x2870) __DATA_CONST SEGMENT
            0x00000001db004358 (   0x3f8) __DATA_CONST __got
            0x00000001db004750 (  0x19b8) __DATA_CONST __const
                0x00000001db004750 (    0x38) __block_descriptor_65_e30_"NSObject<OS_xpc_object>"8?0l [NameNList, MangledNameNList, NList] 
                0x00000001db004788 (     0x8) kCDDisplayUserAdjustmentDescriptionKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db004790 (     0x8) kCDDisplayUserAdjustmentTimeStampKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db004798 (     0x8) kCDDisplayUserAdjustmentTemperatureKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db0047a0 (     0x8) kCDDisplayUserAdjustmentFrontAmblientWhitePointXKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db0047a8 (     0x8) kCDDisplayUserAdjustmentFrontAmblientWhitePointYKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db0047b0 (     0x8) kCDDisplayUserAdjustmentFrontAmblientIlluminanceKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db0047b8 (     0x8) kCDDisplayUserAdjustmentRearAmblientWhitePointXKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db0047c0 (     0x8) kCDDisplayUserAdjustmentRearAmblientWhitePointYKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db0047c8 (     0x8) kCDDisplayUserAdjustmentRearAmblientIlluminanceKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db0047d0 (     0x8) kCDDisplayUserAdjustmentExpectedWhitePointXKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db0047d8 (     0x8) kCDDisplayUserAdjustmentExpectedWhitePointYKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db0047e0 (     0x8) kCDDisplayUserAdjustmentExpectedLuminanceKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db0047e8 (     0x8) kCDDisplayUserAdjustmentMeasuredWhitePointXDeltaKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db0047f0 (     0x8) kCDDisplayUserAdjustmentMeasuredWhitePointYDeltaKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db0047f8 (    0x20) kCDDisplayUserAdjustmentMeasuredLuminanceScaleFactorKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db004818 (    0x20) __block_descriptor_tmp [NameNList, MangledNameNList, NList] 
                0x00000001db004838 (    0x20) __block_descriptor_tmp.1 [NameNList, MangledNameNList, NList] 
                0x00000001db004858 (    0x20) __block_descriptor_tmp.5 [NameNList, MangledNameNList, NList] 
                0x00000001db004878 (    0x20) __block_descriptor_tmp.14 [NameNList, MangledNameNList, NList] 
                0x00000001db004898 (    0x20) __block_descriptor_tmp.15 [NameNList, MangledNameNList, NList] 
                0x00000001db0048b8 (    0x20) __block_descriptor_tmp.19 [NameNList, MangledNameNList, NList] 
                0x00000001db0048d8 (    0x20) __block_descriptor_tmp.94 [NameNList, MangledNameNList, NList] 
                0x00000001db0048f8 (    0x20) __block_descriptor_tmp.263 [NameNList, MangledNameNList, NList] 
                0x00000001db004918 (    0x20) __block_descriptor_tmp.266 [NameNList, MangledNameNList, NList] 
                0x00000001db004938 (    0x20) __block_descriptor_tmp.309 [NameNList, MangledNameNList, NList] 
                0x00000001db004958 (    0x20) __block_descriptor_tmp.313 [NameNList, MangledNameNList, NList] 
                0x00000001db004978 (    0x20) __block_descriptor_tmp.320 [NameNList, MangledNameNList, NList] 
                0x00000001db004998 (    0x20) __block_descriptor_tmp.323 [NameNList, MangledNameNList, NList] 
                0x00000001db0049b8 (    0x20) __block_descriptor_tmp.330 [NameNList, MangledNameNList, NList] 
                0x00000001db0049d8 (    0x20) __block_descriptor_tmp.340 [NameNList, MangledNameNList, NList] 
                0x00000001db0049f8 (    0x20) __block_descriptor_tmp.344 [NameNList, MangledNameNList, NList] 
                0x00000001db004a18 (    0x20) __block_descriptor_tmp.354 [NameNList, MangledNameNList, NList] 
                0x00000001db004a38 (    0x20) __block_descriptor_tmp.357 [NameNList, MangledNameNList, NList] 
                0x00000001db004a58 (    0x20) __block_descriptor_tmp.372 [NameNList, MangledNameNList, NList] 
                0x00000001db004a78 (    0x20) __block_descriptor_tmp.375 [NameNList, MangledNameNList, NList] 
                0x00000001db004a98 (    0x20) __block_descriptor_tmp.379 [NameNList, MangledNameNList, NList] 
                0x00000001db004ab8 (    0x20) __block_descriptor_tmp.381 [NameNList, MangledNameNList, NList] 
                0x00000001db004ad8 (    0x20) __block_descriptor_tmp.384 [NameNList, MangledNameNList, NList] 
                0x00000001db004af8 (    0x20) __block_descriptor_tmp.389 [NameNList, MangledNameNList, NList] 
                0x00000001db004b18 (    0x20) __block_descriptor_tmp.392 [NameNList, MangledNameNList, NList] 
                0x00000001db004b38 (    0x20) __block_descriptor_tmp.397 [NameNList, MangledNameNList, NList] 
                0x00000001db004b58 (    0x20) __block_descriptor_tmp.400 [NameNList, MangledNameNList, NList] 
                0x00000001db004b78 (    0x20) __block_descriptor_tmp.410 [NameNList, MangledNameNList, NList] 
                0x00000001db004b98 (    0x20) __block_descriptor_tmp.413 [NameNList, MangledNameNList, NList] 
                0x00000001db004bb8 (    0x20) __block_descriptor_tmp.418 [NameNList, MangledNameNList, NList] 
                0x00000001db004bd8 (    0x20) __block_descriptor_tmp.421 [NameNList, MangledNameNList, NList] 
                0x00000001db004bf8 (    0x20) __block_descriptor_tmp.426 [NameNList, MangledNameNList, NList] 
                0x00000001db004c18 (    0x20) __block_descriptor_tmp.429 [NameNList, MangledNameNList, NList] 
                0x00000001db004c38 (    0x20) __block_descriptor_tmp.435 [NameNList, MangledNameNList, NList] 
                0x00000001db004c58 (    0x20) __block_descriptor_tmp.438 [NameNList, MangledNameNList, NList] 
                0x00000001db004c78 (    0x20) __block_descriptor_tmp.444 [NameNList, MangledNameNList, NList] 
                0x00000001db004c98 (    0x20) __block_descriptor_tmp.447 [NameNList, MangledNameNList, NList] 
                0x00000001db004cb8 (    0x20) __block_descriptor_tmp.452 [NameNList, MangledNameNList, NList] 
                0x00000001db004cd8 (    0x20) __block_descriptor_tmp.455 [NameNList, MangledNameNList, NList] 
                0x00000001db004cf8 (    0x20) __block_descriptor_tmp.460 [NameNList, MangledNameNList, NList] 
                0x00000001db004d18 (    0x20) __block_descriptor_tmp.349 [NameNList, MangledNameNList, NList] 
                0x00000001db004d38 (    0x20) __block_descriptor_tmp.28 [NameNList, MangledNameNList, NList] 
                0x00000001db004d58 (    0x20) __block_descriptor_tmp.33 [NameNList, MangledNameNList, NList] 
                0x00000001db004d78 (    0x20) __block_descriptor_tmp.38 [NameNList, MangledNameNList, NList] 
                0x00000001db004d98 (    0x20) __block_descriptor_tmp.39 [NameNList, MangledNameNList, NList] 
                0x00000001db004db8 (    0x10) gIOGraphicsImageFiles [NameNList, MangledNameNList, NList] 
                0x00000001db004dc8 (    0xb8) GenerateProductName(__CFDictionary*, EDID*, int, unsigned int)::type2Name [NameNList, MangledNameNList, NList] 
                0x00000001db004e80 (    0x20) __block_descriptor_tmp.792 [NameNList, MangledNameNList, NList] 
                0x00000001db004ea0 (    0x20) __block_descriptor_tmp.819 [NameNList, MangledNameNList, NList] 
                0x00000001db004ec0 (    0x20) __block_descriptor_tmp.923 [NameNList, MangledNameNList, NList] 
                0x00000001db004ee0 (    0x20) __block_descriptor_tmp.12 [NameNList, MangledNameNList, NList] 
                0x00000001db004f00 (    0x40) __block_descriptor_tmp.20 [NameNList, MangledNameNList, NList] 
                0x00000001db004f40 (    0x20) __block_descriptor_tmp.140 [NameNList, MangledNameNList, NList] 
                0x00000001db004f60 (    0x20) __block_descriptor_tmp.169 [NameNList, MangledNameNList, NList] 
                0x00000001db004f80 (    0x20) __block_descriptor_tmp.179 [NameNList, MangledNameNList, NList] 
                0x00000001db004fa0 (    0x20) __block_descriptor_tmp.237 [NameNList, MangledNameNList, NList] 
                0x00000001db004fc0 (    0x20) __block_descriptor_tmp.243 [NameNList, MangledNameNList, NList] 
                0x00000001db004fe0 (    0x20) __block_descriptor_tmp.258 [NameNList, MangledNameNList, NList] 
                0x00000001db005000 (    0x20) __block_descriptor_tmp.453 [NameNList, MangledNameNList, NList] 
                0x00000001db005020 (    0x38) __block_descriptor_tmp.457 [NameNList, MangledNameNList, NList] 
                0x00000001db005058 (    0x20) __block_descriptor_tmp.473 [NameNList, MangledNameNList, NList] 
                0x00000001db005078 (    0x20) __block_descriptor_tmp.545 [NameNList, MangledNameNList, NList] 
                0x00000001db005098 (    0xd0) __block_descriptor_tmp.1209 [NameNList, MangledNameNList, NList] 
                0x00000001db005168 (     0x8) kCDDisplayPresetUIReferencePresetKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db005170 (     0x8) kCDDisplayPresetUITransferGammaKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db005178 (     0x8) kCDDisplayPresetUIPrimariesStandardTypeKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db005180 (     0x8) kCDDisplayPresetUIWhitePointStandardTypeKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db005188 (     0x8) kCDDisplayPresetHostDisableHarmonyKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db005190 (     0x8) kCDDisplayPresetHostDisableNightShiftKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db005198 (     0x8) kCDDisplayPresetHostDisableAutoBrightnessKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db0051a0 (     0x8) kCDDisplayPresetHostDisableAutoBlackLevelKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db0051a8 (     0x8) kCDDisplayPresetHostTargetAmbientBrightnessKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db0051b0 (     0x8) kCDDisplayPresetHostTargetAmbientBrightnessExcursionKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db0051b8 (     0x8) kCDDisplayPresetHostMaxSliderBrightnessKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db0051c0 (     0x8) kCDDisplayPresetHostMinSliderBrightnessKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db0051c8 (     0x8) kCDDisplayPresetHostDefaultSliderBrightnessKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db0051d0 (     0x8) kCDDisplayPresetHostDisableSystemGammaKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db0051d8 (     0x8) kCDDisplayPresetHostRequiredReferenceHeadroomKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db0051e0 (     0x8) kCDDisplayPresetHostSystemGammaKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db0051e8 (     0x8) kCDDisplayPresetHostReferenceColorKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db0051f0 (     0x8) kCDDisplayPresetHostMaxReferenceLuminanceKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db0051f8 (     0x8) kCDDisplayPresetHostDisableEDRKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db005200 (     0x8) kCDDisplayPresetPrimaryRedXKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db005208 (     0x8) kCDDisplayPresetPrimaryRedYKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db005210 (     0x8) kCDDisplayPresetPrimaryGreenXKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db005218 (     0x8) kCDDisplayPresetPrimaryGreenYKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db005220 (     0x8) kCDDisplayPresetPrimaryBlueXKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db005228 (     0x8) kCDDisplayPresetPrimaryBlueYKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db005230 (     0x8) kCDDisplayPresetWhitePointXKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db005238 (     0x8) kCDDisplayPresetWhitePointYKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db005240 (     0x8) kCDDisplayPresetGammaAdKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db005248 (     0x8) kCDDisplayPresetGTFVcKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db005250 (     0x8) kCDDisplayPresetGTFK1Key [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db005258 (     0x8) kCDDisplayPresetGTFA1Key [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db005260 (     0x8) kCDDisplayPresetGTFB1Key [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db005268 (     0x8) kCDDisplayPresetGTFGamma1Key [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db005270 (     0x8) kCDDisplayPresetGTFEpsilon1Key [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db005278 (     0x8) kCDDisplayPresetGTFK2Key [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db005280 (     0x8) kCDDisplayPresetGTFA2Key [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db005288 (     0x8) kCDDisplayPresetGTFB2Key [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db005290 (     0x8) kCDDisplayPresetGTFGamma2Key [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db005298 (     0x8) kCDDisplayPresetGTFEpsilon2Key [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db0052a0 (     0x8) kCDDisplayPresetGTFLwKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db0052a8 (     0x8) kCDDisplayPresetGTFLbKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db0052b0 (     0x8) kCDDisplayPresetGTFStandardTypeKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db0052b8 (     0x8) kCDDisplayPresetMaxHDRLuminanceKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db0052c0 (     0x8) kCDDisplayPresetMaxSDRLuminanceKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db0052c8 (     0x8) kCDDisplayPresetMinLuminanceKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db0052d0 (     0x8) kCDDisplayPresetPQClippingTypeKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db0052d8 (     0x8) kCDDisplayPresetBT2020CapableKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db0052e0 (     0x8) kCDDisplayPresetST2084CapableKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db0052e8 (     0x8) kCDDisplayPresetHLGCapableKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db0052f0 (     0x8) kCDDisplayPresetHDRGammaCapableKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db0052f8 (     0x8) kCDDisplayPresetSRGBKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db005300 (     0x8) kCDDisplayPresetTCLUTsSubTypeKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db005308 (     0x8) kCDDisplayPresetNameKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db005310 (     0x8) kCDDisplayPresetDescriptionKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db005318 (     0x8) kCDDisplayPresetUniqueIDKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db005320 (     0x8) kCDDisplayPresetWritableKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db005328 (     0x8) kCDDisplayPresetValidKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db005330 (    0x38) __block_descriptor_32_e34_v20?0"SLDisplayPresetDevice"8B16l [NameNList, MangledNameNList, NList] 
                0x00000001db005368 (    0x20) __block_descriptor_40_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db005388 (    0x20) __block_descriptor_tmp.2292 [NameNList, MangledNameNList, NList] 
                0x00000001db0053a8 (    0x20) __block_descriptor_tmp.9 [NameNList, MangledNameNList, NList] 
                0x00000001db0053c8 (    0x20) __block_descriptor_tmp.10 [NameNList, MangledNameNList, NList] 
                0x00000001db0053e8 (    0x20) __block_descriptor_tmp.2330 [NameNList, MangledNameNList, NList] 
                0x00000001db005408 (    0x30) __block_descriptor_tmp.2541 [NameNList, MangledNameNList, NList] 
                0x00000001db005438 (    0x20) __block_descriptor_tmp.10.2474 [NameNList, MangledNameNList, NList] 
                0x00000001db005458 (    0x20) __block_descriptor_tmp.13 [NameNList, MangledNameNList, NList] 
                0x00000001db005478 (    0x20) __block_descriptor_tmp.16 [NameNList, MangledNameNList, NList] 
                0x00000001db005498 (    0x20) __block_descriptor_tmp.20.2544 [NameNList, MangledNameNList, NList] 
                0x00000001db0054b8 (    0x20) __block_descriptor_tmp.25 [NameNList, MangledNameNList, NList] 
                0x00000001db0054d8 (    0x20) __block_descriptor_tmp.38.2531 [NameNList, MangledNameNList, NList] 
                0x00000001db0054f8 (    0x20) __block_descriptor_tmp.42 [NameNList, MangledNameNList, NList] 
                0x00000001db005518 (    0x20) __block_descriptor_tmp.50 [NameNList, MangledNameNList, NList] 
                0x00000001db005538 (    0x20) __block_descriptor_tmp.56 [NameNList, MangledNameNList, NList] 
                0x00000001db005558 (    0x20) __block_descriptor_tmp.62 [NameNList, MangledNameNList, NList] 
                0x00000001db005578 (    0x20) __block_descriptor_tmp.76 [NameNList, MangledNameNList, NList] 
                0x00000001db005598 (    0x20) __block_descriptor_tmp.80 [NameNList, MangledNameNList, NList] 
                0x00000001db0055b8 (    0x20) __block_descriptor_tmp.96 [NameNList, MangledNameNList, NList] 
                0x00000001db0055d8 (    0x20) __block_descriptor_tmp.100 [NameNList, MangledNameNList, NList] 
                0x00000001db0055f8 (    0x20) __block_descriptor_tmp.104 [NameNList, MangledNameNList, NList] 
                0x00000001db005618 (    0x20) __block_descriptor_32_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db005638 (    0x20) __block_descriptor_tmp.2979 [NameNList, MangledNameNList, NList] 
                0x00000001db005658 (    0x20) __block_descriptor_tmp.49 [NameNList, MangledNameNList, NList] 
                0x00000001db005678 (    0x20) __block_descriptor_tmp.52 [NameNList, MangledNameNList, NList] 
                0x00000001db005698 (    0x20) __block_descriptor_tmp.2996 [NameNList, MangledNameNList, NList] 
                0x00000001db0056b8 (    0x20) __block_descriptor_tmp.11.3004 [NameNList, MangledNameNList, NList] 
                0x00000001db0056d8 (    0x20) __block_descriptor_tmp.14.3066 [NameNList, MangledNameNList, NList] 
                0x00000001db0056f8 (    0x20) __block_descriptor_tmp.18 [NameNList, MangledNameNList, NList] 
                0x00000001db005718 (    0x20) __block_descriptor_tmp.23 [NameNList, MangledNameNList, NList] 
                0x00000001db005738 (    0x20) __block_descriptor_tmp.34 [NameNList, MangledNameNList, NList] 
                0x00000001db005758 (    0x70) functions [NameNList, MangledNameNList, NList] 
                0x00000001db0057c8 (    0x20) __block_descriptor_tmp.3940 [NameNList, MangledNameNList, NList] 
                0x00000001db0057e8 (    0x20) __block_descriptor_tmp.14.3937 [NameNList, MangledNameNList, NList] 
                0x00000001db005808 (    0x20) __block_descriptor_tmp.18.3936 [NameNList, MangledNameNList, NList] 
                0x00000001db005828 (    0x20) __block_descriptor_tmp.21 [NameNList, MangledNameNList, NList] 
                0x00000001db005848 (    0x90) __block_descriptor_tmp.106 [NameNList, MangledNameNList, NList] 
                0x00000001db0058d8 (    0x20) __block_descriptor_tmp.335 [NameNList, MangledNameNList, NList] 
                0x00000001db0058f8 (    0x20) __block_descriptor_tmp.339 [NameNList, MangledNameNList, NList] 
                0x00000001db005918 (    0x20) __block_descriptor_tmp.345 [NameNList, MangledNameNList, NList] 
                0x00000001db005938 (    0x20) __block_descriptor_tmp.349.3615 [NameNList, MangledNameNList, NList] 
                0x00000001db005958 (    0x20) __block_descriptor_tmp.353 [NameNList, MangledNameNList, NList] 
                0x00000001db005978 (    0x20) __block_descriptor_tmp.399 [NameNList, MangledNameNList, NList] 
                0x00000001db005998 (    0x20) __block_descriptor_tmp.424 [NameNList, MangledNameNList, NList] 
                0x00000001db0059b8 (    0x20) __block_descriptor_tmp.427 [NameNList, MangledNameNList, NList] 
                0x00000001db0059d8 (    0x38) __block_descriptor_tmp.505 [NameNList, MangledNameNList, NList] 
                0x00000001db005a10 (    0x20) __block_descriptor_tmp.4178 [NameNList, MangledNameNList, NList] 
                0x00000001db005a30 (    0x38) __block_descriptor_tmp.1.4180 [NameNList, MangledNameNList, NList] 
                0x00000001db005a68 (    0x18) CoreDisplay::DisplayPipe::CreateStateDict() const::PresentSyncTypeStr [NameNList, MangledNameNList, NList] 
                0x00000001db005a80 (    0x78) CoreDisplay::DisplayPipe::CreateStateDict() const::PresentOptionsTypeStr [NameNList, MangledNameNList, NList] 
                0x00000001db005af8 (    0x20) __block_descriptor_tmp.17 [NameNList, MangledNameNList, NList] 
                0x00000001db005b18 (    0x20) __block_descriptor_tmp.30 [NameNList, MangledNameNList, NList] 
                0x00000001db005b38 (    0x20) __block_descriptor_tmp.37 [NameNList, MangledNameNList, NList] 
                0x00000001db005b58 (    0x20) __block_descriptor_tmp.38.4872 [NameNList, MangledNameNList, NList] 
                0x00000001db005b78 (    0x20) __block_descriptor_tmp.49.4892 [NameNList, MangledNameNList, NList] 
                0x00000001db005b98 (    0x20) __block_descriptor_tmp.60 [NameNList, MangledNameNList, NList] 
                0x00000001db005bb8 (    0x20) __block_descriptor_tmp.5090 [NameNList, MangledNameNList, NList] 
                0x00000001db005bd8 (    0x20) __block_descriptor_tmp.81 [NameNList, MangledNameNList, NList] 
                0x00000001db005bf8 (    0x50) __block_descriptor_tmp.121 [NameNList, MangledNameNList, NList] 
                0x00000001db005c48 (    0x90) kArray [NameNList, MangledNameNList, NList] 
                0x00000001db005cd8 (    0x20) __block_descriptor_tmp.200 [NameNList, MangledNameNList, NList] 
                0x00000001db005cf8 (    0x20) __block_descriptor_tmp.204 [NameNList, MangledNameNList, NList] 
                0x00000001db005d18 (    0x20) __block_descriptor_tmp.208 [NameNList, MangledNameNList, NList] 
                0x00000001db005d38 (    0x20) __block_descriptor_tmp.227 [NameNList, MangledNameNList, NList] 
                0x00000001db005d58 (    0x20) __block_descriptor_tmp.235 [NameNList, MangledNameNList, NList] 
                0x00000001db005d78 (    0x20) __block_descriptor_tmp.276 [NameNList, MangledNameNList, NList] 
                0x00000001db005d98 (    0x30) __block_descriptor_tmp.281 [NameNList, MangledNameNList, NList] 
                0x00000001db005dc8 (    0x20) __block_descriptor_tmp.285 [NameNList, MangledNameNList, NList] 
                0x00000001db005de8 (    0x60) __block_descriptor_tmp.327 [NameNList, MangledNameNList, NList] 
                0x00000001db005e48 (    0x20) __block_descriptor_tmp.5560 [NameNList, MangledNameNList, NList] 
                0x00000001db005e68 (    0x80) _cdgls_gli_names [NameNList, MangledNameNList, NList] 
                0x00000001db005ee8 (    0xc0) verify_and_copy_mode_dict(__CFDictionary const*)::allKeys [NameNList, MangledNameNList, NList] 
                0x00000001db005fa8 (    0x20) __block_descriptor_tmp.28.6094 [NameNList, MangledNameNList, NList] 
                0x00000001db005fc8 (    0x20) __block_descriptor_tmp.29 [NameNList, MangledNameNList, NList] 
                0x00000001db005fe8 (    0x20) __block_descriptor_tmp.30.6093 [NameNList, MangledNameNList, NList] 
                0x00000001db006008 (    0x20) __block_descriptor_tmp.31 [NameNList, MangledNameNList, NList] 
                0x00000001db006028 (    0x20) __block_descriptor_tmp.32.6092 [NameNList, MangledNameNList, NList] 
                0x00000001db006048 (    0x20) __block_descriptor_tmp.33.6091 [NameNList, MangledNameNList, NList] 
                0x00000001db006068 (    0x20) __block_descriptor_tmp.34.6090 [NameNList, MangledNameNList, NList] 
                0x00000001db006088 (    0x20) __block_descriptor_tmp.35.6089 [NameNList, MangledNameNList, NList] 
                0x00000001db0060a8 (    0x20) __block_descriptor_tmp.36 [NameNList, MangledNameNList, NList] 
                0x00000001db0060c8 (    0x20) __block_descriptor_tmp.37.6088 [NameNList, MangledNameNList, NList] 
                0x00000001db0060e8 (    0x20) __block_descriptor_tmp.38.6086 [NameNList, MangledNameNList, NList] 
            0x00000001db006108 (    0x28) __DATA_CONST __objc_classlist
            0x00000001db006130 (     0x8) __DATA_CONST __objc_imageinfo
            0x00000001db006138 (   0x548) __DATA_CONST __objc_const
                0x00000001db006138 (    0x48) _OBJC_METACLASS_RO_$_VirtualDisplayClient [NameNList, MangledNameNList, NList] 
                0x00000001db006180 (   0x168) _OBJC_$_INSTANCE_VARIABLES_VirtualDisplayClient [NameNList, MangledNameNList, NList] 
                0x00000001db0062e8 (    0x28) _OBJC_$_PROP_LIST_VirtualDisplayClient [NameNList, MangledNameNList, NList] 
                0x00000001db006310 (    0x48) _OBJC_METACLASS_RO_$_VirtualDisplayServer [NameNList, MangledNameNList, NList] 
                0x00000001db006358 (    0x28) _OBJC_$_INSTANCE_VARIABLES_VirtualDisplayServer [NameNList, MangledNameNList, NList] 
                0x00000001db006380 (    0x48) _OBJC_METACLASS_RO_$_VirtualDisplayListener [NameNList, MangledNameNList, NList] 
                0x00000001db0063c8 (    0xc8) _OBJC_$_INSTANCE_VARIABLES_VirtualDisplayListener [NameNList, MangledNameNList, NList] 
                0x00000001db006490 (    0x48) _OBJC_METACLASS_RO_$_CDVirtualDisplayConnect [NameNList, MangledNameNList, NList] 
                0x00000001db0064d8 (    0x28) _OBJC_$_INSTANCE_VARIABLES_CDVirtualDisplayConnect [NameNList, MangledNameNList, NList] 
                0x00000001db006500 (    0x18) _OBJC_$_PROP_LIST_CDVirtualDisplayConnect [NameNList, MangledNameNList, NList] 
                0x00000001db006518 (    0x48) _OBJC_METACLASS_RO_$_VirtualDisplayProxy [NameNList, MangledNameNList, NList] 
                0x00000001db006560 (   0x108) _OBJC_$_INSTANCE_VARIABLES_VirtualDisplayProxy [NameNList, MangledNameNList, NList] 
                0x00000001db006668 (    0x18) _OBJC_$_PROP_LIST_VirtualDisplayProxy [NameNList, MangledNameNList, NList] 
            0x00000001db006680 (   0x548) __DATA_CONST __objc_selrefs
        0x00000001db006bc8 (  0xd918) __AUTH_CONST SEGMENT
            0x00000001db006bc8 (  0x2160) __AUTH_CONST __const
                0x00000001db006bc8 (    0x20) __block_literal_global [NameNList, MangledNameNList, NList] 
                0x00000001db006be8 (    0x30) __block_descriptor_48_e8_32b_e5_v8?0l [NameNList, MangledNameNList, NList] 
                0x00000001db006c18 (    0x20) __block_literal_global.52 [NameNList, MangledNameNList, NList] 
                0x00000001db006c38 (    0x20) __block_literal_global.22 [NameNList, MangledNameNList, NList] 
                0x00000001db006c58 (    0x20) __block_literal_global.81 [NameNList, MangledNameNList, NList] 
                0x00000001db006c78 (    0x20) __block_literal_global.7 [NameNList, MangledNameNList, NList] 
                0x00000001db006c98 (    0x20) __block_literal_global.17 [NameNList, MangledNameNList, NList] 
                0x00000001db006cb8 (    0x20) __block_literal_global.21 [NameNList, MangledNameNList, NList] 
                0x00000001db006cd8 (    0x30) __block_descriptor_tmp.32 [NameNList, MangledNameNList, NList] 
                0x00000001db006d08 (    0x30) __block_descriptor_tmp.35 [NameNList, MangledNameNList, NList] 
                0x00000001db006d38 (    0x20) __block_literal_global.92 [NameNList, MangledNameNList, NList] 
                0x00000001db006d58 (    0x20) __block_literal_global.265 [NameNList, MangledNameNList, NList] 
                0x00000001db006d78 (    0x20) __block_literal_global.268 [NameNList, MangledNameNList, NList] 
                0x00000001db006d98 (    0x20) __block_literal_global.311 [NameNList, MangledNameNList, NList] 
                0x00000001db006db8 (    0x20) __block_literal_global.315 [NameNList, MangledNameNList, NList] 
                0x00000001db006dd8 (    0x20) __block_literal_global.322 [NameNList, MangledNameNList, NList] 
                0x00000001db006df8 (    0x20) __block_literal_global.325 [NameNList, MangledNameNList, NList] 
                0x00000001db006e18 (    0x20) __block_literal_global.332 [NameNList, MangledNameNList, NList] 
                0x00000001db006e38 (    0x40) vtable for std::__1::__packaged_task_func<os_state_data_s* (*)(), std::__1::allocator<os_state_data_s* (*)()>, os_state_data_s* ()> [NameNList, MangledNameNList, NList] 
                0x00000001db006e78 (    0x10) typeinfo for std::__1::__packaged_task_base<os_state_data_s* ()> [NameNList, MangledNameNList, NList] 
                0x00000001db006e88 (    0x18) typeinfo for std::__1::__packaged_task_func<os_state_data_s* (*)(), std::__1::allocator<os_state_data_s* (*)()>, os_state_data_s* ()> [NameNList, MangledNameNList, NList] 
                0x00000001db006ea0 (    0x30) vtable for std::__1::__assoc_state<os_state_data_s*> [NameNList, MangledNameNList, NList] 
                0x00000001db006ed0 (    0x18) typeinfo for std::__1::__assoc_state<os_state_data_s*> [NameNList, MangledNameNList, NList] 
                0x00000001db006ee8 (    0x20) __block_literal_global.342 [NameNList, MangledNameNList, NList] 
                0x00000001db006f08 (    0x20) __block_literal_global.346 [NameNList, MangledNameNList, NList] 
                0x00000001db006f28 (    0x20) __block_literal_global.356 [NameNList, MangledNameNList, NList] 
                0x00000001db006f48 (    0x20) __block_literal_global.359 [NameNList, MangledNameNList, NList] 
                0x00000001db006f68 (    0x20) __block_literal_global.374 [NameNList, MangledNameNList, NList] 
                0x00000001db006f88 (    0x20) __block_literal_global.377 [NameNList, MangledNameNList, NList] 
                0x00000001db006fa8 (    0x20) __block_literal_global.383 [NameNList, MangledNameNList, NList] 
                0x00000001db006fc8 (    0x20) __block_literal_global.386 [NameNList, MangledNameNList, NList] 
                0x00000001db006fe8 (    0x20) __block_literal_global.391 [NameNList, MangledNameNList, NList] 
                0x00000001db007008 (    0x20) __block_literal_global.394 [NameNList, MangledNameNList, NList] 
                0x00000001db007028 (    0x20) __block_literal_global.399 [NameNList, MangledNameNList, NList] 
                0x00000001db007048 (    0x20) __block_literal_global.402 [NameNList, MangledNameNList, NList] 
                0x00000001db007068 (    0x20) __block_literal_global.412 [NameNList, MangledNameNList, NList] 
                0x00000001db007088 (    0x20) __block_literal_global.415 [NameNList, MangledNameNList, NList] 
                0x00000001db0070a8 (    0x20) __block_literal_global.420 [NameNList, MangledNameNList, NList] 
                0x00000001db0070c8 (    0x20) __block_literal_global.423 [NameNList, MangledNameNList, NList] 
                0x00000001db0070e8 (    0x20) __block_literal_global.428 [NameNList, MangledNameNList, NList] 
                0x00000001db007108 (    0x20) __block_literal_global.431 [NameNList, MangledNameNList, NList] 
                0x00000001db007128 (    0x20) __block_literal_global.437 [NameNList, MangledNameNList, NList] 
                0x00000001db007148 (    0x20) __block_literal_global.440 [NameNList, MangledNameNList, NList] 
                0x00000001db007168 (    0x20) __block_literal_global.446 [NameNList, MangledNameNList, NList] 
                0x00000001db007188 (    0x20) __block_literal_global.449 [NameNList, MangledNameNList, NList] 
                0x00000001db0071a8 (    0x20) __block_literal_global.454 [NameNList, MangledNameNList, NList] 
                0x00000001db0071c8 (    0x20) __block_literal_global.457 [NameNList, MangledNameNList, NList] 
                0x00000001db0071e8 (    0x20) __block_literal_global.462 [NameNList, MangledNameNList, NList] 
                0x00000001db007208 (    0x20) __block_literal_global.206 [NameNList, MangledNameNList, NList] 
                0x00000001db007228 (    0x20) __block_literal_global.337 [NameNList, MangledNameNList, NList] 
                0x00000001db007248 (    0x20) __block_literal_global.30 [NameNList, MangledNameNList, NList] 
                0x00000001db007268 (    0x20) __block_literal_global.35 [NameNList, MangledNameNList, NList] 
                0x00000001db007288 (    0x20) __block_literal_global.41 [NameNList, MangledNameNList, NList] 
                0x00000001db0072a8 (    0x40) vtable for std::__1::__packaged_task_func<void (*)(unsigned int, float*, float*, float*, float*, float*, float*, float*, float*), std::__1::allocator<void (*)(unsigned int, float*, float*, float*, float*, float*, float*, float*, float*)>, void (unsigned int, float*, float*, float*, float*, float*, float*, float*, float*)> [NameNList, MangledNameNList, NList] 
                0x00000001db0072e8 (    0x10) typeinfo for std::__1::__packaged_task_base<void (unsigned int, float*, float*, float*, float*, float*, float*, float*, float*)> [NameNList, MangledNameNList, NList] 
                0x00000001db0072f8 (    0x18) typeinfo for std::__1::__packaged_task_func<void (*)(unsigned int, float*, float*, float*, float*, float*, float*, float*, float*), std::__1::allocator<void (*)(unsigned int, float*, float*, float*, float*, float*, float*, float*, float*)>, void (unsigned int, float*, float*, float*, float*, float*, float*, float*, float*)> [NameNList, MangledNameNList, NList] 
                0x00000001db007310 (    0x40) vtable for std::__1::__packaged_task_func<bool (*)(unsigned int), std::__1::allocator<bool (*)(unsigned int)>, bool (unsigned int)> [NameNList, MangledNameNList, NList] 
                0x00000001db007350 (    0x10) typeinfo for std::__1::__packaged_task_base<bool (unsigned int)> [NameNList, MangledNameNList, NList] 
                0x00000001db007360 (    0x18) typeinfo for std::__1::__packaged_task_func<bool (*)(unsigned int), std::__1::allocator<bool (*)(unsigned int)>, bool (unsigned int)> [NameNList, MangledNameNList, NList] 
                0x00000001db007378 (    0x40) vtable for std::__1::__packaged_task_func<void (*)(unsigned int, bool), std::__1::allocator<void (*)(unsigned int, bool)>, void (unsigned int, bool)> [NameNList, MangledNameNList, NList] 
                0x00000001db0073b8 (    0x10) typeinfo for std::__1::__packaged_task_base<void (unsigned int, bool)> [NameNList, MangledNameNList, NList] 
                0x00000001db0073c8 (    0x18) typeinfo for std::__1::__packaged_task_func<void (*)(unsigned int, bool), std::__1::allocator<void (*)(unsigned int, bool)>, void (unsigned int, bool)> [NameNList, MangledNameNList, NList] 
                0x00000001db0073e0 (   0x220) gVFBProcs [NameNList, MangledNameNList, NList] 
                0x00000001db007600 (    0x38) vtable for std::__1::__shared_ptr_emplace<CoreDisplay::IOPTransaction, std::__1::allocator<CoreDisplay::IOPTransaction>> [NameNList, MangledNameNList, NList] 
                0x00000001db007638 (    0x18) typeinfo for std::__1::__shared_ptr_emplace<CoreDisplay::IOPTransaction, std::__1::allocator<CoreDisplay::IOPTransaction>> [NameNList, MangledNameNList, NList] 
                0x00000001db007650 (    0x20) __block_literal_global.807 [NameNList, MangledNameNList, NList] 
                0x00000001db007670 (    0x20) __block_literal_global.920 [NameNList, MangledNameNList, NList] 
                0x00000001db007690 (    0x20) __block_literal_global.14 [NameNList, MangledNameNList, NList] 
                0x00000001db0076b0 (    0x20) __block_literal_global.22.940 [NameNList, MangledNameNList, NList] 
                0x00000001db0076d0 (    0x20) __block_literal_global.142 [NameNList, MangledNameNList, NList] 
                0x00000001db0076f0 (    0x48) vtable for CoreDisplay::Display [NameNList, MangledNameNList, NList] 
                0x00000001db007738 (    0x20) __block_literal_global.171 [NameNList, MangledNameNList, NList] 
                0x00000001db007758 (    0x20) __block_literal_global.245 [NameNList, MangledNameNList, NList] 
                0x00000001db007778 (    0x20) __block_literal_global.459 [NameNList, MangledNameNList, NList] 
                0x00000001db007798 (    0x10) typeinfo for CoreDisplay::NonCopyable [NameNList, MangledNameNList, NList] 
                0x00000001db0077a8 (    0x28) typeinfo for CoreDisplay::AbstractDisplay [NameNList, MangledNameNList, NList] 
                0x00000001db0077d0 (    0x18) typeinfo for CoreDisplay::Display [NameNList, MangledNameNList, NList] 
                0x00000001db0077e8 (    0x30) __block_descriptor_tmp.475 [NameNList, MangledNameNList, NList] 
                0x00000001db007818 (    0x30) __block_descriptor_tmp.481 [NameNList, MangledNameNList, NList] 
                0x00000001db007848 (    0x30) __block_descriptor_tmp.488 [NameNList, MangledNameNList, NList] 
                0x00000001db007878 (    0x30) __block_descriptor_tmp.492 [NameNList, MangledNameNList, NList] 
                0x00000001db0078a8 (    0x30) __block_descriptor_tmp.496 [NameNList, MangledNameNList, NList] 
                0x00000001db0078d8 (    0x30) __block_descriptor_tmp.500 [NameNList, MangledNameNList, NList] 
                0x00000001db007908 (    0x30) __block_descriptor_tmp.504 [NameNList, MangledNameNList, NList] 
                0x00000001db007938 (    0x30) __block_descriptor_tmp.508 [NameNList, MangledNameNList, NList] 
                0x00000001db007968 (    0x30) __block_descriptor_tmp.512 [NameNList, MangledNameNList, NList] 
                0x00000001db007998 (    0x30) __block_descriptor_tmp.516 [NameNList, MangledNameNList, NList] 
                0x00000001db0079c8 (    0x20) __block_literal_global.547 [NameNList, MangledNameNList, NList] 
                0x00000001db0079e8 (    0x18) typeinfo for std::__1::bad_function_call [NameNList, MangledNameNList, NList] 
                0x00000001db007a00 (    0x28) vtable for std::__1::bad_function_call [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db007a28 (    0x40) vtable for std::__1::__packaged_task_func<void (*)(void*), std::__1::allocator<void (*)(void*)>, void (CGXDisplayDevice*)> [NameNList, MangledNameNList, NList] 
                0x00000001db007a68 (    0x10) typeinfo for std::__1::__packaged_task_base<void (CGXDisplayDevice*)> [NameNList, MangledNameNList, NList] 
                0x00000001db007a78 (    0x18) typeinfo for std::__1::__packaged_task_func<void (*)(void*), std::__1::allocator<void (*)(void*)>, void (CGXDisplayDevice*)> [NameNList, MangledNameNList, NList] 
                0x00000001db007a90 (    0x40) vtable for std::__1::__packaged_task_func<CoreDisplay::Display::SetLinearBacklightBrightness(double)::$_3, std::__1::allocator<CoreDisplay::Display::SetLinearBacklightBrightness(double)::$_3>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001db007ad0 (    0x18) typeinfo for std::__1::__packaged_task_func<CoreDisplay::Display::SetLinearBacklightBrightness(double)::$_3, std::__1::allocator<CoreDisplay::Display::SetLinearBacklightBrightness(double)::$_3>, void ()> [NameNList, MangledNameNList, NList] 
                0x00000001db007ae8 (    0x40) vtable for std::__1::__packaged_task_func<void (*)(CGXDisplayDevice*), std::__1::allocator<void (*)(CGXDisplayDevice*)>, void (CGXDisplayDevice*)> [NameNList, MangledNameNList, NList] 
                0x00000001db007b28 (    0x18) typeinfo for std::__1::__packaged_task_func<void (*)(CGXDisplayDevice*), std::__1::allocator<void (*)(CGXDisplayDevice*)>, void (CGXDisplayDevice*)> [NameNList, MangledNameNList, NList] 
                0x00000001db007b40 (    0x20) __block_literal_global.1207 [NameNList, MangledNameNList, NList] 
                0x00000001db007b60 (    0x20) __block_literal_global.2275 [NameNList, MangledNameNList, NList] 
                0x00000001db007b80 (    0x30) __block_descriptor_40_e8_32o_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db007bb0 (    0x30) __block_descriptor_40_e8_32r_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db007be0 (    0x20) __block_literal_global.218 [NameNList, MangledNameNList, NList] 
                0x00000001db007c00 (    0x30) __block_descriptor_tmp.11.2294 [NameNList, MangledNameNList, NList] 
                0x00000001db007c30 (    0x30) __block_descriptor_tmp.14.2297 [NameNList, MangledNameNList, NList] 
                0x00000001db007c60 (    0x40) vtable for std::__1::__packaged_task_func<applesauce::dispatch::v1::block<void ()>, std::__1::allocator<applesauce::dispatch::v1::block<void ()>>, void ()> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db007ca0 (    0x18) typeinfo for std::__1::__packaged_task_func<applesauce::dispatch::v1::block<void ()>, std::__1::allocator<applesauce::dispatch::v1::block<void ()>>, void ()> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db007cb8 (    0x20) __block_literal_global.2476 [NameNList, MangledNameNList, NList] 
                0x00000001db007cd8 (    0x20) __block_literal_global.15 [NameNList, MangledNameNList, NList] 
                0x00000001db007cf8 (    0x20) __block_literal_global.18 [NameNList, MangledNameNList, NList] 
                0x00000001db007d18 (    0x20) __block_literal_global.22.2473 [NameNList, MangledNameNList, NList] 
                0x00000001db007d38 (    0x20) __block_literal_global.27 [NameNList, MangledNameNList, NList] 
                0x00000001db007d58 (    0x20) __block_literal_global.40 [NameNList, MangledNameNList, NList] 
                0x00000001db007d78 (    0x20) __block_literal_global.44 [NameNList, MangledNameNList, NList] 
                0x00000001db007d98 (    0x20) __block_literal_global.52.2489 [NameNList, MangledNameNList, NList] 
                0x00000001db007db8 (    0x20) __block_literal_global.58 [NameNList, MangledNameNList, NList] 
                0x00000001db007dd8 (    0x20) __block_literal_global.64 [NameNList, MangledNameNList, NList] 
                0x00000001db007df8 (    0x20) __block_literal_global.78 [NameNList, MangledNameNList, NList] 
                0x00000001db007e18 (    0x20) __block_literal_global.98 [NameNList, MangledNameNList, NList] 
                0x00000001db007e38 (    0x20) __block_literal_global.102 [NameNList, MangledNameNList, NList] 
                0x00000001db007e58 (    0x20) __block_literal_global.106 [NameNList, MangledNameNList, NList] 
                0x00000001db007e78 (    0x20) __block_literal_global.2669 [NameNList, MangledNameNList, NList] 
                0x00000001db007e98 (    0x20) __block_literal_global.54 [NameNList, MangledNameNList, NList] 
                0x00000001db007eb8 (    0x30) __block_descriptor_41_e8_32o_e25_v32?0"NSString"816^B24l [NameNList, MangledNameNList, NList] 
                0x00000001db007ee8 (    0x40) vtable for std::__1::__packaged_task_func<unsigned int (*)(unsigned int, unsigned int, unsigned int, CGSize, __CFDictionary const*), std::__1::allocator<unsigned int (*)(unsigned int, unsigned int, unsigned int, CGSize, __CFDictionary const*)>, unsigned int (unsigned int, unsigned int, unsigned int, CGSize, __CFDictionary const*)> [NameNList, MangledNameNList, NList] 
                0x00000001db007f28 (    0x10) typeinfo for std::__1::__packaged_task_base<unsigned int (unsigned int, unsigned int, unsigned int, CGSize, __CFDictionary const*)> [NameNList, MangledNameNList, NList] 
                0x00000001db007f38 (    0x18) typeinfo for std::__1::__packaged_task_func<unsigned int (*)(unsigned int, unsigned int, unsigned int, CGSize, __CFDictionary const*), std::__1::allocator<unsigned int (*)(unsigned int, unsigned int, unsigned int, CGSize, __CFDictionary const*)>, unsigned int (unsigned int, unsigned int, unsigned int, CGSize, __CFDictionary const*)> [NameNList, MangledNameNList, NList] 
                0x00000001db007f50 (    0x30) vtable for std::__1::__assoc_state<unsigned int> [NameNList, MangledNameNList, NList] 
                0x00000001db007f80 (    0x18) typeinfo for std::__1::__assoc_state<unsigned int> [NameNList, MangledNameNList, NList] 
                0x00000001db007f98 (    0x40) vtable for std::__1::__packaged_task_func<void (*)(unsigned int), std::__1::allocator<void (*)(unsigned int)>, void (unsigned int)> [NameNList, MangledNameNList, NList] 
                0x00000001db007fd8 (    0x10) typeinfo for std::__1::__packaged_task_base<void (unsigned int)> [NameNList, MangledNameNList, NList] 
                0x00000001db007fe8 (    0x18) typeinfo for std::__1::__packaged_task_func<void (*)(unsigned int), std::__1::allocator<void (*)(unsigned int)>, void (unsigned int)> [NameNList, MangledNameNList, NList] 
                0x00000001db008000 (    0x40) vtable for std::__1::__packaged_task_func<bool (*)(unsigned int, unsigned int, unsigned int, CGXVirtualDisplaySettings*), std::__1::allocator<bool (*)(unsigned int, unsigned int, unsigned int, CGXVirtualDisplaySettings*)>, bool (unsigned int, unsigned int, unsigned int, CGXVirtualDisplaySettings*)> [NameNList, MangledNameNList, NList] 
                0x00000001db008040 (    0x10) typeinfo for std::__1::__packaged_task_base<bool (unsigned int, unsigned int, unsigned int, CGXVirtualDisplaySettings*)> [NameNList, MangledNameNList, NList] 
                0x00000001db008050 (    0x18) typeinfo for std::__1::__packaged_task_func<bool (*)(unsigned int, unsigned int, unsigned int, CGXVirtualDisplaySettings*), std::__1::allocator<bool (*)(unsigned int, unsigned int, unsigned int, CGXVirtualDisplaySettings*)>, bool (unsigned int, unsigned int, unsigned int, CGXVirtualDisplaySettings*)> [NameNList, MangledNameNList, NList] 
                0x00000001db008068 (    0x30) vtable for std::__1::__assoc_state<bool> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db008098 (    0x18) typeinfo for std::__1::__assoc_state<bool> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db0080b0 (    0x20) __block_literal_global.2961 [NameNList, MangledNameNList, NList] 
                0x00000001db0080d0 (    0x50) CGXCreateBundleInfoForPid(int, __CFString const**, __CFString const**, __CFString const**)::bundle_cache_attributes [NameNList, MangledNameNList, NList] 
                0x00000001db008120 (    0x20) __block_literal_global.51 [NameNList, MangledNameNList, NList] 
                0x00000001db008140 (    0x20) __block_literal_global.54.2874 [NameNList, MangledNameNList, NList] 
                0x00000001db008160 (    0x20) __block_literal_global.3002 [NameNList, MangledNameNList, NList] 
                0x00000001db008180 (    0x20) __block_literal_global.20 [NameNList, MangledNameNList, NList] 
                0x00000001db0081a0 (    0x20) __block_literal_global.3897 [NameNList, MangledNameNList, NList] 
                0x00000001db0081c0 (    0x20) __block_literal_global.16 [NameNList, MangledNameNList, NList] 
                0x00000001db0081e0 (    0x20) __block_literal_global.20.3902 [NameNList, MangledNameNList, NList] 
                0x00000001db008200 (    0x20) __block_literal_global.23 [NameNList, MangledNameNList, NList] 
                0x00000001db008220 (    0x38) displayNotificationCallbacks [NameNList, MangledNameNList, NList] 
                0x00000001db008258 (    0x20) __block_literal_global.337.3570 [NameNList, MangledNameNList, NList] 
                0x00000001db008278 (    0x20) __block_literal_global.341 [NameNList, MangledNameNList, NList] 
                0x00000001db008298 (    0x20) __block_literal_global.347 [NameNList, MangledNameNList, NList] 
                0x00000001db0082b8 (    0x20) __block_literal_global.351 [NameNList, MangledNameNList, NList] 
                0x00000001db0082d8 (    0x20) __block_literal_global.355 [NameNList, MangledNameNList, NList] 
                0x00000001db0082f8 (    0x40) vtable for std::__1::__packaged_task_func<void (*)(), std::__1::allocator<void (*)()>, void ()> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db008338 (    0x10) typeinfo for std::__1::__packaged_task_base<void ()> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db008348 (    0x18) typeinfo for std::__1::__packaged_task_func<void (*)(), std::__1::allocator<void (*)()>, void ()> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db008360 (    0x20) __block_literal_global.507 [NameNList, MangledNameNList, NList] 
                0x00000001db008380 (    0x20) __block_literal_global.4176 [NameNList, MangledNameNList, NList] 
                0x00000001db0083a0 (    0x20) __block_literal_global.3 [NameNList, MangledNameNList, NList] 
                0x00000001db0083c0 (    0x30) __block_descriptor_289_e8_32r40r48r64c39_ZTSNSt3__16vectorIfNS_9allocatorIfEEEE128c39_ZTSNSt3__16vectorIfNS_9allocatorIfEEEE184c39_ZTSNSt3__16vectorIfNS_9allocatorIfEEEE_e8_v16?0Q8l [NameNList, MangledNameNList, NList] 
                0x00000001db0083f0 (    0x30) __block_descriptor_310_e8_72c39_ZTSNSt3__16vectorIfNS_9allocatorIfEEEE136c39_ZTSNSt3__16vectorIfNS_9allocatorIfEEEE200c39_ZTSNSt3__16vectorIfNS_9allocatorIfEEEE_e8_v16?0Q8l [NameNList, MangledNameNList, NList] 
                0x00000001db008420 (    0x18) typeinfo for gsl::narrowing_error [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db008438 (    0x28) vtable for gsl::narrowing_error [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db008460 (    0x30) __block_descriptor_tmp.4837 [NameNList, MangledNameNList, NList] 
                0x00000001db008490 (    0x30) __block_descriptor_tmp.8 [NameNList, MangledNameNList, NList] 
                0x00000001db0084c0 (    0x20) __block_literal_global.4859 [NameNList, MangledNameNList, NList] 
                0x00000001db0084e0 (    0x30) __block_descriptor_tmp.54 [NameNList, MangledNameNList, NList] 
                0x00000001db008510 (    0x30) __block_descriptor_tmp.59 [NameNList, MangledNameNList, NList] 
                0x00000001db008540 (    0x20) __block_literal_global.62 [NameNList, MangledNameNList, NList] 
                0x00000001db008560 (    0x20) __block_literal_global.5088 [NameNList, MangledNameNList, NList] 
                0x00000001db008580 (    0x20) __block_literal_global.202 [NameNList, MangledNameNList, NList] 
                0x00000001db0085a0 (    0x20) __block_literal_global.206.5479 [NameNList, MangledNameNList, NList] 
                0x00000001db0085c0 (    0x20) __block_literal_global.210 [NameNList, MangledNameNList, NList] 
                0x00000001db0085e0 (    0x20) __block_literal_global.229 [NameNList, MangledNameNList, NList] 
                0x00000001db008600 (   0x220) gMPProcs [NameNList, MangledNameNList, NList] 
                0x00000001db008820 (    0x30) __block_descriptor_tmp.253 [NameNList, MangledNameNList, NList] 
                0x00000001db008850 (    0x40) vtable for std::__1::__packaged_task_func<void (*)(float), std::__1::allocator<void (*)(float)>, void (double)> [NameNList, MangledNameNList, NList] 
                0x00000001db008890 (    0x10) typeinfo for std::__1::__packaged_task_base<void (double)> [NameNList, MangledNameNList, NList] 
                0x00000001db0088a0 (    0x18) typeinfo for std::__1::__packaged_task_func<void (*)(float), std::__1::allocator<void (*)(float)>, void (double)> [NameNList, MangledNameNList, NList] 
                0x00000001db0088b8 (    0x40) vtable for std::__1::__packaged_task_func<void (*)(CFTypePtr<__CFUUID const*>, CoreDisplay::SensorLocation, float), std::__1::allocator<void (*)(CFTypePtr<__CFUUID const*>, CoreDisplay::SensorLocation, float)>, void (CFTypePtr<__CFUUID const*>, CoreDisplay::SensorLocation, double)> [NameNList, MangledNameNList, NList] 
                0x00000001db0088f8 (    0x10) typeinfo for std::__1::__packaged_task_base<void (CFTypePtr<__CFUUID const*>, CoreDisplay::SensorLocation, double)> [NameNList, MangledNameNList, NList] 
                0x00000001db008908 (    0x18) typeinfo for std::__1::__packaged_task_func<void (*)(CFTypePtr<__CFUUID const*>, CoreDisplay::SensorLocation, float), std::__1::allocator<void (*)(CFTypePtr<__CFUUID const*>, CoreDisplay::SensorLocation, float)>, void (CFTypePtr<__CFUUID const*>, CoreDisplay::SensorLocation, double)> [NameNList, MangledNameNList, NList] 
                0x00000001db008920 (    0x20) __block_literal_global.278 [NameNList, MangledNameNList, NList] 
                0x00000001db008940 (    0x20) __block_literal_global.283 [NameNList, MangledNameNList, NList] 
                0x00000001db008960 (    0x30) __block_descriptor_tmp.284 [NameNList, MangledNameNList, NList] 
                0x00000001db008990 (    0x20) __block_literal_global.287 [NameNList, MangledNameNList, NList] 
                0x00000001db0089b0 (    0x30) __block_descriptor_tmp.324 [NameNList, MangledNameNList, NList] 
                0x00000001db0089e0 (    0x20) __block_literal_global.329 [NameNList, MangledNameNList, NList] 
                0x00000001db008a00 (    0x20) __block_literal_global.5556 [NameNList, MangledNameNList, NList] 
                0x00000001db008a20 (    0x30) __block_descriptor_48_e8_32r_e5_v8?0l [NameNList, MangledNameNList, NList] 
                0x00000001db008a50 (    0x38) vtable for std::__1::__shared_ptr_emplace<CoreDisplay::MetalDevice, std::__1::allocator<CoreDisplay::MetalDevice>> [NameNList, MangledNameNList, NList] 
                0x00000001db008a88 (    0x18) typeinfo for std::__1::__shared_ptr_emplace<CoreDisplay::MetalDevice, std::__1::allocator<CoreDisplay::MetalDevice>> [NameNList, MangledNameNList, NList] 
                0x00000001db008aa0 (    0x38) vtable for std::__1::__shared_ptr_emplace<CoreDisplay::DisplaySurface, std::__1::allocator<CoreDisplay::DisplaySurface>> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db008ad8 (   0x220) typeinfo for std::__1::__shared_ptr_emplace<CoreDisplay::DisplaySurface, std::__1::allocator<CoreDisplay::DisplaySurface>> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db008cf8 (    0x30) __block_descriptor_tmp.6095 [NameNList, MangledNameNList, NList] 
            0x00000001db008d28 (  0x9de0) __AUTH_CONST __cfstring
            0x00000001db012b08 (   0x168) __AUTH_CONST __objc_const
                0x00000001db012b08 (    0x48) _OBJC_CLASS_RO_$_VirtualDisplayClient [NameNList, MangledNameNList, NList] 
                0x00000001db012b50 (    0x48) _OBJC_CLASS_RO_$_VirtualDisplayServer [NameNList, MangledNameNList, NList] 
                0x00000001db012b98 (    0x48) _OBJC_CLASS_RO_$_VirtualDisplayListener [NameNList, MangledNameNList, NList] 
                0x00000001db012be0 (    0x48) _OBJC_CLASS_RO_$_CDVirtualDisplayConnect [NameNList, MangledNameNList, NList] 
                0x00000001db012c28 (    0x48) _OBJC_CLASS_RO_$_VirtualDisplayProxy [NameNList, MangledNameNList, NList] 
            0x00000001db012c70 (    0x18) __AUTH_CONST __objc_intobj
            0x00000001db012c88 (    0x80) __AUTH_CONST __objc_doubleobj
            0x00000001db012d08 (    0x18) __AUTH_CONST __auth_ptr
            0x00000001db012d20 (  0x17c0) __AUTH_CONST __auth_got
        0x00000001d71e3898 (   0x190) __AUTH SEGMENT
            0x00000001d71e3898 (   0x190) __AUTH __objc_data
                0x00000001d71e3898 (    0x28) OBJC_CLASS_$_VirtualDisplayClient [NameNList, MangledNameNList, NList] 
                0x00000001d71e38c0 (    0x28) OBJC_METACLASS_$_VirtualDisplayClient [NameNList, MangledNameNList, NList] 
                0x00000001d71e38e8 (    0x28) OBJC_CLASS_$_VirtualDisplayServer [NameNList, MangledNameNList, NList] 
                0x00000001d71e3910 (    0x28) OBJC_METACLASS_$_VirtualDisplayServer [NameNList, MangledNameNList, NList] 
                0x00000001d71e3938 (    0x28) OBJC_CLASS_$_VirtualDisplayListener [NameNList, MangledNameNList, NList] 
                0x00000001d71e3960 (    0x28) OBJC_METACLASS_$_VirtualDisplayListener [NameNList, MangledNameNList, NList] 
                0x00000001d71e3988 (    0x28) OBJC_CLASS_$_CDVirtualDisplayConnect [NameNList, MangledNameNList, NList] 
                0x00000001d71e39b0 (    0x28) OBJC_METACLASS_$_CDVirtualDisplayConnect [NameNList, MangledNameNList, NList] 
                0x00000001d71e39d8 (    0x28) OBJC_CLASS_$_VirtualDisplayProxy [NameNList, MangledNameNList, NList] 
                0x00000001d71e3a00 (    0x28) OBJC_METACLASS_$_VirtualDisplayProxy [NameNList, MangledNameNList, NList] 
        0x00000001d5c3bb80 (  0x6140) __DATA SEGMENT
            0x00000001d5c3bb80 (    0xb8) __DATA __objc_classrefs
            0x00000001d5c3bc38 (    0x28) __DATA __objc_superrefs
            0x00000001d5c3bc60 (    0x6c) __DATA __objc_ivar
                0x00000001d5c3bc60 (     0x4) OBJC_IVAR_$_VirtualDisplayClient._internalQueue [NameNList, MangledNameNList, NList] 
                0x00000001d5c3bc64 (     0x4) OBJC_IVAR_$_VirtualDisplayClient._terminationHandlerQueue [NameNList, MangledNameNList, NList] 
                0x00000001d5c3bc68 (     0x4) OBJC_IVAR_$_VirtualDisplayClient._terminationHandler [NameNList, MangledNameNList, NList] 
                0x00000001d5c3bc6c (     0x4) OBJC_IVAR_$_VirtualDisplayClient._arg [NameNList, MangledNameNList, NList] 
                0x00000001d5c3bc70 (     0x4) OBJC_IVAR_$_VirtualDisplayClient._displayID [NameNList, MangledNameNList, NList] 
                0x00000001d5c3bc74 (     0x4) OBJC_IVAR_$_VirtualDisplayClient._serverRPC_port [NameNList, MangledNameNList, NList] 
                0x00000001d5c3bc78 (     0x4) OBJC_IVAR_$_VirtualDisplayClient._proxyRPC_port [NameNList, MangledNameNList, NList] 
                0x00000001d5c3bc7c (     0x4) OBJC_IVAR_$_VirtualDisplayClient._clientHandler_port [NameNList, MangledNameNList, NList] 
                0x00000001d5c3bc80 (     0x4) OBJC_IVAR_$_VirtualDisplayClient._vendorID [NameNList, MangledNameNList, NList] 
                0x00000001d5c3bc84 (     0x4) OBJC_IVAR_$_VirtualDisplayClient._productID [NameNList, MangledNameNList, NList] 
                0x00000001d5c3bc88 (     0x4) OBJC_IVAR_$_VirtualDisplayClient._name [NameNList, MangledNameNList, NList] 
                0x00000001d5c3bc8c (     0x4) OBJC_IVAR_$_VirtualDisplayServer._serverRPC_port [NameNList, MangledNameNList, NList] 
                0x00000001d5c3bc90 (     0x4) OBJC_IVAR_$_VirtualDisplayListener._database [NameNList, MangledNameNList, NList] 
                0x00000001d5c3bc94 (     0x4) OBJC_IVAR_$_VirtualDisplayListener._lock [NameNList, MangledNameNList, NList] 
                0x00000001d5c3bc98 (     0x4) OBJC_IVAR_$_VirtualDisplayListener._portSet [NameNList, MangledNameNList, NList] 
                0x00000001d5c3bc9c (     0x4) OBJC_IVAR_$_VirtualDisplayListener._demux [NameNList, MangledNameNList, NList] 
                0x00000001d5c3bca0 (     0x4) OBJC_IVAR_$_VirtualDisplayListener._queue [NameNList, MangledNameNList, NList] 
                0x00000001d5c3bca4 (     0x4) OBJC_IVAR_$_VirtualDisplayListener._running [NameNList, MangledNameNList, NList] 
                0x00000001d5c3bca8 (     0x4) OBJC_IVAR_$_CDVirtualDisplayConnect._connect [NameNList, MangledNameNList, NList] 
                0x00000001d5c3bcac (     0x4) OBJC_IVAR_$_VirtualDisplayProxy._listener [NameNList, MangledNameNList, NList] 
                0x00000001d5c3bcb0 (     0x4) OBJC_IVAR_$_VirtualDisplayProxy._virtualDisplayConnect [NameNList, MangledNameNList, NList] 
                0x00000001d5c3bcb4 (     0x4) OBJC_IVAR_$_VirtualDisplayProxy._proxyRPC_port [NameNList, MangledNameNList, NList] 
                0x00000001d5c3bcb8 (     0x4) OBJC_IVAR_$_VirtualDisplayProxy._clientHandler_port [NameNList, MangledNameNList, NList] 
                0x00000001d5c3bcbc (     0x4) OBJC_IVAR_$_VirtualDisplayProxy._sizeInMillimeters [NameNList, MangledNameNList, NList] 
                0x00000001d5c3bcc0 (     0x4) OBJC_IVAR_$_VirtualDisplayProxy._maxPixelsWide [NameNList, MangledNameNList, NList] 
                0x00000001d5c3bcc4 (     0x4) OBJC_IVAR_$_VirtualDisplayProxy._maxPixelsHigh [NameNList, MangledNameNList, NList] 
                0x00000001d5c3bcc8 (     0x4) OBJC_IVAR_$_VirtualDisplayProxy._displayID [NameNList, MangledNameNList, NList] 
            0x00000001d5c3bcd0 (   0x928) __DATA __data
                0x00000001d5c3bcd0 (     0x1) CoreDisplay::multiRefreshRateScaledModes [NameNList, MangledNameNList, NList] 
                0x00000001d5c3bcd1 (     0x3) CoreDisplay::appleMultiRefreshRateScaledModes [NameNList, MangledNameNList, NList] 
                0x00000001d5c3bcd4 (     0x4) CoreDisplay::whitePointMode [NameNList, MangledNameNList, NList] 
                0x00000001d5c3bcd8 (     0x4) CoreDisplay::appleDefaultDisplayOutputMode [NameNList, MangledNameNList, NList] 
                0x00000001d5c3bcdc (     0x1) CoreDisplay::useDisplayLuminance [NameNList, MangledNameNList, NList] 
                0x00000001d5c3bcdd (     0x1) CoreDisplay::useSystemGammaInAMBD [NameNList, MangledNameNList, NList] 
                0x00000001d5c3bcde (     0x1) CoreDisplay::preferHWCursor [NameNList, MangledNameNList, NList] 
                0x00000001d5c3bcdf (     0x1) CoreDisplay::fadeOnHDRSwitch [NameNList, MangledNameNList, NList] 
                0x00000001d5c3bce0 (     0x4) CoreDisplay::dscTargetBPP [NameNList, MangledNameNList, NList] 
                0x00000001d5c3bce4 (     0x4) CoreDisplay::dscMinSlicePerColumn [NameNList, MangledNameNList, NList] 
                0x00000001d5c3bce8 (     0x1) CoreDisplay::pseudoTMBypass [NameNList, MangledNameNList, NList] 
                0x00000001d5c3bce9 (     0x1) CoreDisplay::enableWSAA [NameNList, MangledNameNList, NList] 
                0x00000001d5c3bcea (     0x1) CoreDisplay::enableWSAA_onAMD [NameNList, MangledNameNList, NList] 
                0x00000001d5c3bceb (     0x1) CoreDisplay::enableWSAA_onAPV [NameNList, MangledNameNList, NList] 
                0x00000001d5c3bcec (     0x1) CoreDisplay::enableWSAA_onIG [NameNList, MangledNameNList, NList] 
                0x00000001d5c3bced (     0x1) CoreDisplay::useIOP [NameNList, MangledNameNList, NList] 
                0x00000001d5c3bcee (     0x1) CoreDisplay::useIOP_onIG [NameNList, MangledNameNList, NList] 
                0x00000001d5c3bcef (     0x1) CoreDisplay::useIOP_gamma_onNVIDIA [NameNList, MangledNameNList, NList] 
                0x00000001d5c3bcf0 (     0x1) CoreDisplay::useIOP_gamma_onAMD [NameNList, MangledNameNList, NList] 
                0x00000001d5c3bcf1 (     0x1) CoreDisplay::useIOP_gamma_onAPV [NameNList, MangledNameNList, NList] 
                0x00000001d5c3bcf2 (     0x1) CoreDisplay::useIOP_gamma_onIG [NameNList, MangledNameNList, NList] 
                0x00000001d5c3bcf3 (     0x1) CoreDisplay::displaySurfaceUsesIOSurface [NameNList, MangledNameNList, NList] 
                0x00000001d5c3bcf4 (     0x1) CoreDisplay::useMetal [NameNList, MangledNameNList, NList] 
                0x00000001d5c3bcf5 (     0x3) CoreDisplay::enableGTrace [NameNList, MangledNameNList, NList] 
                0x00000001d5c3bcf8 (     0x4) CoreDisplay::gTraceBufferSize [NameNList, MangledNameNList, NList] 
                0x00000001d5c3bcfc (     0x4) CoreDisplay::dataDumpOptions [NameNList, MangledNameNList, NList] 
                0x00000001d5c3bd00 (     0x1) CoreDisplay::convert10BitSurface [NameNList, MangledNameNList, NList] 
                0x00000001d5c3bd01 (     0x1) CoreDisplay::enableBrightnessAttenuation [NameNList, MangledNameNList, NList] 
                0x00000001d5c3bd02 (     0x1) CoreDisplay::enableAdaptiveSync [NameNList, MangledNameNList, NList] 
                0x00000001d5c3bd03 (     0x1) CoreDisplay::ignoreEOTFAtomicity [NameNList, MangledNameNList, NList] 
                0x00000001d5c3bd04 (     0x1) CoreDisplay::allowMatrixNightShift [NameNList, MangledNameNList, NList] 
                0x00000001d5c3bd05 (     0x1) CoreDisplay::allowMatrixNightShift_onIG [NameNList, MangledNameNList, NList] 
                0x00000001d5c3bd06 (     0x1) CoreDisplay::allowMatrixNightShift_onAMD [NameNList, MangledNameNList, NList] 
                0x00000001d5c3bd07 (     0x1) CoreDisplay::allowMatrixNightShift_onAPV [NameNList, MangledNameNList, NList] 
                0x00000001d5c3bd08 (     0x1) CoreDisplay::markHMDsAsOffline [NameNList, MangledNameNList, NList] 
                0x00000001d5c3bd09 (     0x1) CoreDisplay::markAccessibilityDisplayAsOffline [NameNList, MangledNameNList, NList] 
                0x00000001d5c3bd0a (     0x1) CoreDisplay::enableInitializationAssert [NameNList, MangledNameNList, NList] 
                0x00000001d5c3bd0b (     0x1) CoreDisplay::forcePipeForHDR [NameNList, MangledNameNList, NList] 
                0x00000001d5c3bd0c (     0x1) CoreDisplay::enableSyncDidReconfigure [NameNList, MangledNameNList, NList] 
                0x00000001d5c3bd0d (     0x3) CoreDisplay::enableVirtualDisplayClamshell [NameNList, MangledNameNList, NList] 
                0x00000001d5c3bd10 (     0x4) CoreDisplay::nominalNits2084 [NameNList, MangledNameNList, NList] 
                0x00000001d5c3bd14 (     0x4) CoreDisplay::defaultTVEDRMax [NameNList, MangledNameNList, NList] 
                0x00000001d5c3bd18 (     0x1) CoreDisplay::defaultAllow2020 [NameNList, MangledNameNList, NList] 
                0x00000001d5c3bd19 (     0x1) CoreDisplay::enable5kUltrawideFix [NameNList, MangledNameNList, NList] 
                0x00000001d5c3bd1a (     0x2) CoreDisplay::enableVirtualDisplayRotationPreferences [NameNList, MangledNameNList, NList] 
                0x00000001d5c3bd1c (     0x4) CoreDisplay::edrAnimationFramesPerStep [NameNList, MangledNameNList, NList] 
                0x00000001d5c3bd20 (     0x4) CoreDisplay::edrAnimationSteps [NameNList, MangledNameNList, NList] 
                0x00000001d5c3bd24 (     0x4) gMuxSwitchMode [NameNList, MangledNameNList, NList] 
                0x00000001d5c3bd28 (    0x40) CoreDisplay::GetCGColorSpaceForPropertyList(CFTypePtr<void const*>)::colorSpaceCacheMutex [NameNList, MangledNameNList, NList] 
                0x00000001d5c3bd68 (     0x8) gAllowDeepYUV444Modes [NameNList, MangledNameNList, NList] 
                0x00000001d5c3bd70 (    0x40) gDisplayMapLock [NameNList, MangledNameNList, NList] 
                0x00000001d5c3bdb0 (    0x40) CoreDisplay::Display::SetEDRScaleFactor(double)::edrScaleMutex [NameNList, MangledNameNList, NList] 
                0x00000001d5c3bdf0 (    0x40) GetLatestRealtimeDisplayInfoMemory()::shmemMappingMutex [NameNList, MangledNameNList, NList] 
                0x00000001d5c3be30 (     0x8) CGXPerformInitialDisplayConfiguration::mux_reporting_interval [NameNList, MangledNameNList, NList] 
                0x00000001d5c3be38 (     0x8) CGXPerformInitialDisplayConfiguration::displays_reporting_interval [NameNList, MangledNameNList, NList] 
                0x00000001d5c3be40 (     0x8) CGXPerformInitialDisplayConfiguration::flushes_reporting_interval [NameNList, MangledNameNList, NList] 
                0x00000001d5c3be48 (     0x4) sendDisplaysMenuNotification(bool)::_notifyToken [NameNList, MangledNameNList, NList] 
                0x00000001d5c3be4c (     0x1) CGXMessageTraceMux::has_avx [NameNList, MangledNameNList, NList] 
                0x00000001d5c3be4d (     0x1) CGXMessageTraceAppFlushes::mt_flush_hw [NameNList, MangledNameNList, NList] 
                0x00000001d5c3be4e (     0x2) CGXShmemAllocatorCreate::magic [NameNList, MangledNameNList, NList] 
                0x00000001d5c3be50 (    0x58) gDimmingController [NameNList, MangledNameNList, NList] 
                0x00000001d5c3bea8 (     0x1) CGXSetDisplayPolicyEnabled::'block-literal'::lastState [NameNList, MangledNameNList, NList] 
                0x00000001d5c3bea9 (     0x1) gCGXDisplayPageFlip [NameNList, MangledNameNList, NList] 
                0x00000001d5c3beaa (     0x2) gCGXDisplayPipeGammaEnabled [NameNList, MangledNameNList, NList] 
                0x00000001d5c3beac (     0x4) gCGXCurrentConfigurationType [NameNList, MangledNameNList, NList] 
                0x00000001d5c3beb0 (     0x8) gCGXDisplayHDREnabled [NameNList, MangledNameNList, NList] 
                0x00000001d5c3beb8 (     0x8) display_system_state_seed [NameNList, MangledNameNList, NList] 
                0x00000001d5c3bec0 (    0x40) CoreDisplay::CreateMetalDevice(unsigned int)::m [NameNList, MangledNameNList, NList] 
                0x00000001d5c3bf00 (    0x40) CoreDisplay::DisplaySurface::Cache::m [NameNList, MangledNameNList, NList] 
                0x00000001d5c3bf40 (     0x1) sCDReportsConnectionChangeNotifications [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5c3bf41 (     0x1) sCDReportsContentProtectionStatusChangeNotifications [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5c3bf42 (     0x6) ReportsSLXServerGPUAddedRemovedNotifications [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5c3bf48 (   0x268) CoreDisplay::Framebuffer::EmptyCGXDisplayDevice [NameNList, MangledNameNList, NList] 
                0x00000001d5c3c1b0 (   0x418) CoreDisplay::Framebuffer::EmptyMPPriv [NameNList, MangledNameNList, NList] 
                0x00000001d5c3c5c8 (    0x30) mode_internal_key_value_pair_comparer(void const*, void const*, void*)::vals [NameNList, MangledNameNList, NList] 
            0x00000001d5c3c5f8 (    0x40) __DATA __crash_info
                0x00000001d5c3c5f8 (    0x40) gCRAnnotations [PEXT, NameNList, MangledNameNList, NList] 
            0x00000001d5c3c638 (   0x6b8) __DATA __common
                0x00000001d5c3c638 (   0x6b8) gWSCallbacks [EXT, NameNList, MangledNameNList, NList] 
            0x00000001d5c3cd00 (  0x4fc0) __DATA __bss
                0x00000001d5c3cd00 (     0x8) gLog [NameNList, MangledNameNList, NList] 
                0x00000001d5c3cd08 (     0x8) gListener [NameNList, MangledNameNList, NList] 
                0x00000001d5c3cd10 (     0x8) -[VirtualDisplayClient initWithOptions:queue:terminationHandler:context:]::onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d5c3cd18 (     0x8) getanalytics_send_event_lazySymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c3cd20 (     0x8) CoreAnalyticsLibraryCore(char**)::frameworkLibrary (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c3cd28 (     0x8) SkyLightLibraryCore(char**)::frameworkLibrary (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c3cd30 (     0x8) getSLSDisplayGetCalibrationInfoSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c3cd38 (     0x8) getSLSDisplayCopyCalibrationInfoSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c3cd40 (     0x8) getSLSDisplayCopyUserAdjustmentSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c3cd48 (     0x8) getSLSDisplaySetUserAdjustmentSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c3cd50 (     0x8) getSLSDisplayCopyUserAdjustmentDataSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c3cd58 (     0x8) getSLSDisplaySetUserAdjustmentDataSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c3cd60 (     0x8) getSLSDisplayFactoryResetSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c3cd68 (     0x8) getSLSDisplayIsUserAdjustmentSupportedSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c3cd70 (     0x8) getSLSDisplayIsUserAdjustmentValidSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c3cd78 (     0x8) getSLSDisplayInvalidateUserAdjustmentSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c3cd80 (     0x8) VirtualDisplayServerStart::onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d5c3cd88 (     0x8) gServer [NameNList, MangledNameNList, NList] 
                0x00000001d5c3cd90 (     0x8) gLog (.30) [NameNList, MangledNameNList, NList] 
                0x00000001d5c3cd98 (     0x8) gListener (.29) [NameNList, MangledNameNList, NList] 
                0x00000001d5c3cda0 (     0x8) init_once()::onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d5c3cda8 (     0x8) CGXSendHIDDisplayReportingData()::AnalyticsSendEventLazyFunc [NameNList, MangledNameNList, NList] 
                0x00000001d5c3cdb0 (     0x8) CGXSendHIDDisplayReportingData()::onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d5c3cdb8 (     0x8) HIDDisplayReportingQueue()::sHIDDisplayReportingQueue [NameNList, MangledNameNList, NList] 
                0x00000001d5c3cdc0 (     0x8) HIDDisplayReportingQueue()::onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d5c3cdc8 (     0x8) FetchReportingData(__CFString const*)::HIDDisplayCreateIOReportingInterfaceWithContainerIDFunc [NameNList, MangledNameNList, NList] 
                0x00000001d5c3cdd0 (     0x8) FetchReportingData(__CFString const*)::HIDDisplayIOReportingSetInputDataHandlerFunc [NameNList, MangledNameNList, NList] 
                0x00000001d5c3cdd8 (     0x8) FetchReportingData(__CFString const*)::HIDDisplayIOReportingSetDispatchQueueFunc [NameNList, MangledNameNList, NList] 
                0x00000001d5c3cde0 (     0x8) FetchReportingData(__CFString const*)::HIDDisplayIOReportingActivateFunc [NameNList, MangledNameNList, NList] 
                0x00000001d5c3cde8 (     0x8) FetchReportingData(__CFString const*)::HIDDisplayIOReportingSetOutputDataFunc [NameNList, MangledNameNList, NList] 
                0x00000001d5c3cdf0 (     0x8) FetchReportingData(__CFString const*)::HIDDisplayIOReportingCancelFunc [NameNList, MangledNameNList, NList] 
                0x00000001d5c3cdf8 (     0x8) FetchReportingData(__CFString const*)::onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d5c3ce00 (     0x8) HIDDisplayReportingDataHandler(__CFData const*, void (__CFData const*) block_pointer)::accumulatedData [NameNList, MangledNameNList, NList] 
                0x00000001d5c3ce08 (    0x28) HIDDisplayReportingData()::sDisplayData [NameNList, MangledNameNList, NList] 
                0x00000001d5c3ce30 (    0x20) guard variable for HIDDisplayReportingData()::sDisplayData [NameNList, MangledNameNList, NList] 
                0x00000001d5c3ce50 (    0x20) CoreDisplay::panicOnIsReadyAssert [NameNList, MangledNameNList, NList] 
                0x00000001d5c3ce70 (     0x1) CoreDisplay::useIOBacklight [NameNList, MangledNameNList, NList] 
                0x00000001d5c3ce71 (     0x7) CoreDisplay::swapColorInGPUPass [NameNList, MangledNameNList, NList] 
                0x00000001d5c3ce78 (     0x8) CoreDisplay::defaultDisplayOutputMode [NameNList, MangledNameNList, NList] 
                0x00000001d5c3ce80 (     0x1) CoreDisplay::useHIDDisplayTestID [NameNList, MangledNameNList, NList] 
                0x00000001d5c3ce81 (     0x1) CoreDisplay::appendDisplayIDToProductName [NameNList, MangledNameNList, NList] 
                0x00000001d5c3ce82 (     0x2) CoreDisplay::enableHDRonJ132J213J174 [NameNList, MangledNameNList, NList] 
                0x00000001d5c3ce84 (     0x4) CoreDisplay::userAdjustmentPowerLimit [NameNList, MangledNameNList, NList] 
                0x00000001d5c3ce88 (    0x10) CoreDisplay::ioSurfaceProtectionOptionsOverride [NameNList, MangledNameNList, NList] 
                0x00000001d5c3ce98 (     0x8) CoreDisplay::crashLogMessageTimer [NameNList, MangledNameNList, NList] 
                0x00000001d5c3cea0 (     0x8) CoreDisplay::InitializeUserDefaults()::vorpal [NameNList, MangledNameNList, NList] 
                0x00000001d5c3cea8 (     0x8) guard variable for CoreDisplay::InitializeUserDefaults()::vorpal [NameNList, MangledNameNList, NList] 
                0x00000001d5c3ceb0 (     0x8) CoreDisplay::InitializeUserDefaults()::useIOBLModule [NameNList, MangledNameNList, NList] 
                0x00000001d5c3ceb8 (     0x8) guard variable for CoreDisplay::InitializeUserDefaults()::useIOBLModule [NameNList, MangledNameNList, NList] 
                0x00000001d5c3cec0 (     0x1) CoreDisplay::enableWSAA_onNVIDIA [NameNList, MangledNameNList, NList] 
                0x00000001d5c3cec1 (     0x1) CoreDisplay::useIOP_onNVIDIA [NameNList, MangledNameNList, NList] 
                0x00000001d5c3cec2 (     0x1) CoreDisplay::useIOP_onAMD [NameNList, MangledNameNList, NList] 
                0x00000001d5c3cec3 (     0x1) CoreDisplay::useIOP_onAPV [NameNList, MangledNameNList, NList] 
                0x00000001d5c3cec4 (     0x1) CoreDisplay::useIOSurfaceLog [NameNList, MangledNameNList, NList] 
                0x00000001d5c3cec5 (     0x1) CoreDisplay::muxSwitchPresentUsesVSync [NameNList, MangledNameNList, NList] 
                0x00000001d5c3cec6 (     0x1) CoreDisplay::bypassOrientationCheck [NameNList, MangledNameNList, NList] 
                0x00000001d5c3cec7 (     0x1) CoreDisplay::enableStateDump [NameNList, MangledNameNList, NList] 
                0x00000001d5c3cec8 (     0x4) CoreDisplay::enableDataDump [NameNList, MangledNameNList, NList] 
                0x00000001d5c3cecc (     0x4) CoreDisplay::dataDumpFrameCount [NameNList, MangledNameNList, NList] 
                0x00000001d5c3ced0 (     0x1) CoreDisplay::dumpFirstFrameAfterLaunch [NameNList, MangledNameNList, NList] 
                0x00000001d5c3ced1 (     0x1) CoreDisplay::saveRawYUV [NameNList, MangledNameNList, NList] 
                0x00000001d5c3ced2 (     0x1) CoreDisplay::saveAsTIFF [NameNList, MangledNameNList, NList] 
                0x00000001d5c3ced3 (     0x1) CoreDisplay::markShapes [NameNList, MangledNameNList, NList] 
                0x00000001d5c3ced4 (     0x1) CoreDisplay::forceAdaptiveSync [NameNList, MangledNameNList, NList] 
                0x00000001d5c3ced5 (     0x1) CoreDisplay::enableHDMIFRL [NameNList, MangledNameNList, NList] 
                0x00000001d5c3ced6 (     0x1) CoreDisplay::forceHDMIFRL [NameNList, MangledNameNList, NList] 
                0x00000001d5c3ced7 (     0x1) CoreDisplay::enableHDMIVRR [NameNList, MangledNameNList, NList] 
                0x00000001d5c3ced8 (     0x1) CoreDisplay::forceHDMIVRR [NameNList, MangledNameNList, NList] 
                0x00000001d5c3ced9 (     0x1) CoreDisplay::enable8kVIC [NameNList, MangledNameNList, NList] 
                0x00000001d5c3ceda (     0x1) CoreDisplay::spinUntilSurfaceIsReady [NameNList, MangledNameNList, NList] 
                0x00000001d5c3cedb (     0x1) CoreDisplay::allowMatrixNightShift_onIG_preSKL [NameNList, MangledNameNList, NList] 
                0x00000001d5c3cedc (     0x1) CoreDisplay::allowMatrixNightShift_onNVIDIA [NameNList, MangledNameNList, NList] 
                0x00000001d5c3cedd (     0x1) CoreDisplay::forcePipeFallback [NameNList, MangledNameNList, NList] 
                0x00000001d5c3cede (     0x1) CoreDisplay::forcePipeFallbackFallback [NameNList, MangledNameNList, NList] 
                0x00000001d5c3cedf (     0x1) CoreDisplay::reduceVirtualDisplayShielding [NameNList, MangledNameNList, NList] 
                0x00000001d5c3cee0 (     0x1) CoreDisplay::disableSDP [NameNList, MangledNameNList, NList] 
                0x00000001d5c3cee1 (     0x3) CoreDisplay::enableHDR10 [NameNList, MangledNameNList, NList] 
                0x00000001d5c3cee4 (     0x4) CoreDisplay::forceDPBStrength [NameNList, MangledNameNList, NList] 
                0x00000001d5c3cee8 (     0x8) CoreDisplay::alsToneMap [NameNList, MangledNameNList, NList] 
                0x00000001d5c3cef0 (    0x28) CoreDisplay::FindDisplayPipeForService(unsigned int)::gEntryIDs [NameNList, MangledNameNList, NList] 
                0x00000001d5c3cf18 (     0x8) guard variable for CoreDisplay::FindDisplayPipeForService(unsigned int)::gEntryIDs [NameNList, MangledNameNList, NList] 
                0x00000001d5c3cf20 (     0x8) CoreDisplay::Enable8kVIC()::predicate [NameNList, MangledNameNList, NList] 
                0x00000001d5c3cf28 (     0x8) CoreDisplay::IsAppleInternal()::predicate [NameNList, MangledNameNList, NList] 
                0x00000001d5c3cf30 (     0x1) CoreDisplay::isAppleInternal [NameNList, MangledNameNList, NList] 
                0x00000001d5c3cf31 (     0x1) CoreDisplay::dumpLastFrameBeforeExit [NameNList, MangledNameNList, NList] 
                0x00000001d5c3cf32 (     0x6) CoreDisplay::dumpFirstFrameAfterWake [NameNList, MangledNameNList, NList] 
                0x00000001d5c3cf38 (   0x400) CoreDisplay::CrashLogMessage()::buffer [NameNList, MangledNameNList, NList] 
                0x00000001d5c3d338 (     0x8) CoreDisplay::CrashLogMessage()::gpuVendors [NameNList, MangledNameNList, NList] 
                0x00000001d5c3d340 (     0x8) guard variable for CoreDisplay::CrashLogMessage()::gpuVendors [NameNList, MangledNameNList, NList] 
                0x00000001d5c3d348 (    0x18) CoreDisplay::StartTimeStampString()::timestamp [NameNList, MangledNameNList, NList] 
                0x00000001d5c3d360 (     0x8) CoreDisplay::StartTimeStampString()::pred [NameNList, MangledNameNList, NList] 
                0x00000001d5c3d368 (     0x8) CoreDisplay::VorpalBlade()::once [NameNList, MangledNameNList, NList] 
                0x00000001d5c3d370 (     0x8) CoreDisplay::VorpalBlade()::vorpal [NameNList, MangledNameNList, NList] 
                0x00000001d5c3d378 (     0x8) CoreDisplay::PlatformUseIOBacklight()::once [NameNList, MangledNameNList, NList] 
                0x00000001d5c3d380 (     0x8) CoreDisplay::PlatformUseIOBacklight()::useIOBLModule [NameNList, MangledNameNList, NList] 
                0x00000001d5c3d388 (     0x8) guard variable for CoreDisplay::PlatformUseIOBacklight()::useIOBLModule [NameNList, MangledNameNList, NList] 
                0x00000001d5c3d390 (     0x8) CoreDisplay::DefaultWhitePointMode()::once [NameNList, MangledNameNList, NList] 
                0x00000001d5c3d398 (     0x8) CoreDisplay::DefaultWhitePointMode()::mode [NameNList, MangledNameNList, NList] 
                0x00000001d5c3d3a0 (     0x8) guard variable for CoreDisplay::DefaultWhitePointMode()::mode [NameNList, MangledNameNList, NList] 
                0x00000001d5c3d3a8 (     0x8) CoreDisplay::edrMaxAllowedHeadroom [NameNList, MangledNameNList, NList] 
                0x00000001d5c3d3b0 (     0x8) CoreDisplay::logicalBacklightInPQ [NameNList, MangledNameNList, NList] 
                0x00000001d5c3d3b8 (     0x8) CoreDisplay::systemGammaOverride [NameNList, MangledNameNList, NList] 
                0x00000001d5c3d3c0 (     0x8) CoreDisplay::RegisterForDumpState()::_tokenDebug [NameNList, MangledNameNList, NList] 
                0x00000001d5c3d3c8 (     0x8) CoreDisplay::RegisterForDumpState()::predicate [NameNList, MangledNameNList, NList] 
                0x00000001d5c3d3d0 (     0x8) CoreDisplay::RegisterForUpdateDumpPreferences()::_tokenDebug [NameNList, MangledNameNList, NList] 
                0x00000001d5c3d3d8 (     0x8) CoreDisplay::RegisterForUpdateDumpPreferences()::predicate [NameNList, MangledNameNList, NList] 
                0x00000001d5c3d3e0 (     0x8) CoreDisplay::RegisterForDisplayPipeDebugFlags()::_tokenDebug [NameNList, MangledNameNList, NList] 
                0x00000001d5c3d3e8 (     0x8) CoreDisplay::RegisterForDisplayPipeDebugFlags()::predicate [NameNList, MangledNameNList, NList] 
                0x00000001d5c3d3f0 (     0x8) CoreDisplay::RegisterForSetDebugLogState()::_tokenDebug [NameNList, MangledNameNList, NList] 
                0x00000001d5c3d3f8 (     0x8) CoreDisplay::RegisterForSetDebugLogState()::predicate [NameNList, MangledNameNList, NList] 
                0x00000001d5c3d400 (     0x8) CoreDisplay::RegisterForSetDataDumpFrameCount()::_tokenDebug [NameNList, MangledNameNList, NList] 
                0x00000001d5c3d408 (     0x8) CoreDisplay::RegisterForSetDataDumpFrameCount()::predicate [NameNList, MangledNameNList, NList] 
                0x00000001d5c3d410 (     0x8) CoreDisplay::RegisterForDumpCurrentFrame()::_tokenDebug [NameNList, MangledNameNList, NList] 
                0x00000001d5c3d418 (     0x8) CoreDisplay::RegisterForDumpCurrentFrame()::predicate [NameNList, MangledNameNList, NList] 
                0x00000001d5c3d420 (     0x8) CoreDisplay::RegisterForDumpLastFrameBeforeExit()::_tokenDebug [NameNList, MangledNameNList, NList] 
                0x00000001d5c3d428 (     0x8) CoreDisplay::RegisterForDumpLastFrameBeforeExit()::predicate [NameNList, MangledNameNList, NList] 
                0x00000001d5c3d430 (     0x8) CoreDisplay::RegisterForDumpFirstFrameAfterWake()::_tokenDebug [NameNList, MangledNameNList, NList] 
                0x00000001d5c3d438 (     0x8) CoreDisplay::RegisterForDumpFirstFrameAfterWake()::predicate [NameNList, MangledNameNList, NList] 
                0x00000001d5c3d440 (     0x8) CoreDisplay::RegisterForDumpIOPCapabilities()::_tokenDebug [NameNList, MangledNameNList, NList] 
                0x00000001d5c3d448 (     0x8) CoreDisplay::RegisterForDumpIOPCapabilities()::predicate [NameNList, MangledNameNList, NList] 
                0x00000001d5c3d450 (     0x8) CoreDisplay::RegisterForDumpGammaTransferData()::_tokenDebug [NameNList, MangledNameNList, NList] 
                0x00000001d5c3d458 (     0x8) CoreDisplay::RegisterForDumpGammaTransferData()::predicate [NameNList, MangledNameNList, NList] 
                0x00000001d5c3d460 (     0x8) CoreDisplay::RegisterForSetEDRAnimParams()::_tokenDebug [NameNList, MangledNameNList, NList] 
                0x00000001d5c3d468 (     0x8) CoreDisplay::RegisterForSetEDRAnimParams()::predicate [NameNList, MangledNameNList, NList] 
                0x00000001d5c3d470 (     0x8) CoreDisplay::RegisterForSetSystemGamma()::_tokenDebug [NameNList, MangledNameNList, NList] 
                0x00000001d5c3d478 (     0x8) CoreDisplay::RegisterForSetSystemGamma()::predicate [NameNList, MangledNameNList, NList] 
                0x00000001d5c3d480 (     0x4) gMuxDataPort [NameNList, MangledNameNList, NList] 
                0x00000001d5c3d484 (     0x1) gMuxBootSwitch [NameNList, MangledNameNList, NList] 
                0x00000001d5c3d485 (     0x3) gMuxLock [NameNList, MangledNameNList, NList] 
                0x00000001d5c3d488 (     0x8) gMuxLockCount [NameNList, MangledNameNList, NList] 
                0x00000001d5c3d490 (     0x4) gMuxLockPort [NameNList, MangledNameNList, NList] 
                0x00000001d5c3d494 (     0x4) mux_initialize()::initialized [NameNList, MangledNameNList, NList] 
                0x00000001d5c3d498 (     0x8) gLog (.203) [NameNList, MangledNameNList, NList] 
                0x00000001d5c3d4a0 (     0x8) init_once(NSString*)::onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d5c3d4a8 (     0x8) CoreDisplay::Logger::signpost_handle()::handle [NameNList, MangledNameNList, NList] 
                0x00000001d5c3d4b0 (     0x8) guard variable for CoreDisplay::Logger::signpost_handle()::handle [NameNList, MangledNameNList, NList] 
                0x00000001d5c3d4b8 (     0x8) CoreDisplay::Logger::display_reconfig_signpost_handle()::handle [NameNList, MangledNameNList, NList] 
                0x00000001d5c3d4c0 (     0x8) guard variable for CoreDisplay::Logger::display_reconfig_signpost_handle()::handle [NameNList, MangledNameNList, NList] 
                0x00000001d5c3d4c8 (     0x8) CoreDisplay::Logger::log_handle()::handle [NameNList, MangledNameNList, NList] 
                0x00000001d5c3d4d0 (     0x8) guard variable for CoreDisplay::Logger::log_handle()::handle [NameNList, MangledNameNList, NList] 
                0x00000001d5c3d4d8 (    0x28) CoreDisplay::GetCGColorSpaceForPropertyList(CFTypePtr<void const*>)::colorSpaceCache [NameNList, MangledNameNList, NList] 
                0x00000001d5c3d500 (     0x8) guard variable for CoreDisplay::GetCGColorSpaceForPropertyList(CFTypePtr<void const*>)::colorSpaceCache [NameNList, MangledNameNList, NList] 
                0x00000001d5c3d508 (     0x8) guard variable for CoreDisplay::GetCGColorSpaceForPropertyList(CFTypePtr<void const*>)::colorSpaceCacheMutex [NameNList, MangledNameNList, NList] 
                0x00000001d5c3d510 (     0x8) CoreDisplay::IsMatrixIdentity(std::__1::array<double, 9ul>&)::matrix3IsIdentity [NameNList, MangledNameNList, NList] 
                0x00000001d5c3d518 (     0x8) CoreDisplay::IsMatrixIdentity(std::__1::array<double, 9ul>&)::predicate [NameNList, MangledNameNList, NList] 
                0x00000001d5c3d520 (     0x8) CoreDisplay::MinSystemSchedulerQuantum()::minSystemSchedulerQuantum [NameNList, MangledNameNList, NList] 
                0x00000001d5c3d528 (     0x8) CoreDisplay::MinSystemSchedulerQuantum()::onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d5c3d530 (     0x8) CoreDisplay::CRPrintf(char const*, ...)::serialQ [NameNList, MangledNameNList, NList] 
                0x00000001d5c3d538 (     0x8) guard variable for CoreDisplay::CRPrintf(char const*, ...)::serialQ [NameNList, MangledNameNList, NList] 
                0x00000001d5c3d540 (     0x4) CoreDisplay::gCDCRPrintfMsgIdx [NameNList, MangledNameNList, NList] 
                0x00000001d5c3d544 (   0x804) CoreDisplay::gCDCRPrintfBuf [NameNList, MangledNameNList, NList] 
                0x00000001d5c3dd48 (     0x8) CoreDisplay::GetCurrentTimeInMilliSeconds()::predicate [NameNList, MangledNameNList, NList] 
                0x00000001d5c3dd50 (     0x8) CoreDisplay::GetCurrentTimeInMilliSeconds()::timebaseInfo [NameNList, MangledNameNList, NList] 
                0x00000001d5c3dd58 (   0x120) gl_global_resources [NameNList, MangledNameNList, NList] 
                0x00000001d5c3de78 (     0x4) gIOGraphicsPrefsService [NameNList, MangledNameNList, NList] 
                0x00000001d5c3de7c (     0x1) gIOGraphicsSentPrefs [NameNList, MangledNameNList, NList] 
                0x00000001d5c3de7d (     0x3) gIOGraphicsInstallBoot [NameNList, MangledNameNList, NList] 
                0x00000001d5c3de80 (     0x8) gConnectRefDict [NameNList, MangledNameNList, NList] 
                0x00000001d5c3de88 (     0x8) gAllConnects [NameNList, MangledNameNList, NList] 
                0x00000001d5c3de90 (     0x8) IOFBUpdateDisplayModeID(IOFBConnect*, int*)::currentModeID [NameNList, MangledNameNList, NList] 
                0x00000001d5c3de98 (    0x28) getParameterNodes()::gEncodingToRangeMap [NameNList, MangledNameNList, NList] 
                0x00000001d5c3dec0 (     0x8) guard variable for getParameterNodes()::gEncodingToRangeMap [NameNList, MangledNameNList, NList] 
                0x00000001d5c3dec8 (    0x28) getParameterNodes()::gBitPerComponentToRangeMap [NameNList, MangledNameNList, NList] 
                0x00000001d5c3def0 (     0x8) guard variable for getParameterNodes()::gBitPerComponentToRangeMap [NameNList, MangledNameNList, NList] 
                0x00000001d5c3def8 (    0x28) getParameterNodes()::gColorimetry [NameNList, MangledNameNList, NList] 
                0x00000001d5c3df20 (     0x8) guard variable for getParameterNodes()::gColorimetry [NameNList, MangledNameNList, NList] 
                0x00000001d5c3df28 (    0x28) getParameterNodes()::gDynamicRange [NameNList, MangledNameNList, NList] 
                0x00000001d5c3df50 (     0x8) guard variable for getParameterNodes()::gDynamicRange [NameNList, MangledNameNList, NList] 
                0x00000001d5c3df58 (    0x28) getParameterNodes()::parameterNodes [NameNList, MangledNameNList, NList] 
                0x00000001d5c3df80 (     0x8) guard variable for getParameterNodes()::parameterNodes [NameNList, MangledNameNList, NList] 
                0x00000001d5c3df88 (    0x18) get_wire_name(IOTimingInformation&)::dnyMap [NameNList, MangledNameNList, NList] 
                0x00000001d5c3dfa0 (     0x8) guard variable for get_wire_name(IOTimingInformation&)::dnyMap [NameNList, MangledNameNList, NList] 
                0x00000001d5c3dfa8 (    0x18) get_wire_name(IOTimingInformation&)::encMap [NameNList, MangledNameNList, NList] 
                0x00000001d5c3dfc0 (     0x8) guard variable for get_wire_name(IOTimingInformation&)::encMap [NameNList, MangledNameNList, NList] 
                0x00000001d5c3dfc8 (    0x18) get_wire_name(IOTimingInformation&)::bpcMap [NameNList, MangledNameNList, NList] 
                0x00000001d5c3dfe0 (     0x8) guard variable for get_wire_name(IOTimingInformation&)::bpcMap [NameNList, MangledNameNList, NList] 
                0x00000001d5c3dfe8 (    0x18) get_wire_name(IOTimingInformation&)::clrMap [NameNList, MangledNameNList, NList] 
                0x00000001d5c3e000 (     0x8) guard variable for get_wire_name(IOTimingInformation&)::clrMap [NameNList, MangledNameNList, NList] 
                0x00000001d5c3e008 (    0x18) set_encode_map()::sModeEncode [NameNList, MangledNameNList, NList] 
                0x00000001d5c3e020 (     0x8) guard variable for set_encode_map()::sModeEncode [NameNList, MangledNameNList, NList] 
                0x00000001d5c3e028 (     0x8) set_bpc_map()::sModeBPC [NameNList, MangledNameNList, NList] 
                0x00000001d5c3e030 (     0x8) guard variable for set_bpc_map()::sModeBPC [NameNList, MangledNameNList, NList] 
                0x00000001d5c3e038 (    0x18) reference temporary for set_bpc_map()::sModeBPC [NameNList, MangledNameNList, NList] 
                0x00000001d5c3e050 (    0x18) set_color_map()::sModeColor [NameNList, MangledNameNList, NList] 
                0x00000001d5c3e068 (     0x8) guard variable for set_color_map()::sModeColor [NameNList, MangledNameNList, NList] 
                0x00000001d5c3e070 (    0x18) set_DynRange_map()::sModeDynRange [NameNList, MangledNameNList, NList] 
                0x00000001d5c3e088 (     0x8) guard variable for set_DynRange_map()::sModeDynRange [NameNList, MangledNameNList, NList] 
                0x00000001d5c3e090 (    0x18) range_encode_map()::sSupportEncode [NameNList, MangledNameNList, NList] 
                0x00000001d5c3e0a8 (     0x8) guard variable for range_encode_map()::sSupportEncode [NameNList, MangledNameNList, NList] 
                0x00000001d5c3e0b0 (     0x8) range_bpc_map()::sSupportBPC [NameNList, MangledNameNList, NList] 
                0x00000001d5c3e0b8 (     0x8) guard variable for range_bpc_map()::sSupportBPC [NameNList, MangledNameNList, NList] 
                0x00000001d5c3e0c0 (    0x18) reference temporary for range_bpc_map()::sSupportBPC [NameNList, MangledNameNList, NList] 
                0x00000001d5c3e0d8 (    0x18) range_color_map()::sSupportColor [NameNList, MangledNameNList, NList] 
                0x00000001d5c3e0f0 (     0x8) guard variable for range_color_map()::sSupportColor [NameNList, MangledNameNList, NList] 
                0x00000001d5c3e0f8 (    0x18) range_DynRange_map()::sSupportDynRange [NameNList, MangledNameNList, NList] 
                0x00000001d5c3e110 (     0x8) guard variable for range_DynRange_map()::sSupportDynRange [NameNList, MangledNameNList, NList] 
                0x00000001d5c3e118 (    0x18) encodeDepth_to_support_map()::sMapEncodeToSupportedBitsAndColor [NameNList, MangledNameNList, NList] 
                0x00000001d5c3e130 (     0x8) guard variable for encodeDepth_to_support_map()::sMapEncodeToSupportedBitsAndColor [NameNList, MangledNameNList, NList] 
                0x00000001d5c3e138 (    0x18) colorencode_to_CTA_map()::sMapColorEncodeToCTAMask [NameNList, MangledNameNList, NList] 
                0x00000001d5c3e150 (     0x8) guard variable for colorencode_to_CTA_map()::sMapColorEncodeToCTAMask [NameNList, MangledNameNList, NList] 
                0x00000001d5c3e158 (     0x8) DSCTargetBPPFraction(IOFBConnect*, IOFBDisplayModeDescription*)::dscTargetBPP [NameNList, MangledNameNList, NList] 
                0x00000001d5c3e160 (     0x8) guard variable for DSCTargetBPPFraction(IOFBConnect*, IOFBDisplayModeDescription*)::dscTargetBPP [NameNList, MangledNameNList, NList] 
                0x00000001d5c3e168 (     0x8) gIOGraphicsProperties [NameNList, MangledNameNList, NList] 
                0x00000001d5c3e170 (   0x100) gIODisplayBoardID [NameNList, MangledNameNList, NList] 
                0x00000001d5c3e270 (    0x18) getOverridesPaths()::overridesPaths [NameNList, MangledNameNList, NList] 
                0x00000001d5c3e288 (     0x8) guard variable for getOverridesPaths()::overridesPaths [NameNList, MangledNameNList, NList] 
                0x00000001d5c3e290 (     0x8) vfbPrivList [NameNList, MangledNameNList, NList] 
                0x00000001d5c3e298 (     0x8) gAirPlayConnection [NameNList, MangledNameNList, NList] 
                0x00000001d5c3e2a0 (     0x4) get_hid_service_connection()::s_io_connection [NameNList, MangledNameNList, NList] 
                0x00000001d5c3e2a4 (     0x4) perapp_airdisplay_owner [NameNList, MangledNameNList, NList] 
                0x00000001d5c3e2a8 (     0x8) use_colorsync_display_sevices()::status [NameNList, MangledNameNList, NList] 
                0x00000001d5c3e2b0 (    0x10) use_colorsync_display_sevices()::predicate [NameNList, MangledNameNList, NList] 
                0x00000001d5c3e2c0 (     0x8) whitePointMode [NameNList, MangledNameNList, NList] 
                0x00000001d5c3e2c8 (     0x8) CoreDisplay_SetWhitePoint::AMBDSetWhitePointMode [NameNList, MangledNameNList, NList] 
                0x00000001d5c3e2d0 (     0x8) CoreDisplay_SetWhitePoint::AMBDSetWhitePointxy [NameNList, MangledNameNList, NList] 
                0x00000001d5c3e2d8 (     0x8) CoreDisplay_SetWhitePoint::predicate [NameNList, MangledNameNList, NList] 
                0x00000001d5c3e2e0 (     0x8) CoreDisplay_SetWhitePointWithDuration_Server::AMBDSetWhitePointMode [NameNList, MangledNameNList, NList] 
                0x00000001d5c3e2e8 (     0x8) CoreDisplay_SetWhitePointWithDuration_Server::AMBDSetWhitePointxy [NameNList, MangledNameNList, NList] 
                0x00000001d5c3e2f0 (     0x8) CoreDisplay_SetWhitePointWithDuration_Server::AMBDSetWhitePointxyWithDuration [NameNList, MangledNameNList, NList] 
                0x00000001d5c3e2f8 (     0x8) CoreDisplay_SetWhitePointWithDuration_Server::predicate [NameNList, MangledNameNList, NList] 
                0x00000001d5c3e300 (    0x10) whitePoint [NameNList, MangledNameNList, NList] 
                0x00000001d5c3e310 (     0x8) CoreDisplay_DisableCustomWhitePoint_Server::AMBDSetNativeWhitePoint [NameNList, MangledNameNList, NList] 
                0x00000001d5c3e318 (     0x8) CoreDisplay_DisableCustomWhitePoint_Server::predicate [NameNList, MangledNameNList, NList] 
                0x00000001d5c3e320 (     0x8) ioSurfaceReadyForUseCallback [NameNList, MangledNameNList, NList] 
                0x00000001d5c3e328 (     0x8) ioSurfaceReadyForUseCallbackContext [NameNList, MangledNameNList, NList] 
                0x00000001d5c3e330 (     0x8) CoreDisplay::GetRealtimeDisplayInfoMemory()::pRealtimeDisplayInfo [NameNList, MangledNameNList, NList] 
                0x00000001d5c3e338 (     0x8) CoreDisplay::GetRealtimeDisplayInfoMemory()::onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d5c3e340 (     0x8) CoreDisplay::Display::TransactionStateString()::IOPresentmentGetIOAccelDisplayPipeTriageStringFunc [NameNList, MangledNameNList, NList] 
                0x00000001d5c3e348 (    0x18) CoreDisplay::Display::TransactionStateString()::predicate [NameNList, MangledNameNList, NList] 
                0x00000001d5c3e360 (    0x18) CoreDisplay::HRCalc(bool, bool, bool, bool, std::__1::optional<HDR10MetaData>, std::__1::optional<DoViMetaData>, std::__1::optional<CoreDisplay::DisplayPreset>, __CFDictionary const*, float, float, CoreDisplay::DisplayOutputMode, bool, std::__1::optional<float>, std::__1::optional<float>, std::__1::optional<float>)::headRoomMap [NameNList, MangledNameNList, NList] 
                0x00000001d5c3e378 (     0x8) guard variable for CoreDisplay::HRCalc(bool, bool, bool, bool, std::__1::optional<HDR10MetaData>, std::__1::optional<DoViMetaData>, std::__1::optional<CoreDisplay::DisplayPreset>, __CFDictionary const*, float, float, CoreDisplay::DisplayOutputMode, bool, std::__1::optional<float>, std::__1::optional<float>, std::__1::optional<float>)::headRoomMap [NameNList, MangledNameNList, NList] 
                0x00000001d5c3e380 (     0x8) guard variable for CoreDisplay::Display::SetEDRScaleFactor(double)::edrScaleMutex [NameNList, MangledNameNList, NList] 
                0x00000001d5c3e388 (     0x8) CoreDisplay::Display::SetBacklightBrightness(double)::PLShouldLogRegisteredEventFunc [NameNList, MangledNameNList, NList] 
                0x00000001d5c3e390 (     0x8) CoreDisplay::Display::SetBacklightBrightness(double)::PLLogRegisteredEventFilterByIntervalFunc [NameNList, MangledNameNList, NList] 
                0x00000001d5c3e398 (     0x8) CoreDisplay::Display::SetBacklightBrightness(double)::plSerialQueue [NameNList, MangledNameNList, NList] 
                0x00000001d5c3e3a0 (     0x8) CoreDisplay::Display::SetBacklightBrightness(double)::predicate [NameNList, MangledNameNList, NList] 
                0x00000001d5c3e3a8 (    0x18) CoreDisplay::Display::GetMasteringInfo()::dynamicRanking [NameNList, MangledNameNList, NList] 
                0x00000001d5c3e3c0 (     0x8) guard variable for CoreDisplay::Display::GetMasteringInfo()::dynamicRanking [NameNList, MangledNameNList, NList] 
                0x00000001d5c3e3c8 (     0x8) CoreDisplay::Display::OutputTransferCurveMapValue(float) const::disable_apple_external_sRGB_22 [NameNList, MangledNameNList, NList] 
                0x00000001d5c3e3d0 (     0x8) CoreDisplay::Display::OutputTransferCurveMapValue(float) const::once [NameNList, MangledNameNList, NList] 
                0x00000001d5c3e3d8 (     0x8) SkyLightLibraryCore(char**)::frameworkLibrary (.0.1023) [NameNList, MangledNameNList, NList] 
                0x00000001d5c3e3e0 (     0x8) getSLSCopyDisplayInfoDictionarySymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c3e3e8 (     0x8) getSLSDisplayGetCurrentHeadroomSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c3e3f0 (     0x8) GetLatestRealtimeDisplayInfoMemory()::realtimeDisplayInfoShemPort [NameNList, MangledNameNList, NList] 
                0x00000001d5c3e3f8 (     0x8) GetLatestRealtimeDisplayInfoMemory()::pRealtimeDisplayInfoMemoryShmem [NameNList, MangledNameNList, NList] 
                0x00000001d5c3e400 (     0x8) guard variable for GetLatestRealtimeDisplayInfoMemory()::shmemMappingMutex [NameNList, MangledNameNList, NList] 
                0x00000001d5c3e408 (  0x1408) GetLatestRealtimeDisplayInfoMemory()::realtimeDisplayInfoMemoryCopy [NameNList, MangledNameNList, NList] 
                0x00000001d5c3f810 (     0x8) getSLSGetRealtimeDisplayInfoShmemSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c3f818 (     0x8) getSLSDisplayGetReferenceHeadroomSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c3f820 (     0x8) getSLSDisplayGetPotentialHeadroomSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c3f828 (     0x8) getSLSDisplayIsThermallyLimitedSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c3f830 (     0x8) getSLSDisplaySupportsHDRModeSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c3f838 (     0x8) getSLSDisplayIsHDRModeEnabledSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c3f840 (     0x8) getSLSDisplaySetHDRModeEnabledSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c3f848 (     0x8) getSLSDisplayGetPreferHDR10SymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c3f850 (     0x8) CoreDisplay::getsRGB()::ksRGBColorSpace [NameNList, MangledNameNList, NList] 
                0x00000001d5c3f858 (     0x8) guard variable for CoreDisplay::getsRGB()::ksRGBColorSpace [NameNList, MangledNameNList, NList] 
                0x00000001d5c3f860 (     0x8) CoreDisplay::UpdateSystemGammaStateInAMBD(unsigned int, bool, bool, float)::AMBDsetCompensationState [NameNList, MangledNameNList, NList] 
                0x00000001d5c3f868 (     0x8) CoreDisplay::UpdateSystemGammaStateInAMBD(unsigned int, bool, bool, float)::AMBDsetSystemGammaMode [NameNList, MangledNameNList, NList] 
                0x00000001d5c3f870 (     0x8) CoreDisplay::UpdateSystemGammaStateInAMBD(unsigned int, bool, bool, float)::AMBDSetGamma [NameNList, MangledNameNList, NList] 
                0x00000001d5c3f878 (     0x8) CoreDisplay::UpdateSystemGammaStateInAMBD(unsigned int, bool, bool, float)::predicate [NameNList, MangledNameNList, NList] 
                0x00000001d5c3f880 (     0x8) CoreDisplay::GetTimebaseInfo()::predicate [NameNList, MangledNameNList, NList] 
                0x00000001d5c3f888 (     0x8) CoreDisplay::GetTimebaseInfo()::timebaseInfo [NameNList, MangledNameNList, NList] 
                0x00000001d5c3f890 (     0x8) agdc_service [NameNList, MangledNameNList, NList] 
                0x00000001d5c3f898 (     0x8) ig_agdc_service [NameNList, MangledNameNList, NList] 
                0x00000001d5c3f8a0 (     0x8) hwOffline [NameNList, MangledNameNList, NList] 
                0x00000001d5c3f8a8 (     0x8) onWakeupOpts [NameNList, MangledNameNList, NList] 
                0x00000001d5c3f8b0 (     0x1) gDisplayConfigurationInProgress [NameNList, MangledNameNList, NList] 
                0x00000001d5c3f8b1 (     0x7) gDisplayConfigurationPending [NameNList, MangledNameNList, NList] 
                0x00000001d5c3f8b8 (    0x30) gOpts [NameNList, MangledNameNList, NList] 
                0x00000001d5c3f8e8 (     0x4) should_run_reconfigureDisplaysOnWakeup [NameNList, MangledNameNList, NList] 
                0x00000001d5c3f8ec (     0x8) CGXRestoreDisplayConfiguration::restoreArgs [NameNList, MangledNameNList, NList] 
                0x00000001d5c3f8f4 (     0x1) gRestoreDisplayConfigurationInProgress [NameNList, MangledNameNList, NList] 
                0x00000001d5c3f8f5 (     0x1) gRestoreNewDeviceSetInProgress [NameNList, MangledNameNList, NList] 
                0x00000001d5c3f8f6 (     0x2) gRestorePending [NameNList, MangledNameNList, NList] 
                0x00000001d5c3f8f8 (     0x4) sHWChangeCounter [NameNList, MangledNameNList, NList] 
                0x00000001d5c3f8fc (     0x1) gAcceleratorBackedModeForcingSWCursor [NameNList, MangledNameNList, NList] 
                0x00000001d5c3f8fd (     0x1) should_run_update_config_after_deferral [NameNList, MangledNameNList, NList] 
                0x00000001d5c3f8fe (     0x1) gSetupAndReconfigureDisplaysInProgress [NameNList, MangledNameNList, NList] 
                0x00000001d5c3f8ff (     0x1) should_run_reconfigureDisplayHWOffline [NameNList, MangledNameNList, NList] 
                0x00000001d5c3f900 (     0x8) SkyLightLibraryCore(char**)::frameworkLibrary (.0.2184) [NameNList, MangledNameNList, NList] 
                0x00000001d5c3f908 (     0x8) getSLSDisplayGetPresetInfoSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c3f910 (     0x8) getSLSDisplayGetPresetCountSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c3f918 (     0x8) getSLSDisplayGetFactoryDefaultPresetIndexSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c3f920 (     0x8) getSLSDisplayGetActivePresetIndexSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c3f928 (     0x8) getSLSDisplaySetActivePresetIndexSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c3f930 (     0x8) getSLSDisplayIsPresetValidSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c3f938 (     0x8) getSLSDisplayIsPresetWritableSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c3f940 (     0x8) getSLSDisplayCopyPresetUniqueIDSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c3f948 (     0x8) getSLSDisplayCopyPresetSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c3f950 (     0x8) getSLSDisplaySetPresetSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c3f958 (     0x8) getSLSDisplayCopyPresetDataSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c3f960 (     0x8) getSLSDisplaySetPresetDataSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c3f968 (     0x8) getSLSDisplayResetPresetSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c3f970 (     0x8) getSLSDisplayGetLuminanceCorrectionFactorSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c3f978 (     0x8) getSLSDisplayGetUserAdjustmentLuminanceCorrectionFactorSymbolLoc()::ptr (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c3f980 (     0x8) getSLSDisplayFactoryResetSymbolLoc()::ptr (.0.2268) [NameNList, MangledNameNList, NList] 
                0x00000001d5c3f988 (     0x8) getSLDisplayPresetDeviceClass()::softClass (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c3f990 (     0x8) CoreDisplay::GetPresetDeviceManager()::pdm [NameNList, MangledNameNList, NList] 
                0x00000001d5c3f998 (     0x8) CoreDisplay::GetPresetDeviceManager()::onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d5c3f9a0 (     0x8) getSLDisplayPresetDeviceManagerClass()::softClass (.0) [NameNList, MangledNameNList, NList] 
                0x00000001d5c3f9a8 (     0x8) CoreDisplay::GetPresetQueue()::q [NameNList, MangledNameNList, NList] 
                0x00000001d5c3f9b0 (     0x8) guard variable for CoreDisplay::GetPresetQueue()::q [NameNList, MangledNameNList, NList] 
                0x00000001d5c3f9b8 (    0x28) CoreDisplay::AcceleratorFBCounts()::acceleratorFBCounts [NameNList, MangledNameNList, NList] 
                0x00000001d5c3f9e0 (     0x8) guard variable for CoreDisplay::AcceleratorFBCounts()::acceleratorFBCounts [NameNList, MangledNameNList, NList] 
                0x00000001d5c3f9e8 (    0x18) update_cursor_data(CGXDisplayDevice*, CursorBitmap const*, bool)::AlphaLUT [NameNList, MangledNameNList, NList] 
                0x00000001d5c3fa00 (     0x8) guard variable for update_cursor_data(CGXDisplayDevice*, CursorBitmap const*, bool)::AlphaLUT [NameNList, MangledNameNList, NList] 
                0x00000001d5c3fa08 (    0x18) SRGBToLinearFloat(unsigned char)::SRGBToLinearLUT [NameNList, MangledNameNList, NList] 
                0x00000001d5c3fa20 (     0x8) guard variable for SRGBToLinearFloat(unsigned char)::SRGBToLinearLUT [NameNList, MangledNameNList, NList] 
                0x00000001d5c3fa28 (     0x8) ColorSyncUtilsUpdateDisplayProfiles::'block-literal'::f [NameNList, MangledNameNList, NList] 
                0x00000001d5c3fa30 (     0x8) ColorSyncUtilsUpdateDisplayProfiles::'block-literal'::predicate [NameNList, MangledNameNList, NList] 
                0x00000001d5c3fa38 (     0x8) AmbientDisplayUtilsTerminateService::'block-literal'::f [NameNList, MangledNameNList, NList] 
                0x00000001d5c3fa40 (     0x8) AmbientDisplayUtilsTerminateService::'block-literal'::predicate [NameNList, MangledNameNList, NList] 
                0x00000001d5c3fa48 (     0x8) subsidiary_services_queue()::queue [NameNList, MangledNameNList, NList] 
                0x00000001d5c3fa50 (     0x8) subsidiary_services_queue()::predicate [NameNList, MangledNameNList, NList] 
                0x00000001d5c3fa58 (     0x8) load_colorsync_dyld()::handle [NameNList, MangledNameNList, NList] 
                0x00000001d5c3fa60 (     0x8) load_colorsync_dyld()::once [NameNList, MangledNameNList, NList] 
                0x00000001d5c3fa68 (     0x8) ColorSyncUtilsUpdateDisplayProfilesCallback(void*, double)::f [NameNList, MangledNameNList, NList] 
                0x00000001d5c3fa70 (     0x8) ColorSyncUtilsUpdateDisplayProfilesCallback(void*, double)::predicate [NameNList, MangledNameNList, NList] 
                0x00000001d5c3fa78 (     0x8) ColorSyncUtilsUpdateDisplayProfilesCallback(void*, double)::f [NameNList, MangledNameNList, NList] 
                0x00000001d5c3fa80 (     0x8) ColorSyncUtilsUpdateDisplayProfilesCallback(void*, double)::predicate [NameNList, MangledNameNList, NList] 
                0x00000001d5c3fa88 (     0x8) ColorSyncUtilsUpdateDisplayProfilesCallback(void*, double)::f [NameNList, MangledNameNList, NList] 
                0x00000001d5c3fa90 (     0x8) ColorSyncUtilsUpdateDisplayProfilesCallback(void*, double)::predicate [NameNList, MangledNameNList, NList] 
                0x00000001d5c3fa98 (     0x8) ColorSyncUtilsUpdateDisplayProfilesCallback(void*, double)::f [NameNList, MangledNameNList, NList] 
                0x00000001d5c3faa0 (     0x8) ColorSyncUtilsUpdateDisplayProfilesCallback(void*, double)::predicate [NameNList, MangledNameNList, NList] 
                0x00000001d5c3faa8 (     0x8) ColorSyncUtilsUpdateDisplayProfilesCallback(void*, double)::f [NameNList, MangledNameNList, NList] 
                0x00000001d5c3fab0 (     0x8) ColorSyncUtilsUpdateDisplayProfilesCallback(void*, double)::predicate [NameNList, MangledNameNList, NList] 
                0x00000001d5c3fab8 (     0x8) ColorSyncUtilsUpdateDisplayProfilesCallback(void*, double)::'block-literal'::f [NameNList, MangledNameNList, NList] 
                0x00000001d5c3fac0 (     0x8) ColorSyncUtilsUpdateDisplayProfilesCallback(void*, double)::'block-literal'::predicate [NameNList, MangledNameNList, NList] 
                0x00000001d5c3fac8 (     0x8) load_skylight_dyld()::handle [NameNList, MangledNameNList, NList] 
                0x00000001d5c3fad0 (     0x8) load_skylight_dyld()::once [NameNList, MangledNameNList, NList] 
                0x00000001d5c3fad8 (     0x8) get_profile_name(ColorSyncProfile const*, char*)::f [NameNList, MangledNameNList, NList] 
                0x00000001d5c3fae0 (     0x8) get_profile_name(ColorSyncProfile const*, char*)::predicate [NameNList, MangledNameNList, NList] 
                0x00000001d5c3fae8 (     0x8) load_ambient_display_dyld()::handle [NameNList, MangledNameNList, NList] 
                0x00000001d5c3faf0 (     0x8) load_ambient_display_dyld()::once [NameNList, MangledNameNList, NList] 
                0x00000001d5c3faf8 (     0x8) gLog (.2655) [NameNList, MangledNameNList, NList] 
                0x00000001d5c3fb00 (     0x8) init_once()::onceToken (.2668) [NameNList, MangledNameNList, NList] 
                0x00000001d5c3fb08 (     0x8) displayInfoFromOptions(NSDictionary*, bool)::whitelistedKeys [NameNList, MangledNameNList, NList] 
                0x00000001d5c3fb10 (     0x8) displayInfoFromOptions(NSDictionary*, bool)::defaultDisplayInfo [NameNList, MangledNameNList, NList] 
                0x00000001d5c3fb18 (     0x8) displayInfoFromOptions(NSDictionary*, bool)::onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d5c3fb20 (    0x48) CGXMessageTraceMux::mux_stats [NameNList, MangledNameNList, NList] 
                0x00000001d5c3fb68 (     0x1) CGXMessageTraceMux::mt_mux_init [NameNList, MangledNameNList, NList] 
                0x00000001d5c3fb69 (     0x3) CGXMessageTraceMux::mt_mux_busted [NameNList, MangledNameNList, NList] 
                0x00000001d5c3fb6c (     0x4) CGXMessageTraceMux::agc_svc [NameNList, MangledNameNList, NList] 
                0x00000001d5c3fb70 (     0x4) CGXMessageTraceMux::agc_data_port [NameNList, MangledNameNList, NList] 
                0x00000001d5c3fb74 (     0x4) should_log_mux [NameNList, MangledNameNList, NList] 
                0x00000001d5c3fb78 (   0x400) device_state_change_table [NameNList, MangledNameNList, NList] 
                0x00000001d5c3ff78 (     0x8) display_stats (.1) [NameNList, MangledNameNList, NList] 
                0x00000001d5c3ff80 (     0x8) display_stats (.3) [NameNList, MangledNameNList, NList] 
                0x00000001d5c3ff88 (     0x8) display_stats (.4) [NameNList, MangledNameNList, NList] 
                0x00000001d5c3ff90 (     0x8) display_stats (.5) [NameNList, MangledNameNList, NList] 
                0x00000001d5c3ff98 (     0x1) mt_displays_init [NameNList, MangledNameNList, NList] 
                0x00000001d5c3ff99 (     0x7) mt_airplay_inited [NameNList, MangledNameNList, NList] 
                0x00000001d5c3ffa0 (    0x28) airplay_stats [NameNList, MangledNameNList, NList] 
                0x00000001d5c3ffc8 (     0x8) should_log_display [NameNList, MangledNameNList, NList] 
                0x00000001d5c3ffd0 (     0x8) CGXMessageTraceAppFlushes::flush_stats [NameNList, MangledNameNList, NList] 
                0x00000001d5c3ffd8 (     0x8) CGXMessageTraceAppFlushes::mt_flush_init [NameNList, MangledNameNList, NList] 
                0x00000001d5c3ffe0 (     0x8) bundle_cache [NameNList, MangledNameNList, NList] 
                0x00000001d5c3ffe8 (     0x8) CGXCreateBundleInfoForPid(int, __CFString const**, __CFString const**, __CFString const**)::items [NameNList, MangledNameNList, NList] 
                0x00000001d5c3fff0 (     0x8) check_time_of_day()::initialized_timeout [NameNList, MangledNameNList, NList] 
                0x00000001d5c3fff8 (     0x8) check_time_of_day()::'block-literal'::timer [NameNList, MangledNameNList, NList] 
                0x00000001d5c40000 (     0x8) check_time_of_day()::'block-literal'::'block-literal'::last_time [NameNList, MangledNameNList, NList] 
                0x00000001d5c40008 (  0x1000) CoreDisplay::GPUController::GPUController()::'block-literal'::buf [NameNList, MangledNameNList, NList] 
                0x00000001d5c41008 (     0x8) CoreDisplay::useGPUWrangler [NameNList, MangledNameNList, NList] 
                0x00000001d5c41010 (     0x8) CoreDisplay::GPUController::ProcessGPUAdded(__GPUWranglerGPU*, GPUWrangler_Event_t*)::GPUWranglerGPUSetAttributeFuncPtr [NameNList, MangledNameNList, NList] 
                0x00000001d5c41018 (     0x8) CoreDisplay::GPUController::ProcessGPUAdded(__GPUWranglerGPU*, GPUWrangler_Event_t*)::predicate [NameNList, MangledNameNList, NList] 
                0x00000001d5c41020 (    0x70) get_display_pipe_vtable()::vtable [NameNList, MangledNameNList, NList] 
                0x00000001d5c41090 (     0x8) get_display_pipe_vtable()::vtable_ptr [NameNList, MangledNameNList, NList] 
                0x00000001d5c41098 (     0x8) get_display_pipe_vtable()::initialized [NameNList, MangledNameNList, NList] 
                0x00000001d5c410a0 (     0x8) CGSGetDisplayStateNull()::CGSDisplayStateNull [NameNList, MangledNameNList, NList] 
                0x00000001d5c410a8 (     0x8) guard variable for CGSGetDisplayStateNull()::CGSDisplayStateNull [NameNList, MangledNameNList, NList] 
                0x00000001d5c410b0 (     0x8) CoreDisplay::IOBacklightWrapper::IOBacklightWrapper(unsigned int)::sBM [NameNList, MangledNameNList, NList] 
                0x00000001d5c410b8 (     0x8) guard variable for CoreDisplay::IOBacklightWrapper::IOBacklightWrapper(unsigned int)::sBM [NameNList, MangledNameNList, NList] 
                0x00000001d5c410c0 (     0x8) CoreDisplay::EDRDisplay::EDRDisplay(float, float, float, bool, bool)::$_1::operator()(float, float, float) const::normalizer [NameNList, MangledNameNList, NList] 
                0x00000001d5c410c8 (     0x8) guard variable for CoreDisplay::EDRDisplay::EDRDisplay(float, float, float, bool, bool)::$_1::operator()(float, float, float) const::normalizer [NameNList, MangledNameNList, NList] 
                0x00000001d5c410d0 (     0x8) gCGXShmemAllocatorLock [NameNList, MangledNameNList, NList] 
                0x00000001d5c410d8 (     0x8) gCGXShmemAllocatorList [NameNList, MangledNameNList, NList] 
                0x00000001d5c410e0 (     0x8) CGXDisplayVisualBell::gCGXLastVisualBellStartTime [NameNList, MangledNameNList, NList] 
                0x00000001d5c410e8 (     0x4) gCGXVisualBellIsRunning [NameNList, MangledNameNList, NList] 
                0x00000001d5c410ec (     0x4) gCGXVisualBellReservation [NameNList, MangledNameNList, NList] 
                0x00000001d5c410f0 (     0x8) gCGXFadeState [NameNList, MangledNameNList, NList] 
                0x00000001d5c410f8 (     0x8) SLSRunningOnInstallerDisk::isNormalConfig [NameNList, MangledNameNList, NList] 
                0x00000001d5c41100 (    0x10) mpPrivList [NameNList, MangledNameNList, NList] 
                0x00000001d5c41110 (     0x8) gGPUController [NameNList, MangledNameNList, NList] 
                0x00000001d5c41118 (     0x8) isSkylakeOrLater::isSKLOrLater [NameNList, MangledNameNList, NList] 
                0x00000001d5c41120 (    0x18) isSkylakeOrLater::pred [NameNList, MangledNameNList, NList] 
                0x00000001d5c41138 (     0x8) isMacPro7::mp7 [NameNList, MangledNameNList, NList] 
                0x00000001d5c41140 (     0x8) isMacPro7::once [NameNList, MangledNameNList, NList] 
                0x00000001d5c41148 (     0x8) isSafeBoot::safeBoot [NameNList, MangledNameNList, NList] 
                0x00000001d5c41150 (     0x8) isSafeBoot::once [NameNList, MangledNameNList, NList] 
                0x00000001d5c41158 (     0x4) gSetFramebufferActiveOnUpdate [NameNList, MangledNameNList, NList] 
                0x00000001d5c4115c (     0x4) gMPMuxActivateUnitMask [NameNList, MangledNameNList, NList] 
                0x00000001d5c41160 (     0x4) gMPMuxActivateState [NameNList, MangledNameNList, NList] 
                0x00000001d5c41164 (     0x4) removeFramebufferPortsActiveCount [NameNList, MangledNameNList, NList] 
                0x00000001d5c41168 (     0x8) gMPMuxAcknowledge [NameNList, MangledNameNList, NList] 
                0x00000001d5c41170 (     0x8) CGXSetDisplayPolicyEnabled::onceOnBoot [NameNList, MangledNameNList, NList] 
                0x00000001d5c41178 (   0x400) initializationFailureBuffer [NameNList, MangledNameNList, NList] 
                0x00000001d5c41578 (     0x1) kCGSEnableDisplayAcceleration [NameNList, MangledNameNList, NList] 
                0x00000001d5c41579 (     0x1) kCGSEnableDisplayAcceleration2D [NameNList, MangledNameNList, NList] 
                0x00000001d5c4157a (     0xe) kCGSEnableDisplayAccelerationGL [NameNList, MangledNameNList, NList] 
                0x00000001d5c41588 (     0x8) intraVBLWaitCoefficient [NameNList, MangledNameNList, NList] 
                0x00000001d5c41590 (    0x28) GPUWranglerDevices()::gpuWranglerDevices [NameNList, MangledNameNList, NList] 
                0x00000001d5c415b8 (     0x8) guard variable for GPUWranglerDevices()::gpuWranglerDevices [NameNList, MangledNameNList, NList] 
                0x00000001d5c415c0 (    0x28) HasDeviceSetChanged()::previousDeviceSet [NameNList, MangledNameNList, NList] 
                0x00000001d5c415e8 (     0x8) guard variable for HasDeviceSetChanged()::previousDeviceSet [NameNList, MangledNameNList, NList] 
                0x00000001d5c415f0 (     0x8) isBroadwellOrLater()::isBDWOrLater [NameNList, MangledNameNList, NList] 
                0x00000001d5c415f8 (     0x8) isBroadwellOrLater()::pred [NameNList, MangledNameNList, NList] 
                0x00000001d5c41600 (     0x8) isSkylakeMux()::sklMux [NameNList, MangledNameNList, NList] 
                0x00000001d5c41608 (     0x8) isSkylakeMux()::once [NameNList, MangledNameNList, NList] 
                0x00000001d5c41610 (     0x8) isSkylakeMacBook()::sklmb [NameNList, MangledNameNList, NList] 
                0x00000001d5c41618 (     0x8) isSkylakeMacBook()::once [NameNList, MangledNameNList, NList] 
                0x00000001d5c41620 (     0x8) isMuxSystem()::isMux [NameNList, MangledNameNList, NList] 
                0x00000001d5c41628 (     0x8) isMuxSystem()::pred [NameNList, MangledNameNList, NList] 
                0x00000001d5c41630 (     0x8) isMobileSystem()::isMobile [NameNList, MangledNameNList, NList] 
                0x00000001d5c41638 (     0x8) isMobileSystem()::pred [NameNList, MangledNameNList, NList] 
                0x00000001d5c41640 (    0x20) gUniqueIDBitfield [NameNList, MangledNameNList, NList] 
                0x00000001d5c41660 (     0x8) gSleepingFBCount [NameNList, MangledNameNList, NList] 
                0x00000001d5c41668 (     0x8) machine_is_hidpi()::pred [NameNList, MangledNameNList, NList] 
                0x00000001d5c41670 (     0x1) machine_is_hidpi()::gMachineIsHiDPI [NameNList, MangledNameNList, NList] 
                0x00000001d5c41671 (     0x7) gCGXPrepareForModeChange [NameNList, MangledNameNList, NList] 
                0x00000001d5c41678 (     0x8) gMPDeviceMirroringInfoList [NameNList, MangledNameNList, NList] 
                0x00000001d5c41680 (     0x8) MPGetNextWakeupTime(CGXDisplayDevice*)::scale [NameNList, MangledNameNList, NList] 
                0x00000001d5c41688 (     0x8) gGlobalSurfaceCount [NameNList, MangledNameNList, NList] 
                0x00000001d5c41690 (     0x8) shmemListLock [NameNList, MangledNameNList, NList] 
                0x00000001d5c41698 (    0x80) shmemList [NameNList, MangledNameNList, NList] 
                0x00000001d5c41718 (     0x8) CGSMinSchedulerQuantum()::gMinQuantum [NameNList, MangledNameNList, NList] 
                0x00000001d5c41720 (     0x8) timestamp_scale()::predicate [NameNList, MangledNameNList, NList] 
                0x00000001d5c41728 (     0x8) timestamp_scale()::scale [NameNList, MangledNameNList, NList] 
                0x00000001d5c41730 (     0x8) timeout_reached(unsigned long long, double)::predicate [NameNList, MangledNameNList, NList] 
                0x00000001d5c41738 (     0x8) timeout_reached(unsigned long long, double)::time_scaler [NameNList, MangledNameNList, NList] 
                0x00000001d5c41740 (     0x8) gCGXDisplayConfigFadeParameters [NameNList, MangledNameNList, NList] 
                0x00000001d5c41748 (     0x1) fullScreenAppDetectorProc::gMenuBarHidden [NameNList, MangledNameNList, NList] 
                0x00000001d5c41749 (     0x1) fullScreenAppDetectorProc::gFullScreenAppRunning [NameNList, MangledNameNList, NList] 
                0x00000001d5c4174a (     0x1) fullScreenAppDetectorProc::gDisplaysAwake [NameNList, MangledNameNList, NList] 
                0x00000001d5c4174b (     0x1) fullScreenAppDetectorProc::gDisplaysAreCaptured [NameNList, MangledNameNList, NList] 
                0x00000001d5c4174c (     0x4) gDisplaySetSwitchingInProgress [NameNList, MangledNameNList, NList] 
                0x00000001d5c41750 (     0x8) CoreDisplay::DisplayPipe::m_globalFrameCount [NameNList, MangledNameNList, NList] 
                0x00000001d5c41758 (    0x18) CoreDisplay::DisplayPipe::RunFullDisplayPipe(UseCountProxy<CoreDisplay::DisplaySurface*>)::origin [NameNList, MangledNameNList, NList] 
                0x00000001d5c41770 (    0x18) guard variable for CoreDisplay::DisplayPipe::RunFullDisplayPipe(UseCountProxy<CoreDisplay::DisplaySurface*>)::origin [NameNList, MangledNameNList, NList] 
                0x00000001d5c41788 (     0x1) gHeadroomRequested [NameNList, MangledNameNList, NList] 
                0x00000001d5c41789 (     0x3) gEnableEDR [NameNList, MangledNameNList, NList] 
                0x00000001d5c4178c (     0x8) CGSLogTimeline::timebase_info [NameNList, MangledNameNList, NList] 
                0x00000001d5c41794 (     0x4) CGSLogTimeline::initialized [NameNList, MangledNameNList, NList] 
                0x00000001d5c41798 (     0x8) CGSPrintableCString::buffer [NameNList, MangledNameNList, NList] 
                0x00000001d5c417a0 (     0x8) logger_list [NameNList, MangledNameNList, NList] 
                0x00000001d5c417a8 (     0x8) (anonymous namespace)::get_audit_token_self()::result [NameNList, MangledNameNList, NList] 
                0x00000001d5c417b0 (     0x8) (anonymous namespace)::get_audit_token_self()::once [NameNList, MangledNameNList, NList] 
                0x00000001d5c417b8 (     0x8) (anonymous namespace)::get_server_dispatch_queue()::queue [NameNList, MangledNameNList, NList] 
                0x00000001d5c417c0 (     0x8) guard variable for (anonymous namespace)::get_server_dispatch_queue()::queue [NameNList, MangledNameNList, NList] 
                0x00000001d5c417c8 (     0x8) (anonymous namespace)::CDNotificationContext()::cdNotificationContext [NameNList, MangledNameNList, NList] 
                0x00000001d5c417d0 (     0x8) guard variable for (anonymous namespace)::CDNotificationContext()::cdNotificationContext [NameNList, MangledNameNList, NList] 
                0x00000001d5c417d8 (     0x8) (anonymous namespace)::setup_remote_port(char const*, unsigned int*, int)::predicate [NameNList, MangledNameNList, NList] 
                0x00000001d5c417e0 (     0x8) (anonymous namespace)::setup_remote_port(char const*, unsigned int*, int)::timebase_info [NameNList, MangledNameNList, NList] 
                0x00000001d5c417e8 (     0x8) guard variable for (anonymous namespace)::setup_remote_port(char const*, unsigned int*, int)::time_to_retry [NameNList, MangledNameNList, NList] 
                0x00000001d5c417f0 (     0x8) guard variable for (anonymous namespace)::setup_remote_port(char const*, unsigned int*, int)::time_to_wait [NameNList, MangledNameNList, NList] 
                0x00000001d5c417f8 (     0x8) (anonymous namespace)::get_client_dispatch_queue()::queue [NameNList, MangledNameNList, NList] 
                0x00000001d5c41800 (     0x8) guard variable for (anonymous namespace)::get_client_dispatch_queue()::queue [NameNList, MangledNameNList, NList] 
                0x00000001d5c41808 (     0x1) gCGXStretchedModeSupport [NameNList, MangledNameNList, NList] 
                0x00000001d5c41809 (     0x1) gCGXShuttingDown [NameNList, MangledNameNList, NList] 
                0x00000001d5c4180a (     0x1) gCGXDisplayDebug [NameNList, MangledNameNList, NList] 
                0x00000001d5c4180b (     0x1) gCGXDisplayNotificationDebug [NameNList, MangledNameNList, NList] 
                0x00000001d5c4180c (     0x1) gCGXDisplayConfigurationDebug [NameNList, MangledNameNList, NList] 
                0x00000001d5c4180d (     0x3) gCGSavePending [NameNList, MangledNameNList, NList] 
                0x00000001d5c41810 (     0x8) gWSDeviceList [NameNList, MangledNameNList, NList] 
                0x00000001d5c41818 (     0x4) gDeviceCount [NameNList, MangledNameNList, NList] 
                0x00000001d5c4181c (     0x4) gServerRunningInSafeMode [NameNList, MangledNameNList, NList] 
                0x00000001d5c41820 (     0x8) gCGXSessionMonConfig [NameNList, MangledNameNList, NList] 
                0x00000001d5c41828 (     0x4) gCGXSessionMonConfigCount [NameNList, MangledNameNList, NList] 
                0x00000001d5c4182c (     0x4) gCGXSessionConfigurationOrigin [NameNList, MangledNameNList, NList] 
                0x00000001d5c41830 (     0x8) gDisplayReconfigStateBits [NameNList, MangledNameNList, NList] 
                0x00000001d5c41838 (     0x8) gCGXDisplayROInfo [NameNList, MangledNameNList, NList] 
                0x00000001d5c41840 (     0x8) gIsOnBattery [NameNList, MangledNameNList, NList] 
                0x00000001d5c41848 (     0x8) gAttenuationAdjustmentTableOnBattery [NameNList, MangledNameNList, NList] 
                0x00000001d5c41850 (     0x8) gAttenuationAdjustmentTableCountOnBattery [NameNList, MangledNameNList, NList] 
                0x00000001d5c41858 (     0x8) hidEventClient [NameNList, MangledNameNList, NList] 
                0x00000001d5c41860 (     0x8) CoreDisplay_NotificationServiceInitialize::once [NameNList, MangledNameNList, NList] 
                0x00000001d5c41868 (     0x8) gDisplayState [NameNList, MangledNameNList, NList] 
                0x00000001d5c41870 (     0x4) gPowerSourceChangeNoticationPort [NameNList, MangledNameNList, NList] 
                0x00000001d5c41874 (     0x4) gPowerSourceChangeNotificationToken [NameNList, MangledNameNList, NList] 
                0x00000001d5c41878 (     0x8) is_gamma_initialized [NameNList, MangledNameNList, NList] 
                0x00000001d5c41880 (     0x8) CGXInitializeGamma::predicate [NameNList, MangledNameNList, NList] 
                0x00000001d5c41888 (     0x8) CGXInitializeGamma::stop_deferring_display_reconfig_was_called [NameNList, MangledNameNList, NList] 
                0x00000001d5c41890 (    0x30) kMainOfflineBreadcrumbs [NameNList, MangledNameNList, NList] 
                0x00000001d5c418c0 (    0x60) CoreDisplay::kIdentityMatrix (.4958) [NameNList, MangledNameNList, NList] 
                0x00000001d5c41920 (     0x1) gGammaRestorePending [NameNList, MangledNameNList, NList] 
                0x00000001d5c41921 (     0x1) gWSForceHardResetOnTermination [NameNList, MangledNameNList, NList] 
                0x00000001d5c41922 (     0x2) gCGXDisplaySWMirrorOnly [NameNList, MangledNameNList, NList] 
                0x00000001d5c41924 (     0x4) gCGXDisplayResolutionPreference [NameNList, MangledNameNList, NList] 
                0x00000001d5c41928 (     0x4) gCGXDisplayResolution [NameNList, MangledNameNList, NList] 
                0x00000001d5c4192c (     0x4) kCGXDisplayResolutionInternal [NameNList, MangledNameNList, NList] 
                0x00000001d5c41930 (     0x8) gCGXDisplayResolutionConfiguration [NameNList, MangledNameNList, NList] 
                0x00000001d5c41938 (     0x8) WSMachineIsAMD::pred [NameNList, MangledNameNList, NList] 
                0x00000001d5c41940 (     0x8) WSMachineIsAMD::gMachineIsAMD [NameNList, MangledNameNList, NList] 
                0x00000001d5c41948 (     0x8) WSMachineUsesNewStyleMirroring::pred [NameNList, MangledNameNList, NList] 
                0x00000001d5c41950 (     0x8) WSMachineUsesNewStyleMirroring::gMachineUsesNewStyleMirroring [NameNList, MangledNameNList, NList] 
                0x00000001d5c41958 (     0x8) WSMachineIsMux::pred [NameNList, MangledNameNList, NList] 
                0x00000001d5c41960 (     0x4) WSMachineIsMux::gMachineIsMux [NameNList, MangledNameNList, NList] 
                0x00000001d5c41964 (     0x4) GetSystemGPUVendors::gpuVendors [NameNList, MangledNameNList, NList] 
                0x00000001d5c41968 (     0x8) GetSystemGPUVendors::pred [NameNList, MangledNameNList, NList] 
                0x00000001d5c41970 (     0x8) WSDeferringDisplayConfiguration::predicate [NameNList, MangledNameNList, NList] 
                0x00000001d5c41978 (     0x8) display_reconfigure_time [NameNList, MangledNameNList, NList] 
                0x00000001d5c41980 (     0x8) gDisplayDither [NameNList, MangledNameNList, NList] 
                0x00000001d5c41988 (     0x8) GetHIDDispatchQueue()::q [NameNList, MangledNameNList, NList] 
                0x00000001d5c41990 (     0x8) guard variable for GetHIDDispatchQueue()::q [NameNList, MangledNameNList, NList] 
                0x00000001d5c41998 (     0x8) first_run_since_boot()::firstRun [NameNList, MangledNameNList, NList] 
                0x00000001d5c419a0 (     0x8) first_run_since_boot()::pred [NameNList, MangledNameNList, NList] 
                0x00000001d5c419a8 (     0x4) initialize_gamma_callback(void*, double)::retries [NameNList, MangledNameNList, NList] 
                0x00000001d5c419ac (     0x1) gGrayscaleUpdatePending [NameNList, MangledNameNList, NList] 
                0x00000001d5c419ad (     0x3) should_run_update_reconfig_deferral [NameNList, MangledNameNList, NList] 
                0x00000001d5c419b0 (     0x8) CoreDisplay::GTrace::gGTraceBuffer [NameNList, MangledNameNList, NList] 
                0x00000001d5c419b8 (     0x8) CoreDisplay::GTrace::recordTokenNowNTFunc [NameNList, MangledNameNList, NList] 
                0x00000001d5c419c0 (     0x8) CoreDisplay::GTrace::destroyGTraceFunc [NameNList, MangledNameNList, NList] 
                0x00000001d5c419c8 (     0x8) CoreDisplay::GTrace::CreateBuffer(unsigned int)::createGTraceFunc [NameNList, MangledNameNList, NList] 
                0x00000001d5c419d0 (     0x8) CoreDisplay::GTrace::CreateBuffer(unsigned int)::libGTraceAvailable [NameNList, MangledNameNList, NList] 
                0x00000001d5c419d8 (     0x8) CoreDisplay::GTrace::CreateBuffer(unsigned int)::onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d5c419e0 (    0x18) CoreDisplay::GetMetalDeviceCache()::metalDeviceCache [NameNList, MangledNameNList, NList] 
                0x00000001d5c419f8 (     0x8) guard variable for CoreDisplay::GetMetalDeviceCache()::metalDeviceCache [NameNList, MangledNameNList, NList] 
                0x00000001d5c41a00 (     0x8) CoreDisplay::CreateMetalDevice(unsigned int)::first [NameNList, MangledNameNList, NList] 
                0x00000001d5c41a08 (     0x8) guard variable for CoreDisplay::CreateMetalDevice(unsigned int)::m [NameNList, MangledNameNList, NList] 
                0x00000001d5c41a10 (    0xb8) CoreDisplay::Mach::GetMessageServer()::server [NameNList, MangledNameNList, NList] 
                0x00000001d5c41ac8 (    0x20) guard variable for CoreDisplay::Mach::GetMessageServer()::server [NameNList, MangledNameNList, NList] 
                0x00000001d5c41ae8 (     0x8) _cdgls_plugin [NameNList, MangledNameNList, NList] 
                0x00000001d5c41af0 (     0x8) _cdgls_max_displays [NameNList, MangledNameNList, NList] 
                0x00000001d5c41af8 (     0x8) _cdgls_services [NameNList, MangledNameNList, NList] 
                0x00000001d5c41b00 (     0x8) _cdgls_fbindices [NameNList, MangledNameNList, NList] 
                0x00000001d5c41b08 (     0x8) _cdgls_gli_dispatch_size [NameNList, MangledNameNList, NList] 
                0x00000001d5c41b10 (     0x8) _cdgls_dummy_disp [NameNList, MangledNameNList, NList] 
                0x00000001d5c41b18 (     0x4) enableMetalProtection [NameNList, MangledNameNList, NList] 
                0x00000001d5c41b1c (     0x4) CoreDisplay::Framebuffer::m_globalIndex [NameNList, MangledNameNList, NList] 
                0x00000001d5c41b20 (   0x180) CoreDisplay::Framebuffer::EmptyCGSDisplayInformation [NameNList, MangledNameNList, NList] 
                0x00000001d5c41ca0 (     0x8) gServerRunningInBringupMode [NameNList, MangledNameNList, NList] 
                0x00000001d5c41ca8 (     0x8) unit_manager()::actual_unit_manager [NameNList, MangledNameNList, NList] 
                0x00000001d5c41cb0 (     0x8) guard variable for unit_manager()::actual_unit_manager [NameNList, MangledNameNList, NList] 
                0x00000001d5c41cb8 (     0x8) mode_internal_key_value_pair_comparer(void const*, void const*, void*)::alwaysIgnore [NameNList, MangledNameNList, NList] 
        0x00000001d6d37b00 (   0x2c0) __DATA_DIRTY SEGMENT
            0x00000001d6d37b00 (   0x2c0) __DATA_DIRTY __bss
                0x00000001d6d37b18 (    0x20) CoreDisplay::kCDDataDumpDirectory [NameNList, MangledNameNList, NList] 
                0x00000001d6d37b38 (    0x20) CoreDisplay::dataDumpDirectory [NameNList, MangledNameNList, NList] 
                0x00000001d6d37b58 (    0x40) CoreDisplay::zoomParameters [NameNList, MangledNameNList, NList] 
                0x00000001d6d37b98 (    0x28) gDisplayMap [NameNList, MangledNameNList, NList] 
                0x00000001d6d37bc0 (    0x68) CoreDisplay::kIdentityMatrix [NameNList, MangledNameNList, NList] 
                0x00000001d6d37c28 (    0x18) gGPUWranglerRef [NameNList, MangledNameNList, NList] 
                0x00000001d6d37c40 (   0x118) assertMessage [NameNList, MangledNameNList, NList] 
                0x00000001d6d37d58 (    0x18) CoreDisplay::gWSRootQueue [NameNList, MangledNameNList, NList] 
                0x00000001d6d37d70 (    0x28) CoreDisplay::DisplaySurface::Cache::cache [NameNList, MangledNameNList, NList] 
                0x00000001d6d37d98 (    0x28) CoreDisplay::gDisplayPipes [NameNList, MangledNameNList, NList] 
        0x000000023a910000 (0x37bf0000) __LINKEDIT SEGMENT
