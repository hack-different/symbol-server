/System/Library/PrivateFrameworks/SDAPI.framework/Versions/A/SDAPI [arm64e, 0.026667 seconds]:
    F3874FFA-1F85-36A9-B545-496CEF4E343F /System/Library/PrivateFrameworks/SDAPI.framework/Versions/A/SDAPI [DYLIB, DYLDSHAREDCACHE, FaultedFromDiskDyldSharedCache, MMap64]  
        0x00000001b4423000 (0x391ff8) __TEXT SEGMENT
            0x00000001b4423000 (  0x16c4) MACH_HEADER
            0x00000001b44246c4 (0x31c6ec) __TEXT __text
                0x00000001b44246c4 (     0x4) MrecInitModule_sdpres_sdapi() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44246c8 (     0xc) __clang_call_terminate [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44246d4 (     0x4) MrecInitModule_phonset_phoneme() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44246d8 (     0x4) PhnIndexSet::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44246dc (    0x9c) MrecInitModule_latutil_kernel() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4424778 (    0x48) DuplicateLinkError(int, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44247c0 (     0x4) BoolGlobalParam::~BoolGlobalParam() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44247c4 (    0x28) BoolGlobalParam::~BoolGlobalParam() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44247ec (   0x19c) MrecInitModule_dmatrix_mrecutil() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4424988 (    0xb4) DgnVector::operator*(DgnMatrix const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4424a3c (    0x64) sizeObject(DgnVector const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4424aa0 (   0x294) LUDecomposeData::decompose() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4424d34 (    0x84) LUDecomposeData::forwardSubst(DgnVector&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4424db8 (    0x90) LUDecomposeData::backSubst(DgnVector&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4424e48 (    0xe8) DgnMatrix::operator*(DgnVector const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4424f30 (    0x78) DgnMatrix::getRow(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4424fa8 (   0x17c) DgnMatrix::operator*(DgnMatrix const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4425124 (    0xb8) DgnMatrix::transpose() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44251dc (    0xb0) DgnMatrix::makeDiagonal(DgnVector const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b442528c (    0x90) DgnMatrix::makeIdentity(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b442531c (     0x8) DgnMatrix::invert() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4425324 (   0x1d8) DgnMatrix::ludInvert(double*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44254fc (   0x120) DgnMatrix::naiveDeterminant() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b442561c (    0xc8) DgnMatrix::determinant() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44256e4 (   0x164) DgnMatrix::cofactorMatrix() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4425848 (    0xec) DgnMatrix::cofactorElement(unsigned int, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4425934 (    0x74) DgnMatrix::operator*(double) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44259a8 (   0x14c) DgnMatrix::getMinorMatrix(unsigned int, unsigned int, DgnMatrix&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4425af4 (   0xe18) DgnMatrix::singularValueDecompose(DgnVector*, DgnMatrix*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b442690c (    0x4c) DgnMatrix::setNumRowsAndCols(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4426958 (    0x78) DgnMatrix::getCol(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44269d0 (    0x6c) sizeObject(DgnMatrix const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4426a3c (    0x68) EnumParamRange::EnumParamRange(EnumParamItem const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4426aa4 (     0x4) EnumGlobalParam::~EnumGlobalParam() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4426aa8 (    0x28) EnumGlobalParam::~EnumGlobalParam() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4426ad0 (    0x40) DgnPrimFixArray<double>::~DgnPrimFixArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4426b10 (    0x7c) LUDecomposeData::LUDecomposeData(DgnPrimFixArray<double> const&, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4426b8c (    0x7c) DgnPrimFixArray<double>::copyArraySlice(DgnPrimFixArray<double> const&, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4426c08 (    0x78) DgnPrimArray<B_LMSlotType>::reallocElts(unsigned int, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4426c80 (    0x4c) DgnPrimArray<unsigned int>::~DgnPrimArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4426ccc (     0x4) MrecInitModule_nistsrc_audiosrc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4426cd0 (    0x64) void DgnDelete<DgnSharedMemStream>(DgnSharedMemStream*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4426d34 (    0x4c) DgnPrimArray<short>::~DgnPrimArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4426d80 (    0x4c) DgnPrimArray<unsigned char>::~DgnPrimArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4426dcc (    0x78) DgnPrimArray<unsigned short>::reallocElts(unsigned int, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4426e44 (     0x4) MrecInitModule_choosew_recogctl() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4426e48 (    0xa0) WarpChooser::~WarpChooser() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4426ee8 (     0x4) WarpChooser::~WarpChooser() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4426eec (   0x538) WarpChooser::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4427424 (    0x54) void DgnDelete<UttFeatureArraySynchronizedArray>(UttFeatureArraySynchronizedArray*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4427478 (    0x54) SynchronizedArray<DgnPrimArray<unsigned char>>::SynchronizedArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44274cc (    0x5c) SynchronizedArray<DgnPrimArray<unsigned char>>::reset() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4427528 (    0x64) DgnArray<DgnPrimArray<unsigned char>>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b442758c (    0x4c) DgnPrimArray<int>::~DgnPrimArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44275d8 (    0x40) DgnIArray<Utterance*>::~DgnIArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4427618 (    0xb4) DgnPrimArray<char>::copyArraySlice(DgnPrimArray<char> const&, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44276cc (   0x108) TParam::TParam(TParam::TType, wchar_t const*, wchar_t const*, unsigned long, wchar_t const*, wchar_t const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44277d4 (    0xc0) TParam::TParam(TParam::TType, wchar_t const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4427894 (    0x80) TParam::~TParam() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4427914 (     0x4) TParam::~TParam() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4427918 (     0x4) TParam::~TParam() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b442791c (    0x3c) TParam::getValidConfig(unsigned long) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4427958 (    0x34) TParam::getValidOriginalConfig(unsigned long) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b442798c (    0x68) TParam::notifyChange(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44279f4 (     0xc) TParam::getActiveConfigHandle() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4427a00 (    0x9c) TParam::needSave() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4427a9c (    0x4c) TParam::flagsSet(std::__1::bitset<64ul>) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4427ae8 (   0x194) TBoolParam::setValue(unsigned long, wchar_t const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4427c7c (    0x88) TBoolParam::set(unsigned long, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4427d04 (   0x194) TBoolParam::setValueOriginal(unsigned long, wchar_t const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4427e98 (    0x88) TBoolParam::setOriginal(unsigned long, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4427f20 (   0x244) TIntParam::TIntParam(wchar_t const*, wchar_t const*, unsigned long, int, int, int, wchar_t const*, wchar_t const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4428164 (    0xb4) TIntParam::setOriginal(unsigned long, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4428218 (    0x50) TLogicException::~TLogicException() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4428268 (     0xc) TIntParam::TIntParam(wchar_t const*, wchar_t const*, unsigned long, int, int, int, wchar_t const*, wchar_t const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4428274 (   0x21c) TIntParam::TIntParam(wchar_t const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4428490 (   0x1b0) TIntParam::setValue(unsigned long, wchar_t const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4428640 (    0xb4) TIntParam::set(unsigned long, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44286f4 (   0x1b0) TIntParam::setValueOriginal(unsigned long, wchar_t const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44288a4 (   0x224) TIntParam::getValue(unsigned long, TBuffer<wchar_t>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4428ac8 (   0x128) std::__1::basic_ostringstream<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>::basic_ostringstream[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4428bf0 (    0xbc) std::__1::basic_ostringstream<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>::~basic_ostringstream() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4428cac (   0x244) TIntParam::getValueOriginal(unsigned long, TBuffer<wchar_t>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4428ef0 (   0x190) TFloatParam::setValue(unsigned long, wchar_t const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4429080 (    0x88) TFloatParam::set(unsigned long, double) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4429108 (   0x190) TFloatParam::setValueOriginal(unsigned long, wchar_t const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4429298 (    0x88) TFloatParam::setOriginal(unsigned long, double) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4429320 (   0x224) TFloatParam::getValue(unsigned long, TBuffer<wchar_t>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4429544 (   0x244) TFloatParam::getValueOriginal(unsigned long, TBuffer<wchar_t>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4429788 (   0x270) TStringParam::TStringParam(wchar_t const*, wchar_t const*, unsigned long, wchar_t const*, wchar_t const*, wchar_t const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44299f8 (   0x120) TStringParam::setOriginal(unsigned long, wchar_t const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4429b18 (     0x4) TStringParam::TStringParam(wchar_t const*, wchar_t const*, unsigned long, wchar_t const*, wchar_t const*, wchar_t const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4429b1c (    0xc4) TStringParam::TStringParam(wchar_t const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4429be0 (     0x4) TStringParam::TStringParam(wchar_t const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4429be4 (   0x164) TStringParam::setAllowables(std::__1::vector<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>, std::__1::allocator<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>> const&, std::__1::vector<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>, std::__1::allocator<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>> const*, std::__1::vector<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>, std::__1::allocator<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>> const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4429d48 (   0x120) TStringParam::set(unsigned long, wchar_t const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4429e68 (   0x244) TStringParam::getGrammarValue(unsigned long, TBuffer<wchar_t>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b442a0ac (   0x14c) TParamManager::~TParamManager() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b442a1f8 (     0xc) TParamManager::begin() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b442a204 (     0xc) TParamManager::end() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b442a210 (    0x6c) TRegisterable<TParamManager>::~TRegisterable() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b442a27c (     0x4) TParamManager::~TParamManager() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b442a280 (    0x28) TParamManager::~TParamManager() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b442a2a8 (    0x3c) TParamManager::find(wchar_t const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b442a2e4 (   0x13c) TParamManager::add(TParam*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b442a420 (   0x388) TParamManager::newConfig(wchar_t const*, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b442a7a8 (    0x50) TDataException::~TDataException() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b442a7f8 (  0x4714) TParamManager::initParam(TFileObject const*, TParam::TType, bool, bool, std::__1::set<wchar_t const*, TWideCharCompare, std::__1::allocator<wchar_t const*>>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b442ef0c (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001b442ef20 (    0x50) TSemanticException::~TSemanticException() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b442ef70 (    0x88) TParamManager::getConfig(wchar_t const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b442eff8 (    0x6c) TParamManager::nameToParam(wchar_t const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b442f064 (   0x654) TParamManager::init(TFileObject const*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b442f6b8 (   0x8a4) TParamManager::initialize(TInputStream&, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b442ff5c (  0x11ec) TParamManager::save(TOutputStream&, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4431148 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001b443115c (    0xd8) TBuffer<wchar_t>::resize(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4431234 (    0x38) TParamManager::getConfigHandles(unsigned long*, unsigned long) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443126c (    0x74) TBoolParam::~TBoolParam() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44312e0 (    0x78) TBoolParam::~TBoolParam() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4431358 (    0x5c) TBoolParam::getValue(unsigned long, TBuffer<wchar_t>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44313b4 (    0x54) TBoolParam::getValueOriginal(unsigned long, TBuffer<wchar_t>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4431408 (     0x4) TFloatParam::~TFloatParam() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443140c (    0x28) TFloatParam::~TFloatParam() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4431434 (     0x4) TParamManager::notifyChange(TParam const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4431438 (     0x4) TParamManager::upgradeParam(TParam const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443143c (     0x4) TIntParam::~TIntParam() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4431440 (    0x28) TIntParam::~TIntParam() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4431468 (    0x88) TStringParam::~TStringParam() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44314f0 (    0x8c) TStringParam::~TStringParam() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443157c (    0x54) TStringParam::getValue(unsigned long, TBuffer<wchar_t>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44315d0 (    0x3c) TStringParam::getValueOriginal(unsigned long, TBuffer<wchar_t>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443160c (     0x4) TStringParam::setValue(unsigned long, wchar_t const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4431610 (     0x4) TStringParam::setValueOriginal(unsigned long, wchar_t const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4431614 (    0xcc) bool std::__1::__equal_aligned[abi:v160006]<std::__1::__bitset<1ul, 64ul>, true, true>(std::__1::__bit_iterator<std::__1::__bitset<1ul, 64ul>, true, 0>, std::__1::__bit_iterator<std::__1::__bitset<1ul, 64ul>, true, 0>, std::__1::__bit_iterator<std::__1::__bitset<1ul, 64ul>, true, 0>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44316e0 (    0x84) TLocaleInfo::TLocaleInfo() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4431764 (    0x60) TLogicException::~TLogicException() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44317c4 (    0x50) TException::~TException() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4431814 (    0x60) TException::~TException() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4431874 (    0xd8) virtual thunk to std::__1::basic_ostringstream<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>::~basic_ostringstream() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443194c (    0xcc) std::__1::basic_ostringstream<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>::~basic_ostringstream() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4431a18 (    0xe0) virtual thunk to std::__1::basic_ostringstream<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>::~basic_ostringstream() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4431af8 (    0x60) std::__1::basic_stringbuf<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>::~basic_stringbuf() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4431b58 (    0x64) std::__1::basic_stringbuf<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>::~basic_stringbuf() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4431bbc (   0x10c) std::__1::basic_stringbuf<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>::seekoff(long long, std::__1::ios_base::seekdir, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4431cc8 (    0x30) std::__1::basic_stringbuf<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>::seekpos(std::__1::fpos<__mbstate_t>, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4431cf8 (    0x50) std::__1::basic_stringbuf<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>::underflow() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4431d48 (    0x64) std::__1::basic_stringbuf<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>::pbackfail(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4431dac (   0x198) std::__1::basic_stringbuf<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>::overflow(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4431f44 (    0x60) TDataException::~TDataException() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4431fa4 (    0x60) TSemanticException::~TSemanticException() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4432004 (    0x90) std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>, TWordBlock*>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>, TWordBlock*>, void*>*, long> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>, TWordBlock*>, std::__1::__map_value_compare<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>, std::__1::__value_type<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>, TWordBlock*>, std::__1::less<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<wchar_t, std::__1::char_traits<w...
                0x00000001b4432094 (    0x80) std::__1::less<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>::operator()[abi:v160006](std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> const&, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4432114 (    0x78) std::__1::vector<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>, std::__1::allocator<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>>::__swap_out_circular_buffer(std::__1::__split_buffer<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>, std::__1::allocator<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>&>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443218c (    0x18) std::__1::vector<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>, std::__1::allocator<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44321a4 (    0x5c) std::__1::__throw_length_error[abi:v160006](char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4432200 (    0x34) std::length_error::length_error[abi:v160006](char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4432234 (    0x48) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>>(std::__1::allocator<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443227c (    0x34) std::__throw_bad_array_new_length[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44322b0 (    0xa0) std::__1::reverse_iterator<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>*> std::__1::__uninitialized_allocator_move_if_noexcept[abi:v160006]<std::__1::allocator<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>, std::__1::reverse_iterator<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>*>, std::__1::reverse_iterator<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>*>, std::__1::reverse_iterator<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>*>>(std::__1::allocator<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>&, std::__1::reverse_iterator<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>*>, std::__1::reverse_iterator<std:...
                0x00000001b4432350 (    0x38) std::__1::__exception_guard_exceptions<std::__1::_AllocatorDestroyRangeReverse<std::__1::allocator<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>, std::__1::reverse_iterator<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>*>>>::~__exception_guard_exceptions[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4432388 (    0x48) std::__1::_AllocatorDestroyRangeReverse<std::__1::allocator<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>, std::__1::reverse_iterator<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>*>>::operator()[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44323d0 (    0x38) std::__1::__split_buffer<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>, std::__1::allocator<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>&>::~__split_buffer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4432408 (    0x58) std::__1::__split_buffer<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>, std::__1::allocator<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>&>::__destruct_at_end[abi:v160006](std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4432460 (    0xa8) TBoolParam::TBoolParam(wchar_t const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4432508 (    0x6c) TFloatParam::TFloatParam(wchar_t const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4432574 (    0x5c) TBuffer<wchar_t>::assign(wchar_t const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44325d0 (   0x14c) TBuffer<wchar_t>::insert(unsigned long, wchar_t const*, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443271c (    0x54) std::__1::__tree<std::__1::__value_type<wchar_t const*, TSymbol*>, std::__1::__map_value_compare<wchar_t const*, std::__1::__value_type<wchar_t const*, TSymbol*>, TWideCharCompare, true>, std::__1::allocator<std::__1::__value_type<wchar_t const*, TSymbol*>>>::destroy(std::__1::__tree_node<std::__1::__value_type<wchar_t const*, TSymbol*>, void*>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4432770 (    0x3c) std::__1::vector<std::__1::pair<unsigned long, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>, std::__1::allocator<std::__1::pair<unsigned long, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>>>::~vector[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44327ac (    0x54) std::__1::vector<std::__1::pair<unsigned long, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>, std::__1::allocator<std::__1::pair<unsigned long, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>>>::__destroy_vector::operator()[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4432800 (    0x58) std::__1::vector<std::__1::pair<unsigned long, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>, std::__1::allocator<std::__1::pair<unsigned long, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>>>::__clear[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4432858 (    0x64) std::__1::__tree<std::__1::__value_type<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> const, std::__1::pair<TRegExp const*, TRegExp const*>>, std::__1::__map_value_compare<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> const, std::__1::__value_type<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> const, std::__1::pair<TRegExp const*, TRegExp const*>>, std::__1::less<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> const>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> const, std::__1::pair<TRegExp const*, TRegExp const*>>>>::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator...
                0x00000001b44328bc (    0x80) TRegisterable<TParamManager>::getRegistry() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443293c (     0x4) TRegisterable<TParamManager>::~TRegisterable() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4432940 (    0x28) TRegisterable<TParamManager>::~TRegisterable() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4432968 (    0x98) std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>::basic_string[abi:v160006]<std::nullptr_t>(wchar_t const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4432a00 (    0x18) std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4432a18 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<wchar_t>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<wchar_t>>(std::__1::allocator<wchar_t>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4432a50 (    0x60) std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>>>::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_s...
                0x00000001b4432ab0 (    0x58) void std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>, void*>>>::destroy[abi:v160006]<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>, void, void>(std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>, void*>>&, std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_...
                0x00000001b4432b08 (    0xa0) std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::basic_string[abi:v160006]<std::nullptr_t>(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4432ba8 (    0x18) std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4432bc0 (    0x6c) std::__1::basic_stringbuf<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>::str() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4432c2c (    0x94) std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>::basic_string[abi:v160006]<wchar_t*, void>(wchar_t*, wchar_t*, std::__1::allocator<wchar_t> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4432cc0 (    0x3c) std::__1::vector<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>, std::__1::allocator<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>>::~vector[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4432cfc (    0x54) std::__1::vector<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>, std::__1::allocator<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>>::__destroy_vector::operator()[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4432d50 (    0x58) std::__1::vector<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>, std::__1::allocator<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>>::__clear[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4432da8 (   0x184) void std::__1::vector<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>, std::__1::allocator<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>>::assign<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>*, 0>(std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>*, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4432f2c (    0x3c) std::__1::vector<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>, std::__1::allocator<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>>::__vdeallocate() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4432f68 (    0x54) std::__1::vector<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>, std::__1::allocator<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>>::__vallocate[abi:v160006](unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4432fbc (    0x60) std::__1::pair<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>*, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>*> std::__1::__unwrap_and_dispatch[abi:v160006]<std::__1::__overload<std::__1::__copy_loop<std::__1::_ClassicAlgPolicy>, std::__1::__copy_trivial>, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>*, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>*, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>*, 0>(std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>*, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>*, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>*) [FUNC, PEXT, NameN...
                0x00000001b443301c (    0xa4) std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>* std::__1::__uninitialized_allocator_copy[abi:v160006]<std::__1::allocator<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>*, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>*, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>*>(std::__1::allocator<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>&, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>*, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>*, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wch...
                0x00000001b44330c0 (    0x38) std::__1::__exception_guard_exceptions<std::__1::_AllocatorDestroyRangeReverse<std::__1::allocator<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>*>>::~__exception_guard_exceptions[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44330f8 (    0x50) std::__1::_AllocatorDestroyRangeReverse<std::__1::allocator<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>*>::operator()[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4433148 (    0x7c) std::__1::__tree_const_iterator<wchar_t const*, std::__1::__tree_node<wchar_t const*, void*>*, long> std::__1::__tree<wchar_t const*, TWideCharCompare, std::__1::allocator<wchar_t const*>>::find<wchar_t const*>(wchar_t const* const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44331c4 (    0x18) std::__1::vector<TParam*, std::__1::allocator<TParam*>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44331dc (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<TParam*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<TParam*>>(std::__1::allocator<TParam*>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4433214 (    0x88) std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<wchar_t const*, TSymbol*>, std::__1::__tree_node<std::__1::__value_type<wchar_t const*, TSymbol*>, void*>*, long>, bool> std::__1::__tree<std::__1::__value_type<wchar_t const*, TSymbol*>, std::__1::__map_value_compare<wchar_t const*, std::__1::__value_type<wchar_t const*, TSymbol*>, TWideCharCompare, true>, std::__1::allocator<std::__1::__value_type<wchar_t const*, TSymbol*>>>::__emplace_unique_key_args<wchar_t const*, std::__1::piecewise_construct_t const&, std::__1::tuple<wchar_t const* const&>, std::__1::tuple<>>(wchar_t const* const&, std::__1::piecewise_construct_t const&, std::__1::tuple<wchar_t const* const&>&&, std::__1::tuple<>&&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443329c (    0x88) std::__1::__tree_node_base<void*>*& std::__1::__tree<std::__1::__value_type<wchar_t const*, TSymbol*>, std::__1::__map_value_compare<wchar_t const*, std::__1::__value_type<wchar_t const*, TSymbol*>, TWideCharCompare, true>, std::__1::allocator<std::__1::__value_type<wchar_t const*, TSymbol*>>>::__find_equal<wchar_t const*>(std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*&, wchar_t const* const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4433324 (    0x58) std::__1::__tree<std::__1::__value_type<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> const, std::__1::pair<TRegExp const*, TRegExp const*>>, std::__1::__map_value_compare<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> const, std::__1::__value_type<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> const, std::__1::pair<TRegExp const*, TRegExp const*>>, std::__1::less<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> const>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> const, std::__1::pair<TRegExp const*, TRegExp const*>>>>::__insert_node_at(std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*, std::__1::__tree_node_base<void*>*&, std::__1::__tree_n...
                0x00000001b443337c (   0x198) void std::__1::__tree_balance_after_insert[abi:v160006]<std::__1::__tree_node_base<void*>*>(std::__1::__tree_node_base<void*>*, std::__1::__tree_node_base<void*>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4433514 (   0x384) void std::__1::__tree_remove[abi:v160006]<std::__1::__tree_node_base<void*>*>(std::__1::__tree_node_base<void*>*, std::__1::__tree_node_base<void*>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4433898 (    0x78) std::__1::vector<std::__1::pair<unsigned long, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>, std::__1::allocator<std::__1::pair<unsigned long, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>>>::__swap_out_circular_buffer(std::__1::__split_buffer<std::__1::pair<unsigned long, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>, std::__1::allocator<std::__1::pair<unsigned long, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>>&>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4433910 (    0x18) std::__1::vector<std::__1::pair<unsigned long, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>, std::__1::allocator<std::__1::pair<unsigned long, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4433928 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<std::__1::pair<unsigned long, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>>>(std::__1::allocator<std::__1::pair<unsigned long, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4433960 (    0xa4) std::__1::reverse_iterator<std::__1::pair<unsigned long, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>*> std::__1::__uninitialized_allocator_move_if_noexcept[abi:v160006]<std::__1::allocator<std::__1::pair<unsigned long, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>>, std::__1::reverse_iterator<std::__1::pair<unsigned long, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>*>, std::__1::reverse_iterator<std::__1::pair<unsigned long, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>*>, std::__1::reverse_iterator<std::__1::pair<unsigned long, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>*>>(std::__1::allocator<std::__1::pair<unsigned long, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std...
                0x00000001b4433a04 (    0x38) std::__1::__exception_guard_exceptions<std::__1::_AllocatorDestroyRangeReverse<std::__1::allocator<std::__1::pair<unsigned long, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>>, std::__1::reverse_iterator<std::__1::pair<unsigned long, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>*>>>::~__exception_guard_exceptions[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4433a3c (    0x48) std::__1::_AllocatorDestroyRangeReverse<std::__1::allocator<std::__1::pair<unsigned long, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>>, std::__1::reverse_iterator<std::__1::pair<unsigned long, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>*>>::operator()[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4433a84 (    0x38) std::__1::__split_buffer<std::__1::pair<unsigned long, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>, std::__1::allocator<std::__1::pair<unsigned long, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>>&>::~__split_buffer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4433abc (    0x58) std::__1::__split_buffer<std::__1::pair<unsigned long, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>, std::__1::allocator<std::__1::pair<unsigned long, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>>&>::__destruct_at_end[abi:v160006](std::__1::pair<unsigned long, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4433b14 (    0x9c) std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>, TWordBlock*>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>, TWordBlock*>, void*>*, long>, bool> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>, TWordBlock*>, std::__1::__map_value_compare<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>, std::__1::__value_type<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>, TWordBlock*>, std::__1::less<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<wchar_t, s...
                0x00000001b4433bb0 (    0xa0) std::__1::__tree_node_base<void*>*& std::__1::__tree<std::__1::__value_type<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>, TWordBlock*>, std::__1::__map_value_compare<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>, std::__1::__value_type<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>, TWordBlock*>, std::__1::less<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>, TWordBlock*>>>::__find_equal<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>(std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*&, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>...
                0x00000001b4433c50 (    0x84) std::__1::vector<wchar_t const*, std::__1::allocator<wchar_t const*>>::vector(unsigned long, wchar_t const* const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4433cd4 (    0x44) std::__1::vector<wchar_t const*, std::__1::allocator<wchar_t const*>>::__vallocate[abi:v160006](unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4433d18 (    0x18) std::__1::vector<wchar_t const*, std::__1::allocator<wchar_t const*>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4433d30 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<wchar_t const*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<wchar_t const*>>(std::__1::allocator<wchar_t const*>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4433d68 (    0x68) unsigned long std::__1::__tree<wchar_t const*, TWideCharCompare, std::__1::allocator<wchar_t const*>>::__count_unique<wchar_t const*>(wchar_t const* const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4433dd0 (    0x84) std::__1::pair<std::__1::__tree_iterator<wchar_t const*, std::__1::__tree_node<wchar_t const*, void*>*, long>, bool> std::__1::__tree<wchar_t const*, TWideCharCompare, std::__1::allocator<wchar_t const*>>::__emplace_unique_key_args<wchar_t const*, wchar_t const*>(wchar_t const* const&, wchar_t const*&&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4433e54 (    0xa0) std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>, void*>*, long>, bool> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__...
                0x00000001b4433ef4 (    0xa0) std::__1::__tree_node_base<void*>*& std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::pair<char*, unsigned long>>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::pair<char*, unsigned long>>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::pair<char*, unsigned long>>>>::__find_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>(std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*&, std::__1::basic_string<char, std::__1::ch...
                0x00000001b4433f94 (    0x80) std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>::operator()[abi:v160006](std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4434014 (   0x1a4) std::__1::basic_ostream<char, std::__1::char_traits<char>>& std::__1::__put_character_sequence[abi:v160006]<char, std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>>&, char const*, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44341b8 (   0x188) std::__1::ostreambuf_iterator<char, std::__1::char_traits<char>> std::__1::__pad_and_output[abi:v160006]<char, std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char, std::__1::char_traits<char>>, char const*, char const*, char const*, std::__1::ios_base&, char) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4434340 (    0x9c) std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::basic_string[abi:v160006](unsigned long, char) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44343dc (    0x4c) TStringParam::getOriginal(unsigned long) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4434428 (    0x14) OUTLINED_FUNCTION_0 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443443c (    0x9c) MrecInitModule_corpus_word() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44344d8 (    0xcc) Corpus::~Corpus() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44345a4 (    0x34) void DgnDelete<CharInfo>(CharInfo*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44345d8 (    0x64) void DgnDelete<DFile>(DFile*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443463c (     0x4) Corpus::~Corpus() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4434640 (  0x1e24) Corpus::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4436464 (    0x78) unsigned long sizeObject<int>(DgnPrimArray<int> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44364dc (    0x78) unsigned long sizeObject<double>(DgnPrimArray<double> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4436554 (    0x5c) void writeObject<unsigned int>(DgnStream*, DgnPrimFixArray<unsigned int> const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44365b0 (    0x5c) void writeObject<char>(DgnStream*, DgnPrimArray<char> const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443660c (    0x5c) void writeObject<unsigned long long>(DgnStream*, DgnPrimArray<unsigned long long> const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4436668 (    0x5c) void writeObject<unsigned short>(DgnStream*, DgnPrimFixArray<unsigned short> const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44366c4 (    0x78) void readObject<unsigned int>(DgnStream*, DgnPrimArray<unsigned int>&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443673c (    0x9c) void readObject<char>(DgnStream*, DgnPrimArray<char>&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44367d8 (    0x78) void readObject<unsigned short>(DgnStream*, DgnPrimArray<unsigned short>&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4436850 (    0x78) DgnIOwnArray<CTPelAccum*>::reallocElts(unsigned int, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44368c8 (    0x4c) DgnPrimArray<char>::~DgnPrimArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4436914 (    0x4c) DgnPrimArray<unsigned long long>::~DgnPrimArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4436960 (    0x4c) DgnPrimArray<unsigned short>::~DgnPrimArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44369ac (    0x54) HuffmanDecoder<unsigned int, unsigned long long>::~HuffmanDecoder() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4436a00 (    0x98) unsigned long sizeObject<HuffmanSymbol<unsigned int, unsigned long long>*>(DgnIOwnArray<HuffmanSymbol<unsigned int, unsigned long long>*> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4436a98 (    0x98) HuffmanDecoder<unsigned int, unsigned long long>::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4436b30 (    0x70) unsigned long sizeObject<bool>(DgnPrimArray<bool> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4436ba0 (    0x6c) DgnPrimArray<bool>::reallocElts(unsigned int, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4436c0c (    0x40) DgnIArray<unsigned char*>::~DgnIArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4436c4c (    0x3c) DgnPool::~DgnPool() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4436c88 (    0x8c) DgnPool::deleteAllWithoutDestroying() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4436d14 (    0x5c) void writeObject<unsigned char>(DgnStream*, DgnPrimFixArray<unsigned char> const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4436d70 (   0x128) DgnPool::addChunk() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4436e98 (    0x9c) void readObject<unsigned char>(DgnStream*, DgnPrimArray<unsigned char>&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4436f34 (    0xe0) TSegmenter::TSegmenter(char const*, TLocaleInfo const&, wchar_t const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4437014 (     0x4) TProp<unsigned long>::~TProp() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4437018 (     0x4) TSegmenter::TSegmenter(char const*, TLocaleInfo const&, wchar_t const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443701c (    0x40) TSegmenter::~TSegmenter() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443705c (     0x4) TSegmenter::~TSegmenter() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4437060 (  0x1370) TSegmenter::findSegmentEnd(char const*, TSegment::TType&, unsigned long&, TBuffer<wchar_t>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44383d0 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001b44383e8 (    0x90) TLocaleInfo::getGlobalLocaleInfo() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4438478 (    0x38) unicodeIsJunk(wchar_t, TLocaleInfo const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44384b0 (    0x94) unicodeIsDiacritic(wchar_t, TLocaleInfo const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4438544 (   0x158) isComposableDiacriticInContext(wchar_t, wchar_t, TLocaleInfo const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443869c (    0x80) TBuffer<wchar_t>::c_str() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443871c (   0x1e0) TSegmenter::getSegment(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44388fc (    0x2c) std::__1::vector<TSegment const*, std::__1::allocator<TSegment const*>>::resize(unsigned long, TSegment const* const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4438928 (    0xe4) TSegmenter::getPreviousSegment(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4438a0c (   0x200) TLocaleInfo::isPunct(wchar_t) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4438c0c (    0x5c) isKatakana(wchar_t, TLocaleInfo const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4438c68 (    0xa4) isSmallKatakana(wchar_t, TLocaleInfo const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4438d0c (    0x68) isSmallHiragana(wchar_t, TLocaleInfo const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4438d74 (     0x4) TProp<unsigned long>::~TProp() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4438d78 (     0x4) TProp<unsigned long>::onSet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4438d7c (   0x12c) std::__1::vector<TSegment const*, std::__1::allocator<TSegment const*>>::__append(unsigned long, TSegment const* const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4438ea8 (    0x18) std::__1::vector<TSegment const*, std::__1::allocator<TSegment const*>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4438ec0 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<TSegment const*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<TSegment const*>>(std::__1::allocator<TSegment const*>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4438ef8 (     0x4) MrecInitModule_scollarr_fileutil() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4438efc (    0x88) StringIdCollSearchCmp(void const*, void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4438f84 (    0x60) StringIdCollSearchCmpFromStringId(void const*, void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4438fe4 (    0x9c) MrecInitModule_filesrc_audiosrc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4439080 (    0xe4) SnapTime::recordTime(bool, bool, bool, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4439164 (    0x48) MrecInitLibrary_prefilt() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44391ac (    0x28) MrecInitLibrarySet_throughPrefilt() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44391d4 (     0x4) MrecInitModule_extsrc_audiosrc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44391d8 (    0x68) DgnPrimArray<bool>::DgnPrimArray(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4439240 (     0x4) MrecInitModule_featgen_sigproc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4439244 (    0xf0) unsigned long sizeObject<DgnPrimArray<double>>(DgnArray<DgnPrimArray<double>> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4439334 (    0x34) void DgnDelete<WaveData>(WaveData*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4439368 (    0x4c) DgnPrimArray<double>::~DgnPrimArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44393b4 (    0x64) DgnArray<DgnPrimArray<double>>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4439418 (    0x78) DgnPrimStructArray<WordLMTransducerArc>::reallocElts(unsigned int, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4439490 (    0x80) DgnPrimArray<double>::copyArraySlice(DgnPrimArray<double> const&, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4439510 (     0x4) MrecInitModule_sdpro_sdapi() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4439514 (     0x4) MrecInitModule_sprocess_sigproc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4439518 (    0x54) sizeObject(PerFrameUttInfo const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443956c (    0x6c) unsigned long sizeObject<HiddenState>(DgnArray<HiddenState> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44395d8 (    0x6c) unsigned long sizeObject<Uns8SpecialMapItem>(DgnArray<Uns8SpecialMapItem> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4439644 (    0x80) DgnPrimArray<SubFileExtension>::copyArraySlice(DgnPrimArray<SubFileExtension> const&, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44396c4 (    0x9c) MrecInitModule_hiersc_pel() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4439760 (    0xe8) HS_PackedIntGenoneScoringFunction(PelScorer const*, unsigned short, unsigned int, unsigned short*, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4439848 (   0x194) HS_PackedIntPelScoringFunction(PelScorer const*, unsigned short, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44399dc (   0x1cc) HScorer::HScorer(PelMgr const*, GenoneClassTree const*, VarClassMgr const*, FmpeMgr const*, NeuralNet const*, Imelda const*, bool, double, bool, double, DgnPrimArray<unsigned int> const&, DgnPrimArray<unsigned int> const&, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4439ba8 (   0x14c) HScorerLevel::init(PelMgr const*, unsigned int, bool, HScorer const*, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4439cf4 (    0x1c) HScorer::HScorer(PelMgr const*, GenoneClassTree const*, VarClassMgr const*, FmpeMgr const*, NeuralNet const*, Imelda const*, bool, double, bool, double, DgnPrimArray<unsigned int> const&, DgnPrimArray<unsigned int> const&, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4439d10 (    0x74) HScorer::~HScorer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4439d84 (     0x4) HScorer::~HScorer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4439d88 (    0x28) HScorer::~HScorer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4439db0 (   0x100) HScorer::getGenoneScoringFunction() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4439eb0 (   0x100) HScorer::getPelScoringFunction() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4439fb0 (    0x14) HScorer::beginPelSyncRecog(unsigned int, AdaptConfig const*, CTFTMgr const*, bool, bool, bool, double) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4439fc4 (     0x4) HScorer::endPelSyncRecog() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4439fc8 (   0x1ec) HScorer::beginPelFrame(int, bool, DgnPrimArray<unsigned char> const*, PelStats*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443a1b4 (   0x114) HScorer::computeHierarchy(DgnPrimArray<unsigned char> const*, unsigned long long*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443a2c8 (    0x44) HScorer::endPelFrame(int, PelStats*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443a30c (   0x224) HScorerLevel::computeHierarchy(DgnPrimArray<unsigned char> const*, unsigned long long*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443a530 (    0x50) HScorer::computeScoreForActivePelsThisFrame(BitArray const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443a580 (    0x78) HScorerLevel::getHierarchyComponentScorePackedInt(DgnPrimArray<unsigned char> const*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443a5f8 (    0x80) QuickFindFirstK::quickfindFirstK(DgnArray<SScoreIdxPair>&, int, int, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443a678 (    0xa8) QuickFindFirstK::quickfindFirstKpartition(DgnArray<SScoreIdxPair>&, int, int, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443a720 (    0x44) DgnArray<HScorerLevel>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443a764 (    0x84) DgnArray<HScorerLevel>::destructAt(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443a7e8 (    0x8c) DgnArray<HScorerLevel>::reallocElts(unsigned int, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443a874 (    0x40) DgnArray<SScoreIdxPair>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443a8b4 (    0x4c) DgnPrimArray<bool>::~DgnPrimArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443a900 (     0x4) MrecInitModule_dsmsetdata_mrecutil() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443a904 (   0x3a8) DSMHandle::open(DgnString const&, DgnString const&, DgnString const&, unsigned long long, bool, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443acac (    0x38) DSMMappedPtr::remap(int, bool, bool*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443ace4 (    0x6c) DSMGlobalRecord::copyAsShared(DSMGlobalRecord const&, B_DSMGlobalState) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443ad50 (    0x24) DSMGlobalRecord::reset() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443ad74 (    0x9c) DSMSetData::checkMaybeResetGlobalRecord(DSMGlobalRecord&, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443ae10 (    0x38) DSMGlobalRecord::isProcessAlive(unsigned long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443ae48 (   0x680) DSMSetData::refMaybeCreateSetRecordBlobEx() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443b4c8 (    0xb0) DSMHandle::unlink(DgnString const&, DgnString const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443b578 (   0x1a0) DSMSetData::getDSMName(unsigned int, unsigned int, unsigned int, DgnString*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443b718 (    0x80) DSMSetData::getSysReserveName(unsigned int, unsigned int, DgnString*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443b798 (    0x80) DSMSetData::getSysName(unsigned int, unsigned int, DgnString*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443b818 (   0x584) DSMSetData::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443bd9c (    0xc0) unsigned long sizeObject<DSMGlobalRecord>(DgnPrimStructArray<DSMGlobalRecord> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443be5c (    0xf0) unsigned long sizeObject<DSMLocalRecord>(DgnArray<DSMLocalRecord> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443bf4c (     0x4) DSMShmOperation::~DSMShmOperation() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443bf50 (     0x4) DSMShmOperation::~DSMShmOperation() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443bf54 (    0x30) DSMShmOperation::open(char const*, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443bf84 (     0x8) DSMShmOperation::unlink(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443bf8c (     0x4) DSMFileOperation::~DSMFileOperation() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443bf90 (     0x4) DSMFileOperation::~DSMFileOperation() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443bf94 (    0x30) DSMFileOperation::open(char const*, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443bfc4 (     0x8) DSMFileOperation::unlink(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443bfcc (    0x44) DSMMappedPtr::~DSMMappedPtr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443c010 (    0x40) DSMHandle::~DSMHandle() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443c050 (    0x8c) DgnArray<DgnCollArray<unsigned int, WordList>>::reallocElts(unsigned int, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443c0dc (    0x80) DgnArray<DSMLocalRecord>::destructAt(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443c15c (    0x48) Latch<DgnSharedLock, TimeoutLatchAdapter>::~Latch() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443c1a4 (     0x4) MrecInitModule_adfilt_sigproc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443c1a8 (     0x4) MrecInitModule_dobj_dfutil() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443c1ac (    0xb8) writeObjectChecksum(DgnStream*, unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443c264 (   0x16c) readObjectChecksumAndVerify(DgnStream*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443c3d0 (    0x70) writeObject(DgnStream*, unsigned char const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443c440 (    0x74) readObject(DgnStream*, unsigned char&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443c4b4 (    0x70) writeObject(DgnStream*, short const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443c524 (    0x74) readObject(DgnStream*, short&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443c598 (    0x70) writeObject(DgnStream*, unsigned short const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443c608 (    0x74) readObject(DgnStream*, unsigned short&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443c67c (    0x70) writeObject(DgnStream*, int const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443c6ec (    0x74) readObject(DgnStream*, int&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443c760 (    0x70) writeObject(DgnStream*, unsigned int const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443c7d0 (    0x74) readObject(DgnStream*, unsigned int&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443c844 (    0x74) writeObject(DgnStream*, unsigned long long const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443c8b8 (    0x7c) readObject(DgnStream*, unsigned long long&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443c934 (    0x8c) writeObject(DgnStream*, double const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443c9c0 (    0x88) readObject(DgnStream*, double&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443ca48 (    0x68) writeObject(DgnStream*, bool const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443cab0 (    0x7c) readObject(DgnStream*, bool&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443cb2c (    0xd0) writeObjectArray(DgnStream*, char const*, unsigned int, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443cbfc (   0x178) readObjectArray(DgnStream*, char*, unsigned int, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443cd74 (    0xd0) writeObjectArray(DgnStream*, unsigned char const*, unsigned int, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443ce44 (   0x170) readObjectArray(DgnStream*, unsigned char*, unsigned int, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443cfb4 (    0xd0) writeObjectArray(DgnStream*, short const*, unsigned int, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443d084 (   0x178) readObjectArray(DgnStream*, short*, unsigned int, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443d1fc (    0xd0) writeObjectArray(DgnStream*, unsigned short const*, unsigned int, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443d2cc (   0x170) readObjectArray(DgnStream*, unsigned short*, unsigned int, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443d43c (    0xcc) writeObjectArray(DgnStream*, int const*, unsigned int, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443d508 (   0x170) readObjectArray(DgnStream*, int*, unsigned int, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443d678 (    0xcc) writeObjectArray(DgnStream*, unsigned int const*, unsigned int, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443d744 (   0x170) readObjectArray(DgnStream*, unsigned int*, unsigned int, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443d8b4 (    0xd4) writeObjectArray(DgnStream*, long long const*, unsigned int, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443d988 (    0xd4) writeObjectArray(DgnStream*, unsigned long long const*, unsigned int, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443da5c (    0xf8) writeObjectArray(DgnStream*, double const*, unsigned int, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443db54 (   0x190) readObjectArray(DgnStream*, double*, unsigned int, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443dce4 (    0x9c) writeObjectArray(DgnStream*, bool const*, unsigned int, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443dd80 (    0x9c) readObjectArray(DgnStream*, bool*, unsigned int, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443de1c (    0x50) readObject(RealDFileSubFileStream*, unsigned short&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443de6c (    0x50) readObject(RealDFileSubFileStream*, unsigned int&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443debc (   0x128) readObjectArray(RealDFileSubFileStream*, unsigned char*, unsigned int, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443dfe4 (   0x130) readObjectArray(RealDFileSubFileStream*, short*, unsigned int, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443e114 (   0x128) readObjectArray(RealDFileSubFileStream*, unsigned short*, unsigned int, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443e23c (   0x128) readObjectArray(RealDFileSubFileStream*, unsigned int*, unsigned int, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443e364 (    0xac) writeObject(DgnStream*, DgnString const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443e410 (    0x9c) readObject(DgnStream*, DgnString&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443e4ac (    0x90) writeObject(DgnStream*, BitArray const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443e53c (    0xa0) readObject(DgnStream*, BitArray&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443e5dc (    0xf0) writeSharedObject(DgnSharedMemStream*, BitArray&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443e6cc (    0xf8) readSharedObject(DgnSharedMemStream*, BitArray&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443e7c4 (    0x68) writeObject(DgnStream*, BinaryIntScale const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443e82c (     0x4) writeObject(DgnStream*, DgnVector const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443e830 (    0x8c) void writeObject<double>(DgnStream*, DgnPrimFixArray<double> const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443e8bc (    0xcc) writeObject(DgnStream*, DgnMatrix const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443e988 (    0x60) RealDFileSubFileStream::readBytes(char*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443e9e8 (   0x178) RealDFileSubFileStream::basicRead(char*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443eb60 (    0xcc) RealDFile::doReadFromBigCache(unsigned int, unsigned int, char*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443ec2c (     0x4) MrecInitModule_uttfmgr_channel() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443ec30 (    0x4c) UttFileMgr::startupUttFileMgr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443ec7c (    0x70) IdMgr<unsigned int>::getNextId() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443ecec (    0xb0) IdMgr<unsigned int>::recycleId(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443ed9c (   0x3cc) UttFileMgr::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443f168 (    0xe0) DgnPrimQueue<unsigned int, DgnPrimArray<unsigned int>>::enqueue(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443f248 (    0x4c) DgnPrimQueue<unsigned int, DgnPrimArray<unsigned int>>::dequeue() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443f294 (    0xa0) DgnPrimQueue<unsigned int, DgnPrimArray<unsigned int>>::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443f334 (     0x4) MrecInitModule_sdpref_sdapi() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443f338 (   0x110) MrecInitModule_rulemgr_voc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443f448 (    0x78) Rule::~Rule() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443f4c0 (    0xec) Rule::Rule(Rule const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443f5ac (    0xe8) Rule::operator=(Rule const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443f694 (    0x94) DgnArray<DgnArray<ParseToken>>::operator==(DgnArray<DgnArray<ParseToken>> const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443f728 (   0x410) Rule::readRule(DgnStream*, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443fb38 (    0xa8) void readObject<StateSpec>(DgnStream*, DgnArray<StateSpec>&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443fbe0 (   0x114) void readObject<DgnArray<ParseToken>>(DgnStream*, DgnArray<DgnArray<ParseToken>>&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443fcf4 (    0xa8) void readObject<RuleDesc>(DgnStream*, DgnArray<RuleDesc>&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443fd9c (    0xd0) void readObject<RuleSpec>(DgnStream*, DgnArray<RuleSpec>&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443fe6c (    0x64) DgnArray<DgnArray<ParseToken>>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b443fed0 (   0x140) writeObject(DgnStream*, Rule const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4440010 (    0x88) void writeObject<DgnArray<ParseToken>>(DgnStream*, DgnArray<DgnArray<ParseToken>> const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4440098 (    0x88) void writeObject<RuleDesc>(DgnStream*, DgnArray<RuleDesc> const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4440120 (   0x110) sizeObject(Rule const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4440230 (   0x100) unsigned long sizeObject<DgnArray<ParseToken>>(DgnArray<DgnArray<ParseToken>> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4440330 (    0x70) unsigned long sizeObject<PredState>(DgnArray<PredState> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44403a0 (    0x78) unsigned long sizeObject<short>(DgnPrimArray<short> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4440418 (    0xfc) RuleDesc::writeObject(DgnStream*, unsigned int&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4440514 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001b4440528 (   0x134) RuleDesc::readObject(DgnStream*, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b444065c (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001b4440670 (    0xd0) RuleMgr::RuleMgr(Voc*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4440740 (   0x1c4) RuleMgr::newRule(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4440904 (     0x4) RuleMgr::RuleMgr(Voc*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4440908 (   0x1bc) RuleMgr::~RuleMgr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4440ac4 (    0x94) RuleMgr::emptyAllRuleDescsNoRebuild() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4440b58 (    0x34) void DgnDelete<EnvMgr>(EnvMgr*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4440b8c (     0x4) RuleMgr::~RuleMgr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4440b90 (   0x9c0) RuleMgr::setDesc(unsigned short, DgnArray<RuleDesc> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4441550 (    0x94) RuleMgr::computeOneRuleIdNameChecksum(unsigned short) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44415e4 (    0x78) RuleMgr::computeRuleIdNameChecksum() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b444165c (   0x294) RuleMgr::loadRuleMgr(DFile*, DFileChecksums*, bool, bool*, unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44418f0 (   0x168) void readObject<Rule>(DgnStream*, DgnArray<Rule>&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4441a58 (    0x10) RuleMgr::isEmpty() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4441a68 (   0x144) RuleMgr::saveRuleMgr(DFile*, DFileChecksums*, bool, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4441bac (    0x88) void writeObject<Rule>(DgnStream*, DgnArray<Rule> const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4441c34 (   0x6e0) RuleMgr::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4442314 (   0x128) unsigned long sizeObject<Rule>(DgnArray<Rule> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b444243c (    0x90) RuleMgr::verifyRule(unsigned short, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44424cc (    0x3c) RuleMgr::getParent(unsigned short) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4442508 (    0x3c) RuleMgr::getLMAllowed(unsigned short) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4442544 (    0x3c) RuleMgr::getCoartAllowed(unsigned short) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4442580 (    0x3c) RuleMgr::getPrefilteringAllowed(unsigned short) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44425bc (    0x3c) RuleMgr::getDesc(unsigned short) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44425f8 (    0x98) RuleMgr::addBuiltRef(unsigned short, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4442690 (    0xfc) RuleMgr::removeBuiltRef(unsigned short, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b444278c (    0xf4) RuleMgr::removeIncludingRule(unsigned short, unsigned short, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4442880 (    0xe8) RuleMgr::addIncludingRule(unsigned short, unsigned short, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4442968 (   0x26c) RuleMgr::killStatesOfRule(unsigned short, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4442bd4 (    0x6c) RuleMgr::invalidateAllStates() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4442c40 (   0x174) RuleMgr::preAllocToEnsureRuleId(unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4442db4 (   0x1e8) RuleMgr::newRule(unsigned int, unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4442f9c (   0x148) RuleMgr::verifyRuleNotRecursivelyIncluded(unsigned short, unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44430e4 (    0x64) RuleMgr::endUsingTempMarks() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4443148 (     0x4) RuleMgr::beginRecursiveOperation() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b444314c (     0x4) RuleMgr::endRecursiveOperation() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4443150 (   0x440) RuleMgr::verifyNewDesc(DgnArray<RuleDesc> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4443590 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001b44435a4 (    0xdc) HashKEV<unsigned int, unsigned int, CWIDScope>::add(unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4443680 (    0x84) HashKEV<ComposeLatticeNode, ComposeLatticeNode, ComposeLatticeNode>::removeAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4443704 (     0x4) HashKEV<unsigned int, unsigned int, CWIDScope>::~HashKEV() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4443708 (    0xe4) RuleMgr::getHandle(unsigned int, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44437ec (    0xfc) RuleMgr::setName(unsigned short, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44438e8 (    0x50) RuleMgr::getName(unsigned short) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4443938 (    0x64) RuleMgr::setLMAllowed(unsigned short, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b444399c (    0x64) RuleMgr::setCoartAllowed(unsigned short, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4443a00 (    0x64) RuleMgr::setPrefilteringAllowed(unsigned short, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4443a64 (   0x120) RuleMgr::fixAlteredState(unsigned short, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4443b84 (    0x6c) RuleMgr::alteredStateInRule(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4443bf0 (    0x40) DgnArray<RuleDesc>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4443c30 (   0x140) DgnArray<DgnArray<ParseToken>>::copyArraySlice(DgnArray<DgnArray<ParseToken>> const&, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4443d70 (    0xa4) DgnArray<RuleDesc>::copyArraySlice(DgnArray<RuleDesc> const&, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4443e14 (    0x8c) DgnPrimStructArray<NBestQueueItem>::reallocElts(unsigned int, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4443ea0 (    0x80) DgnPrimArray<short>::copyArraySlice(DgnPrimArray<short> const&, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4443f20 (    0x90) DgnArray<ParseToken>::operator==(DgnArray<ParseToken> const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4443fb0 (    0x40) DgnArray<StateSpec>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4443ff0 (    0x40) DgnArray<RuleSpec>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4444030 (    0xa8) void readObject<ParseToken>(DgnStream*, DgnArray<ParseToken>&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44440d8 (    0x88) void writeObject<ParseToken>(DgnStream*, DgnArray<ParseToken> const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4444160 (    0xcc) unsigned long sizeObject<ParseToken>(DgnArray<ParseToken> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b444422c (    0x68) DgnArray<Rule>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4444294 (    0x90) DgnArray<Rule>::reallocElts(unsigned int, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4444324 (    0x40) DgnArray<ParseToken>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4444364 (    0x88) DgnArray<ParseToken>::copyArraySlice(DgnArray<ParseToken> const&, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44443ec (    0x4c) DgnPrimArray<B_RuleOpType>::~DgnPrimArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4444438 (    0xdc) HashKEV<unsigned int, unsigned int, CWIDScope>::HashKEV(char const*, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4444514 (    0x28) HashKEV<unsigned int, unsigned int, CWIDScope>::~HashKEV() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b444453c (    0x50) Hash<CWIDACPair, CWIDACPair, CWIDACPair, BigScorePair>::computeDepth() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b444458c (    0x70) Hash<CWIDACPair, CWIDACPair, CWIDACPair, BigScorePair>::initBuckets() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44445fc (    0x40) DgnIFixArray<BucketLinkKEV<unsigned int>*>::~DgnIFixArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b444463c (    0x74) HashKEV<unsigned int, unsigned int, CWIDScope>::~HashKEV() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44446b0 (   0x110) HashKEV<unsigned int, unsigned int, CWIDScope>::upSize(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44447c0 (    0x88) DgnIFixArray<BucketLink<CWIDACPair, BigScorePair>*>::copyArraySlice(DgnIFixArray<BucketLink<CWIDACPair, BigScorePair>*> const&, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4444848 (     0x4) MrecInitModule_phnmgr_phoneme() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b444484c (    0xb4) PhnMgr::PhnMgr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4444900 (     0x4) PhnMgr::PhnMgr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4444904 (    0x40) PhnMgr::~PhnMgr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4444944 (     0x4) PhnMgr::~PhnMgr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4444948 (   0x4f4) PhnMgr::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4444e3c (    0xf4) unsigned long sizeObject<DgnString>(DgnArray<DgnString> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4444f30 (    0xc4) PhnMgr::getPublicPhnIndexArray(DgnPrimArray<unsigned short>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4444ff4 (    0x94) PhnMgr::getFullAcousticExitContext(PhnIndexSet*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4445088 (    0x98) PhnMgr::verifyPhonemePron(DgnPrimArray<unsigned short> const&, char const*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4445120 (    0x98) PhnMgr::verifyPhonemePron2(DgnPrimArray<unsigned short> const&, char const*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44451b8 (   0x16c) PhnMgr::addPhone(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4445324 (   0x570) PhnMgr::loadPhnMgrText(DFile*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4445894 (   0x28c) PhnMgr::savePhnMgrText(DFile*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4445b20 (   0x1e0) PhnMgr::loadPhnMgr(DFile*, DFileChecksums*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4445d00 (   0x114) void readObject<DgnString>(DgnStream*, DgnArray<DgnString>&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4445e14 (   0x130) PhnMgr::savePhnMgr(DFile*, DFileChecksums*, bool, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4445f44 (    0x88) void writeObject<DgnString>(DgnStream*, DgnArray<DgnString> const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4445fcc (    0xf0) PhnMgr::operator==(PhnMgr const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44460bc (    0xfc) PhnMgr::getPhnIndex(char const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44461b8 (    0x64) DgnArray<DgnString>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b444621c (   0x130) DgnArray<DgnString>::copyArraySlice(DgnArray<DgnString> const&, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b444634c (    0x40) DgnArray<DgnTextFileVersion>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b444638c (    0x4c) DgnPrimArray<B_DgnTextFileFieldFormat>::~DgnPrimArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44463d8 (    0x8c) DgnArray<DgnString>::find(DgnString const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4446464 (    0xbc) DgnArray<DgnString>::operator==(DgnArray<DgnString> const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4446520 (     0x4) MrecInitModule_fputil_mrecutil() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4446524 (    0xdc) fround(double, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4446600 (   0x114) eround(double, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4446714 (     0x4) MrecInitModule_window_sigproc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4446718 (     0x4) MrecInitModule_cwidac_voc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b444671c (     0x4) StateIdPair::~StateIdPair() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4446720 (    0x10) StateIdPair::computeHash(StateIdPair const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4446730 (    0x1c) sizeObject(StateIdPair const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b444674c (     0x4) ParseTokenRange::~ParseTokenRange() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4446750 (    0x1c) sizeObject(ParseTokenRange const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b444676c (    0x84) CWIDAC::computeHash(CWIDAC const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44467f0 (    0x10) sizeObject(CWIDAC const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4446800 (     0x4) CWIDACPair::~CWIDACPair() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4446804 (    0x88) CWIDAC::cmp(CWIDAC const&, CWIDAC const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b444688c (    0x38) CWIDACPair::computeHash(CWIDACPair const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44468c4 (    0x10) sizeObject(CWIDACPair const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44468d4 (     0x4) MrecInitModule_featsel_sigproc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44468d8 (     0x4) MrecInitModule_sdchan_sdapi() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44468dc (     0x4) MrecInitModule_udpcache_user() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44468e0 (   0x130) StartupUserDeltaParamSpecMgr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4446a10 (    0xb0) UserDeltaParamSet::UserDeltaParamSet(char const*, B_ParamSetType, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4446ac0 (     0x4) UserDeltaParamSet::UserDeltaParamSet(char const*, B_ParamSetType, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4446ac4 (    0x94) UserDeltaParamSet::UserDeltaParamSet(UserDeltaParamSet const&, char const*, B_ParamSetType, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4446b58 (    0x80) UserDeltaParamSet::setDefaults() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4446bd8 (    0x4c) UserDeltaParamSet::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4446c24 (    0x30) ParamSetBase::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4446c54 (    0xbc) UserDeltaParamSet::getBoolParameter(unsigned short, B_ParamQueryMode) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4446d10 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4446d20 (   0x2bc) UserDeltaParamSet::getIntParameter(unsigned short, B_ParamQueryMode) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4446fdc (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4446fec (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4446ffc (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b444700c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b444701c (    0xbc) UserDeltaParamSet::getDoubleParameter(unsigned short, B_ParamQueryMode) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44470d8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b44470e8 (    0xbc) UserDeltaParamSet::getStringParameter(unsigned short, B_ParamQueryMode) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44471a4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b44471b4 (   0x23c) UserDeltaParamSet::getEnumParameter(unsigned short, B_ParamQueryMode) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44473f0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4447400 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4447410 (    0x44) EnumParamSpec::getDefault() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4447454 (    0x50) EnumParamSpec::getMinVal() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44474a4 (    0x50) EnumParamSpec::getMaxVal() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44474f4 (    0xc8) UserDeltaParamSet::setBoolParameter(unsigned short, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44475bc (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b44475cc (   0x23c) UserDeltaParamSet::setIntParameter(unsigned short, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4447808 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4447818 (    0xc8) UserDeltaParamSet::setDoubleParameter(unsigned short, double) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44478e0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b44478f0 (    0xc8) UserDeltaParamSet::setStringParameter(unsigned short, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44479b8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b44479c8 (   0x16c) UserDeltaParamSet::setEnumParameter(unsigned short, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4447b34 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4447b44 (    0x44) UserDeltaParamSet::~UserDeltaParamSet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4447b88 (    0x54) UserDeltaParamSet::~UserDeltaParamSet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4447bdc (    0xf8) TIntegrityChecker::operator()(TSymbol const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4447cd4 (   0x484) TGrammarCompiler::TGrammarCompiler(TLocaleInfo const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4448158 (     0x4) TGrammarCompiler::TGrammarCompiler(TLocaleInfo const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b444815c (   0x108) TGrammarCompiler::~TGrammarCompiler() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4448264 (     0x4) TGrammarCompiler::~TGrammarCompiler() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4448268 (    0x28) TGrammarCompiler::~TGrammarCompiler() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4448290 (   0x15c) TGrammarCompiler::registerFunction(wchar_t const*, TGrammarCompiler::TArgument (*)(TGrammarCompiler::TArgument const*, unsigned long, void*, void*, TAllocator&), unsigned long, unsigned long, void*, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44483ec (  0x1334) TGrammarCompiler::loadRule(TLexer&, TTerminalChecker*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4449720 (   0x3fc) nextToken(TLexer&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4449b1c (    0x50) TSyntaxException::~TSyntaxException() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4449b6c (   0x3d0) compileCode(TLexer&, TBuffer<wchar_t>&, std::__1::set<wchar_t const*, TWideCharCompare, std::__1::allocator<wchar_t const*>> const&, std::__1::vector<TFunctionDescr*, std::__1::allocator<TFunctionDescr*>> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4449f3c (   0x308) TGrammarCompiler::loadRules(TLexer&, TTerminalChecker*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b444a244 (   0x164) TGrammarCompiler::registerRules(TInputStream&, TTerminalChecker*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b444a3a8 (   0x210) TGrammarCompiler::finalize() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b444a5b8 (   0x3f0) TGrammarCompiler::getAttributeValue(TProduction const*, wchar_t const*, TAllocator&, bool*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b444a9a8 (    0xa0) getAttributeValue(wchar_t const*, TAttribute const* const*, bool*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b444aa48 (   0x134) TGrammarCompiler::compareData(TProduction const*, TProduction const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b444ab7c (    0xdc) TGrammarCompiler::logData(TProduction const*, std::__1::basic_ostream<char, std::__1::char_traits<char>>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b444ac58 (  0x1b08) TGrammarCompiler::makeData(TChartInfo&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b444c760 (    0x30) (null) [FUNC, FunctionStarts] 
                0x00000001b444c790 (    0x4c) (null) [FUNC, FunctionStarts] 
                0x00000001b444c7dc (    0x2c) (null) [FUNC, FunctionStarts] 
                0x00000001b444c808 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001b444c81c (    0x20) (null) [FUNC, FunctionStarts] 
                0x00000001b444c83c (    0x2c) std::__1::vector<TGrammarCompiler::TArgument, std::__1::allocator<TGrammarCompiler::TArgument>>::resize(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b444c868 (    0xa0) TGrammarCompiler::makeClientData(wchar_t const**, TGrammarCompiler::TArgument const*, unsigned long, TAllocator&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b444c908 (    0x7c) TFunctionDescr::TFunctionDescr(wchar_t const*, TGrammarCompiler::TArgument (*)(TGrammarCompiler::TArgument const*, unsigned long, void*, void*, TAllocator&), unsigned long, unsigned long, void*, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b444c984 (    0x60) TSyntaxException::~TSyntaxException() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b444c9e4 (   0xeb0) compileInstruction(TLexer&, TBuffer<wchar_t>&, std::__1::set<wchar_t const*, TWideCharCompare, std::__1::allocator<wchar_t const*>> const&, std::__1::vector<TFunctionDescr*, std::__1::allocator<TFunctionDescr*>> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b444d894 (  0x249c) compileExpression(TLexer&, TBuffer<wchar_t>&, std::__1::set<wchar_t const*, TWideCharCompare, std::__1::allocator<wchar_t const*>> const&, std::__1::vector<TFunctionDescr*, std::__1::allocator<TFunctionDescr*>> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b444fd30 (    0x24) (null) [FUNC, FunctionStarts] 
                0x00000001b444fd54 (   0x26c) getOperatorId(wchar_t const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b444ffc0 (    0x18) std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>::__throw_out_of_range[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b444ffd8 (    0x5c) std::__1::__throw_out_of_range[abi:v160006](char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4450034 (    0x34) std::out_of_range::out_of_range[abi:v160006](char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4450068 (    0x50) TLexer::~TLexer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44500b8 (    0x18) std::__1::vector<TFunctionDescr*, std::__1::allocator<TFunctionDescr*>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44500d0 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<TFunctionDescr*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<TFunctionDescr*>>(std::__1::allocator<TFunctionDescr*>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4450108 (    0x18) std::__1::vector<TRule*, std::__1::allocator<TRule*>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4450120 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<TRule*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<TRule*>>(std::__1::allocator<TRule*>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4450158 (    0x18) std::__1::vector<wchar_t*, std::__1::allocator<wchar_t*>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4450170 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<wchar_t*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<wchar_t*>>(std::__1::allocator<wchar_t*>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44501a8 (    0x7c) void TGrammar::forEachNonTerminal<TIntegrityChecker>(TIntegrityChecker&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4450224 (    0x5c) void TGrammar::forEachTerminal<TIntegrityChecker>(TIntegrityChecker&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4450280 (   0x12c) std::__1::vector<TGrammarCompiler::TArgument, std::__1::allocator<TGrammarCompiler::TArgument>>::__append(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44503ac (    0x18) std::__1::vector<TGrammarCompiler::TArgument, std::__1::allocator<TGrammarCompiler::TArgument>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44503c4 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<TGrammarCompiler::TArgument>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<TGrammarCompiler::TArgument>>(std::__1::allocator<TGrammarCompiler::TArgument>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44503fc (    0x24) getItnControlCategory(TPItnRuleControlName_fake**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4450420 (    0x54) TItnControlState::isSet() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4450474 (   0x284) TItnControlState::set(std::__1::vector<TItnControl, std::__1::allocator<TItnControl>> const&, bool, bool, bool, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44506f8 (     0x4) MrecInitModule_sdenvh_sdapi() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44506fc (    0xf0) SDEnvHolder_New [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44507ec (   0x268) SDEnvHolder_NewFromFile [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4450a54 (   0x358) SDEnvHolder_Save [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4450dac (   0x128) SDEnvHolder_Delete [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4450ed4 (   0x16c) TLocaleInfo::unicodeToMultiByte(wchar_t, TBuffer<char>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4451040 (    0x58) TLocaleInfo::unicodeToMultiByte(wchar_t const*, TBuffer<char>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4451098 (   0x148) TLocaleInfo::unicodeToMultiByte(wchar_t const*, char*, unsigned long) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44511e0 (   0x124) TLocaleInfo::multiByteToUnicode(char const*, wchar_t&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4451304 (    0x94) TLocaleInfo::multiByteToUnicode(char const*, TBuffer<wchar_t>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4451398 (    0xbc) TLocaleInfo::multiByteToUnicode(char const*, unsigned long, TBuffer<wchar_t>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4451454 (    0xf4) TLocaleInfo::unicodeStringCompare(wchar_t const*, wchar_t const*, bool, unsigned long) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4451548 (   0x14c) TBuffer<char>::insert(unsigned long, char const*, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4451694 (     0x4) MrecInitModule_sdglobalparam_sdapi() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4451698 (    0x54) MrecInitLibrary_dfutil() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44516ec (    0x28) MrecInitLibrarySet_throughDfutil() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4451714 (     0x4) MrecInitModule_mrecctl_recogctl() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4451718 (    0x3c) StartupMrec(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4451754 (   0x280) MrecPrintSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44519d4 (     0x4) MrecInitModule_mspro_mrecutil() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44519d8 (     0x4) MrecInitModule_msgform_mrecutil() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44519dc (    0xbc) MessageFormatPrefix(DgnBuffer*, bool, bool, unsigned int, char const*, int, char const*, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4451a98 (    0x4c) DgnThreadMgr::getCurrentThreadId() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4451ae4 (     0x4) MrecInitModule_dstring_mrecutil() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4451ae8 (     0x8) DgnString::DgnString() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4451af0 (    0xbc) DgnString::DgnString(DgnString const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4451bac (    0xbc) DgnString::allocBuffer(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4451c68 (     0x4) DgnString::DgnString(DgnString const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4451c6c (    0x88) DgnString::DgnString(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4451cf4 (     0x4) DgnString::DgnString(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4451cf8 (    0x78) DgnString::DgnString(char, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4451d70 (     0x4) DgnString::DgnString(char, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4451d74 (    0x7c) DgnString::DgnString(char const*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4451df0 (     0x4) DgnString::DgnString(char const*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4451df4 (     0x4) DgnString::~DgnString() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4451df8 (    0x74) DgnString::operator=(DgnString const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4451e6c (    0x78) DgnString::operator=(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4451ee4 (    0x68) DgnString::set(char const*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4451f4c (    0x78) DgnString::concatInPlace(unsigned int, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4451fc4 (   0x158) DgnString::printfAppend(char const*, ...) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b445211c (    0x94) DgnBuffer::getBuffer(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44521b0 (    0x44) DgnString::operator+=(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44521f4 (   0x15c) DgnString::stringPrintf(char const*, ...) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4452350 (   0x158) DgnString::makeStringPrintf(char const*, ...) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44524a8 (   0x2b0) DgnString::formatFloat(double, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4452758 (    0x4c) DgnString::find(char) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44527a4 (    0x48) DgnString::mid(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44527ec (    0x6c) operator+(DgnString const&, DgnString const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4452858 (    0x84) operator+(DgnString const&, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44528dc (    0x78) DgnString::left(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4452954 (   0x1dc) DgnString::atoui() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4452b30 (    0xbc) DgnString::atodb() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4452bec (    0x9c) DgnString::checkWhiteSpaceFree(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4452c88 (    0x68) DgnString::checkIntegral(bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4452cf0 (    0xcc) DgnString::checkReal() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4452dbc (     0x8) DgnString::formatStringInPlace(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4452dc4 (   0x14c) DgnString::appendFormattedString(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4452f10 (    0x60) DgnString::preAllocate(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4452f70 (    0x9c) DgnString::concatCopy(unsigned int, char const*, unsigned int, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b445300c (    0x6c) DgnString::appendCharWithGrow(char) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4453078 (    0x3c) DgnString::operator+=(char) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44530b4 (    0x40) DgnString::operator+=(DgnString const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44530f4 (    0x28) DgnString::getBuffer(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b445311c (    0x78) DgnString::setToMid(DgnString const&, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4453194 (    0x84) DgnString::setToMid(DgnString const&, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4453218 (    0x4c) DgnString::reverseFind(char) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4453264 (    0x4c) DgnString::find(char const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44532b0 (    0x6c) DgnString::compareNoCase(char const*, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b445331c (    0x90) DgnString::isPrefixNoCase(char const*, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44533ac (     0x4) sizeObject(DgnString const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44533b0 (   0x120) DgnBuffer::printfAppend(char const*, ...) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44534d0 (    0xe4) DgnBuffer::appendString(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44535b4 (   0xcc0) TItnRule::TItnRule(TWord const*, bool, bool, wchar_t const*, bool, TPItnTagHandle_fake** const*, TPItnTagHandle_fake** const*, TPItnTagHandle_fake** const*, TPItnTagHandle_fake** const*, TPItnRuleControl const*, TPItnRuleControl const*, TPParamHandle_fake**, bool, TItnParamManager*, TTagManager*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4454274 (   0x118) void std::__1::vector<TPItnTagHandle_fake**, std::__1::allocator<TPItnTagHandle_fake**>>::assign<TPItnTagHandle_fake** const*, 0>(TPItnTagHandle_fake** const*, TPItnTagHandle_fake** const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b445438c (    0x14) sortTags(TPItnTagHandle_fake** const&, TPItnTagHandle_fake** const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44543a0 (    0x3c) std::__1::vector<TItnControl, std::__1::allocator<TItnControl>>::resize(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44543dc (    0x20) sortControls(TItnControl const&, TItnControl const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44543fc (    0xbc) TItnRule::~TItnRule() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44544b8 (   0x23c) TItnRule::operator==(TItnRule&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44546f4 (    0x7c) bool std::__1::operator!=[abi:v160006]<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>(std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> const&, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4454770 (   0x5d0) TItnRule::save(TOutputStream&, TTagManager const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4454d40 (   0x81c) TItnRuleManager::TItnRuleManager(TInputStream&, TTagManager*, TLexicon*, TItnParamManager*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b445555c (  0x1d04) TItnRuleManager::addRule(TFileObject const*, bool, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4457260 (    0x70) TItnRuleManager::freeMemory() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44572d0 (     0x4) TItnRuleManager::TItnRuleManager(TInputStream&, TTagManager*, TLexicon*, TItnParamManager*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44572d4 (    0x80) TItnRuleManager::~TItnRuleManager() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4457354 (     0x4) TItnRuleManager::~TItnRuleManager() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4457358 (    0x28) TItnRuleManager::~TItnRuleManager() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4457380 (    0x90) TItnRuleManager::isCustomized() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4457410 (   0x254) formatContexts(TFileObject const*, TTagManager const*, std::__1::vector<TPItnTagHandle_fake**, std::__1::allocator<TPItnTagHandle_fake**>>&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4457664 (   0x1a8) TItnRuleManager::isAmbiguousRule(TItnRule const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b445780c (   0x170) TItnRuleManager::getRules(wchar_t const*, bool, TBuffer<TPItnRuleHandle_fake**>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b445797c (    0xd8) TBuffer<TPItnRuleHandle_fake**>::resize(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4457a54 (   0x2f4) TItnRuleManager::addRule(wchar_t const*, wchar_t const*, bool, TPItnTagHandle_fake** const*, TPItnTagHandle_fake** const*, TPItnTagHandle_fake** const*, TPItnTagHandle_fake** const*, TPItnRuleControl const*, TPItnRuleControl const*, TPParamHandle_fake**, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4457d48 (   0x14c) TItnRuleManager::deleteRule(TPItnRuleHandle_fake**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4457e94 (   0x158) TItnRuleManager::resetRules(wchar_t const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4457fec (   0x148) TItnRuleManager::resetAllRules() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4458134 (    0x2c) std::__1::vector<TItnRule*, std::__1::allocator<TItnRule*>>::resize(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4458160 (   0x274) TItnRuleManager::save(TOutputStream&, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44583d4 (   0x278) TItnRuleManager::importChanges(TItnRuleManager const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b445864c (   0x3ac) TItnRuleManager::importAdd(TItnRuleManager const&, TBuffer<TPItnRuleHandle_fake**> const&, TWord const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44589f8 (    0x2c) std::__1::vector<TPItnRuleControl, std::__1::allocator<TPItnRuleControl>>::resize(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4458a24 (    0x38) TItnRuleManager::getRuleWordName(TPItnRuleHandle_fake**, TBuffer<wchar_t>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4458a5c (    0x24) TItnRuleManager::getRuleRewriteForm(TPItnRuleHandle_fake**, TBuffer<wchar_t>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4458a80 (    0xb8) TItnRuleManager::getRuleTags(TPItnRuleHandle_fake**, bool, TBuffer<TPItnTagHandle_fake**>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4458b38 (    0xbc) TItnRuleManager::getRuleControls(TPItnRuleHandle_fake**, TBuffer<TPItnRuleControl>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4458bf4 (    0x14) TItnRuleManager::getRuleClientData(TPItnRuleHandle_fake**) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4458c08 (    0x14) TItnRuleManager::setRuleClientData(TPItnRuleHandle_fake**, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4458c1c (    0x30) TItnRuleManager::isValidRule(TPItnRuleHandle_fake**) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4458c4c (    0x14) TItnRuleManager::isRuleRewriteActive(TPItnRuleHandle_fake**) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4458c60 (    0x18) TItnRuleManager::getRuleParamSetting(TPItnRuleHandle_fake**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4458c78 (    0xa8) std::__1::vector<TPItnTagHandle_fake**, std::__1::allocator<TPItnTagHandle_fake**>>::reserve(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4458d20 (    0x18) std::__1::vector<TPItnTagHandle_fake**, std::__1::allocator<TPItnTagHandle_fake**>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4458d38 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<TPItnTagHandle_fake**>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<TPItnTagHandle_fake**>>(std::__1::allocator<TPItnTagHandle_fake**>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4458d70 (    0xb4) std::__1::vector<TPItnRuleControl, std::__1::allocator<TPItnRuleControl>>::reserve(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4458e24 (    0x18) std::__1::vector<TPItnRuleControl, std::__1::allocator<TPItnRuleControl>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4458e3c (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<TPItnRuleControl>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<TPItnRuleControl>>(std::__1::allocator<TPItnRuleControl>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4458e74 (    0x18) std::__1::vector<TItnControl, std::__1::allocator<TItnControl>>::__throw_out_of_range[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4458e8c (    0xd8) TBuffer<TPItnTagHandle_fake**>::resize(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4458f64 (    0xe8) TBuffer<TPItnRuleControl>::resize(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b445904c (   0x478) void std::__1::__introsort<std::__1::_ClassicAlgPolicy, bool (*&)(TPItnTagHandle_fake** const&, TPItnTagHandle_fake** const&), TPItnTagHandle_fake***>(TPItnTagHandle_fake***, TPItnTagHandle_fake***, bool (*&)(TPItnTagHandle_fake** const&, TPItnTagHandle_fake** const&), std::__1::iterator_traits<TPItnTagHandle_fake***>::difference_type) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44594c4 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001b44594dc (    0xe0) void std::__1::__insertion_sort_3[abi:v160006]<std::__1::_ClassicAlgPolicy, bool (*&)(TPItnTagHandle_fake** const&, TPItnTagHandle_fake** const&), TPItnTagHandle_fake***>(TPItnTagHandle_fake***, TPItnTagHandle_fake***, bool (*&)(TPItnTagHandle_fake** const&, TPItnTagHandle_fake** const&)) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44595bc (    0xf4) unsigned int std::__1::__sort3[abi:v160006]<std::__1::_ClassicAlgPolicy, bool (*&)(TPItnTagHandle_fake** const&, TPItnTagHandle_fake** const&), TPItnTagHandle_fake***>(TPItnTagHandle_fake***, TPItnTagHandle_fake***, TPItnTagHandle_fake***, bool (*&)(TPItnTagHandle_fake** const&, TPItnTagHandle_fake** const&)) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44596b0 (   0x1c4) bool std::__1::__insertion_sort_incomplete<bool (*&)(TPItnTagHandle_fake** const&, TPItnTagHandle_fake** const&), TPItnTagHandle_fake***>(TPItnTagHandle_fake***, TPItnTagHandle_fake***, bool (*&)(TPItnTagHandle_fake** const&, TPItnTagHandle_fake** const&)) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4459874 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001b445988c (    0xd0) unsigned int std::__1::__sort4[abi:v160006]<std::__1::_ClassicAlgPolicy, bool (*&)(TPItnTagHandle_fake** const&, TPItnTagHandle_fake** const&), TPItnTagHandle_fake***>(TPItnTagHandle_fake***, TPItnTagHandle_fake***, TPItnTagHandle_fake***, TPItnTagHandle_fake***, bool (*&)(TPItnTagHandle_fake** const&, TPItnTagHandle_fake** const&)) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b445995c (   0x1d4) TPItnTagHandle_fake*** std::__1::__partial_sort_impl[abi:v160006]<std::__1::_ClassicAlgPolicy, bool (*&)(TPItnTagHandle_fake** const&, TPItnTagHandle_fake** const&), TPItnTagHandle_fake***, TPItnTagHandle_fake***>(TPItnTagHandle_fake***, TPItnTagHandle_fake***, TPItnTagHandle_fake***, bool (*&)(TPItnTagHandle_fake** const&, TPItnTagHandle_fake** const&)) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4459b30 (   0x134) void std::__1::__sift_down[abi:v160006]<std::__1::_ClassicAlgPolicy, bool (*&)(TPItnTagHandle_fake** const&, TPItnTagHandle_fake** const&), TPItnTagHandle_fake***>(TPItnTagHandle_fake***, bool (*&)(TPItnTagHandle_fake** const&, TPItnTagHandle_fake** const&), std::__1::iterator_traits<TPItnTagHandle_fake***>::difference_type, TPItnTagHandle_fake***) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4459c64 (    0xa8) void std::__1::__sift_up[abi:v160006]<std::__1::_ClassicAlgPolicy, bool (*&)(TPItnTagHandle_fake** const&, TPItnTagHandle_fake** const&), TPItnTagHandle_fake***>(TPItnTagHandle_fake***, TPItnTagHandle_fake***, bool (*&)(TPItnTagHandle_fake** const&, TPItnTagHandle_fake** const&), std::__1::iterator_traits<TPItnTagHandle_fake***>::difference_type) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4459d0c (   0x108) unsigned int std::__1::__sort5<bool (*&)(TPItnTagHandle_fake** const&, TPItnTagHandle_fake** const&), TPItnTagHandle_fake***>(TPItnTagHandle_fake***, TPItnTagHandle_fake***, TPItnTagHandle_fake***, TPItnTagHandle_fake***, TPItnTagHandle_fake***, bool (*&)(TPItnTagHandle_fake** const&, TPItnTagHandle_fake** const&)) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4459e14 (    0x44) std::__1::vector<TPItnTagHandle_fake**, std::__1::allocator<TPItnTagHandle_fake**>>::__vallocate[abi:v160006](unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4459e58 (   0x178) std::__1::vector<TItnControl, std::__1::allocator<TItnControl>>::__append(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4459fd0 (    0x18) std::__1::vector<TItnControl, std::__1::allocator<TItnControl>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4459fe8 (    0x48) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<TItnControl>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<TItnControl>>(std::__1::allocator<TItnControl>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b445a030 (   0x578) void std::__1::__introsort<std::__1::_ClassicAlgPolicy, bool (*&)(TItnControl const&, TItnControl const&), TItnControl*>(TItnControl*, TItnControl*, bool (*&)(TItnControl const&, TItnControl const&), std::__1::iterator_traits<TItnControl*>::difference_type) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b445a5a8 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001b445a5c0 (    0xf8) void std::__1::__insertion_sort_3[abi:v160006]<std::__1::_ClassicAlgPolicy, bool (*&)(TItnControl const&, TItnControl const&), TItnControl*>(TItnControl*, TItnControl*, bool (*&)(TItnControl const&, TItnControl const&)) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b445a6b8 (   0x150) unsigned int std::__1::__sort3[abi:v160006]<std::__1::_ClassicAlgPolicy, bool (*&)(TItnControl const&, TItnControl const&), TItnControl*>(TItnControl*, TItnControl*, TItnControl*, bool (*&)(TItnControl const&, TItnControl const&)) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b445a808 (   0x1f8) bool std::__1::__insertion_sort_incomplete<bool (*&)(TItnControl const&, TItnControl const&), TItnControl*>(TItnControl*, TItnControl*, bool (*&)(TItnControl const&, TItnControl const&)) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b445aa00 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001b445aa18 (   0x108) unsigned int std::__1::__sort4[abi:v160006]<std::__1::_ClassicAlgPolicy, bool (*&)(TItnControl const&, TItnControl const&), TItnControl*>(TItnControl*, TItnControl*, TItnControl*, TItnControl*, bool (*&)(TItnControl const&, TItnControl const&)) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b445ab20 (   0x248) TItnControl* std::__1::__partial_sort_impl[abi:v160006]<std::__1::_ClassicAlgPolicy, bool (*&)(TItnControl const&, TItnControl const&), TItnControl*, TItnControl*>(TItnControl*, TItnControl*, TItnControl*, bool (*&)(TItnControl const&, TItnControl const&)) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b445ad68 (   0x168) void std::__1::__sift_down[abi:v160006]<std::__1::_ClassicAlgPolicy, bool (*&)(TItnControl const&, TItnControl const&), TItnControl*>(TItnControl*, bool (*&)(TItnControl const&, TItnControl const&), std::__1::iterator_traits<TItnControl*>::difference_type, TItnControl*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b445aed0 (    0xd0) void std::__1::__sift_up[abi:v160006]<std::__1::_ClassicAlgPolicy, bool (*&)(TItnControl const&, TItnControl const&), TItnControl*>(TItnControl*, TItnControl*, bool (*&)(TItnControl const&, TItnControl const&), std::__1::iterator_traits<TItnControl*>::difference_type) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b445afa0 (   0x150) unsigned int std::__1::__sort5<bool (*&)(TItnControl const&, TItnControl const&), TItnControl*>(TItnControl*, TItnControl*, TItnControl*, TItnControl*, TItnControl*, bool (*&)(TItnControl const&, TItnControl const&)) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b445b0f0 (    0x18) std::__1::vector<TItnRule*, std::__1::allocator<TItnRule*>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b445b108 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<TItnRule*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<TItnRule*>>(std::__1::allocator<TItnRule*>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b445b140 (    0x7c) std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>, TPItnRuleHandle_fake**>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>, TPItnRuleHandle_fake**>, void*>*, long> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>, TPItnRuleHandle_fake**>, std::__1::__map_value_compare<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>, std::__1::__value_type<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>, TPItnRuleHandle_fake**>, std::__1::less<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::b...
                0x00000001b445b1bc (    0x8c) std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>, TPItnRuleHandle_fake**>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>, TPItnRuleHandle_fake**>, void*>>>> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>, TPItnRuleHandle_fake**>, std::__1::__map_value_compare<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>, std::__1::__value_type<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>, TPItnRuleHandle_fake**>, std::__1::less<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<...
                0x00000001b445b248 (    0x7c) std::__1::__tree<std::__1::__value_type<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>, TPItnRuleHandle_fake**>, std::__1::__map_value_compare<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>, std::__1::__value_type<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>, TPItnRuleHandle_fake**>, std::__1::less<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>, TPItnRuleHandle_fake**>>>::__find_leaf_high(std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*&, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NLis...
                0x00000001b445b2c4 (    0x60) std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>, TPItnRuleHandle_fake**>, void*>>>::operator()[abi:v160006](std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>, TPItnRuleHandle_fake**>, void*>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b445b324 (    0xf8) std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>, TPItnRuleHandle_fake**>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>, TPItnRuleHandle_fake**>, void*>*, long>, std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>, TPItnRuleHandle_fake**>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>, TPItnRuleHandle_fake**>, void*>*, long>> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>, TPItnRuleHandle_fake**>, std::__1::__map_value_compare<std::__1::basic_string<wchar_t, std::__1::ch...
                0x00000001b445b41c (   0x154) TBuffer<TPItnTagHandle_fake**>::insert(unsigned long, TPItnTagHandle_fake** const*, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b445b570 (    0x44) std::__1::__tree<std::__1::__value_type<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>, TPItnRuleHandle_fake**>, std::__1::__map_value_compare<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>, std::__1::__value_type<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>, TPItnRuleHandle_fake**>, std::__1::less<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>, TPItnRuleHandle_fake**>>>::erase(std::__1::__tree_const_iterator<std::__1::__value_type<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>, TPItnRuleHandle_fake**>, std::__1::__tree_node<std::__1::__value_type<std::__1::ba...
                0x00000001b445b5b4 (    0x74) std::__1::__tree<std::__1::__value_type<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>, TPItnRuleHandle_fake**>, std::__1::__map_value_compare<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>, std::__1::__value_type<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>, TPItnRuleHandle_fake**>, std::__1::less<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>, TPItnRuleHandle_fake**>>>::__remove_node_pointer(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>, TPItnRuleHandle_fake**>, void*>*) [FUNC, PEXT, NameNList, MangledNameNList, ...
                0x00000001b445b628 (   0x114) std::__1::vector<TItnRule*, std::__1::allocator<TItnRule*>>::__append(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b445b73c (   0x120) std::__1::vector<TPItnRuleControl, std::__1::allocator<TPItnRuleControl>>::__append(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b445b85c (    0x2c) std::__1::vector<TWord const*, std::__1::allocator<TWord const*>>::resize(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b445b888 (    0xb4) std::__1::vector<std::__1::pair<TWord const*, unsigned int>, std::__1::allocator<std::__1::pair<TWord const*, unsigned int>>>::reserve(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b445b93c (    0x78) std::__1::vector<TWord const*, std::__1::allocator<TWord const*>>::vector(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b445b9b4 (    0x44) std::__1::vector<TWord const*, std::__1::allocator<TWord const*>>::__vallocate[abi:v160006](unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b445b9f8 (    0x18) std::__1::vector<TWord const*, std::__1::allocator<TWord const*>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b445ba10 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<TWord const*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<TWord const*>>(std::__1::allocator<TWord const*>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b445ba48 (   0x114) std::__1::vector<TWord const*, std::__1::allocator<TWord const*>>::__append(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b445bb5c (    0x84) std::__1::vector<std::__1::pair<TWord const*, unsigned int>, std::__1::allocator<std::__1::pair<TWord const*, unsigned int>>>::vector(std::__1::vector<std::__1::pair<TWord const*, unsigned int>, std::__1::allocator<std::__1::pair<TWord const*, unsigned int>>> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b445bbe0 (    0x44) std::__1::vector<std::__1::pair<TWord const*, unsigned int>, std::__1::allocator<std::__1::pair<TWord const*, unsigned int>>>::__vallocate[abi:v160006](unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b445bc24 (    0x18) std::__1::vector<std::__1::pair<TWord const*, unsigned int>, std::__1::allocator<std::__1::pair<TWord const*, unsigned int>>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b445bc3c (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<std::__1::pair<TWord const*, unsigned int>>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<std::__1::pair<TWord const*, unsigned int>>>(std::__1::allocator<std::__1::pair<TWord const*, unsigned int>>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b445bc74 (    0x18) std::__1::vector<std::__1::pair<TWord const*, unsigned long>, std::__1::allocator<std::__1::pair<TWord const*, unsigned long>>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b445bc8c (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<std::__1::pair<TWord const*, unsigned long>>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<std::__1::pair<TWord const*, unsigned long>>>(std::__1::allocator<std::__1::pair<TWord const*, unsigned long>>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b445bcc4 (    0x18) std::__1::vector<unsigned long, std::__1::allocator<unsigned long>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b445bcdc (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<unsigned long>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<unsigned long>>(std::__1::allocator<unsigned long>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b445bd14 (    0x78) std::__1::vector<unsigned long, std::__1::allocator<unsigned long>>::vector(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b445bd8c (    0x44) std::__1::vector<unsigned long, std::__1::allocator<unsigned long>>::__vallocate[abi:v160006](unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b445bdd0 (    0x84) std::__1::vector<unsigned long, std::__1::allocator<unsigned long>>::vector(unsigned long, unsigned long const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b445be54 (    0x18) std::__1::vector<TLatticeConstructionTransData*, std::__1::allocator<TLatticeConstructionTransData*>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b445be6c (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<TLatticeConstructionTransData*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<TLatticeConstructionTransData*>>(std::__1::allocator<TLatticeConstructionTransData*>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b445bea4 (   0x110) MrecInitModule_constran_kernel() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b445bfb4 (    0x34) sizeObject(RecogGerm const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b445bfe8 (    0xbc) RecogGermIterator::advanceUntilMatch() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b445c0a4 (    0x64) RecogGermIterator::cwidacMatches(CWIDAC const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b445c108 (     0x4) RecogGermIterator::~RecogGermIterator() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b445c10c (   0x3f8) RecogGermIterator::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b445c504 (    0x20) RecogGermArrayRecogGermIterator::getCurrentGermInternal(RecogGerm*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b445c524 (    0x44) RecogGerm::operator=(RecogGerm const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b445c568 (   0x558) Constraint::setUpTranscription(DgnArray<DgnPrimArray<unsigned int>> const*, DgnPrimArray<int> const*, PhnMgr const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b445cac0 (   0x42c) Constraint::Constraint(unsigned short, bool, bool, DgnArray<DgnPrimArray<unsigned int>> const*, DgnPrimArray<int> const*, DgnPrimArray<unsigned int> const*, DgnArray<DgnArray<ParseToken>> const*, WordLattice const*, int, int, bool, PhnMgr const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b445ceec (    0x94) Lattice<WordLatticeLC>::appendOutLinks(unsigned int, DgnPrimArray<unsigned int>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b445cf80 (     0x4) Hash<StateSpec, StateSpec, StateSpec, unsigned int>::~Hash() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b445cf84 (     0x4) Hash<StateSpec, StateSpec, StateSpec, bool>::~Hash() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b445cf88 (    0xf0) Constraint::~Constraint() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b445d078 (    0x34) void DgnDelete<DgnPrimArray<unsigned int>>(DgnPrimArray<unsigned int>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b445d0ac (     0x4) Constraint::~Constraint() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b445d0b0 (  0x1660) Constraint::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b445e710 (    0xf0) unsigned long sizeObject<DgnArray<RecogGerm>>(DgnArray<DgnArray<RecogGerm>> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b445e800 (   0x114) unsigned long sizeObject<DgnArray<CWIDAC>>(DgnArray<DgnArray<CWIDAC>> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b445e914 (    0xf4) unsigned long sizeObject<PhnIndexSet>(DgnArray<PhnIndexSet> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b445ea08 (   0x10c) unsigned long sizeObject<RecogGerm>(DgnArray<RecogGerm> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b445eb14 (    0xf0) unsigned long sizeObject<DgnPrimArray<unsigned int>>(DgnArray<DgnPrimArray<unsigned int>> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b445ec04 (   0x100) unsigned long sizeObject<DgnArray<DgnPrimArray<unsigned int>>>(DgnArray<DgnArray<DgnPrimArray<unsigned int>>> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b445ed04 (    0xa8) Constraint::makeStateConstraint(unsigned short, bool, DgnArray<DgnPrimArray<unsigned int>> const*, DgnPrimArray<unsigned int> const*, DgnArray<DgnArray<ParseToken>> const*, WordLattice const*, int, int, bool, PhnMgr const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b445edac (    0x40) Constraint::cloneConstraint(Constraint const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b445edec (   0x368) Constraint::Constraint(Constraint const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b445f154 (   0x108) Constraint::setupConstraint() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b445f25c (    0x94) Hash<WordIdPair, WordIdPair, WordIdPair, unsigned int>::removeAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b445f2f0 (   0x7d4) Constraint::prunePreList(RecogGermIterator*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b445fac4 (   0x190) Constraint::addToReturnList(RecogGerm&, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b445fc54 (   0x2cc) Constraint::seedGivenTraceState(StateSpec const&, DgnPrimArray<unsigned int> const&, RecogGermIterator*, unsigned int*, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b445ff20 (    0x68) VocMgr::getRoot(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b445ff88 (   0x1e0) Constraint::seedGivenPhonyPreState(StateSpec const&, DgnPrimArray<unsigned int> const&, RecogGermIterator*, unsigned int*, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4460168 (   0x178) Constraint::seedGivenStateStateOverNothing(StateSpec const&, unsigned int*, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44602e0 (   0x280) Constraint::seedGivenStateLatticeOverState(StateSpec const&, DgnPrimArray<unsigned int> const&, unsigned int*, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4460560 (   0x19c) Constraint::seedGivenStateStateOverGerms(StateSpec const&, RecogGermIterator*, unsigned int*, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44606fc (   0x168) Constraint::seedGivenEmbFstStateStateOverGerms(StateSpec const&, RecogGermIterator*, unsigned int*, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4460864 (   0x30c) Constraint::seedGivenStateLatticeOverStateOverGerms(StateSpec const&, DgnPrimArray<unsigned int> const&, RecogGermIterator*, unsigned int*, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4460b70 (   0x174) Constraint::seedGivenStateGermsOverState(StateSpec const&, RecogGermIterator*, unsigned int*, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4460ce4 (   0x594) Constraint::seedGivenState(StateSpec const&, DgnPrimArray<unsigned int> const&, int, bool*, RecogGermIterator*, unsigned int, bool, unsigned int*, unsigned int*, unsigned int*, unsigned int*, DgnPrimArray<unsigned short>*, DgnPrimArray<bool>*, DgnArray<EmbStateSpec>*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4461278 (    0xd0) Constraint::givenStateCanSeedFinalSilence(StateSpec const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4461348 (   0x19c) Constraint::givenStateGetPrecedingNonAcousticWords(StateSpec const&, DgnPrimArray<unsigned int>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44614e4 (   0x224) Constraint::givenStateGetWeights(StateSpec const&, DgnArray<DgnPrimArray<unsigned int>>*, bool*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4461708 (   0x2d8) Constraint::getTraceLegal(CWIDAC const&, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44619e0 (   0x2f4) Constraint::getStateLegal(CWIDAC const&, int, bool*, RecogGermIterator*, unsigned int, bool, unsigned int*, unsigned int*, unsigned int*, unsigned int*, DgnPrimArray<unsigned short>*, DgnPrimArray<bool>*, DgnArray<EmbStateSpec>*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4461cd4 (   0xb30) Constraint::getLegal(CWIDAC const&, unsigned int, bool, unsigned int*, int, unsigned int*, DgnPrimArray<unsigned short>*, DgnPrimArray<bool>*, DgnArray<EmbStateSpec>*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4462804 (    0x74) ConstraintCacheInfo::match(CWIDAC const&, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4462878 (    0x64) void DgnDelete<GermRecogGermIterator>(GermRecogGermIterator*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44628dc (    0x80) WordList::seedPossible(unsigned int, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446295c (    0x98) Constraint::getCanSeedUsingLatticeTimeConstraintSeedThreshScore(CWIDAC const&, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44629f4 (   0x408) Constraint::getCanSeedFinalSilence(CWIDAC const&, int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4462dfc (    0xf4) Hash<StateSpec, StateSpec, StateSpec, bool>::add(StateSpec const&, bool const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4462ef0 (    0x9c) Constraint::getMaxEndTime(CWIDAC const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4462f8c (   0x208) Constraint::getSeededPrecedingNonAcousticWords(CWIDAC const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4463194 (    0xf4) Hash<StateSpec, StateSpec, StateSpec, unsigned int>::add(StateSpec const&, unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4463288 (   0x378) Constraint::getSeededWeights(CWIDAC const&, int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4463600 (    0xcc) Constraint::getSuccessorRecursivePrefilteringAllowed(CWIDAC const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44636cc (    0x44) Constraint::getWeightsForState(CWIDAC const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4463710 (    0x4c) Constraint::isLMAllowedForState(CWIDAC const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446375c (    0x4c) Constraint::isCoartAllowedForState(CWIDAC const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44637a8 (    0x7c) Constraint::isPrecedingNonAcousticWordRequiredForState(CWIDAC const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4463824 (    0x78) Constraint::isPrecedingNonAcousticWordValidForState(CWIDAC const&, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446389c (    0x4c) Constraint::isLeftWBAllowedForState(CWIDAC const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44638e8 (    0x4c) Constraint::isRightWBAllowedForState(CWIDAC const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4463934 (    0x78) Constraint::getTraceNextPhones(CWIDAC const&, Direction, PhnIndexSet*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44639ac (   0x284) Constraint::getStateNextPhones(CWIDAC const&, Direction, PhnIndexSet*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4463c30 (     0x4) RecogGermArrayRecogGermIterator::~RecogGermArrayRecogGermIterator() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4463c34 (     0x4) RecogGermArrayRecogGermIterator::~RecogGermArrayRecogGermIterator() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4463c38 (    0x48) PhnIndexSet::PhnIndexSet(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4463c80 (    0x48) PhnIndexSet::PhnIndexSet(PhnIndexSet const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4463cc8 (    0x44) RecogGerm::RecogGerm(RecogGerm const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4463d0c (    0x64) DgnArray<DgnPrimArray<unsigned int>>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4463d70 (    0x40) DgnArray<CWIDAC>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4463db0 (    0x6c) DgnArray<CWIDAC>::find(CWIDAC const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4463e1c (    0x7c) CWIDAC::operator==(CWIDAC const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4463e98 (    0x8c) DgnArray<LatticeLink<PhonemeLatticeLC>>::reallocElts(unsigned int, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4463f24 (    0xe0) Hash<StateSpec, StateSpec, StateSpec, bool>::Hash(char const*, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4464004 (    0x28) Hash<StateSpec, StateSpec, StateSpec, bool>::~Hash() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446402c (    0x40) DgnIFixArray<BucketLink<StateSpec, bool>*>::~DgnIFixArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446406c (    0xe0) Hash<StateSpec, StateSpec, StateSpec, unsigned int>::Hash(char const*, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446414c (    0x28) Hash<StateSpec, StateSpec, StateSpec, unsigned int>::~Hash() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4464174 (    0x40) DgnIFixArray<BucketLink<StateSpec, unsigned int>*>::~DgnIFixArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44641b4 (    0x64) DgnArray<DgnArray<RecogGerm>>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4464218 (    0x64) DgnArray<DgnArray<CWIDAC>>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446427c (    0x64) DgnArray<BitArray>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44642e0 (    0x40) DgnArray<RecogGerm>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4464320 (    0x74) Hash<StateSpec, StateSpec, StateSpec, bool>::~Hash() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4464394 (    0x44) DgnArray<DgnArray<DgnPrimArray<unsigned int>>>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44643d8 (    0x68) DgnArray<DgnArray<DgnPrimArray<unsigned int>>>::destructAt(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4464440 (    0x74) Hash<StateSpec, StateSpec, StateSpec, unsigned int>::~Hash() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44644b4 (    0xe4) unsigned long sizeObject<CWIDAC>(DgnArray<CWIDAC> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4464598 (   0x140) DgnArray<DgnArray<CWIDAC>>::copyArraySlice(DgnArray<DgnArray<CWIDAC>> const&, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44646d8 (    0xe8) DgnArray<CWIDAC>::copyArraySlice(DgnArray<CWIDAC> const&, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44647c0 (   0x130) DgnArray<PhnIndexSet>::copyArraySlice(DgnArray<PhnIndexSet> const&, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44648f0 (    0x90) DgnArray<RecogGerm>::reallocElts(unsigned int, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4464980 (    0x70) Hash<StateSpec, StateSpec, StateSpec, unsigned int>::findBucket(StateSpec const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44649f0 (   0x110) Hash<StateSpec, StateSpec, StateSpec, bool>::upSize(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4464b00 (   0x110) Hash<StateSpec, StateSpec, StateSpec, unsigned int>::upSize(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4464c10 (     0x4) MrecInitModule_sdrepro_sdapi() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4464c14 (   0x2e0) MrecInitModule_picmgr_user() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4464ef4 (    0x10) sizeObject(PicNode const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4464f04 (    0x78) Branch::writeObject(DgnStream*, unsigned int&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4464f7c (   0xd88) PicMgr::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4465d04 (    0xf0) unsigned long sizeObject<DgnArray<Branch>>(DgnArray<DgnArray<Branch>> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4465df4 (    0xf0) unsigned long sizeObject<DgnArray<PicNode>>(DgnArray<DgnArray<PicNode>> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4465ee4 (    0x84) DgnPrimArray<short>::compact() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4465f68 (    0x78) DgnPrimArray<char>::compact() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4465fe0 (    0xc4) PicMgr::savePicMgr(DFile*, DFileChecksums*, bool, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44660a4 (   0x47c) PicMgr::saveQuestionsAsText(DFile*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4466520 (   0x2cc) PicMgr::saveDurationDistributions(DFile*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44667ec (   0x934) PicMgr::savePicTreesAsText(DFile*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4467120 (   0x41c) PicMgr::saveAdaptPhonemesAsText(DFile*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446753c (   0x1b0) PicMgr::saveBinary(DFile*, DFileChecksums*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44676ec (    0x9c) void readObject<bool>(DgnStream*, DgnPrimArray<bool>&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4467788 (    0x5c) void writeObject<bool>(DgnStream*, DgnPrimArray<bool> const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44677e4 (    0x88) void writeObject<DgnArray<Branch>>(DgnStream*, DgnArray<DgnArray<Branch>> const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446786c (    0x88) void writeObject<DgnArray<PicNode>>(DgnStream*, DgnArray<DgnArray<PicNode>> const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44678f4 (    0xb4) PicMgr::getPicNode(unsigned int, Pic const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44679a8 (    0x68) PicMgr::canLookupPic(Pic const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4467a10 (    0xe4) PicMgr::searchPicTree(Pic const&, DgnArray<Branch> const&, unsigned short, unsigned int*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4467af4 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001b4467b0c (   0x1e8) PicMgr::getPrefContextPelIdAndDurIds(B_PrefContextType, B_PrefWordBoundaryType, BitArray const&, unsigned int, unsigned short const*, unsigned int, unsigned int, DgnArray<OpaquePelIdAndDurId>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4467cf4 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001b4467d08 (   0x1b0) PicMgr::getEndDuplicatesLookup(DgnArray<Pic> const&, DgnPrimArray<unsigned int>*, DgnArray<PicNode>*, DgnPrimArray<unsigned short>*, DgnPrimArray<unsigned int>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4467eb8 (   0x220) PicMgr::getEndDuplicatesSearch(DgnArray<Pic> const&, DgnPrimArray<unsigned int>*, DgnArray<PicNode>*, unsigned int*, DgnPrimArray<unsigned int>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44680d8 (   0x228) PicMgr::getNodeDataPtrs(NodeScoringData**, DgnPrimArray<short> const*, Pic const&, unsigned int*, unsigned int*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4468300 (    0x9c) PicMgr::getNodeDataPtrsFromPicNodes(NodeScoringData**, DgnPrimArray<short> const*, PicNode const*, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446839c (    0x64) DgnArray<DgnArray<PicNode>>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4468400 (   0x12c) PicMgr::getPelPhoneMap(DgnPrimArray<unsigned short>*, DgnPrimArray<int>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446852c (    0xc8) PicMgr::getPelDurIdMap(DgnPrimArray<unsigned short>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44685f4 (   0x150) PicMgr::getRightAndDoubleGenericPicNodes(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4468744 (    0x64) DgnArray<DgnArray<Branch>>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44687a8 (    0x40) DgnPrimFixArray<unsigned short>::~DgnPrimFixArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44687e8 (    0x40) DgnArray<PicNode>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4468828 (    0x64) DgnArray<DgnPrimArray<unsigned short>>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446888c (    0xa8) DgnPrimArray<bool>::copyArraySlice(DgnPrimArray<bool> const&, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4468934 (    0x88) void writeObject<Branch>(DgnStream*, DgnArray<Branch> const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44689bc (    0x9c) void writeObject<PicNode>(DgnStream*, DgnArray<PicNode> const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4468a58 (    0x40) DgnArray<Branch>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4468a98 (    0x40) DgnIArray<PicNode const*>::~DgnIArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4468ad8 (     0x4) MrecInitModule_featscal_sigproc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4468adc (     0x4) MrecInitModule_gpupref_prefilt() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4468ae0 (    0x74) TResGraphMaker::clear() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4468b54 (   0x44c) TResGraphMaker::add(TGraph const*, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4468fa0 (    0x1c) (null) [FUNC, FunctionStarts] 
                0x00000001b4468fbc (    0x2c) std::__1::vector<TPTokenState, std::__1::allocator<TPTokenState>>::resize(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4468fe8 (    0x44) TResGraphMaker::~TResGraphMaker() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446902c (    0x54) TResGraphMaker::~TResGraphMaker() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4469080 (   0x120) std::__1::vector<TPTokenState, std::__1::allocator<TPTokenState>>::__append(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44691a0 (    0x18) std::__1::vector<TPTokenState, std::__1::allocator<TPTokenState>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44691b8 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<TPTokenState>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<TPTokenState>>(std::__1::allocator<TPTokenState>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44691f0 (    0x18) std::__1::vector<TPTokenTrans, std::__1::allocator<TPTokenTrans>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4469208 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<TPTokenTrans>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<TPTokenTrans>>(std::__1::allocator<TPTokenTrans>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4469240 (     0x4) MrecInitModule_scpcache_recogctl() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4469244 (    0xf0) StartupSearchCrossLayerParamSpecMgr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4469334 (   0x10c) SearchCrossLayerParamSet::SearchCrossLayerParamSet(char const*, B_ParamSetType, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4469440 (     0x4) SearchCrossLayerParamSet::SearchCrossLayerParamSet(char const*, B_ParamSetType, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4469444 (   0x110) SearchCrossLayerParamSet::SearchCrossLayerParamSet(SearchCrossLayerParamSet const&, char const*, B_ParamSetType, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4469554 (     0x4) SearchCrossLayerParamSet::SearchCrossLayerParamSet(SearchCrossLayerParamSet const&, char const*, B_ParamSetType, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4469558 (    0x8c) SearchCrossLayerParamSet::setDefaults() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44695e4 (    0x80) SearchCrossLayerParamSet::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4469664 (    0x24) SearchCrossLayerParamSet::setParamSetSearchCrossLayerThreshScoreIncrementMatrix(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4469688 (    0x24) SearchCrossLayerParamSet::setParamSetSearchCrossLayerWordEndThreshScoreIncrementMatrix(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44696ac (   0x108) SearchCrossLayerParamSet::getBoolParameter(unsigned short, B_ParamQueryMode) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44697b4 (    0x90) SearchCrossLayerParamSet::getIntParameter(unsigned short, B_ParamQueryMode) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4469844 (    0x90) SearchCrossLayerParamSet::getDoubleParameter(unsigned short, B_ParamQueryMode) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44698d4 (   0x128) SearchCrossLayerParamSet::getStringParameter(unsigned short, B_ParamQueryMode) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44699fc (    0x8c) SearchCrossLayerParamSet::getEnumParameter(unsigned short, B_ParamQueryMode) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4469a88 (    0xe0) SearchCrossLayerParamSet::setBoolParameter(unsigned short, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4469b68 (    0x9c) SearchCrossLayerParamSet::setIntParameter(unsigned short, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4469c04 (    0x9c) SearchCrossLayerParamSet::setDoubleParameter(unsigned short, double) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4469ca0 (    0xbc) SearchCrossLayerParamSet::setStringParameter(unsigned short, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4469d5c (    0x98) SearchCrossLayerParamSet::setEnumParameter(unsigned short, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4469df4 (     0x4) SearchCrossLayerParamSet::~SearchCrossLayerParamSet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4469df8 (    0x28) SearchCrossLayerParamSet::~SearchCrossLayerParamSet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4469e20 (    0x78) SearchCrossLayerParamSet::~SearchCrossLayerParamSet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4469e98 (     0x4) MrecInitModule_charinfo_word() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4469e9c (     0x8) CharInfo::CharInfo() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4469ea4 (     0x4) CharInfo::~CharInfo() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4469ea8 (   0x1e8) CharInfo::loadCharInfoFromText(DFile*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446a090 (   0x1a0) CharInfo::loadCharInfo(DFile*, DFileChecksums*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446a230 (   0x134) CharInfo::saveCharInfoToText(DFile*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446a364 (    0xd0) CharInfo::saveCharInfo(DFile*, DFileChecksums*, bool, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446a434 (   0x1b4) CharInfo::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446a5e8 (    0x90) CharInfo::decodeCharString(unsigned char const*, DgnPrimArray<unsigned int>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446a678 (   0x46c) CharInfo::decodeOneChar(unsigned char const*, unsigned int, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446aae4 (    0xa0) CharInfo::getLogicalCharLengthsForEncodedCharString(unsigned char const*, DgnPrimArray<unsigned char>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446ab84 (    0x4c) CharInfo::validateEncodedCharString(unsigned char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446abd0 (     0x4) MrecInitModule_germ_germ() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446abd4 (    0x1c) sizeObject(Germ const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446abf0 (    0x14) PrefilterResult::PrefilterResult(unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446ac04 (    0x58) PrefilterResult::~PrefilterResult() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446ac5c (    0xd0) PrefilterResult::adjustReferenceCounts(bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446ad2c (    0x64) void DgnDelete<Hash<Int32Triple, Int32Triple, Int32TripleScope, int>>(Hash<Int32Triple, Int32Triple, Int32TripleScope, int>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446ad90 (     0x4) PrefilterResult::~PrefilterResult() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446ad94 (    0xa4) PrefilterResult::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446ae38 (    0xf8) unsigned long sizeObject<DgnArray<Germ>*>(DgnIOwnArray<DgnArray<Germ>*> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446af30 (    0x40) PrefilterResult::setComplete() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446af70 (    0x80) PrefilterResult::cacheCopy(DgnArray<Germ> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446aff0 (    0xe4) PrefilterResult::clone() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446b0d4 (    0x8c) PrefilterResult::copyIntoQueue(ReturnListQueue*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446b160 (    0x70) ReturnListQueue::enqueueCopy(int, DgnArray<Germ> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446b1d0 (    0x58) ReturnListQueue::setComplete() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446b228 (    0x8c) PrefilterResult::initEmpty(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446b2b4 (   0x100) PrefilterResult::addEntry(int, unsigned int, short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446b3b4 (    0xf4) Hash<CWIDAtFrame, CWIDAtFrame, CWIDAtFrame, unsigned int>::add(CWIDAtFrame const&, unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446b4a8 (     0xc) PrefilterResult::getGermsForFrame(int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446b4b4 (    0x5c) void writeObject<short>(DgnStream*, DgnPrimFixArray<short> const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446b510 (   0x114) void readObject<DgnPrimArray<unsigned int>>(DgnStream*, DgnArray<DgnPrimArray<unsigned int>>&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446b624 (   0x114) void readObject<DgnPrimArray<short>>(DgnStream*, DgnArray<DgnPrimArray<short>>&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446b738 (    0x78) void readObject<short>(DgnStream*, DgnPrimArray<short>&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446b7b0 (    0x60) writeObject(DgnStream*, PrefilterResultData const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446b810 (    0x9c) void writeObject<PrefilterResultFrame>(DgnStream*, DgnArray<PrefilterResultFrame> const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446b8ac (   0x1a4) PrefilterResult::fillPrefilterResultData(PrefilterResultData*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446ba50 (   0x114) PrefilterResult::savePrefilterResult(FileSpec const&, B_SaveResultCode*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446bb64 (   0x248) PrefilterResult::getReferredWordIds(DgnPrimArray<unsigned int>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446bdac (    0xdc) HashKEV<unsigned int, unsigned int, WordIdScope>::add(unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446be88 (     0x4) HashKEV<unsigned int, unsigned int, WordIdScope>::~HashKEV() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446be8c (    0x60) ReturnListQueue::ReturnListQueue(PrefilterResult*, unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446beec (    0x78) ReturnListQueue::ReturnListQueue(PrefilterResult*, B_SearchPartialIncludePrefiltererResult, unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446bf64 (    0x38) ReturnListQueue::~ReturnListQueue() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446bf9c (     0x4) ReturnListQueue::~ReturnListQueue() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446bfa0 (    0x1c) ReturnListQueue::getNextFrameTime() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446bfbc (    0x58) ReturnListQueue::enqueue(int, DgnArray<Germ>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446c014 (   0x124) DgnPrimQueue<DgnArray<Germ>*, DgnIOwnArray<DgnArray<Germ>*>>::enqueue(DgnArray<Germ>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446c138 (    0x34) ReturnListQueue::dequeue(int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446c16c (    0x48) DgnPrimQueue<DgnArray<Germ>*, DgnIOwnArray<DgnArray<Germ>*>>::dequeue() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446c1b4 (   0x160) ReturnListQueue::copyIntoQueue(ReturnListQueue*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446c314 (    0x40) ReturnListQueue::clear() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446c354 (    0x44) ReturnListQueue::reset() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446c398 (    0x8c) ReturnListQueue::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446c424 (     0x4) sizeObject(ReturnListQueue const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446c428 (    0x44) DgnArray<PrefilterResultFrame>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446c46c (    0x74) DgnArray<PrefilterResultFrame>::destructAt(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446c4e0 (    0x6c) DgnIOwnArray<DgnArray<Germ>*>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446c54c (    0x64) DgnIOwnArray<DgnArray<Germ>*>::destructAt(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446c5b0 (    0x34) void DgnDelete<DgnArray<Germ>>(DgnArray<Germ>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446c5e4 (    0x7c) unsigned long sizeObject<Germ>(DgnArray<Germ> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446c660 (    0x9c) Hash<BuildWordIdNgram, BuildWordIdNgram, BuildWordIdNgram, unsigned int>::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446c6fc (    0xc8) DgnArray<Germ>::copyArraySlice(DgnArray<Germ> const&, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446c7c4 (    0x40) DgnArray<Germ>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446c804 (    0xe0) Hash<CWIDAtFrame, CWIDAtFrame, CWIDAtFrame, unsigned int>::Hash(char const*, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446c8e4 (     0x4) Hash<CWIDAtFrame, CWIDAtFrame, CWIDAtFrame, unsigned int>::~Hash() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446c8e8 (    0x28) Hash<CWIDAtFrame, CWIDAtFrame, CWIDAtFrame, unsigned int>::~Hash() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446c910 (    0x40) DgnIFixArray<BucketLink<CWIDAtFrame, unsigned int>*>::~DgnIFixArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446c950 (    0x74) Hash<CWIDAtFrame, CWIDAtFrame, CWIDAtFrame, unsigned int>::~Hash() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446c9c4 (    0x6c) Hash<CWIDAtFrame, CWIDAtFrame, CWIDAtFrame, unsigned int>::findBucket(CWIDAtFrame const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446ca30 (   0x110) Hash<CWIDAtFrame, CWIDAtFrame, CWIDAtFrame, unsigned int>::upSize(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446cb40 (    0x64) DgnArray<ScoreArray>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446cba4 (    0x78) DgnArray<HistContents>::reallocElts(unsigned int, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446cc1c (    0xdc) HashKEV<unsigned int, unsigned int, WordIdScope>::HashKEV(char const*, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446ccf8 (    0x28) HashKEV<unsigned int, unsigned int, WordIdScope>::~HashKEV() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446cd20 (    0x74) HashKEV<unsigned int, unsigned int, WordIdScope>::~HashKEV() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446cd94 (   0x110) HashKEV<unsigned int, unsigned int, WordIdScope>::upSize(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446cea4 (    0x4c) DgnPrimQueue<DgnArray<Germ>*, DgnIOwnArray<DgnArray<Germ>*>>::DgnPrimQueue() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446cef0 (    0xd4) DgnPrimQueue<DgnArray<Germ>*, DgnIOwnArray<DgnArray<Germ>*>>::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446cfc4 (    0x64) DgnIOwnArray<DgnArray<Germ>*>::sizeMaybeOwnedArrayItem(unsigned int, B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446d028 (    0x30) TState::getTransCount(TDirection) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446d058 (    0xe8) TFsa::TFsa() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446d140 (    0x64) TFsa::clear() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446d1a4 (     0x4) TFsa::TFsa() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446d1a8 (    0x94) TFsa::~TFsa() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446d23c (     0x4) TFsa::~TFsa() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446d240 (   0x144) TFsa::newState(TStateDataDef const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446d384 (   0x14c) TFsa::deleteState(TState*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446d4d0 (    0x40) TFsa::removeExtremity(TState*, TDirection) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446d510 (    0x50) TFsa::deleteAllTrans(TState*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446d560 (   0x18c) TFsa::newTrans(TState*, TState*, TTransDataDef const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446d6ec (   0x158) TFsa::deleteTrans(TTrans*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446d844 (   0x128) TFsa::addExtremity(TState*, TDirection) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446d96c (   0x19c) TFsa::nfaToDfa(TFsa&, TFsaDataCallBack*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446db08 (    0xa8) std::__1::vector<TState*, std::__1::allocator<TState*>>::reserve(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446dbb0 (   0x350) TFsa::topologicalSort(std::__1::vector<TState const*, std::__1::allocator<TState const*>>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446df00 (    0xa8) std::__1::vector<TState const*, std::__1::allocator<TState const*>>::reserve(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446dfa8 (   0x198) (anonymous namespace)::epsilonClosure(std::__1::set<TState const*, std::__1::less<TState const*>, std::__1::allocator<TState const*>>&, std::__1::set<TState const*, std::__1::less<TState const*>, std::__1::allocator<TState const*>>&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446e140 (   0x524) (anonymous namespace)::TNfaToDfa::nfaToDfaRec(std::__1::set<TState const*, std::__1::less<TState const*>, std::__1::allocator<TState const*>>&, std::__1::map<TState const**, TState*, (anonymous namespace)::TNfaToDfa::TNfaStateCompare, std::__1::allocator<std::__1::pair<TState const** const, TState*>>>&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446e664 (    0xbc) std::__1::pair<std::__1::__tree_iterator<TStateDataDef const*, std::__1::__tree_node<TStateDataDef const*, void*>*, long>, bool> std::__1::__tree<TStateDataDef const*, std::__1::less<TStateDataDef const*>, std::__1::allocator<TStateDataDef const*>>::__emplace_unique_key_args<TStateDataDef const*, TStateDataDef const*>(TStateDataDef const* const&, TStateDataDef const*&&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446e720 (    0xbc) (anonymous namespace)::move(std::__1::set<TState const*, std::__1::less<TState const*>, std::__1::allocator<TState const*>>&, TTransDataDef const*, std::__1::set<TState const*, std::__1::less<TState const*>, std::__1::allocator<TState const*>>&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446e7dc (   0x174) void std::__1::__tree<TState const*, std::__1::less<TState const*>, std::__1::allocator<TState const*>>::__assign_multi<std::__1::__tree_const_iterator<TState const*, std::__1::__tree_node<TState const*, void*>*, long>>(std::__1::__tree_const_iterator<TState const*, std::__1::__tree_node<TState const*, void*>*, long>, std::__1::__tree_const_iterator<TState const*, std::__1::__tree_node<TState const*, void*>*, long>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446e950 (    0x70) std::__1::__tree<TState const*, std::__1::less<TState const*>, std::__1::allocator<TState const*>>::__node_insert_multi(std::__1::__tree_node<TState const*, void*>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446e9c0 (    0x54) std::__1::__tree<TState const*, std::__1::less<TState const*>, std::__1::allocator<TState const*>>::_DetachedTreeCache::__detach_next(std::__1::__tree_node<TState const*, void*>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446ea14 (    0x58) std::__1::__tree<TState const*, std::__1::less<TState const*>, std::__1::allocator<TState const*>>::_DetachedTreeCache::~_DetachedTreeCache[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446ea6c (    0x90) std::__1::__tree_iterator<TState const*, std::__1::__tree_node<TState const*, void*>*, long> std::__1::__tree<TState const*, std::__1::less<TState const*>, std::__1::allocator<TState const*>>::__emplace_multi<TState const* const&>(TState const* const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446eafc (    0x58) std::__1::set<TState const*, std::__1::less<TState const*>, std::__1::allocator<TState const*>>::set[abi:v160006](std::__1::set<TState const*, std::__1::less<TState const*>, std::__1::allocator<TState const*>> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446eb54 (    0x88) void std::__1::set<TState const*, std::__1::less<TState const*>, std::__1::allocator<TState const*>>::insert[abi:v160006]<std::__1::__tree_const_iterator<TState const*, std::__1::__tree_node<TState const*, void*>*, long>>(std::__1::__tree_const_iterator<TState const*, std::__1::__tree_node<TState const*, void*>*, long>, std::__1::__tree_const_iterator<TState const*, std::__1::__tree_node<TState const*, void*>*, long>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446ebdc (    0x88) std::__1::pair<std::__1::__tree_iterator<TPItnTagHandle_fake**, std::__1::__tree_node<TPItnTagHandle_fake**, void*>*, long>, bool> std::__1::__tree<TPItnTagHandle_fake**, std::__1::less<TPItnTagHandle_fake**>, std::__1::allocator<TPItnTagHandle_fake**>>::__emplace_hint_unique_key_args<TPItnTagHandle_fake**, TPItnTagHandle_fake** const&>(std::__1::__tree_const_iterator<TPItnTagHandle_fake**, std::__1::__tree_node<TPItnTagHandle_fake**, void*>*, long>, TPItnTagHandle_fake** const&, TPItnTagHandle_fake** const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446ec64 (   0x1ac) std::__1::__tree_node_base<void*>*& std::__1::__tree<TPItnTagHandle_fake**, std::__1::less<TPItnTagHandle_fake**>, std::__1::allocator<TPItnTagHandle_fake**>>::__find_equal<TPItnTagHandle_fake**>(std::__1::__tree_const_iterator<TPItnTagHandle_fake**, std::__1::__tree_node<TPItnTagHandle_fake**, void*>*, long>, std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*&, std::__1::__tree_node_base<void*>*&, TPItnTagHandle_fake** const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446ee10 (    0x4c) std::__1::__tree<std::__1::__value_type<TState const**, TState*>, std::__1::__map_value_compare<TState const**, std::__1::__value_type<TState const**, TState*>, (anonymous namespace)::TNfaToDfa::TNfaStateCompare, true>, std::__1::allocator<std::__1::__value_type<TState const**, TState*>>>::destroy(std::__1::__tree_node<std::__1::__value_type<TState const**, TState*>, void*>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446ee5c (    0xd8) std::__1::vector<bool, std::__1::allocator<bool>>::vector(unsigned long, bool const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446ef34 (    0x48) std::__1::vector<bool, std::__1::allocator<bool>>::__vallocate[abi:v160006](unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446ef7c (    0x18) std::__1::vector<bool, std::__1::allocator<bool>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446ef94 (    0xc0) void std::__1::__fill_n_true[abi:v160006]<std::__1::vector<bool, std::__1::allocator<bool>>>(std::__1::__bit_iterator<std::__1::vector<bool, std::__1::allocator<bool>>, false, 0>, std::__1::vector<bool, std::__1::allocator<bool>>::size_type) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446f054 (    0xbc) void std::__1::__fill_n_false[abi:v160006]<std::__1::vector<bool, std::__1::allocator<bool>>>(std::__1::__bit_iterator<std::__1::vector<bool, std::__1::allocator<bool>>, false, 0>, std::__1::vector<bool, std::__1::allocator<bool>>::size_type) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446f110 (    0xac) TFsa::moveTrans(TTrans*, TState*, TState*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446f1bc (    0x18) std::__1::vector<TTrans const*, std::__1::allocator<TTrans const*>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446f1d4 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<TTrans const*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<TTrans const*>>(std::__1::allocator<TTrans const*>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446f20c (    0x18) std::__1::vector<TState*, std::__1::allocator<TState*>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446f224 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<TState*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<TState*>>(std::__1::allocator<TState*>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446f25c (    0x18) std::__1::vector<TTrans*, std::__1::allocator<TTrans*>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446f274 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<TTrans*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<TTrans*>>(std::__1::allocator<TTrans*>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446f2ac (    0x18) std::__1::vector<TState const*, std::__1::allocator<TState const*>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446f2c4 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<TState const*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<TState const*>>(std::__1::allocator<TState const*>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446f2fc (   0x2c8) TRneParamManager::TRneParamManager(TLocaleInfo&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446f5c4 (    0x54) TLattProcParamManager::~TLattProcParamManager() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446f618 (    0x94) TRne::TRne(TLexicon*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446f6ac (     0x4) TRne::TRne(TLexicon*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446f6b0 (   0x174) std::__1::basic_istringstream<char, std::__1::char_traits<char>, std::__1::allocator<char>>::basic_istringstream[abi:v160006](std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446f824 (    0x80) TInputStream::~TInputStream() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446f8a4 (    0xf4) std::__1::basic_istringstream<char, std::__1::char_traits<char>, std::__1::allocator<char>>::~basic_istringstream() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446f998 (    0x90) TRne::freeMemory() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446fa28 (    0x54) TRne::~TRne() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446fa7c (    0x58) TRne::~TRne() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b446fad4 (  0x1224) TRne::applyInternal(std::__1::vector<wchar_t const*, std::__1::allocator<wchar_t const*>> const&, TLattice const*, std::__1::vector<TLatticeConstructionTransData*, std::__1::allocator<TLatticeConstructionTransData*>>&, unsigned long&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4470cf8 (   0xea8) addTransitionToLattice(TLattice const*, std::__1::vector<TWord const*, std::__1::allocator<TWord const*>> const&, TRneProduction*, TLexicon*, TRneParamManager const*, std::__1::vector<TLatticeConstructionTransData*, std::__1::allocator<TLatticeConstructionTransData*>>&, std::__1::vector<unsigned long, std::__1::allocator<unsigned long>>&, unsigned long&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4471ba0 (   0x310) TRne::apply(std::__1::vector<wchar_t const*, std::__1::allocator<wchar_t const*>> const&, TLattice const*, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4471eb0 (   0x580) TRne::apply(std::__1::vector<TWord const*, std::__1::allocator<TWord const*>> const&, unsigned long, unsigned long, unsigned long, std::__1::vector<std::__1::pair<TWord const*, unsigned long>, std::__1::allocator<std::__1::pair<TWord const*, unsigned long>>>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4472430 (    0xa8) std::__1::vector<wchar_t const*, std::__1::allocator<wchar_t const*>>::reserve(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44724d8 (    0xa8) std::__1::vector<TLatticeConstructionTransData*, std::__1::allocator<TLatticeConstructionTransData*>>::reserve(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4472580 (   0x584) TRne::save(TDataManager*, TDataManager*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4472b04 (   0x188) std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char>>::basic_ostringstream[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4472c8c (    0xf4) std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char>>::~basic_ostringstream() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4472d80 (     0x8) TRne::getParamManager() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4472d88 (     0x8) TRne::getType() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4472d90 (     0x8) TLatticeProcessor::isAdaptive() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4472d98 (     0x8) TLatticeProcessor::isAdapted() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4472da0 (     0x8) TLatticeProcessor::isAdapting() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4472da8 (     0x4) TRneParamManager::~TRneParamManager() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4472dac (    0x28) TRneParamManager::~TRneParamManager() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4472dd4 (    0xc0) TBoolParam::TBoolParam(wchar_t const*, wchar_t const*, unsigned long, bool, wchar_t const*, wchar_t const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4472e94 (    0x54) TLattProcParamManager::~TLattProcParamManager() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4472ee8 (    0x58) TLattProcParamManager::~TLattProcParamManager() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4472f40 (    0xfc) TInputStream::TInputStream(std::__1::basic_istream<char, std::__1::char_traits<char>>&, bool, char const*, TLocaleInfo&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b447303c (    0x48) TStringParam::get() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4473084 (    0x2c) std::__1::vector<TWord*, std::__1::allocator<TWord*>>::resize(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44730b0 (   0x244) std::__1::pair<unsigned long, unsigned long> TAligner<wchar_t const, TRneCost>::align<wchar_t const*>(wchar_t const*, wchar_t const*, wchar_t const*, wchar_t const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44732f4 (   0x114) std::__1::vector<TWord*, std::__1::allocator<TWord*>>::__append(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4473408 (    0x18) std::__1::vector<TWord*, std::__1::allocator<TWord*>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4473420 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<TWord*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<TWord*>>(std::__1::allocator<TWord*>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4473458 (    0x2c) std::__1::vector<unsigned long, std::__1::allocator<unsigned long>>::resize(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4473484 (    0x2c) std::__1::vector<unsigned short, std::__1::allocator<unsigned short>>::resize(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44734b0 (    0x60) TRneCost::getSubstitutionCost(wchar_t, wchar_t) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4473510 (   0x11c) std::__1::vector<unsigned long, std::__1::allocator<unsigned long>>::__append(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b447362c (   0x114) std::__1::vector<unsigned short, std::__1::allocator<unsigned short>>::__append(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4473740 (    0x18) std::__1::vector<unsigned short, std::__1::allocator<unsigned short>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4473758 (    0x34) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<unsigned short>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<unsigned short>>(std::__1::allocator<unsigned short>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b447378c (    0xa4) TAligner<wchar_t const, TRneCost>::~TAligner() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4473830 (    0xf4) TOutputStream::TOutputStream(std::__1::basic_ostream<char, std::__1::char_traits<char>>&, char const*, TLocaleInfo const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4473924 (    0x94) std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char>>::basic_stringbuf[abi:v160006](std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44739b8 (    0x80) TRegisterable<TLatticeProcessor>::getRegistry() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4473a38 (   0x108) TBaseRegistry<TLatticeProcessor*>::registerInstance(TLatticeProcessor*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4473b40 (    0x18) std::__1::vector<TLatticeProcessor*, std::__1::allocator<TLatticeProcessor*>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4473b58 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<TLatticeProcessor*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<TLatticeProcessor*>>(std::__1::allocator<TLatticeProcessor*>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4473b90 (    0x18) std::__1::vector<TRneProduction*, std::__1::allocator<TRneProduction*>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4473ba8 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<TRneProduction*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<TRneProduction*>>(std::__1::allocator<TRneProduction*>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4473be0 (    0x9c) std::__1::vector<TLatticeConstructionTransData, std::__1::allocator<TLatticeConstructionTransData>>::vector(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4473c7c (    0x54) std::__1::vector<TLatticeConstructionTransData, std::__1::allocator<TLatticeConstructionTransData>>::__vallocate[abi:v160006](unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4473cd0 (    0x18) std::__1::vector<TLatticeConstructionTransData, std::__1::allocator<TLatticeConstructionTransData>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4473ce8 (    0x48) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<TLatticeConstructionTransData>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<TLatticeConstructionTransData>>(std::__1::allocator<TLatticeConstructionTransData>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4473d30 (   0x1dc) TRneParamManager::~TRneParamManager() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4473f0c (     0x4) MrecInitModule_adpttype_fileutil() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4473f10 (    0xc4) AdaptConfig::writeObject(DgnStream*, unsigned int&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4473fd4 (    0x10) sizeObject(AdaptConfig const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4473fe4 (    0x88) AdaptStats::writeObject(DgnStream*, unsigned int&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b447406c (    0x34) sizeObject(AdaptStats const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44740a0 (     0x4) sizeObject(AdaptStatsHistory const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44740a4 (     0xc) AdaptConfig::clear() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44740b0 (    0x2c) AdaptStats::update(unsigned int, unsigned long long, unsigned long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44740dc (    0x78) void readObject<double>(DgnStream*, DgnPrimArray<double>&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4474154 (    0x5c) void writeObject<double>(DgnStream*, DgnPrimArray<double> const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44741b0 (    0x38) AdaptStatsHistory::~AdaptStatsHistory() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44741e8 (     0x4) AdaptStatsHistory::~AdaptStatsHistory() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44741ec (    0xf8) AdaptStatsHistory::saveASB(DFile*, DFileChecksums*, bool, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44742e4 (    0x6c) DgnIOwnArray<AdaptConfigAndStats*>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4474350 (   0x100) unsigned long sizeObject<AdaptConfigAndStats*>(DgnIOwnArray<AdaptConfigAndStats*> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4474450 (    0x50) void DgnDelete<AdaptConfigAndStats>(AdaptConfigAndStats*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44744a0 (     0x4) TErrorHandler::TErrorHandler() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44744a4 (     0x4) TErrorHandler::~TErrorHandler() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44744a8 (     0x4) MrecInitModule_gssres_recogctl() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44744ac (   0x14c) applyNewPronSetHeuristics(DgnArray<DgnPrimArray<unsigned short>>*, DgnPrimArray<unsigned char>*, DgnPrimArray<unsigned char>*, DgnPrimArray<unsigned int>*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44745f8 (    0xe0) DgnArray<DgnPrimArray<unsigned short>>::removeIndexKeepOrder(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44746d8 (   0x16c) permuteToAltProns(DgnArray<DgnPrimArray<unsigned int>>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4474844 (   0x110) GssResults::GssResults(DgnArray<DgnPrimArray<unsigned int>> const&, unsigned int, DgnArray<RecogResultChoice> const&, bool, DgnIArray<RecogGrammar*> const*, RecogGrammar const*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4474954 (   0x2f8) GssResults::getChoiceWords(DgnIArray<RecogGrammar*> const*, RecogGrammar const*, DgnArray<RecogResultChoice> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4474c4c (   0x3f8) GssResults::getWordProns(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4475044 (     0x4) GssResults::GssResults(DgnArray<DgnPrimArray<unsigned int>> const&, unsigned int, DgnArray<RecogResultChoice> const&, bool, DgnIArray<RecogGrammar*> const*, RecogGrammar const*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4475048 (    0x60) GssResults::~GssResults() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44750a8 (     0x4) GssResults::~GssResults() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44750ac (    0xb8) checkSpecInGrammar(unsigned int, RecogGrammar const*, RecogGrammar const*, bool*, bool*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4475164 (   0x258) GssResults::updateWordProns(unsigned int, unsigned int, bool, unsigned int*, DgnPrimArray<unsigned int>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44753bc (   0x140) DgnArray<DgnPrimArray<unsigned int>>::copyArraySlice(DgnArray<DgnPrimArray<unsigned int>> const&, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44754fc (    0x74) DgnArray<DgnPrimArray<unsigned int>>::find(DgnPrimArray<unsigned int> const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4475570 (    0x74) DgnArray<DgnPrimArray<unsigned short>>::find(DgnPrimArray<unsigned short> const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44755e4 (     0x4) MrecInitModule_sdparamset_sdapi() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44755e8 (   0x778) SDParamSet_GetHandle [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4475d60 (    0x30) (null) [FUNC, FunctionStarts] 
                0x00000001b4475d90 (     0x4) MrecInitModule_sdsig_sdapi() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4475d94 (    0x68) DgnArray<LinearTransform>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4475dfc (     0x4) MrecInitModule_intscale_mrecutil() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4475e00 (    0x30) BinaryIntScale::setScale(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4475e30 (    0x24) BinaryIntScale::getBits(unsigned long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4475e54 (    0x40) BinaryIntScale::getUnscaleBits(unsigned long long, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4475e94 (    0x10) BinaryIntScale::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4475ea4 (     0x4) MrecInitModule_bet_pel() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4475ea8 (    0x30) sizeObject(BandwidthTransform const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4475ed8 (    0xf0) BandwidthTransform::saveBandwidthTransform(DFile*, DFileChecksums*, bool, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4475fc8 (   0x36c) BandwidthTransform::saveText(DFile*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4476334 (    0x64) DgnArray<DgnPrimArray<int>>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4476398 (    0xc0) DgnArray<DgnString>::DgnArray(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4476458 (    0x40) MrecInitLibrary_fileutil() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4476498 (    0x28) MrecInitLibrarySet_throughFileutil() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44764c0 (    0x9c) MrecInitModule_genclass_pel() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b447655c (    0xb0) GenoneClassTree::~GenoneClassTree() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b447660c (     0x4) GenoneClassTree::~GenoneClassTree() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4476610 (   0xeb8) GenoneClassTree::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44774c8 (    0xf4) unsigned long sizeObject<DgnVector>(DgnArray<DgnVector> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44775bc (   0x100) unsigned long sizeObject<DgnMatrix>(DgnArray<DgnMatrix> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44776bc (   0xbac) GenoneClassTree::getDynamicClasses(DgnPrimArray<unsigned int> const&, unsigned int, unsigned int, unsigned int, DgnArray<DgnPrimArray<unsigned int>>&, DgnArray<DgnPrimArray<unsigned int>>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4478268 (   0x63c) void mrec_qsort_r<GenoneClassTree>(void*, unsigned long, unsigned long, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44788a4 (   0x43c) GenoneClassTree::initForType(B_GenoneClassTreeType, DgnPrimArray<unsigned int>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4478ce0 (    0x60) GenoneClassTree::release() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4478d40 (   0x6b4) GenoneClassTree::decomposeInverseVariancesForTransformationMatrixAdaptation() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44793f4 (    0x58) GenoneClassTree::clearDecomposedInverseVarianceData() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b447944c (    0x68) DgnVector::operator*(double) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44794b4 (    0x64) DgnArray<DgnVector>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4479518 (    0x68) DgnArray<DgnMatrix>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4479580 (   0x1c0) GenoneClassTree::saveGenoneClassTree(DFile*, DFileChecksums*, bool, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4479740 (   0x684) GenoneClassTree::saveGenoneClassTreeText(DFile*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4479dc4 (    0x88) void writeObject<DgnVector>(DgnStream*, DgnArray<DgnVector> const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4479e4c (    0x88) void writeObject<DgnMatrix>(DgnStream*, DgnArray<DgnMatrix> const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4479ed4 (    0x80) BitArray::add(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4479f54 (    0xc4) BitArrayIterator::scanForNextSetBitOrStop() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b447a018 (    0xc4) DgnArray<DgnPrimArray<unsigned int>>::DgnArray(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b447a0dc (    0x9c) MrecInitModule_psholder_recogctl() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b447a178 (    0x88) ParamSetIdCollSearchCmp(void const*, void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b447a200 (    0x84) ParamSetHolder::getParamSetCStringName(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b447a284 (    0x60) ParamSetIdCollSearchCmpFromParamSetId(void const*, void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b447a2e4 (   0x100) ParamSetHolder::lookupName(char const*, B_ParamSetType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b447a3e4 (    0xac) ParamSetHolder::addName(unsigned int, char const*, B_ParamSetType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b447a490 (   0x1c8) DgnCollArray<unsigned int, WordList>::add(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b447a658 (    0xc0) ParamSetHolder::getRefDetails() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b447a718 (   0x18c) ParamSetHolder::ParamSetHolder(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b447a8a4 (    0x64) ParamSetHolder::~ParamSetHolder() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b447a908 (   0xad8) ParamSetHolder::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b447b3e0 (   0x118) unsigned long sizeObject<ChannelParamSet*>(DgnIOwnArray<ChannelParamSet*> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b447b4f8 (  0x1de4) ParamSetHolder::loadParamSetHolderText(DFile*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b447d2dc (    0x30) (null) [FUNC, FunctionStarts] 
                0x00000001b447d30c (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001b447d320 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001b447d334 (   0xa74) ParamSetHolder::runUpgradeFunctionSequence(DgnTextFileVersion, DgnTextFileVersion, DgnTextFileVersion, DgnTextFileVersion, DgnTextFileVersion, DgnTextFileVersion, DgnTextFileVersion, DgnTextFileVersion, DgnTextFileVersion, DgnTextFileVersion, DgnTextFileVersion, DgnTextFileVersion, DgnIOwnArray<DynamicParamSet*>&, DgnIOwnArray<DynamicParamSet*>&, DgnIOwnArray<DynamicParamSet*>&, DgnIOwnArray<DynamicParamSet*>&, DgnIOwnArray<DynamicParamSet*>&, DgnIOwnArray<DynamicParamSet*>&, DgnIOwnArray<DynamicParamSet*>&, DgnIOwnArray<DynamicParamSet*>&, DgnIOwnArray<DynamicParamSet*>&, DgnIOwnArray<DynamicParamSet*>&, DgnIOwnArray<DynamicParamSet*>&, DgnIOwnArray<DynamicParamSet*>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b447dda8 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001b447ddbc (    0x6c) DgnIOwnArray<DynamicParamSet*>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b447de28 (   0xab4) ParamSetHolder::loadParamSetHolderBinary(DFile*, DFileChecksums*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b447e8dc (    0x30) (null) [FUNC, FunctionStarts] 
                0x00000001b447e90c (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001b447e920 (   0x278) ParamSetHolder::loadParamSetHolder(DFile*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b447eb98 (  0x117c) ParamSetHolder::saveParamSetHolderText(DFile*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b447fd14 (    0x30) (null) [FUNC, FunctionStarts] 
                0x00000001b447fd44 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001b447fd58 (    0x30) (null) [FUNC, FunctionStarts] 
                0x00000001b447fd88 (    0x64) void DgnDelete<ParamSetBase>(ParamSetBase*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b447fdec (   0x8f8) ParamSetHolder::saveParamSetHolderBinary(DFile*, DFileChecksums*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44806e4 (    0x30) (null) [FUNC, FunctionStarts] 
                0x00000001b4480714 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001b4480728 (   0x22c) ParamSetHolder::saveParamSetHolder(FileSpec const&, B_SaveResultCode*, B_SaveOverrideFormatType, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4480954 (   0xac4) ParamSetHolder::newParamSet(char const*, B_ParamSetType, bool, ParamSetBase const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4481418 (    0x30) (null) [FUNC, FunctionStarts] 
                0x00000001b4481448 (    0x88) ParamSetHolderMgr::getParamSetHolder(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44814d0 (    0x78) ParamSetHolder::getParamSet(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4481548 (   0x134) Hash<DgnString, DgnString, DgnStringScope, unsigned int>::add(DgnString const&, unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b448167c (    0x34) void DgnDelete<DynamicParamSet>(DynamicParamSet*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44816b0 (   0x290) ParamSetHolderMgr::startupParamSetHolderMgr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4481940 (    0xfc) ParamSetHolderMgr::deleteParamSetHolder(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4481a3c (    0x34) void DgnDelete<ParamSetHolder>(ParamSetHolder*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4481a70 (    0xa8) ParamSetHolderMgr::loadParamSetHolder(DFile*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4481b18 (   0x3c8) ParamSetHolderMgr::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4481ee0 (    0x90) ParamSetHolderMgr::getLatticeNBestParamSet(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4481f70 (    0x90) ParamSetHolderMgr::getPronGuessParamSet(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4482000 (    0x90) ParamSetHolderMgr::getSearchParamSet(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4482090 (    0x14) upgrade0001(DgnString*, DgnString const&, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44820a4 (    0x60) upgrade0002(DgnString*, DgnString const&, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4482104 (    0x14) upgrade0003(DgnString*, DgnString const&, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4482118 (    0x1c) upgrade0004(DgnString*, DgnString const&, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4482134 (     0x4) upgrade0005(DgnString*, DgnString const&, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4482138 (    0x6c) upgrade0006(DgnString*, DgnString const&, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44821a4 (     0x4) upgrade0007(DgnString*, DgnString const&, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44821a8 (    0x14) upgrade0008(DgnString*, DgnString const&, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44821bc (    0x6c) upgrade0009(DgnString*, DgnString const&, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4482228 (    0x14) upgrade0010(DgnString*, DgnString const&, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b448223c (    0x14) upgrade0011(DgnString*, DgnString const&, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4482250 (    0x54) upgrade0012(DgnString*, DgnString const&, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44822a4 (     0x4) upgrade0013(DgnString*, DgnString const&, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44822a8 (    0x64) upgrade0014(DgnString*, DgnString const&, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b448230c (    0x80) upgrade0015(DgnString*, DgnString const&, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b448238c (    0x54) upgrade0016(DgnString*, DgnString const&, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44823e0 (   0x1f0) upgrade0017(DgnString*, DgnString const&, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44825d0 (    0xa4) upgrade0018(DgnString*, DgnString const&, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4482674 (    0x14) upgrade0019(DgnString*, DgnString const&, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4482688 (    0x80) upgrade0020(DgnString*, DgnString const&, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4482708 (    0x54) upgrade0021(DgnString*, DgnString const&, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b448275c (    0x14) upgrade0022(DgnString*, DgnString const&, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4482770 (    0x14) upgrade0023(DgnString*, DgnString const&, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4482784 (   0x558) upgrade0024(DgnString*, DgnString const&, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4482cdc (    0x54) upgrade0025(DgnString*, DgnString const&, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4482d30 (    0x14) upgrade0026(DgnString*, DgnString const&, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4482d44 (    0x14) upgrade0027(DgnString*, DgnString const&, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4482d58 (    0x14) upgrade0028(DgnString*, DgnString const&, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4482d6c (    0x14) upgrade0029(DgnString*, DgnString const&, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4482d80 (    0x14) upgrade0030(DgnString*, DgnString const&, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4482d94 (    0xac) upgrade0031(DgnString*, DgnString const&, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4482e40 (   0x174) upgrade0032(DgnString*, DgnString const&, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4482fb4 (    0x7c) upgrade0033(DgnString*, DgnString const&, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4483030 (    0xb0) upgrade0034(DgnString*, DgnString const&, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44830e0 (    0x14) upgrade0035(DgnString*, DgnString const&, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44830f4 (    0x1c) upgrade0036(DgnString*, DgnString const&, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4483110 (    0xd4) upgrade0037(DgnString*, DgnString const&, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44831e4 (    0x14) upgrade0038(DgnString*, DgnString const&, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44831f8 (    0x4c) upgrade0039(DgnString*, DgnString const&, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4483244 (    0x14) upgrade0040(DgnString*, DgnString const&, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4483258 (    0x14) upgrade0041(DgnString*, DgnString const&, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b448326c (    0x14) upgrade0042(DgnString*, DgnString const&, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4483280 (    0x10) upgrade0043(DgnString*, DgnString const&, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4483290 (    0x54) upgrade0044(DgnString*, DgnString const&, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44832e4 (    0x14) upgrade0045(DgnString*, DgnString const&, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44832f8 (    0x1c) upgrade0046(DgnString*, DgnString const&, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4483314 (    0x14) upgrade0047(DgnString*, DgnString const&, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4483328 (    0x84) upgrade0048(DgnString*, DgnString const&, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44833ac (    0x10) upgrade0049(DgnString*, DgnString const&, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44833bc (    0x14) upgrade0050(DgnString*, DgnString const&, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44833d0 (    0xa4) upgrade0051(DgnString*, DgnString const&, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet const*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*, DynamicParamSet*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4483474 (    0xd0) DgnPrimArray<unsigned int>::searchLastOrBefore(int, int, void const*, int (*)(void const*, void const*)) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4483544 (    0x6c) DgnIOwnArray<DgnPrimArray<unsigned int>*>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44835b0 (    0x48) DgnCollArray<unsigned int, ParamSetIdCollCmpWithTemp>::~DgnCollArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44835f8 (    0x50) DgnCollArray<unsigned int, WordList>::wipeOtherArrays() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4483648 (    0x6c) DgnIOwnArray<ChannelParamSet*>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44836b4 (    0x9c) DgnCollArray<unsigned int, WordList>::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4483750 (    0xf8) unsigned long sizeObject<DgnPrimArray<unsigned int>*>(DgnIOwnArray<DgnPrimArray<unsigned int>*> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4483848 (   0x134) Hash<DgnString, DgnString, DgnStringScope, unsigned int>::Hash(char const*, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b448397c (     0x4) Hash<DgnString, DgnString, DgnStringScope, unsigned int>::~Hash() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4483980 (    0x28) Hash<DgnString, DgnString, DgnStringScope, unsigned int>::~Hash() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44839a8 (    0x40) DgnIFixArray<BucketLink<DgnString, unsigned int>*>::~DgnIFixArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44839e8 (    0x74) Hash<DgnString, DgnString, DgnStringScope, unsigned int>::~Hash() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4483a5c (    0x9c) Hash<DgnString, DgnString, DgnStringScope, unsigned int>::removeAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4483af8 (   0x110) Hash<DgnString, DgnString, DgnStringScope, unsigned int>::upSize(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4483c08 (    0xd8) Hash<DgnString, DgnString, DgnStringScope, unsigned int>::findBucket(DgnString const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4483ce0 (    0xc4) DgnArray<DgnPrimArray<unsigned short>>::DgnArray(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4483da4 (    0x40) DynamicParamSet::~DynamicParamSet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4483de4 (    0x68) DgnArray<ParamValue>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4483e4c (     0x4) MrecInitModule_cpcache_sigproc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4483e50 (   0xff0) StartupChannelParamSpecMgr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4484e40 (    0xb0) ChannelParamSet::ChannelParamSet(char const*, B_ParamSetType, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4484ef0 (     0x4) ChannelParamSet::ChannelParamSet(char const*, B_ParamSetType, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4484ef4 (   0x1ec) ChannelParamSet::ChannelParamSet(ChannelParamSet const&, char const*, B_ParamSetType, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44850e0 (     0x4) ChannelParamSet::ChannelParamSet(ChannelParamSet const&, char const*, B_ParamSetType, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44850e4 (   0x6a8) ChannelParamSet::setDefaults() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b448578c (    0x6c) ChannelParamSet::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44857f8 (   0x854) ChannelParamSet::getBoolParameter(unsigned short, B_ParamQueryMode) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b448604c (   0x118) (null) [FUNC, FunctionStarts] 
                0x00000001b4486164 (  0x1864) ChannelParamSet::getIntParameter(unsigned short, B_ParamQueryMode) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44879c8 (   0x118) (null) [FUNC, FunctionStarts] 
                0x00000001b4487ae0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4487af0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4487b00 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4487b10 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4487b20 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4487b30 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4487b40 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4487b50 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4487b60 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4487b70 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4487b80 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4487b90 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4487ba0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4487bb0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4487bc0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4487bd0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4487be0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4487bf0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4487c00 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4487c10 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4487c20 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4487c30 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4487c40 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4487c50 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4487c60 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4487c70 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4487c80 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4487c90 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4487ca0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4487cb0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4487cc0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4487cd0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4487ce0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4487cf0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4487d00 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4487d10 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4487d20 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4487d30 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4487d40 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4487d50 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4487d60 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4487d70 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4487d80 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4487d90 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4487da0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4487db0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4487dc0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4487dd0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4487de0 (   0x944) ChannelParamSet::getDoubleParameter(unsigned short, B_ParamQueryMode) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4488724 (   0x118) (null) [FUNC, FunctionStarts] 
                0x00000001b448883c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b448884c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b448885c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b448886c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b448887c (   0x6ec) ChannelParamSet::getStringParameter(unsigned short, B_ParamQueryMode) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4488f68 (   0x118) (null) [FUNC, FunctionStarts] 
                0x00000001b4489080 (   0x848) ChannelParamSet::getEnumParameter(unsigned short, B_ParamQueryMode) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44898c8 (   0x118) (null) [FUNC, FunctionStarts] 
                0x00000001b44899e0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b44899f0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4489a00 (   0x778) ChannelParamSet::setBoolParameter(unsigned short, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b448a178 (   0x118) (null) [FUNC, FunctionStarts] 
                0x00000001b448a290 (  0x1b78) ChannelParamSet::setIntParameter(unsigned short, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b448be08 (   0x118) (null) [FUNC, FunctionStarts] 
                0x00000001b448bf20 (   0x8e8) ChannelParamSet::setDoubleParameter(unsigned short, double) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b448c808 (   0x118) (null) [FUNC, FunctionStarts] 
                0x00000001b448c920 (   0x6f8) ChannelParamSet::setStringParameter(unsigned short, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b448d018 (   0x118) (null) [FUNC, FunctionStarts] 
                0x00000001b448d130 (   0x7c0) ChannelParamSet::setEnumParameter(unsigned short, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b448d8f0 (   0x118) (null) [FUNC, FunctionStarts] 
                0x00000001b448da08 (    0x44) ChannelParamSet::~ChannelParamSet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b448da4c (    0x54) ChannelParamSet::~ChannelParamSet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b448daa0 (    0x9c) MrecInitModule_dtxtfile_dfutil() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b448db3c (    0x50) readObject(DgnStream*, DgnTextFileVersion&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b448db8c (    0x50) writeObject(DgnStream*, DgnTextFileVersion const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b448dbdc (   0x19c) DgnTextFile::atoui(char const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b448dd78 (   0x19c) DgnTextFile::atou64(char const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b448df14 (   0x23c) DgnTextFile::atosi(char const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b448e150 (    0xd0) DgnTextFile::DgnTextFile() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b448e220 (    0xa8) DgnTextFile::~DgnTextFile() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b448e2c8 (   0x118) DgnTextFile::closeDgnTextFile() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b448e3e0 (     0x4) DgnTextFile::~DgnTextFile() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b448e3e4 (    0x28) DgnTextFile::~DgnTextFile() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b448e40c (   0x4f8) DgnTextFile::legalDgnTextFileVersions(DgnTextFileVersion const*, DgnArray<DgnTextFileVersion>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b448e904 (    0x14) DgnTextFile::getFileVersion() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b448e918 (   0x128) DgnTextFile::getHeaderField(char const*, DgnString*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b448ea40 (   0x14c) DgnTextFile::getHeaderFieldUnsigned(char const*, unsigned int*, bool, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b448eb8c (    0xb8) DgnTextFile::checkAgainstFormat(char const*, B_DgnTextFileFieldFormat) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b448ec44 (   0x14c) DgnTextFile::getHeaderFieldUnsigned64(char const*, unsigned long long*, bool, unsigned long long, unsigned long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b448ed90 (    0x50) DgnTextFile::getHeaderFieldBool(char const*, bool*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b448ede0 (   0x14c) DgnTextFile::getHeaderFieldInteger(char const*, int*, bool, int, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b448ef2c (   0x154) DgnTextFile::getHeaderFieldReal(char const*, double*, bool, double, double) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b448f080 (     0x8) DgnTextFile::getNumLineFields() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b448f088 (    0x18) DgnTextFile::getLineFieldNames(DgnArray<DgnString>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b448f0a0 (    0x18) DgnTextFile::getLineFieldFormats(DgnPrimArray<B_DgnTextFileFieldFormat>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b448f0b8 (     0x8) DgnTextFile::getCurrentLine() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b448f0c0 (   0x134) DgnTextFile::convertToDTFFormat(DgnString const&, DgnString*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b448f1f4 (   0x2d0) DgnTextFile::convertFromDTFFormat(DgnString const&, DgnString*, char const*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b448f4c4 (    0xf0) DgnTextFile::convertToEnvValueFormat(DgnPrimFixArray<unsigned char> const&, DgnString*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b448f5b4 (   0x364) DgnTextFile::convertFromEnvValueFormat(DgnString const&, DgnPrimFixArray<unsigned char>*, char const*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b448f918 (    0x7c) DgnTextFile::checkSafe(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b448f994 (    0x88) DgnTextFile::checkWhiteSpaceFree(char const*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b448fa1c (    0x50) DgnTextFile::checkIntegral(char const*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b448fa6c (    0xb4) DgnTextFile::checkReal(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b448fb20 (    0x5c) DgnTextFileParser::DgnTextFileParser() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b448fb7c (     0x4) DgnTextFileParser::DgnTextFileParser() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b448fb80 (    0x54) DgnTextFileParser::~DgnTextFileParser() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b448fbd4 (    0x58) DgnTextFileParser::~DgnTextFileParser() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b448fc2c (    0xd4) DgnTextFileParser::verifyMatchingFileType(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b448fd00 (    0xcc) DgnTextFileParser::verifyFileVersionInRange(DgnArray<DgnTextFileVersion> const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b448fdcc (    0x88) DgnTextFileParser::verifyMatchingNumFieldSpecs(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b448fe54 (    0x8c) DgnTextFileParser::verifyNoBodyLines() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b448fee0 (   0x43c) DgnTextFileParser::parseNextLine() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b449031c (    0xf8) DgnTextFileParser::verifyNoUnknownHeaderFields() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4490414 (   0x160) DgnTextFileParser::openDgnTextFileParser(DFile*, SubFileExtension, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4490574 (   0x66c) DgnTextFileParser::openDgnTextFileParser(DgnStream*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4490be0 (    0xb0) DgnTextFileParser::openDgnTextFileParser(FileSpec const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4490c90 (   0x280) DgnTextFileParser::getNextHeaderField(DgnString*, DgnString*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4490f10 (   0x49c) DgnTextFileParser::scanValueForLineFieldFormats(DgnString const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44913ac (   0x514) DgnTextFileParser::readHeader() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44918c0 (   0x1ec) DgnTextFileParser::getLine() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4491aac (    0x24) DgnTextFileParser::getLineFieldString(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4491ad0 (    0x24) DgnTextFileParser::getLineFieldInteger(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4491af4 (    0x24) DgnTextFileParser::getLineFieldUnsigned(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4491b18 (    0x4c) DgnTextFileParser::getLineFieldReal(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4491b64 (    0x28) DgnTextFileParser::atEof() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4491b8c (    0xb4) DgnTextFileWriter::DgnTextFileWriter() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4491c40 (     0x4) DgnTextFileWriter::DgnTextFileWriter() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4491c44 (    0x98) DgnTextFileWriter::~DgnTextFileWriter() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4491cdc (   0x568) DgnTextFileWriter::writeHeader() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4492244 (     0x4) DgnTextFileWriter::~DgnTextFileWriter() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4492248 (    0x28) DgnTextFileWriter::~DgnTextFileWriter() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4492270 (    0x74) DgnTextFileWriter::openDgnTextFileWriter(DFile*, SubFileExtension, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44922e4 (    0x34) DgnTextFileWriter::setFileType(char const*, DgnTextFileVersion const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4492318 (   0x124) DgnTextFileWriter::setHeaderField(char const*, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b449243c (    0x8c) DgnTextFileWriter::setHeaderFieldUnsigned(char const*, unsigned long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44924c8 (     0x8) DgnTextFileWriter::setHeaderFieldBool(char const*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44924d0 (    0x8c) DgnTextFileWriter::setHeaderFieldInteger(char const*, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b449255c (    0x98) DgnTextFileWriter::setHeaderFieldReal(char const*, double) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44925f4 (    0x54) DgnTextFileWriter::setLineFieldFormat(DgnPrimArray<B_DgnTextFileFieldFormat> const&, DgnArray<DgnString> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4492648 (    0xf8) DgnTextFileWriter::setLineFieldValue(unsigned int, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4492740 (    0x80) DgnTextFileWriter::setLineFieldIntegerValue(unsigned int, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44927c0 (    0x80) DgnTextFileWriter::setLineFieldUnsignedValue(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4492840 (    0x78) DgnTextFileWriter::setLineFieldRealValue(unsigned int, double) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44928b8 (   0x194) DgnTextFileWriter::writeNextLine() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4492a4c (    0x68) MrecInitLibrary_kernel() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4492ab4 (    0x2c) MrecInitLibrarySet_throughKernel() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4492ae0 (    0x38) MrecInitLibrary_lm() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4492b18 (    0x28) MrecInitLibrarySet_throughLm() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4492b40 (     0x4) MrecInitModule_emptyft_mrecutil() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4492b44 (     0x4) MrecInitModule_frmdata_frame() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4492b48 (    0x34) void DgnDelete<FeatureFrame>(FeatureFrame*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4492b7c (     0x4) MrecInitModule_sdrecog_sdapi() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4492b80 (   0x2b0) convertSDWordSpecsToTranscription(SDWordSpec const*, unsigned int, DgnArray<DgnPrimArray<unsigned int>>*, unsigned short, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4492e30 (    0xdc) HashKEV<unsigned int, unsigned int, StateIdScope>::add(unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4492f0c (    0x64) void DgnDelete<WordLattice>(WordLattice*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4492f70 (    0x34) void DgnDelete<NBestChoiceList>(NBestChoiceList*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4492fa4 (  0x17ac) SDRecog_GuessPronsNonAcoustic [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4494750 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001b4494764 (    0x34) void DgnDelete<AdaptControllerResults>(AdaptControllerResults*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4494798 (    0x50) void DgnDelete<Segmentation>(Segmentation*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44947e8 (    0x64) void DgnDelete<PelScorer>(PelScorer*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b449484c (    0x40) DgnIArray<SearchParamSet*>::~DgnIArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b449488c (    0x40) DgnIArray<WordLattice const*>::~DgnIArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44948cc (    0x40) DgnIArray<DgnPrimArray<unsigned int>*>::~DgnIArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b449490c (    0x40) DgnIArray<DgnArray<DgnArray<ParseToken>>*>::~DgnIArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b449494c (    0x40) DgnIArray<DgnArray<WordTransducerSpec>*>::~DgnIArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b449498c (    0x40) DgnIArray<WordLattice*>::~DgnIArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44949cc (    0xac) DgnArray<DgnPrimArray<bool>>::operator==(DgnArray<DgnPrimArray<bool>> const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4494a78 (    0x40) DgnIArray<RecogGrammar*>::~DgnIArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4494ab8 (    0x88) DgnIOwnArray<HashKEV<unsigned int, unsigned int, StateIdScope>*>::DgnIOwnArray(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4494b40 (    0x64) DgnIOwnArray<HashKEV<unsigned int, unsigned int, StateIdScope>*>::destructAt(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4494ba4 (    0x6c) DgnIOwnArray<Hash<BuildLmIdNgram, BuildLmIdNgram, BuildLmIdNgram, double>*>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4494c10 (    0xdc) HashKEV<unsigned int, unsigned int, StateIdScope>::HashKEV(char const*, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4494cec (     0x4) HashKEV<unsigned int, unsigned int, StateIdScope>::~HashKEV() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4494cf0 (    0x28) HashKEV<unsigned int, unsigned int, StateIdScope>::~HashKEV() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4494d18 (    0x74) HashKEV<unsigned int, unsigned int, StateIdScope>::~HashKEV() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4494d8c (   0x110) HashKEV<unsigned int, unsigned int, StateIdScope>::upSize(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4494e9c (    0x68) DgnArray<RecogResultChoice>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4494f04 (    0x40) DgnArray<RecogResultToken>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4494f44 (    0x48) NBestChoiceList::~NBestChoiceList() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4494f8c (    0x6c) DgnIOwnArray<NBestChoice*>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4494ff8 (    0x34) void DgnDelete<NBestChoice>(NBestChoice*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b449502c (    0x44) DgnIOwnArray<PelSegment*>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4495070 (    0x6c) DgnIOwnArray<PelSegment*>::destructAt(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44950dc (     0x4) MrecInitModule_repromgr_recogctl() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44950e0 (    0x94) ReproMgr::ReproMgr(char const*, B_ReproType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4495174 (   0x53c) ReproMgr::validateReproDir() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44956b0 (     0x4) ReproMgr::ReproMgr(char const*, B_ReproType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44956b4 (    0x40) ReproMgr::~ReproMgr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44956f4 (    0x34) void DgnDelete<ReproData>(ReproData*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4495728 (     0x4) ReproMgr::~ReproMgr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b449572c (   0xc74) ReproMgr::saveReproParamSets(Prefilterer*, AdaptController*, ConfidenceParamSet const*, LatticeNBestParamSet const*, PrefiltererSearchParamSet const*, PronGuessParamSet const*, DgnIArray<SearchParamSet*> const&, SearchCrossLayerParamSet const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44963a0 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001b44963b4 (   0x478) ReproMgr::saveReproVoc(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b449682c (   0x55c) ReproMgr::saveReproParsAndModels(Prefilterer*, PrefilterResult const*, DgnIArray<WordLattice const*> const*, AdaptController*, ConfidenceParamSet const*, LatticeNBestParamSet const*, PrefiltererSearchParamSet const*, PronGuessParamSet const*, DgnIArray<SearchParamSet*> const&, SearchCrossLayerParamSet const*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4496d88 (   0x488) ReproMgr::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4497210 (    0x64) DgnArray<FileSpec>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4497274 (     0x4) MrecInitModule_dstrutil_mrecutil() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4497278 (   0x24c) DgnSplitStringIntoTokens(char const*, char const*, DgnArray<DgnString>*, char) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44974c4 (   0x258) DgnSplitStringParValueIntoUintArray(char const*, char const*, char const*, unsigned int, unsigned int, unsigned int, DgnPrimArray<unsigned int>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b449771c (   0x2dc) DgnSplitStringParValueIntoDoubleArray(char const*, char const*, char const*, double, double, double, DgnPrimArray<double>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44979f8 (   0x110) MrecInitModule_paramset_mrecutil() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4497b08 (    0x50) throwWrongTypeForParamId(unsigned short, char const*, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4497b58 (    0x48) throwWrongQueryMode(B_ParamQueryMode, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4497ba0 (    0x48) throwParamSetSetFailed(char const*, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4497be8 (    0x4c) throwWrongParamIdValue(unsigned short, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4497c34 (     0x4) MrecInitModule_rpd_voc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4497c38 (   0x15c) ReproData::ReproData() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4497d94 (     0x4) ReproData::ReproData() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4497d98 (    0xac) ReproData::~ReproData() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4497e44 (     0x4) ReproData::~ReproData() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4497e48 (    0x88) WordList::isGuessedWordByOptionalTag(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4497ed0 (    0x9c) ReproData::saveReproData(FileSpec const&, B_SaveResultCode*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4497f6c (  0x11d4) ReproData::saveReproData(DFile*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4499140 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4499150 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001b4499168 (     0x8) ReproData::setReproType(B_ReproType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4499170 (     0x8) ReproData::setPronGuessingVocId(unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4499178 (     0x8) ReproData::setFragmentStateId(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4499180 (     0x8) ReproData::setOptionalPronStateId(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4499188 (     0x8) ReproData::setCollId(unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4499190 (    0x10) ReproData::setPronWords(DgnPrimArray<unsigned int> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44991a0 (    0x10) ReproData::setPWSetSizes(DgnPrimArray<unsigned int> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44991b0 (     0x8) ReproData::setSpokenFormIndex(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44991b8 (    0x10) ReproData::setSpokenForm(DgnArray<DgnString> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44991c8 (     0x8) ReproData::setMaxNewProns(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44991d0 (     0x8) ReproData::setMaxClientProns(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44991d8 (   0x130) verifyTokenizerHandle(TPTokenHandle_fake**, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4499308 (    0x80) TRegisterable<TTokenizer>::getRegistry() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4499388 (    0x50) TBaseRegistry<TTokenizer*>::find(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44993d8 (    0x50) TApiException::~TApiException() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4499428 (   0x544) saveDump(TTokenizer*, char const*, char const*, char const*, char const*, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b449996c (   0x1b0) std::__1::basic_ofstream<char, std::__1::char_traits<char>>::basic_ofstream(char const*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4499b1c (    0xc0) TBuffer<char>::resize(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4499bdc (    0xbc) std::__1::basic_ofstream<char, std::__1::char_traits<char>>::~basic_ofstream() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4499c98 (   0x684) TPToken_Open [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b449a31c (   0x4b4) TPToken_Close [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b449a7d0 (   0x7cc) TPToken_Tokenize [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b449af9c (   0x1cc) verifyStringArgument(char const*, bool, bool, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b449b168 (   0x4b4) TPToken_DeleteResult [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b449b61c (   0x574) TPToken_GetResultInfo [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b449bb90 (   0x5a8) TPToken_GetResultData [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b449c138 (   0x1d0) void verifyPointerArgument<TPTokenState, unsigned int>(TPTokenState*, unsigned int, bool, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b449c308 (   0x1d0) void verifyPointerArgument<TPTokenTrans, unsigned int>(TPTokenTrans*, unsigned int, bool, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b449c4d8 (   0x1d0) void verifyPointerArgument<char, unsigned int>(char*, unsigned int, bool, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b449c6a8 (   0x1d0) void verifyPointerArgument<unsigned int, unsigned int>(unsigned int*, unsigned int, bool, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b449c878 (    0x60) TApiException::~TApiException() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b449c8d8 (   0x218) TReentrancyHandler::TReentrancyHandler(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b449caf0 (    0x80) TReentrancyHandler::getCsIn() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b449cb70 (    0x50) TReentrancyException::~TReentrancyException() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b449cbc0 (    0x60) TReentrancyException::~TReentrancyException() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b449cc20 (    0x58) TLocaleHandler::TLocaleHandler() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b449cc78 (    0x40) TLocaleHandler::~TLocaleHandler() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b449ccb8 (    0xd0) TWord::TWord(wchar_t const*, TLexicon*, SDhWord_fake**, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b449cd88 (     0x8) TWord::getSpokenForm(TBuffer<wchar_t>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b449cd90 (    0x14) TWord::applyMask(wchar_t const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b449cda4 (   0x130) TLexicon::applyMask(SDhWord_fake**, wchar_t const*, std::__1::bitset<16ul>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b449ced4 (    0x98) TLexicon::checkBits(SDhWord_fake**, unsigned long const*, unsigned long, std::__1::bitset<16ul>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b449cf6c (    0x90) TWord::getUnigramScore() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b449cffc (    0x10) TWord::getCategoryTag(TBuffer<wchar_t>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b449d00c (   0x15c) TLexicon::getCategoryTag(SDhWord_fake**, TBuffer<wchar_t>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b449d168 (    0x14) TWord::getOptionalTagBits(TBuffer<wchar_t>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b449d17c (   0x210) TLexicon::getOptionalTagBits(SDhWord_fake**, TBuffer<wchar_t>*, std::__1::bitset<16ul>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b449d38c (    0x40) TWord::getOptionalTagBits() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b449d3cc (     0xc) TWord::getWrittenForm(TBuffer<wchar_t>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b449d3d8 (    0xb4) TLexicon::getWrittenForm(wchar_t const*, TBuffer<wchar_t>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b449d48c (     0x8) TWord::getWordSense(TBuffer<wchar_t>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b449d494 (     0xc) TWord::getTokenName(TBuffer<wchar_t>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b449d4a0 (    0xd4) TLexicon::getTokenName(wchar_t const*, TBuffer<wchar_t>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b449d574 (    0x20) TWord::getWordSpec() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b449d594 (    0x18) TWord::getHeadClone() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b449d5ac (   0x188) TLexicon::findHeadClone(wchar_t const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b449d734 (   0x238) TWord::getClones(std::__1::vector<TWord const*, std::__1::allocator<TWord const*>>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b449d96c (   0x78c) TLexicon::computeClones(wchar_t const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b449e0f8 (    0xa8) std::__1::vector<TWord const*, std::__1::allocator<TWord const*>>::reserve(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b449e1a0 (   0x4f8) TLexicon::getHomophones(wchar_t const*, wchar_t const*, std::__1::vector<TWord const*, std::__1::allocator<TWord const*>>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b449e698 (   0x6c0) TLexiconScore::TLexiconScore(wchar_t const*, wchar_t const*, unsigned long, unsigned long, TLocaleInfo const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b449ed58 (    0x58) TCollation::collateNext(wchar_t const*, unsigned long&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b449edb0 (   0x94c) TLexiconParamManager::TLexiconParamManager(TLexicon*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b449f6fc (   0x128) TParamManager::TParamManager(bool, TLocaleInfo const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b449f824 (    0x44) TLexiconParamManager::notifyChange(TParam const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b449f868 (   0xf54) TLexicon::TLexicon(TDataManager*, SDhVoc_fake**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a07bc (   0x6c8) TLexicon::overrideCollation() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a0e84 (   0x274) TLexicon::validateLexicon() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a10f8 (    0xec) THashBase<std::__1::pair<wchar_t const* const, TTag const*>, THashMapCompare<std::__1::pair<wchar_t const* const, TTag const*>, TWideCharEqualTo>, THashMapFunction<std::__1::pair<wchar_t const* const, TTag const*>, THash<wchar_t const*>>>::resize(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a11e4 (     0x4) THashMap<wchar_t const*, TWord*, THash<wchar_t const*>, TWideCharEqualTo>::~THashMap() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a11e8 (     0x4) THashMap<wchar_t*, TWordBlock*, THash<wchar_t const*>, TWideCharEqualTo>::~THashMap() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a11ec (    0x6c) TRegisterable<TLexicon>::~TRegisterable() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a1258 (     0x4) TLexicon::TLexicon(TDataManager*, SDhVoc_fake**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a125c (   0x4cc) TLexicon::~TLexicon() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a1728 (     0x4) TLexicon::~TLexicon() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a172c (    0x28) TLexicon::~TLexicon() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a1754 (   0x968) TLexicon::checkName(wchar_t const*, bool, unsigned long) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a20bc (    0x80) TBuffer<char>::c_str() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a213c (    0x30) callBackMRECArrayReallocator(unsigned long long, unsigned int, unsigned int, void*, unsigned int, void**, unsigned int*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a216c (   0x234) TLexicon::findWord(wchar_t const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a23a0 (    0x94) TWordBlock::create(std::__1::vector<TWord*, std::__1::allocator<TWord*>> const&, unsigned long, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a2434 (   0x2bc) TLexicon::findHeadClonesCollated(wchar_t const*, wchar_t const*, unsigned long, unsigned long, std::__1::vector<TLexiconMatch, std::__1::allocator<TLexiconMatch>>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a26f0 (   0x364) TLexicon::collationSearch(wchar_t const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a2a54 (    0x2c) TLexicon::makeScore(wchar_t const*, wchar_t const*, unsigned long, unsigned long) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a2a80 (   0x2c4) TLexicon::findHeadClonesCollated(wchar_t const*, unsigned long const*, unsigned long, unsigned long, unsigned long, std::__1::vector<TLexiconMatch, std::__1::allocator<TLexiconMatch>>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a2d44 (   0x73c) TLexicon::findHeadClonesCollatedPrefix(char const*, TSegmenter&, wchar_t const*, unsigned long, unsigned long, std::__1::vector<TLexiconMatch, std::__1::allocator<TLexiconMatch>>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a3480 (    0x4c) TLexicon::getPronCount(wchar_t const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a34cc (    0xa8) std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>::resize(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a3574 (    0x24) sortByFirst(std::__1::pair<wchar_t const*, wchar_t*> const&, std::__1::pair<wchar_t const*, wchar_t*> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a3598 (     0x4) TLexicon::findWordsCollated(wchar_t const*, std::__1::vector<TWord*, std::__1::allocator<TWord*>>&, wchar_t const*, bool, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a359c (   0x898) TLexicon::collationSearchInternal(wchar_t const*, std::__1::vector<TWord*, std::__1::allocator<TWord*>>&, wchar_t const*, bool, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a3e34 (   0x24c) TLexicon::collationSearchRec(wchar_t const*, std::__1::vector<TWord*, std::__1::allocator<TWord*>>&, TBuffer<wchar_t>&, unsigned long&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a4080 (   0x128) THashBase<std::__1::pair<wchar_t* const, TWordBlock*>, THashMapCompare<std::__1::pair<wchar_t* const, TWordBlock*>, TWideCharEqualTo>, THashMapFunction<std::__1::pair<wchar_t* const, TWordBlock*>, THash<wchar_t const*>>>::insert(std::__1::pair<wchar_t* const, TWordBlock*> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a41a8 (   0x240) TLexicon::addTempWord(wchar_t const*, wchar_t const*, wchar_t const*, wchar_t const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a43e8 (    0x64) THashBase<std::__1::pair<wchar_t* const, TWordBlock*>, THashMapCompare<std::__1::pair<wchar_t* const, TWordBlock*>, TWideCharEqualTo>, THashMapFunction<std::__1::pair<wchar_t* const, TWordBlock*>, THash<wchar_t const*>>>::erase(THashBaseIteratorDef<THashBase<std::__1::pair<wchar_t* const, TWordBlock*>, THashMapCompare<std::__1::pair<wchar_t* const, TWordBlock*>, TWideCharEqualTo>, THashMapFunction<std::__1::pair<wchar_t* const, TWordBlock*>, THash<wchar_t const*>>>::TEntry, std::__1::pair<wchar_t* const, TWordBlock*>>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a444c (    0x64) THashBase<std::__1::pair<wchar_t const* const, TWord*>, THashMapCompare<std::__1::pair<wchar_t const* const, TWord*>, TWideCharEqualTo>, THashMapFunction<std::__1::pair<wchar_t const* const, TWord*>, THash<wchar_t const*>>>::erase(THashBaseIteratorDef<THashBase<std::__1::pair<wchar_t const* const, TWord*>, THashMapCompare<std::__1::pair<wchar_t const* const, TWord*>, TWideCharEqualTo>, THashMapFunction<std::__1::pair<wchar_t const* const, TWord*>, THash<wchar_t const*>>>::TEntry, std::__1::pair<wchar_t const* const, TWord*>>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a44b0 (   0x464) TLexicon::cleanCache() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a4914 (   0x47c) TLexicon::save(TDataManager*, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a4d90 (  0x1064) TLexicon::loadUpgradeMap(bool, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a5df4 (   0x1b0) TLexicon::getNGramScore(TWord const*, TWord const*, TWord const*, TWord const*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a5fa4 (   0x68c) TLexicon::mapWordSequence(std::__1::vector<wchar_t const*, std::__1::allocator<wchar_t const*>> const&, unsigned long, unsigned long, bool, bool, std::__1::vector<TWord const*, std::__1::allocator<TWord const*>>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a6630 (   0x748) TLexicon::mapWord(wchar_t const*, unsigned long, bool, std::__1::vector<TWord const*, std::__1::allocator<TWord const*>>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a6d78 (    0x68) THashBase<std::__1::pair<TDecodeLink::THistory const, TDecodeLink const*>, THashMapCompare<std::__1::pair<TDecodeLink::THistory const, TDecodeLink const*>, std::__1::equal_to<TDecodeLink::THistory>>, THashMapFunction<std::__1::pair<TDecodeLink::THistory const, TDecodeLink const*>, THash<TDecodeLink::THistory>>>::clear() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a6de0 (    0x90) TDecodeLinkMapWord::computeHistory(TDecodeLinkMapWord::THistory&, std::__1::vector<TWord const*, std::__1::allocator<TWord const*>> const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a6e70 (   0x140) THashBase<std::__1::pair<TDecodeLinkMapWord::THistory const, TDecodeLinkMapWord const*>, THashMapCompare<std::__1::pair<TDecodeLinkMapWord::THistory const, TDecodeLinkMapWord const*>, std::__1::equal_to<TDecodeLinkMapWord::THistory>>, THashMapFunction<std::__1::pair<TDecodeLinkMapWord::THistory const, TDecodeLinkMapWord const*>, THash<TDecodeLinkMapWord::THistory>>>::insert(std::__1::pair<TDecodeLinkMapWord::THistory const, TDecodeLinkMapWord const*> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a6fb0 (    0xa8) std::__1::vector<TDecodeLinkMapWord const*, std::__1::allocator<TDecodeLinkMapWord const*>>::reserve(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a7058 (     0x4) THashMap<TDecodeLinkMapWord::THistory, TDecodeLinkMapWord const*, THash<TDecodeLinkMapWord::THistory>, std::__1::equal_to<TDecodeLinkMapWord::THistory>>::~THashMap() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a705c (    0xf0) getSecondField(wchar_t const*, TBuffer<wchar_t>&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a714c (    0xa0) getThirdField(wchar_t const*, TBuffer<wchar_t>&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a71ec (   0x244) TLexicon::constructWordName(wchar_t const*, wchar_t const*, wchar_t const*, bool, TBuffer<wchar_t>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a7430 (   0x61c) addToWordName(wchar_t const*, TLocaleInfo const&, bool, bool, TBuffer<wchar_t>&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a7a4c (    0x98) TBuffer<wchar_t>::operator+=(TBuffer<wchar_t> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a7ae4 (   0x180) respellRoot(TBuffer<wchar_t>&, wchar_t const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a7c64 (   0x244) findStressPosition(wchar_t const*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a7ea8 (     0x4) TLexiconParamManager::~TLexiconParamManager() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a7eac (    0x28) TLexiconParamManager::~TLexiconParamManager() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a7ed4 (   0x108) TBaseRegistry<TParamManager*>::registerInstance(TParamManager*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a7fdc (    0x18) std::__1::vector<TParamManager*, std::__1::allocator<TParamManager*>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a7ff4 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<TParamManager*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<TParamManager*>>(std::__1::allocator<TParamManager*>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a802c (    0x98) TEnvManager::~TEnvManager() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a80c4 (    0x50) THashBase<std::__1::pair<wchar_t const* const, TWord*>, THashMapCompare<std::__1::pair<wchar_t const* const, TWord*>, TWideCharEqualTo>, THashMapFunction<std::__1::pair<wchar_t const* const, TWord*>, THash<wchar_t const*>>>::~THashBase() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a8114 (     0x4) THashBase<std::__1::pair<wchar_t const* const, TWord*>, THashMapCompare<std::__1::pair<wchar_t const* const, TWord*>, TWideCharEqualTo>, THashMapFunction<std::__1::pair<wchar_t const* const, TWord*>, THash<wchar_t const*>>>::~THashBase() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a8118 (    0x28) THashBase<std::__1::pair<wchar_t const* const, TWord*>, THashMapCompare<std::__1::pair<wchar_t const* const, TWord*>, TWideCharEqualTo>, THashMapFunction<std::__1::pair<wchar_t const* const, TWord*>, THash<wchar_t const*>>>::~THashBase() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a8140 (    0x50) THashBase<std::__1::pair<wchar_t* const, TWordBlock*>, THashMapCompare<std::__1::pair<wchar_t* const, TWordBlock*>, TWideCharEqualTo>, THashMapFunction<std::__1::pair<wchar_t* const, TWordBlock*>, THash<wchar_t const*>>>::~THashBase() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a8190 (     0x4) THashBase<std::__1::pair<wchar_t* const, TWordBlock*>, THashMapCompare<std::__1::pair<wchar_t* const, TWordBlock*>, TWideCharEqualTo>, THashMapFunction<std::__1::pair<wchar_t* const, TWordBlock*>, THash<wchar_t const*>>>::~THashBase() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a8194 (    0x28) THashBase<std::__1::pair<wchar_t* const, TWordBlock*>, THashMapCompare<std::__1::pair<wchar_t* const, TWordBlock*>, TWideCharEqualTo>, THashMapFunction<std::__1::pair<wchar_t* const, TWordBlock*>, THash<wchar_t const*>>>::~THashBase() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a81bc (    0xb4) THashBase<std::__1::pair<wchar_t const* const, TWord*>, THashMapCompare<std::__1::pair<wchar_t const* const, TWord*>, TWideCharEqualTo>, THashMapFunction<std::__1::pair<wchar_t const* const, TWord*>, THash<wchar_t const*>>>::find(std::__1::pair<wchar_t const* const, TWord*> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a8270 (   0x128) THashBase<std::__1::pair<wchar_t const* const, TWord*>, THashMapCompare<std::__1::pair<wchar_t const* const, TWord*>, TWideCharEqualTo>, THashMapFunction<std::__1::pair<wchar_t const* const, TWord*>, THash<wchar_t const*>>>::insert(std::__1::pair<wchar_t const* const, TWord*> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a8398 (    0x50) THashBase<std::__1::pair<TDecodeLinkMapWord::THistory const, TDecodeLinkMapWord const*>, THashMapCompare<std::__1::pair<TDecodeLinkMapWord::THistory const, TDecodeLinkMapWord const*>, std::__1::equal_to<TDecodeLinkMapWord::THistory>>, THashMapFunction<std::__1::pair<TDecodeLinkMapWord::THistory const, TDecodeLinkMapWord const*>, THash<TDecodeLinkMapWord::THistory>>>::~THashBase() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a83e8 (     0x4) THashBase<std::__1::pair<TDecodeLinkMapWord::THistory const, TDecodeLinkMapWord const*>, THashMapCompare<std::__1::pair<TDecodeLinkMapWord::THistory const, TDecodeLinkMapWord const*>, std::__1::equal_to<TDecodeLinkMapWord::THistory>>, THashMapFunction<std::__1::pair<TDecodeLinkMapWord::THistory const, TDecodeLinkMapWord const*>, THash<TDecodeLinkMapWord::THistory>>>::~THashBase() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a83ec (    0x28) THashBase<std::__1::pair<TDecodeLinkMapWord::THistory const, TDecodeLinkMapWord const*>, THashMapCompare<std::__1::pair<TDecodeLinkMapWord::THistory const, TDecodeLinkMapWord const*>, std::__1::equal_to<TDecodeLinkMapWord::THistory>>, THashMapFunction<std::__1::pair<TDecodeLinkMapWord::THistory const, TDecodeLinkMapWord const*>, THash<TDecodeLinkMapWord::THistory>>>::~THashBase() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a8414 (    0xe0) findPreviousVowel(wchar_t const*, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a84f4 (   0x78c) TLexiconParamManager::~TLexiconParamManager() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a8c80 (    0xb4) std::__1::vector<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>, std::__1::allocator<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>>::vector(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a8d34 (    0x38) std::__1::__exception_guard_exceptions<std::__1::vector<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>, std::__1::allocator<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>>::__destroy_vector>::~__exception_guard_exceptions[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a8d6c (     0x4) TRegisterable<TLexicon>::~TRegisterable() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a8d70 (    0x28) TRegisterable<TLexicon>::~TRegisterable() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a8d98 (    0x28) THashMap<wchar_t*, TWordBlock*, THash<wchar_t const*>, TWideCharEqualTo>::~THashMap() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a8dc0 (    0x28) THashMap<wchar_t const*, TWord*, THash<wchar_t const*>, TWideCharEqualTo>::~THashMap() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a8de8 (    0x80) TRegisterable<TLexicon>::getRegistry() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a8e68 (    0x54) THashBase<std::__1::pair<TDecodeLink::THistory const, TDecodeLink const*>, THashMapCompare<std::__1::pair<TDecodeLink::THistory const, TDecodeLink const*>, std::__1::equal_to<TDecodeLink::THistory>>, THashMapFunction<std::__1::pair<TDecodeLink::THistory const, TDecodeLink const*>, THash<TDecodeLink::THistory>>>::findNextPrime(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a8ebc (   0x108) TBaseRegistry<TLexicon*>::registerInstance(TLexicon*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a8fc4 (    0x18) std::__1::vector<TLexicon*, std::__1::allocator<TLexicon*>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a8fdc (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<TLexicon*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<TLexicon*>>(std::__1::allocator<TLexicon*>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a9014 (    0x18) std::__1::vector<TLexiconMatch, std::__1::allocator<TLexiconMatch>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a902c (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<TLexiconMatch>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<TLexiconMatch>>(std::__1::allocator<TLexiconMatch>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a9064 (    0x3c) std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>::~vector[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a90a0 (    0x54) std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>::__destroy_vector::operator()[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a90f4 (    0x58) std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>::__clear[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a914c (   0x170) std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>::__append(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a92bc (    0x78) std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>::__swap_out_circular_buffer(std::__1::__split_buffer<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>&>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a9334 (    0x18) std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a934c (    0x48) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>(std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a9394 (    0xa0) std::__1::reverse_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*> std::__1::__uninitialized_allocator_move_if_noexcept[abi:v160006]<std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::reverse_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*>, std::__1::reverse_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*>, std::__1::reverse_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*>>(std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>&, std::__1::reverse_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*>, std::__1::reverse_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1:...
                0x00000001b44a9434 (    0x38) std::__1::__exception_guard_exceptions<std::__1::_AllocatorDestroyRangeReverse<std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::reverse_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*>>>::~__exception_guard_exceptions[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a946c (    0x48) std::__1::_AllocatorDestroyRangeReverse<std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::reverse_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*>>::operator()[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a94b4 (    0x38) std::__1::__split_buffer<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>&>::~__split_buffer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a94ec (    0x58) std::__1::__split_buffer<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>&>::__destruct_at_end[abi:v160006](std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a9544 (    0x18) std::__1::vector<std::__1::pair<wchar_t const*, wchar_t*>, std::__1::allocator<std::__1::pair<wchar_t const*, wchar_t*>>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a955c (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<std::__1::pair<wchar_t const*, wchar_t*>>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<std::__1::pair<wchar_t const*, wchar_t*>>>(std::__1::allocator<std::__1::pair<wchar_t const*, wchar_t*>>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a9594 (   0x4dc) void std::__1::__introsort<std::__1::_ClassicAlgPolicy, bool (*&)(std::__1::pair<wchar_t const*, wchar_t*> const&, std::__1::pair<wchar_t const*, wchar_t*> const&), std::__1::pair<wchar_t const*, wchar_t*>*>(std::__1::pair<wchar_t const*, wchar_t*>*, std::__1::pair<wchar_t const*, wchar_t*>*, bool (*&)(std::__1::pair<wchar_t const*, wchar_t*> const&, std::__1::pair<wchar_t const*, wchar_t*> const&), std::__1::iterator_traits<std::__1::pair<wchar_t const*, wchar_t*>*>::difference_type) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a9a70 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001b44a9a88 (    0xe0) void std::__1::__insertion_sort_3[abi:v160006]<std::__1::_ClassicAlgPolicy, bool (*&)(std::__1::pair<wchar_t const*, wchar_t*> const&, std::__1::pair<wchar_t const*, wchar_t*> const&), std::__1::pair<wchar_t const*, wchar_t*>*>(std::__1::pair<wchar_t const*, wchar_t*>*, std::__1::pair<wchar_t const*, wchar_t*>*, bool (*&)(std::__1::pair<wchar_t const*, wchar_t*> const&, std::__1::pair<wchar_t const*, wchar_t*> const&)) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a9b68 (   0x144) unsigned int std::__1::__sort3[abi:v160006]<std::__1::_ClassicAlgPolicy, bool (*&)(std::__1::pair<wchar_t const*, wchar_t*> const&, std::__1::pair<wchar_t const*, wchar_t*> const&), std::__1::pair<wchar_t const*, wchar_t*>*>(std::__1::pair<wchar_t const*, wchar_t*>*, std::__1::pair<wchar_t const*, wchar_t*>*, std::__1::pair<wchar_t const*, wchar_t*>*, bool (*&)(std::__1::pair<wchar_t const*, wchar_t*> const&, std::__1::pair<wchar_t const*, wchar_t*> const&)) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a9cac (   0x1d0) bool std::__1::__insertion_sort_incomplete<bool (*&)(std::__1::pair<wchar_t const*, wchar_t*> const&, std::__1::pair<wchar_t const*, wchar_t*> const&), std::__1::pair<wchar_t const*, wchar_t*>*>(std::__1::pair<wchar_t const*, wchar_t*>*, std::__1::pair<wchar_t const*, wchar_t*>*, bool (*&)(std::__1::pair<wchar_t const*, wchar_t*> const&, std::__1::pair<wchar_t const*, wchar_t*> const&)) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a9e7c (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001b44a9e94 (   0x100) unsigned int std::__1::__sort4[abi:v160006]<std::__1::_ClassicAlgPolicy, bool (*&)(std::__1::pair<wchar_t const*, wchar_t*> const&, std::__1::pair<wchar_t const*, wchar_t*> const&), std::__1::pair<wchar_t const*, wchar_t*>*>(std::__1::pair<wchar_t const*, wchar_t*>*, std::__1::pair<wchar_t const*, wchar_t*>*, std::__1::pair<wchar_t const*, wchar_t*>*, std::__1::pair<wchar_t const*, wchar_t*>*, bool (*&)(std::__1::pair<wchar_t const*, wchar_t*> const&, std::__1::pair<wchar_t const*, wchar_t*> const&)) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44a9f94 (   0x170) std::__1::pair<wchar_t const*, wchar_t*>* std::__1::__partial_sort_impl[abi:v160006]<std::__1::_ClassicAlgPolicy, bool (*&)(std::__1::pair<wchar_t const*, wchar_t*> const&, std::__1::pair<wchar_t const*, wchar_t*> const&), std::__1::pair<wchar_t const*, wchar_t*>*, std::__1::pair<wchar_t const*, wchar_t*>*>(std::__1::pair<wchar_t const*, wchar_t*>*, std::__1::pair<wchar_t const*, wchar_t*>*, std::__1::pair<wchar_t const*, wchar_t*>*, bool (*&)(std::__1::pair<wchar_t const*, wchar_t*> const&, std::__1::pair<wchar_t const*, wchar_t*> const&)) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44aa104 (   0x144) void std::__1::__sift_down[abi:v160006]<std::__1::_ClassicAlgPolicy, bool (*&)(std::__1::pair<wchar_t const*, wchar_t*> const&, std::__1::pair<wchar_t const*, wchar_t*> const&), std::__1::pair<wchar_t const*, wchar_t*>*>(std::__1::pair<wchar_t const*, wchar_t*>*, bool (*&)(std::__1::pair<wchar_t const*, wchar_t*> const&, std::__1::pair<wchar_t const*, wchar_t*> const&), std::__1::iterator_traits<std::__1::pair<wchar_t const*, wchar_t*>*>::difference_type, std::__1::pair<wchar_t const*, wchar_t*>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44aa248 (    0xb0) std::__1::pair<wchar_t const*, wchar_t*>* std::__1::__floyd_sift_down[abi:v160006]<std::__1::_ClassicAlgPolicy, bool (*&)(std::__1::pair<wchar_t const*, wchar_t*> const&, std::__1::pair<wchar_t const*, wchar_t*> const&), std::__1::pair<wchar_t const*, wchar_t*>*>(std::__1::pair<wchar_t const*, wchar_t*>*, bool (*&)(std::__1::pair<wchar_t const*, wchar_t*> const&, std::__1::pair<wchar_t const*, wchar_t*> const&), std::__1::iterator_traits<std::__1::pair<wchar_t const*, wchar_t*>*>::difference_type) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44aa2f8 (    0xb0) void std::__1::__sift_up[abi:v160006]<std::__1::_ClassicAlgPolicy, bool (*&)(std::__1::pair<wchar_t const*, wchar_t*> const&, std::__1::pair<wchar_t const*, wchar_t*> const&), std::__1::pair<wchar_t const*, wchar_t*>*>(std::__1::pair<wchar_t const*, wchar_t*>*, std::__1::pair<wchar_t const*, wchar_t*>*, bool (*&)(std::__1::pair<wchar_t const*, wchar_t*> const&, std::__1::pair<wchar_t const*, wchar_t*> const&), std::__1::iterator_traits<std::__1::pair<wchar_t const*, wchar_t*>*>::difference_type) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44aa3a8 (   0x148) unsigned int std::__1::__sort5<bool (*&)(std::__1::pair<wchar_t const*, wchar_t*> const&, std::__1::pair<wchar_t const*, wchar_t*> const&), std::__1::pair<wchar_t const*, wchar_t*>*>(std::__1::pair<wchar_t const*, wchar_t*>*, std::__1::pair<wchar_t const*, wchar_t*>*, std::__1::pair<wchar_t const*, wchar_t*>*, std::__1::pair<wchar_t const*, wchar_t*>*, std::__1::pair<wchar_t const*, wchar_t*>*, bool (*&)(std::__1::pair<wchar_t const*, wchar_t*> const&, std::__1::pair<wchar_t const*, wchar_t*> const&)) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44aa4f0 (    0xb4) THashBase<std::__1::pair<wchar_t* const, TWordBlock*>, THashMapCompare<std::__1::pair<wchar_t* const, TWordBlock*>, TWideCharEqualTo>, THashMapFunction<std::__1::pair<wchar_t* const, TWordBlock*>, THash<wchar_t const*>>>::find(std::__1::pair<wchar_t* const, TWordBlock*> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44aa5a4 (    0x44) std::__1::__tree<std::__1::__value_type<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>, TWordBlock*>, std::__1::__map_value_compare<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>, std::__1::__value_type<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>, TWordBlock*>, std::__1::less<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>, TWordBlock*>>>::erase(std::__1::__tree_const_iterator<std::__1::__value_type<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>, TWordBlock*>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<wchar_t, std::__1::char_traits<wc...
                0x00000001b44aa5e8 (    0x74) std::__1::__tree<std::__1::__value_type<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>, TWordBlock*>, std::__1::__map_value_compare<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>, std::__1::__value_type<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>, TWordBlock*>, std::__1::less<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>, TWordBlock*>>>::__remove_node_pointer(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>, TWordBlock*>, void*>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44aa65c (    0x88) std::__1::__tree_iterator<std::__1::__value_type<wchar_t const*, wchar_t const*>, std::__1::__tree_node<std::__1::__value_type<wchar_t const*, wchar_t const*>, void*>*, long> std::__1::__tree<std::__1::__value_type<wchar_t const*, wchar_t const*>, std::__1::__map_value_compare<wchar_t const*, std::__1::__value_type<wchar_t const*, wchar_t const*>, TWideCharCompare, true>, std::__1::allocator<std::__1::__value_type<wchar_t const*, wchar_t const*>>>::__emplace_multi<std::__1::pair<wchar_t*, wchar_t*>>(std::__1::pair<wchar_t*, wchar_t*>&&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44aa6e4 (    0x78) std::__1::__tree<std::__1::__value_type<wchar_t const*, wchar_t const*>, std::__1::__map_value_compare<wchar_t const*, std::__1::__value_type<wchar_t const*, wchar_t const*>, TWideCharCompare, true>, std::__1::allocator<std::__1::__value_type<wchar_t const*, wchar_t const*>>>::__find_leaf_high(std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*&, wchar_t const* const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44aa75c (    0x84) std::__1::vector<TWord const*, std::__1::allocator<TWord const*>>::vector(unsigned long, TWord const* const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44aa7e0 (    0x18) std::__1::vector<TDecodeLinkMapWord const*, std::__1::allocator<TDecodeLinkMapWord const*>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44aa7f8 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<TDecodeLinkMapWord const*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<TDecodeLinkMapWord const*>>(std::__1::allocator<TDecodeLinkMapWord const*>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44aa830 (    0x28) THashMap<TDecodeLinkMapWord::THistory, TDecodeLinkMapWord const*, THash<TDecodeLinkMapWord::THistory>, std::__1::equal_to<TDecodeLinkMapWord::THistory>>::~THashMap() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44aa858 (    0x90) THashBase<std::__1::pair<TDecodeLinkMapWord::THistory const, TDecodeLinkMapWord const*>, THashMapCompare<std::__1::pair<TDecodeLinkMapWord::THistory const, TDecodeLinkMapWord const*>, std::__1::equal_to<TDecodeLinkMapWord::THistory>>, THashMapFunction<std::__1::pair<TDecodeLinkMapWord::THistory const, TDecodeLinkMapWord const*>, THash<TDecodeLinkMapWord::THistory>>>::find(std::__1::pair<TDecodeLinkMapWord::THistory const, TDecodeLinkMapWord const*> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44aa8e8 (    0xc8) THashBase<std::__1::pair<TDecodeLink::THistory const, TDecodeLink const*>, THashMapCompare<std::__1::pair<TDecodeLink::THistory const, TDecodeLink const*>, std::__1::equal_to<TDecodeLink::THistory>>, THashMapFunction<std::__1::pair<TDecodeLink::THistory const, TDecodeLink const*>, THash<TDecodeLink::THistory>>>::resize(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44aa9b0 (    0xe0) std::__1::pair<std::__1::__tree_const_iterator<std::__1::__value_type<wchar_t const*, wchar_t const*>, std::__1::__tree_node<std::__1::__value_type<wchar_t const*, wchar_t const*>, void*>*, long>, std::__1::__tree_const_iterator<std::__1::__value_type<wchar_t const*, wchar_t const*>, std::__1::__tree_node<std::__1::__value_type<wchar_t const*, wchar_t const*>, void*>*, long>> std::__1::__tree<std::__1::__value_type<wchar_t const*, wchar_t const*>, std::__1::__map_value_compare<wchar_t const*, std::__1::__value_type<wchar_t const*, wchar_t const*>, TWideCharCompare, true>, std::__1::allocator<std::__1::__value_type<wchar_t const*, wchar_t const*>>>::__equal_range_multi<wchar_t const*>(wchar_t const* const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44aaa90 (     0x4) MrecInitModule_statemgr_voc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44aaa94 (    0x10) sizeObject(ParseToken const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44aaaa4 (    0x6c) writeObject(DgnStream*, ParseToken const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44aab10 (    0x8c) readObject(DgnStream*, ParseToken&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44aab9c (    0x50) readObject(DgnStream*, StateSpec&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44aabec (    0x50) readObject(DgnStream*, RuleSpec&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44aac3c (    0x90) StateMgr::computeOneStateIdNameChecksum(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44aaccc (    0x74) StateMgr::computeStateIdNameChecksum() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44aad40 (   0x888) StateMgr::StateMgr(Voc*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ab5c8 (    0x28) StateMgr::newState(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ab5f0 (     0x4) StateMgr::StateMgr(Voc*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ab5f4 (   0x1d4) StateMgr::~StateMgr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ab7c8 (     0x4) StateMgr::~StateMgr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ab7cc (    0xd0) StateMgr::addPrimitiveBegPhonesArray(unsigned int, DgnPrimArray<unsigned int> const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ab89c (    0xac) StateMgr::addPrimitiveBegPhones(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ab948 (    0xa0) StateMgr::recomputePrimitiveBegPhones(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ab9e8 (    0x58) StateMgr::recomputeAllPrimitiveBegPhones() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44aba40 (     0xc) StateMgr::declarePhnIndexSetsInitialized() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44aba4c (    0x60) StateMgr::isPrecedingNonAcousticWordForState(unsigned int, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44abaac (    0xf4) StateMgr::isValidPrecedingNonAcousticWordStateForUpgrade(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44abba0 (    0x60) StateMgr::verifyState(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44abc00 (    0x34) StateMgr::getStateTransition(unsigned int, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44abc34 (   0x188) StateMgr::resetPrecedingNonAcousticWordStates() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44abdbc (   0x15c) StateMgr::upgradePrecedingNonAcousticWordsAllowed(DgnPrimArray<unsigned char> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44abf18 (    0xb0) StateMgr::getHandle(char const*, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44abfc8 (   0x1a4) StateMgr::addWordIdArrayNoPhones(unsigned int, DgnPrimArray<unsigned int> const*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ac16c (    0x6c) StateMgr::addPrecedingNonAcousticWordStateRef(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ac1d8 (  0x1130) StateMgr::loadStateMgr(DFile*, DFileChecksums*, bool, unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ad308 (   0x134) void readObject<DgnCollArray<unsigned int, WordList>>(DgnStream*, DgnArray<DgnCollArray<unsigned int, WordList>>&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ad43c (   0x114) void readObject<DgnArray<RuleSpec>>(DgnStream*, DgnArray<DgnArray<RuleSpec>>&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ad550 (   0x114) void readObject<DgnPrimArray<unsigned short>>(DgnStream*, DgnArray<DgnPrimArray<unsigned short>>&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ad664 (   0x114) void readObject<DgnArray<StateSpec>>(DgnStream*, DgnArray<DgnArray<StateSpec>>&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ad778 (    0x78) void readObject<int>(DgnStream*, DgnPrimArray<int>&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ad7f0 (   0x478) StateMgr::killStateInternal(unsigned int, bool, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44adc68 (    0x3c) StateMgr::isEmpty() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44adca4 (    0x80) StateMgr::makeSpecialEouStateId() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44add24 (   0xb18) StateMgr::newState(unsigned int, unsigned short const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ae83c (   0x130) StateMgr::setEndOfUtteranceAllowed(unsigned int, bool, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ae96c (   0x384) StateMgr::saveStateMgr(DFile*, DFileChecksums*, bool, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44aecf0 (    0x88) void writeObject<DgnCollArray<unsigned int, WordList>>(DgnStream*, DgnArray<DgnCollArray<unsigned int, WordList>> const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44aed78 (    0x88) void writeObject<DgnPrimArray<unsigned short>>(DgnStream*, DgnArray<DgnPrimArray<unsigned short>> const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44aee00 (    0x88) void writeObject<DgnPrimArray<unsigned int>>(DgnStream*, DgnArray<DgnPrimArray<unsigned int>> const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44aee88 (    0x5c) void writeObject<int>(DgnStream*, DgnPrimFixArray<int> const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44aeee4 (  0x24d4) StateMgr::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b13b8 (   0x10c) unsigned long sizeObject<DgnCollArray<unsigned int, WordList>>(DgnArray<DgnCollArray<unsigned int, WordList>> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b14c4 (    0xf8) unsigned long sizeObject<BitArray*>(DgnIOwnArray<BitArray*> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b15bc (    0xf0) unsigned long sizeObject<DgnPrimArray<unsigned short>>(DgnArray<DgnPrimArray<unsigned short>> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b16ac (    0x48) StateMgr::getName(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b16f4 (    0x84) DgnPrimArray<unsigned int>::compact() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b1778 (    0x8c) StateMgr::precedingNonAcousticWordStateValid(unsigned int, unsigned int, DgnString*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b1804 (    0x60) StateMgr::verifyVisible(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b1864 (    0x78) StateMgr::verifyStateFull(unsigned int, bool, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b18dc (    0x70) StateMgr::verifyAliasingValid(unsigned int, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b194c (    0xb8) StateMgr::verifyPrecedingNonAcousticWordStateValid(unsigned int, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b1a04 (    0x9c) StateMgr::preAllocToEnsureStateId(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b1aa0 (   0x3a4) StateMgr::killState(unsigned int, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b1e44 (     0x8) StateMgr::doneEnsureStateId() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b1e4c (   0x210) StateMgr::newState(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b205c (    0x68) StateMgr::allTransitioningStatesAlreadyHaveRPA(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b20c4 (    0x64) StateMgr::allTransitioningStatesHavePA(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b2128 (    0xbc) StateMgr::changeRecursivePrefilteringAllowed(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b21e4 (    0x5c) StateMgr::setColls(unsigned int, DgnPrimArray<unsigned short> const*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b2240 (   0x214) StateMgr::deleteWordIdNoPhones(unsigned int, unsigned int, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b2454 (    0x34) void DgnDelete<BitArray>(BitArray*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b2488 (   0x238) StateMgr::setEmptyStateTransition(unsigned int, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b26c0 (   0x11c) StateMgr::setPrecedingNonAcousticWordState(unsigned int, unsigned int, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b27dc (   0x224) StateMgr::setWordAliasState(unsigned int, unsigned int, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b2a00 (   0x15c) StateMgr::setStateCharacteristicsForRuleState(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b2b5c (    0xe0) StateMgr::setName(unsigned int, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b2c3c (    0x3c) StateMgr::getParent(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b2c78 (    0xc4) StateMgr::setWeights(unsigned int, unsigned int, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b2d3c (    0x34) StateMgr::getWeights(unsigned int, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b2d70 (    0xcc) StateMgr::setWordPenalty(unsigned int, int, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b2e3c (    0x34) StateMgr::getWordPenalty(unsigned int, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b2e70 (    0x54) StateMgr::checkCollIdExposed(unsigned int, unsigned short) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b2ec4 (    0x4c) DgnCollArray<unsigned int, WordList>::checkCollIdExposed(unsigned short) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b2f10 (    0xf0) StateMgr::isWordIdInState(unsigned int, unsigned int, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b3000 (   0x1e0) DgnCollArray<unsigned int, WordList>::addArray(DgnPrimArray<unsigned int> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b31e0 (    0xd4) StateMgr::getBitWords(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b32b4 (    0xa4) StateMgr::addWordIdArray(unsigned int, DgnPrimArray<unsigned int> const*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b3358 (    0x88) DgnCollArray<unsigned int, WordList>::preAllocate(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b33e0 (    0x84) StateMgr::addWordIdsToStatesWithId(DgnPrimArray<unsigned int> const*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b3464 (   0x140) DgnCollArray<unsigned int, WordList>::remove(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b35a4 (   0x290) StateMgr::deleteWordIdArrayNoPhones(unsigned int, DgnPrimArray<unsigned int> const*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b3834 (   0x164) DgnCollArray<unsigned int, WordList>::removeArray(DgnPrimArray<unsigned int> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b3998 (    0x70) StateMgr::deleteWordIdArray(unsigned int, DgnPrimArray<unsigned int> const*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b3a08 (    0x84) StateMgr::deleteWordIdsFromStatesWithId(DgnPrimArray<unsigned int> const*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b3a8c (    0x38) StateMgr::getEndOfUtteranceAllowed(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b3ac4 (    0x80) StateMgr::isStateInRule(unsigned int, unsigned short) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b3b44 (    0x68) StateMgr::includeStateInRule(unsigned int, unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b3bac (    0x54) StateMgr::unincludeStateInRule(unsigned int, unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b3c00 (    0xe8) StateMgr::getWordsWithPrefix(unsigned int, unsigned short, char const*, char const*, DgnPrimArray<unsigned int>*, bool*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b3ce8 (    0x94) StateMgr::getCollWords(unsigned int, unsigned short, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b3d7c (    0x3c) StateMgr::getColls(unsigned int, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b3db8 (   0x320) DgnCollArray<unsigned int, WordList>::setColls(DgnPrimArray<unsigned short> const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b40d8 (    0x80) StateMgr::setLMAllowed(unsigned int, bool, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b4158 (    0x3c) StateMgr::getLMAllowed(unsigned int, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b4194 (    0xd4) StateMgr::setPrecedingNonAcousticWordRequired(unsigned int, bool, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b4268 (    0x38) StateMgr::getPrecedingNonAcousticWordState(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b42a0 (    0x40) StateMgr::getPrecedingNonAcousticWordRequired(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b42e0 (    0xac) StateMgr::setPrefilteringAllowed(unsigned int, bool, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b438c (    0x40) StateMgr::getPrefilteringAllowed(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b43cc (    0x80) StateMgr::setCoartAllowed(unsigned int, bool, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b444c (    0x3c) StateMgr::getCoartAllowed(unsigned int, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b4488 (   0x108) StateMgr::setSkipAllowed(unsigned int, bool, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b4590 (   0x140) StateMgr::verifyStateNotInAllSkippableLoop(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b46d0 (    0x3c) StateMgr::getSkipAllowed(unsigned int, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b470c (   0x168) StateMgr::setLeftWBAllowed(unsigned int, bool, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b4874 (    0x3c) StateMgr::getLeftWBAllowed(unsigned int, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b48b0 (   0x168) StateMgr::setRightWBAllowed(unsigned int, bool, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b4a18 (    0x3c) StateMgr::getRightWBAllowed(unsigned int, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b4a54 (    0x78) StateMgr::setCollapsible(unsigned int, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b4acc (    0x38) StateMgr::getCollapsible(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b4b04 (   0x184) StateMgr::setTimeConstraint(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b4c88 (    0x80) StateMgr::getTimeConstraint(unsigned int, unsigned int*, unsigned int*, unsigned int*, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b4d08 (    0x30) StateMgr::getIncludingRules(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b4d38 (    0xb8) StateMgr::addChildRule(unsigned int, unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b4df0 (    0x3c) StateMgr::getChildRuleCount(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b4e2c (    0x38) StateMgr::getChildRules(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b4e64 (     0x4) StateMgr::beginRecursiveOperation() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b4e68 (    0x68) StateMgr::endRecursiveOperation() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b4ed0 (    0x38) StateMgr::getChildStates(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b4f08 (    0x6c) StateMgr::addAliasingStateRef(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b4f74 (    0x6c) StateMgr::addTransitioningStateRef(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b4fe0 (    0x34) StateMgr::getStateTransitionNumParseTokens(unsigned int, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b5014 (    0x34) StateMgr::getStateTransitionParseTokens(unsigned int, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b5048 (   0x348) StateMgr::fastEmptyTransitionsForKill(DgnPrimArray<unsigned int> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b5390 (   0x558) StateMgr::addStateTransition(unsigned int, DgnPrimArray<unsigned int> const&, bool, DgnArray<ParseToken> const*, DgnArray<DgnArray<ParseToken>> const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b58e8 (    0x34) StateMgr::getWordAliasState(unsigned int, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b591c (    0xe0) StateMgr::notifyPronsChanged(DgnPrimArray<unsigned int> const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b59fc (    0xbc) StateMgr::mergeBegPhones(unsigned int, PhnIndexSet*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b5ab8 (    0x8c) StateMgr::mergeNextPhones(unsigned int, PhnIndexSet*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b5b44 (    0x84) StateMgr::cacheAllWordInStateInfo() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b5bc8 (    0x68) DgnArray<DgnCollArray<unsigned int, WordList>>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b5c30 (    0x48) DgnCollArray<unsigned int, WordList>::~DgnCollArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b5c78 (    0x64) DgnIOwnArray<DgnPrimArray<unsigned int>*>::destructAt(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b5cdc (    0x6c) DgnIOwnArray<BitArray*>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b5d48 (    0x64) DgnIOwnArray<BitArray*>::destructAt(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b5dac (    0x64) DgnArray<DgnArray<RuleSpec>>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b5e10 (    0x64) DgnArray<DgnArray<StateSpec>>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b5e74 (   0x1f8) DgnCollArray<unsigned int, WordList>::readObject(DgnStream*, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b606c (    0x90) DgnArray<WordTransducerSpec>::copyArraySlice(DgnArray<WordTransducerSpec> const&, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b60fc (    0xc0) DgnArray<RuleSpec>::copyArraySlice(DgnArray<RuleSpec> const&, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b61bc (   0x13c) DgnCollArray<unsigned int, WordList>::writeObject(DgnStream*, unsigned int&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b62f8 (   0x1cc) DgnCollArray<unsigned int, WordList>::mergeLargeSortedArray(DgnPrimArray<unsigned int> const&, unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b64c4 (   0x1c8) DgnCollArray<unsigned int, WordList>::mergeSmallSortedArray(DgnPrimArray<unsigned int> const&, unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b668c (   0x7b8) void mrec_qsort_r<WordList>(void*, unsigned long, unsigned long, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b6e44 (   0x178) DgnCollArray<unsigned int, WordList>::removeSortedArray(DgnPrimArray<unsigned int> const&, unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b6fbc (    0xa4) DgnPrimArray<unsigned int>::searchFirstEqual(int, int, void const*, int (*)(void const*, void const*)) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b7060 (    0x60) DgnCollArray<unsigned int, WordList>::sortCollation(unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b70c0 (    0x9c) MrecInitModule_fstcore_fst() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b715c (   0x340) FstCore::FstCore(FstCoreOptions const&, unsigned short, User const*, unsigned int, ArcGraph const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b749c (    0x54) FstCore::~FstCore() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b74f0 (    0x64) void DgnDelete<SearchItf>(SearchItf*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b7554 (    0x34) void DgnDelete<SearchLMScorer>(SearchLMScorer*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b7588 (    0x34) void DgnDelete<Constraint>(Constraint*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b75bc (     0x4) FstCore::~FstCore() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b75c0 (    0xec) FstCore::beginTopRecPassSyncRecogEmbedded(unsigned int, int, PelScorer*, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b76ac (    0x60) FstCore::beginTopRecPassSyncRecog(unsigned int, int, PelScorer*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b770c (    0x74) FstCore::seedTheory(int, int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b7780 (    0x84) FstCore::endTopRecPassSyncRecog() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b7804 (    0x2c) FstCore::endTopRecPassSyncRecogEmbedded() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b7830 (    0xcc) FstCore::doFrame(DgnPrimArray<unsigned char> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b78fc (   0x1e8) FstCore::doFrameEmbedded(int, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b7ae4 (    0x28) FstCore::getNActiveStates() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b7b0c (     0x8) FstCore::setRecogEndTime(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b7b14 (   0x12c) FstCore::beginTopRecSyncRecog(unsigned int, VirtMap*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b7c40 (    0x28) FstStats::resetStats() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b7c68 (    0xcc) FstCore::endTopRecSyncRecog() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b7d34 (    0x24) FstCore::checkForDone() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b7d58 (  0x1220) FstCore::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b8f78 (   0x238) FstCore::makeRecognizerResults(bool, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b91b0 (   0xb2c) FstCore::maybeAddGrammarStates(WordLattice*, WordLattice**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b9cdc (    0x54) Lattice<WordLatticeLC>::minimize() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44b9d30 (   0x330) FstCore::maybeRescoreLattice(WordLattice*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ba060 (    0x50) FstCore::estimateActivePelsThisFrame(BitArray*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ba0b0 (    0x70) FstCore::makeRecognizer(FstCoreOptions const&, unsigned short, User const*, unsigned int, ArcGraph const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ba120 (    0x6c) FstCoreOptions::FstCoreOptions(int, int, bool, int, int, int, int, B_FstCoreLatticeGenerationType, int, int, unsigned int, int, B_SearchLMLimitType, bool, int, int, bool, int, int, bool, bool, bool, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ba18c (    0x54) FstCoreOptions::FstCoreOptions(FstCoreOptions const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ba1e0 (     0x4) FstCoreOptions::FstCoreOptions(FstCoreOptions const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ba1e4 (    0x34) sizeObject(FstCoreOptions const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ba218 (     0x4) FstCoreOptions::~FstCoreOptions() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ba21c (    0x88) TEHeapSort<TimeQueEl>::make_space(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ba2a4 (   0x170) HashKEV<ComposeLatticeNode, ComposeLatticeNode, ComposeLatticeNode>::insert(ComposeLatticeNode const&, ComposeLatticeNode const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ba414 (   0x100) TEHeapSort<TimeQueEl>::add_to_heap(TimeQueEl const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ba514 (   0x14c) TEHeapSort<TimeQueEl>::remove_from_heap(TimeQueEl&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ba660 (    0xf4) Hash<CwidStatePair, CwidStatePair, CwidStatePair, bool>::add(CwidStatePair const&, bool const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ba754 (   0x600) void mrec_qsort_r<SortLink>(void*, unsigned long, unsigned long, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44bad54 (   0x158) Lattice<PhonemeLatticeLC>::createNode() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44baeac (   0x124) Lattice<WordLatticeLC>::maybeCreateAndConnectLink(unsigned int, unsigned int, WordLatticeLC const&, bool, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44bafd0 (    0xdc) FstCore::makeFstActiveWord(CWIDAC const&, Active*, FstCoreOptions const&, unsigned short, User const*, unsigned short, PelScorer*, int, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44bb0ac (    0x28) FstCore::getBestExitScore() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44bb0d4 (    0x28) FstCore::getBestScoreMaybeUpdateFstNode(Node*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44bb0fc (    0x28) FstCore::expandEmbFstHistory(DgnPrimArray<unsigned int>*, DgnPrimArray<int>*, unsigned int&, DgnPrimArray<unsigned int>*, DgnPrimArray<unsigned int>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44bb124 (    0xa4) FstStats::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44bb1c8 (    0x44) FstStats::operator=(FstStats const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44bb20c (    0xe4) FstStats::operator-=(FstStats const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44bb2f0 (    0x28) FstCore::getRequiredVirtMapSize() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44bb318 (    0x30) FstCore::makePartialResult(DgnArray<WordLatticeLC>*, DgnArray<HistContents>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44bb348 (   0x148) FstCore::setConstraint(Constraint*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44bb490 (    0x1c) FstCore::setEmbeddedTransducers(DgnArray<WordTransducerSpec> const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44bb4ac (    0x74) LatticeStats::LatticeStats() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44bb520 (    0x40) DgnPrimFixArray<unsigned char>::~DgnPrimFixArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44bb560 (    0x40) DgnPrimFixArray<bool>::~DgnPrimFixArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44bb5a0 (    0x5c) Lattice<WordLatticeLC>::gc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44bb5fc (    0x5c) Lattice<WordLatticeLC>::minimizeDAG() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44bb658 (   0x198) Lattice<WordLatticeLC>::gcNonTerminal() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44bb7f0 (   0x198) Lattice<WordLatticeLC>::gcNonInitial() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44bb988 (   0x1b0) Lattice<WordLatticeLC>::gcSetup() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44bbb38 (    0xcc) Lattice<WordLatticeLC>::gcCleanup() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44bbc04 (    0x4c) Lattice<WordLatticeLC>::disconnectAndDestroyLinkNoDuplicateCheck(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44bbc50 (   0x190) Lattice<PhonemeLatticeLC>::destroyNode(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44bbde0 (   0x108) Lattice<WordLatticeLC>::disconnectInLink(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44bbee8 (   0x108) Lattice<WordLatticeLC>::disconnectOutLink(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44bbff0 (    0x94) Lattice<WordLatticeLC>::destroyLinkNoDuplicateCheck(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44bc084 (   0x138) Lattice<WordLatticeLC>::removeMultiLinks() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44bc1bc (   0x400) Lattice<WordLatticeLC>::reduceDAGOnceBackward(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44bc5bc (   0x400) Lattice<WordLatticeLC>::reduceDAGOnceForward(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44bc9bc (    0xc4) Lattice<WordLatticeLC>::cmpNodesByOutLinksIgnoreNodes(unsigned int, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44bca80 (   0x1d8) Lattice<WordLatticeLC>::copyInLinks(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44bcc58 (    0xa4) Lattice<WordLatticeLC>::destroyAllLinks(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44bccfc (   0x35c) Lattice<WordLatticeLC>::destroyNodesUsingGcMarks(DgnPrimArray<unsigned int> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44bd058 (    0xa4) Lattice<WordLatticeLC>::cmpOutLink(unsigned int, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44bd0fc (   0x1cc) Lattice<WordLatticeLC>::createLink(unsigned int, unsigned int, WordLatticeLC const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44bd2c8 (   0x124) Lattice<WordLatticeLC>::connectOutLink(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44bd3ec (    0x70) DgnPrimArray<unsigned int>::removeKeepOrder(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44bd45c (    0x58) WordLatticeLC::WordLatticeLC(WordLatticeLC const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44bd4b4 (    0x58) BaseWordLatticeLC::BaseWordLatticeLC(BaseWordLatticeLC const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44bd50c (    0x8c) DgnArray<LatticeLink<WordLatticeLC>>::reallocElts(unsigned int, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44bd598 (    0xc4) Lattice<WordLatticeLC>::cmpNodesByInLinksIgnoreNodes(unsigned int, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44bd65c (   0x1d8) Lattice<WordLatticeLC>::copyOutLinks(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44bd834 (    0xa4) Lattice<WordLatticeLC>::cmpInLink(unsigned int, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44bd8d8 (   0x124) Lattice<WordLatticeLC>::connectInLink(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44bd9fc (   0x4c8) Lattice<WordLatticeLC>::topSortInternal(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44bdec4 (    0xdc) HashKEV<ComposeLatticeNode, ComposeLatticeNode, ComposeLatticeNode>::HashKEV(char const*, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44bdfa0 (     0x4) HashKEV<ComposeLatticeNode, ComposeLatticeNode, ComposeLatticeNode>::~HashKEV() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44bdfa4 (    0x28) HashKEV<ComposeLatticeNode, ComposeLatticeNode, ComposeLatticeNode>::~HashKEV() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44bdfcc (    0x40) DgnIFixArray<BucketLinkKEV<ComposeLatticeNode>*>::~DgnIFixArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44be00c (    0x74) HashKEV<ComposeLatticeNode, ComposeLatticeNode, ComposeLatticeNode>::~HashKEV() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44be080 (    0xe0) Hash<CwidStatePair, CwidStatePair, CwidStatePair, bool>::Hash(char const*, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44be160 (     0x4) Hash<CwidStatePair, CwidStatePair, CwidStatePair, bool>::~Hash() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44be164 (    0x28) Hash<CwidStatePair, CwidStatePair, CwidStatePair, bool>::~Hash() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44be18c (    0x40) DgnIFixArray<BucketLink<CwidStatePair, bool>*>::~DgnIFixArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44be1cc (    0x74) Hash<CwidStatePair, CwidStatePair, CwidStatePair, bool>::~Hash() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44be240 (    0x40) DgnArray<TimeQueEl>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44be280 (    0x40) DgnArray<TempLatLink>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44be2c0 (   0x110) HashKEV<ComposeLatticeNode, ComposeLatticeNode, ComposeLatticeNode>::upSize(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44be3d0 (    0x6c) Hash<WordIdPair, WordIdPair, WordIdPair, unsigned int>::findBucket(WordIdPair const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44be43c (   0x110) Hash<CwidStatePair, CwidStatePair, CwidStatePair, bool>::upSize(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44be54c (    0x40) DgnArray<SortLink>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44be58c (    0x48) Lattice<WordLatticeLC>::connectInLinkUnordered(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44be5d4 (    0x48) Lattice<WordLatticeLC>::connectOutLinkUnordered(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44be61c (     0x4) MrecInitModule_baumwel_recogctl() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44be620 (    0x64) void DgnDelete<Recognizer>(Recognizer*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44be684 (  0x17b8) TTokenizerParamManager::TTokenizerParamManager(TLocaleInfo&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44bfe3c (     0x4) TTokenizerParamManager::TTokenizerParamManager(TLocaleInfo&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44bfe40 (    0xa4) TTokenizerParamManager::notifyChange(TParam const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44bfee4 (   0x290) TTokenizerParamManager::upgradeParam(TParam const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44c0174 (   0x1c4) TTokenizerParamManager::initializeParamConfigs() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44c0338 (     0x4) TTokenizerParamManager::~TTokenizerParamManager() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44c033c (    0x28) TTokenizerParamManager::~TTokenizerParamManager() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44c0364 (    0x94) TFloatParam::TFloatParam(wchar_t const*, wchar_t const*, unsigned long, double, wchar_t const*, wchar_t const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44c03f8 (  0x1238) TTokenizerParamManager::~TTokenizerParamManager() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44c1630 (     0x4) MrecInitModule_sdutt_sdapi() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44c1634 (     0x4) MrecInitModule_contrnac_recogctl() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44c1638 (    0x64) CTModelRelevance::~CTModelRelevance() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44c169c (    0x64) DgnArray<DgnPrimArray<long long>>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44c1700 (    0x44) DgnArray<DgnArray<DgnPrimArray<long long>>>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44c1744 (    0xf0) unsigned long sizeObject<DgnPrimArray<long long>>(DgnArray<DgnPrimArray<long long>> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44c1834 (   0x100) unsigned long sizeObject<DgnArray<DgnPrimArray<long long>>>(DgnArray<DgnArray<DgnPrimArray<long long>>> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44c1934 (   0xde0) CTModelRelevance::computeModelRelevance(PelMgr*, unsigned int, double, bool, bool, bool, bool, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44c2714 (    0xe8) CTPelAccum::CTPelAccum(PelMgr*, PelScorer*, bool, bool, bool, bool, bool, bool, unsigned int, DgnMatrix const*, DgnVector const*, DgnMatrix const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44c27fc (   0x434) CTPelAccum::init(DgnVector const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44c2c30 (    0x54) CTPelAccum::~CTPelAccum() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44c2c84 (    0x9c) CTPelAccum::determineNumSignificantSingularValues(DgnVector const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44c2d20 (   0x19c) CTPelAccum::reset() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44c2ebc (    0x88) void writeObject<DgnPrimArray<long long>>(DgnStream*, DgnArray<DgnPrimArray<long long>> const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44c2f44 (    0x5c) void writeObject<long long>(DgnStream*, DgnPrimArray<long long> const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44c2fa0 (   0x3d8) CTPelAccum::addAccum(CTPelAccum const&, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44c3378 (    0xb8) CTPelAccum::getDataDataAccumUnscaled(unsigned int, unsigned int, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44c3430 (    0x7c) CTPelAccum::getMeanMeanAccumUnscaled(unsigned int, unsigned int, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44c34ac (   0x264) CTPelAccum::scaleAccum(double) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44c3710 (    0xd8) CTPelAccum::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44c37e8 (  0x116c) CTPelAccum::adaptOneFrame(unsigned short, double, bool, AdaptStats*, double, int, DgnPrimArray<unsigned char> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44c4954 (   0x88c) void mrec_qsort_r<CompAndProb>(void*, unsigned long, unsigned long, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44c51e0 (   0x2f4) CTPelAccum::addModelRelevance(CTModelRelevance*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44c54d4 (    0x1c) ConstrainedTransAccMgr::ConstrainedTransAccMgr(RecogControllerBase*, CTFTMgr*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44c54f0 (    0x74) ConstrainedTransAccMgr::~ConstrainedTransAccMgr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44c5564 (    0x58) ConstrainedTransAccMgr::releaseAccum() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44c55bc (    0x48) CTFTMgr::resetOnlineCTList() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44c5604 (     0x4) ConstrainedTransAccMgr::~ConstrainedTransAccMgr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44c5608 (   0x408) ConstrainedTransAccMgr::initAccum(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44c5a10 (    0x34) void DgnDelete<CTModelRelevance>(CTModelRelevance*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44c5a44 (    0x6c) DgnIOwnArray<CTPelAccum*>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44c5ab0 (   0x14c) ConstrainedTransAccMgr::adaptPel(unsigned short, double, int, DgnPrimArray<unsigned char> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44c5bfc (    0x74) ConstrainedTransAccMgr::downScaleAccum(unsigned int, unsigned int, double) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44c5c70 (    0x9c) ConstrainedTransAccMgr::getFrameCountsByTNode(DgnPrimArray<unsigned int>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44c5d0c (   0x1ac) ConstrainedTransAccMgr::computeGlobalSmoothing(double) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44c5eb8 (    0x34) void DgnDelete<CTPelAccum>(CTPelAccum*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44c5eec (   0x574) ConstrainedTransAccMgr::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44c6460 (    0xf8) unsigned long sizeObject<CTPelAccum*>(DgnIOwnArray<CTPelAccum*> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44c6558 (  0x1690) ConstrainedTransAccMgr::computeTransform(bool, double, SnapTime&, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44c7be8 (   0x10c) ConstrainedTransAccMgr::computeInitialTransform(CTPelAccum*, bool, DgnMatrix&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44c7cf4 (   0xf6c) ConstrainedTransAccMgr::computeIterativeTransform(CTPelAccum*, bool, double, bool, bool, bool, DgnMatrix*, DgnVector*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44c8c60 (   0x548) ConstrainedTransAccMgr::computeMeansTransform(CTPelAccum*, bool, DgnMatrix&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44c91a8 (   0x174) fillIntTransform(DgnMatrix const&, DgnVector const&, DgnArray<DgnPrimArray<int>>&, DgnPrimArray<int>&, unsigned int, unsigned short, bool, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44c931c (   0x140) DgnArray<LinearTransform>::copyArraySlice(DgnArray<LinearTransform> const&, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44c945c (    0xc8) CTFTMgr::setSpeakerCTList(DgnArray<LinearTransform> const&, DgnPrimArray<int> const&, DgnPrimArray<int> const&, DgnArray<LinearTransform> const&, DgnPrimArray<int> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44c9524 (   0x524) multiplyIntTransform(LinearTransform&, LinearTransform const&, unsigned int, unsigned short, bool, unsigned int, int&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44c9a48 (    0xc8) CTFTMgr::setChannelCTList(DgnArray<LinearTransform> const&, DgnPrimArray<int> const&, DgnPrimArray<int> const&, DgnArray<LinearTransform> const&, DgnPrimArray<int> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44c9b10 (   0x140) ConstrainedTransAccMgr::copyBackMeans(unsigned short, unsigned int, LinearTransform&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44c9c50 (    0x6c) CTFTMgr::setOnlineCTList(DgnArray<LinearTransform> const&, DgnPrimArray<int> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44c9cbc (    0x68) DgnVector::operator+(DgnVector const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44c9d24 (    0xc4) DgnArray<DgnPrimArray<int>>::DgnArray(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44c9de8 (    0x68) DgnArray<DgnArray<DgnPrimArray<long long>>>::destructAt(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44c9e50 (    0xc4) DgnArray<DgnPrimArray<long long>>::DgnArray(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44c9f14 (    0x4c) DgnPrimArray<long long>::~DgnPrimArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44c9f60 (    0x40) DgnArray<CompAndProb>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44c9fa0 (    0x44) DgnArray<DgnArray<DgnPrimArray<int>>>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44c9fe4 (    0x68) DgnArray<DgnArray<DgnPrimArray<int>>>::destructAt(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ca04c (    0xfc) DgnArray<DgnArray<DgnPrimArray<int>>>::copyArraySlice(DgnArray<DgnArray<DgnPrimArray<int>>> const&, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ca148 (   0x140) DgnArray<DgnPrimArray<int>>::copyArraySlice(DgnArray<DgnPrimArray<int>> const&, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ca288 (    0x64) DgnIOwnArray<CTPelAccum*>::destructAt(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ca2ec (    0xc8) DgnArray<LinearTransform>::DgnArray(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ca3b4 (    0x94) DgnArray<CWIDCrumbWACS>::reallocElts(unsigned int, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ca448 (     0x4) MrecInitModule_dsmmgr_mrecutil() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ca44c (    0x50) DgnSharedMemMgr::DgnSharedMemMgr(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ca49c (    0x3c) DgnSharedMemMgr::startupDSMMgr(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ca4d8 (   0x474) DgnSharedMemMgr::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ca94c (   0x204) DgnSharedMemMgr::getMaybeCreateSetObjectEx(DgnString const&, DgnString const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44cab50 (   0x184) loggableToken(TLexer const&, TLexerToken const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44cacd4 (    0x90) TLexerLexicon::TLexerLexicon(TLocaleInfo const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44cad64 (     0x4) TLexerLexicon::TLexerLexicon(TLocaleInfo const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44cad68 (    0x54) TLexerLexicon::~TLexerLexicon() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44cadbc (     0x4) TLexerLexicon::~TLexerLexicon() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44cadc0 (   0x180) TLexerLexicon::addRegExp(wchar_t const*, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44caf40 (   0x114) TLexerLexicon::addLiteral(wchar_t const*, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44cb054 (   0x11c) TLexerLexicon::addString(wchar_t, unsigned long, TLexerEscaping) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44cb170 (     0x8) TLexerLexicon::doneAdding() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44cb178 (   0x474) TLexerLexicon::findLongestMatch(wchar_t const*&, TAllocator&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44cb5ec (   0x2c0) TLexer::TLexer(wchar_t const*, unsigned long, TLexerLexicon const*, TAllocator*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44cb8ac (     0x4) TLexer::TLexer(wchar_t const*, unsigned long, TLexerLexicon const*, TAllocator*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44cb8b0 (   0x66c) TLexer::TLexer(TInputStream&, unsigned long, TLexerLexicon const*, TAllocator*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44cbf1c (     0x4) TLexer::TLexer(TInputStream&, unsigned long, TLexerLexicon const*, TAllocator*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44cbf20 (    0x18) std::__1::vector<TLexerLexicon::TDictConstant, std::__1::allocator<TLexerLexicon::TDictConstant>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44cbf38 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<TLexerLexicon::TDictConstant>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<TLexerLexicon::TDictConstant>>(std::__1::allocator<TLexerLexicon::TDictConstant>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44cbf70 (    0x18) std::__1::vector<TLexerToken const*, std::__1::allocator<TLexerToken const*>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44cbf88 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<TLexerToken const*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<TLexerToken const*>>(std::__1::allocator<TLexerToken const*>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44cbfc0 (     0x4) MrecInitModule_itemscor_kernel() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44cbfc4 (    0x10) sizeObject(ItemizedScores const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44cbfd4 (    0x10) sizeObject(ItemizedAcousticScores const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44cbfe4 (     0x4) MrecInitModule_agmgr_fst() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44cbfe8 (    0x38) ArcGraphMgr::startupArcGraphMgr(DgnIOwnArray<ArcGraph*> const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44cc020 (   0x1cc) ArcGraphMgr::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44cc1ec (    0x80) ArcGraphMgr::getArcGraphOrThrow(unsigned short) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44cc26c (     0x4) MrecInitModule_littlend_dfutil() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44cc270 (   0x130) checkValidityOfDouble(double const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44cc3a0 (     0x4) MrecInitModule_rctlmgr_recogctl() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44cc3a4 (   0x390) RecogCtlMgr::RecogCtlMgr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44cc734 (   0x120) RecogCtlMgr::deleteRecogController(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44cc854 (    0x6c) DgnIOwnArray<AdaptAccumResult*>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44cc8c0 (    0x6c) DgnIOwnArray<AdaptApplyResult*>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44cc92c (    0x6c) DgnIOwnArray<WordLattice*>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44cc998 (    0x6c) DgnIOwnArray<PrefilterResult*>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44cca04 (    0x6c) DgnIOwnArray<Sausage*>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44cca70 (    0x6c) DgnIOwnArray<AdaptControllerResults*>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ccadc (    0x6c) DgnIOwnArray<VirtMap*>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ccb48 (    0x2c) RecogCtlMgr::startupRecogCtlMgr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ccb74 (  0x14b8) RecogCtlMgr::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ce02c (    0xf8) unsigned long sizeObject<PrefilterResult*>(DgnIOwnArray<PrefilterResult*> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ce124 (    0x74) IdMgr<unsigned short>::getNextId() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ce198 (    0x34) void DgnDelete<AdaptController>(AdaptController*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ce1cc (    0xb4) IdMgr<unsigned short>::recycleId(unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ce280 (    0x34) void DgnDelete<AdaptAccumResult>(AdaptAccumResult*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ce2b4 (    0x34) void DgnDelete<AdaptApplyResult>(AdaptApplyResult*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ce2e8 (   0x178) RecogCtlMgr::newRecogController(B_DgnThreadExecutionType, RecogSpec const&, DgnArray<ScoreArray> const&, DgnArray<ScoreArray> const&, bool, bool, PrefiltererSearchParamSet*, SearchCrossLayerParamSet*, HashKEV<unsigned int, unsigned int, StateIdScope> const*, HashKEV<unsigned int, unsigned int, StateIdScope> const*, HashKEV<unsigned int, unsigned int, StateIdScope> const*, BitArray const*, DgnPrimArray<unsigned short> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ce460 (    0x78) RecogCtlMgr::getRecogController(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ce4d8 (    0x64) void DgnDelete<RecogControllerBase>(RecogControllerBase*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ce53c (   0x1e8) RecogCtlMgr::getVirtMap(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ce724 (    0x34) RecogCtlMgr::releaseVirtMap(VirtMap*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ce758 (    0x34) void DgnDelete<PrefilterResult>(PrefilterResult*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ce78c (    0x34) void DgnDelete<Sausage>(Sausage*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ce7c0 (    0x40) DgnPrimFixArray<unsigned int>::~DgnPrimFixArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ce800 (   0x1a0) DgnThreadTrace::add(unsigned int, B_DgnThreadTraceEventType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ce9a0 (    0x6c) DgnIOwnArray<AdaptController*>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44cea0c (    0x6c) DgnIOwnArray<RecogControllerBase*>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44cea78 (    0x34) void DgnDelete<VirtMap>(VirtMap*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ceaac (    0xa8) DgnPrimQueue<unsigned short, DgnPrimArray<unsigned short>>::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ceb54 (    0xe0) DgnPrimQueue<unsigned short, DgnPrimArray<unsigned short>>::enqueue(unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44cec34 (    0x48) DgnPrimQueue<unsigned short, DgnPrimArray<unsigned short>>::dequeue() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44cec7c (    0x38) AdaptAccumResult::~AdaptAccumResult() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44cecb4 (    0x38) AdaptApplyResult::~AdaptApplyResult() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44cecec (     0x4) MrecInitModule_sdenv_sdapi() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44cecf0 (   0x838) SDEnv_GetData [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44cf528 (    0x28) (null) [FUNC, FunctionStarts] 
                0x00000001b44cf550 (   0xc04) SDEnv_SetData [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d0154 (    0x28) (null) [FUNC, FunctionStarts] 
                0x00000001b44d017c (     0x4) MrecInitModule_intutil_mrecutil() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d0180 (    0x18) onePlusHighestSet32(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d0198 (     0x4) MrecInitModule_srchitf_fst() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d019c (    0x10) SearchItf::beginTopRecPassSyncRecogBase(PelScorer*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d01ac (    0x10) SearchItf::endTopRecPassSyncRecogBase() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d01bc (    0x48) SearchItf::unsetArcGraph() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d0204 (    0x68) SearchItf::setArcGraph(ArcGraph const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d026c (    0x6c) SearchItf::SearchItf() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d02d8 (    0x54) SearchItf::~SearchItf() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d032c (     0x4) SearchItf::~SearchItf() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d0330 (     0x4) SearchItf::~SearchItf() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d0334 (   0xa1c) SearchItf::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d0d50 (     0x4) SearchItf::loadArcGraphOnGPU() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d0d54 (     0x4) SearchItf::unloadArcGraphOnGPU() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d0d58 (     0x8) SearchItf::setHashPropagateBestTokensFirst(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d0d60 (    0x88) SearchItf::normalizeBestAndComputeEstimatedThresh(int, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d0de8 (    0x40) DgnArray<WordTransducerSpec>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d0e28 (   0x1f8) MrecInitModule_adaptctl_recogctl() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d1020 (    0x68) AdaptControllerResults::~AdaptControllerResults() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d1088 (    0x34) void DgnDelete<PelScoreCacheData>(PelScoreCacheData*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d10bc (     0x4) AdaptControllerResults::~AdaptControllerResults() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d10c0 (   0x6b8) AdaptControllerResults::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d1778 (   0x498) AdaptAccumStats::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d1c10 (    0x30) AdaptController::getPelMgr() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d1c40 (   0x498) AdaptApplyStats::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d20d8 (   0x108) AdaptController::~AdaptController() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d21e0 (    0x7c) AdaptController::releaseAccumulators() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d225c (     0x4) AdaptController::~AdaptController() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d2260 (  0x1080) AdaptController::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d32e0 (    0xf8) unsigned long sizeObject<DgnIOwnArray<BasisAccum*>>(DgnArray<DgnIOwnArray<BasisAccum*>> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d33d8 (    0xf8) unsigned long sizeObject<WeightAccum*>(DgnIOwnArray<WeightAccum*> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d34d0 (    0x34) void DgnDelete<DgnPrimArray<double>>(DgnPrimArray<double>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d3504 (    0x34) void DgnDelete<ConstrainedTransAccMgr>(ConstrainedTransAccMgr*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d3538 (    0x34) void DgnDelete<IntruderMgr>(IntruderMgr*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d356c (    0x34) void DgnDelete<WarpChooser>(WarpChooser*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d35a0 (    0x50) void DgnDelete<DurAccum>(DurAccum*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d35f0 (    0x44) DgnArray<DgnIOwnArray<BasisAccum*>>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d3634 (    0x6c) DgnIOwnArray<WeightAccum*>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d36a0 (    0x34) void DgnDelete<IntruderSet>(IntruderSet*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d36d4 (    0x98) Hash<CWIDAC, CWIDAC, CWIDAC, unsigned int>::findBucket(CWIDAC const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d376c (    0x40) DgnPrimFixArray<unsigned long long>::~DgnPrimFixArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d37ac (    0xf8) unsigned long sizeObject<BasisAccum*>(DgnIOwnArray<BasisAccum*> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d38a4 (    0x6c) DgnIOwnArray<BasisAccum*>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d3910 (    0x50) void DgnDelete<BasisAccum>(BasisAccum*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d3960 (    0x68) DgnArray<DgnIOwnArray<BasisAccum*>>::destructAt(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d39c8 (    0x48) void DgnDelete<WeightAccum>(WeightAccum*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d3a10 (    0x40) DgnArray<HistContents>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d3a50 (    0x44) DgnIOwnArray<PelSegmentData*>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d3a94 (    0x6c) DgnIOwnArray<PelSegmentData*>::destructAt(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d3b00 (    0x40) DgnArray<LinkSegment>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d3b40 (   0x2e0) MrecInitModule_fstsrch_fst() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d3e20 (     0x4) FstSearchLateLatticeHashBackoff::maybeGeneratePelMaps(PicMgr const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d3e24 (     0x4) FstSearchLateLatticeHashBackoff::maybeInitDurModel(PicMgr const*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d3e28 (   0x600) FstSearchLateLatticeHashBackoff::advanceDeltas(int, int, SearchStats*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d4428 (   0x15c) PelScoreCache::getScoreAllowBackoff_updateNodeInSequence(unsigned short, int, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d4584 (   0x1a8) FstSearchLateLatticeHashBackoff::maybeInsertHashedToken(FstSearchLateLatticeHashBackoffActiveToken&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d472c (    0xdc) FstSearchLateLatticeHashBackoff::applyCutoffOnEmitting(unsigned int, int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d4808 (   0x1ac) void mrec_nth_element<FstSearchLateLatticeHashBackoffcmpTok>(void*, unsigned long, unsigned long, unsigned long, unsigned long, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d49b4 (   0x204) FstSearchLateLatticeHashBackoff::seedFromMiniFst(int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d4bb8 (   0x430) FstSearchLateLatticeHashBackoff::propagateNulls(int, int, SearchStats*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d4fe8 (   0x8f4) void mrec_qsort_r<FstSearchActiveToken>(void*, unsigned long, unsigned long, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d58dc (   0x13c) FstSearchLateLatticeHashBackoff::getTraceTimeBoundaries(DgnPrimFixArray<unsigned int>&, DgnPrimArray<int>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d5a18 (    0x90) FstSearchLateLatticeHashBackoff::vite(int, int, SearchStats*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d5aa8 (    0x98) FstSearchLateLatticeHashBackoff::reset() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d5b40 (    0x10) FstSearchLateLatticeHashBackoff::doFrame(int, int, SearchStats*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d5b50 (    0x50) FstSearchLateLatticeHashBackoff::beginTopRecPassSyncRecog(PelScorer*, ArcGraph const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d5ba0 (    0xb0) FstSearchLateLatticeHashBackoff::endTopRecPassSyncRecog() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d5c50 (    0xb0) FstSearchLateLatticeHashBackoff::generateTraceTokensFromTraces() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d5d00 (   0xa7c) FstSearchLateLatticeHashBackoff::generateTraceTokensForLateLattice() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d677c (   0x7ac) FstSearchLateLatticeHashBackoff::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d6f28 (   0x134) FstSearchLateLatticeHashBackoff::getBestTrace(DgnPrimFixArray<unsigned char>*, DgnPrimFixArray<bool>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d705c (   0x2b4) FstSearchLateLatticeHashBackoff::findBestPath(DgnPrimFixArray<unsigned char>&, DgnPrimFixArray<bool>&, int&, DgnPrimArray<int>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d7310 (   0x310) FstSearchLateLatticeHashBackoff::createLatticeNodes(DgnPrimFixArray<int>&, DgnPrimArray<unsigned int>&, WordLattice*, DgnArray<DgnPrimArray<int>>&, DgnPrimFixArray<unsigned char>&, DgnPrimFixArray<bool>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d7620 (   0x274) FstSearchLateLatticeHashBackoff::buildWordLattice(WordLattice*, DgnPrimFixArray<unsigned char>&, DgnPrimFixArray<bool>&, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d7894 (   0x230) FstSearchLateLatticeHashBackoff::createLatticeLink(int, FstSearchLateLatticeHashBackoffTraceToken const&, int, unsigned int, unsigned int, WordLattice*, HashProbeKEV<unsigned long long, DgnArray<LinkSegment>, WordLattice>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d7ac4 (    0x4c) void DgnDelete<HashProbeKEV<unsigned long long, DgnArray<LinkSegment>, WordLattice>>(HashProbeKEV<unsigned long long, DgnArray<LinkSegment>, WordLattice>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d7b10 (    0xfc) Lattice<WordLatticeLC>::maybeCreateAndConnectLinkAvoidMultiLinks(unsigned int, unsigned int, WordLatticeLC const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d7c0c (    0x18) FstSearchLateLatticeHashBackoff::beginTopRecSyncRecog(VirtMap*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d7c24 (    0x30) FstSearchLateLatticeHashBackoff::endTopRecSyncRecog() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d7c54 (   0x168) FstSearchLateLatticeHashBackoff::getBestExitScore() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d7dbc (    0x90) FstSearchLateLatticeHashBackoff::getBestScoreMaybeUpdateFstNode(Node*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d7e4c (   0x124) FstSearchLateLatticeHashBackoff::seedTheory(int, int, unsigned int, SearchStats*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d7f70 (   0x1c8) FstSearchLateLatticeHashBackoff::expandEmbFstHistory(DgnPrimArray<unsigned int>*, DgnPrimArray<int>*, unsigned int&, DgnPrimArray<unsigned int>*, DgnPrimArray<unsigned int>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d8138 (   0x1a4) FstSearchLateLatticeHashBackoff::isLexPelPhnMatch(int, Pic&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d82dc (   0x85c) void mrec_qsort_r<FstSearchLateLatticecmpTokLmhst>(void*, unsigned long, unsigned long, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d8b38 (   0x600) void mrec_qsort_r<FstSearchLateLatticecmpTok>(void*, unsigned long, unsigned long, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d9138 (   0x1cc) FstSearchLateLatticeHashBackoff::checkSearchParametersValidityForArcGraph(bool, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d9304 (   0x1a0) FstSearchLateLatticeHashBackoff::getHistory(int, DgnArray<HistContents>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d94a4 (   0x1b0) FstSearchLateLatticeHashBackoff::makePartialResult(DgnArray<WordLatticeLC>*, DgnArray<HistContents>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d9654 (     0x4) FstSearchLateLatticeHash::maybeGeneratePelMaps(PicMgr const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d9658 (     0x4) FstSearchLateLatticeHash::maybeInitDurModel(PicMgr const*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d965c (   0x5b8) FstSearchLateLatticeHash::advanceDeltas(int, int, SearchStats*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d9c14 (    0xc4) PelScoreCache::getScoreNoBackoff(unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d9cd8 (   0x1a8) FstSearchLateLatticeHash::maybeInsertHashedToken(FstSearchLateLatticeHashActiveToken&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d9e80 (    0xdc) FstSearchLateLatticeHash::applyCutoffOnEmitting(unsigned int, int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44d9f5c (   0x1ac) void mrec_nth_element<FstSearchLateLatticeHashcmpTok>(void*, unsigned long, unsigned long, unsigned long, unsigned long, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44da108 (   0x204) FstSearchLateLatticeHash::seedFromMiniFst(int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44da30c (   0x430) FstSearchLateLatticeHash::propagateNulls(int, int, SearchStats*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44da73c (   0x13c) FstSearchLateLatticeHash::getTraceTimeBoundaries(DgnPrimFixArray<unsigned int>&, DgnPrimArray<int>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44da878 (    0x90) FstSearchLateLatticeHash::vite(int, int, SearchStats*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44da908 (    0x98) FstSearchLateLatticeHash::reset() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44da9a0 (    0x10) FstSearchLateLatticeHash::doFrame(int, int, SearchStats*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44da9b0 (    0x50) FstSearchLateLatticeHash::beginTopRecPassSyncRecog(PelScorer*, ArcGraph const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44daa00 (    0xb0) FstSearchLateLatticeHash::endTopRecPassSyncRecog() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44daab0 (    0xb0) FstSearchLateLatticeHash::generateTraceTokensFromTraces() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44dab60 (   0xa7c) FstSearchLateLatticeHash::generateTraceTokensForLateLattice() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44db5dc (   0x7ac) FstSearchLateLatticeHash::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44dbd88 (   0x134) FstSearchLateLatticeHash::getBestTrace(DgnPrimFixArray<unsigned char>*, DgnPrimFixArray<bool>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44dbebc (   0x2b4) FstSearchLateLatticeHash::findBestPath(DgnPrimFixArray<unsigned char>&, DgnPrimFixArray<bool>&, int&, DgnPrimArray<int>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44dc170 (   0x310) FstSearchLateLatticeHash::createLatticeNodes(DgnPrimFixArray<int>&, DgnPrimArray<unsigned int>&, WordLattice*, DgnArray<DgnPrimArray<int>>&, DgnPrimFixArray<unsigned char>&, DgnPrimFixArray<bool>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44dc480 (   0x274) FstSearchLateLatticeHash::buildWordLattice(WordLattice*, DgnPrimFixArray<unsigned char>&, DgnPrimFixArray<bool>&, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44dc6f4 (   0x230) FstSearchLateLatticeHash::createLatticeLink(int, FstSearchLateLatticeHashTraceToken const&, int, unsigned int, unsigned int, WordLattice*, HashProbeKEV<unsigned long long, DgnArray<LinkSegment>, WordLattice>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44dc924 (    0x18) FstSearchLateLatticeHash::beginTopRecSyncRecog(VirtMap*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44dc93c (    0x30) FstSearchLateLatticeHash::endTopRecSyncRecog() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44dc96c (   0x168) FstSearchLateLatticeHash::getBestExitScore() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44dcad4 (    0x90) FstSearchLateLatticeHash::getBestScoreMaybeUpdateFstNode(Node*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44dcb64 (   0x124) FstSearchLateLatticeHash::seedTheory(int, int, unsigned int, SearchStats*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44dcc88 (   0x1c8) FstSearchLateLatticeHash::expandEmbFstHistory(DgnPrimArray<unsigned int>*, DgnPrimArray<int>*, unsigned int&, DgnPrimArray<unsigned int>*, DgnPrimArray<unsigned int>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44dce50 (   0x1a4) FstSearchLateLatticeHash::isLexPelPhnMatch(int, Pic&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44dcff4 (   0x1cc) FstSearchLateLatticeHash::checkSearchParametersValidityForArcGraph(bool, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44dd1c0 (   0x1a0) FstSearchLateLatticeHash::getHistory(int, DgnArray<HistContents>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44dd360 (   0x1b0) FstSearchLateLatticeHash::makePartialResult(DgnArray<WordLatticeLC>*, DgnArray<HistContents>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44dd510 (     0x4) FstSearchLatticeHashBackoff::maybeGeneratePelMaps(PicMgr const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44dd514 (     0x4) FstSearchLatticeHashBackoff::maybeInitDurModel(PicMgr const*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44dd518 (   0x13c) FstSearchLatticeHashBackoff::generateNullTraces(int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44dd654 (   0x620) FstSearchLatticeHashBackoff::advanceDeltas(int, int, SearchStats*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ddc74 (   0x39c) FstSearchLatticeHashBackoff::maybeInsertHashedToken(FstSearchLatticeHashBackoffActiveToken&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44de010 (    0xe4) FstSearchLatticeHashBackoff::applyCutoffOnEmitting(unsigned int, int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44de0f4 (   0x140) void mrec_nth_element<FstSearchLatticeHashBackoffcmpTok>(void*, unsigned long, unsigned long, unsigned long, unsigned long, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44de234 (   0x388) FstSearchLatticeHashBackoff::seedFromMiniFst(int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44de5bc (   0x564) FstSearchLatticeHashBackoff::propagateNulls(int, int, SearchStats*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44deb20 (   0x194) FstSearchLatticeHashBackoff::getCandidateTokensForTrace(FstSearchLatticeHashBackoffTrace const&, DgnArray<FstSearchLatticeHashBackoffTraceToken>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44decb4 (   0x1ac) FstSearchLatticeHashBackoff::annihilateNullActiveTokens() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44dee60 (   0x388) FstSearchLatticeHashBackoff::annihilateNullTraces() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44df1e8 (   0x1c8) FstSearchLatticeHashBackoff::annihilateNullLongestFinal() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44df3b0 (   0x368) FstSearchLatticeHashBackoff::collectTraces() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44df718 (    0xb8) FstSearchLatticeHashBackoff::vite(int, int, SearchStats*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44df7d0 (    0x98) FstSearchLatticeHashBackoff::reset() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44df868 (    0x10) FstSearchLatticeHashBackoff::doFrame(int, int, SearchStats*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44df878 (    0x50) FstSearchLatticeHashBackoff::beginTopRecPassSyncRecog(PelScorer*, ArcGraph const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44df8c8 (    0xc8) FstSearchLatticeHashBackoff::endTopRecPassSyncRecog() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44df990 (   0x7ac) FstSearchLatticeHashBackoff::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e013c (   0x138) FstSearchLatticeHashBackoff::getBestTrace(DgnPrimFixArray<unsigned char>*, DgnPrimFixArray<bool>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e0274 (   0x110) FstSearchLatticeHashBackoff::findBestPath(DgnPrimFixArray<unsigned char>&, DgnPrimFixArray<bool>&, int&, DgnPrimArray<int>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e0384 (   0x30c) FstSearchLatticeHashBackoff::createLatticeNodes(DgnPrimFixArray<int>&, DgnPrimArray<unsigned int>&, WordLattice*, DgnArray<DgnPrimArray<int>>&, DgnPrimFixArray<unsigned char>&, DgnPrimFixArray<bool>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e0690 (   0x268) FstSearchLatticeHashBackoff::buildWordLattice(WordLattice*, DgnPrimFixArray<unsigned char>&, DgnPrimFixArray<bool>&, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e08f8 (   0x1f4) FstSearchLatticeHashBackoff::createLatticeLink(int, FstSearchLatticeHashBackoffTraceToken const&, int, unsigned int, unsigned int, WordLattice*, HashProbeKEV<unsigned long long, DgnArray<LinkSegment>, WordLattice>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e0aec (    0x50) FstSearchLatticeHashBackoff::getSilenceToken(int, int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e0b3c (    0x18) FstSearchLatticeHashBackoff::beginTopRecSyncRecog(VirtMap*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e0b54 (    0x30) FstSearchLatticeHashBackoff::endTopRecSyncRecog() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e0b84 (   0x18c) FstSearchLatticeHashBackoff::getBestExitScore() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e0d10 (    0x90) FstSearchLatticeHashBackoff::getBestScoreMaybeUpdateFstNode(Node*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e0da0 (   0x158) FstSearchLatticeHashBackoff::seedTheory(int, int, unsigned int, SearchStats*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e0ef8 (   0x1ec) FstSearchLatticeHashBackoff::expandEmbFstHistory(DgnPrimArray<unsigned int>*, DgnPrimArray<int>*, unsigned int&, DgnPrimArray<unsigned int>*, DgnPrimArray<unsigned int>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e10e4 (   0x1cc) FstSearchLatticeHashBackoff::checkSearchParametersValidityForArcGraph(bool, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e12b0 (   0x1b8) FstSearchLatticeHashBackoff::getHistory(int, DgnArray<HistContents>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e1468 (   0x1b8) FstSearchLatticeHashBackoff::makePartialResult(DgnArray<WordLatticeLC>*, DgnArray<HistContents>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e1620 (     0x4) FstSearchLatticeHash::maybeGeneratePelMaps(PicMgr const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e1624 (     0x4) FstSearchLatticeHash::maybeInitDurModel(PicMgr const*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e1628 (   0x13c) FstSearchLatticeHash::generateNullTraces(int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e1764 (   0x5d8) FstSearchLatticeHash::advanceDeltas(int, int, SearchStats*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e1d3c (   0x39c) FstSearchLatticeHash::maybeInsertHashedToken(FstSearchLatticeHashActiveToken&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e20d8 (    0xe4) FstSearchLatticeHash::applyCutoffOnEmitting(unsigned int, int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e21bc (   0x140) void mrec_nth_element<FstSearchLatticeHashcmpTok>(void*, unsigned long, unsigned long, unsigned long, unsigned long, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e22fc (   0x388) FstSearchLatticeHash::seedFromMiniFst(int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e2684 (   0x564) FstSearchLatticeHash::propagateNulls(int, int, SearchStats*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e2be8 (   0x194) FstSearchLatticeHash::getCandidateTokensForTrace(FstSearchLatticeHashTrace const&, DgnArray<FstSearchLatticeHashTraceToken>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e2d7c (   0x1ac) FstSearchLatticeHash::annihilateNullActiveTokens() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e2f28 (   0x388) FstSearchLatticeHash::annihilateNullTraces() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e32b0 (   0x1c8) FstSearchLatticeHash::annihilateNullLongestFinal() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e3478 (   0x368) FstSearchLatticeHash::collectTraces() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e37e0 (    0xb8) FstSearchLatticeHash::vite(int, int, SearchStats*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e3898 (    0x98) FstSearchLatticeHash::reset() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e3930 (    0x10) FstSearchLatticeHash::doFrame(int, int, SearchStats*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e3940 (    0x50) FstSearchLatticeHash::beginTopRecPassSyncRecog(PelScorer*, ArcGraph const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e3990 (    0xc8) FstSearchLatticeHash::endTopRecPassSyncRecog() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e3a58 (   0x7ac) FstSearchLatticeHash::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e4204 (   0x138) FstSearchLatticeHash::getBestTrace(DgnPrimFixArray<unsigned char>*, DgnPrimFixArray<bool>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e433c (   0x110) FstSearchLatticeHash::findBestPath(DgnPrimFixArray<unsigned char>&, DgnPrimFixArray<bool>&, int&, DgnPrimArray<int>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e444c (   0x30c) FstSearchLatticeHash::createLatticeNodes(DgnPrimFixArray<int>&, DgnPrimArray<unsigned int>&, WordLattice*, DgnArray<DgnPrimArray<int>>&, DgnPrimFixArray<unsigned char>&, DgnPrimFixArray<bool>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e4758 (   0x268) FstSearchLatticeHash::buildWordLattice(WordLattice*, DgnPrimFixArray<unsigned char>&, DgnPrimFixArray<bool>&, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e49c0 (   0x1f4) FstSearchLatticeHash::createLatticeLink(int, FstSearchLatticeHashTraceToken const&, int, unsigned int, unsigned int, WordLattice*, HashProbeKEV<unsigned long long, DgnArray<LinkSegment>, WordLattice>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e4bb4 (    0x50) FstSearchLatticeHash::getSilenceToken(int, int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e4c04 (    0x18) FstSearchLatticeHash::beginTopRecSyncRecog(VirtMap*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e4c1c (    0x30) FstSearchLatticeHash::endTopRecSyncRecog() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e4c4c (   0x18c) FstSearchLatticeHash::getBestExitScore() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e4dd8 (    0x90) FstSearchLatticeHash::getBestScoreMaybeUpdateFstNode(Node*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e4e68 (   0x158) FstSearchLatticeHash::seedTheory(int, int, unsigned int, SearchStats*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e4fc0 (   0x1ec) FstSearchLatticeHash::expandEmbFstHistory(DgnPrimArray<unsigned int>*, DgnPrimArray<int>*, unsigned int&, DgnPrimArray<unsigned int>*, DgnPrimArray<unsigned int>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e51ac (   0x1cc) FstSearchLatticeHash::checkSearchParametersValidityForArcGraph(bool, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e5378 (   0x1b8) FstSearchLatticeHash::getHistory(int, DgnArray<HistContents>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e5530 (   0x1b8) FstSearchLatticeHash::makePartialResult(DgnArray<WordLatticeLC>*, DgnArray<HistContents>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e56e8 (     0x4) FstSearchDurationHashBackoff::maybeGeneratePelMaps(PicMgr const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e56ec (   0x104) FstSearchDurationHashBackoff::maybeInitDurModel(PicMgr const*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e57f0 (   0x698) FstSearchDurationHashBackoff::advanceDeltas(int, int, SearchStats*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e5e88 (   0x1a8) FstSearchDurationHashBackoff::maybeInsertHashedToken(FstSearchDurationHashBackoffActiveToken&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e6030 (    0xe4) FstSearchDurationHashBackoff::applyCutoffOnEmitting(unsigned int, int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e6114 (   0x140) void mrec_nth_element<FstSearchDurationHashBackoffcmpTok>(void*, unsigned long, unsigned long, unsigned long, unsigned long, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e6254 (   0x1d8) FstSearchDurationHashBackoff::seedFromMiniFst(int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e642c (   0x3c0) FstSearchDurationHashBackoff::propagateNulls(int, int, SearchStats*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e67ec (   0x23c) FstSearchDurationHashBackoff::collectTraces() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e6a28 (    0xb8) FstSearchDurationHashBackoff::vite(int, int, SearchStats*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e6ae0 (    0x98) FstSearchDurationHashBackoff::reset() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e6b78 (    0x10) FstSearchDurationHashBackoff::doFrame(int, int, SearchStats*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e6b88 (    0x50) FstSearchDurationHashBackoff::beginTopRecPassSyncRecog(PelScorer*, ArcGraph const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e6bd8 (    0xa8) FstSearchDurationHashBackoff::endTopRecPassSyncRecog() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e6c80 (    0xb0) FstSearchDurationHashBackoff::generateTraceTokensFromTraces() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e6d30 (   0x7ac) FstSearchDurationHashBackoff::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e74dc (   0x134) FstSearchDurationHashBackoff::getBestTrace(DgnPrimFixArray<unsigned char>*, DgnPrimFixArray<bool>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e7610 (   0x108) FstSearchDurationHashBackoff::findBestPath(DgnPrimFixArray<unsigned char>&, DgnPrimFixArray<bool>&, int&, DgnPrimArray<int>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e7718 (   0x30c) FstSearchDurationHashBackoff::createLatticeNodes(DgnPrimFixArray<int>&, DgnPrimArray<unsigned int>&, WordLattice*, DgnArray<DgnPrimArray<int>>&, DgnPrimFixArray<unsigned char>&, DgnPrimFixArray<bool>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e7a24 (   0x23c) FstSearchDurationHashBackoff::buildWordLattice(WordLattice*, DgnPrimFixArray<unsigned char>&, DgnPrimFixArray<bool>&, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e7c60 (   0x224) FstSearchDurationHashBackoff::createLatticeLink(int, FstSearchDurationHashBackoffTraceToken const&, int, unsigned int, unsigned int, WordLattice*, HashProbeKEV<unsigned long long, DgnArray<LinkSegment>, WordLattice>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e7e84 (    0x18) FstSearchDurationHashBackoff::beginTopRecSyncRecog(VirtMap*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e7e9c (    0x30) FstSearchDurationHashBackoff::endTopRecSyncRecog() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e7ecc (   0x168) FstSearchDurationHashBackoff::getBestExitScore() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e8034 (    0x90) FstSearchDurationHashBackoff::getBestScoreMaybeUpdateFstNode(Node*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e80c4 (   0x120) FstSearchDurationHashBackoff::seedTheory(int, int, unsigned int, SearchStats*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e81e4 (   0x1c8) FstSearchDurationHashBackoff::expandEmbFstHistory(DgnPrimArray<unsigned int>*, DgnPrimArray<int>*, unsigned int&, DgnPrimArray<unsigned int>*, DgnPrimArray<unsigned int>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e83ac (   0x1cc) FstSearchDurationHashBackoff::checkSearchParametersValidityForArcGraph(bool, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e8578 (   0x1a0) FstSearchDurationHashBackoff::getHistory(int, DgnArray<HistContents>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e8718 (   0x1b0) FstSearchDurationHashBackoff::makePartialResult(DgnArray<WordLatticeLC>*, DgnArray<HistContents>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e88c8 (    0x8c) FstSearchDurationHash::FstSearchDurationHash(int const&, int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e8954 (     0x4) FstSearchDurationHash::maybeGeneratePelMaps(PicMgr const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e8958 (   0x104) FstSearchDurationHash::maybeInitDurModel(PicMgr const*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e8a5c (   0x658) FstSearchDurationHash::advanceDeltas(int, int, SearchStats*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e90b4 (   0x1a8) FstSearchDurationHash::maybeInsertHashedToken(FstSearchDurationHashActiveToken&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e925c (    0xe4) FstSearchDurationHash::applyCutoffOnEmitting(unsigned int, int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e9340 (   0x140) void mrec_nth_element<FstSearchDurationHashcmpTok>(void*, unsigned long, unsigned long, unsigned long, unsigned long, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e9480 (   0x1d8) FstSearchDurationHash::seedFromMiniFst(int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e9658 (   0x3c0) FstSearchDurationHash::propagateNulls(int, int, SearchStats*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e9a18 (   0x23c) FstSearchDurationHash::collectTraces() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e9c54 (    0xb8) FstSearchDurationHash::vite(int, int, SearchStats*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e9d0c (    0x98) FstSearchDurationHash::reset() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e9da4 (    0x10) FstSearchDurationHash::doFrame(int, int, SearchStats*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e9db4 (    0x50) FstSearchDurationHash::beginTopRecPassSyncRecog(PelScorer*, ArcGraph const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e9e04 (    0xa8) FstSearchDurationHash::endTopRecPassSyncRecog() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e9eac (    0xb0) FstSearchDurationHash::generateTraceTokensFromTraces() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44e9f5c (   0x7ac) FstSearchDurationHash::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ea708 (   0x134) FstSearchDurationHash::getBestTrace(DgnPrimFixArray<unsigned char>*, DgnPrimFixArray<bool>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ea83c (   0x108) FstSearchDurationHash::findBestPath(DgnPrimFixArray<unsigned char>&, DgnPrimFixArray<bool>&, int&, DgnPrimArray<int>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ea944 (   0x30c) FstSearchDurationHash::createLatticeNodes(DgnPrimFixArray<int>&, DgnPrimArray<unsigned int>&, WordLattice*, DgnArray<DgnPrimArray<int>>&, DgnPrimFixArray<unsigned char>&, DgnPrimFixArray<bool>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44eac50 (   0x23c) FstSearchDurationHash::buildWordLattice(WordLattice*, DgnPrimFixArray<unsigned char>&, DgnPrimFixArray<bool>&, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44eae8c (   0x224) FstSearchDurationHash::createLatticeLink(int, FstSearchDurationHashTraceToken const&, int, unsigned int, unsigned int, WordLattice*, HashProbeKEV<unsigned long long, DgnArray<LinkSegment>, WordLattice>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44eb0b0 (    0x18) FstSearchDurationHash::beginTopRecSyncRecog(VirtMap*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44eb0c8 (    0x30) FstSearchDurationHash::endTopRecSyncRecog() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44eb0f8 (   0x168) FstSearchDurationHash::getBestExitScore() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44eb260 (    0x90) FstSearchDurationHash::getBestScoreMaybeUpdateFstNode(Node*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44eb2f0 (   0x120) FstSearchDurationHash::seedTheory(int, int, unsigned int, SearchStats*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44eb410 (   0x1c8) FstSearchDurationHash::expandEmbFstHistory(DgnPrimArray<unsigned int>*, DgnPrimArray<int>*, unsigned int&, DgnPrimArray<unsigned int>*, DgnPrimArray<unsigned int>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44eb5d8 (   0x1cc) FstSearchDurationHash::checkSearchParametersValidityForArcGraph(bool, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44eb7a4 (   0x1a0) FstSearchDurationHash::getHistory(int, DgnArray<HistContents>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44eb944 (   0x1b0) FstSearchDurationHash::makePartialResult(DgnArray<WordLatticeLC>*, DgnArray<HistContents>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ebaf4 (     0x4) FstSearchHashBackoff::maybeGeneratePelMaps(PicMgr const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ebaf8 (     0x4) FstSearchHashBackoff::maybeInitDurModel(PicMgr const*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ebafc (   0x5f8) FstSearchHashBackoff::advanceDeltas(int, int, SearchStats*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ec0f4 (   0x1a8) FstSearchHashBackoff::maybeInsertHashedToken(FstSearchHashBackoffActiveToken&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ec29c (    0xdc) FstSearchHashBackoff::applyCutoffOnEmitting(unsigned int, int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ec378 (   0x134) void mrec_nth_element<FstSearchHashBackoffcmpTok>(void*, unsigned long, unsigned long, unsigned long, unsigned long, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ec4ac (   0x1dc) FstSearchHashBackoff::seedFromMiniFst(int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ec688 (   0x3ac) FstSearchHashBackoff::propagateNulls(int, int, SearchStats*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44eca34 (   0x238) FstSearchHashBackoff::collectTraces() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ecc6c (    0xb8) FstSearchHashBackoff::vite(int, int, SearchStats*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ecd24 (    0x98) FstSearchHashBackoff::reset() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ecdbc (    0x10) FstSearchHashBackoff::doFrame(int, int, SearchStats*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ecdcc (    0x50) FstSearchHashBackoff::beginTopRecPassSyncRecog(PelScorer*, ArcGraph const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ece1c (    0xa8) FstSearchHashBackoff::endTopRecPassSyncRecog() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ecec4 (    0xc0) FstSearchHashBackoff::generateTraceTokensFromTraces() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ecf84 (   0x7a8) FstSearchHashBackoff::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ed72c (   0x134) FstSearchHashBackoff::getBestTrace(DgnPrimFixArray<unsigned char>*, DgnPrimFixArray<bool>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ed860 (   0x108) FstSearchHashBackoff::findBestPath(DgnPrimFixArray<unsigned char>&, DgnPrimFixArray<bool>&, int&, DgnPrimArray<int>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ed968 (   0x318) FstSearchHashBackoff::createLatticeNodes(DgnPrimFixArray<int>&, DgnPrimArray<unsigned int>&, WordLattice*, DgnArray<DgnPrimArray<int>>&, DgnPrimFixArray<unsigned char>&, DgnPrimFixArray<bool>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44edc80 (   0x240) FstSearchHashBackoff::buildWordLattice(WordLattice*, DgnPrimFixArray<unsigned char>&, DgnPrimFixArray<bool>&, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44edec0 (   0x214) FstSearchHashBackoff::createLatticeLink(int, FstSearchHashBackoffTraceToken const&, int, unsigned int, unsigned int, WordLattice*, HashProbeKEV<unsigned long long, DgnArray<LinkSegment>, WordLattice>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ee0d4 (    0x18) FstSearchHashBackoff::beginTopRecSyncRecog(VirtMap*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ee0ec (    0x30) FstSearchHashBackoff::endTopRecSyncRecog() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ee11c (   0x168) FstSearchHashBackoff::getBestExitScore() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ee284 (    0x90) FstSearchHashBackoff::getBestScoreMaybeUpdateFstNode(Node*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ee314 (   0x118) FstSearchHashBackoff::seedTheory(int, int, unsigned int, SearchStats*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ee42c (   0x1c8) FstSearchHashBackoff::expandEmbFstHistory(DgnPrimArray<unsigned int>*, DgnPrimArray<int>*, unsigned int&, DgnPrimArray<unsigned int>*, DgnPrimArray<unsigned int>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ee5f4 (   0x1cc) FstSearchHashBackoff::checkSearchParametersValidityForArcGraph(bool, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ee7c0 (   0x1a0) FstSearchHashBackoff::getHistory(int, DgnArray<HistContents>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ee960 (   0x1b0) FstSearchHashBackoff::makePartialResult(DgnArray<WordLatticeLC>*, DgnArray<HistContents>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44eeb10 (     0x4) FstSearchHash::maybeGeneratePelMaps(PicMgr const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44eeb14 (     0x4) FstSearchHash::maybeInitDurModel(PicMgr const*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44eeb18 (   0x5b4) FstSearchHash::advanceDeltas(int, int, SearchStats*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ef0cc (   0x1a8) FstSearchHash::maybeInsertHashedToken(FstSearchHashActiveToken&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ef274 (    0xdc) FstSearchHash::applyCutoffOnEmitting(unsigned int, int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ef350 (   0x134) void mrec_nth_element<FstSearchHashcmpTok>(void*, unsigned long, unsigned long, unsigned long, unsigned long, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ef484 (   0x1dc) FstSearchHash::seedFromMiniFst(int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ef660 (   0x3ac) FstSearchHash::propagateNulls(int, int, SearchStats*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44efa0c (   0x238) FstSearchHash::collectTraces() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44efc44 (    0xb8) FstSearchHash::vite(int, int, SearchStats*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44efcfc (    0x98) FstSearchHash::reset() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44efd94 (    0x10) FstSearchHash::doFrame(int, int, SearchStats*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44efda4 (    0x50) FstSearchHash::beginTopRecPassSyncRecog(PelScorer*, ArcGraph const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44efdf4 (    0xa8) FstSearchHash::endTopRecPassSyncRecog() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44efe9c (    0xc0) FstSearchHash::generateTraceTokensFromTraces() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44eff5c (   0x7a8) FstSearchHash::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44f0704 (   0x134) FstSearchHash::getBestTrace(DgnPrimFixArray<unsigned char>*, DgnPrimFixArray<bool>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44f0838 (   0x108) FstSearchHash::findBestPath(DgnPrimFixArray<unsigned char>&, DgnPrimFixArray<bool>&, int&, DgnPrimArray<int>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44f0940 (   0x318) FstSearchHash::createLatticeNodes(DgnPrimFixArray<int>&, DgnPrimArray<unsigned int>&, WordLattice*, DgnArray<DgnPrimArray<int>>&, DgnPrimFixArray<unsigned char>&, DgnPrimFixArray<bool>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44f0c58 (   0x240) FstSearchHash::buildWordLattice(WordLattice*, DgnPrimFixArray<unsigned char>&, DgnPrimFixArray<bool>&, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44f0e98 (   0x214) FstSearchHash::createLatticeLink(int, FstSearchHashTraceToken const&, int, unsigned int, unsigned int, WordLattice*, HashProbeKEV<unsigned long long, DgnArray<LinkSegment>, WordLattice>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44f10ac (    0x18) FstSearchHash::beginTopRecSyncRecog(VirtMap*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44f10c4 (    0x30) FstSearchHash::endTopRecSyncRecog() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44f10f4 (   0x168) FstSearchHash::getBestExitScore() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44f125c (    0x90) FstSearchHash::getBestScoreMaybeUpdateFstNode(Node*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44f12ec (   0x118) FstSearchHash::seedTheory(int, int, unsigned int, SearchStats*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44f1404 (   0x1c8) FstSearchHash::expandEmbFstHistory(DgnPrimArray<unsigned int>*, DgnPrimArray<int>*, unsigned int&, DgnPrimArray<unsigned int>*, DgnPrimArray<unsigned int>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44f15cc (   0x1cc) FstSearchHash::checkSearchParametersValidityForArcGraph(bool, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44f1798 (   0x1a0) FstSearchHash::getHistory(int, DgnArray<HistContents>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44f1938 (   0x1b0) FstSearchHash::makePartialResult(DgnArray<WordLatticeLC>*, DgnArray<HistContents>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44f1ae8 (    0x98) FstSearchLeafLatticeDurationBackoff::FstSearchLeafLatticeDurationBackoff(int const&, int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44f1b80 (    0x14) FstSearchLeafLatticeDurationBackoff::maybeGeneratePelMaps(PicMgr const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44f1b94 (   0x104) FstSearchLeafLatticeDurationBackoff::maybeInitDurModel(PicMgr const*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44f1c98 (   0x96c) FstSearchLeafLatticeDurationBackoff::advanceDeltas(int, int, SearchStats*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44f2604 (    0xe8) FstSearchLeafLatticeDurationBackoff::applyCutoffOnEmitting(unsigned int, int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44f26ec (   0x14c) FstSearchLeafLatticeDurationBackoff::makeViterbiDecisionOnEmitting() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44f2838 (   0x1ac) void mrec_nth_element<FstSearchLeafLatticeDurationBackoffcmpTok>(void*, unsigned long, unsigned long, unsigned long, unsigned long, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44f29e4 (   0x38c) FstSearchLeafLatticeDurationBackoff::seedFromMiniFst(int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44f2d70 (   0x60c) FstSearchLeafLatticeDurationBackoff::propagateNulls(int, int, SearchStats*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44f337c (   0x4b4) FstSearchLeafLatticeDurationBackoff::collectTraces() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44f3830 (    0xb8) FstSearchLeafLatticeDurationBackoff::vite(int, int, SearchStats*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44f38e8 (    0x14) FstSearchLeafLatticeDurationBackoff::reset() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44f38fc (    0x10) FstSearchLeafLatticeDurationBackoff::doFrame(int, int, SearchStats*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44f390c (    0x50) FstSearchLeafLatticeDurationBackoff::beginTopRecPassSyncRecog(PelScorer*, ArcGraph const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44f395c (    0xa0) FstSearchLeafLatticeDurationBackoff::endTopRecPassSyncRecog() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44f39fc (   0x874) FstSearchLeafLatticeDurationBackoff::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44f4270 (   0x138) FstSearchLeafLatticeDurationBackoff::getBestTrace(DgnPrimFixArray<unsigned char>*, DgnPrimFixArray<bool>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44f43a8 (   0x110) FstSearchLeafLatticeDurationBackoff::findBestPath(DgnPrimFixArray<unsigned char>&, DgnPrimFixArray<bool>&, int&, DgnPrimArray<int>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44f44b8 (   0x30c) FstSearchLeafLatticeDurationBackoff::createLatticeNodes(DgnPrimFixArray<int>&, DgnPrimArray<unsigned int>&, WordLattice*, DgnArray<DgnPrimArray<int>>&, DgnPrimFixArray<unsigned char>&, DgnPrimFixArray<bool>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44f47c4 (   0x278) FstSearchLeafLatticeDurationBackoff::buildWordLattice(WordLattice*, DgnPrimFixArray<unsigned char>&, DgnPrimFixArray<bool>&, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44f4a3c (   0x274) FstSearchLeafLatticeDurationBackoff::createLatticeLink(int, FstSearchLeafLatticeDurationBackoffTraceToken const&, int, unsigned int, unsigned int, WordLattice*, HashProbeKEV<unsigned long long, DgnArray<LinkSegment>, WordLattice>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44f4cb0 (    0x50) FstSearchLeafLatticeDurationBackoff::getSilenceToken(int, int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44f4d00 (   0x11c) FstSearchLeafLatticeDurationBackoff::buildLinkSegmentation(DgnArray<LinkSegment>&, FstSearchLeafLatticeDurationBackoffTraceToken const&, int, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44f4e1c (    0xd0) FstSearchLeafLatticeDurationBackoff::addLinkSegment(DgnArray<LinkSegment>&, unsigned short, int, unsigned int, unsigned short) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44f4eec (    0x18) FstSearchLeafLatticeDurationBackoff::beginTopRecSyncRecog(VirtMap*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44f4f04 (    0x10) FstSearchLeafLatticeDurationBackoff::endTopRecSyncRecog() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44f4f14 (   0x18c) FstSearchLeafLatticeDurationBackoff::getBestExitScore() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44f50a0 (    0x90) FstSearchLeafLatticeDurationBackoff::getBestScoreMaybeUpdateFstNode(Node*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44f5130 (   0x164) FstSearchLeafLatticeDurationBackoff::seedTheory(int, int, unsigned int, SearchStats*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44f5294 (   0x1ec) FstSearchLeafLatticeDurationBackoff::expandEmbFstHistory(DgnPrimArray<unsigned int>*, DgnPrimArray<int>*, unsigned int&, DgnPrimArray<unsigned int>*, DgnPrimArray<unsigned int>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44f5480 (   0x1cc) FstSearchLeafLatticeDurationBackoff::checkSearchParametersValidityForArcGraph(bool, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44f564c (   0x1b8) FstSearchLeafLatticeDurationBackoff::getHistory(int, DgnArray<HistContents>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44f5804 (   0x1b8) FstSearchLeafLatticeDurationBackoff::makePartialResult(DgnArray<WordLatticeLC>*, DgnArray<HistContents>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44f59bc (    0x98) FstSearchLeafLatticeDuration::FstSearchLeafLatticeDuration(int const&, int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44f5a54 (    0x14) FstSearchLeafLatticeDuration::maybeGeneratePelMaps(PicMgr const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44f5a68 (   0x104) FstSearchLeafLatticeDuration::maybeInitDurModel(PicMgr const*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44f5b6c (   0x918) FstSearchLeafLatticeDuration::advanceDeltas(int, int, SearchStats*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44f6484 (    0xe8) FstSearchLeafLatticeDuration::applyCutoffOnEmitting(unsigned int, int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44f656c (   0x14c) FstSearchLeafLatticeDuration::makeViterbiDecisionOnEmitting() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44f66b8 (   0x1ac) void mrec_nth_element<FstSearchLeafLatticeDurationcmpTok>(void*, unsigned long, unsigned long, unsigned long, unsigned long, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44f6864 (   0x38c) FstSearchLeafLatticeDuration::seedFromMiniFst(int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44f6bf0 (   0x60c) FstSearchLeafLatticeDuration::propagateNulls(int, int, SearchStats*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44f71fc (   0x4b4) FstSearchLeafLatticeDuration::collectTraces() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44f76b0 (    0xb8) FstSearchLeafLatticeDuration::vite(int, int, SearchStats*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44f7768 (    0x14) FstSearchLeafLatticeDuration::reset() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44f777c (    0x10) FstSearchLeafLatticeDuration::doFrame(int, int, SearchStats*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44f778c (    0x50) FstSearchLeafLatticeDuration::beginTopRecPassSyncRecog(PelScorer*, ArcGraph const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44f77dc (    0xa0) FstSearchLeafLatticeDuration::endTopRecPassSyncRecog() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44f787c (   0x874) FstSearchLeafLatticeDuration::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44f80f0 (   0x138) FstSearchLeafLatticeDuration::getBestTrace(DgnPrimFixArray<unsigned char>*, DgnPrimFixArray<bool>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44f8228 (   0x110) FstSearchLeafLatticeDuration::findBestPath(DgnPrimFixArray<unsigned char>&, DgnPrimFixArray<bool>&, int&, DgnPrimArray<int>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44f8338 (   0x30c) FstSearchLeafLatticeDuration::createLatticeNodes(DgnPrimFixArray<int>&, DgnPrimArray<unsigned int>&, WordLattice*, DgnArray<DgnPrimArray<int>>&, DgnPrimFixArray<unsigned char>&, DgnPrimFixArray<bool>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44f8644 (   0x278) FstSearchLeafLatticeDuration::buildWordLattice(WordLattice*, DgnPrimFixArray<unsigned char>&, DgnPrimFixArray<bool>&, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44f88bc (   0x274) FstSearchLeafLatticeDuration::createLatticeLink(int, FstSearchLeafLatticeDurationTraceToken const&, int, unsigned int, unsigned int, WordLattice*, HashProbeKEV<unsigned long long, DgnArray<LinkSegment>, WordLattice>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44f8b30 (    0x50) FstSearchLeafLatticeDuration::getSilenceToken(int, int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44f8b80 (   0x11c) FstSearchLeafLatticeDuration::buildLinkSegmentation(DgnArray<LinkSegment>&, FstSearchLeafLatticeDurationTraceToken const&, int, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44f8c9c (    0xd0) FstSearchLeafLatticeDuration::addLinkSegment(DgnArray<LinkSegment>&, unsigned short, int, unsigned int, unsigned short) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44f8d6c (    0x18) FstSearchLeafLatticeDuration::beginTopRecSyncRecog(VirtMap*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44f8d84 (    0x10) FstSearchLeafLatticeDuration::endTopRecSyncRecog() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44f8d94 (   0x18c) FstSearchLeafLatticeDuration::getBestExitScore() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44f8f20 (    0x90) FstSearchLeafLatticeDuration::getBestScoreMaybeUpdateFstNode(Node*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44f8fb0 (   0x164) FstSearchLeafLatticeDuration::seedTheory(int, int, unsigned int, SearchStats*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44f9114 (   0x1ec) FstSearchLeafLatticeDuration::expandEmbFstHistory(DgnPrimArray<unsigned int>*, DgnPrimArray<int>*, unsigned int&, DgnPrimArray<unsigned int>*, DgnPrimArray<unsigned int>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44f9300 (   0x1cc) FstSearchLeafLatticeDuration::checkSearchParametersValidityForArcGraph(bool, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44f94cc (   0x1b8) FstSearchLeafLatticeDuration::getHistory(int, DgnArray<HistContents>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44f9684 (   0x1b8) FstSearchLeafLatticeDuration::makePartialResult(DgnArray<WordLatticeLC>*, DgnArray<HistContents>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44f983c (    0x14) FstSearchLeafLatticeBackoff::maybeGeneratePelMaps(PicMgr const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44f9850 (     0x4) FstSearchLeafLatticeBackoff::maybeInitDurModel(PicMgr const*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44f9854 (   0x890) FstSearchLeafLatticeBackoff::advanceDeltas(int, int, SearchStats*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44fa0e4 (    0xdc) FstSearchLeafLatticeBackoff::applyCutoffOnEmitting(unsigned int, int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44fa1c0 (   0x148) FstSearchLeafLatticeBackoff::makeViterbiDecisionOnEmitting() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44fa308 (   0x19c) void mrec_nth_element<FstSearchLeafLatticeBackoffcmpTok>(void*, unsigned long, unsigned long, unsigned long, unsigned long, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44fa4a4 (   0x378) FstSearchLeafLatticeBackoff::seedFromMiniFst(int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44fa81c (   0x594) FstSearchLeafLatticeBackoff::propagateNulls(int, int, SearchStats*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44fadb0 (   0x4ac) FstSearchLeafLatticeBackoff::collectTraces() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44fb25c (    0xb8) FstSearchLeafLatticeBackoff::vite(int, int, SearchStats*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44fb314 (    0x14) FstSearchLeafLatticeBackoff::reset() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44fb328 (    0x10) FstSearchLeafLatticeBackoff::doFrame(int, int, SearchStats*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44fb338 (    0x50) FstSearchLeafLatticeBackoff::beginTopRecPassSyncRecog(PelScorer*, ArcGraph const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44fb388 (    0xa0) FstSearchLeafLatticeBackoff::endTopRecPassSyncRecog() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44fb428 (   0x870) FstSearchLeafLatticeBackoff::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44fbc98 (   0x134) FstSearchLeafLatticeBackoff::getBestTrace(DgnPrimFixArray<unsigned char>*, DgnPrimFixArray<bool>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44fbdcc (   0x110) FstSearchLeafLatticeBackoff::findBestPath(DgnPrimFixArray<unsigned char>&, DgnPrimFixArray<bool>&, int&, DgnPrimArray<int>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44fbedc (   0x30c) FstSearchLeafLatticeBackoff::createLatticeNodes(DgnPrimFixArray<int>&, DgnPrimArray<unsigned int>&, WordLattice*, DgnArray<DgnPrimArray<int>>&, DgnPrimFixArray<unsigned char>&, DgnPrimFixArray<bool>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44fc1e8 (   0x278) FstSearchLeafLatticeBackoff::buildWordLattice(WordLattice*, DgnPrimFixArray<unsigned char>&, DgnPrimFixArray<bool>&, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44fc460 (   0x260) FstSearchLeafLatticeBackoff::createLatticeLink(int, FstSearchLeafLatticeBackoffTraceToken const&, int, unsigned int, unsigned int, WordLattice*, HashProbeKEV<unsigned long long, DgnArray<LinkSegment>, WordLattice>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44fc6c0 (    0x50) FstSearchLeafLatticeBackoff::getSilenceToken(int, int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44fc710 (   0x11c) FstSearchLeafLatticeBackoff::buildLinkSegmentation(DgnArray<LinkSegment>&, FstSearchLeafLatticeBackoffTraceToken const&, int, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44fc82c (    0xd0) FstSearchLeafLatticeBackoff::addLinkSegment(DgnArray<LinkSegment>&, unsigned short, int, unsigned int, unsigned short) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44fc8fc (    0x18) FstSearchLeafLatticeBackoff::beginTopRecSyncRecog(VirtMap*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44fc914 (    0x10) FstSearchLeafLatticeBackoff::endTopRecSyncRecog() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44fc924 (   0x188) FstSearchLeafLatticeBackoff::getBestExitScore() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44fcaac (    0x90) FstSearchLeafLatticeBackoff::getBestScoreMaybeUpdateFstNode(Node*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44fcb3c (   0x158) FstSearchLeafLatticeBackoff::seedTheory(int, int, unsigned int, SearchStats*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44fcc94 (   0x1ec) FstSearchLeafLatticeBackoff::expandEmbFstHistory(DgnPrimArray<unsigned int>*, DgnPrimArray<int>*, unsigned int&, DgnPrimArray<unsigned int>*, DgnPrimArray<unsigned int>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44fce80 (   0x1cc) FstSearchLeafLatticeBackoff::checkSearchParametersValidityForArcGraph(bool, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44fd04c (   0x1b8) FstSearchLeafLatticeBackoff::getHistory(int, DgnArray<HistContents>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44fd204 (   0x1b8) FstSearchLeafLatticeBackoff::makePartialResult(DgnArray<WordLatticeLC>*, DgnArray<HistContents>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44fd3bc (    0x14) FstSearchLeafLattice::maybeGeneratePelMaps(PicMgr const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44fd3d0 (     0x4) FstSearchLeafLattice::maybeInitDurModel(PicMgr const*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44fd3d4 (   0x838) FstSearchLeafLattice::advanceDeltas(int, int, SearchStats*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44fdc0c (    0xdc) FstSearchLeafLattice::applyCutoffOnEmitting(unsigned int, int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44fdce8 (   0x148) FstSearchLeafLattice::makeViterbiDecisionOnEmitting() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44fde30 (   0x19c) void mrec_nth_element<FstSearchLeafLatticecmpTok>(void*, unsigned long, unsigned long, unsigned long, unsigned long, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44fdfcc (   0x378) FstSearchLeafLattice::seedFromMiniFst(int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44fe344 (   0x594) FstSearchLeafLattice::propagateNulls(int, int, SearchStats*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44fe8d8 (   0x4ac) FstSearchLeafLattice::collectTraces() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44fed84 (    0xb8) FstSearchLeafLattice::vite(int, int, SearchStats*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44fee3c (    0x14) FstSearchLeafLattice::reset() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44fee50 (    0x10) FstSearchLeafLattice::doFrame(int, int, SearchStats*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44fee60 (    0x50) FstSearchLeafLattice::beginTopRecPassSyncRecog(PelScorer*, ArcGraph const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44feeb0 (    0xa0) FstSearchLeafLattice::endTopRecPassSyncRecog() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44fef50 (   0x870) FstSearchLeafLattice::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ff7c0 (   0x134) FstSearchLeafLattice::getBestTrace(DgnPrimFixArray<unsigned char>*, DgnPrimFixArray<bool>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ff8f4 (   0x110) FstSearchLeafLattice::findBestPath(DgnPrimFixArray<unsigned char>&, DgnPrimFixArray<bool>&, int&, DgnPrimArray<int>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ffa04 (   0x30c) FstSearchLeafLattice::createLatticeNodes(DgnPrimFixArray<int>&, DgnPrimArray<unsigned int>&, WordLattice*, DgnArray<DgnPrimArray<int>>&, DgnPrimFixArray<unsigned char>&, DgnPrimFixArray<bool>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44ffd10 (   0x278) FstSearchLeafLattice::buildWordLattice(WordLattice*, DgnPrimFixArray<unsigned char>&, DgnPrimFixArray<bool>&, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b44fff88 (   0x260) FstSearchLeafLattice::createLatticeLink(int, FstSearchLeafLatticeTraceToken const&, int, unsigned int, unsigned int, WordLattice*, HashProbeKEV<unsigned long long, DgnArray<LinkSegment>, WordLattice>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45001e8 (    0x50) FstSearchLeafLattice::getSilenceToken(int, int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4500238 (   0x11c) FstSearchLeafLattice::buildLinkSegmentation(DgnArray<LinkSegment>&, FstSearchLeafLatticeTraceToken const&, int, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4500354 (    0xd0) FstSearchLeafLattice::addLinkSegment(DgnArray<LinkSegment>&, unsigned short, int, unsigned int, unsigned short) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4500424 (    0x18) FstSearchLeafLattice::beginTopRecSyncRecog(VirtMap*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b450043c (    0x10) FstSearchLeafLattice::endTopRecSyncRecog() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b450044c (   0x188) FstSearchLeafLattice::getBestExitScore() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45005d4 (    0x90) FstSearchLeafLattice::getBestScoreMaybeUpdateFstNode(Node*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4500664 (   0x158) FstSearchLeafLattice::seedTheory(int, int, unsigned int, SearchStats*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45007bc (   0x1ec) FstSearchLeafLattice::expandEmbFstHistory(DgnPrimArray<unsigned int>*, DgnPrimArray<int>*, unsigned int&, DgnPrimArray<unsigned int>*, DgnPrimArray<unsigned int>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45009a8 (   0x1cc) FstSearchLeafLattice::checkSearchParametersValidityForArcGraph(bool, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4500b74 (   0x1b8) FstSearchLeafLattice::getHistory(int, DgnArray<HistContents>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4500d2c (   0x1b8) FstSearchLeafLattice::makePartialResult(DgnArray<WordLatticeLC>*, DgnArray<HistContents>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4500ee4 (    0x8c) FstSearchLatticeDurationBackoff::FstSearchLatticeDurationBackoff(int const&, int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4500f70 (     0x4) FstSearchLatticeDurationBackoff::maybeGeneratePelMaps(PicMgr const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4500f74 (   0x104) FstSearchLatticeDurationBackoff::maybeInitDurModel(PicMgr const*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4501078 (   0x7f0) FstSearchLatticeDurationBackoff::advanceDeltas(int, int, SearchStats*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4501868 (    0xd8) FstSearchLatticeDurationBackoff::applyCutoffOnEmitting(unsigned int, int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4501940 (   0x148) FstSearchLatticeDurationBackoff::makeViterbiDecisionOnEmitting() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4501a88 (   0x19c) void mrec_nth_element<FstSearchLatticeDurationBackoffcmpTok>(void*, unsigned long, unsigned long, unsigned long, unsigned long, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4501c24 (   0x36c) FstSearchLatticeDurationBackoff::seedFromMiniFst(int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4501f90 (   0x574) FstSearchLatticeDurationBackoff::propagateNulls(int, int, SearchStats*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4502504 (   0x334) FstSearchLatticeDurationBackoff::collectTraces() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4502838 (    0xb8) FstSearchLatticeDurationBackoff::vite(int, int, SearchStats*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45028f0 (    0x10) FstSearchLatticeDurationBackoff::reset() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4502900 (    0x10) FstSearchLatticeDurationBackoff::doFrame(int, int, SearchStats*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4502910 (    0x50) FstSearchLatticeDurationBackoff::beginTopRecPassSyncRecog(PelScorer*, ArcGraph const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4502960 (    0xa0) FstSearchLatticeDurationBackoff::endTopRecPassSyncRecog() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4502a00 (   0x7ac) FstSearchLatticeDurationBackoff::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45031ac (   0x134) FstSearchLatticeDurationBackoff::getBestTrace(DgnPrimFixArray<unsigned char>*, DgnPrimFixArray<bool>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45032e0 (   0x110) FstSearchLatticeDurationBackoff::findBestPath(DgnPrimFixArray<unsigned char>&, DgnPrimFixArray<bool>&, int&, DgnPrimArray<int>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45033f0 (   0x30c) FstSearchLatticeDurationBackoff::createLatticeNodes(DgnPrimFixArray<int>&, DgnPrimArray<unsigned int>&, WordLattice*, DgnArray<DgnPrimArray<int>>&, DgnPrimFixArray<unsigned char>&, DgnPrimFixArray<bool>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45036fc (   0x268) FstSearchLatticeDurationBackoff::buildWordLattice(WordLattice*, DgnPrimFixArray<unsigned char>&, DgnPrimFixArray<bool>&, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4503964 (   0x208) FstSearchLatticeDurationBackoff::createLatticeLink(int, FstSearchLatticeDurationBackoffTraceToken const&, int, unsigned int, unsigned int, WordLattice*, HashProbeKEV<unsigned long long, DgnArray<LinkSegment>, WordLattice>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4503b6c (    0x50) FstSearchLatticeDurationBackoff::getSilenceToken(int, int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4503bbc (    0x18) FstSearchLatticeDurationBackoff::beginTopRecSyncRecog(VirtMap*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4503bd4 (    0x10) FstSearchLatticeDurationBackoff::endTopRecSyncRecog() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4503be4 (   0x188) FstSearchLatticeDurationBackoff::getBestExitScore() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4503d6c (    0x90) FstSearchLatticeDurationBackoff::getBestScoreMaybeUpdateFstNode(Node*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4503dfc (   0x150) FstSearchLatticeDurationBackoff::seedTheory(int, int, unsigned int, SearchStats*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4503f4c (   0x1ec) FstSearchLatticeDurationBackoff::expandEmbFstHistory(DgnPrimArray<unsigned int>*, DgnPrimArray<int>*, unsigned int&, DgnPrimArray<unsigned int>*, DgnPrimArray<unsigned int>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4504138 (   0x1cc) FstSearchLatticeDurationBackoff::checkSearchParametersValidityForArcGraph(bool, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4504304 (   0x1b8) FstSearchLatticeDurationBackoff::getHistory(int, DgnArray<HistContents>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45044bc (   0x1b8) FstSearchLatticeDurationBackoff::makePartialResult(DgnArray<WordLatticeLC>*, DgnArray<HistContents>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4504674 (    0x8c) FstSearchLatticeDuration::FstSearchLatticeDuration(int const&, int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4504700 (     0x4) FstSearchLatticeDuration::maybeGeneratePelMaps(PicMgr const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4504704 (   0x104) FstSearchLatticeDuration::maybeInitDurModel(PicMgr const*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4504808 (   0x7ac) FstSearchLatticeDuration::advanceDeltas(int, int, SearchStats*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4504fb4 (    0xd8) FstSearchLatticeDuration::applyCutoffOnEmitting(unsigned int, int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b450508c (   0x148) FstSearchLatticeDuration::makeViterbiDecisionOnEmitting() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45051d4 (   0x19c) void mrec_nth_element<FstSearchLatticeDurationcmpTok>(void*, unsigned long, unsigned long, unsigned long, unsigned long, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4505370 (   0x36c) FstSearchLatticeDuration::seedFromMiniFst(int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45056dc (   0x574) FstSearchLatticeDuration::propagateNulls(int, int, SearchStats*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4505c50 (   0x334) FstSearchLatticeDuration::collectTraces() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4505f84 (    0xb8) FstSearchLatticeDuration::vite(int, int, SearchStats*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b450603c (    0x10) FstSearchLatticeDuration::reset() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b450604c (    0x10) FstSearchLatticeDuration::doFrame(int, int, SearchStats*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b450605c (    0x50) FstSearchLatticeDuration::beginTopRecPassSyncRecog(PelScorer*, ArcGraph const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45060ac (    0xa0) FstSearchLatticeDuration::endTopRecPassSyncRecog() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b450614c (   0x7ac) FstSearchLatticeDuration::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45068f8 (   0x134) FstSearchLatticeDuration::getBestTrace(DgnPrimFixArray<unsigned char>*, DgnPrimFixArray<bool>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4506a2c (   0x110) FstSearchLatticeDuration::findBestPath(DgnPrimFixArray<unsigned char>&, DgnPrimFixArray<bool>&, int&, DgnPrimArray<int>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4506b3c (   0x30c) FstSearchLatticeDuration::createLatticeNodes(DgnPrimFixArray<int>&, DgnPrimArray<unsigned int>&, WordLattice*, DgnArray<DgnPrimArray<int>>&, DgnPrimFixArray<unsigned char>&, DgnPrimFixArray<bool>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4506e48 (   0x268) FstSearchLatticeDuration::buildWordLattice(WordLattice*, DgnPrimFixArray<unsigned char>&, DgnPrimFixArray<bool>&, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45070b0 (   0x208) FstSearchLatticeDuration::createLatticeLink(int, FstSearchLatticeDurationTraceToken const&, int, unsigned int, unsigned int, WordLattice*, HashProbeKEV<unsigned long long, DgnArray<LinkSegment>, WordLattice>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45072b8 (    0x50) FstSearchLatticeDuration::getSilenceToken(int, int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4507308 (    0x18) FstSearchLatticeDuration::beginTopRecSyncRecog(VirtMap*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4507320 (    0x10) FstSearchLatticeDuration::endTopRecSyncRecog() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4507330 (   0x188) FstSearchLatticeDuration::getBestExitScore() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45074b8 (    0x90) FstSearchLatticeDuration::getBestScoreMaybeUpdateFstNode(Node*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4507548 (   0x150) FstSearchLatticeDuration::seedTheory(int, int, unsigned int, SearchStats*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4507698 (   0x1ec) FstSearchLatticeDuration::expandEmbFstHistory(DgnPrimArray<unsigned int>*, DgnPrimArray<int>*, unsigned int&, DgnPrimArray<unsigned int>*, DgnPrimArray<unsigned int>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4507884 (   0x1cc) FstSearchLatticeDuration::checkSearchParametersValidityForArcGraph(bool, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4507a50 (   0x1b8) FstSearchLatticeDuration::getHistory(int, DgnArray<HistContents>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4507c08 (   0x1b8) FstSearchLatticeDuration::makePartialResult(DgnArray<WordLatticeLC>*, DgnArray<HistContents>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4507dc0 (     0x4) FstSearchLateLatticeBackoff::maybeGeneratePelMaps(PicMgr const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4507dc4 (     0x4) FstSearchLateLatticeBackoff::maybeInitDurModel(PicMgr const*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4507dc8 (   0x678) FstSearchLateLatticeBackoff::advanceDeltas(int, int, SearchStats*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4508440 (    0xdc) FstSearchLateLatticeBackoff::applyCutoffOnEmitting(unsigned int, int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b450851c (    0xe8) FstSearchLateLatticeBackoff::makeViterbiDecisionOnEmitting() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4508604 (   0x1ac) void mrec_nth_element<FstSearchLateLatticeBackoffcmpTok>(void*, unsigned long, unsigned long, unsigned long, unsigned long, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45087b0 (   0x204) FstSearchLateLatticeBackoff::seedFromMiniFst(int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45089b4 (   0x430) FstSearchLateLatticeBackoff::propagateNulls(int, int, SearchStats*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4508de4 (   0x13c) FstSearchLateLatticeBackoff::getTraceTimeBoundaries(DgnPrimFixArray<unsigned int>&, DgnPrimArray<int>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4508f20 (    0x90) FstSearchLateLatticeBackoff::vite(int, int, SearchStats*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4508fb0 (    0x10) FstSearchLateLatticeBackoff::reset() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4508fc0 (    0x10) FstSearchLateLatticeBackoff::doFrame(int, int, SearchStats*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4508fd0 (    0x50) FstSearchLateLatticeBackoff::beginTopRecPassSyncRecog(PelScorer*, ArcGraph const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4509020 (    0xb0) FstSearchLateLatticeBackoff::endTopRecPassSyncRecog() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45090d0 (    0xb0) FstSearchLateLatticeBackoff::generateTraceTokensFromTraces() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4509180 (   0xa7c) FstSearchLateLatticeBackoff::generateTraceTokensForLateLattice() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4509bfc (   0x7ac) FstSearchLateLatticeBackoff::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b450a3a8 (   0x134) FstSearchLateLatticeBackoff::getBestTrace(DgnPrimFixArray<unsigned char>*, DgnPrimFixArray<bool>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b450a4dc (   0x2b4) FstSearchLateLatticeBackoff::findBestPath(DgnPrimFixArray<unsigned char>&, DgnPrimFixArray<bool>&, int&, DgnPrimArray<int>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b450a790 (   0x310) FstSearchLateLatticeBackoff::createLatticeNodes(DgnPrimFixArray<int>&, DgnPrimArray<unsigned int>&, WordLattice*, DgnArray<DgnPrimArray<int>>&, DgnPrimFixArray<unsigned char>&, DgnPrimFixArray<bool>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b450aaa0 (   0x274) FstSearchLateLatticeBackoff::buildWordLattice(WordLattice*, DgnPrimFixArray<unsigned char>&, DgnPrimFixArray<bool>&, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b450ad14 (   0x230) FstSearchLateLatticeBackoff::createLatticeLink(int, FstSearchLateLatticeBackoffTraceToken const&, int, unsigned int, unsigned int, WordLattice*, HashProbeKEV<unsigned long long, DgnArray<LinkSegment>, WordLattice>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b450af44 (    0x18) FstSearchLateLatticeBackoff::beginTopRecSyncRecog(VirtMap*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b450af5c (    0x10) FstSearchLateLatticeBackoff::endTopRecSyncRecog() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b450af6c (   0x168) FstSearchLateLatticeBackoff::getBestExitScore() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b450b0d4 (    0x90) FstSearchLateLatticeBackoff::getBestScoreMaybeUpdateFstNode(Node*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b450b164 (   0x124) FstSearchLateLatticeBackoff::seedTheory(int, int, unsigned int, SearchStats*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b450b288 (   0x1c8) FstSearchLateLatticeBackoff::expandEmbFstHistory(DgnPrimArray<unsigned int>*, DgnPrimArray<int>*, unsigned int&, DgnPrimArray<unsigned int>*, DgnPrimArray<unsigned int>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b450b450 (   0x1a4) FstSearchLateLatticeBackoff::isLexPelPhnMatch(int, Pic&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b450b5f4 (   0x1cc) FstSearchLateLatticeBackoff::checkSearchParametersValidityForArcGraph(bool, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b450b7c0 (   0x1a0) FstSearchLateLatticeBackoff::getHistory(int, DgnArray<HistContents>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b450b960 (   0x1b0) FstSearchLateLatticeBackoff::makePartialResult(DgnArray<WordLatticeLC>*, DgnArray<HistContents>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b450bb10 (     0x4) FstSearchLateLattice::maybeGeneratePelMaps(PicMgr const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b450bb14 (     0x4) FstSearchLateLattice::maybeInitDurModel(PicMgr const*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b450bb18 (   0x670) FstSearchLateLattice::advanceDeltas(int, int, SearchStats*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b450c188 (    0xdc) FstSearchLateLattice::applyCutoffOnEmitting(unsigned int, int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b450c264 (    0xe8) FstSearchLateLattice::makeViterbiDecisionOnEmitting() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b450c34c (   0x1ac) void mrec_nth_element<FstSearchLateLatticecmpTok>(void*, unsigned long, unsigned long, unsigned long, unsigned long, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b450c4f8 (   0x204) FstSearchLateLattice::seedFromMiniFst(int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b450c6fc (   0x430) FstSearchLateLattice::propagateNulls(int, int, SearchStats*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b450cb2c (   0x13c) FstSearchLateLattice::getTraceTimeBoundaries(DgnPrimFixArray<unsigned int>&, DgnPrimArray<int>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b450cc68 (    0x90) FstSearchLateLattice::vite(int, int, SearchStats*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b450ccf8 (    0x10) FstSearchLateLattice::reset() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b450cd08 (    0x10) FstSearchLateLattice::doFrame(int, int, SearchStats*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b450cd18 (    0x50) FstSearchLateLattice::beginTopRecPassSyncRecog(PelScorer*, ArcGraph const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b450cd68 (    0xb0) FstSearchLateLattice::endTopRecPassSyncRecog() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b450ce18 (    0xb0) FstSearchLateLattice::generateTraceTokensFromTraces() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b450cec8 (   0xa7c) FstSearchLateLattice::generateTraceTokensForLateLattice() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b450d944 (   0x7ac) FstSearchLateLattice::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b450e0f0 (   0x134) FstSearchLateLattice::getBestTrace(DgnPrimFixArray<unsigned char>*, DgnPrimFixArray<bool>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b450e224 (   0x2b4) FstSearchLateLattice::findBestPath(DgnPrimFixArray<unsigned char>&, DgnPrimFixArray<bool>&, int&, DgnPrimArray<int>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b450e4d8 (   0x310) FstSearchLateLattice::createLatticeNodes(DgnPrimFixArray<int>&, DgnPrimArray<unsigned int>&, WordLattice*, DgnArray<DgnPrimArray<int>>&, DgnPrimFixArray<unsigned char>&, DgnPrimFixArray<bool>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b450e7e8 (   0x274) FstSearchLateLattice::buildWordLattice(WordLattice*, DgnPrimFixArray<unsigned char>&, DgnPrimFixArray<bool>&, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b450ea5c (   0x230) FstSearchLateLattice::createLatticeLink(int, FstSearchLateLatticeTraceToken const&, int, unsigned int, unsigned int, WordLattice*, HashProbeKEV<unsigned long long, DgnArray<LinkSegment>, WordLattice>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b450ec8c (    0x18) FstSearchLateLattice::beginTopRecSyncRecog(VirtMap*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b450eca4 (    0x10) FstSearchLateLattice::endTopRecSyncRecog() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b450ecb4 (   0x168) FstSearchLateLattice::getBestExitScore() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b450ee1c (    0x90) FstSearchLateLattice::getBestScoreMaybeUpdateFstNode(Node*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b450eeac (   0x124) FstSearchLateLattice::seedTheory(int, int, unsigned int, SearchStats*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b450efd0 (   0x1c8) FstSearchLateLattice::expandEmbFstHistory(DgnPrimArray<unsigned int>*, DgnPrimArray<int>*, unsigned int&, DgnPrimArray<unsigned int>*, DgnPrimArray<unsigned int>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b450f198 (   0x1a4) FstSearchLateLattice::isLexPelPhnMatch(int, Pic&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b450f33c (   0x1cc) FstSearchLateLattice::checkSearchParametersValidityForArcGraph(bool, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b450f508 (   0x1a0) FstSearchLateLattice::getHistory(int, DgnArray<HistContents>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b450f6a8 (   0x1b0) FstSearchLateLattice::makePartialResult(DgnArray<WordLatticeLC>*, DgnArray<HistContents>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b450f858 (     0x4) FstSearchLatticeBackoff::maybeGeneratePelMaps(PicMgr const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b450f85c (     0x4) FstSearchLatticeBackoff::maybeInitDurModel(PicMgr const*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b450f860 (   0x744) FstSearchLatticeBackoff::advanceDeltas(int, int, SearchStats*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b450ffa4 (    0xdc) FstSearchLatticeBackoff::applyCutoffOnEmitting(unsigned int, int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4510080 (   0x14c) FstSearchLatticeBackoff::makeViterbiDecisionOnEmitting() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45101cc (   0x1ac) void mrec_nth_element<FstSearchLatticeBackoffcmpTok>(void*, unsigned long, unsigned long, unsigned long, unsigned long, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4510378 (   0x358) FstSearchLatticeBackoff::seedFromMiniFst(int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45106d0 (   0x588) FstSearchLatticeBackoff::propagateNulls(int, int, SearchStats*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4510c58 (   0x30c) FstSearchLatticeBackoff::collectTraces() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4510f64 (    0xb8) FstSearchLatticeBackoff::vite(int, int, SearchStats*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b451101c (    0x10) FstSearchLatticeBackoff::reset() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b451102c (    0x10) FstSearchLatticeBackoff::doFrame(int, int, SearchStats*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b451103c (    0x50) FstSearchLatticeBackoff::beginTopRecPassSyncRecog(PelScorer*, ArcGraph const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b451108c (    0xa0) FstSearchLatticeBackoff::endTopRecPassSyncRecog() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b451112c (   0x7a8) FstSearchLatticeBackoff::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45118d4 (   0x134) FstSearchLatticeBackoff::getBestTrace(DgnPrimFixArray<unsigned char>*, DgnPrimFixArray<bool>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4511a08 (   0x10c) FstSearchLatticeBackoff::findBestPath(DgnPrimFixArray<unsigned char>&, DgnPrimFixArray<bool>&, int&, DgnPrimArray<int>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4511b14 (   0x310) FstSearchLatticeBackoff::createLatticeNodes(DgnPrimFixArray<int>&, DgnPrimArray<unsigned int>&, WordLattice*, DgnArray<DgnPrimArray<int>>&, DgnPrimFixArray<unsigned char>&, DgnPrimFixArray<bool>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4511e24 (   0x264) FstSearchLatticeBackoff::buildWordLattice(WordLattice*, DgnPrimFixArray<unsigned char>&, DgnPrimFixArray<bool>&, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4512088 (   0x21c) FstSearchLatticeBackoff::createLatticeLink(int, FstSearchLatticeBackoffTraceToken const&, int, unsigned int, unsigned int, WordLattice*, HashProbeKEV<unsigned long long, DgnArray<LinkSegment>, WordLattice>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45122a4 (    0x18) FstSearchLatticeBackoff::beginTopRecSyncRecog(VirtMap*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45122bc (    0x10) FstSearchLatticeBackoff::endTopRecSyncRecog() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45122cc (   0x188) FstSearchLatticeBackoff::getBestExitScore() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4512454 (    0x90) FstSearchLatticeBackoff::getBestScoreMaybeUpdateFstNode(Node*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45124e4 (   0x14c) FstSearchLatticeBackoff::seedTheory(int, int, unsigned int, SearchStats*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4512630 (   0x1d8) FstSearchLatticeBackoff::expandEmbFstHistory(DgnPrimArray<unsigned int>*, DgnPrimArray<int>*, unsigned int&, DgnPrimArray<unsigned int>*, DgnPrimArray<unsigned int>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4512808 (   0x1cc) FstSearchLatticeBackoff::checkSearchParametersValidityForArcGraph(bool, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45129d4 (   0x1b0) FstSearchLatticeBackoff::getHistory(int, DgnArray<HistContents>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4512b84 (   0x1b4) FstSearchLatticeBackoff::makePartialResult(DgnArray<WordLatticeLC>*, DgnArray<HistContents>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4512d38 (     0x4) FstSearchLattice::maybeGeneratePelMaps(PicMgr const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4512d3c (     0x4) FstSearchLattice::maybeInitDurModel(PicMgr const*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4512d40 (   0x6f0) FstSearchLattice::advanceDeltas(int, int, SearchStats*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4513430 (    0xdc) FstSearchLattice::applyCutoffOnEmitting(unsigned int, int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b451350c (   0x14c) FstSearchLattice::makeViterbiDecisionOnEmitting() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4513658 (   0x1ac) void mrec_nth_element<FstSearchLatticecmpTok>(void*, unsigned long, unsigned long, unsigned long, unsigned long, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4513804 (   0x358) FstSearchLattice::seedFromMiniFst(int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4513b5c (   0x588) FstSearchLattice::propagateNulls(int, int, SearchStats*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45140e4 (   0x30c) FstSearchLattice::collectTraces() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45143f0 (    0xb8) FstSearchLattice::vite(int, int, SearchStats*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45144a8 (    0x10) FstSearchLattice::reset() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45144b8 (    0x10) FstSearchLattice::doFrame(int, int, SearchStats*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45144c8 (    0x50) FstSearchLattice::beginTopRecPassSyncRecog(PelScorer*, ArcGraph const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4514518 (    0xa0) FstSearchLattice::endTopRecPassSyncRecog() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45145b8 (   0x7a8) FstSearchLattice::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4514d60 (   0x134) FstSearchLattice::getBestTrace(DgnPrimFixArray<unsigned char>*, DgnPrimFixArray<bool>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4514e94 (   0x10c) FstSearchLattice::findBestPath(DgnPrimFixArray<unsigned char>&, DgnPrimFixArray<bool>&, int&, DgnPrimArray<int>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4514fa0 (   0x310) FstSearchLattice::createLatticeNodes(DgnPrimFixArray<int>&, DgnPrimArray<unsigned int>&, WordLattice*, DgnArray<DgnPrimArray<int>>&, DgnPrimFixArray<unsigned char>&, DgnPrimFixArray<bool>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45152b0 (   0x264) FstSearchLattice::buildWordLattice(WordLattice*, DgnPrimFixArray<unsigned char>&, DgnPrimFixArray<bool>&, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4515514 (   0x21c) FstSearchLattice::createLatticeLink(int, FstSearchLatticeTraceToken const&, int, unsigned int, unsigned int, WordLattice*, HashProbeKEV<unsigned long long, DgnArray<LinkSegment>, WordLattice>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4515730 (    0x18) FstSearchLattice::beginTopRecSyncRecog(VirtMap*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4515748 (    0x10) FstSearchLattice::endTopRecSyncRecog() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4515758 (   0x188) FstSearchLattice::getBestExitScore() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45158e0 (    0x90) FstSearchLattice::getBestScoreMaybeUpdateFstNode(Node*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4515970 (   0x14c) FstSearchLattice::seedTheory(int, int, unsigned int, SearchStats*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4515abc (   0x1d8) FstSearchLattice::expandEmbFstHistory(DgnPrimArray<unsigned int>*, DgnPrimArray<int>*, unsigned int&, DgnPrimArray<unsigned int>*, DgnPrimArray<unsigned int>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4515c94 (   0x1cc) FstSearchLattice::checkSearchParametersValidityForArcGraph(bool, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4515e60 (   0x1b0) FstSearchLattice::getHistory(int, DgnArray<HistContents>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4516010 (   0x1b4) FstSearchLattice::makePartialResult(DgnArray<WordLatticeLC>*, DgnArray<HistContents>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45161c4 (    0x98) FstSearchLeafDurationBackoff::FstSearchLeafDurationBackoff(int const&, int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b451625c (    0x14) FstSearchLeafDurationBackoff::maybeGeneratePelMaps(PicMgr const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4516270 (   0x104) FstSearchLeafDurationBackoff::maybeInitDurModel(PicMgr const*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4516374 (   0x8a8) FstSearchLeafDurationBackoff::advanceDeltas(int, int, SearchStats*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4516c1c (    0xec) FstSearchLeafDurationBackoff::applyCutoffOnEmitting(unsigned int, int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4516d08 (    0xe8) FstSearchLeafDurationBackoff::makeViterbiDecisionOnEmitting() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4516df0 (   0x13c) void mrec_nth_element<FstSearchLeafDurationBackoffcmpTok>(void*, unsigned long, unsigned long, unsigned long, unsigned long, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4516f2c (   0x1f0) FstSearchLeafDurationBackoff::seedFromMiniFst(int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b451711c (   0x410) FstSearchLeafDurationBackoff::propagateNulls(int, int, SearchStats*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b451752c (   0x3c4) FstSearchLeafDurationBackoff::collectTraces() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45178f0 (    0xb8) FstSearchLeafDurationBackoff::vite(int, int, SearchStats*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45179a8 (    0x14) FstSearchLeafDurationBackoff::reset() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45179bc (    0x10) FstSearchLeafDurationBackoff::doFrame(int, int, SearchStats*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45179cc (    0x50) FstSearchLeafDurationBackoff::beginTopRecPassSyncRecog(PelScorer*, ArcGraph const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4517a1c (    0xa8) FstSearchLeafDurationBackoff::endTopRecPassSyncRecog() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4517ac4 (    0xe8) FstSearchLeafDurationBackoff::generateTraceTokensFromTraces() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4517bac (   0x874) FstSearchLeafDurationBackoff::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4518420 (   0x134) FstSearchLeafDurationBackoff::getBestTrace(DgnPrimFixArray<unsigned char>*, DgnPrimFixArray<bool>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4518554 (   0x108) FstSearchLeafDurationBackoff::findBestPath(DgnPrimFixArray<unsigned char>&, DgnPrimFixArray<bool>&, int&, DgnPrimArray<int>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b451865c (   0x318) FstSearchLeafDurationBackoff::createLatticeNodes(DgnPrimFixArray<int>&, DgnPrimArray<unsigned int>&, WordLattice*, DgnArray<DgnPrimArray<int>>&, DgnPrimFixArray<unsigned char>&, DgnPrimFixArray<bool>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4518974 (   0x254) FstSearchLeafDurationBackoff::buildWordLattice(WordLattice*, DgnPrimFixArray<unsigned char>&, DgnPrimFixArray<bool>&, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4518bc8 (   0x294) FstSearchLeafDurationBackoff::createLatticeLink(int, FstSearchLeafDurationBackoffTraceToken const&, int, unsigned int, unsigned int, WordLattice*, HashProbeKEV<unsigned long long, DgnArray<LinkSegment>, WordLattice>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4518e5c (   0x11c) FstSearchLeafDurationBackoff::buildLinkSegmentation(DgnArray<LinkSegment>&, FstSearchLeafDurationBackoffTraceToken const&, int, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4518f78 (    0xd0) FstSearchLeafDurationBackoff::addLinkSegment(DgnArray<LinkSegment>&, unsigned short, int, unsigned int, unsigned short) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4519048 (    0x18) FstSearchLeafDurationBackoff::beginTopRecSyncRecog(VirtMap*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4519060 (    0x10) FstSearchLeafDurationBackoff::endTopRecSyncRecog() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4519070 (   0x168) FstSearchLeafDurationBackoff::getBestExitScore() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45191d8 (    0x90) FstSearchLeafDurationBackoff::getBestScoreMaybeUpdateFstNode(Node*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4519268 (   0x134) FstSearchLeafDurationBackoff::seedTheory(int, int, unsigned int, SearchStats*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b451939c (   0x1c8) FstSearchLeafDurationBackoff::expandEmbFstHistory(DgnPrimArray<unsigned int>*, DgnPrimArray<int>*, unsigned int&, DgnPrimArray<unsigned int>*, DgnPrimArray<unsigned int>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4519564 (   0x1cc) FstSearchLeafDurationBackoff::checkSearchParametersValidityForArcGraph(bool, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4519730 (   0x1a0) FstSearchLeafDurationBackoff::getHistory(int, DgnArray<HistContents>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45198d0 (   0x1b0) FstSearchLeafDurationBackoff::makePartialResult(DgnArray<WordLatticeLC>*, DgnArray<HistContents>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4519a80 (    0x98) FstSearchLeafDuration::FstSearchLeafDuration(int const&, int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4519b18 (    0x14) FstSearchLeafDuration::maybeGeneratePelMaps(PicMgr const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4519b2c (   0x104) FstSearchLeafDuration::maybeInitDurModel(PicMgr const*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4519c30 (   0x890) FstSearchLeafDuration::advanceDeltas(int, int, SearchStats*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b451a4c0 (    0xec) FstSearchLeafDuration::applyCutoffOnEmitting(unsigned int, int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b451a5ac (    0xe8) FstSearchLeafDuration::makeViterbiDecisionOnEmitting() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b451a694 (   0x13c) void mrec_nth_element<FstSearchLeafDurationcmpTok>(void*, unsigned long, unsigned long, unsigned long, unsigned long, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b451a7d0 (   0x1f0) FstSearchLeafDuration::seedFromMiniFst(int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b451a9c0 (   0x410) FstSearchLeafDuration::propagateNulls(int, int, SearchStats*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b451add0 (   0x3c4) FstSearchLeafDuration::collectTraces() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b451b194 (    0xb8) FstSearchLeafDuration::vite(int, int, SearchStats*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b451b24c (    0x14) FstSearchLeafDuration::reset() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b451b260 (    0x10) FstSearchLeafDuration::doFrame(int, int, SearchStats*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b451b270 (    0x50) FstSearchLeafDuration::beginTopRecPassSyncRecog(PelScorer*, ArcGraph const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b451b2c0 (    0xa8) FstSearchLeafDuration::endTopRecPassSyncRecog() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b451b368 (    0xe8) FstSearchLeafDuration::generateTraceTokensFromTraces() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b451b450 (   0x874) FstSearchLeafDuration::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b451bcc4 (   0x134) FstSearchLeafDuration::getBestTrace(DgnPrimFixArray<unsigned char>*, DgnPrimFixArray<bool>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b451bdf8 (   0x108) FstSearchLeafDuration::findBestPath(DgnPrimFixArray<unsigned char>&, DgnPrimFixArray<bool>&, int&, DgnPrimArray<int>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b451bf00 (   0x318) FstSearchLeafDuration::createLatticeNodes(DgnPrimFixArray<int>&, DgnPrimArray<unsigned int>&, WordLattice*, DgnArray<DgnPrimArray<int>>&, DgnPrimFixArray<unsigned char>&, DgnPrimFixArray<bool>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b451c218 (   0x254) FstSearchLeafDuration::buildWordLattice(WordLattice*, DgnPrimFixArray<unsigned char>&, DgnPrimFixArray<bool>&, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b451c46c (   0x294) FstSearchLeafDuration::createLatticeLink(int, FstSearchLeafDurationTraceToken const&, int, unsigned int, unsigned int, WordLattice*, HashProbeKEV<unsigned long long, DgnArray<LinkSegment>, WordLattice>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b451c700 (   0x11c) FstSearchLeafDuration::buildLinkSegmentation(DgnArray<LinkSegment>&, FstSearchLeafDurationTraceToken const&, int, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b451c81c (    0xd0) FstSearchLeafDuration::addLinkSegment(DgnArray<LinkSegment>&, unsigned short, int, unsigned int, unsigned short) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b451c8ec (    0x18) FstSearchLeafDuration::beginTopRecSyncRecog(VirtMap*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b451c904 (    0x10) FstSearchLeafDuration::endTopRecSyncRecog() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b451c914 (   0x168) FstSearchLeafDuration::getBestExitScore() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b451ca7c (    0x90) FstSearchLeafDuration::getBestScoreMaybeUpdateFstNode(Node*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b451cb0c (   0x134) FstSearchLeafDuration::seedTheory(int, int, unsigned int, SearchStats*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b451cc40 (   0x1c8) FstSearchLeafDuration::expandEmbFstHistory(DgnPrimArray<unsigned int>*, DgnPrimArray<int>*, unsigned int&, DgnPrimArray<unsigned int>*, DgnPrimArray<unsigned int>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b451ce08 (   0x1cc) FstSearchLeafDuration::checkSearchParametersValidityForArcGraph(bool, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b451cfd4 (   0x1a0) FstSearchLeafDuration::getHistory(int, DgnArray<HistContents>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b451d174 (   0x1b0) FstSearchLeafDuration::makePartialResult(DgnArray<WordLatticeLC>*, DgnArray<HistContents>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b451d324 (    0x8c) FstSearchDurationBackoff::FstSearchDurationBackoff(int const&, int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b451d3b0 (     0x4) FstSearchDurationBackoff::maybeGeneratePelMaps(PicMgr const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b451d3b4 (   0x104) FstSearchDurationBackoff::maybeInitDurModel(PicMgr const*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b451d4b8 (   0x720) FstSearchDurationBackoff::advanceDeltas(int, int, SearchStats*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b451dbd8 (    0xe4) FstSearchDurationBackoff::applyCutoffOnEmitting(unsigned int, int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b451dcbc (    0xe8) FstSearchDurationBackoff::makeViterbiDecisionOnEmitting() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b451dda4 (   0x140) void mrec_nth_element<FstSearchDurationBackoffcmpTok>(void*, unsigned long, unsigned long, unsigned long, unsigned long, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b451dee4 (   0x1d8) FstSearchDurationBackoff::seedFromMiniFst(int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b451e0bc (   0x3c0) FstSearchDurationBackoff::propagateNulls(int, int, SearchStats*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b451e47c (   0x23c) FstSearchDurationBackoff::collectTraces() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b451e6b8 (    0xb8) FstSearchDurationBackoff::vite(int, int, SearchStats*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b451e770 (    0x10) FstSearchDurationBackoff::reset() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b451e780 (    0x10) FstSearchDurationBackoff::doFrame(int, int, SearchStats*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b451e790 (    0x50) FstSearchDurationBackoff::beginTopRecPassSyncRecog(PelScorer*, ArcGraph const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b451e7e0 (    0xa8) FstSearchDurationBackoff::endTopRecPassSyncRecog() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b451e888 (    0xb0) FstSearchDurationBackoff::generateTraceTokensFromTraces() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b451e938 (   0x7ac) FstSearchDurationBackoff::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b451f0e4 (   0x134) FstSearchDurationBackoff::getBestTrace(DgnPrimFixArray<unsigned char>*, DgnPrimFixArray<bool>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b451f218 (   0x108) FstSearchDurationBackoff::findBestPath(DgnPrimFixArray<unsigned char>&, DgnPrimFixArray<bool>&, int&, DgnPrimArray<int>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b451f320 (   0x30c) FstSearchDurationBackoff::createLatticeNodes(DgnPrimFixArray<int>&, DgnPrimArray<unsigned int>&, WordLattice*, DgnArray<DgnPrimArray<int>>&, DgnPrimFixArray<unsigned char>&, DgnPrimFixArray<bool>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b451f62c (   0x23c) FstSearchDurationBackoff::buildWordLattice(WordLattice*, DgnPrimFixArray<unsigned char>&, DgnPrimFixArray<bool>&, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b451f868 (   0x224) FstSearchDurationBackoff::createLatticeLink(int, FstSearchDurationBackoffTraceToken const&, int, unsigned int, unsigned int, WordLattice*, HashProbeKEV<unsigned long long, DgnArray<LinkSegment>, WordLattice>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b451fa8c (    0x18) FstSearchDurationBackoff::beginTopRecSyncRecog(VirtMap*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b451faa4 (    0x10) FstSearchDurationBackoff::endTopRecSyncRecog() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b451fab4 (   0x168) FstSearchDurationBackoff::getBestExitScore() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b451fc1c (    0x90) FstSearchDurationBackoff::getBestScoreMaybeUpdateFstNode(Node*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b451fcac (   0x120) FstSearchDurationBackoff::seedTheory(int, int, unsigned int, SearchStats*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b451fdcc (   0x1c8) FstSearchDurationBackoff::expandEmbFstHistory(DgnPrimArray<unsigned int>*, DgnPrimArray<int>*, unsigned int&, DgnPrimArray<unsigned int>*, DgnPrimArray<unsigned int>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b451ff94 (   0x1cc) FstSearchDurationBackoff::checkSearchParametersValidityForArcGraph(bool, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4520160 (   0x1a0) FstSearchDurationBackoff::getHistory(int, DgnArray<HistContents>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4520300 (   0x1b0) FstSearchDurationBackoff::makePartialResult(DgnArray<WordLatticeLC>*, DgnArray<HistContents>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45204b0 (    0x8c) FstSearchDuration::FstSearchDuration(int const&, int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b452053c (     0x4) FstSearchDuration::maybeGeneratePelMaps(PicMgr const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4520540 (   0x104) FstSearchDuration::maybeInitDurModel(PicMgr const*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4520644 (   0x6f4) FstSearchDuration::advanceDeltas(int, int, SearchStats*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4520d38 (    0xe4) FstSearchDuration::applyCutoffOnEmitting(unsigned int, int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4520e1c (    0xe8) FstSearchDuration::makeViterbiDecisionOnEmitting() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4520f04 (   0x140) void mrec_nth_element<FstSearchDurationcmpTok>(void*, unsigned long, unsigned long, unsigned long, unsigned long, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4521044 (   0x1d8) FstSearchDuration::seedFromMiniFst(int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b452121c (   0x3c0) FstSearchDuration::propagateNulls(int, int, SearchStats*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45215dc (   0x23c) FstSearchDuration::collectTraces() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4521818 (    0xb8) FstSearchDuration::vite(int, int, SearchStats*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45218d0 (    0x10) FstSearchDuration::reset() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45218e0 (    0x10) FstSearchDuration::doFrame(int, int, SearchStats*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45218f0 (    0x50) FstSearchDuration::beginTopRecPassSyncRecog(PelScorer*, ArcGraph const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4521940 (    0xa8) FstSearchDuration::endTopRecPassSyncRecog() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45219e8 (    0xb0) FstSearchDuration::generateTraceTokensFromTraces() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4521a98 (   0x7ac) FstSearchDuration::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4522244 (   0x134) FstSearchDuration::getBestTrace(DgnPrimFixArray<unsigned char>*, DgnPrimFixArray<bool>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4522378 (   0x108) FstSearchDuration::findBestPath(DgnPrimFixArray<unsigned char>&, DgnPrimFixArray<bool>&, int&, DgnPrimArray<int>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4522480 (   0x30c) FstSearchDuration::createLatticeNodes(DgnPrimFixArray<int>&, DgnPrimArray<unsigned int>&, WordLattice*, DgnArray<DgnPrimArray<int>>&, DgnPrimFixArray<unsigned char>&, DgnPrimFixArray<bool>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b452278c (   0x23c) FstSearchDuration::buildWordLattice(WordLattice*, DgnPrimFixArray<unsigned char>&, DgnPrimFixArray<bool>&, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45229c8 (   0x224) FstSearchDuration::createLatticeLink(int, FstSearchDurationTraceToken const&, int, unsigned int, unsigned int, WordLattice*, HashProbeKEV<unsigned long long, DgnArray<LinkSegment>, WordLattice>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4522bec (    0x18) FstSearchDuration::beginTopRecSyncRecog(VirtMap*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4522c04 (    0x10) FstSearchDuration::endTopRecSyncRecog() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4522c14 (   0x168) FstSearchDuration::getBestExitScore() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4522d7c (    0x90) FstSearchDuration::getBestScoreMaybeUpdateFstNode(Node*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4522e0c (   0x120) FstSearchDuration::seedTheory(int, int, unsigned int, SearchStats*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4522f2c (   0x1c8) FstSearchDuration::expandEmbFstHistory(DgnPrimArray<unsigned int>*, DgnPrimArray<int>*, unsigned int&, DgnPrimArray<unsigned int>*, DgnPrimArray<unsigned int>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45230f4 (   0x1cc) FstSearchDuration::checkSearchParametersValidityForArcGraph(bool, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45232c0 (   0x1a0) FstSearchDuration::getHistory(int, DgnArray<HistContents>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4523460 (   0x1b0) FstSearchDuration::makePartialResult(DgnArray<WordLatticeLC>*, DgnArray<HistContents>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4523610 (    0x14) FstSearchLeafBackoff::maybeGeneratePelMaps(PicMgr const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4523624 (     0x4) FstSearchLeafBackoff::maybeInitDurModel(PicMgr const*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4523628 (   0x7f4) FstSearchLeafBackoff::advanceDeltas(int, int, SearchStats*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4523e1c (    0xe4) FstSearchLeafBackoff::applyCutoffOnEmitting(unsigned int, int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4523f00 (    0xe8) FstSearchLeafBackoff::makeViterbiDecisionOnEmitting() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4523fe8 (   0x140) void mrec_nth_element<FstSearchLeafBackoffcmpTok>(void*, unsigned long, unsigned long, unsigned long, unsigned long, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4524128 (   0x1dc) FstSearchLeafBackoff::seedFromMiniFst(int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4524304 (   0x3d4) FstSearchLeafBackoff::propagateNulls(int, int, SearchStats*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45246d8 (   0x3b0) FstSearchLeafBackoff::collectTraces() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4524a88 (    0xb8) FstSearchLeafBackoff::vite(int, int, SearchStats*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4524b40 (    0x14) FstSearchLeafBackoff::reset() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4524b54 (    0x10) FstSearchLeafBackoff::doFrame(int, int, SearchStats*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4524b64 (    0x50) FstSearchLeafBackoff::beginTopRecPassSyncRecog(PelScorer*, ArcGraph const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4524bb4 (    0xa8) FstSearchLeafBackoff::endTopRecPassSyncRecog() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4524c5c (    0xc8) FstSearchLeafBackoff::generateTraceTokensFromTraces() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4524d24 (   0x874) FstSearchLeafBackoff::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4525598 (   0x12c) FstSearchLeafBackoff::getBestTrace(DgnPrimFixArray<unsigned char>*, DgnPrimFixArray<bool>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45256c4 (   0x108) FstSearchLeafBackoff::findBestPath(DgnPrimFixArray<unsigned char>&, DgnPrimFixArray<bool>&, int&, DgnPrimArray<int>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45257cc (   0x310) FstSearchLeafBackoff::createLatticeNodes(DgnPrimFixArray<int>&, DgnPrimArray<unsigned int>&, WordLattice*, DgnArray<DgnPrimArray<int>>&, DgnPrimFixArray<unsigned char>&, DgnPrimFixArray<bool>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4525adc (   0x24c) FstSearchLeafBackoff::buildWordLattice(WordLattice*, DgnPrimFixArray<unsigned char>&, DgnPrimFixArray<bool>&, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4525d28 (   0x278) FstSearchLeafBackoff::createLatticeLink(int, FstSearchLeafBackoffTraceToken const&, int, unsigned int, unsigned int, WordLattice*, HashProbeKEV<unsigned long long, DgnArray<LinkSegment>, WordLattice>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4525fa0 (   0x11c) FstSearchLeafBackoff::buildLinkSegmentation(DgnArray<LinkSegment>&, FstSearchLeafBackoffTraceToken const&, int, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45260bc (    0xd0) FstSearchLeafBackoff::addLinkSegment(DgnArray<LinkSegment>&, unsigned short, int, unsigned int, unsigned short) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b452618c (    0x18) FstSearchLeafBackoff::beginTopRecSyncRecog(VirtMap*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45261a4 (    0x10) FstSearchLeafBackoff::endTopRecSyncRecog() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45261b4 (   0x154) FstSearchLeafBackoff::getBestExitScore() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4526308 (    0x90) FstSearchLeafBackoff::getBestScoreMaybeUpdateFstNode(Node*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4526398 (   0x124) FstSearchLeafBackoff::seedTheory(int, int, unsigned int, SearchStats*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45264bc (   0x1b4) FstSearchLeafBackoff::expandEmbFstHistory(DgnPrimArray<unsigned int>*, DgnPrimArray<int>*, unsigned int&, DgnPrimArray<unsigned int>*, DgnPrimArray<unsigned int>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4526670 (   0x1cc) FstSearchLeafBackoff::checkSearchParametersValidityForArcGraph(bool, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b452683c (   0x198) FstSearchLeafBackoff::getHistory(int, DgnArray<HistContents>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45269d4 (   0x1b0) FstSearchLeafBackoff::makePartialResult(DgnArray<WordLatticeLC>*, DgnArray<HistContents>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4526b84 (    0x14) FstSearchLeaf::maybeGeneratePelMaps(PicMgr const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4526b98 (     0x4) FstSearchLeaf::maybeInitDurModel(PicMgr const*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4526b9c (   0x7d4) FstSearchLeaf::advanceDeltas(int, int, SearchStats*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4527370 (    0xe4) FstSearchLeaf::applyCutoffOnEmitting(unsigned int, int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4527454 (    0xe8) FstSearchLeaf::makeViterbiDecisionOnEmitting() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b452753c (   0x140) void mrec_nth_element<FstSearchLeafcmpTok>(void*, unsigned long, unsigned long, unsigned long, unsigned long, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b452767c (   0x1dc) FstSearchLeaf::seedFromMiniFst(int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4527858 (   0x3d4) FstSearchLeaf::propagateNulls(int, int, SearchStats*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4527c2c (   0x3b0) FstSearchLeaf::collectTraces() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4527fdc (    0xb8) FstSearchLeaf::vite(int, int, SearchStats*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4528094 (    0x14) FstSearchLeaf::reset() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45280a8 (    0x10) FstSearchLeaf::doFrame(int, int, SearchStats*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45280b8 (    0x50) FstSearchLeaf::beginTopRecPassSyncRecog(PelScorer*, ArcGraph const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4528108 (    0xa8) FstSearchLeaf::endTopRecPassSyncRecog() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45281b0 (    0xc8) FstSearchLeaf::generateTraceTokensFromTraces() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4528278 (   0x874) FstSearchLeaf::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4528aec (   0x12c) FstSearchLeaf::getBestTrace(DgnPrimFixArray<unsigned char>*, DgnPrimFixArray<bool>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4528c18 (   0x108) FstSearchLeaf::findBestPath(DgnPrimFixArray<unsigned char>&, DgnPrimFixArray<bool>&, int&, DgnPrimArray<int>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4528d20 (   0x310) FstSearchLeaf::createLatticeNodes(DgnPrimFixArray<int>&, DgnPrimArray<unsigned int>&, WordLattice*, DgnArray<DgnPrimArray<int>>&, DgnPrimFixArray<unsigned char>&, DgnPrimFixArray<bool>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4529030 (   0x24c) FstSearchLeaf::buildWordLattice(WordLattice*, DgnPrimFixArray<unsigned char>&, DgnPrimFixArray<bool>&, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b452927c (   0x278) FstSearchLeaf::createLatticeLink(int, FstSearchLeafTraceToken const&, int, unsigned int, unsigned int, WordLattice*, HashProbeKEV<unsigned long long, DgnArray<LinkSegment>, WordLattice>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45294f4 (   0x11c) FstSearchLeaf::buildLinkSegmentation(DgnArray<LinkSegment>&, FstSearchLeafTraceToken const&, int, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4529610 (    0xd0) FstSearchLeaf::addLinkSegment(DgnArray<LinkSegment>&, unsigned short, int, unsigned int, unsigned short) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45296e0 (    0x18) FstSearchLeaf::beginTopRecSyncRecog(VirtMap*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45296f8 (    0x10) FstSearchLeaf::endTopRecSyncRecog() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4529708 (   0x154) FstSearchLeaf::getBestExitScore() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b452985c (    0x90) FstSearchLeaf::getBestScoreMaybeUpdateFstNode(Node*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45298ec (   0x124) FstSearchLeaf::seedTheory(int, int, unsigned int, SearchStats*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4529a10 (   0x1b4) FstSearchLeaf::expandEmbFstHistory(DgnPrimArray<unsigned int>*, DgnPrimArray<int>*, unsigned int&, DgnPrimArray<unsigned int>*, DgnPrimArray<unsigned int>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4529bc4 (   0x1cc) FstSearchLeaf::checkSearchParametersValidityForArcGraph(bool, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4529d90 (   0x198) FstSearchLeaf::getHistory(int, DgnArray<HistContents>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4529f28 (   0x1b0) FstSearchLeaf::makePartialResult(DgnArray<WordLatticeLC>*, DgnArray<HistContents>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b452a0d8 (     0x4) FstSearchBackoff::maybeGeneratePelMaps(PicMgr const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b452a0dc (     0x4) FstSearchBackoff::maybeInitDurModel(PicMgr const*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b452a0e0 (   0x688) FstSearchBackoff::advanceDeltas(int, int, SearchStats*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b452a768 (    0xdc) FstSearchBackoff::applyCutoffOnEmitting(unsigned int, int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b452a844 (    0xe8) FstSearchBackoff::makeViterbiDecisionOnEmitting() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b452a92c (   0x134) void mrec_nth_element<FstSearchBackoffcmpTok>(void*, unsigned long, unsigned long, unsigned long, unsigned long, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b452aa60 (   0x1dc) FstSearchBackoff::seedFromMiniFst(int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b452ac3c (   0x3ac) FstSearchBackoff::propagateNulls(int, int, SearchStats*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b452afe8 (   0x238) FstSearchBackoff::collectTraces() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b452b220 (    0xb8) FstSearchBackoff::vite(int, int, SearchStats*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b452b2d8 (    0x10) FstSearchBackoff::reset() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b452b2e8 (    0x10) FstSearchBackoff::doFrame(int, int, SearchStats*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b452b2f8 (    0x50) FstSearchBackoff::beginTopRecPassSyncRecog(PelScorer*, ArcGraph const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b452b348 (    0xa8) FstSearchBackoff::endTopRecPassSyncRecog() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b452b3f0 (    0xc0) FstSearchBackoff::generateTraceTokensFromTraces() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b452b4b0 (   0x7a8) FstSearchBackoff::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b452bc58 (   0x134) FstSearchBackoff::getBestTrace(DgnPrimFixArray<unsigned char>*, DgnPrimFixArray<bool>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b452bd8c (   0x108) FstSearchBackoff::findBestPath(DgnPrimFixArray<unsigned char>&, DgnPrimFixArray<bool>&, int&, DgnPrimArray<int>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b452be94 (   0x318) FstSearchBackoff::createLatticeNodes(DgnPrimFixArray<int>&, DgnPrimArray<unsigned int>&, WordLattice*, DgnArray<DgnPrimArray<int>>&, DgnPrimFixArray<unsigned char>&, DgnPrimFixArray<bool>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b452c1ac (   0x240) FstSearchBackoff::buildWordLattice(WordLattice*, DgnPrimFixArray<unsigned char>&, DgnPrimFixArray<bool>&, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b452c3ec (   0x214) FstSearchBackoff::createLatticeLink(int, FstSearchBackoffTraceToken const&, int, unsigned int, unsigned int, WordLattice*, HashProbeKEV<unsigned long long, DgnArray<LinkSegment>, WordLattice>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b452c600 (    0x18) FstSearchBackoff::beginTopRecSyncRecog(VirtMap*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b452c618 (    0x10) FstSearchBackoff::endTopRecSyncRecog() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b452c628 (   0x168) FstSearchBackoff::getBestExitScore() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b452c790 (    0x90) FstSearchBackoff::getBestScoreMaybeUpdateFstNode(Node*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b452c820 (   0x118) FstSearchBackoff::seedTheory(int, int, unsigned int, SearchStats*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b452c938 (   0x1c8) FstSearchBackoff::expandEmbFstHistory(DgnPrimArray<unsigned int>*, DgnPrimArray<int>*, unsigned int&, DgnPrimArray<unsigned int>*, DgnPrimArray<unsigned int>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b452cb00 (   0x1cc) FstSearchBackoff::checkSearchParametersValidityForArcGraph(bool, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b452cccc (   0x1a0) FstSearchBackoff::getHistory(int, DgnArray<HistContents>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b452ce6c (   0x1b0) FstSearchBackoff::makePartialResult(DgnArray<WordLatticeLC>*, DgnArray<HistContents>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b452d01c (     0x4) FstSearch::maybeGeneratePelMaps(PicMgr const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b452d020 (     0x4) FstSearch::maybeInitDurModel(PicMgr const*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b452d024 (   0x668) FstSearch::advanceDeltas(int, int, SearchStats*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b452d68c (    0xdc) FstSearch::applyCutoffOnEmitting(unsigned int, int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b452d768 (    0xe8) FstSearch::makeViterbiDecisionOnEmitting() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b452d850 (   0x134) void mrec_nth_element<FstSearchcmpTok>(void*, unsigned long, unsigned long, unsigned long, unsigned long, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b452d984 (   0x1dc) FstSearch::seedFromMiniFst(int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b452db60 (   0x3ac) FstSearch::propagateNulls(int, int, SearchStats*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b452df0c (   0x238) FstSearch::collectTraces() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b452e144 (    0xb8) FstSearch::vite(int, int, SearchStats*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b452e1fc (    0x10) FstSearch::reset() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b452e20c (    0x10) FstSearch::doFrame(int, int, SearchStats*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b452e21c (    0x50) FstSearch::beginTopRecPassSyncRecog(PelScorer*, ArcGraph const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b452e26c (    0xa8) FstSearch::endTopRecPassSyncRecog() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b452e314 (    0xc0) FstSearch::generateTraceTokensFromTraces() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b452e3d4 (   0x7a8) FstSearch::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b452eb7c (   0x134) FstSearch::getBestTrace(DgnPrimFixArray<unsigned char>*, DgnPrimFixArray<bool>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b452ecb0 (   0x108) FstSearch::findBestPath(DgnPrimFixArray<unsigned char>&, DgnPrimFixArray<bool>&, int&, DgnPrimArray<int>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b452edb8 (   0x318) FstSearch::createLatticeNodes(DgnPrimFixArray<int>&, DgnPrimArray<unsigned int>&, WordLattice*, DgnArray<DgnPrimArray<int>>&, DgnPrimFixArray<unsigned char>&, DgnPrimFixArray<bool>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b452f0d0 (   0x240) FstSearch::buildWordLattice(WordLattice*, DgnPrimFixArray<unsigned char>&, DgnPrimFixArray<bool>&, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b452f310 (   0x214) FstSearch::createLatticeLink(int, FstSearchTraceToken const&, int, unsigned int, unsigned int, WordLattice*, HashProbeKEV<unsigned long long, DgnArray<LinkSegment>, WordLattice>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b452f524 (    0x18) FstSearch::beginTopRecSyncRecog(VirtMap*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b452f53c (    0x10) FstSearch::endTopRecSyncRecog() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b452f54c (   0x168) FstSearch::getBestExitScore() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b452f6b4 (    0x90) FstSearch::getBestScoreMaybeUpdateFstNode(Node*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b452f744 (   0x118) FstSearch::seedTheory(int, int, unsigned int, SearchStats*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b452f85c (   0x1c8) FstSearch::expandEmbFstHistory(DgnPrimArray<unsigned int>*, DgnPrimArray<int>*, unsigned int&, DgnPrimArray<unsigned int>*, DgnPrimArray<unsigned int>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b452fa24 (   0x1cc) FstSearch::checkSearchParametersValidityForArcGraph(bool, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b452fbf0 (   0x1a0) FstSearch::getHistory(int, DgnArray<HistContents>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b452fd90 (   0x1b0) FstSearch::makePartialResult(DgnArray<WordLatticeLC>*, DgnArray<HistContents>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b452ff40 (   0x684) FstCore::generateDecoder(B_FstCoreLatticeGenerationType, bool, bool, bool, bool, int, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45305c4 (    0xa8) FstSearchLateLatticeHashBackoff::~FstSearchLateLatticeHashBackoff() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453066c (    0xac) FstSearchLateLatticeHashBackoff::~FstSearchLateLatticeHashBackoff() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4530718 (     0xc) FstSearchLateLatticeHashBackoff::getRequiredVirtMapSize() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4530724 (     0x8) FstSearchLateLatticeHashBackoff::getNActiveStates() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453072c (    0x14) FstSearchLateLatticeHashBackoff::getBestScoreThisFrame() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4530740 (    0xa8) FstSearchLateLatticeHash::~FstSearchLateLatticeHash() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45307e8 (    0xac) FstSearchLateLatticeHash::~FstSearchLateLatticeHash() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4530894 (     0xc) FstSearchLateLatticeHash::getRequiredVirtMapSize() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45308a0 (     0x8) FstSearchLateLatticeHash::getNActiveStates() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45308a8 (    0x14) FstSearchLateLatticeHash::getBestScoreThisFrame() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45308bc (    0xa8) FstSearchLatticeHashBackoff::~FstSearchLatticeHashBackoff() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4530964 (    0xac) FstSearchLatticeHashBackoff::~FstSearchLatticeHashBackoff() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4530a10 (     0xc) FstSearchLatticeHashBackoff::getRequiredVirtMapSize() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4530a1c (     0x8) FstSearchLatticeHashBackoff::getNActiveStates() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4530a24 (    0x14) FstSearchLatticeHashBackoff::getBestScoreThisFrame() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4530a38 (    0xa8) FstSearchLatticeHash::~FstSearchLatticeHash() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4530ae0 (    0xac) FstSearchLatticeHash::~FstSearchLatticeHash() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4530b8c (     0xc) FstSearchLatticeHash::getRequiredVirtMapSize() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4530b98 (     0x8) FstSearchLatticeHash::getNActiveStates() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4530ba0 (    0x14) FstSearchLatticeHash::getBestScoreThisFrame() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4530bb4 (    0xb0) FstSearchDurationHashBackoff::~FstSearchDurationHashBackoff() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4530c64 (    0xb4) FstSearchDurationHashBackoff::~FstSearchDurationHashBackoff() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4530d18 (     0xc) FstSearchDurationHashBackoff::getRequiredVirtMapSize() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4530d24 (     0x8) FstSearchDurationHashBackoff::getNActiveStates() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4530d2c (    0x14) FstSearchDurationHashBackoff::getBestScoreThisFrame() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4530d40 (    0xb0) FstSearchDurationHash::~FstSearchDurationHash() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4530df0 (    0xb4) FstSearchDurationHash::~FstSearchDurationHash() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4530ea4 (     0xc) FstSearchDurationHash::getRequiredVirtMapSize() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4530eb0 (     0x8) FstSearchDurationHash::getNActiveStates() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4530eb8 (    0x14) FstSearchDurationHash::getBestScoreThisFrame() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4530ecc (    0xa8) FstSearchHashBackoff::~FstSearchHashBackoff() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4530f74 (    0xac) FstSearchHashBackoff::~FstSearchHashBackoff() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4531020 (     0xc) FstSearchHashBackoff::getRequiredVirtMapSize() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453102c (     0x8) FstSearchHashBackoff::getNActiveStates() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4531034 (    0x14) FstSearchHashBackoff::getBestScoreThisFrame() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4531048 (    0xa8) FstSearchHash::~FstSearchHash() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45310f0 (    0xac) FstSearchHash::~FstSearchHash() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453119c (     0xc) FstSearchHash::getRequiredVirtMapSize() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45311a8 (     0x8) FstSearchHash::getNActiveStates() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45311b0 (    0x14) FstSearchHash::getBestScoreThisFrame() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45311c4 (    0xc8) FstSearchLeafLatticeDurationBackoff::~FstSearchLeafLatticeDurationBackoff() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453128c (    0xcc) FstSearchLeafLatticeDurationBackoff::~FstSearchLeafLatticeDurationBackoff() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4531358 (     0x8) FstSearchLeafLatticeDurationBackoff::getRequiredVirtMapSize() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4531360 (     0x8) FstSearchLeafLatticeDurationBackoff::getNActiveStates() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4531368 (    0x14) FstSearchLeafLatticeDurationBackoff::getBestScoreThisFrame() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453137c (    0xc8) FstSearchLeafLatticeDuration::~FstSearchLeafLatticeDuration() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4531444 (    0xcc) FstSearchLeafLatticeDuration::~FstSearchLeafLatticeDuration() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4531510 (     0x8) FstSearchLeafLatticeDuration::getRequiredVirtMapSize() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4531518 (     0x8) FstSearchLeafLatticeDuration::getNActiveStates() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4531520 (    0x14) FstSearchLeafLatticeDuration::getBestScoreThisFrame() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4531534 (    0xc0) FstSearchLeafLatticeBackoff::~FstSearchLeafLatticeBackoff() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45315f4 (    0xc4) FstSearchLeafLatticeBackoff::~FstSearchLeafLatticeBackoff() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45316b8 (     0x8) FstSearchLeafLatticeBackoff::getRequiredVirtMapSize() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45316c0 (     0x8) FstSearchLeafLatticeBackoff::getNActiveStates() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45316c8 (    0x14) FstSearchLeafLatticeBackoff::getBestScoreThisFrame() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45316dc (    0xc0) FstSearchLeafLattice::~FstSearchLeafLattice() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453179c (    0xc4) FstSearchLeafLattice::~FstSearchLeafLattice() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4531860 (     0x8) FstSearchLeafLattice::getRequiredVirtMapSize() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4531868 (     0x8) FstSearchLeafLattice::getNActiveStates() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4531870 (    0x14) FstSearchLeafLattice::getBestScoreThisFrame() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4531884 (    0xb0) FstSearchLatticeDurationBackoff::~FstSearchLatticeDurationBackoff() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4531934 (    0xb4) FstSearchLatticeDurationBackoff::~FstSearchLatticeDurationBackoff() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45319e8 (     0x8) FstSearchLatticeDurationBackoff::getRequiredVirtMapSize() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45319f0 (     0x8) FstSearchLatticeDurationBackoff::getNActiveStates() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45319f8 (    0x14) FstSearchLatticeDurationBackoff::getBestScoreThisFrame() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4531a0c (    0xb0) FstSearchLatticeDuration::~FstSearchLatticeDuration() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4531abc (    0xb4) FstSearchLatticeDuration::~FstSearchLatticeDuration() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4531b70 (     0x8) FstSearchLatticeDuration::getRequiredVirtMapSize() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4531b78 (     0x8) FstSearchLatticeDuration::getNActiveStates() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4531b80 (    0x14) FstSearchLatticeDuration::getBestScoreThisFrame() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4531b94 (    0xa8) FstSearchLateLatticeBackoff::~FstSearchLateLatticeBackoff() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4531c3c (    0xac) FstSearchLateLatticeBackoff::~FstSearchLateLatticeBackoff() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4531ce8 (     0x8) FstSearchLateLatticeBackoff::getRequiredVirtMapSize() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4531cf0 (     0x8) FstSearchLateLatticeBackoff::getNActiveStates() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4531cf8 (    0x14) FstSearchLateLatticeBackoff::getBestScoreThisFrame() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4531d0c (    0xa8) FstSearchLateLattice::~FstSearchLateLattice() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4531db4 (    0xac) FstSearchLateLattice::~FstSearchLateLattice() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4531e60 (     0x8) FstSearchLateLattice::getRequiredVirtMapSize() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4531e68 (     0x8) FstSearchLateLattice::getNActiveStates() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4531e70 (    0x14) FstSearchLateLattice::getBestScoreThisFrame() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4531e84 (    0xa8) FstSearchLatticeBackoff::~FstSearchLatticeBackoff() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4531f2c (    0xac) FstSearchLatticeBackoff::~FstSearchLatticeBackoff() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4531fd8 (     0x8) FstSearchLatticeBackoff::getRequiredVirtMapSize() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4531fe0 (     0x8) FstSearchLatticeBackoff::getNActiveStates() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4531fe8 (    0x14) FstSearchLatticeBackoff::getBestScoreThisFrame() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4531ffc (    0xa8) FstSearchLattice::~FstSearchLattice() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45320a4 (    0xac) FstSearchLattice::~FstSearchLattice() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4532150 (     0x8) FstSearchLattice::getRequiredVirtMapSize() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4532158 (     0x8) FstSearchLattice::getNActiveStates() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4532160 (    0x14) FstSearchLattice::getBestScoreThisFrame() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4532174 (    0xc8) FstSearchLeafDurationBackoff::~FstSearchLeafDurationBackoff() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453223c (    0xcc) FstSearchLeafDurationBackoff::~FstSearchLeafDurationBackoff() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4532308 (     0x8) FstSearchLeafDurationBackoff::getRequiredVirtMapSize() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4532310 (     0x8) FstSearchLeafDurationBackoff::getNActiveStates() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4532318 (    0x14) FstSearchLeafDurationBackoff::getBestScoreThisFrame() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453232c (    0xc8) FstSearchLeafDuration::~FstSearchLeafDuration() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45323f4 (    0xcc) FstSearchLeafDuration::~FstSearchLeafDuration() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45324c0 (     0x8) FstSearchLeafDuration::getRequiredVirtMapSize() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45324c8 (     0x8) FstSearchLeafDuration::getNActiveStates() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45324d0 (    0x14) FstSearchLeafDuration::getBestScoreThisFrame() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45324e4 (    0xb0) FstSearchDurationBackoff::~FstSearchDurationBackoff() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4532594 (    0xb4) FstSearchDurationBackoff::~FstSearchDurationBackoff() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4532648 (     0x8) FstSearchDurationBackoff::getRequiredVirtMapSize() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4532650 (     0x8) FstSearchDurationBackoff::getNActiveStates() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4532658 (    0x14) FstSearchDurationBackoff::getBestScoreThisFrame() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453266c (    0xb0) FstSearchDuration::~FstSearchDuration() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453271c (    0xb4) FstSearchDuration::~FstSearchDuration() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45327d0 (     0x8) FstSearchDuration::getRequiredVirtMapSize() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45327d8 (     0x8) FstSearchDuration::getNActiveStates() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45327e0 (    0x14) FstSearchDuration::getBestScoreThisFrame() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45327f4 (    0xc0) FstSearchLeafBackoff::~FstSearchLeafBackoff() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45328b4 (    0xc4) FstSearchLeafBackoff::~FstSearchLeafBackoff() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4532978 (     0x8) FstSearchLeafBackoff::getRequiredVirtMapSize() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4532980 (     0x8) FstSearchLeafBackoff::getNActiveStates() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4532988 (    0x14) FstSearchLeafBackoff::getBestScoreThisFrame() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453299c (    0xc0) FstSearchLeaf::~FstSearchLeaf() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4532a5c (    0xc4) FstSearchLeaf::~FstSearchLeaf() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4532b20 (     0x8) FstSearchLeaf::getRequiredVirtMapSize() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4532b28 (     0x8) FstSearchLeaf::getNActiveStates() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4532b30 (    0x14) FstSearchLeaf::getBestScoreThisFrame() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4532b44 (    0xa8) FstSearchBackoff::~FstSearchBackoff() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4532bec (    0xac) FstSearchBackoff::~FstSearchBackoff() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4532c98 (     0x8) FstSearchBackoff::getRequiredVirtMapSize() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4532ca0 (     0x8) FstSearchBackoff::getNActiveStates() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4532ca8 (    0x14) FstSearchBackoff::getBestScoreThisFrame() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4532cbc (    0xa8) FstSearch::~FstSearch() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4532d64 (    0xac) FstSearch::~FstSearch() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4532e10 (     0x8) FstSearch::getRequiredVirtMapSize() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4532e18 (     0x8) FstSearch::getNActiveStates() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4532e20 (    0x14) FstSearch::getBestScoreThisFrame() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4532e34 (    0x40) DgnArray<MiniFst::Token>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4532e74 (    0x40) DgnArray<MiniFst::Trace>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4532eb4 (    0x80) WordLatticeLC::WordLatticeLC(CWIDAC const&, int, unsigned int, unsigned int, ItemizedScores const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4532f34 (    0x40) DgnPrimFixArray<int>::~DgnPrimFixArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4532f74 (    0x40) DgnArray<FstSearchLateLatticeHashBackoffTrace>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4532fb4 (    0x40) DgnArray<FstSearchLateLatticeHashBackoffTraceToken>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4532ff4 (    0x40) DgnArray<FstSearchLateLatticeHashBackoffActiveToken>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4533034 (    0x94) DgnArray<FstSearchLateLatticeTrace>::reallocElts(unsigned int, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45330c8 (    0x74) HashProbeKEV<unsigned long long, DgnArray<LinkSegment>, WordLattice>::HashProbeKEV(char const*, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453313c (    0x84) HashProbeKEV<unsigned long long, DgnPrimArray<unsigned long long>, LinkSegIds>::initBuckets() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45331c0 (    0x94) DgnArray<FstSearchLateLatticeActiveToken>::DgnArray(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4533254 (    0x94) DgnArray<InputLatticeArc>::reallocElts(unsigned int, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45332e8 (    0x40) DgnArray<FstSearchLateLatticeHashTrace>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4533328 (    0x40) DgnArray<FstSearchLateLatticeHashTraceToken>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4533368 (    0x40) DgnArray<FstSearchLateLatticeHashActiveToken>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45333a8 (    0x40) DgnArray<FstSearchLatticeHashBackoffTrace>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45333e8 (    0x40) DgnArray<FstSearchLatticeHashBackoffTraceToken>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4533428 (    0x40) DgnArray<FstSearchLatticeHashBackoffActiveToken>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4533468 (    0x8c) DgnArray<FstSearchActiveToken>::reallocElts(unsigned int, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45334f4 (    0x98) DgnArray<LinkSegment>::reallocElts(unsigned int, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453358c (    0x40) DgnArray<FstSearchLatticeHashTrace>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45335cc (    0x40) DgnArray<FstSearchLatticeHashTraceToken>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453360c (    0x40) DgnArray<FstSearchLatticeHashActiveToken>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453364c (    0x40) DgnArray<FstSearchDurationHashBackoffTrace>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453368c (    0x40) DgnArray<FstSearchDurationHashBackoffTraceToken>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45336cc (    0x40) DgnArray<FstSearchDurationHashBackoffActiveToken>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453370c (    0x40) DgnArray<FstSearchDurationHashTrace>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453374c (    0x40) DgnArray<FstSearchDurationHashTraceToken>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453378c (    0x40) DgnArray<FstSearchDurationHashActiveToken>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45337cc (    0x40) DgnArray<FstSearchHashBackoffTrace>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453380c (    0x40) DgnArray<FstSearchHashBackoffTraceToken>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453384c (    0x40) DgnArray<FstSearchHashBackoffActiveToken>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453388c (    0x40) DgnArray<FstSearchHashTrace>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45338cc (    0x40) DgnArray<FstSearchHashTraceToken>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453390c (    0x40) DgnArray<FstSearchHashActiveToken>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453394c (    0x40) DgnArray<FstSearchLeafLatticeDurationBackoffTrace>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453398c (    0x40) DgnArray<FstSearchLeafLatticeDurationBackoffTraceToken>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45339cc (    0x40) DgnArray<FstSearchLeafLatticeDurationBackoffActiveToken>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4533a0c (    0x8c) DgnArray<ParamValue>::reallocElts(unsigned int, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4533a98 (    0x40) DgnArray<FstSearchLeafLatticeDurationTrace>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4533ad8 (    0x40) DgnArray<FstSearchLeafLatticeDurationTraceToken>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4533b18 (    0x40) DgnArray<FstSearchLeafLatticeDurationActiveToken>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4533b58 (    0x40) DgnArray<FstSearchLeafLatticeBackoffTrace>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4533b98 (    0x40) DgnArray<FstSearchLeafLatticeBackoffTraceToken>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4533bd8 (    0x40) DgnArray<FstSearchLeafLatticeBackoffActiveToken>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4533c18 (    0x40) DgnArray<FstSearchLeafLatticeTrace>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4533c58 (    0x40) DgnArray<FstSearchLeafLatticeTraceToken>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4533c98 (    0x40) DgnArray<FstSearchLeafLatticeActiveToken>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4533cd8 (    0x40) DgnArray<FstSearchLatticeDurationBackoffTrace>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4533d18 (    0x40) DgnArray<FstSearchLatticeDurationBackoffTraceToken>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4533d58 (    0x40) DgnArray<FstSearchLatticeDurationBackoffActiveToken>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4533d98 (    0x40) DgnArray<FstSearchLatticeDurationTrace>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4533dd8 (    0x40) DgnArray<FstSearchLatticeDurationTraceToken>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4533e18 (    0x40) DgnArray<FstSearchLatticeDurationActiveToken>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4533e58 (    0x40) DgnArray<FstSearchLateLatticeBackoffTrace>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4533e98 (    0x40) DgnArray<FstSearchLateLatticeBackoffTraceToken>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4533ed8 (    0x40) DgnArray<FstSearchLateLatticeBackoffActiveToken>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4533f18 (    0x40) DgnArray<FstSearchLateLatticeTrace>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4533f58 (    0x40) DgnArray<FstSearchLateLatticeTraceToken>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4533f98 (    0x40) DgnArray<FstSearchLateLatticeActiveToken>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4533fd8 (    0x40) DgnArray<FstSearchLatticeBackoffTrace>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4534018 (    0x40) DgnArray<FstSearchLatticeBackoffTraceToken>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4534058 (    0x40) DgnArray<FstSearchLatticeBackoffActiveToken>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4534098 (    0x40) DgnArray<FstSearchLatticeTrace>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45340d8 (    0x40) DgnArray<FstSearchLatticeTraceToken>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4534118 (    0x40) DgnArray<FstSearchLatticeActiveToken>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4534158 (    0x40) DgnArray<FstSearchLeafDurationBackoffTrace>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4534198 (    0x40) DgnArray<FstSearchLeafDurationBackoffTraceToken>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45341d8 (    0x40) DgnArray<FstSearchLeafDurationBackoffActiveToken>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4534218 (    0x40) DgnArray<FstSearchLeafDurationTrace>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4534258 (    0x40) DgnArray<FstSearchLeafDurationTraceToken>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4534298 (    0x40) DgnArray<FstSearchLeafDurationActiveToken>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45342d8 (    0x40) DgnArray<FstSearchDurationBackoffTrace>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4534318 (    0x40) DgnArray<FstSearchDurationBackoffTraceToken>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4534358 (    0x40) DgnArray<FstSearchDurationBackoffActiveToken>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4534398 (    0x40) DgnArray<FstSearchDurationTrace>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45343d8 (    0x40) DgnArray<FstSearchDurationTraceToken>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4534418 (    0x40) DgnArray<FstSearchDurationActiveToken>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4534458 (    0x40) DgnArray<FstSearchLeafBackoffTrace>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4534498 (    0x40) DgnArray<FstSearchLeafBackoffTraceToken>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45344d8 (    0x40) DgnArray<FstSearchLeafBackoffActiveToken>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4534518 (    0x40) DgnArray<FstSearchLeafTrace>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4534558 (    0x40) DgnArray<FstSearchLeafTraceToken>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4534598 (    0x40) DgnArray<FstSearchLeafActiveToken>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45345d8 (    0x40) DgnArray<FstSearchBackoffTrace>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4534618 (    0x40) DgnArray<FstSearchBackoffTraceToken>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4534658 (    0x40) DgnArray<FstSearchBackoffActiveToken>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4534698 (    0x40) DgnArray<FstSearchTrace>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45346d8 (    0x40) DgnArray<FstSearchTraceToken>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4534718 (    0x40) DgnArray<FstSearchActiveToken>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4534758 (    0xe0) MrecInitLibrary_mrecutil() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4534838 (     0x4) MrecInitLibrarySet_throughMrecutil() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453483c (    0x80) MrecInitLibrary_recogctl() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45348bc (    0x30) MrecInitLibrarySet_throughRecogctl() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45348ec (    0x28) MrecInitLibrarySet_throughNeuralN() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4534914 (     0x4) MrecInitModule_filechan_channel() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4534918 (   0x130) verifyLexiconHandle(TPLexiconHandle_fake**, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4534a48 (    0x50) TBaseRegistry<TLexicon*>::find(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4534a98 (   0x5c0) TPLexicon_Open [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4535058 (   0x120) void verifyHandleArgument<SDhVoc_fake**>(SDhVoc_fake**, bool, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4535178 (   0x4b4) TPLexicon_Close [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453562c (   0x4d8) TPLexicon_GetInfo [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4535b04 (   0x864) TPLexicon_GetHeadClone [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4536368 (    0x90) TLocaleInfo::TLocaleInfo(wchar_t const*, wchar_t const*, TMultiByteCodePage, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45363f8 (    0x5c) TBuffer<char>::assign(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4536454 (     0x4) MrecInitModule_genexcep_mrecutil() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4536458 (   0x128) DgnException::DgnException(unsigned int, char const*, int, char const*, int, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4536580 (     0x4) DgnException::DgnException(unsigned int, char const*, int, char const*, int, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4536584 (    0x5c) DgnException::~DgnException() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45365e0 (     0x4) DgnException::~DgnException() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45365e4 (    0x28) DgnException::~DgnException() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453660c (    0x34) DgnFileIOException::DgnFileIOException(unsigned int, char const*, int, char const*, int, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4536640 (     0x4) DgnFileIOException::~DgnFileIOException() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4536644 (    0x28) DgnFileIOException::~DgnFileIOException() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453666c (     0x4) MrecInitModule_encrypt_dfutil() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4536670 (    0xa4) EncryptBuffer(unsigned char*, unsigned int, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4536714 (    0xa4) DecryptBuffer(unsigned char*, unsigned int, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45367b8 (    0x9c) MrecInitModule_active_kernel() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4536854 (     0x4) unpackEndCallBack(void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4536858 (    0xec) ActiveWordCoartN::unpackEndFromCallBack() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4536944 (     0x4) unpackMidCallBack(void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4536948 (    0xa0) ActiveWordCoartN::unpackMidFromCallBack() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45369e8 (    0x40) ActiveWordMgr::~ActiveWordMgr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4536a28 (    0x4c) ActiveWordMgr::newActiveWordNonAcoustic(CWIDAC const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4536a74 (    0x84) ActiveWordMgr::newActiveWordSilence(CWIDAC const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4536af8 (   0x260) ActiveWordMgr::newActiveWord(CWIDAC const&, int, B_NodeSkippingType, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4536d58 (    0x4c) Constraint::getNextPhones(CWIDAC const&, Direction, PhnIndexSet*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4536da4 (    0x64) void DgnDelete<ActiveWord>(ActiveWord*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4536e08 (   0x360) ActiveWordMgr::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4537168 (    0xec) ActiveWord::ActiveWord(ActiveWordMgr*, HmmNet*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4537254 (    0x50) ActiveWord::~ActiveWord() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45372a4 (    0x60) void DgnDelete<MergedStateTransition>(MergedStateTransition*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4537304 (     0x4) ActiveWord::~ActiveWord() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4537308 (     0x4) ActiveWord::~ActiveWord() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453730c (    0xdc) ActiveWord::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45373e8 (    0x2c) ActiveWordNoCoartBase::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4537414 (    0x64) ActiveWordNonAcoustic::ActiveWordNonAcoustic(ActiveWordMgr*, HmmNet*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4537478 (     0x4) ActiveWordNonAcoustic::~ActiveWordNonAcoustic() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453747c (    0x28) ActiveWordNonAcoustic::~ActiveWordNonAcoustic() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45374a4 (    0x64) ActiveWordSilence::ActiveWordSilence(ActiveWordMgr*, HmmNet*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4537508 (     0x4) ActiveWordSilence::~ActiveWordSilence() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453750c (    0x28) ActiveWordSilence::~ActiveWordSilence() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4537534 (   0x128) ActiveWordNoCoart::ActiveWordNoCoart(ActiveWordMgr*, HmmNet*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453765c (     0x4) ActiveWordNoCoart::~ActiveWordNoCoart() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4537660 (    0x28) ActiveWordNoCoart::~ActiveWordNoCoart() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4537688 (    0x3c) ActiveWordNoCoartBase::seedInPort(unsigned short, int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45376c4 (    0xd8) ActiveWordCoartBase::ActiveWordCoartBase(ActiveWordMgr*, HmmNet*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453779c (    0x54) ActiveWordCoartBase::~ActiveWordCoartBase() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45377f0 (     0x4) ActiveWordCoartBase::~ActiveWordCoartBase() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45377f4 (     0x4) ActiveWordCoartBase::~ActiveWordCoartBase() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45377f8 (    0x84) ActiveWordCoartBase::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453787c (   0x218) ActiveWordCoartBase::getEndPics(unsigned short, DgnArray<Pic>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4537a94 (    0xa8) ActiveWordCoartBase::seedInPort(unsigned short, int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4537b3c (    0x54) ActiveWordCoart1::~ActiveWordCoart1() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4537b90 (    0x58) ActiveWordCoart1::~ActiveWordCoart1() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4537be8 (     0x4) ActiveWordCoart1::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4537bec (    0xc4) ActiveWordCoart1::addInPort(unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4537cb0 (    0x9c) HmmNet::newInPort() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4537d4c (   0x14c) ActiveWordCoartN::unpackMid() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4537e98 (   0x2f4) ActiveWordCoartN::ActiveWordCoartN(ActiveWordMgr*, HmmNet*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453818c (   0x134) ActiveWordCoartN::addInPort(unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45382c0 (    0x54) ActiveWordCoartN::~ActiveWordCoartN() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4538314 (    0x58) ActiveWordCoartN::~ActiveWordCoartN() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453836c (    0x4c) ActiveWordCoartN::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45383b8 (    0x64) ActiveWordEmbeddedFst::ActiveWordEmbeddedFst(ActiveWordMgr*, HmmNet*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453841c (     0x4) ActiveWordEmbeddedFst::ActiveWordEmbeddedFst(ActiveWordMgr*, HmmNet*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4538420 (     0x4) ActiveWordEmbeddedFst::~ActiveWordEmbeddedFst() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4538424 (    0x28) ActiveWordEmbeddedFst::~ActiveWordEmbeddedFst() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453844c (    0x30) ActiveWordEmbeddedFst::seedInPort(unsigned short, int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453847c (    0xf4) Active::Active(B_RecogMode, Direction, B_NetType, PicMgr const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4538570 (     0x4) HashKEV<CWIDAC, CWIDAC, CWIDAC>::~HashKEV() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4538574 (     0x4) Hash<CWIDAC, CWIDAC, CWIDAC, ActiveWord*>::~Hash() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4538578 (     0x4) Active::Active(B_RecogMode, Direction, B_NetType, PicMgr const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453857c (   0x638) Active::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4538bb4 (    0x7c) Active::removeActiveWord(ActiveWord*, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4538c30 (    0x50) Hash<CWIDAC, CWIDAC, CWIDAC, ActiveWord*>::remove(CWIDAC const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4538c80 (    0x74) Active::prune() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4538cf4 (    0x94) Active::pruneTimeConstrained(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4538d88 (    0x4c) Active::newActiveWordNonAcoustic(CWIDAC const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4538dd4 (    0xc4) Active::addActiveWord(CWIDAC const&, ActiveWord*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4538e98 (    0x4c) Active::newActiveWordSilence(CWIDAC const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4538ee4 (    0x4c) Active::newActiveWord(CWIDAC const&, int, B_NodeSkippingType, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4538f30 (   0x100) Hash<CWIDAC, CWIDAC, CWIDAC, ActiveWord*>::add(CWIDAC const&, ActiveWord* const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4539030 (    0xf4) HashKEV<CWIDAC, CWIDAC, CWIDAC>::add(CWIDAC const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4539124 (     0x4) Active::addActiveWordFst(CWIDAC const&, ActiveWord*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4539128 (   0x134) Active::scoreActiveWords(int, int, int, int, int, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453925c (    0xe4) Active::thresholdActiveWords(int, int, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4539340 (     0x4) Active::latticeSegmentationDumpScoreNets() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4539344 (    0x2c) Active::beginActiveSyncRecog(DgnPrimArray<short> const*, PelScoreCache*, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4539370 (    0xac) Active::endActiveSyncRecog() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453941c (    0x94) Hash<CWIDAC, CWIDAC, CWIDAC, ActiveWord*>::removeAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45394b0 (    0x9c) Active::estimateActivePelsThisFrame(BitArray*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453954c (    0x30) ActiveWord::scoreActiveWord(int, int, int, int, int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453957c (    0x30) ActiveWord::setEmbeddedFstSeedingTime(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45395ac (    0x30) ActiveWordCoartBase::scoreActiveWord(int, int, int, int, int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45395dc (    0x40) DgnArray<PredState>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453961c (    0x40) DgnArray<HiddenState>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453965c (    0x98) HmmNet::thresholdNet(int, int, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45396f4 (    0x40) DgnArray<Pic>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4539734 (   0x134) Hash<CWIDAC, CWIDAC, CWIDAC, ActiveWord*>::Hash(char const*, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4539868 (    0x28) Hash<CWIDAC, CWIDAC, CWIDAC, ActiveWord*>::~Hash() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4539890 (    0x40) DgnIFixArray<BucketLink<CWIDAC, ActiveWord*>*>::~DgnIFixArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45398d0 (   0x118) HashKEV<CWIDAC, CWIDAC, CWIDAC>::HashKEV(char const*, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45399e8 (    0x28) HashKEV<CWIDAC, CWIDAC, CWIDAC>::~HashKEV() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4539a10 (    0x40) DgnIFixArray<BucketLinkKEV<CWIDAC>*>::~DgnIFixArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4539a50 (    0x74) Hash<CWIDAC, CWIDAC, CWIDAC, ActiveWord*>::~Hash() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4539ac4 (    0x74) HashKEV<CWIDAC, CWIDAC, CWIDAC>::~HashKEV() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4539b38 (    0x64) Hash<CWIDAC, CWIDAC, CWIDAC, ActiveWord*>::removeBucket(BucketLink<CWIDAC, ActiveWord*>**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4539b9c (   0x110) Hash<CWIDAC, CWIDAC, CWIDAC, ActiveWord*>::upSize(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4539cac (   0x110) HashKEV<CWIDAC, CWIDAC, CWIDAC>::upSize(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4539dbc (     0x4) MrecInitModule_format_frame() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4539dc0 (    0x24) AcousticFormat::AcousticFormat(AcousticFormat const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4539de4 (    0x2c) AcousticFormat::getMicrosecPerFrame() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4539e10 (    0x20) sizeObject(AcousticFormat const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4539e30 (    0x9c) MrecInitModule_user_user() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4539ecc (   0x19c) User::~User() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453a068 (    0x34) void DgnDelete<MulTable>(MulTable*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453a09c (    0x48) void DgnDelete<Imelda>(Imelda*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453a0e4 (    0x34) void DgnDelete<VarClassMgr>(VarClassMgr*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453a118 (    0x34) void DgnDelete<FmpeMgr>(FmpeMgr*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453a14c (    0x50) void DgnDelete<OnlineConstrainedTransAccMgr>(OnlineConstrainedTransAccMgr*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453a19c (    0x34) void DgnDelete<PicMgr>(PicMgr*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453a1d0 (    0x34) void DgnDelete<PelMgr>(PelMgr*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453a204 (    0x34) void DgnDelete<GenoneClassTree>(GenoneClassTree*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453a238 (    0x34) void DgnDelete<SigProcDescriptor>(SigProcDescriptor*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453a26c (    0x34) void DgnDelete<Lookahead>(Lookahead*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453a2a0 (    0x34) void DgnDelete<AdaptStatsHistory>(AdaptStatsHistory*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453a2d4 (    0x34) void DgnDelete<NeuralNet>(NeuralNet*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453a308 (     0x4) User::~User() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453a30c (  0x1388) User::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453b694 (   0x100) unsigned long sizeObject<SigProcDescriptor>(DgnArray<SigProcDescriptor> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453b794 (   0x108) unsigned long sizeObject<BandwidthTransform>(DgnArray<BandwidthTransform> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453b89c (   0x450) User::saveUser(FileSpec const&, B_SaveResultCode*, B_SaveOverrideFormatType, bool, ProgressCallbackHandler*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453bcec (    0xb0) User::saveChecksums(DFile*, DFileChecksums*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453bd9c (   0x204) User::newPelScorer(bool, double, bool, double, char const*, char const*, int, bool, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453bfa0 (    0x6c) User::decrementAdapterCount() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453c00c (    0x68) DgnArray<SigProcDescriptor>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453c074 (    0x68) DgnArray<BandwidthTransform>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453c0dc (    0x40) VarClassMgr::~VarClassMgr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453c11c (    0x8c) PicMgr::~PicMgr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453c1a8 (    0x88) DgnIOwnArray<DgnSharedMemStream*>::DgnIOwnArray(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453c230 (    0x64) DgnIOwnArray<DgnSharedMemStream*>::destructAt(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453c294 (    0x6c) DgnIOwnArray<DgnSharedMemStream*>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453c300 (    0x44) TAllocator::clear() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453c344 (    0x10) TAllocator::TAllocator(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453c354 (    0x8c) TAllocator::allocate(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453c3e0 (     0x4) MrecInitModule_copcache_kernel() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453c3e4 (  0x1060) StartupConfidenceParamSpecMgr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453d444 (    0xb0) ConfidenceParamSet::ConfidenceParamSet(char const*, B_ParamSetType, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453d4f4 (     0x4) ConfidenceParamSet::ConfidenceParamSet(char const*, B_ParamSetType, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453d4f8 (   0x1b4) ConfidenceParamSet::ConfidenceParamSet(ConfidenceParamSet const&, char const*, B_ParamSetType, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453d6ac (     0x4) ConfidenceParamSet::ConfidenceParamSet(ConfidenceParamSet const&, char const*, B_ParamSetType, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453d6b0 (   0x700) ConfidenceParamSet::setDefaults() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453ddb0 (    0x64) ConfidenceParamSet::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453de14 (   0x7cc) ConfidenceParamSet::getBoolParameter(unsigned short, B_ParamQueryMode) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453e5e0 (   0x124) (null) [FUNC, FunctionStarts] 
                0x00000001b453e704 (   0x734) ConfidenceParamSet::getIntParameter(unsigned short, B_ParamQueryMode) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b453ee38 (   0x124) (null) [FUNC, FunctionStarts] 
                0x00000001b453ef5c (  0x203c) ConfidenceParamSet::getDoubleParameter(unsigned short, B_ParamQueryMode) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4540f98 (   0x124) (null) [FUNC, FunctionStarts] 
                0x00000001b45410bc (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45410cc (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45410dc (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45410ec (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45410fc (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b454110c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b454111c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b454112c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b454113c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b454114c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b454115c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b454116c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b454117c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b454118c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b454119c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45411ac (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45411bc (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45411cc (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45411dc (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45411ec (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45411fc (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b454120c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b454121c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b454122c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b454123c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b454124c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b454125c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b454126c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b454127c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b454128c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b454129c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45412ac (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45412bc (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45412cc (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45412dc (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45412ec (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45412fc (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b454130c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b454131c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b454132c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b454133c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b454134c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b454135c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b454136c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b454137c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b454138c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b454139c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45413ac (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45413bc (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45413cc (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45413dc (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45413ec (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45413fc (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b454140c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b454141c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b454142c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b454143c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b454144c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b454145c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b454146c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b454147c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b454148c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b454149c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45414ac (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45414bc (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45414cc (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45414dc (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45414ec (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45414fc (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b454150c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b454151c (   0x734) ConfidenceParamSet::getStringParameter(unsigned short, B_ParamQueryMode) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4541c50 (   0x124) (null) [FUNC, FunctionStarts] 
                0x00000001b4541d74 (   0x720) ConfidenceParamSet::getEnumParameter(unsigned short, B_ParamQueryMode) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4542494 (   0x124) (null) [FUNC, FunctionStarts] 
                0x00000001b45425b8 (   0x774) ConfidenceParamSet::setBoolParameter(unsigned short, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4542d2c (   0x124) (null) [FUNC, FunctionStarts] 
                0x00000001b4542e50 (   0x740) ConfidenceParamSet::setIntParameter(unsigned short, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4543590 (   0x124) (null) [FUNC, FunctionStarts] 
                0x00000001b45436b4 (  0x2508) ConfidenceParamSet::setDoubleParameter(unsigned short, double) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4545bbc (   0x124) (null) [FUNC, FunctionStarts] 
                0x00000001b4545ce0 (   0x740) ConfidenceParamSet::setStringParameter(unsigned short, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4546420 (   0x124) (null) [FUNC, FunctionStarts] 
                0x00000001b4546544 (   0x734) ConfidenceParamSet::setEnumParameter(unsigned short, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4546c78 (   0x124) (null) [FUNC, FunctionStarts] 
                0x00000001b4546d9c (    0x44) ConfidenceParamSet::~ConfidenceParamSet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4546de0 (    0x54) ConfidenceParamSet::~ConfidenceParamSet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4546e34 (   0x6bc) TRespellManager::TRespellManager(TInputStream&, TLexicon*, TTokenizerParamManager const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45474f0 (   0x984) TRespellManager::addRespellObject(TFileObject const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4547e74 (    0x24) sortRespellMap(TRespellManager::TRespellMap const&, TRespellManager::TRespellMap const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4547e98 (    0x38) TRespellManager::freeMemory() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4547ed0 (     0x4) TRespellManager::TRespellManager(TInputStream&, TLexicon*, TTokenizerParamManager const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4547ed4 (    0x54) TRespellManager::~TRespellManager() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4547f28 (     0x4) TRespellManager::~TRespellManager() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4547f2c (    0xd4) TRespellManager::find(wchar_t const*, unsigned long, unsigned long) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4548000 (   0xcc0) TRespellManager::addWords(TVertex*, TGraph*, TSegmenter*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4548cc0 (    0x3c) std::__1::vector<TRegExpMatch, std::__1::allocator<TRegExpMatch>>::resize(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4548cfc (   0x1d0) TRespellManager::expandWord(TGraph*, TEdge*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4548ecc (   0x578) void std::__1::__introsort<std::__1::_ClassicAlgPolicy, bool (*&)(TRespellManager::TRespellMap const&, TRespellManager::TRespellMap const&), TRespellManager::TRespellMap*>(TRespellManager::TRespellMap*, TRespellManager::TRespellMap*, bool (*&)(TRespellManager::TRespellMap const&, TRespellManager::TRespellMap const&), std::__1::iterator_traits<TRespellManager::TRespellMap*>::difference_type) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4549444 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001b454945c (    0xf8) void std::__1::__insertion_sort_3[abi:v160006]<std::__1::_ClassicAlgPolicy, bool (*&)(TRespellManager::TRespellMap const&, TRespellManager::TRespellMap const&), TRespellManager::TRespellMap*>(TRespellManager::TRespellMap*, TRespellManager::TRespellMap*, bool (*&)(TRespellManager::TRespellMap const&, TRespellManager::TRespellMap const&)) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4549554 (   0x150) unsigned int std::__1::__sort3[abi:v160006]<std::__1::_ClassicAlgPolicy, bool (*&)(TRespellManager::TRespellMap const&, TRespellManager::TRespellMap const&), TRespellManager::TRespellMap*>(TRespellManager::TRespellMap*, TRespellManager::TRespellMap*, TRespellManager::TRespellMap*, bool (*&)(TRespellManager::TRespellMap const&, TRespellManager::TRespellMap const&)) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45496a4 (   0x1f8) bool std::__1::__insertion_sort_incomplete<bool (*&)(TRespellManager::TRespellMap const&, TRespellManager::TRespellMap const&), TRespellManager::TRespellMap*>(TRespellManager::TRespellMap*, TRespellManager::TRespellMap*, bool (*&)(TRespellManager::TRespellMap const&, TRespellManager::TRespellMap const&)) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b454989c (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001b45498b4 (   0x108) unsigned int std::__1::__sort4[abi:v160006]<std::__1::_ClassicAlgPolicy, bool (*&)(TRespellManager::TRespellMap const&, TRespellManager::TRespellMap const&), TRespellManager::TRespellMap*>(TRespellManager::TRespellMap*, TRespellManager::TRespellMap*, TRespellManager::TRespellMap*, TRespellManager::TRespellMap*, bool (*&)(TRespellManager::TRespellMap const&, TRespellManager::TRespellMap const&)) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45499bc (   0x248) TRespellManager::TRespellMap* std::__1::__partial_sort_impl[abi:v160006]<std::__1::_ClassicAlgPolicy, bool (*&)(TRespellManager::TRespellMap const&, TRespellManager::TRespellMap const&), TRespellManager::TRespellMap*, TRespellManager::TRespellMap*>(TRespellManager::TRespellMap*, TRespellManager::TRespellMap*, TRespellManager::TRespellMap*, bool (*&)(TRespellManager::TRespellMap const&, TRespellManager::TRespellMap const&)) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4549c04 (   0x168) void std::__1::__sift_down[abi:v160006]<std::__1::_ClassicAlgPolicy, bool (*&)(TRespellManager::TRespellMap const&, TRespellManager::TRespellMap const&), TRespellManager::TRespellMap*>(TRespellManager::TRespellMap*, bool (*&)(TRespellManager::TRespellMap const&, TRespellManager::TRespellMap const&), std::__1::iterator_traits<TRespellManager::TRespellMap*>::difference_type, TRespellManager::TRespellMap*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4549d6c (    0xd0) void std::__1::__sift_up[abi:v160006]<std::__1::_ClassicAlgPolicy, bool (*&)(TRespellManager::TRespellMap const&, TRespellManager::TRespellMap const&), TRespellManager::TRespellMap*>(TRespellManager::TRespellMap*, TRespellManager::TRespellMap*, bool (*&)(TRespellManager::TRespellMap const&, TRespellManager::TRespellMap const&), std::__1::iterator_traits<TRespellManager::TRespellMap*>::difference_type) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4549e3c (   0x150) unsigned int std::__1::__sort5<bool (*&)(TRespellManager::TRespellMap const&, TRespellManager::TRespellMap const&), TRespellManager::TRespellMap*>(TRespellManager::TRespellMap*, TRespellManager::TRespellMap*, TRespellManager::TRespellMap*, TRespellManager::TRespellMap*, TRespellManager::TRespellMap*, bool (*&)(TRespellManager::TRespellMap const&, TRespellManager::TRespellMap const&)) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4549f8c (    0x18) std::__1::vector<TRespellManager::TRespellMap, std::__1::allocator<TRespellManager::TRespellMap>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4549fa4 (    0x48) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<TRespellManager::TRespellMap>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<TRespellManager::TRespellMap>>(std::__1::allocator<TRespellManager::TRespellMap>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4549fec (    0x18) std::__1::vector<TFileObject const*, std::__1::allocator<TFileObject const*>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b454a004 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<TFileObject const*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<TFileObject const*>>(std::__1::allocator<TFileObject const*>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b454a03c (   0x19c) std::__1::vector<TRegExpMatch, std::__1::allocator<TRegExpMatch>>::__append(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b454a1d8 (    0x18) std::__1::vector<TRegExpMatch, std::__1::allocator<TRegExpMatch>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b454a1f0 (    0x48) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<TRegExpMatch>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<TRegExpMatch>>(std::__1::allocator<TRegExpMatch>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b454a238 (    0x48) MrecInitLibrary_channel() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b454a280 (    0x2c) MrecInitLibrarySet_throughChannel() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b454a2ac (     0x4) MrecInitModule_phonerec_prefilt() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b454a2b0 (    0x20) getCwidForIndex(unsigned short, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b454a2d0 (    0x20) getIndexForCwid(unsigned short, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b454a2f0 (    0x20) TreePhoneRec::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b454a310 (    0x18) TreePhoneRec::setSingleEndingWord(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b454a328 (    0x18) TreePhoneRec::setMultipleEndingWords(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b454a340 (  0x10e0) TTokenizer::TTokenizer(TDataManager const*, TDataManager*, TLexicon*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b454b420 (   0x1c0) TTokenizer::freeMemory() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b454b5e0 (    0x6c) TRegisterable<TTokenizer>::~TRegisterable() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b454b64c (     0x4) TTokenizer::TTokenizer(TDataManager const*, TDataManager*, TLexicon*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b454b650 (    0x68) TTokenizer::~TTokenizer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b454b6b8 (     0x4) TTokenizer::~TTokenizer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b454b6bc (    0x28) TTokenizer::~TTokenizer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b454b6e4 (   0x564) TTokenizer::save(TDataManager*, TDataManager*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b454bc48 (   0xcc0) TTokenizer::tokenize(char const*, char const*, char const*, unsigned long, TResultMaker*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b454c908 (   0x344) TTokenizer::addWords(TVertex*, TGraph&, TSegmenter&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b454cc4c (   0xa24) TTokenizer::deleteBadPaths(TGraph&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b454d670 (   0x838) TTokenizer::deleteExpensivePaths(TGraph&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b454dea8 (   0x17c) TTokenizer::addClones(TGraph&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b454e024 (   0x18c) TTokenizer::chooseBestPath(TGraph&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b454e1b0 (    0xe8) TTokenizer::registerResult(TTokenizerResult*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b454e298 (    0x2c) std::__1::vector<TLexiconMatch, std::__1::allocator<TLexiconMatch>>::resize(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b454e2c4 (    0x60) sortPruningParams(TIntParam const*, TIntParam const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b454e324 (   0x364) computeEdgeStat(TEdge const*, TTokenizerParamManager const*, std::__1::vector<TIntParam const*, std::__1::allocator<TIntParam const*>> const&, TEdgeStat&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b454e688 (    0x6c) TDecodeLink::computeHistory(TDecodeLink::THistory&, unsigned long) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b454e6f4 (   0x140) THashBase<std::__1::pair<TDecodeLink::THistory const, TDecodeLink const*>, THashMapCompare<std::__1::pair<TDecodeLink::THistory const, TDecodeLink const*>, std::__1::equal_to<TDecodeLink::THistory>>, THashMapFunction<std::__1::pair<TDecodeLink::THistory const, TDecodeLink const*>, THash<TDecodeLink::THistory>>>::insert(std::__1::pair<TDecodeLink::THistory const, TDecodeLink const*> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b454e834 (    0xa8) std::__1::vector<TDecodeLink const*, std::__1::allocator<TDecodeLink const*>>::reserve(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b454e8dc (     0x4) THashMap<TDecodeLink::THistory, TDecodeLink const*, THash<TDecodeLink::THistory>, std::__1::equal_to<TDecodeLink::THistory>>::~THashMap() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b454e8e0 (    0x3c) TTokenizer::getResultInfo(unsigned long, TPTokenResultInfo*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b454e91c (    0xa0) TTokenizer::release(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b454e9bc (   0x118) TTokenizer::getResultData(unsigned long, TPTokenState*, TPTokenTrans*, char*, unsigned int*, unsigned int*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b454ead4 (    0x18) std::__1::vector<TTokenizerResult*, std::__1::allocator<TTokenizerResult*>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b454eaec (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<TTokenizerResult*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<TTokenizerResult*>>(std::__1::allocator<TTokenizerResult*>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b454eb24 (    0x48) TResGraphMaker::~TResGraphMaker() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b454eb6c (    0x50) THashBase<std::__1::pair<TDecodeLink::THistory const, TDecodeLink const*>, THashMapCompare<std::__1::pair<TDecodeLink::THistory const, TDecodeLink const*>, std::__1::equal_to<TDecodeLink::THistory>>, THashMapFunction<std::__1::pair<TDecodeLink::THistory const, TDecodeLink const*>, THash<TDecodeLink::THistory>>>::~THashBase() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b454ebbc (     0x4) THashBase<std::__1::pair<TDecodeLink::THistory const, TDecodeLink const*>, THashMapCompare<std::__1::pair<TDecodeLink::THistory const, TDecodeLink const*>, std::__1::equal_to<TDecodeLink::THistory>>, THashMapFunction<std::__1::pair<TDecodeLink::THistory const, TDecodeLink const*>, THash<TDecodeLink::THistory>>>::~THashBase() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b454ebc0 (    0x28) THashBase<std::__1::pair<TDecodeLink::THistory const, TDecodeLink const*>, THashMapCompare<std::__1::pair<TDecodeLink::THistory const, TDecodeLink const*>, std::__1::equal_to<TDecodeLink::THistory>>, THashMapFunction<std::__1::pair<TDecodeLink::THistory const, TDecodeLink const*>, THash<TDecodeLink::THistory>>>::~THashBase() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b454ebe8 (     0x4) TRegisterable<TTokenizer>::~TRegisterable() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b454ebec (    0x28) TRegisterable<TTokenizer>::~TRegisterable() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b454ec14 (   0x108) TBaseRegistry<TTokenizer*>::registerInstance(TTokenizer*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b454ed1c (    0x18) std::__1::vector<TTokenizer*, std::__1::allocator<TTokenizer*>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b454ed34 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<TTokenizer*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<TTokenizer*>>(std::__1::allocator<TTokenizer*>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b454ed6c (   0x140) std::__1::vector<TLexiconMatch, std::__1::allocator<TLexiconMatch>>::__append(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b454eeac (    0x88) std::__1::vector<TEdgeStat, std::__1::allocator<TEdgeStat>>::vector(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b454ef34 (    0x58) std::__1::vector<TEdgeStat, std::__1::allocator<TEdgeStat>>::__vallocate[abi:v160006](unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b454ef8c (    0x18) std::__1::vector<TEdgeStat, std::__1::allocator<TEdgeStat>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b454efa4 (    0x4c) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<TEdgeStat>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<TEdgeStat>>(std::__1::allocator<TEdgeStat>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b454eff0 (    0x18) std::__1::vector<TIntParam const*, std::__1::allocator<TIntParam const*>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b454f008 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<TIntParam const*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<TIntParam const*>>(std::__1::allocator<TIntParam const*>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b454f040 (   0x470) void std::__1::__introsort<std::__1::_ClassicAlgPolicy, bool (*&)(TIntParam const*, TIntParam const*), TIntParam const**>(TIntParam const**, TIntParam const**, bool (*&)(TIntParam const*, TIntParam const*), std::__1::iterator_traits<TIntParam const**>::difference_type) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b454f4b0 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001b454f4c8 (    0xd8) void std::__1::__insertion_sort_3[abi:v160006]<std::__1::_ClassicAlgPolicy, bool (*&)(TIntParam const*, TIntParam const*), TIntParam const**>(TIntParam const**, TIntParam const**, bool (*&)(TIntParam const*, TIntParam const*)) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b454f5a0 (    0xf0) unsigned int std::__1::__sort3[abi:v160006]<std::__1::_ClassicAlgPolicy, bool (*&)(TIntParam const*, TIntParam const*), TIntParam const**>(TIntParam const**, TIntParam const**, TIntParam const**, bool (*&)(TIntParam const*, TIntParam const*)) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b454f690 (   0x1b0) bool std::__1::__insertion_sort_incomplete<bool (*&)(TIntParam const*, TIntParam const*), TIntParam const**>(TIntParam const**, TIntParam const**, bool (*&)(TIntParam const*, TIntParam const*)) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b454f840 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001b454f858 (    0xd0) unsigned int std::__1::__sort4[abi:v160006]<std::__1::_ClassicAlgPolicy, bool (*&)(TIntParam const*, TIntParam const*), TIntParam const**>(TIntParam const**, TIntParam const**, TIntParam const**, TIntParam const**, bool (*&)(TIntParam const*, TIntParam const*)) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b454f928 (   0x158) TIntParam const** std::__1::__partial_sort_impl[abi:v160006]<std::__1::_ClassicAlgPolicy, bool (*&)(TIntParam const*, TIntParam const*), TIntParam const**, TIntParam const**>(TIntParam const**, TIntParam const**, TIntParam const**, bool (*&)(TIntParam const*, TIntParam const*)) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b454fa80 (   0x124) void std::__1::__sift_down[abi:v160006]<std::__1::_ClassicAlgPolicy, bool (*&)(TIntParam const*, TIntParam const*), TIntParam const**>(TIntParam const**, bool (*&)(TIntParam const*, TIntParam const*), std::__1::iterator_traits<TIntParam const**>::difference_type, TIntParam const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b454fba4 (    0xa8) TIntParam const** std::__1::__floyd_sift_down[abi:v160006]<std::__1::_ClassicAlgPolicy, bool (*&)(TIntParam const*, TIntParam const*), TIntParam const**>(TIntParam const**, bool (*&)(TIntParam const*, TIntParam const*), std::__1::iterator_traits<TIntParam const**>::difference_type) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b454fc4c (    0xa0) void std::__1::__sift_up[abi:v160006]<std::__1::_ClassicAlgPolicy, bool (*&)(TIntParam const*, TIntParam const*), TIntParam const**>(TIntParam const**, TIntParam const**, bool (*&)(TIntParam const*, TIntParam const*), std::__1::iterator_traits<TIntParam const**>::difference_type) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b454fcec (   0x108) unsigned int std::__1::__sort5<bool (*&)(TIntParam const*, TIntParam const*), TIntParam const**>(TIntParam const**, TIntParam const**, TIntParam const**, TIntParam const**, TIntParam const**, bool (*&)(TIntParam const*, TIntParam const*)) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b454fdf4 (    0x18) std::__1::vector<TDecodeLink const*, std::__1::allocator<TDecodeLink const*>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b454fe0c (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<TDecodeLink const*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<TDecodeLink const*>>(std::__1::allocator<TDecodeLink const*>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b454fe44 (    0x28) THashMap<TDecodeLink::THistory, TDecodeLink const*, THash<TDecodeLink::THistory>, std::__1::equal_to<TDecodeLink::THistory>>::~THashMap() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b454fe6c (    0x90) THashBase<std::__1::pair<TDecodeLink::THistory const, TDecodeLink const*>, THashMapCompare<std::__1::pair<TDecodeLink::THistory const, TDecodeLink const*>, std::__1::equal_to<TDecodeLink::THistory>>, THashMapFunction<std::__1::pair<TDecodeLink::THistory const, TDecodeLink const*>, THash<TDecodeLink::THistory>>>::find(std::__1::pair<TDecodeLink::THistory const, TDecodeLink const*> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b454fefc (    0x78) std::__1::vector<int, std::__1::allocator<int>>::vector(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b454ff74 (    0x44) std::__1::vector<int, std::__1::allocator<int>>::__vallocate[abi:v160006](unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b454ffb8 (    0x18) std::__1::vector<int, std::__1::allocator<int>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b454ffd0 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<int>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<int>>(std::__1::allocator<int>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4550008 (     0x4) MrecInitModule_bottlen_recogctl() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455000c (    0x64) void DgnDelete<SimpleFrameTransformer>(SimpleFrameTransformer*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4550070 (   0x928) compileAlt(TFileObject const*, TFileObject*, TLexicon*, TAllocator*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4550998 (   0x510) TArrayObject::TArrayObject(TFileObject const*, TLexicon*, TAllocator*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4550ea8 (    0xa8) std::__1::vector<TFileObject*, std::__1::allocator<TFileObject*>>::reserve(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4550f50 (    0x2c) std::__1::vector<TFileObject*, std::__1::allocator<TFileObject*>>::resize(unsigned long, TFileObject* const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4550f7c (    0xf0) TArrayObject::checkNoGap(unsigned long, unsigned long) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455106c (   0x6bc) TDigitObject::TDigitObject(TFileObject const*, TLexicon*, TAllocator*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4551728 (   0x3d8) TDigitObject::build(wchar_t const*, TVertex*, TVertex*, TGraph*, TLexicon*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4551b00 (   0x2f8) addSequence(TFileObject const*, TVertex*, TVertex*, TGraph*, TLexicon*, char const*, char const*, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4551df8 (   0x3ec) TRomanObject::TRomanObject(TFileObject const*, TLexicon*, TAllocator*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45521e4 (   0x22c) TRomanObject::build(wchar_t const*, TVertex*, TVertex*, TGraph*, TLexicon*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4552410 (   0xc14) TCountingObject::TCountingObject(TFileObject const*, std::__1::vector<TArrayObject*, std::__1::allocator<TArrayObject*>> const&, TLexicon*, TAllocator*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4553024 (   0x288) TCountingObject::getArray(TFileObject const*, std::__1::vector<TArrayObject*, std::__1::allocator<TArrayObject*>> const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45532ac (   0x15c) TCountingObject::checkChunk(TFileObject const*, TArrayObject const*, TArrayObject const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4553408 (   0x270) TCountingObject::checkMagnitude(TFileObject const*, TArrayObject const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4553678 (    0x3c) TCountingObject::getChunk(bool, bool, unsigned long) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45536b4 (    0x4c) TCountingObject::getMagnitude(bool, bool, unsigned long, unsigned long) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4553700 (   0x610) TCountingObject::addHundredChunk(unsigned long, bool, bool, bool, bool, TVertex*, TVertex*, TGraph*, TLexicon*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4553d10 (   0xa7c) TCountingObject::build(wchar_t const*, TVertex*, TVertex*, TGraph*, TLexicon*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455478c (   0x494) TChartSeeder::makeTerminals(unsigned long, std::__1::vector<TSymbol const*, std::__1::allocator<TSymbol const*>>&, std::__1::vector<unsigned long, std::__1::allocator<unsigned long>>&, std::__1::vector<void const*, std::__1::allocator<void const*>>&, TAllocator&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4554c20 (    0x2c) std::__1::vector<unsigned long, std::__1::allocator<unsigned long>>::resize(unsigned long, unsigned long const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4554c4c (    0x2c) std::__1::vector<void const*, std::__1::allocator<void const*>>::resize(unsigned long, void const* const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4554c78 (   0xee4) TPatternManager::TPatternManager(TInputStream&, TInputStream&, TLexicon*, TTokenizerParamManager*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4555b5c (    0x98) callBackSeqAlt(TGrammarCompiler::TArgument const*, unsigned long, void*, void*, TAllocator&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4555bf4 (   0x184) callBackSync(TGrammarCompiler::TArgument const*, unsigned long, void*, void*, TAllocator&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4555d78 (   0x294) callBackLookup(TGrammarCompiler::TArgument const*, unsigned long, void*, void*, TAllocator&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455600c (   0x4a8) TPatternManager::addArrayObject(TFileObject const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45564b4 (   0x500) TPatternManager::addCountingObject(TFileObject const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45569b4 (   0x4a8) TPatternManager::addDigitObject(TFileObject const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4556e5c (   0x4a8) TPatternManager::addRomanObject(TFileObject const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4557304 (   0x19c) TPatternManager::freeMemory() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45574a0 (     0x4) TPatternManager::TPatternManager(TInputStream&, TInputStream&, TLexicon*, TTokenizerParamManager*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45574a4 (    0x74) TPatternManager::~TPatternManager() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4557518 (     0x4) TPatternManager::~TPatternManager() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455751c (   0x368) callBackObject(TGrammarCompiler::TArgument const*, unsigned long, void*, void*, TAllocator&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4557884 (    0x38) TPatternManager::clear() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45578bc (   0xae4) TPatternManager::addWords(TVertex*, TGraph*, TSegmenter*, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45583a0 (     0x4) TChartSeeder::~TChartSeeder() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45583a4 (    0x9c) addToken(TFileObject const*, TVertex*, TVertex*, TGraph*, TLexicon*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4558440 (   0x158) addAlt(TFileObject const*, TVertex*, TVertex*, TGraph*, TLexicon*, char const*, char const*, char const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4558598 (   0x170) addPattern(TFileObject const*, TVertex*, TVertex*, TGraph*, TLexicon*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4558708 (   0x368) TPatternManager::expandWord(TGraph*, TEdge*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4558a70 (     0x4) TDigitObject::~TDigitObject() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4558a74 (    0x28) TDigitObject::~TDigitObject() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4558a9c (     0x8) TDigitObject::isBuildable(wchar_t const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4558aa4 (     0x4) TRomanObject::~TRomanObject() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4558aa8 (    0x28) TRomanObject::~TRomanObject() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4558ad0 (    0xc8) TRomanObject::isBuildable(wchar_t const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4558b98 (    0x50) TCountingObject::~TCountingObject() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4558be8 (    0x60) TCountingObject::~TCountingObject() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4558c48 (    0xf4) TCountingObject::isBuildable(wchar_t const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4558d3c (     0x4) TChartSeeder::~TChartSeeder() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4558d40 (     0x4) TArrayObject::~TArrayObject() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4558d44 (    0x28) TArrayObject::~TArrayObject() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4558d6c (   0x188) TArrayObject::isBuildable(wchar_t const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4558ef4 (   0x100) TArrayObject::build(wchar_t const*, TVertex*, TVertex*, TGraph*, TLexicon*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4558ff4 (   0x4b4) callBackSeqAltHelper(TGrammarCompiler::TArgument const*, unsigned long, wchar_t const*, TLexicon*, wchar_t*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45594a8 (    0x7c) TDigitObject::~TDigitObject() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4559524 (    0x7c) TRomanObject::~TRomanObject() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45595a0 (    0x18) std::__1::vector<TFileObject*, std::__1::allocator<TFileObject*>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45595b8 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<TFileObject*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<TFileObject*>>(std::__1::allocator<TFileObject*>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45595f0 (   0x12c) std::__1::vector<TFileObject*, std::__1::allocator<TFileObject*>>::__append(unsigned long, TFileObject* const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455971c (   0x124) std::__1::vector<unsigned long, std::__1::allocator<unsigned long>>::__append(unsigned long, unsigned long const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4559840 (   0x12c) std::__1::vector<void const*, std::__1::allocator<void const*>>::__append(unsigned long, void const* const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455996c (    0x18) std::__1::vector<void const*, std::__1::allocator<void const*>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4559984 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<void const*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<void const*>>(std::__1::allocator<void const*>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45599bc (    0x18) std::__1::vector<TCountingObject*, std::__1::allocator<TCountingObject*>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45599d4 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<TCountingObject*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<TCountingObject*>>(std::__1::allocator<TCountingObject*>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4559a0c (    0x18) std::__1::vector<TArrayObject*, std::__1::allocator<TArrayObject*>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4559a24 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<TArrayObject*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<TArrayObject*>>(std::__1::allocator<TArrayObject*>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4559a5c (    0x18) std::__1::vector<TDigitObject*, std::__1::allocator<TDigitObject*>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4559a74 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<TDigitObject*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<TDigitObject*>>(std::__1::allocator<TDigitObject*>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4559aac (    0x18) std::__1::vector<TRomanObject*, std::__1::allocator<TRomanObject*>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4559ac4 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<TRomanObject*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<TRomanObject*>>(std::__1::allocator<TRomanObject*>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4559afc (    0x7c) TArrayObject::~TArrayObject() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4559b78 (    0xb0) MrecInitModule_timer_mrecutil() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4559c28 (     0xc) MrecTime::MrecTime() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4559c34 (    0x14) MrecTime::operator=(MrecTime const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4559c48 (     0xc) MrecTime::zeroTime() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4559c54 (    0x94) MrecTime::formatAndAppendToString(DgnString*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4559ce8 (    0x84) MrecTime::setToCurrentLocalTime() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4559d6c (    0xf0) MrecTime::setToPreprocessorStyleDateAndTime(char const*, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4559e5c (    0x44) MrecTime::appendLocalTimeToString(DgnString*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4559ea0 (    0x34) MrecTime::unpackLittleEndMrecTime(unsigned int const*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4559ed4 (    0x34) MrecTime::packLittleEndMrecTime(unsigned int*, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4559f08 (    0x4c) ClockTimer::getCurrentCpuMicrosec() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4559f54 (    0x4c) ClockTimer::getCurrentThreadCpuMicrosec() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4559fa0 (    0x70) ClockTimer::getCurrentMicrosec() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455a010 (    0x70) ClockTimer::getCurrentTickMicrosec() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455a080 (    0xc0) ClockTimer::initClockTimer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455a140 (    0x18) ClockTimer::initCyclesPerSecondAndSpeedFactor() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455a158 (     0x8) ClockTimer::getCyclesPerSecond() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455a160 (     0x8) ClockTimer::getDynamicSpeechRecognitionSpeedFactor() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455a168 (     0x8) ClockTimer::getStaticSpeechRecognitionSpeedFactor() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455a170 (     0x8) ClockTimer::useFreeTimeVoid() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455a178 (    0x84) ClockTimer::useFreeTime() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455a1fc (    0x3c) ClockTimer::getPlatformAbsoluteTime() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455a238 (    0x84) SnapTime::appendReadableTimeToString(DgnString*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455a2bc (    0x10) SnapTime::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455a2cc (    0x18) SetShadowDiagnosticComputeFullTimingStats() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455a2e4 (   0x1f8) MrecInitModule_trgrm_voc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455a4dc (    0x34) void DgnDelete<StateMgr>(StateMgr*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455a510 (    0x34) void DgnDelete<RuleMgr>(RuleMgr*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455a544 (    0x40) DgnIFixArray<BucketLink<int, unsigned int>*>::~DgnIFixArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455a584 (    0x9c) MrecInitModule_spdebug_sigproc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455a620 (    0x9c) MrecInitModule_dsmset_mrecutil() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455a6bc (    0x5c) DgnSharedMemSet::createSet(DgnString const&, DgnString const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455a718 (     0xc) DgnSharedMemSet::getSetPrefixName() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455a724 (     0x8) DgnSharedMemSet::getSetCacheDir() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455a72c (   0x728) DgnSharedMemSet::getMaybeReserveAndRefDSMIdEx(DgnString const&, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455ae54 (    0xb8) DSMHeadData::init(DgnString const&, unsigned long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455af0c (   0x63c) DgnSharedMemSet::waitTilCreatedAndMapEx(unsigned int, DgnString const&, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455b548 (   0x454) DgnSharedMemSet::openDSMWithSizeEx(unsigned int, B_DSMOpenMode, unsigned long long*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455b99c (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001b455b9b0 (    0xb8) DgnSharedMemSet::closeDSMEx(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455ba68 (   0x3cc) DgnSharedMemSet::createMaybeRemapDSMEx(unsigned int, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455be34 (    0x18) DgnSharedMemSet::getGlobalState(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455be4c (    0x6c) DgnSharedMemSet::isCurThreadDSMOwner(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455beb8 (   0x458) DgnSharedMemSet::unrefDSMEx(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455c310 (    0x20) DgnSharedMemSet::getMappedDSMName(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455c330 (   0x238) DgnSharedMemSet::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455c568 (    0x94) DSMSetData::DSMSetData(DgnString const&, DgnString const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455c5fc (     0x4) MrecInitModule_uttfile_channel() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455c600 (   0x74c) UttFile::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455cd4c (     0x4) MrecInitModule_xprhelp_mrecutil() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455cd50 (    0xd4) xprintStringFancy(char const*, bool, bool, char const*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455ce24 (   0x184) DgnPrinter::xprint(char const*, bool, bool, char const*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455cfa8 (   0x154) xprintf(char const*, ...) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455d0fc (   0x154) xlprintf(char const*, ...) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455d250 (   0x164) xgenprintf(bool, bool, char const*, ...) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455d3b4 (    0x14) xprintString(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455d3c8 (    0x14) xlprintString(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455d3dc (   0x104) DgnPrinterMgr::DgnPrinterMgr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455d4e0 (    0x50) DgnPrinter::DgnPrinter() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455d530 (     0x4) DgnPrinter::~DgnPrinter() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455d534 (    0x2c) DgnPrinterMgr::startupDgnPrinterMgr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455d560 (    0x90) DgnPrinterMgr::setAsCurrentPrinter(DgnPrinter*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455d5f0 (   0x514) DgnPrinterMgr::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455db04 (   0x3c4) DgnPrinter::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455dec8 (    0xb0) DgnPrinterMgr::setLogLinePrefix(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455df78 (    0x78) DgnPrinterMgr::setShowLogLineTimeStamps(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455dff0 (    0x7c) DgnPrinterMgr::addLinePrefix(char*, unsigned int, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455e06c (    0x80) DgnPrinterMgr::maybeSetTimeStampingBase(unsigned long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455e0ec (   0x104) DgnPrinterMgr::getDeltasAndResetLast(unsigned long long*, unsigned long long*, unsigned long long*, unsigned long long*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455e1f0 (    0x10) logMaybeSetTimeStampingBase(unsigned long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455e200 (    0x10) logSetLinePrefix(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455e210 (    0x10) logSetShowLineTimeStamps(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455e220 (   0x1a8) DgnPrinter::addLinePrefix(char*, unsigned int, unsigned int*, char const*, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455e3c8 (    0x58) DgnPrinter::~DgnPrinter() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455e420 (    0x54) DgnPrinter::setInstancePrefix(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455e474 (    0x38) Latch<DgnReadWriteLock, WriteLatchAdapter>::~Latch() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455e4ac (    0x38) Latch<DgnReadWriteLock, ReadLatchAdapter>::~Latch() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455e4e4 (    0xcc) TLattProcParamManager::TLattProcParamManager(TLocaleInfo&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455e5b0 (    0x4c) TLatticeProcessor::TLatticeProcessor(TLexicon*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455e5fc (    0x6c) TRegisterable<TLatticeProcessor>::~TRegisterable() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455e668 (    0x78) TLatticeProcessor::~TLatticeProcessor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455e6e0 (     0x4) TLatticeProcessor::~TLatticeProcessor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455e6e4 (     0x4) TLatticeProcessor::~TLatticeProcessor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455e6e8 (   0x1e0) TLatticeProcessor::clearLoadedLmData(unsigned long) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455e8c8 (    0xd4) TLatticeProcessor::combineMrecData(TPLatticeMrecData&, TPLatticeMrecData const&, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455e99c (     0x4) TRegisterable<TLatticeProcessor>::~TRegisterable() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455e9a0 (    0x28) TRegisterable<TLatticeProcessor>::~TRegisterable() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455e9c8 (     0x4) MrecInitModule_ctftmgr_sigproc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455e9cc (    0x98) CTFTMgr::~CTFTMgr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455ea64 (     0x4) CTFTMgr::~CTFTMgr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455ea68 (   0xe44) CTFTMgr::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455f8ac (    0xf8) unsigned long sizeObject<LinearTransform>(DgnArray<LinearTransform> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455f9a4 (   0x2a0) CTFTMgr::saveCTFT(DFile*, DFileChecksums*, bool, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b455fc44 (   0xb40) CTFTMgr::saveCTFTText(DFile*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4560784 (    0x88) void writeObject<LinearTransform>(DgnStream*, DgnArray<LinearTransform> const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456080c (   0x104) writeIntMatrix(DgnTextFileWriter&, char const*, bool, DgnArray<DgnPrimArray<int>> const&, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4560910 (    0xb0) writeIntOffset(DgnTextFileWriter&, char const*, DgnPrimArray<int> const&, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45609c0 (    0x90) writeLogDeterminant(DgnTextFileWriter&, char const*, int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4560a50 (    0x9c) MrecInitModule_recoggrm_recogctl() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4560aec (    0x7c) dismantleRecogGrammarIArray(DgnIArray<RecogGrammar*>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4560b68 (    0x8c) RecogGrammar::unlinkStates() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4560bf4 (    0xb8) RecogGrammar::killStates() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4560cac (    0x64) void DgnDelete<RecogGrammar>(RecogGrammar*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4560d10 (    0x60) PronGenerator::PronGenerator(unsigned short, unsigned short, unsigned int, unsigned int, unsigned int, PronGuessParamSet*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4560d70 (     0x8) PronGenerator::~PronGenerator() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4560d78 (    0x68) RecogGrammar::newEndOfUtteranceRecogGrammar(unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4560de0 (    0xc8) RecogGrammar::setupEndOfUtteranceGrammar() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4560ea8 (    0x5c) RecogGrammar::newPronGuessRecogGrammar(PronGenerator const*, bool, DgnString const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4560f04 (  0x17b0) WordStatesRecogGrammar::setupPronGuessGrammar(PronGenerator const*, bool, DgnString const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45626b4 (    0x60) RecogGrammar::newSequenceRecogGrammar(unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4562714 (    0x5c) RecogGrammar::~RecogGrammar() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4562770 (     0x4) RecogGrammar::~RecogGrammar() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4562774 (    0x28) RecogGrammar::~RecogGrammar() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456279c (    0x80) RecogGrammar::getNewState() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456281c (     0x4) RecogGrammar::add(RecogGrammar*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4562820 (     0x8) RecogGrammar::hasInStateSet(unsigned int const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4562828 (     0xc) RecogGrammar::finalize() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4562834 (     0x8) RecogGrammar::getStartStates() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456283c (   0x13c) RecogGrammar::setTransitionsTo(DgnIArray<RecogGrammar*> const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4562978 (    0x74) WordStatesRecogGrammar::WordStatesRecogGrammar(unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45629ec (    0x54) WordStatesRecogGrammar::~WordStatesRecogGrammar() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4562a40 (    0x58) WordStatesRecogGrammar::~WordStatesRecogGrammar() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4562a98 (    0x28) WordStatesRecogGrammar::hasInStateSet(unsigned int const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4562ac0 (    0x54) ContainerRecogGrammar::~ContainerRecogGrammar() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4562b14 (    0x58) ContainerRecogGrammar::~ContainerRecogGrammar() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4562b6c (    0x54) ContainerRecogGrammar::add(RecogGrammar*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4562bc0 (    0x54) SequenceRecogGrammar::~SequenceRecogGrammar() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4562c14 (    0x58) SequenceRecogGrammar::~SequenceRecogGrammar() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4562c6c (    0x84) SequenceRecogGrammar::hasInStateSet(unsigned int const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4562cf0 (   0x164) SequenceRecogGrammar::finalize() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4562e54 (    0x60) Hash<int, int, IntToUintScope, unsigned int>::findBucket(int const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4562eb4 (    0xc4) DgnArray<DgnPrimArray<bool>>::DgnArray(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4562f78 (    0x64) DgnArray<DgnPrimArray<bool>>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4562fdc (     0x4) MrecInitModule_pic_phoneme() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4562fe0 (    0x50) readObject(DgnStream*, OpaquePelIdAndDurId&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4563030 (    0x50) writeObject(DgnStream*, OpaquePelIdAndDurId const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4563080 (    0x10) sizeObject(OpaquePelIdAndDurId const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4563090 (    0x18) std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__throw_out_of_range[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45630a8 (   0x164) TLocaleInfo::composeCharacter(wchar_t, wchar_t) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456320c (   0x120) TLocaleInfo::splitDiacritic(wchar_t) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456332c (   0x11c) TLocaleInfo::decomposeCharacter(wchar_t, TBuffer<wchar_t>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4563448 (    0x3c) TLocaleInfo::removeDiacritics(wchar_t) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4563484 (    0x70) TLocaleInfo::katakanaToHiragana(wchar_t const*, TBuffer<wchar_t>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45634f4 (   0x2c4) TLocaleInfo::katakanaToRomaji(wchar_t const*, TBuffer<wchar_t>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45637b8 (    0xd4) TLocaleInfo::isKtivMenukad(wchar_t const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456388c (   0x4a4) TLocaleInfo::ktivMenukadToKtivMaleh(wchar_t const*, TBuffer<wchar_t>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4563d30 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001b4563d44 (   0x324) TLocaleInfo::getDigitExtended(wchar_t) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4564068 (   0x128) TLocaleInfo::stringToUInt(wchar_t const*, wchar_t const*&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4564190 (    0xc8) TLocaleInfo::stringToUInt(wchar_t const*, bool&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4564258 (   0x14c) TLocaleInfo::stringToInt(wchar_t const*, wchar_t const*&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45643a4 (    0xc8) TLocaleInfo::stringToInt(wchar_t const*, bool&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456446c (   0x184) TLocaleInfo::stringToBool(wchar_t const*, wchar_t const*&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45645f0 (   0x3ac) TLocaleInfo::isAlpha(wchar_t) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456499c (    0x44) (null) [FUNC, FunctionStarts] 
                0x00000001b45649e0 (    0xd0) TLocaleInfo::stringToBool(wchar_t const*, bool&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4564ab0 (    0xc8) TLocaleInfo::toNarrow(wchar_t) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4564b78 (    0x1c) (null) [FUNC, FunctionStarts] 
                0x00000001b4564b94 (    0x24) TLocaleInfo::normalizeWidth(wchar_t) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4564bb8 (    0xa8) TLocaleInfo::toWide(wchar_t) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4564c60 (   0x2dc) TLocaleInfo::isUpper(wchar_t) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4564f3c (    0x44) (null) [FUNC, FunctionStarts] 
                0x00000001b4564f80 (   0x2a4) TLocaleInfo::isLower(wchar_t) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4565224 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001b456523c (   0x344) TLocaleInfo::toUpper(wchar_t) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4565580 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001b4565598 (   0x33c) TLocaleInfo::toLower(wchar_t) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45658d4 (    0x44) (null) [FUNC, FunctionStarts] 
                0x00000001b4565918 (   0x164) TLocaleInfo::stringToFloat(wchar_t const*, bool&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4565a7c (   0x110) std::__1::basic_istringstream<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>::basic_istringstream[abi:v160006](std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> const&, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4565b8c (    0xbc) std::__1::basic_istringstream<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>::~basic_istringstream() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4565c48 (   0x3f8) TLocaleInfo::stringToULong(wchar_t const*, bool&, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4566040 (    0xe4) TLocaleInfo::valueToString(unsigned long, TBuffer<wchar_t>&, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4566124 (    0xd8) virtual thunk to std::__1::basic_istringstream<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>::~basic_istringstream() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45661fc (    0xcc) std::__1::basic_istringstream<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>::~basic_istringstream() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45662c8 (    0xe0) virtual thunk to std::__1::basic_istringstream<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>::~basic_istringstream() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45663a8 (    0x94) std::__1::basic_stringbuf<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>::basic_stringbuf[abi:v160006](std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> const&, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456643c (   0x130) std::__1::basic_stringbuf<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>::str(std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456656c (    0x9c) MrecInitModule_voc_voc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4566608 (   0x248) Voc::Voc(unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4566850 (     0x4) Voc::Voc(unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4566854 (   0x33c) Voc::~Voc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4566b90 (    0x34) void DgnDelete<CollMgr>(CollMgr*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4566bc4 (    0x34) void DgnDelete<PronCollMgr>(PronCollMgr*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4566bf8 (    0x64) void DgnDelete<WordLanguageModel>(WordLanguageModel*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4566c5c (    0x34) void DgnDelete<WordList>(WordList*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4566c90 (    0x34) void DgnDelete<VocCompatData>(VocCompatData*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4566cc4 (     0x4) Voc::~Voc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4566cc8 (   0x240) Voc::computePrefLmScores() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4566f08 (    0x3c) Voc::notifyPrefLmScoresBad() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4566f44 (    0x40) Voc::getPrefPron(unsigned int, unsigned short const**, unsigned int*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4566f84 (    0xf0) Voc::computePrefWordIdsSortedByPron() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4567074 (    0x4c) Voc::notifyPrefWordIdsSortedByPronBad() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45670c0 (    0xac) Voc::clearPrefPicModels() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456716c (   0x208) Voc::loadPrefLmScores(DFile*, DFileChecksums*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4567374 (    0xb0) Voc::savePrefLmScores(DFile*, DFileChecksums*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4567424 (   0x23c) Voc::loadPrefWordIdsSortedByPron(DFile*, DFileChecksums*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4567660 (    0x70) void readObject<unsigned int, DgnArray<OpaquePelIdAndDurId>, Voc>(DgnStream*, HashProbeKEV<unsigned int, DgnArray<OpaquePelIdAndDurId>, Voc>&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45676d0 (    0xa8) void readObject<OpaquePelIdAndDurId>(DgnStream*, DgnArray<OpaquePelIdAndDurId>&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4567778 (   0x15c) Voc::savePrefWordIdsSortedByPron(DFile*, DFileChecksums*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45678d4 (    0x88) void writeObject<unsigned int, DgnArray<OpaquePelIdAndDurId>, Voc>(DgnStream*, HashProbeKEV<unsigned int, DgnArray<OpaquePelIdAndDurId>, Voc> const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456795c (    0x88) void writeObject<OpaquePelIdAndDurId>(DgnStream*, DgnArray<OpaquePelIdAndDurId> const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45679e4 (    0x70) Voc::loadAndDiscardReproData(DFile*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4567a54 (    0xc8) Voc::loadAndDiscardReproResult(DFile*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4567b1c (   0x478) Voc::getVocSvcCompatibility(DFile*, DFile*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4567f94 (   0xb40) Voc::loadVoc(DFile*, DFile*, DgnSharedMemSet*, unsigned int, long long, bool, bool, bool*, DFileChecksums*, bool*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4568ad4 (   0x168) Voc::saveVocShared(DgnSharedMemSet&, unsigned int, FileSpec const&, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4568c3c (    0x7c) Voc::writeVocGroupInfo(VocGroupInfo const*, FileSpec const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4568cb8 (    0xf0) Voc::shouldSaveSubFilesInTextFormat(B_SaveOverrideFormatType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4568da8 (   0x678) Voc::saveVoc(FileSpec const&, FileSpec const&, B_SaveResultCode*, DFileChecksums*, bool, bool, B_LMSBigramTrigramGroupingType, B_LMSQuadgramGroupingType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4569420 (  0x2000) Voc::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456b420 (    0xcc) unsigned long sizeObject<OpaquePelIdAndDurId>(DgnArray<OpaquePelIdAndDurId> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456b4ec (    0x2c) Voc::canUnloadCachedLM() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456b518 (   0x114) Voc::isPhonemeSetCompatibleWithVoc(Voc const*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456b62c (     0x8) Voc::addPrefWordIdsSortedByPron(DgnPrimArray<unsigned int> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456b634 (    0x68) Voc::removePrefWordIdsSortedByPron(DgnPrimArray<unsigned int> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456b69c (   0x2e8) Voc::notifyWordFamilyAdded(unsigned int, DgnPrimArray<unsigned int> const&, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456b984 (    0xf0) Voc::notifyWordFamilyAboutToDeleteProns(DgnPrimArray<unsigned int> const&, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456ba74 (     0x8) Voc::notifyWordFamilyChanged(DgnPrimArray<unsigned int> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456ba7c (   0x198) Voc::notifyWordFamilyDeleted(DgnPrimArray<unsigned int> const&, unsigned int, bool*, bool*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456bc14 (   0x14c) Voc::addPrefPicModelIdPron(unsigned int, DgnPrimArray<unsigned int> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456bd60 (    0x24) Voc::getPrefPicModelIdPron(unsigned int, unsigned int const**, unsigned int*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456bd84 (    0xc4) Voc::findOrAddPrefPicModel(DgnArray<OpaquePelIdAndDurId> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456be48 (    0xf4) HashProbeKEV<unsigned int, DgnArray<OpaquePelIdAndDurId>, Voc>::insert(unsigned int, DgnArray<OpaquePelIdAndDurId> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456bf3c (    0x70) Voc::deleteWordsFromWordList(DgnPrimArray<unsigned int> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456bfac (    0xa0) Voc::verifyCanDeleteWords(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456c04c (   0x228) Voc::deleteWordIdArrayFamily(DgnPrimArray<unsigned int> const&, DgnArray<DgnPrimArray<unsigned int>> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456c274 (   0x144) Voc::createWord(char const*, unsigned int, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456c3b8 (    0x18) Voc::addClientPronsAvoidDuplicates(unsigned int, DgnPrimArray<unsigned int>*, DgnPrimArray<unsigned int>*, DgnArray<DgnPrimArray<unsigned short>> const&, DgnPrimArray<unsigned char> const&, DgnPrimArray<unsigned char> const&, unsigned int, char const*, DgnPrimArray<unsigned int>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456c3d0 (    0xfc) Voc::deleteWordClientProns(unsigned int, DgnPrimArray<unsigned int>*, DgnPrimArray<unsigned int>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456c4cc (     0x8) Voc::getVocReferringLatticeRefCount() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456c4d4 (    0x10) Voc::addVocReferringPrefilterResultRef() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456c4e4 (    0x10) Voc::removeVocReferringPrefilterResultRef() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456c4f4 (     0x8) Voc::getVocReferringPrefilterResultRefCount() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456c4fc (    0x10) Voc::addVocReferringSausageRef() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456c50c (    0x10) Voc::removeVocReferringSausageRef() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456c51c (     0x8) Voc::getVocReferringSausageRefCount() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456c524 (     0x8) Voc::getVocReferringReproRefCount() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456c52c (   0x434) Voc::getPics(CWIDAC const&, B_PronSubset, unsigned short*, unsigned short*, bool, DgnArray<Pic>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456c960 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b456c970 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b456c980 (    0x74) HashProbeKEV<unsigned int, DgnArray<OpaquePelIdAndDurId>, Voc>::HashProbeKEV(char const*, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456c9f4 (    0x78) HashProbeKEV<unsigned int, DgnArray<OpaquePelIdAndDurId>, Voc>::initBuckets() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456ca6c (    0x6c) DgnIOwnArray<WordNgramTemplate*>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456cad8 (    0x50) void DgnDelete<WordNgramTemplate>(WordNgramTemplate*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456cb28 (     0x4) Hash<unsigned int, unsigned int, WordIdScope, unsigned int>::~Hash() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456cb2c (    0x74) Hash<unsigned int, unsigned int, WordIdScope, unsigned int>::~Hash() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456cba0 (    0x94) Hash<int, int, IntToUintScope, unsigned int>::removeAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456cc34 (    0x28) Hash<unsigned int, unsigned int, WordIdScope, unsigned int>::~Hash() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456cc5c (    0x40) DgnIFixArray<BucketLink<unsigned int, unsigned int>*>::~DgnIFixArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456cc9c (    0x40) DgnArray<OpaquePelIdAndDurId>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456ccdc (   0x168) HashProbeKEV<unsigned int, DgnArray<OpaquePelIdAndDurId>, Voc>::upSize(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456ce44 (    0xa8) Voc::equalKeys(unsigned int, DgnArray<OpaquePelIdAndDurId> const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456ceec (     0x4) MrecInitModule_sdrule_sdapi() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456cef0 (    0x38) TransducerGrammarMgr::startupTransducerGrammarMgr(DgnIOwnArray<TransducerGrammar*> const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456cf28 (   0x1cc) TransducerGrammarMgr::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456d0f4 (     0x4) MrecInitModule_syncnet1_net() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456d0f8 (    0x58) OnePhonemeSyncNet::~OnePhonemeSyncNet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456d150 (     0x4) OnePhonemeSyncNet::~OnePhonemeSyncNet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456d154 (    0x28) OnePhonemeSyncNet::~OnePhonemeSyncNet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456d17c (    0x6c) OnePhonemeSyncNet::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456d1e8 (     0x4) OnePhonemeSyncNet::configureOutPorts(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456d1ec (     0xc) OnePhonemeSyncNet::attachInPort(unsigned char, Node*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456d1f8 (    0x40) OnePhonemeSyncNet::addEpsilonNode() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456d238 (   0x320) OnePhonemeSyncNet::scoreNetInternal(int, int, int, int, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456d558 (   0x184) int BaseSyncNet::scoreIntSilNode1<false>(bool, bool, int, int, int, int, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456d6dc (    0x6c) int ExternalOutPort::seedOutPort<false>(BaseNode const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456d748 (    0x48) OnePhonemeSyncNet::thresholdNetInternal(int, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456d790 (    0x60) OnePhonemeSyncNet::calcNumActiveNodes(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456d7f0 (    0x84) OnePhonemeSyncNet::addNodesSequential(unsigned int, B_ScoreOrder) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456d874 (     0x8) HmmNet::isTraceNet() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456d87c (     0x8) AcousticNet::nActiveSilNodes() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456d884 (     0x8) HmmNet::getInPortStatus() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456d88c (     0x8) AcousticNet::isAcoustic() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456d894 (     0x8) BaseSyncNet::canCallBack() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456d89c (     0xc) BaseSyncNet::addCallBack(void (*)(void*), void*, B_ScoreOrder) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456d8a8 (     0x8) AcousticNet::getRemainder() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456d8b0 (     0x8) AcousticNet::getExitContext() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456d8b8 (     0x8) AcousticNet::getExitContextPtr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456d8c0 (     0x4) HmmNet::setEmbeddedFstSeedingTime(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456d8c4 (     0x4) HmmNet::expandEmbFstHistory(DgnPrimArray<unsigned int>*, DgnPrimArray<int>*, unsigned int&, DgnPrimArray<unsigned int>*, DgnPrimArray<unsigned int>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456d8c8 (    0x78) Sequence::newSequence(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456d940 (     0x4) MrecInitModule_nisthdr_audiosrc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456d944 (     0x4) MrecInitModule_ustrcmp_mrecutil() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456d948 (    0x2c) ustrcmp [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456d974 (    0x3c) ustrncmp [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456d9b0 (    0x18) Uns8StringLength(unsigned char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456d9c8 (    0x18) Uns32StringLength(unsigned int const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456d9e0 (    0x6c) isValidName(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456da4c (    0x38) isValidRestrictedName(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456da84 (     0x4) MrecInitModule_sdcoll_sdapi() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456da88 (   0x200) SDColl_StringCompare [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456dc88 (    0x9c) MrecInitModule_wavedata_frame() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456dd24 (    0xa0) WaveData::WaveData(WaveData const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456ddc4 (     0x4) WaveData::WaveData(WaveData const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456ddc8 (    0x3c) WaveData::~WaveData() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456de04 (    0xa0) sizeObject(WaveData const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456dea4 (    0x40) DgnPrimFixArray<short>::~DgnPrimFixArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456dee4 (    0x7c) DgnPrimFixArray<short>::copyArraySlice(DgnPrimFixArray<short> const&, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456df60 (     0x4) MrecInitModule_prandom_mrecutil() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456df64 (    0x40) DgnPRandom::normalizedNext(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456dfa4 (    0x8c) DgnPRandom::initialize(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456e030 (     0x4) MrecInitModule_intruder_recogctl() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456e034 (    0x68) IntruderSet::~IntruderSet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456e09c (     0x4) IntruderSet::~IntruderSet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456e0a0 (    0x88) void writeObject<DgnPrimFixArray<unsigned char>>(DgnStream*, DgnArray<DgnPrimFixArray<unsigned char>> const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456e128 (   0x114) void readObject<DgnPrimArray<unsigned char>>(DgnStream*, DgnArray<DgnPrimArray<unsigned char>>&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456e23c (    0xa4) IntruderSet::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456e2e0 (    0xf0) unsigned long sizeObject<DgnPrimArray<unsigned char>>(DgnArray<DgnPrimArray<unsigned char>> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456e3d0 (    0xa0) IntruderMgr::~IntruderMgr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456e470 (     0x4) IntruderMgr::~IntruderMgr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456e474 (   0xb5c) IntruderMgr::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456efd0 (    0xf8) unsigned long sizeObject<IntruderSet*>(DgnIOwnArray<IntruderSet*> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456f0c8 (   0x140) DgnArray<DgnPrimArray<unsigned char>>::copyArraySlice(DgnArray<DgnPrimArray<unsigned char>> const&, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456f208 (    0x6c) DgnIOwnArray<IntruderSet*>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456f274 (    0xa8) std::__1::vector<TVertex const*, std::__1::allocator<TVertex const*>>::reserve(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456f31c (    0x18) std::__1::vector<TEdge const*, std::__1::allocator<TEdge const*>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456f334 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<TEdge const*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<TEdge const*>>(std::__1::allocator<TEdge const*>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456f36c (    0x18) std::__1::vector<TVertex const*, std::__1::allocator<TVertex const*>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456f384 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<TVertex const*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<TVertex const*>>(std::__1::allocator<TVertex const*>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456f3bc (   0x1a8) TInputStream::verifyVersion(char const*, unsigned long, unsigned long, unsigned long) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456f564 (   0x2e8) TInputStream::verifyHeader(char const*, TFileVersionDescriptor const*, unsigned long) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b456f84c (  0x27dc) TInputStream::readHeader() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4572028 (   0x244) TInputStream::getNextLine(TBuffer<char>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457226c (   0x164) std::__1::vector<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>>::push_back[abi:v160006](std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>&&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45723d0 (    0x44) std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>::~pair() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4572414 (    0x7c) TInputStream::isParameter(char const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4572490 (   0x4ec) TInputStream::getNextLine(TBuffer<wchar_t>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457297c (   0x2cc) TInputStream::getBoolParameter(char const*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4572c48 (    0xa8) TInputStream::getStringParameter(char const*, TBuffer<wchar_t>&, wchar_t const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4572cf0 (   0x14c) TOutputStream::operator<<(wchar_t const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4572e3c (   0x3b4) TOutputStream::writeHeader(char const*, TFileVersionDescriptor const*, unsigned long, std::__1::map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>>> const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45731f0 (  0x1ac8) TInputModel::TInputModel(TDataManager const*, TDataManager const*, bool, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4574cb8 (    0xa8) TInputModel::getIntVar(char const*, int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4574d60 (    0xc4) TInputModel::getStringVar(char const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>&, char const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4574e24 (     0x4) TInputModel::TInputModel(TDataManager const*, TDataManager const*, bool, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4574e28 (    0xa8) TInputModel::isVar(char const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4574ed0 (    0x34) TInputModel::getStaticDataPath() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4574f04 (   0x3a4) TOutputModel::TOutputModel(TDataManager*, TDataManager*, char const*, TDataManager const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45752a8 (    0xa8) TOutputModel::isVar(char const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4575350 (     0x4) TOutputModel::TOutputModel(TDataManager*, TDataManager*, char const*, TDataManager const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4575354 (    0x58) std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>::pair[abi:v160006]<char const*, char const*, (void*)0>(std::__1::pair<char const*, char const*>&&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45753ac (    0x90) std::__1::__tree_const_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::pair<char*, unsigned long>>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::pair<char*, unsigned long>>, void*>*, long> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::pair<char*, unsigned long>>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::pair<char*, unsigned long>>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, true>, std::__1::allocator<std::__1::__value_type<std...
                0x00000001b457543c (    0x3c) std::__1::vector<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>>::~vector[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4575478 (    0x98) std::__1::vector<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>>::__destroy_vector::operator()[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4575510 (    0x58) std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>::destroy[abi:v160006](std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4575568 (    0x78) std::__1::vector<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>>::__swap_out_circular_buffer(std::__1::__split_buffer<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>&>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45755e0 (    0x18) std::__1::vector<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45755f8 (    0x48) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>>(std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4575640 (    0xb8) std::__1::reverse_iterator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>*> std::__1::__uninitialized_allocator_move_if_noexcept[abi:v160006]<std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>, std::__1::reverse_iterator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>*>, std::__1::reverse_iterator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>*>, std::__1::reverse_iterat...
                0x00000001b45756f8 (    0x38) std::__1::__exception_guard_exceptions<std::__1::_AllocatorDestroyRangeReverse<std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>, std::__1::reverse_iterator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>*>>>::~__exception_guard_exceptions[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4575730 (    0x54) std::__1::_AllocatorDestroyRangeReverse<std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>, std::__1::reverse_iterator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>*>>::operator()[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4575784 (    0x34) std::__1::__split_buffer<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>&>::~__split_buffer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45757b8 (    0x48) std::__1::__split_buffer<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>&>::clear[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4575800 (    0x98) std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>, void*>*, long>, bool> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__...
                0x00000001b4575898 (    0x8c) std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>, void*>>>> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__value_type<std::__1::basic_string<char, std::__1::cha...
                0x00000001b4575924 (    0x58) std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>, void*>>>::operator()[abi:v160006](std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>, void*>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457597c (   0x15c) TClitics::TClitics(TLexicon*, TTokenizerParamManager*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4575ad8 (     0x4) TClitics::TClitics(TLexicon*, TTokenizerParamManager*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4575adc (    0x3c) TClitics::~TClitics() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4575b18 (     0x4) TClitics::~TClitics() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4575b1c (   0x120) TClitics::isValidRoot(TWord const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4575c3c (   0xb70) TClitics::addWords(TVertex*, TGraph*, TSegmenter*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45767ac (    0xb4) TBuffer<wchar_t>::operator=(TBuffer<wchar_t> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4576860 (   0x234) MrecInitModule_apist_sdapi() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4576a94 (    0x48) throwBadSdapiArgument(char const*, unsigned long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4576adc (    0x5c) throwIfErroredDuringCallback(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4576b38 (    0x70) sdUtilStrMove(char*, unsigned int, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4576ba8 (    0x3c) sdUtilItemMove(unsigned int, void const*, unsigned int, void*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4576be4 (   0x46c) sdUtilConvertSDWordSpecsToCwids(SDWordSpec const*, unsigned int, DgnPrimArray<unsigned int>*, bool, bool, bool, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4577050 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4577060 (   0x128) DisplaySdapiObjectSizes() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4577188 (   0xe28) ApiState::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4577fb0 (   0x14c) ApiState::ApiState() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45780fc (   0x2c0) ApiState::resetCallHistogram() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45783bc (    0x34) ApiState::startupHandlers(void (*)(char const*, unsigned long long), unsigned long long, void (*)(char const*, unsigned long long), unsigned long long, void (*)(char const*, unsigned long long), unsigned long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45783f0 (    0x44) ApiState::startupApiState(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4578434 (    0xcc) ApiState::init(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4578500 (    0x20) FpuUseMrecDefaults::~FpuUseMrecDefaults() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4578520 (   0x1e4) ApiState::staticSendMemoryError(B_ErrorThrowType, char const*, int, char const*, int, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4578704 (   0x24c) ApiState::sendMemoryError(char const*, int, char const*, int, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4578950 (   0x1d8) ApiState::staticSendError(char const*, unsigned int, bool, B_ErrorThrowType, char const*, int, char const*, int, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4578b28 (   0x2b4) ApiState::sendError(char const*, unsigned int, bool, B_ErrorThrowType, char const*, int, char const*, int, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4578ddc (    0x30) ApiState::staticSendLog(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4578e0c (    0xb8) ApiState::sendLog(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4578ec4 (    0xb0) ApiState::progressCallbackWrapper(unsigned int, void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4578f74 (   0x108) ApiState::callReallocateArrayCallback(void (*)(unsigned long long, unsigned int, unsigned int, void*, unsigned int, void**, unsigned int*), unsigned long long, unsigned int, unsigned int, void*, unsigned int, void**, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457907c (    0x8c) ApiState::cleanUpAfterSaveException(DgnFileIOException*, DgnString*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4579108 (    0x64) void DgnDelete<DgnFileIOException>(DgnFileIOException*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457916c (     0x8) ApiState::setLastResultCodeString(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4579174 (    0x80) ApiState::errorReexited() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45791f4 (    0xc4) ApiState::errorReentry(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45792b8 (    0xc4) ApiState::errorCallDuringRecog(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457937c (    0xc8) ApiState::errorRDApiNotInit(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4579444 (    0x78) ApiState::errorBadHeapOnEntry(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45794bc (    0x80) ApiState::errorBadHeapOnExit() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457953c (    0x74) ApiState::handleDgnMemoryException(DgnMemoryException*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45795b0 (    0xb8) ApiState::handleDgnException(DgnException*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4579668 (    0xd4) SdapiInsurance::SdapiInsurance(char const*, ResolveApiEntryInitEnableType, ResolveApiEntryCallsDuringRecogType, ApiEntryIndexType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457973c (   0x12c) ApiState::enterApi(SdapiInsurance*, char const*, ResolveApiEntryInitEnableType, ResolveApiEntryCallsDuringRecogType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4579868 (     0x4) SdapiInsurance::SdapiInsurance(char const*, ResolveApiEntryInitEnableType, ResolveApiEntryCallsDuringRecogType, ApiEntryIndexType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457986c (    0xf0) SdapiInsurance::~SdapiInsurance() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457995c (    0xb4) ApiState::exitApi() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4579a10 (     0x4) SdapiInsurance::~SdapiInsurance() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4579a14 (    0xe4) CallbackInsurance::CallbackInsurance(ApiCallbackIndexType, ResolveApiCallbackThreadingType, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4579af8 (    0xfc) CallbackInsurance::~CallbackInsurance() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4579bf4 (     0xc) ProgressCallbackWrapper(unsigned int, void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4579c00 (    0x18) SetShadowSdapiDiagnosticCheckHeapEveryCall() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4579c18 (    0x18) SetShadowSdapiCrashOnSendError() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4579c30 (     0x4) IntGlobalParam::~IntGlobalParam() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4579c34 (    0x28) IntGlobalParam::~IntGlobalParam() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4579c5c (     0x4) FpuUseMrecDefaults::~FpuUseMrecDefaults() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4579c60 (    0x20) FpuSaveRestore::~FpuSaveRestore() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4579c80 (     0x4) FpuSaveRestore::~FpuSaveRestore() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4579c84 (    0x40) Latch<DgnReadWriteLock, ReadWriteLatchAdapter>::release() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4579cc4 (     0x4) MrecInitModule_cpuid_mrecutil() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4579cc8 (    0xec) CPUID::initCPUID() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4579db4 (    0x14) TVertex::getInEdge() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4579dc8 (    0x3c) TVertex::getInEdgeCount() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4579e04 (    0x14) TVertex::getOutEdge() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4579e18 (    0x3c) TVertex::getOutEdgeCount() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4579e54 (    0xbc) TGraph::TGraph(char const*, TSegmenter&, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4579f10 (   0x36c) TGraph::addVertex(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457a27c (     0x4) TGraph::TGraph(char const*, TSegmenter&, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457a280 (    0x60) TGraph::~TGraph() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457a2e0 (     0x4) TGraph::~TGraph() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457a2e4 (    0x28) TGraph::getVertex(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457a30c (    0x7c) TGraph::setMap(TVertex*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457a388 (    0x2c) std::__1::vector<TVertex*, std::__1::allocator<TVertex*>>::resize(unsigned long, TVertex* const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457a3b4 (    0x74) TGraph::deleteVertex(TVertex*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457a428 (     0xc) TGraph::deleteEdge(TEdge*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457a434 (    0x54) TGraph::getNextVertex(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457a488 (    0x58) TGraph::getPrevVertex(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457a4e0 (   0x210) TGraph::addEdge(TVertex*, TVertex*, TEdgeData const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457a6f0 (   0x34c) TGraph::topologicalSort(std::__1::vector<TVertex const*, std::__1::allocator<TVertex const*>>&, TSearchCallback*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457aa3c (   0x1e4) TGraph::minimize() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457ac20 (   0x12c) std::__1::vector<TVertex*, std::__1::allocator<TVertex*>>::__append(unsigned long, TVertex* const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457ad4c (    0x18) std::__1::vector<TVertex*, std::__1::allocator<TVertex*>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457ad64 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<TVertex*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<TVertex*>>(std::__1::allocator<TVertex*>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457ad9c (    0x18) std::__1::vector<TEdge*, std::__1::allocator<TEdge*>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457adb4 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<TEdge*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<TEdge*>>(std::__1::allocator<TEdge*>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457adec (    0xac) std::__1::vector<bool, std::__1::allocator<bool>>::vector(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457ae98 (   0x16c) tknPrintString(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457b004 (    0x8c) tknPrintf(char const*, ...) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457b090 (   0x1a8) loggableUnicode(wchar_t const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457b238 (   0x1bc) operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char>>&, wchar_t const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457b3f4 (     0x4) MrecInitModule_lnbpcache_recogctl() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457b3f8 (    0x74) StartupLatticeNBestParamSpecMgr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457b46c (    0xc8) LatticeNBestParamSet::LatticeNBestParamSet(char const*, B_ParamSetType, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457b534 (     0x4) LatticeNBestParamSet::LatticeNBestParamSet(char const*, B_ParamSetType, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457b538 (    0x94) LatticeNBestParamSet::LatticeNBestParamSet(LatticeNBestParamSet const&, char const*, B_ParamSetType, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457b5cc (    0x40) LatticeNBestParamSet::setDefaults() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457b60c (    0x4c) LatticeNBestParamSet::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457b658 (    0x50) LatticeNBestParamSet::getBoolParameter(unsigned short, B_ParamQueryMode) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457b6a8 (   0x19c) LatticeNBestParamSet::getIntParameter(unsigned short, B_ParamQueryMode) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457b844 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b457b854 (    0x50) LatticeNBestParamSet::getDoubleParameter(unsigned short, B_ParamQueryMode) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457b8a4 (    0x50) LatticeNBestParamSet::getStringParameter(unsigned short, B_ParamQueryMode) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457b8f4 (    0x50) LatticeNBestParamSet::getEnumParameter(unsigned short, B_ParamQueryMode) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457b944 (    0x5c) LatticeNBestParamSet::setBoolParameter(unsigned short, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457b9a0 (    0xf4) LatticeNBestParamSet::setIntParameter(unsigned short, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457ba94 (    0x5c) LatticeNBestParamSet::setDoubleParameter(unsigned short, double) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457baf0 (    0x5c) LatticeNBestParamSet::setStringParameter(unsigned short, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457bb4c (    0x5c) LatticeNBestParamSet::setEnumParameter(unsigned short, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457bba8 (    0x44) LatticeNBestParamSet::~LatticeNBestParamSet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457bbec (    0x54) LatticeNBestParamSet::~LatticeNBestParamSet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457bc40 (    0x10) crashIntoDebugger() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457bc50 (    0x28) assertFailed(char const*, char const*, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457bc78 (    0x24) conditionalAssert(char const*, char const*, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457bc9c (     0x8) getDirSep() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457bca4 (    0xac) getFilePath(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457bd50 (     0xc) getWideNewLine() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457bd5c (    0xa4) wcsncasecmp [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457be00 (    0x9c) MrecInitModule_searchlm_kernel() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457be9c (   0x280) SearchLMScorer::SearchLMScorer(B_SearchLMLimitType, bool, int, int, bool, HashKEV<unsigned int, unsigned int, StateIdScope> const*, HashKEV<unsigned int, unsigned int, StateIdScope> const*, HashKEV<unsigned int, unsigned int, StateIdScope> const*, BitArray const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457c11c (     0xc) SearchLMScorer::SearchLMScorer(B_SearchLMLimitType, bool, int, int, bool, HashKEV<unsigned int, unsigned int, StateIdScope> const*, HashKEV<unsigned int, unsigned int, StateIdScope> const*, HashKEV<unsigned int, unsigned int, StateIdScope> const*, BitArray const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457c128 (    0x78) SearchLMScorer::~SearchLMScorer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457c1a0 (     0x4) SearchLMScorer::~SearchLMScorer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457c1a4 (  0x10d4) SearchLMScorer::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457d278 (   0x118) unsigned long sizeObject<LMContextData*>(DgnIOwnArray<LMContextData*> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457d390 (     0x4) SearchLMScorer::beginSearchLMScorerSyncRecog() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457d394 (    0xc4) SearchLMScorer::endSearchLMScorerSyncRecog() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457d458 (    0xac) SearchLMScorer::beginSearchLMScorerLMRescoring(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457d504 (     0x8) SearchLMScorer::endSearchLMScorerLMRescoring() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457d50c (    0x9c) SearchLMScorer::setInitialContext(DgnPrimArray<unsigned int> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457d5a8 (    0x94) SearchLMScorer::lmScoreFinalSilenceWithoutActualLM(unsigned int, CWIDAC const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457d63c (   0x4a0) SearchLMScorer::setContext(unsigned int, CWIDAC const&, DgnArray<DgnArray<RecogGerm>>*, bool, DgnArray<DgnPrimArray<unsigned int>> const*, LMStats*, bool, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457dadc (   0x124) SearchLMScorer::lmScoreFinalSilence(LMStats*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457dc00 (   0x128) SearchLMScorer::activateVoc(unsigned short, unsigned int const*, LMStats*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457dd28 (   0x100) SearchLMScorer::lmScoreNonAcousticWord(unsigned int, unsigned int, LMStats*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457de28 (   0x36c) SearchLMScorer::lmScoreNonSilCwidac(CWIDAC const&, LMStats*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457e194 (    0xc0) SearchLMScorer::setContext(unsigned short, unsigned int const*, LMStats*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457e254 (   0x1b8) SearchLMScorer::makeRestrictedContext(unsigned short, unsigned int const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457e40c (    0x6c) SearchLMScorer::setEmptyLMStates(DgnArray<DgnArray<RecogGerm>>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457e478 (   0x47c) SearchLMScorer::setLMStates(DgnArray<DgnArray<RecogGerm>>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457e8f4 (     0x8) SearchLMScorer::setRecognizer(Recognizer const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457e8fc (    0xbc) SearchLMScorer::unsetContext() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457e9b8 (    0x6c) DgnIOwnArray<LMContextData*>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457ea24 (    0x64) DgnIOwnArray<LMContextData*>::destructAt(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457ea88 (    0x64) void DgnDelete<WordLMContextData>(WordLMContextData*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457eaec (     0x4) MrecInitModule_bitarray_mrecutil() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457eaf0 (     0x8) BitArray::BitArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457eaf8 (    0x60) BitArray::setSize(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457eb58 (    0x2c) BitArray::BitArray(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457eb84 (    0x84) BitArray::copy(BitArray const&, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457ec08 (    0x44) BitArray::BitArray(BitArray const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457ec4c (    0x78) BitArray::operator=(BitArray const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457ecc4 (    0x40) BitArray::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457ed04 (    0x48) BitArray::~BitArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457ed4c (     0x4) BitArray::~BitArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457ed50 (    0xa8) BitArray::reallocElts(unsigned int, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457edf8 (    0xb4) BitArray::compact() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457eeac (    0xfc) BitArray::clearRange(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457efa8 (    0x40) BitArray::setSizeNoGrow(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457efe8 (    0x60) BitArray::addSize(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457f048 (    0x1c) BitArray::preAllocate(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457f064 (    0x38) BitArray::inplaceOrSameSize(BitArray const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457f09c (    0x38) BitArray::inplaceAndSameSize(BitArray const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457f0d4 (   0x100) BitArray::setRange(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457f1d4 (    0x64) BitArray::setBitsInRange(BitArray const&, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457f238 (   0x230) BitArray::getBitsFromRange(BitArray*, unsigned int, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457f468 (   0x158) BitArray::getBitsFromRangeAsBytes(unsigned char*, unsigned int, unsigned int, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457f5c0 (    0x80) BitArray::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457f640 (     0x4) MrecInitModule_frmtrans_recogctl() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457f644 (   0x374) SimpleFrameTransformer::SimpleFrameTransformer(BandwidthTransform const*, NeuralNet*, Imelda const*, FmpeMgr const*, PelMgr const*, unsigned int, double, bool, double) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457f9b8 (    0xc0) SimpleFrameTransformer::~SimpleFrameTransformer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457fa78 (     0x4) SimpleFrameTransformer::~SimpleFrameTransformer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457fa7c (    0x28) SimpleFrameTransformer::~SimpleFrameTransformer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457faa4 (    0x20) SimpleFrameTransformer::reset() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b457fac4 (   0xbc0) SimpleFrameTransformer::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4580684 (    0xac) SimpleFrameTransformer::doStage2ForRecogFramesOnly(SynchronizedArray<DgnPrimArray<unsigned char>>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4580730 (    0x8c) SynchronizedArray<DgnPrimArray<unsigned char>>::add(int, DgnPrimArray<unsigned char> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45807bc (   0x50c) SimpleFrameTransformer::transformFrame(int, bool, DgnPrimArray<unsigned char> const*, SynchronizedArray<DgnPrimArray<unsigned char>>*, DgnArray<DgnPrimArray<double>>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4580cc8 (    0xfc) SimpleFrameTransformer::concatenateFeatures(DgnPrimArray<unsigned char> const*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4580dc4 (    0x54) SimpleFrameTransformer::doImelda(int, DgnPrimArray<unsigned char> const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4580e18 (    0x54) SimpleFrameTransformer::doFmpeStage1(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4580e6c (    0x7c) SimpleFrameTransformer::getNextFrameTime() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4580ee8 (    0x50) SimpleFrameTransformer::getPreDecimatedEquivalent(int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4580f38 (    0x10) SimpleFrameTransformer::getPreDecimatedEquivalentWithoutWindow(int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4580f48 (    0x54) SimpleFrameTransformer::getRecogEquivalent(int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4580f9c (    0x34) SimpleFrameTransformer::transformFramesUntil(int, SynchronizedArray<DgnPrimArray<unsigned char>> const*, SynchronizedArray<DgnPrimArray<unsigned char>>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4580fd0 (   0x134) SimpleFrameTransformer::transformFramesUntil(int, bool, SynchronizedArray<DgnPrimArray<unsigned char>> const*, SynchronizedArray<DgnPrimArray<unsigned char>>*, DgnArray<DgnPrimArray<double>>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4581104 (    0x58) FrameTransformerThreadWorker::~FrameTransformerThreadWorker() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b458115c (    0x5c) FrameTransformerThreadWorker::~FrameTransformerThreadWorker() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45811b8 (    0xa8) FrameTransformerThreadWorker::onStartup() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4581260 (    0x6c) FrameTransformerThreadWorker::onShutdown() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45812cc (    0x54) void DgnDelete<SynchronizedArray<DgnPrimArray<unsigned char>>>(SynchronizedArray<DgnPrimArray<unsigned char>>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4581320 (    0x24) FrameTransformerThreadWorker::onPlay() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4581344 (   0x158) SynchronizedArray<DgnPrimArray<unsigned char>>::update(SynchronizedArray<DgnPrimArray<unsigned char>> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b458149c (   0x110) FrameTransformerThreadWorker::playOne() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45815ac (    0xa4) FrameTransformerThreadWorker::reset() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4581650 (   0x458) FrameTransformerThreadWorker::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4581aa8 (    0x6c) FrameTransformerThread::stopScoring(SynchronizedArray<DgnPrimArray<unsigned char>>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4581b14 (   0x6f0) FrameTransformerThread::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4582204 (   0x10c) ThreadedFrameTransformer::ThreadedFrameTransformer(B_DgnThreadExecutionType, BandwidthTransform const*, NeuralNet*, Imelda const*, FmpeMgr const*, PelMgr const*, unsigned int, double, bool, double) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4582310 (    0x6c) ThreadedFrameTransformer::~ThreadedFrameTransformer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b458237c (    0x64) void DgnDelete<RecogCtlThread>(RecogCtlThread*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45823e0 (     0x4) ThreadedFrameTransformer::~ThreadedFrameTransformer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45823e4 (    0x28) ThreadedFrameTransformer::~ThreadedFrameTransformer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b458240c (   0x1cc) ThreadedFrameTransformer::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45825d8 (    0x2c) ThreadedFrameTransformer::reset() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4582604 (     0xc) ThreadedFrameTransformer::getNextFrameTime() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4582610 (    0x30) ThreadedFrameTransformer::getPreDecimatedEquivalent(int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4582640 (    0x30) ThreadedFrameTransformer::getPreDecimatedEquivalentWithoutWindow(int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4582670 (    0x30) ThreadedFrameTransformer::getRecogEquivalent(int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45826a0 (     0x4) ThreadedFrameTransformer::beginTransSyncRecog() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45826a4 (     0x4) ThreadedFrameTransformer::endTransSyncRecog() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45826a8 (    0x80) ThreadedFrameTransformer::transformFramesUntil(int, SynchronizedArray<DgnPrimArray<unsigned char>> const*, SynchronizedArray<DgnPrimArray<unsigned char>>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4582728 (     0x4) ThreadedFrameTransformer::transformFramesUntil(int, bool, SynchronizedArray<DgnPrimArray<unsigned char>> const*, SynchronizedArray<DgnPrimArray<unsigned char>>*, DgnArray<DgnPrimArray<double>>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b458272c (    0x78) ThreadedFrameTransformer::maybeStartTransforming(SynchronizedArray<DgnPrimArray<unsigned char>> const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45827a4 (    0x44) FrameTransformerThread::isScoring() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45827e8 (    0x78) ThreadedFrameTransformer::maybeStopTransforming(bool, SynchronizedArray<DgnPrimArray<unsigned char>>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4582860 (    0x30) ThreadedFrameTransformer::getHalfWindowSize() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4582890 (     0xc) ThreadedFrameTransformer::getThreadId() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b458289c (   0x108) FrameTransformer::makeFrameTransformer(BandwidthTransform const*, NeuralNet*, Imelda const*, FmpeMgr const*, PelMgr const*, B_DgnThreadExecutionType, unsigned int, double, bool, double) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45829a4 (    0x10) SimpleFrameTransformer::beginTransSyncRecog() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45829b4 (    0x10) SimpleFrameTransformer::endTransSyncRecog() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45829c4 (     0x8) SimpleFrameTransformer::maybeStartTransforming(SynchronizedArray<DgnPrimArray<unsigned char>> const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45829cc (     0x4) SimpleFrameTransformer::maybeStopTransforming(bool, SynchronizedArray<DgnPrimArray<unsigned char>>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45829d0 (     0xc) SimpleFrameTransformer::getHalfWindowSize() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45829dc (     0x8) FrameTransformer::getThreadId() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45829e4 (     0x4) FrameTransformerThread::~FrameTransformerThread() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45829e8 (    0x28) FrameTransformerThread::~FrameTransformerThread() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4582a10 (    0xb4) DgnThread<FrameTransformerThreadWorker>::newWorker() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4582ac4 (     0x8) AbstractObserver::canNotify() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4582acc (     0x8) AbstractObserver::canBeNotified() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4582ad4 (     0x4) AbstractObserver::notify() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4582ad8 (     0x4) AbstractObserver::attach(AbstractObservation*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4582adc (     0x4) AbstractObserver::detach(AbstractObservation*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4582ae0 (    0x60) DgnThread<FrameTransformerThreadWorker>::DgnThread(B_DgnThreadExecutionType, MemChunkRegion*, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4582b40 (     0x4) DgnThread<FrameTransformerThreadWorker>::~DgnThread() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4582b44 (    0x28) DgnThread<FrameTransformerThreadWorker>::~DgnThread() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4582b6c (    0xc4) Latch<MemChunkRegion, LatchAdapter>::Latch(MemChunkRegion*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4582c30 (    0xa8) Latch<MemChunkRegion, LatchAdapter>::release() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4582cd8 (    0xc4) DgnArray<DgnPrimArray<unsigned char>>::DgnArray(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4582d9c (    0xc4) DgnArray<DgnPrimArray<double>>::DgnArray(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4582e60 (    0x30) MovingArrayWindow<DgnPrimArray<unsigned char>, DgnArray<DgnPrimArray<unsigned char>>>::~MovingArrayWindow() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4582e90 (    0x30) MovingArrayWindow<DgnPrimArray<double>, DgnArray<DgnPrimArray<double>>>::~MovingArrayWindow() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4582ec0 (    0xc8) TResultRelativePosition::TResultRelativePosition(TResultManager const*, TPItnResultHandle_fake** const*, TPItnResultHandle_fake** const*, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4582f88 (     0x4) TResultRelativePosition::TResultRelativePosition(TResultManager const*, TPItnResultHandle_fake** const*, TPItnResultHandle_fake** const*, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4582f8c (   0x5bc) TResult::TResult(char const*, std::__1::vector<wchar_t const*, std::__1::allocator<wchar_t const*>> const&, std::__1::vector<unsigned long, std::__1::allocator<unsigned long>> const&, TLexicon const*, bool, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4583548 (    0xb4) std::__1::vector<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>, std::__1::allocator<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>>::reserve(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45835fc (    0x80) TResult::setText(char const*, std::__1::vector<unsigned long, std::__1::allocator<unsigned long>> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b458367c (    0xb8) std::__1::vector<TItnControlState, std::__1::allocator<TItnControlState>>::reserve(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4583734 (   0xccc) TResult::TResult(TBlock const*, TBlock const*, unsigned long, std::__1::vector<TItnWordData, std::__1::allocator<TItnWordData>> const&, TLexicon const*, TItnControlState const&, bool, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4584400 (    0xa8) std::__1::vector<unsigned long, std::__1::allocator<unsigned long>>::reserve(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45844a8 (   0x2a0) TResult::TResult(TResult const*, TResult const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4584748 (   0x110) void std::__1::vector<unsigned long, std::__1::allocator<unsigned long>>::assign<std::__1::__wrap_iter<unsigned long const*>, 0>(std::__1::__wrap_iter<unsigned long const*>, std::__1::__wrap_iter<unsigned long const*>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4584858 (   0x1f8) std::__1::__wrap_iter<unsigned long*> std::__1::vector<unsigned long, std::__1::allocator<unsigned long>>::insert<std::__1::__wrap_iter<unsigned long const*>, 0>(std::__1::__wrap_iter<unsigned long const*>, std::__1::__wrap_iter<unsigned long const*>, std::__1::__wrap_iter<unsigned long const*>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4584a50 (   0x184) void std::__1::vector<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>, std::__1::allocator<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>>::assign<std::__1::__wrap_iter<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> const*>, 0>(std::__1::__wrap_iter<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> const*>, std::__1::__wrap_iter<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> const*>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4584bd4 (   0x214) std::__1::__wrap_iter<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>*> std::__1::vector<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>, std::__1::allocator<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>>::insert<std::__1::__wrap_iter<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> const*>, 0>(std::__1::__wrap_iter<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> const*>, std::__1::__wrap_iter<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> const*>, std::__1::__wrap_iter<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> const*>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4584de8 (   0x128) void std::__1::vector<TItnControlState, std::__1::allocator<TItnControlState>>::assign<std::__1::__wrap_iter<TItnControlState const*>, 0>(std::__1::__wrap_iter<TItnControlState const*>, std::__1::__wrap_iter<TItnControlState const*>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4584f10 (   0x234) std::__1::__wrap_iter<TItnControlState*> std::__1::vector<TItnControlState, std::__1::allocator<TItnControlState>>::insert<std::__1::__wrap_iter<TItnControlState const*>, 0>(std::__1::__wrap_iter<TItnControlState const*>, std::__1::__wrap_iter<TItnControlState const*>, std::__1::__wrap_iter<TItnControlState const*>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4585144 (   0x360) TResult::TResult(TResult const*, unsigned long, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45854a4 (  0x50d8) TResult::TResult(char const*, unsigned long, TLexicon*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b458a57c (    0x38) TIntParam::get() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b458a5b4 (   0x11c) void std::__1::vector<unsigned long, std::__1::allocator<unsigned long>>::assign<unsigned int const*, 0>(unsigned int const*, unsigned int const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b458a6d0 (    0x2c) std::__1::vector<TItnControlState, std::__1::allocator<TItnControlState>>::resize(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b458a6fc (    0x68) TResult::~TResult() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b458a764 (   0x4d8) TResult::serialize(char*, unsigned long, TLexicon*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b458ac3c (    0x40) TResultManager::TResultManager(TTokenizer*, TLexicon*, TItnParamManager*, TItnRuleManager*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b458ac7c (    0x8c) TResultManager::~TResultManager() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b458ad08 (     0x4) TResultManager::~TResultManager() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b458ad0c (    0x28) TResultManager::~TResultManager() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b458ad34 (    0x24) TResultManager::getResult(TPItnResultHandle_fake**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b458ad58 (   0x168) TResultManager::create(TBlock const*, TBlock const*, unsigned long, std::__1::vector<TItnWordData, std::__1::allocator<TItnWordData>> const&, TItnControlState const&, bool, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b458aec0 (    0x4c) TResultManager::destroy(TPItnResultHandle_fake**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b458af0c (   0xadc) TResultManager::splitAtTextIndex(TPItnResultHandle_fake**, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b458b9e8 (   0x148) TResultManager::copyAlignRange(TPItnResultHandle_fake**, unsigned long, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b458bb30 (   0x5b4) tokenizerResultToFsa(unsigned long, unsigned long, TLexicon*, TTokenizer*, TFsa&, std::__1::vector<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long>>>&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b458c0e4 (   0x150) wordsToFsa(std::__1::__wrap_iter<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> const*>, std::__1::__wrap_iter<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> const*>, TLexicon*, TFsa&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b458c234 (   0x1f0) alignFsa(TFsa&, TFsa&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>&, std::__1::vector<TTrans const*, std::__1::allocator<TTrans const*>>*, std::__1::vector<TTrans const*, std::__1::allocator<TTrans const*>>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b458c424 (   0x928) create(char const*, unsigned long, unsigned long, std::__1::vector<TTrans const*, std::__1::allocator<TTrans const*>> const&, std::__1::vector<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long>>>&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, TLexicon const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b458cd4c (   0x1b4) TResultManager::merge(TPItnResultHandle_fake** const*, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b458cf00 (   0x22c) TResultManager::split(TPItnResultHandle_fake**, std::__1::vector<unsigned long, std::__1::allocator<unsigned long>> const&, TBuffer<TPItnResultHandle_fake**>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b458d12c (   0x120) TResultManager::deserialize(char const*, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b458d24c (    0x2c) TResultManager::setResultText(TPItnResultHandle_fake**, char const*, std::__1::vector<unsigned long, std::__1::allocator<unsigned long>>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b458d278 (   0x52c) TResultManager::align(TPItnResultHandle_fake** const*, unsigned long, TPItnResultHandle_fake** const*, unsigned long, TBuffer<char>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b458d7a4 (   0x504) std::__1::pair<unsigned long, unsigned long> TAligner<TWord const*, TCost<TWord const*, std::__1::equal_to<TWord const*>>>::align<std::__1::__wrap_iter<TWord const**>>(std::__1::__wrap_iter<TWord const**>, std::__1::__wrap_iter<TWord const**>, std::__1::__wrap_iter<TWord const**>, std::__1::__wrap_iter<TWord const**>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b458dca8 (  0x17a4) TResultManager::replace(TPItnResultHandle_fake** const*, unsigned long, unsigned long, unsigned long, char const*, TBuffer<TPItnResultHandle_fake**>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b458f44c (    0x94) TResultManager::getAllHints(TBuffer<TPItnHintHandle_fake**>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b458f4e0 (    0xd8) TBuffer<TPItnHintHandle_fake**>::resize(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b458f5b8 (    0x28) TResultManager::getHintDescription(TPItnHintHandle_fake**, TBuffer<wchar_t>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b458f5e0 (   0x144) TResultManager::createHint(unsigned long, unsigned long, char const*, THint::TType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b458f724 (    0x54) THint::~THint() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b458f778 (   0xd0c) TResultManager::createHint(unsigned long, unsigned long, THint::TType, wchar_t const*, wchar_t const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4590484 (  0x1494) TResultManager::applyHint(TPItnHintHandle_fake**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4591918 (    0x60) TBoolParam::set(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4591978 (    0x14) TResultManager::getHintRange(TPItnHintHandle_fake**) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459198c (     0x8) TResultManager::getResultWithHints() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4591994 (    0x3c) TResultManager::isValidHint(TPItnHintHandle_fake**) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45919d0 (    0x2c) std::__1::vector<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long>>>::resize(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45919fc (   0x120) std::__1::vector<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long>>>::__append(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4591b1c (    0x18) std::__1::vector<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long>>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4591b34 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, unsigned long>>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<std::__1::pair<unsigned long, unsigned long>>>(std::__1::allocator<std::__1::pair<unsigned long, unsigned long>>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4591b6c (   0xca0) TAligner<TWord const*, TCost<TWord const*, std::__1::equal_to<TWord const*>>>::align(TFsa const*, TFsa const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>&, std::__1::vector<TTrans const*, std::__1::allocator<TTrans const*>>*, std::__1::vector<TTrans const*, std::__1::allocator<TTrans const*>>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459280c (    0x2c) std::__1::vector<TTrans const*, std::__1::allocator<TTrans const*>>::resize(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4592838 (    0xa8) std::__1::vector<TTrans const*, std::__1::allocator<TTrans const*>>::reserve(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45928e0 (   0x13c) std::__1::vector<char, std::__1::allocator<char>>::__append(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4592a1c (    0x18) std::__1::vector<char, std::__1::allocator<char>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4592a34 (   0x114) std::__1::vector<TTrans const*, std::__1::allocator<TTrans const*>>::__append(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4592b48 (   0x104) TResult::TResult(TResult const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4592c4c (    0xb8) std::__1::vector<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>, std::__1::allocator<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>>::vector(std::__1::vector<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>, std::__1::allocator<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4592d04 (    0x90) std::__1::vector<TItnControlState, std::__1::allocator<TItnControlState>>::vector(std::__1::vector<TItnControlState, std::__1::allocator<TItnControlState>> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4592d94 (    0x44) std::__1::vector<TItnControlState, std::__1::allocator<TItnControlState>>::__vallocate[abi:v160006](unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4592dd8 (    0x18) std::__1::vector<TItnControlState, std::__1::allocator<TItnControlState>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4592df0 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<TItnControlState>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<TItnControlState>>(std::__1::allocator<TItnControlState>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4592e28 (    0x84) std::__1::vector<unsigned long, std::__1::allocator<unsigned long>>::vector(std::__1::vector<unsigned long, std::__1::allocator<unsigned long>> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4592eac (    0xa4) TAligner<TWord const*, TCost<TWord const*, std::__1::equal_to<TWord const*>>>::~TAligner() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4592f50 (    0x60) std::__1::pair<std::__1::__wrap_iter<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> const*>, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>*> std::__1::__unwrap_and_dispatch[abi:v160006]<std::__1::__overload<std::__1::__copy_loop<std::__1::_ClassicAlgPolicy>, std::__1::__copy_trivial>, std::__1::__wrap_iter<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> const*>, std::__1::__wrap_iter<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> const*>, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>*, 0>(std::__1::__wrap_iter<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> const*>, std::__1::__wrap_iter<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1...
                0x00000001b4592fb0 (    0xa4) std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>* std::__1::__uninitialized_allocator_copy[abi:v160006]<std::__1::allocator<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>, std::__1::__wrap_iter<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> const*>, std::__1::__wrap_iter<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> const*>, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>*>(std::__1::allocator<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>&, std::__1::__wrap_iter<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> const*>, std::__1::__wrap_iter<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::...
                0x00000001b4593054 (    0x70) std::__1::vector<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>, std::__1::allocator<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>>::__move_range(std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>*, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>*, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45930c4 (    0xb4) std::__1::vector<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>, std::__1::allocator<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>>::__swap_out_circular_buffer(std::__1::__split_buffer<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>, std::__1::allocator<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>&>&, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4593178 (    0x90) std::__1::pair<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>*, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>*> std::__1::__move_backward_loop<std::__1::_ClassicAlgPolicy>::operator()[abi:v160006]<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>*, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>*, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>*>(std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>*, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>*, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4593208 (    0x80) std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>* std::__1::__uninitialized_allocator_move_if_noexcept[abi:v160006]<std::__1::allocator<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>*, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>*, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>*>(std::__1::allocator<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>&, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>*, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>*, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::a...
                0x00000001b4593288 (   0x128) std::__1::vector<TItnControlState, std::__1::allocator<TItnControlState>>::__append(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45933b0 (    0x18) std::__1::vector<TItnControlState32, std::__1::allocator<TItnControlState32>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45933c8 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<TItnControlState32>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<TItnControlState32>>(std::__1::allocator<TItnControlState32>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4593400 (    0x3c) std::__1::vector<THint, std::__1::allocator<THint>>::~vector[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459343c (    0x98) std::__1::vector<THint, std::__1::allocator<THint>>::__destroy_vector::operator()[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45934d4 (    0x68) std::__1::allocator<THint>::destroy[abi:v160006](THint*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459353c (    0x18) std::__1::vector<TResult*, std::__1::allocator<TResult*>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4593554 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<TResult*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<TResult*>>(std::__1::allocator<TResult*>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459358c (   0x158) void std::__1::vector<THint, std::__1::allocator<THint>>::__push_back_slow_path<THint>(THint&&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45936e4 (    0x78) std::__1::vector<THint, std::__1::allocator<THint>>::__swap_out_circular_buffer(std::__1::__split_buffer<THint, std::__1::allocator<THint>&>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459375c (    0x18) std::__1::vector<THint, std::__1::allocator<THint>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4593774 (    0x4c) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<THint>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<THint>>(std::__1::allocator<THint>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45937c0 (    0xe0) std::__1::reverse_iterator<THint*> std::__1::__uninitialized_allocator_move_if_noexcept[abi:v160006]<std::__1::allocator<THint>, std::__1::reverse_iterator<THint*>, std::__1::reverse_iterator<THint*>, std::__1::reverse_iterator<THint*>>(std::__1::allocator<THint>&, std::__1::reverse_iterator<THint*>, std::__1::reverse_iterator<THint*>, std::__1::reverse_iterator<THint*>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45938a0 (    0x38) std::__1::__exception_guard_exceptions<std::__1::_AllocatorDestroyRangeReverse<std::__1::allocator<THint>, std::__1::reverse_iterator<THint*>>>::~__exception_guard_exceptions[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45938d8 (    0x54) std::__1::_AllocatorDestroyRangeReverse<std::__1::allocator<THint>, std::__1::reverse_iterator<THint*>>::operator()[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459392c (    0x34) std::__1::__split_buffer<THint, std::__1::allocator<THint>&>::~__split_buffer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4593960 (    0x48) std::__1::__split_buffer<THint, std::__1::allocator<THint>&>::clear[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45939a8 (   0x170) TBuffer<TPItnRuleControl>::insert(unsigned long, TPItnRuleControl const*, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4593b18 (     0x4) MrecInitModule_filehist_fileutil() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4593b1c (    0x60) FileHistory::FileHistory() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4593b7c (     0x4) FileHistory::FileHistory() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4593b80 (    0x58) FileHistory::FileHistory(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4593bd8 (     0x4) FileHistory::FileHistory(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4593bdc (    0x38) FileHistory::~FileHistory() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4593c14 (     0x4) FileHistory::~FileHistory() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4593c18 (    0xc8) FileHistory::addEntryWithVersionAndCurrentTime(char const*, bool, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4593ce0 (    0x6c) DgnIOwnArray<EmbeddedRecSpec*>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4593d4c (   0x138) FileHistory::loadFileHistory(DFile*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4593e84 (    0x74) FileHistory::addOneEntry(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4593ef8 (   0x1d4) FileHistory::limitEntries() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45940cc (   0x1f4) FileHistory::saveFileHistory(DFile*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45942c0 (    0x7c) addVersionAndCurrentTime(DgnString*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459433c (    0x38) FileHistory::addEntry(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4594374 (    0x98) FileHistory::addEntryWithElapsedTime(char const*, SnapTime const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459440c (    0x2c) sizeObject(FileHistory const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4594438 (    0xf8) unsigned long sizeObject<DgnString*>(DgnIOwnArray<DgnString*> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4594530 (    0x34) void DgnDelete<EmbeddedRecSpec>(EmbeddedRecSpec*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4594564 (     0x4) MrecInitModule_nodedat_user() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4594568 (    0x10) sizeObject(NodeScoringData const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4594578 (     0x4) MrecInitModule_pwpcolla_voc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459457c (    0xc0) PrefPronCmp(unsigned int, unsigned int, Voc const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459463c (    0xc0) PrefPicModelIdPronCmp(unsigned int, unsigned int, Voc const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45946fc (     0xc) PrefiltererWordIdPronCollArray::PrefiltererWordIdPronCollArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4594708 (     0x4) PrefiltererWordIdPronCollArray::~PrefiltererWordIdPronCollArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459470c (    0x78) PrefiltererWordIdPronCollArray::getInsertIndex(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4594784 (    0x4c) PrefWordIdPronSearchCmpFunc(void const*, void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45947d0 (    0x44) PrefWordIdPicModelIdPronSearchCmpFunc(void const*, void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4594814 (    0x34) PrefiltererWordIdPronCollArray::sortArray(DgnPrimArray<unsigned int>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4594848 (   0x9a4) void mrec_qsort_r<SortWordIdsByPrefPronScope>(void*, unsigned long, unsigned long, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45951ec (   0x9a4) void mrec_qsort_r<SortWordIdsByPrefPicModelIdPronScope>(void*, unsigned long, unsigned long, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4595b90 (     0x4) PrefiltererWordIdPronCollArray::compact() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4595b94 (     0x8) PrefiltererWordIdPronCollArray::removeAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4595b9c (   0x230) PrefiltererWordIdPronCollArray::mergeLargeSortedArray(DgnPrimArray<unsigned int> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4595dcc (   0x170) PrefiltererWordIdPronCollArray::mergeSmallSortedArray(DgnPrimArray<unsigned int> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4595f3c (   0x148) PrefiltererWordIdPronCollArray::removeSortedArray(DgnPrimArray<unsigned int> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4596084 (    0xcc) PrefiltererWordIdPronCollArray::addArray(DgnPrimArray<unsigned int> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4596150 (    0x74) PrefiltererWordIdPronCollArray::removeArray(DgnPrimArray<unsigned int> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45961c4 (    0x10) PrefiltererWordIdPronCollArray::writeObject(DgnStream*, unsigned int&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45961d4 (    0x10) PrefiltererWordIdPronCollArray::readObject(DgnStream*, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45961e4 (    0x4c) PrefiltererWordIdPronCollArray::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4596230 (     0x4) MrecInitModule_sdadapt_sdapi() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4596234 (    0xb0) TRegExpCompiler::TRegExpCompiler(TLocaleInfo const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45962e4 (    0x50) TRegExpCompiler::~TRegExpCompiler() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4596334 (     0x4) TRegExpCompiler::~TRegExpCompiler() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4596338 (    0x28) TRegExpCompiler::~TRegExpCompiler() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4596360 (   0x134) TRegExpCompiler::mergeStateData(std::__1::set<TStateDataDef const*, std::__1::less<TStateDataDef const*>, std::__1::allocator<TStateDataDef const*>> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4596494 (   0x318) TRegExpCompiler::compileCharacter(wchar_t const*&, TRegExpCase, TState*, TState*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45967ac (   0x430) TRegExpCompiler::compileRange(wchar_t, wchar_t, TRegExpCase, TState*, TState*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4596bdc (   0x19c) TRegExpCompiler::compileNegatedSet(wchar_t const*&, TRegExpCase, TState*, TState*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4596d78 (    0xc0) TRegExpCompiler::compileSet(wchar_t const*&, TRegExpCase, TState*, TState*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4596e38 (   0xa8c) TRegExpCompiler::compile(wchar_t const*&, TRegExpCase, TState*, TState*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45978c4 (   0xc84) parseRepetition(wchar_t const*&, unsigned long&, unsigned long&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4598548 (   0x30c) TRegExpCompiler::compileFlags(wchar_t const*&, TState*, TState*&, TRegExpCase&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4598854 (   0x52c) TRegExpCompiler::add(wchar_t const*, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4598d80 (   0x124) TRegExpCompiler::compressDfaRec(TState const*, TRegExpState*&, TRegExpTransition*&, unsigned long*&, std::__1::vector<TRegExpState*, std::__1::allocator<TRegExpState*>>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4598ea4 (   0x1ec) TRegExpCompiler::compressDfa(TFsa const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4599090 (    0x2c) std::__1::vector<TRegExpState*, std::__1::allocator<TRegExpState*>>::resize(unsigned long, TRegExpState* const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45990bc (    0x90) TRegExpCompiler::compile() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459914c (    0xfc) TRegExpSearch::searchNegatedRange(TRegExpState const*, wchar_t const*, TRegExpCase) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4599248 (    0xf4) TRegExpSearch::searchNegated(TRegExpState const*, wchar_t const*, TRegExpCase) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459933c (    0xc4) TRegExpSearch::searchNegatedCommand(TRegExpState const*, wchar_t const*, TRegExpCase) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4599400 (   0x30c) TRegExpSearch::search(TRegExpState const*, wchar_t const*, TRegExpCase) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459970c (   0x7e4) testCharClass(wchar_t, wchar_t) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4599ef0 (    0x30) (null) [FUNC, FunctionStarts] 
                0x00000001b4599f20 (    0x30) (null) [FUNC, FunctionStarts] 
                0x00000001b4599f50 (   0x104) TRegExpSearch::searchRange(TRegExpState const*, wchar_t const*, TRegExpCase) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459a054 (   0x17c) TRegExpSearch::searchCommand(TRegExpState const*, wchar_t const*, TRegExpCase) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459a1d0 (    0x7c) TRegExpSearch::operator()(wchar_t const*, TRegExpAnchor, std::__1::vector<TRegExpMatch, std::__1::allocator<TRegExpMatch>>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459a24c (    0x8c) TRegExpSearch::operator()(wchar_t const*, TRegExpAnchor) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459a2d8 (     0xc) TRegExp::TRegExp(TLocaleInfo const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459a2e4 (    0x80) TRegExp::add(wchar_t const*, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459a364 (    0x60) TRegExp::doneAdding() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459a3c4 (    0x3c) TRegExp::TRegExp(wchar_t const*, TLocaleInfo const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459a400 (    0x60) TRegExp::~TRegExp() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459a460 (     0x4) TRegExp::~TRegExp() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459a464 (    0x3c) TRegExp::match(wchar_t const*, TRegExpAnchor, std::__1::vector<TRegExpMatch, std::__1::allocator<TRegExpMatch>>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459a4a0 (    0x3c) TRegExp::match(wchar_t const*, TRegExpAnchor) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459a4dc (   0x10c) TRegExp::stringToRegExp(wchar_t const*, TBuffer<wchar_t>&, TRegExpCase, TRegExpAnchor) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459a5e8 (    0x50) TRegExpGraph::~TRegExpGraph() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459a638 (   0x12c) std::__1::vector<TRegExpState*, std::__1::allocator<TRegExpState*>>::__append(unsigned long, TRegExpState* const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459a764 (    0x18) std::__1::vector<TRegExpState*, std::__1::allocator<TRegExpState*>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459a77c (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<TRegExpState*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<TRegExpState*>>(std::__1::allocator<TRegExpState*>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459a7b4 (   0x270) callBackParam(TGrammarCompiler::TArgument const*, unsigned long, void*, void*, TAllocator&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459aa24 (   0x1d4) callBackGetLength(TGrammarCompiler::TArgument const*, unsigned long, void*, void*, TAllocator&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459abf8 (   0x1f4) callBackRomanToDigit(TGrammarCompiler::TArgument const*, unsigned long, void*, void*, TAllocator&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459adec (   0x214) callBackDigitToRoman(TGrammarCompiler::TArgument const*, unsigned long, void*, void*, TAllocator&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459b000 (   0x274) callBackAllCaps(TGrammarCompiler::TArgument const*, unsigned long, void*, void*, TAllocator&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459b274 (   0x274) callBackNoCaps(TGrammarCompiler::TArgument const*, unsigned long, void*, void*, TAllocator&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459b4e8 (    0x98) callBackCapitalize(TGrammarCompiler::TArgument const*, unsigned long, void*, void*, TAllocator&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459b580 (   0x18c) callBackRemoveDiacritics(TGrammarCompiler::TArgument const*, unsigned long, void*, void*, TAllocator&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459b70c (   0x3c0) callBackFormat(TGrammarCompiler::TArgument const*, unsigned long, void*, void*, TAllocator&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459bacc (   0x180) callBackGetCategoryTag(TGrammarCompiler::TArgument const*, unsigned long, void*, void*, TAllocator&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459bc4c (   0x1e4) callBackGetWrittenForm(TGrammarCompiler::TArgument const*, unsigned long, void*, void*, TAllocator&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459be30 (   0x208) callBackFind(TGrammarCompiler::TArgument const*, unsigned long, void*, void*, TAllocator&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459c038 (   0x1b0) callBackCopy(TGrammarCompiler::TArgument const*, unsigned long, void*, void*, TAllocator&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459c1e8 (     0x4) MrecInitModule_mixadapt_recogctl() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459c1ec (    0x8c) BasisAccum::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459c278 (    0x5c) WeightAccum::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459c2d4 (    0x50) DurAccum::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459c324 (    0xc8) anyTagsMatch(std::__1::vector<TPItnTagHandle_fake**, std::__1::allocator<TPItnTagHandle_fake**>> const&, std::__1::vector<TPItnTagHandle_fake**, std::__1::allocator<TPItnTagHandle_fake**>> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459c3ec (   0xb30) TTag::TTag(TFileObject const*, TTagManager const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459cf1c (    0x74) TTag::TTag(wchar_t const*, unsigned long, TPItnTagHandle_fake**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459cf90 (  0x1024) TTagManager::TTagManager(TInputStream&, TLexiconParamManager*, TItnParamManager*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459dfb4 (    0xb4) TTagManager::addParamTag(wchar_t const*, TPItnTagHandle_fake**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459e068 (   0x290) TTagManager::addTag(wchar_t const*, TPItnTagHandle_fake**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459e2f8 (    0xe4) getItnTagVersion() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459e3dc (   0x2a8) TTagManager::addTag(TFileObject const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459e684 (    0x68) TTagManager::freeMemory() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459e6ec (     0x4) THashMap<wchar_t const*, TTag const*, THash<wchar_t const*>, TWideCharEqualTo>::~THashMap() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459e6f0 (     0x4) TTagManager::TTagManager(TInputStream&, TLexiconParamManager*, TItnParamManager*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459e6f4 (    0x5c) TTagManager::~TTagManager() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459e750 (     0x4) TTagManager::~TTagManager() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459e754 (    0x28) TTagManager::~TTagManager() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459e77c (   0x114) TTagManager::storeTag(TTag*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459e890 (    0xb4) TTagManager::addWordRuleTag(wchar_t const*, TPItnTagHandle_fake**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459e944 (   0x128) THashBase<std::__1::pair<wchar_t const* const, TTag const*>, THashMapCompare<std::__1::pair<wchar_t const* const, TTag const*>, TWideCharEqualTo>, THashMapFunction<std::__1::pair<wchar_t const* const, TTag const*>, THash<wchar_t const*>>>::insert(std::__1::pair<wchar_t const* const, TTag const*> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459ea6c (    0x70) TTagManager::getAllTags(TBuffer<TPItnTagHandle_fake**>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459eadc (    0x24) TTagManager::getTag(TPItnTagHandle_fake**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459eb00 (    0x24) TTagManager::getTag(TPItnTagHandle_fake**) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459eb24 (    0x48) TTagManager::getTag(wchar_t const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459eb6c (    0x34) TTagManager::getTagName(TPItnTagHandle_fake**, TBuffer<wchar_t>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459eba0 (    0x24) TTagManager::getTagDescription(TPItnTagHandle_fake**, TBuffer<wchar_t>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459ebc4 (    0x14) TTagManager::getTagClientData(TPItnTagHandle_fake**) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459ebd8 (    0x14) TTagManager::setTagClientData(TPItnTagHandle_fake**, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459ebec (    0x2c) TTagManager::isValidTag(TPItnTagHandle_fake**) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459ec18 (    0x84) std::__1::vector<TFileVersionDescriptor, std::__1::allocator<TFileVersionDescriptor>>::vector[abi:v160006](std::initializer_list<TFileVersionDescriptor>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459ec9c (    0x44) std::__1::vector<TFileVersionDescriptor, std::__1::allocator<TFileVersionDescriptor>>::__vallocate[abi:v160006](unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459ece0 (    0x18) std::__1::vector<TFileVersionDescriptor, std::__1::allocator<TFileVersionDescriptor>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459ecf8 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<TFileVersionDescriptor>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<TFileVersionDescriptor>>(std::__1::allocator<TFileVersionDescriptor>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459ed30 (    0x50) THashBase<std::__1::pair<wchar_t const* const, TTag const*>, THashMapCompare<std::__1::pair<wchar_t const* const, TTag const*>, TWideCharEqualTo>, THashMapFunction<std::__1::pair<wchar_t const* const, TTag const*>, THash<wchar_t const*>>>::~THashBase() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459ed80 (     0x4) THashBase<std::__1::pair<wchar_t const* const, TTag const*>, THashMapCompare<std::__1::pair<wchar_t const* const, TTag const*>, TWideCharEqualTo>, THashMapFunction<std::__1::pair<wchar_t const* const, TTag const*>, THash<wchar_t const*>>>::~THashBase() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459ed84 (    0x28) THashBase<std::__1::pair<wchar_t const* const, TTag const*>, THashMapCompare<std::__1::pair<wchar_t const* const, TTag const*>, TWideCharEqualTo>, THashMapFunction<std::__1::pair<wchar_t const* const, TTag const*>, THash<wchar_t const*>>>::~THashBase() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459edac (    0x44) TTag::~TTag() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459edf0 (    0xb4) THashBase<std::__1::pair<wchar_t const* const, TTag const*>, THashMapCompare<std::__1::pair<wchar_t const* const, TTag const*>, TWideCharEqualTo>, THashMapFunction<std::__1::pair<wchar_t const* const, TTag const*>, THash<wchar_t const*>>>::find(std::__1::pair<wchar_t const* const, TTag const*> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459eea4 (    0x28) THashMap<wchar_t const*, TTag const*, THash<wchar_t const*>, TWideCharEqualTo>::~THashMap() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459eecc (    0x18) std::__1::vector<TTag*, std::__1::allocator<TTag*>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459eee4 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<TTag*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<TTag*>>(std::__1::allocator<TTag*>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459ef1c (     0x4) MrecInitModule_lpc_sigproc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459ef20 (     0x4) MrecInitModule_siltrack_sigproc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459ef24 (     0x4) MrecInitModule_mrecver_mrecutil() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459ef28 (     0xc) GetMrecName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459ef34 (     0xc) GetMrecVersion() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459ef40 (     0xc) GetMrecVersionNumberString() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459ef4c (   0x1f4) GetFullMrecDescription(DgnString*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459f140 (    0xc4) InternalCompareMrecVersions(char const*, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459f204 (   0x290) ParseMrecVersion(char const*, DgnPrimArray<unsigned int>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459f494 (    0xc4) InternalCompareMrecForkVersions(char const*, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459f558 (    0x9c) MrecInitModule_fmpe_pel() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459f5f4 (    0x64) FmpeMgr::~FmpeMgr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459f658 (     0x4) FmpeMgr::~FmpeMgr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b459f65c (   0xaa8) FmpeMgr::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a0104 (    0xe0) void writeSharedObject<unsigned short>(DgnSharedMemStream*, DgnPrimArray<unsigned short>&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a01e4 (    0xcc) void writeSharedObject<int>(DgnSharedMemStream*, DgnPrimArray<int>&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a02b0 (    0xf8) void readSharedObject<unsigned short>(DgnSharedMemStream*, DgnPrimArray<unsigned short>&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a03a8 (    0xe4) void readSharedObject<unsigned int>(DgnSharedMemStream*, DgnPrimArray<unsigned int>&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a048c (   0x1bc) FmpeMgr::saveFmpeModel(DFile*, DFileChecksums*, bool, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a0648 (   0x6f0) FmpeMgr::saveProjectionMatrix(DFile*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a0d38 (   0x2d4) FmpeMgr::getSelectedComponentsWithProbabilities(int, DgnPrimArray<unsigned char> const&, PelScorer*, unsigned short&, DgnPrimArray<unsigned int>&, DgnPrimArray<double>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a100c (   0x3a4) FmpeMgr::fmpeStage1(int, DgnPrimArray<unsigned char> const&, DgnPrimArray<double>*, PelScorer*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a13b0 (   0x210) FmpeMgr::fmpeStage2(int, MovingArrayWindow<DgnPrimArray<unsigned char>, DgnArray<DgnPrimArray<unsigned char>>>&, MovingArrayWindow<DgnPrimArray<double>, DgnArray<DgnPrimArray<double>>>&, DgnPrimArray<unsigned char>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a15c0 (     0x4) MrecInitModule_sdlm_sdapi() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a15c4 (   0xd48) SDLm_LmScore [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a230c (    0x20) (null) [FUNC, FunctionStarts] 
                0x00000001b45a232c (   0x104) LMScoreDetails::appendDetails(LMScoreDetails const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a2430 (    0x44) LMScoreDetails::~LMScoreDetails() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a2474 (   0x1d0) SDLm_ClearLoadedData [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a2644 (    0x4c) DgnPrimArray<B_LMScoreComponentType>::~DgnPrimArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a2690 (    0xb0) MrecInitModule_dthread_mrecutil() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a2740 (    0x34) DgnEvent::~DgnEvent() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a2774 (    0x50) DgnEvent::signal() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a27c4 (    0x58) DgnEvent::wait() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a281c (   0x160) DgnEvent::timedWait(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a297c (    0x84) recursive_mutex_init(_opaque_pthread_mutex_t*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a2a00 (    0x3c) sizeObject(DgnLock const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a2a3c (    0x6c) DgnLock::~DgnLock() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a2aa8 (     0x4) DgnLock::~DgnLock() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a2aac (    0x24) sizeObject(DgnReadWriteLock const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a2ad0 (    0x2c) DgnReadWriteLock::DgnReadWriteLock() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a2afc (    0x2c) DgnReadWriteLock::~DgnReadWriteLock() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a2b28 (     0x4) DgnReadWriteLock::acquireRead() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a2b2c (     0x4) DgnReadWriteLock::releaseRead() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a2b30 (     0x4) DgnReadWriteLock::acquireWrite() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a2b34 (     0x4) DgnReadWriteLock::releaseWrite() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a2b38 (    0x28) sizeObject(DgnSharedLock const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a2b60 (    0xf0) DgnSharedLock::create(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a2c50 (   0x18c) DgnSharedLock::acquire(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a2ddc (    0xac) sizeObject(DgnThreadTrace const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a2e88 (   0x148) DgnThreadTrace::DgnThreadTrace(DgnThreadTrace const&, MemChunkRegion*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a2fd0 (    0x54) DgnThreadTrace::~DgnThreadTrace() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a3024 (   0x198) CurryDgnThreadMain(void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a31bc (   0x564) DgnThreadWorker::main() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a3720 (   0x2c8) DgnThreadClient::DgnThreadClient(B_DgnThreadExecutionType, MemChunkRegion*, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a39e8 (   0x1f0) DgnThreadClient::~DgnThreadClient() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a3bd8 (    0xbc) DgnThreadMgr::removeThread(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a3c94 (    0x30) DgnThreadClient::hasErrored() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a3cc4 (    0x20) DgnThreadClient::isLive() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a3ce4 (    0x40) DgnThreadClient::isPlaying() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a3d24 (    0x98) DgnThreadClient::error() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a3dbc (    0x64) void DgnDelete<DgnThreadWorker>(DgnThreadWorker*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a3e20 (     0x4) DgnThreadClient::~DgnThreadClient() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a3e24 (    0x28) DgnThreadClient::~DgnThreadClient() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a3e4c (   0xb7c) DgnThreadClient::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a49c8 (    0x9c) DgnThreadMgr::recordTraceEvent(unsigned int, unsigned int, B_DgnThreadTraceEventType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a4a64 (    0xf8) DgnThreadClient::startup() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a4b5c (    0xb8) DgnThreadClient::checkForWorkerError() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a4c14 (    0xb0) DgnThreadClient::shutdown() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a4cc4 (   0x280) DgnThreadClient::waitForThreadDoneOrTerminate(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a4f44 (   0x168) DgnThreadClient::play() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a50ac (   0x168) DgnThreadClient::playAllUntilWorkerPauses() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a5214 (   0x124) DgnThreadClient::pause() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a5338 (    0x1c) DgnThreadClient::isPaused() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a5354 (    0x70) DgnThreadClient::terminate() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a53c4 (     0xc) DgnThreadClient::getThreadState() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a53d0 (    0x54) DgnThreadClient::newWorker() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a5424 (    0xc4) DgnThreadClient::handleMemoryException(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a54e8 (    0x60) DgnThreadClient::handleException(DgnException*, B_ErrorThrowType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a5548 (    0x88) DgnThreadWorker::DgnThreadWorker(B_DgnThreadExecutionType, DgnThreadClient*, MemChunkRegion*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a55d0 (    0x64) DgnThreadWorker::~DgnThreadWorker() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a5634 (     0x4) DgnThreadWorker::~DgnThreadWorker() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a5638 (    0x28) DgnThreadWorker::~DgnThreadWorker() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a5660 (   0x924) DgnThreadWorker::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a5f84 (   0x2a8) DgnThreadWorker::reportErrorAsWarning(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a622c (   0x248) DgnThreadWorker::play(B_DgnThreadRequest) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a6474 (    0x54) DgnThreadWorker::playOne() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a64c8 (     0x4) DgnThreadWorker::onStartup() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a64cc (     0x4) DgnThreadWorker::onPlay() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a64d0 (     0x4) DgnThreadWorker::onShutdown() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a64d4 (     0xc) DgnThreadWorker::notification(AbstractObservation*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a64e0 (    0xf8) DgnThreadMgr::DgnThreadMgr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a65d8 (    0x58) DgnThreadMgr::startupThreadMgr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a6630 (    0x48) DgnThreadMgr::throwBadDgnThreadId(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a6678 (    0x80) DgnThreadMgr::getNewThreadId() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a66f8 (    0x60) DgnThreadMgr::validateDgnThreadId(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a6758 (    0xac) DgnThreadMgr::broadcastError() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a6804 (    0x6c) DgnThreadMgr::startClientCallbackEvent(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a6870 (    0x60) DgnThreadMgr::endClientCallbackEvent() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a68d0 (    0x28) DgnThreadMgr::beginFileLoadOrSave() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a68f8 (    0x54) DgnThreadMgr::getFileLoadOrSaveCounter() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a694c (    0x34) DgnThreadMgr::endFileLoadOrSave() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a6980 (    0x18) SetShadowDiagnosticChecksumMemChunkRegionsOnSyncThread() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a6998 (    0x78) DgnThreadTrace::addInRegion(unsigned int, B_DgnThreadTraceEventType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a6a10 (    0x80) DgnPrimArray<unsigned long long>::copyArraySlice(DgnPrimArray<unsigned long long> const&, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a6a90 (    0x40) DgnIArray<DgnThreadClient*>::~DgnIArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a6ad0 (    0x6c) DgnIOwnArray<DgnThreadTrace*>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a6b3c (    0x34) void DgnDelete<DgnThreadTrace>(DgnThreadTrace*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a6b70 (     0x8) TNewWords::TNewWords(TTokenizerParamManager*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a6b78 (     0x4) TNewWords::~TNewWords() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a6b7c (   0x1e8) TNewWords::findAndAddWords(wchar_t const*, TVertex*, char const*, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a6d64 (   0x2f8) TNewWords::addAlphanumWord() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a705c (   0x6a8) TNewWords::addHyphenatedWord() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a7704 (   0x360) TNewWords::addContractionWord() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a7a64 (   0x568) TNewWords::addAcronymWord() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a7fcc (   0x32c) TNewWords::addAbbreviationWord() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a82f8 (    0x84) TNewWords::addWords(TVertex*, TGraph*, TSegmenter*, TLexicon*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a837c (     0x4) MrecInitModule_chanest_sigproc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a8380 (   0x110) MrecInitModule_virtmap_fst() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a8490 (   0x4f4) VirtMap::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a8984 (    0xd0) unsigned long sizeObject<DgnPrimFixArray<unsigned int>>(DgnArray<DgnPrimFixArray<unsigned int>> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a8a54 (    0x14) VirtMap::VirtMap() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a8a68 (    0x38) VirtMap::setEmpty() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a8aa0 (    0x44) VirtMap::~VirtMap() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a8ae4 (     0x4) VirtMap::~VirtMap() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a8ae8 (    0x64) DgnArray<DgnPrimFixArray<unsigned int>>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a8b4c (    0x40) DgnIArray<DgnPrimFixArray<unsigned int>*>::~DgnIArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a8b8c (   0x358) MrecInitModule_pel_pel() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a8ee4 (   0x114) unsigned long sizeObject<FrameDecisionTreeHyperplane>(DgnArray<FrameDecisionTreeHyperplane> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a8ff8 (    0x9c) FrameDecisionTree::classifyFrame(DgnPrimArray<unsigned char> const&, int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a9094 (   0x1b0) FrameDecisionTree::writeObject(DgnStream*, unsigned int&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a9244 (   0x55c) PackingPars::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a97a0 (   0x16c) PelMgr::~PelMgr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a990c (    0x58) void DgnDelete<PackingPars>(PackingPars*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a9964 (     0x4) PelMgr::~PelMgr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45a9968 (  0x20a8) PelMgr::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45aba10 (    0xd0) unsigned long sizeObject<BinaryIntScale>(DgnArray<BinaryIntScale> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45abae0 (   0x100) unsigned long sizeObject<DgnArray<DgnPrimArray<int>>>(DgnArray<DgnArray<DgnPrimArray<int>>> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45abbe0 (   0x100) unsigned long sizeObject<AlignedArray<short>>(DgnArray<AlignedArray<short>> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45abce0 (   0x100) unsigned long sizeObject<AlignedArray<unsigned char>>(DgnArray<AlignedArray<unsigned char>> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45abde0 (    0xf0) unsigned long sizeObject<DgnPrimArray<int>>(DgnArray<DgnPrimArray<int>> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45abed0 (    0x1c) PelMgr::getModelData(unsigned short) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45abeec (    0xf4) void readSharedObject<unsigned char>(DgnSharedMemStream*, DgnPrimArray<unsigned char>&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45abfe0 (    0x40) PelMgr::packRawMixtureComponent(unsigned char*, DgnPrimArray<unsigned int> const&, DgnPrimArray<unsigned int> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45ac020 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45ac030 (    0x20) PelMgr::packRawMixtureComponent(unsigned char*, unsigned int, DgnPrimArray<unsigned int> const&, DgnPrimArray<int> const&, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45ac050 (    0x70) PelMgr::getComponentByIndex(unsigned int, DgnPrimArray<unsigned int>*, DgnPrimArray<unsigned int>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45ac0c0 (    0x70) PelMgr::getComponentByIndex(unsigned int, DgnPrimArray<unsigned int>*, DgnPrimArray<int>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45ac130 (    0x40) PelMgr::unpackRawMixtureComponent(unsigned char const*, DgnPrimArray<unsigned int>*, DgnPrimArray<unsigned int>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45ac170 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45ac180 (    0x20) PelMgr::unpackRawMixtureComponent(unsigned char const*, DgnPrimArray<unsigned int>*, DgnPrimArray<int>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45ac1a0 (    0x30) PelMgr::unpackGenoneComponent(unsigned short, unsigned int, DgnPrimArray<unsigned int>*, DgnPrimArray<unsigned int>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45ac1d0 (    0x30) PelMgr::unpackGenoneComponent(unsigned short, unsigned int, DgnPrimArray<unsigned int>*, DgnPrimArray<int>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45ac200 (    0x30) PelMgr::packGenoneComponent(unsigned short, unsigned int, DgnPrimArray<unsigned int> const&, DgnPrimArray<unsigned int> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45ac230 (    0x28) PelMgr::packGenoneComponent(unsigned short, unsigned int, DgnPrimArray<unsigned int> const&, DgnPrimArray<int> const&, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45ac258 (    0x38) PelMgr::unpackPelMixtureComponent(unsigned short, unsigned int, DgnPrimArray<unsigned int>*, DgnPrimArray<unsigned int>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45ac290 (    0x38) PelMgr::unpackPelMixtureComponent(unsigned short, unsigned int, DgnPrimArray<unsigned int>*, DgnPrimArray<int>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45ac2c8 (   0x70c) PelMgr::savePelMgrBinary(DFile*, DFileChecksums*, bool, DgnSharedMemStream*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45ac9d4 (    0x88) void writeObject<DgnArray<DgnPrimArray<int>>>(DgnStream*, DgnArray<DgnArray<DgnPrimArray<int>>> const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45aca5c (    0x88) void writeObject<BinaryIntScale>(DgnStream*, DgnArray<BinaryIntScale> const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45acae4 (    0x88) void writeObject<AlignedArray<short>>(DgnStream*, DgnArray<AlignedArray<short>> const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45acb6c (    0x88) void writeObject<AlignedArray<unsigned char>>(DgnStream*, DgnArray<AlignedArray<unsigned char>> const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45acbf4 (    0x88) void writeObject<DgnPrimArray<int>>(DgnStream*, DgnArray<DgnPrimArray<int>> const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45acc7c (    0xdc) void writeSharedObject<unsigned char>(DgnSharedMemStream*, DgnPrimArray<unsigned char>&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45acd58 (  0x1d38) PelMgr::savePelMgrText(DFile*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45aea90 (   0x108) PelMgr::saveQuantPerDimTableText(DgnTextFileWriter&, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, char const*, unsigned int, DgnPrimArray<unsigned char> const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45aeb98 (    0x18) PelMgr::savePelMgr(DFile*, DFileChecksums*, bool, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45aebb0 (   0x550) PelMgr::verifyFeatureDimension(VarClassMgr const*, CTFTMgr const*, unsigned int, BandwidthTransform const*, NeuralNet const*, Imelda const*, FmpeMgr const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45af100 (   0x118) PelMgr::packFloatRawMixtureComponent(float*, DgnPrimArray<unsigned int> const&, DgnPrimArray<unsigned int> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45af218 (    0xbc) PelMgr::packMulTableRawMixtureComponent(unsigned char*, DgnPrimArray<unsigned int> const&, DgnPrimArray<unsigned int> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45af2d4 (    0x78) PelMgr::packPackedIntRawMixtureComponent(unsigned char*, DgnPrimArray<unsigned int> const&, DgnPrimArray<unsigned int> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45af34c (    0x78) PelMgr::packQuantPerDimRawMixtureComponent(unsigned char*, DgnPrimArray<unsigned int> const&, DgnPrimArray<unsigned int> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45af3c4 (   0x2f8) PelMgr::packFloatRawMixtureComponent(float*, unsigned int, DgnPrimArray<unsigned int> const&, DgnPrimArray<int> const&, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45af6bc (   0x56c) PelMgr::packPackedIntRawMixtureComponent(unsigned char*, unsigned int, DgnPrimArray<unsigned int> const&, DgnPrimArray<int> const&, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45afc28 (   0x10c) PelMgr::unpackFloatRawMixtureComponent(float const*, DgnPrimArray<unsigned int>*, DgnPrimArray<int>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45afd34 (   0x10c) PelMgr::unpackPackedIntRawMixtureComponent(unsigned char const*, DgnPrimArray<unsigned int>*, DgnPrimArray<int>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45afe40 (   0x134) PelMgr::unpackFloatRawMixtureComponent(float const*, DgnPrimArray<unsigned int>*, DgnPrimArray<unsigned int>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45aff74 (   0x100) PelMgr::unpackMulTableRawMixtureComponent(unsigned char const*, DgnPrimArray<unsigned int>*, DgnPrimArray<unsigned int>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b0074 (    0xbc) PelMgr::unpackPackedIntRawMixtureComponent(unsigned char const*, DgnPrimArray<unsigned int>*, DgnPrimArray<unsigned int>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b0130 (    0xd8) PelMgr::unpackQuantPerDimRawMixtureComponent(unsigned char const*, DgnPrimArray<unsigned int>*, DgnPrimArray<unsigned int>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b0208 (    0x68) DgnArray<AlignedArray<unsigned char>>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b0270 (    0x68) DgnArray<FrameDecisionTreeHyperplane>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b02d8 (    0x40) DgnArray<FrameDecisionTreeNode>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b0318 (    0x40) FrameDecisionTree::~FrameDecisionTree() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b0358 (    0x40) DgnArray<BinaryIntScale>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b0398 (    0x68) DgnArray<AlignedArray<short>>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b0400 (    0x80) AlignedArray<unsigned char>::writeObject(DgnStream*, unsigned int&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b0480 (    0x80) AlignedArray<short>::writeObject(DgnStream*, unsigned int&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b0500 (    0x90) AlignedArray<unsigned char>::writeSharedObject(DgnSharedMemStream*, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b0590 (     0x4) MrecInitModule_nodes_net() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b0594 (    0xe8) Node::updateNodeOneBest1(int, int, int, NetMgr*, HmmNet*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b067c (   0x15c) PelScoreCache::getScoreAllowBackoff_updateNode(unsigned short, int, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b07d8 (    0x58) void Node::updateScore<false>(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b0830 (    0x40) Node::thresholdNode(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b0870 (    0x78) Node::scoreNodeActiveCurrActiveSeed(BaseNode const*, int, int, bool*, NetMgr*, int, int, HmmNet*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b08e8 (    0x98) Node::scoreNodeOneBest(BaseNode const*, bool, int, int, int, bool*, NetMgr*, int, int, unsigned int*, HmmNet*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b0980 (   0x318) Node::scoreNodeSuccessors(BaseNode const*, bool, int, int, int, unsigned int, NetMgr*, int, int, unsigned int*, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b0c98 (   0x334) Node::scoreNodeSuccessorsSkipOne(BaseNode const*, bool, int, int, int, unsigned int, NetMgr*, int, int, unsigned int*, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b0fcc (   0x150) Node::scoreNodeWithPattern(BaseNode const*, unsigned int, int, int, NetMgr*, int, int, bool*, HmmNet*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b111c (   0x338) Node::scoreNodeSuccessorsSkipMany(BaseNode const*, bool, int, int, int, unsigned int, NetMgr*, int, int, unsigned int*, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b1454 (   0x364) Node::scoreNodeSuccessorsNBest(BaseNode const*, bool, int, int, int, unsigned int, NetMgr*, int, int, unsigned int*, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b17b8 (   0x438) Node::scoreNodeSuccessorsSkipOneNBest(BaseNode const*, bool, int, int, int, unsigned int, NetMgr*, int, int, unsigned int*, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b1bf0 (   0x208) Node::scoreNodeWithPatternNBest(BaseNode const*, unsigned int, unsigned int, int, int, NetMgr*, int, int, bool*, HmmNet*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b1df8 (   0x424) Node::scoreNodeSuccessorsSkipManyNBest(BaseNode const*, bool, int, int, int, unsigned int, NetMgr*, int, int, unsigned int*, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b221c (    0x4c) NodeNetNode::NodeNetNode(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b2268 (    0x4c) NodeNetNode::NodeNetNode(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b22b4 (    0x2c) NodeNetNode::~NodeNetNode() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b22e0 (    0x44) PredStruct::~PredStruct() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b2324 (    0x2c) NodeNetNode::~NodeNetNode() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b2350 (    0x3c) NodeNetNode::~NodeNetNode() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b238c (    0xa0) NodeNetNode::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b242c (    0x54) sizeObject(Node const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b2480 (    0x40) sizeObject(PredStruct const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b24c0 (    0x38) NodeNetNode::fill(NodeNetNode const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b24f8 (    0x70) NodeNetNode::fillAsEpsilon(NodeNetNode const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b2568 (   0x154) NodeNetNode::scoreNodeBWBack(BaseNode const*, bool*, NetMgr*, int, int, HmmNet*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b26bc (    0x7c) NodeNetNode::addAcousticsToScores(int, NetMgr*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b2738 (   0x10c) PredStruct::getBestPredWithTrace(unsigned int*, DgnIdFactory<NetNBestTraceNoTime<unsigned int>, 1024u>&, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b2844 (    0x54) TraceNode::~TraceNode() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b2898 (    0x64) TraceNode::~TraceNode() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b28fc (    0x9c) TraceNode::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b2998 (    0x1c) TraceNode::fillTraceNode(unsigned short, Pic const&, short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b29b4 (    0x58) TraceNode::fill(NodeNetNode const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b2a0c (    0xcc) SeederStruct::updateSeederList(int, BaseNode const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b2ad8 (   0x154) TraceNode::scoreNode(BaseNode const*, int, int, int, int, bool*, NetMgr*, int, int, unsigned int*, HmmNet*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b2c2c (    0x50) Node::scoreNodeInactiveCurrActiveSeed(BaseNode const*, int, int, NetMgr*, int, int, HmmNet*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b2c7c (    0x24) TraceNode::maybeSeedNode(int, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b2ca0 (   0x12c) TraceExternalOutPort::seedOutPortForTraceBack2(int, int, NetMgr*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b2dcc (    0x44) NodeData::maskedCwidac(CWIDAC const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b2e10 (    0x98) NodeData::NodeData(Node*, CWIDAC const&, Pic const&, unsigned short, short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b2ea8 (    0x10) sizeObject(BaseNode const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b2eb8 (    0x70) unsigned long sizeObject<SeederBlock>(DgnArray<SeederBlock> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b2f28 (    0x70) sizeObject(TraceExternalOutPort const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b2f98 (    0x40) DgnArray<SeederBlock>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b2fd8 (    0x74) DgnIdFactory<NetNBestTraceNoTime<unsigned int>, 1024u>::createRawData(NetNBestTraceNoTime<unsigned int>**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b304c (    0xb4) DgnIdFactory<NetNBestTraceNoTime<unsigned int>, 1024u>::addChunk() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b3100 (     0x4) MrecInitModule_collarra_fileutil() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b3104 (    0x48) errorBadCollationId(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b314c (   0xc88) TLattice::TLattice(std::__1::vector<TLatticeConstructionTransData*, std::__1::allocator<TLatticeConstructionTransData*>> const&, unsigned long, unsigned long, unsigned long, unsigned long, bool, SDhUtt_fake**, TLexicon*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b3dd4 (    0x6c) TRegisterable<TLattice>::~TRegisterable() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b3e40 (     0xc) TLattice::TLattice(std::__1::vector<TLatticeConstructionTransData*, std::__1::allocator<TLatticeConstructionTransData*>> const&, unsigned long, unsigned long, unsigned long, unsigned long, bool, SDhUtt_fake**, TLexicon*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b3e4c (    0x74) TLattice::~TLattice() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b3ec0 (     0x4) TLattice::~TLattice() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b3ec4 (    0x28) TLattice::~TLattice() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b3eec (    0xd4) TLatticeTransData::TLatticeTransData(TAllocator&, TPLatticeTransType_fake**, TLatticeTransValue, unsigned int, unsigned long, unsigned long, unsigned long, TPLatticeMrecData) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b3fc0 (     0x4) TRegisterable<TLattice>::~TRegisterable() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b3fc4 (    0x28) TRegisterable<TLattice>::~TRegisterable() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b3fec (    0x80) TRegisterable<TLattice>::getRegistry() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b406c (    0x78) std::__1::vector<TState*, std::__1::allocator<TState*>>::vector(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b40e4 (    0x44) std::__1::vector<TState*, std::__1::allocator<TState*>>::__vallocate[abi:v160006](unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b4128 (   0x108) TBaseRegistry<TLattice*>::registerInstance(TLattice*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b4230 (    0x18) std::__1::vector<TLattice*, std::__1::allocator<TLattice*>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b4248 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<TLattice*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<TLattice*>>(std::__1::allocator<TLattice*>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b4280 (     0x4) MrecInitModule_wavedec_frame() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b4284 (    0xf0) WaveDecoder::saveWaveDecoder(DFile*, DFileChecksums*, bool, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b4374 (   0x2d0) WaveDecoder::saveWaveDecoderText(DFile*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b4644 (    0xa4) WaveDecoder::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b46e8 (     0x4) sizeObject(WaveDecoder const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b46ec (     0x4) MrecInitModule_speedtst_mrecutil() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b46f0 (    0x74) createFormatter(TDataManager const*, TDataManager*, TLexicon*, TTokenizer*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b4764 (  0x1324) TFormatter::TFormatter(TDataManager const*, TDataManager*, TLexicon*, TTokenizer*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b5a88 (   0x1ec) TFormatter::freeMemory() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b5c74 (    0x84) TFormatter::~TFormatter() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b5cf8 (     0x4) TFormatter::~TFormatter() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b5cfc (     0x8) non-virtual thunk to TFormatter::~TFormatter() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b5d04 (    0x28) TFormatter::~TFormatter() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b5d2c (    0x2c) non-virtual thunk to TFormatter::~TFormatter() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b5d58 (   0x854) TFormatter::save(TDataManager*, TDataManager*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b65ac (   0xd7c) TFormatter::importChanges(TDataManager const&, TLexicon*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b7328 (   0x330) TFormatter::makeBlockForWord(TWord const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b7658 (   0x47c) TFormatter::splitPattern(wchar_t const*, TBlock*&, TBlock*&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b7ad4 (   0xa68) TFormatter::assignWordRules(TBlock*, std::__1::vector<TItnWordData, std::__1::allocator<TItnWordData>> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b853c (    0x54) TFormatter::stateToParamConfig(TItnControlState const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b8590 (   0x404) TFormatter::makeUttState(TPItnResultHandle_fake** const*, unsigned long, unsigned long, unsigned long, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b8994 (   0x2b8) TFormatter::addWords(std::__1::vector<wchar_t const*, std::__1::allocator<wchar_t const*>> const&, unsigned int const*, std::__1::vector<TItnWordData, std::__1::allocator<TItnWordData>>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b8c4c (    0xfc) std::__1::vector<TItnWordData, std::__1::allocator<TItnWordData>>::reserve(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b8d48 (   0x438) TFormatter::addWords(TPItnResultHandle_fake** const*, TPItnResultHandle_fake** const*, bool, std::__1::vector<TItnWordData, std::__1::allocator<TItnWordData>>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b9180 (   0x194) TFormatter::addLeftContext(TPItnResultHandle_fake** const*, TPItnResultHandle_fake** const*, std::__1::vector<TItnWordData, std::__1::allocator<TItnWordData>>&, TContextInfo&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b9314 (   0x18c) TFormatter::addRightContext(TPItnResultHandle_fake** const*, TPItnResultHandle_fake** const*, std::__1::vector<TItnWordData, std::__1::allocator<TItnWordData>>&, TContextInfo&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b94a0 (    0x44) std::__1::vector<TItnWordData, std::__1::allocator<TItnWordData>>::resize(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45b94e4 (  0x16f0) TFormatter::segment(std::__1::vector<TItnWordData, std::__1::allocator<TItnWordData>> const&, unsigned long, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45babd4 (  0x1710) TFormatter::applyControls(TBlock*, std::__1::vector<TItnWordData, std::__1::allocator<TItnWordData>> const&, unsigned long, unsigned long, std::__1::vector<TItnControl, std::__1::allocator<TItnControl>> const&, std::__1::vector<TItnControl, std::__1::allocator<TItnControl>>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45bc2e4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45bc2f4 (   0x6f4) collectControls(std::__1::vector<TItnControl, std::__1::allocator<TItnControl>>&, TBlock const*, TPItnRuleControlParam_fake**, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45bc9e8 (    0x98) TFormatter::countRightContextSpaces(TPItnResultHandle_fake** const*, TPItnResultHandle_fake** const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45bca80 (   0x110) TFormatter::countLeftContextSpaces(TPItnResultHandle_fake** const*, TPItnResultHandle_fake** const*, unsigned long, TContextSpaceStruct&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45bcb90 (   0xbbc) TFormatter::formatInternal(TPItnResultHandle_fake** const*, TPItnResultHandle_fake** const*, TPItnResultHandle_fake** const*, TPItnResultHandle_fake** const*, std::__1::vector<TItnWordData, std::__1::allocator<TItnWordData>> const&, unsigned int, bool, TPItnResultHandle_fake**&, TPItnResultHandle_fake** const*&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45bd74c (   0x310) std::__1::__wrap_iter<TItnWordData*> std::__1::vector<TItnWordData, std::__1::allocator<TItnWordData>>::insert<std::__1::__wrap_iter<TItnWordData const*>, 0>(std::__1::__wrap_iter<TItnWordData const*>, std::__1::__wrap_iter<TItnWordData const*>, std::__1::__wrap_iter<TItnWordData const*>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45bda5c (    0x78) freeBlocks(TBlock*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45bdad4 (   0x170) TFormatter::wordSequenceToResult(TPItnResultHandle_fake** const*, TPItnResultHandle_fake** const*, TPItnResultHandle_fake** const*, TPItnResultHandle_fake** const*, std::__1::vector<wchar_t const*, std::__1::allocator<wchar_t const*>> const&, unsigned int const*, unsigned int, TPItnResultHandle_fake** const*&, TPItnResultHandle_fake** const*&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45bdc44 (    0x10) non-virtual thunk to TFormatter::wordSequenceToResult(TPItnResultHandle_fake** const*, TPItnResultHandle_fake** const*, TPItnResultHandle_fake** const*, TPItnResultHandle_fake** const*, std::__1::vector<wchar_t const*, std::__1::allocator<wchar_t const*>> const&, unsigned int const*, unsigned int, TPItnResultHandle_fake** const*&, TPItnResultHandle_fake** const*&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45bdc54 (    0x24) TFormatter::textToResults(TPItnResultHandle_fake** const*, TPItnResultHandle_fake** const*, TPItnResultHandle_fake** const*, TPItnResultHandle_fake** const*, char const*, unsigned int, TBuffer<TPItnResultHandle_fake**>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45bdc78 (    0x28) non-virtual thunk to TFormatter::textToResults(TPItnResultHandle_fake** const*, TPItnResultHandle_fake** const*, TPItnResultHandle_fake** const*, TPItnResultHandle_fake** const*, char const*, unsigned int, TBuffer<TPItnResultHandle_fake**>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45bdca0 (  0x1ffc) TFormatter::generateResultAlternatives(TPItnResultHandle_fake** const*, TPItnResultHandle_fake** const*, TPRange const*, unsigned int, unsigned int, TBuffer<TPItnResultHandle_fake**>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45bfc9c (    0x20) (null) [FUNC, FunctionStarts] 
                0x00000001b45bfcbc (    0xd8) TBuffer<TPItnResultHandle_fake**>::resize(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45bfd94 (    0x14) priorityCompare(std::__1::pair<unsigned int, unsigned int>, std::__1::pair<unsigned int, unsigned int>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45bfda8 (   0x118) void std::__1::vector<TPItnResultHandle_fake**, std::__1::allocator<TPItnResultHandle_fake**>>::assign<TPItnResultHandle_fake** const*, 0>(TPItnResultHandle_fake** const*, TPItnResultHandle_fake** const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45bfec0 (    0xf4) std::__1::vector<TPItnResultHandle_fake**, std::__1::allocator<TPItnResultHandle_fake**>>::push_back[abi:v160006](TPItnResultHandle_fake** const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45bffb4 (   0x1e8) std::__1::__wrap_iter<TPItnResultHandle_fake***> std::__1::vector<TPItnResultHandle_fake**, std::__1::allocator<TPItnResultHandle_fake**>>::insert<TPItnResultHandle_fake** const*, 0>(std::__1::__wrap_iter<TPItnResultHandle_fake** const*>, TPItnResultHandle_fake** const*, TPItnResultHandle_fake** const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c019c (    0xb4) std::__1::vector<std::__1::pair<int, TWord const*>, std::__1::allocator<std::__1::pair<int, TWord const*>>>::reserve(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c0250 (    0x80) TBuffer<TPItnResultHandle_fake**>::data() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c02d0 (     0x8) non-virtual thunk to TFormatter::generateResultAlternatives(TPItnResultHandle_fake** const*, TPItnResultHandle_fake** const*, TPRange const*, unsigned int, unsigned int, TBuffer<TPItnResultHandle_fake**>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c02d8 (   0x3ec) TFormatter::reformatResults(TPItnResultHandle_fake** const*, TPItnResultHandle_fake** const*, TPItnResultHandle_fake** const*, TPItnResultHandle_fake** const*, TPItnRuleControlName_fake** const*, TPItnRuleControlName_fake** const*, unsigned int, TBuffer<TPItnResultHandle_fake**>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c06c4 (    0x10) non-virtual thunk to TFormatter::reformatResults(TPItnResultHandle_fake** const*, TPItnResultHandle_fake** const*, TPItnResultHandle_fake** const*, TPItnResultHandle_fake** const*, TPItnRuleControlName_fake** const*, TPItnRuleControlName_fake** const*, unsigned int, TBuffer<TPItnResultHandle_fake**>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c06d4 (     0x8) TFormatter::splitResult(TPItnResultHandle_fake**, std::__1::vector<unsigned long, std::__1::allocator<unsigned long>> const&, TBuffer<TPItnResultHandle_fake**>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c06dc (     0x8) non-virtual thunk to TFormatter::splitResult(TPItnResultHandle_fake**, std::__1::vector<unsigned long, std::__1::allocator<unsigned long>> const&, TBuffer<TPItnResultHandle_fake**>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c06e4 (    0x10) TFormatter::mergeResults(TPItnResultHandle_fake** const*, TPItnResultHandle_fake** const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c06f4 (    0x10) non-virtual thunk to TFormatter::mergeResults(TPItnResultHandle_fake** const*, TPItnResultHandle_fake** const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c0704 (     0x8) TFormatter::deleteResult(TPItnResultHandle_fake**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c070c (     0x8) non-virtual thunk to TFormatter::deleteResult(TPItnResultHandle_fake**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c0714 (    0x30) TFormatter::copyResult(TPItnResultHandle_fake**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c0744 (    0x30) non-virtual thunk to TFormatter::copyResult(TPItnResultHandle_fake**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c0774 (     0x8) TFormatter::deserializeResult(char const*, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c077c (     0x8) non-virtual thunk to TFormatter::deserializeResult(char const*, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c0784 (    0x18) TFormatter::alignResults(TPItnResultHandle_fake** const*, TPItnResultHandle_fake** const*, TPItnResultHandle_fake** const*, TPItnResultHandle_fake** const*, TBuffer<char>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c079c (    0x18) non-virtual thunk to TFormatter::alignResults(TPItnResultHandle_fake** const*, TPItnResultHandle_fake** const*, TPItnResultHandle_fake** const*, TPItnResultHandle_fake** const*, TBuffer<char>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c07b4 (    0x40) TFormatter::getResultText(TPItnResultHandle_fake**, TBuffer<char>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c07f4 (    0x40) non-virtual thunk to TFormatter::getResultText(TPItnResultHandle_fake**, TBuffer<char>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c0834 (    0xe8) TFormatter::serializeResultTokenSequence(TPItnResultHandle_fake**, TBuffer<char>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c091c (     0x8) non-virtual thunk to TFormatter::serializeResultTokenSequence(TPItnResultHandle_fake**, TBuffer<char>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c0924 (    0x54) TFormatter::serializeResult(TPItnResultHandle_fake**, char*, unsigned long) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c0978 (    0x54) non-virtual thunk to TFormatter::serializeResult(TPItnResultHandle_fake**, char*, unsigned long) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c09cc (    0x6c) TFormatter::getResultAlignment(TPItnResultHandle_fake**, TBuffer<unsigned long>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c0a38 (    0xd8) TBuffer<unsigned long>::resize(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c0b10 (     0x8) non-virtual thunk to TFormatter::getResultAlignment(TPItnResultHandle_fake**, TBuffer<unsigned long>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c0b18 (    0x24) TFormatter::isValidResult(TPItnResultHandle_fake**) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c0b3c (    0x24) non-virtual thunk to TFormatter::isValidResult(TPItnResultHandle_fake**) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c0b60 (    0x20) TFormatter::isResultTokenized(TPItnResultHandle_fake**) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c0b80 (    0x20) non-virtual thunk to TFormatter::isResultTokenized(TPItnResultHandle_fake**) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c0ba0 (     0x8) TFormatter::getParamManager() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c0ba8 (     0x8) TFormatter::getTagManagerInterface() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c0bb0 (     0x8) TFormatter::getRuleManagerInterface() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c0bb8 (     0x8) TFormatter::getHintManagerInterface() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c0bc0 (    0x10) TFormatter::isCustomized() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c0bd0 (    0x20) TFormatter::isModified() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c0bf0 (     0x8) TFormatter::getAdaptationInterface() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c0bf8 (     0x8) TFormatter::getResultManagerInterface() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c0c00 (     0x4) TRegisterable<TIFormatter>::~TRegisterable() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c0c04 (    0x28) TRegisterable<TIFormatter>::~TRegisterable() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c0c2c (    0x6c) TRegisterable<TIFormatter>::~TRegisterable() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c0c98 (    0x80) TRegisterable<TIFormatter>::getRegistry() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c0d18 (   0x28c) std::__1::__wrap_iter<TItnControl*> std::__1::vector<TItnControl, std::__1::allocator<TItnControl>>::insert<std::__1::__wrap_iter<TItnControl const*>, 0>(std::__1::__wrap_iter<TItnControl const*>, std::__1::__wrap_iter<TItnControl const*>, std::__1::__wrap_iter<TItnControl const*>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c0fa4 (    0xec) TParamSetter::TParamSetter(TParam&, wchar_t const*, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c1090 (    0xe8) TParamSetter::~TParamSetter() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c1178 (   0x108) TBaseRegistry<TIFormatter*>::registerInstance(TIFormatter*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c1280 (    0x18) std::__1::vector<TIFormatter*, std::__1::allocator<TIFormatter*>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c1298 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<TIFormatter*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<TIFormatter*>>(std::__1::allocator<TIFormatter*>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c12d0 (    0x18) std::__1::vector<TLink*, std::__1::allocator<TLink*>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c12e8 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<TLink*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<TLink*>>(std::__1::allocator<TLink*>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c1320 (    0x18) std::__1::vector<TLink const*, std::__1::allocator<TLink const*>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c1338 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<TLink const*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<TLink const*>>(std::__1::allocator<TLink const*>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c1370 (    0x18) std::__1::vector<TItnWordData, std::__1::allocator<TItnWordData>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c1388 (    0x4c) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<TItnWordData>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<TItnWordData>>(std::__1::allocator<TItnWordData>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c13d4 (   0x208) std::__1::vector<TItnWordData, std::__1::allocator<TItnWordData>>::__append(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c15dc (    0xac) std::__1::vector<TItnStateData, std::__1::allocator<TItnStateData>>::vector(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c1688 (    0x58) std::__1::vector<TItnStateData, std::__1::allocator<TItnStateData>>::__vallocate[abi:v160006](unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c16e0 (    0x18) std::__1::vector<TItnStateData, std::__1::allocator<TItnStateData>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c16f8 (    0x4c) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<TItnStateData>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<TItnStateData>>(std::__1::allocator<TItnStateData>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c1744 (    0x38) std::__1::__exception_guard_exceptions<std::__1::vector<TItnStateData, std::__1::allocator<TItnStateData>>::__destroy_vector>::~__exception_guard_exceptions[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c177c (    0x54) std::__1::vector<TItnStateData, std::__1::allocator<TItnStateData>>::__destroy_vector::operator()[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c17d0 (    0x58) std::__1::vector<TItnStateData, std::__1::allocator<TItnStateData>>::__clear[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c1828 (    0x3c) std::__1::vector<TItnStateData, std::__1::allocator<TItnStateData>>::~vector[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c1864 (    0xb4) std::__1::vector<std::__1::vector<TItnGrammarStateData const*, std::__1::allocator<TItnGrammarStateData const*>>, std::__1::allocator<std::__1::vector<TItnGrammarStateData const*, std::__1::allocator<TItnGrammarStateData const*>>>>::vector(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c1918 (    0x54) std::__1::vector<std::__1::vector<TItnGrammarStateData const*, std::__1::allocator<TItnGrammarStateData const*>>, std::__1::allocator<std::__1::vector<TItnGrammarStateData const*, std::__1::allocator<TItnGrammarStateData const*>>>>::__vallocate[abi:v160006](unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c196c (    0x18) std::__1::vector<std::__1::vector<TItnGrammarStateData const*, std::__1::allocator<TItnGrammarStateData const*>>, std::__1::allocator<std::__1::vector<TItnGrammarStateData const*, std::__1::allocator<TItnGrammarStateData const*>>>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c1984 (    0x48) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<std::__1::vector<TItnGrammarStateData const*, std::__1::allocator<TItnGrammarStateData const*>>>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<std::__1::vector<TItnGrammarStateData const*, std::__1::allocator<TItnGrammarStateData const*>>>>(std::__1::allocator<std::__1::vector<TItnGrammarStateData const*, std::__1::allocator<TItnGrammarStateData const*>>>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c19cc (    0x38) std::__1::__exception_guard_exceptions<std::__1::vector<std::__1::vector<TItnGrammarStateData const*, std::__1::allocator<TItnGrammarStateData const*>>, std::__1::allocator<std::__1::vector<TItnGrammarStateData const*, std::__1::allocator<TItnGrammarStateData const*>>>>::__destroy_vector>::~__exception_guard_exceptions[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c1a04 (    0x54) std::__1::vector<std::__1::vector<TItnGrammarStateData const*, std::__1::allocator<TItnGrammarStateData const*>>, std::__1::allocator<std::__1::vector<TItnGrammarStateData const*, std::__1::allocator<TItnGrammarStateData const*>>>>::__destroy_vector::operator()[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c1a58 (    0x58) std::__1::vector<std::__1::vector<TItnGrammarStateData const*, std::__1::allocator<TItnGrammarStateData const*>>, std::__1::allocator<std::__1::vector<TItnGrammarStateData const*, std::__1::allocator<TItnGrammarStateData const*>>>>::__clear[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c1ab0 (    0x3c) std::__1::vector<std::__1::vector<TItnGrammarStateData const*, std::__1::allocator<TItnGrammarStateData const*>>, std::__1::allocator<std::__1::vector<TItnGrammarStateData const*, std::__1::allocator<TItnGrammarStateData const*>>>>::~vector[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c1aec (    0x18) std::__1::vector<TItnGrammarStateData const*, std::__1::allocator<TItnGrammarStateData const*>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c1b04 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<TItnGrammarStateData const*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<TItnGrammarStateData const*>>(std::__1::allocator<TItnGrammarStateData const*>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c1b3c (    0x9c) std::__1::vector<TItnControl, std::__1::allocator<TItnControl>>::vector(std::__1::vector<TItnControl, std::__1::allocator<TItnControl>> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c1bd8 (    0x54) std::__1::vector<TItnControl, std::__1::allocator<TItnControl>>::__vallocate[abi:v160006](unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c1c2c (   0x160) void std::__1::vector<TItnControl, std::__1::allocator<TItnControl>>::assign<TItnControl*, 0>(TItnControl*, TItnControl*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c1d8c (    0xbc) std::__1::vector<TItnWordData, std::__1::allocator<TItnWordData>>::vector<std::__1::__wrap_iter<TItnWordData*>, 0>(std::__1::__wrap_iter<TItnWordData*>, std::__1::__wrap_iter<TItnWordData*>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c1e48 (    0x58) std::__1::vector<TItnWordData, std::__1::allocator<TItnWordData>>::__vallocate[abi:v160006](unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c1ea0 (    0x18) std::__1::vector<std::__1::pair<unsigned int, unsigned int>, std::__1::allocator<std::__1::pair<unsigned int, unsigned int>>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c1eb8 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned int, unsigned int>>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<std::__1::pair<unsigned int, unsigned int>>>(std::__1::allocator<std::__1::pair<unsigned int, unsigned int>>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c1ef0 (   0x4d4) void std::__1::__introsort<std::__1::_ClassicAlgPolicy, bool (*&)(std::__1::pair<unsigned int, unsigned int>, std::__1::pair<unsigned int, unsigned int>), std::__1::pair<unsigned int, unsigned int>*>(std::__1::pair<unsigned int, unsigned int>*, std::__1::pair<unsigned int, unsigned int>*, bool (*&)(std::__1::pair<unsigned int, unsigned int>, std::__1::pair<unsigned int, unsigned int>), std::__1::iterator_traits<std::__1::pair<unsigned int, unsigned int>*>::difference_type) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c23c4 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001b45c23dc (    0xdc) void std::__1::__insertion_sort_3[abi:v160006]<std::__1::_ClassicAlgPolicy, bool (*&)(std::__1::pair<unsigned int, unsigned int>, std::__1::pair<unsigned int, unsigned int>), std::__1::pair<unsigned int, unsigned int>*>(std::__1::pair<unsigned int, unsigned int>*, std::__1::pair<unsigned int, unsigned int>*, bool (*&)(std::__1::pair<unsigned int, unsigned int>, std::__1::pair<unsigned int, unsigned int>)) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c24b8 (   0x144) unsigned int std::__1::__sort3[abi:v160006]<std::__1::_ClassicAlgPolicy, bool (*&)(std::__1::pair<unsigned int, unsigned int>, std::__1::pair<unsigned int, unsigned int>), std::__1::pair<unsigned int, unsigned int>*>(std::__1::pair<unsigned int, unsigned int>*, std::__1::pair<unsigned int, unsigned int>*, std::__1::pair<unsigned int, unsigned int>*, bool (*&)(std::__1::pair<unsigned int, unsigned int>, std::__1::pair<unsigned int, unsigned int>)) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c25fc (   0x1cc) bool std::__1::__insertion_sort_incomplete<bool (*&)(std::__1::pair<unsigned int, unsigned int>, std::__1::pair<unsigned int, unsigned int>), std::__1::pair<unsigned int, unsigned int>*>(std::__1::pair<unsigned int, unsigned int>*, std::__1::pair<unsigned int, unsigned int>*, bool (*&)(std::__1::pair<unsigned int, unsigned int>, std::__1::pair<unsigned int, unsigned int>)) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c27c8 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001b45c27e0 (   0x100) unsigned int std::__1::__sort4[abi:v160006]<std::__1::_ClassicAlgPolicy, bool (*&)(std::__1::pair<unsigned int, unsigned int>, std::__1::pair<unsigned int, unsigned int>), std::__1::pair<unsigned int, unsigned int>*>(std::__1::pair<unsigned int, unsigned int>*, std::__1::pair<unsigned int, unsigned int>*, std::__1::pair<unsigned int, unsigned int>*, std::__1::pair<unsigned int, unsigned int>*, bool (*&)(std::__1::pair<unsigned int, unsigned int>, std::__1::pair<unsigned int, unsigned int>)) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c28e0 (   0x170) std::__1::pair<unsigned int, unsigned int>* std::__1::__partial_sort_impl[abi:v160006]<std::__1::_ClassicAlgPolicy, bool (*&)(std::__1::pair<unsigned int, unsigned int>, std::__1::pair<unsigned int, unsigned int>), std::__1::pair<unsigned int, unsigned int>*, std::__1::pair<unsigned int, unsigned int>*>(std::__1::pair<unsigned int, unsigned int>*, std::__1::pair<unsigned int, unsigned int>*, std::__1::pair<unsigned int, unsigned int>*, bool (*&)(std::__1::pair<unsigned int, unsigned int>, std::__1::pair<unsigned int, unsigned int>)) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c2a50 (   0x140) void std::__1::__sift_down[abi:v160006]<std::__1::_ClassicAlgPolicy, bool (*&)(std::__1::pair<unsigned int, unsigned int>, std::__1::pair<unsigned int, unsigned int>), std::__1::pair<unsigned int, unsigned int>*>(std::__1::pair<unsigned int, unsigned int>*, bool (*&)(std::__1::pair<unsigned int, unsigned int>, std::__1::pair<unsigned int, unsigned int>), std::__1::iterator_traits<std::__1::pair<unsigned int, unsigned int>*>::difference_type, std::__1::pair<unsigned int, unsigned int>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c2b90 (    0xb0) std::__1::pair<unsigned int, unsigned int>* std::__1::__floyd_sift_down[abi:v160006]<std::__1::_ClassicAlgPolicy, bool (*&)(std::__1::pair<unsigned int, unsigned int>, std::__1::pair<unsigned int, unsigned int>), std::__1::pair<unsigned int, unsigned int>*>(std::__1::pair<unsigned int, unsigned int>*, bool (*&)(std::__1::pair<unsigned int, unsigned int>, std::__1::pair<unsigned int, unsigned int>), std::__1::iterator_traits<std::__1::pair<unsigned int, unsigned int>*>::difference_type) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c2c40 (    0xac) void std::__1::__sift_up[abi:v160006]<std::__1::_ClassicAlgPolicy, bool (*&)(std::__1::pair<unsigned int, unsigned int>, std::__1::pair<unsigned int, unsigned int>), std::__1::pair<unsigned int, unsigned int>*>(std::__1::pair<unsigned int, unsigned int>*, std::__1::pair<unsigned int, unsigned int>*, bool (*&)(std::__1::pair<unsigned int, unsigned int>, std::__1::pair<unsigned int, unsigned int>), std::__1::iterator_traits<std::__1::pair<unsigned int, unsigned int>*>::difference_type) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c2cec (   0x148) unsigned int std::__1::__sort5<bool (*&)(std::__1::pair<unsigned int, unsigned int>, std::__1::pair<unsigned int, unsigned int>), std::__1::pair<unsigned int, unsigned int>*>(std::__1::pair<unsigned int, unsigned int>*, std::__1::pair<unsigned int, unsigned int>*, std::__1::pair<unsigned int, unsigned int>*, std::__1::pair<unsigned int, unsigned int>*, std::__1::pair<unsigned int, unsigned int>*, bool (*&)(std::__1::pair<unsigned int, unsigned int>, std::__1::pair<unsigned int, unsigned int>)) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c2e34 (    0x44) std::__1::vector<TPItnResultHandle_fake**, std::__1::allocator<TPItnResultHandle_fake**>>::__vallocate[abi:v160006](unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c2e78 (    0x18) std::__1::vector<TPItnResultHandle_fake**, std::__1::allocator<TPItnResultHandle_fake**>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c2e90 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<TPItnResultHandle_fake**>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<TPItnResultHandle_fake**>>(std::__1::allocator<TPItnResultHandle_fake**>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c2ec8 (    0x18) std::__1::vector<std::__1::pair<int, TWord const*>, std::__1::allocator<std::__1::pair<int, TWord const*>>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c2ee0 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<std::__1::pair<int, TWord const*>>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<std::__1::pair<int, TWord const*>>>(std::__1::allocator<std::__1::pair<int, TWord const*>>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c2f18 (   0x588) void std::__1::__introsort<std::__1::_ClassicAlgPolicy, std::__1::__less<std::__1::pair<int, TWord const*>, std::__1::pair<int, TWord const*>>&, std::__1::pair<int, TWord const*>*>(std::__1::pair<int, TWord const*>*, std::__1::pair<int, TWord const*>*, std::__1::__less<std::__1::pair<int, TWord const*>, std::__1::pair<int, TWord const*>>&, std::__1::iterator_traits<std::__1::pair<int, TWord const*>*>::difference_type) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c34a0 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001b45c34b8 (   0x11c) void std::__1::__insertion_sort_3[abi:v160006]<std::__1::_ClassicAlgPolicy, std::__1::__less<std::__1::pair<int, TWord const*>, std::__1::pair<int, TWord const*>>&, std::__1::pair<int, TWord const*>*>(std::__1::pair<int, TWord const*>*, std::__1::pair<int, TWord const*>*, std::__1::__less<std::__1::pair<int, TWord const*>, std::__1::pair<int, TWord const*>>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c35d4 (   0x158) unsigned int std::__1::__sort3[abi:v160006]<std::__1::_ClassicAlgPolicy, std::__1::__less<std::__1::pair<int, TWord const*>, std::__1::pair<int, TWord const*>>&, std::__1::pair<int, TWord const*>*>(std::__1::pair<int, TWord const*>*, std::__1::pair<int, TWord const*>*, std::__1::pair<int, TWord const*>*, std::__1::__less<std::__1::pair<int, TWord const*>, std::__1::pair<int, TWord const*>>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c372c (   0x21c) bool std::__1::__insertion_sort_incomplete<std::__1::__less<std::__1::pair<int, TWord const*>, std::__1::pair<int, TWord const*>>&, std::__1::pair<int, TWord const*>*>(std::__1::pair<int, TWord const*>*, std::__1::pair<int, TWord const*>*, std::__1::__less<std::__1::pair<int, TWord const*>, std::__1::pair<int, TWord const*>>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c3948 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001b45c3960 (   0x124) unsigned int std::__1::__sort4[abi:v160006]<std::__1::_ClassicAlgPolicy, std::__1::__less<std::__1::pair<int, TWord const*>, std::__1::pair<int, TWord const*>>&, std::__1::pair<int, TWord const*>*>(std::__1::pair<int, TWord const*>*, std::__1::pair<int, TWord const*>*, std::__1::pair<int, TWord const*>*, std::__1::pair<int, TWord const*>*, std::__1::__less<std::__1::pair<int, TWord const*>, std::__1::pair<int, TWord const*>>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c3a84 (   0x18c) std::__1::pair<int, TWord const*>* std::__1::__partial_sort_impl[abi:v160006]<std::__1::_ClassicAlgPolicy, std::__1::__less<std::__1::pair<int, TWord const*>, std::__1::pair<int, TWord const*>>&, std::__1::pair<int, TWord const*>*, std::__1::pair<int, TWord const*>*>(std::__1::pair<int, TWord const*>*, std::__1::pair<int, TWord const*>*, std::__1::pair<int, TWord const*>*, std::__1::__less<std::__1::pair<int, TWord const*>, std::__1::pair<int, TWord const*>>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c3c10 (   0x148) void std::__1::__sift_down[abi:v160006]<std::__1::_ClassicAlgPolicy, std::__1::__less<std::__1::pair<int, TWord const*>, std::__1::pair<int, TWord const*>>&, std::__1::pair<int, TWord const*>*>(std::__1::pair<int, TWord const*>*, std::__1::__less<std::__1::pair<int, TWord const*>, std::__1::pair<int, TWord const*>>&, std::__1::iterator_traits<std::__1::pair<int, TWord const*>*>::difference_type, std::__1::pair<int, TWord const*>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c3d58 (    0x8c) std::__1::pair<int, TWord const*>* std::__1::__floyd_sift_down[abi:v160006]<std::__1::_ClassicAlgPolicy, std::__1::__less<std::__1::pair<int, TWord const*>, std::__1::pair<int, TWord const*>>&, std::__1::pair<int, TWord const*>*>(std::__1::pair<int, TWord const*>*, std::__1::__less<std::__1::pair<int, TWord const*>, std::__1::pair<int, TWord const*>>&, std::__1::iterator_traits<std::__1::pair<int, TWord const*>*>::difference_type) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c3de4 (    0xb8) void std::__1::__sift_up[abi:v160006]<std::__1::_ClassicAlgPolicy, std::__1::__less<std::__1::pair<int, TWord const*>, std::__1::pair<int, TWord const*>>&, std::__1::pair<int, TWord const*>*>(std::__1::pair<int, TWord const*>*, std::__1::pair<int, TWord const*>*, std::__1::__less<std::__1::pair<int, TWord const*>, std::__1::pair<int, TWord const*>>&, std::__1::iterator_traits<std::__1::pair<int, TWord const*>*>::difference_type) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c3e9c (   0x178) unsigned int std::__1::__sort5<std::__1::__less<std::__1::pair<int, TWord const*>, std::__1::pair<int, TWord const*>>&, std::__1::pair<int, TWord const*>*>(std::__1::pair<int, TWord const*>*, std::__1::pair<int, TWord const*>*, std::__1::pair<int, TWord const*>*, std::__1::pair<int, TWord const*>*, std::__1::pair<int, TWord const*>*, std::__1::__less<std::__1::pair<int, TWord const*>, std::__1::pair<int, TWord const*>>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c4014 (    0x78) std::__1::vector<wchar_t const*, std::__1::allocator<wchar_t const*>>::vector(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c408c (    0x84) std::__1::vector<wchar_t const*, std::__1::allocator<wchar_t const*>>::vector(std::__1::vector<wchar_t const*, std::__1::allocator<wchar_t const*>> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c4110 (     0x4) MrecInitModule_modname_mrecutil() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c4114 (     0x4) MrecInitModule_spcache_recogctl() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c4118 (  0x1c68) StartupSearchParamSpecMgr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c5d80 (   0x128) SearchParamSet::SearchParamSet(char const*, B_ParamSetType, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c5ea8 (     0x4) SearchParamSet::SearchParamSet(char const*, B_ParamSetType, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c5eac (   0x328) SearchParamSet::SearchParamSet(SearchParamSet const&, char const*, B_ParamSetType, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c61d4 (     0x4) SearchParamSet::SearchParamSet(SearchParamSet const&, char const*, B_ParamSetType, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c61d8 (   0xa70) SearchParamSet::setDefaults() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c6c48 (    0xd4) SearchParamSet::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c6d1c (    0x24) SearchParamSet::setParamSetSearchConTransAccFactorList(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c6d40 (    0x24) SearchParamSet::setParamSetSearchHierScorerBeamList(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c6d64 (    0x24) SearchParamSet::setParamSetSearchHierScorerCutoffRatioList(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c6d88 (   0xd1c) SearchParamSet::getBoolParameter(unsigned short, B_ParamQueryMode) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c7aa4 (   0x1bc) (null) [FUNC, FunctionStarts] 
                0x00000001b45c7c60 (  0x20b4) SearchParamSet::getIntParameter(unsigned short, B_ParamQueryMode) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45c9d14 (   0x1bc) (null) [FUNC, FunctionStarts] 
                0x00000001b45c9ed0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45c9ee0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45c9ef0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45c9f00 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45c9f10 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45c9f20 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45c9f30 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45c9f40 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45c9f50 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45c9f60 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45c9f70 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45c9f80 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45c9f90 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45c9fa0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45c9fb0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45c9fc0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45c9fd0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45c9fe0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45c9ff0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45ca000 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45ca010 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45ca020 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45ca030 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45ca040 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45ca050 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45ca060 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45ca070 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45ca080 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45ca090 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45ca0a0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45ca0b0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45ca0c0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45ca0d0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45ca0e0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45ca0f0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45ca100 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45ca110 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45ca120 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45ca130 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45ca140 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45ca150 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45ca160 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45ca170 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45ca180 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45ca190 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45ca1a0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45ca1b0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45ca1c0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45ca1d0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45ca1e0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45ca1f0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45ca200 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45ca210 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45ca220 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45ca230 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45ca240 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45ca250 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45ca260 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45ca270 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45ca280 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45ca290 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45ca2a0 (   0xed4) SearchParamSet::getDoubleParameter(unsigned short, B_ParamQueryMode) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45cb174 (   0x1bc) (null) [FUNC, FunctionStarts] 
                0x00000001b45cb330 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45cb340 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45cb350 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45cb360 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45cb370 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45cb380 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45cb390 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45cb3a0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45cb3b0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45cb3c0 (   0xb70) SearchParamSet::getStringParameter(unsigned short, B_ParamQueryMode) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45cbf30 (   0x1bc) (null) [FUNC, FunctionStarts] 
                0x00000001b45cc0ec (   0xd60) SearchParamSet::getEnumParameter(unsigned short, B_ParamQueryMode) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45cce4c (   0x1bc) (null) [FUNC, FunctionStarts] 
                0x00000001b45cd008 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45cd018 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45cd028 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45cd038 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45cd048 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45cd058 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45cd068 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45cd078 (   0xb8c) SearchParamSet::setBoolParameter(unsigned short, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45cdc04 (   0x1bc) (null) [FUNC, FunctionStarts] 
                0x00000001b45cddc0 (  0x24cc) SearchParamSet::setIntParameter(unsigned short, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d028c (   0x1bc) (null) [FUNC, FunctionStarts] 
                0x00000001b45d0448 (   0xedc) SearchParamSet::setDoubleParameter(unsigned short, double) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d1324 (   0x1bc) (null) [FUNC, FunctionStarts] 
                0x00000001b45d14e0 (   0xb10) SearchParamSet::setStringParameter(unsigned short, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d1ff0 (   0x1bc) (null) [FUNC, FunctionStarts] 
                0x00000001b45d21ac (   0xd50) SearchParamSet::setEnumParameter(unsigned short, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d2efc (   0x1bc) (null) [FUNC, FunctionStarts] 
                0x00000001b45d30b8 (     0x4) SearchParamSet::~SearchParamSet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d30bc (    0x28) SearchParamSet::~SearchParamSet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d30e4 (    0x80) SearchParamSet::~SearchParamSet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d3164 (     0x4) MrecInitModule_sdword_sdapi() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d3168 (   0x170) SDWord_New [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d32d8 (   0x328) SDWord_DeleteList [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d3600 (   0x18c) SDWord_GetHandle [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d378c (   0x1f8) SDWord_GetName [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d3984 (   0x278) SDWord_GetInfo [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d3bfc (   0x300) SDWord_GetTagBits [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d3efc (    0x54) WordList::getTagBitsAsBytes(unsigned int, bool, unsigned char*, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d3f50 (   0x674) SDWord_WordsHaveCommonPron [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d45c4 (    0x64) void DgnDelete<PhonemeLattice>(PhonemeLattice*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d4628 (   0x674) SDWord_WordsHavePrefixPron [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d4c9c (   0x31c) SDWord_GetWordsWithCommonPron [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d4fb8 (   0x2cc) SDWord_GetHumanReadableProns [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d5284 (    0x40) DgnIArray<SDhWord_fake**>::~DgnIArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d52c4 (   0x220) loggableFileObject(TFileObject const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d54e4 (   0x428) TFileObject::verify(TFileObjectDescriptor const*, unsigned long, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d590c (   0x114) TFileObject::verify(bool, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d5a20 (    0x44) TFileObject::getAttribute(wchar_t const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d5a64 (   0x10c) TFileObject::collectAttributes(wchar_t const*, std::__1::vector<TFileObject const*, std::__1::allocator<TFileObject const*>>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d5b70 (   0x304) TFileObjectParser::TFileObjectParser(TInputStream&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d5e74 (    0xe4) initLexicon(TLexerLexicon&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d5f58 (    0xbc) TFileObjectParser::loadObjects(TLexer&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d6014 (     0x4) TFileObjectParser::TFileObjectParser(TInputStream&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d6018 (   0x140) TFileObjectParser::TFileObjectParser(wchar_t const*, unsigned long, TLocaleInfo const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d6158 (     0x4) TFileObjectParser::TFileObjectParser(wchar_t const*, unsigned long, TLocaleInfo const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d615c (    0x40) TFileObjectParser::~TFileObjectParser() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d619c (     0x4) TFileObjectParser::~TFileObjectParser() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d61a0 (   0x684) TFileObjectParser::instantiateObject(TFileObject const*, TFileObject const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d6824 (   0x2f0) TFileObjectParser::instantiateObject(TFileObject const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d6b14 (   0xa30) TFileObjectParser::makeObject(TLexer&, wchar_t const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d7544 (    0x1c) (null) [FUNC, FunctionStarts] 
                0x00000001b45d7560 (   0x3fc) nextToken(TLexer&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d795c (     0x4) MrecInitModule_score_mrecutil() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d7960 (    0x10) sizeObject(Uns16AndScore const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d7970 (    0x10) sizeObject(BigScorePair const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d7980 (     0x4) TProp<bool>::~TProp() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d7984 (     0x4) TProp<bool>::~TProp() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d7988 (     0x4) TProp<bool>::onSet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d798c (    0xa0) MrecInitModule_gpuscsm_pel() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d7a2c (     0x4) MrecInitModule_chanstat_sigproc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d7a30 (    0x5c) ChannelStats::~ChannelStats() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d7a8c (     0x4) ChannelStats::~ChannelStats() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d7a90 (   0xbc4) ChannelStats::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d8654 (   0x200) ChannelStats::saveChannelStats(DFile*, DFileChecksums*, bool, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d8854 (   0x79c) ChannelStats::saveCST(DFile*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d8ff0 (     0x4) MrecInitModule_fsthmmnet_fst() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d8ff4 (     0x4) FstHmmNet::configureOutPorts(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d8ff8 (    0x10) FstHmmNet::attachInPort(unsigned char, Node*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d9008 (     0x8) FstHmmNet::getExitContext() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d9010 (     0x8) FstHmmNet::getExitContextPtr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d9018 (    0xd0) FstHmmNet::scoreNetInternal(int, int, int, int, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d90e8 (     0x4) FstHmmNet::thresholdNetInternal(int, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d90ec (     0x8) FstHmmNet::getBestScore(BaseNode const**) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d90f4 (     0x4) FstHmmNet::estimateActivePelsThisFrame(BitArray*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d90f8 (     0x8) FstHmmNet::calcNumActiveNodes(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d9100 (   0x244) FstHmmNet::FstHmmNet(NetMgr*, CWIDAC const&, B_NetShape, B_PortStatus, B_NodeSkippingType, unsigned int, VirtMap*, unsigned int, unsigned short, PelScorer*, int, FstCoreOptions const&, User const*, unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d9344 (    0x34) FstHmmNet::FstHmmNet(NetMgr*, CWIDAC const&, B_NetShape, B_PortStatus, B_NodeSkippingType, unsigned int, VirtMap*, unsigned int, unsigned short, PelScorer*, int, FstCoreOptions const&, User const*, unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d9378 (    0x84) FstHmmNet::~FstHmmNet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d93fc (    0x34) void DgnDelete<FstCore>(FstCore*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d9430 (     0x4) FstHmmNet::~FstHmmNet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d9434 (    0x28) FstHmmNet::~FstHmmNet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d945c (    0x30) FstHmmNet::unpackFstSequence(Node**, Node**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d948c (    0x70) FstHmmNet::seedInPortFst(unsigned char, int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d94fc (     0x8) FstHmmNet::setEmbeddedFstSeedingTime(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d9504 (     0x8) FstHmmNet::expandEmbFstHistory(DgnPrimArray<unsigned int>*, DgnPrimArray<int>*, unsigned int&, DgnPrimArray<unsigned int>*, DgnPrimArray<unsigned int>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d950c (     0x8) HmmNet::nActiveSilNodes() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d9514 (     0x8) FstHmmNet::isAcoustic() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d951c (     0x8) HmmNet::canCallBack() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d9524 (     0x4) HmmNet::addCallBack(void (*)(void*), void*, B_ScoreOrder) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d9528 (     0x8) HmmNet::getRemainder() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d9530 (     0x4) MrecInitModule_heapchek_mrecutil() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d9534 (     0x8) mrecHeapValid() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d953c (    0x9c) MrecInitModule_wavepac_sigproc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d95d8 (     0x4) MrecInitModule_multable_pel() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d95dc (    0x44) MulTable::~MulTable() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d9620 (     0x4) MulTable::~MulTable() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d9624 (    0x14) MulTable::permute(unsigned short) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d9638 (    0x1c) MulTable::unpermute(unsigned short) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d9654 (   0x624) MulTable::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d9c78 (    0x88) void readObject<unsigned char>(DgnStream*, DgnPrimFixArray<unsigned char>&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d9d00 (   0x120) MulTable::saveMulTable(DFile*, DFileChecksums*, bool, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45d9e20 (   0x32c) MulTable::saveMulTableText(DFile*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45da14c (    0x88) DgnPrimFixArray<unsigned char>::copyArraySlice(DgnPrimFixArray<unsigned char> const&, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45da1d4 (     0x4) MrecInitModule_framedec_sigproc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45da1d8 (    0x14) tknLogString(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45da1ec (    0xc4) makeDataManager(TPDataSpec const*, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45da2b0 (    0x58) handleException(char const*, char const*, TPError_fake**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45da308 (   0x494) TPApi_Initialize [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45da79c (   0x110) MrecInitModule_ngram2fsm_lm() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45da8ac (   0x7ac) WordLanguageModel::getWordIdToTrGrmLmIdArray(DgnArray<DgnPrimArray<unsigned int>>&, DgnArray<DgnPrimArray<unsigned int>>&, DgnArray<DgnPrimArray<unsigned int>>&, unsigned int*, DgnPrimArray<unsigned int>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45db058 (    0x94) WordLanguageModel::getLmId(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45db0ec (    0xc8) WordLanguageModel::getMaybeContextLmId(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45db1b4 (  0x17a4) WordLanguageModel::getWordTransducer(DgnPrimArray<unsigned short>, DgnPrimStructArray<WordLMTransducerArc>&, DgnArray<DgnPrimArray<unsigned int>>&, unsigned int, short, DgnPrimArray<unsigned int>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45dc958 (    0xf4) Hash<Int32Pair, Int32Pair, Int32PairScope, int>::add(Int32Pair const&, int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45dca4c (   0x110) Hash<Int32Pair, Int32Pair, Int32PairScope, int>::upSize(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45dcb5c (    0x40) DgnIFixArray<BucketLink<Int32Pair, int>*>::~DgnIFixArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45dcb9c (    0xe0) Hash<Int32Pair, Int32Pair, Int32PairScope, int>::Hash(char const*, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45dcc7c (     0x4) Hash<Int32Pair, Int32Pair, Int32PairScope, int>::~Hash() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45dcc80 (    0x28) Hash<Int32Pair, Int32Pair, Int32PairScope, int>::~Hash() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45dcca8 (    0x74) Hash<Int32Pair, Int32Pair, Int32PairScope, int>::~Hash() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45dcd1c (   0x15c) Hash<Int32Pair, Int32Pair, Int32PairScope, int>::insert(Int32Pair const&, Int32Pair const**, int**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45dce78 (    0xe0) Hash<Int32Triple, Int32Triple, Int32TripleScope, int>::Hash(char const*, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45dcf58 (     0x4) Hash<Int32Triple, Int32Triple, Int32TripleScope, int>::~Hash() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45dcf5c (    0x28) Hash<Int32Triple, Int32Triple, Int32TripleScope, int>::~Hash() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45dcf84 (    0x40) DgnIFixArray<BucketLink<Int32Triple, int>*>::~DgnIFixArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45dcfc4 (    0x74) Hash<Int32Triple, Int32Triple, Int32TripleScope, int>::~Hash() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45dd038 (    0x94) Hash<EmbStateSpec, EmbStateSpec, EmbStateSpecToActiveWordScope, ActiveWord*>::removeAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45dd0cc (   0x184) Hash<Int32Triple, Int32Triple, Int32TripleScope, int>::insert(Int32Triple const&, Int32Triple const**, int**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45dd250 (   0x110) Hash<Int32Triple, Int32Triple, Int32TripleScope, int>::upSize(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45dd360 (    0x98) Hash<Int32Triple, Int32Triple, Int32TripleScope, int>::findBucket(Int32Triple const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45dd3f8 (    0x9c) MrecInitModule_dcuda_mrecutil() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45dd494 (     0x4) MrecInitModule_envhold_fileutil() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45dd498 (    0x7c) EnvHolder::EnvHolder(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45dd514 (    0x38) EnvHolder::~EnvHolder() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45dd54c (    0xbc) verifySubFileExistsAtMostOneOfDouble(DFile*, SubFileExtension, SubFileExtension, char const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45dd608 (   0x300) EnvHolder::errorIfFileObviouslyIsNotOfTypeUser(DFile*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45dd908 (   0x130) verifySubFileExistsOneOfDouble(DFile*, SubFileExtension, SubFileExtension, char const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45dda38 (   0x158) verifySubFileSetExistsOneOfDouble(DFile*, DgnPrimArray<SubFileExtension>, DgnPrimArray<SubFileExtension>, char const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45ddb90 (    0xb0) verifySubFile1ImpliesSubFile2(DFile*, SubFileExtension, SubFileExtension, char const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45ddc40 (    0xd0) EnvHolder::errorIfFileObviouslyIsNotOfTypeSigProc(DFile*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45ddd10 (   0x15c) EnvHolder::errorIfFileObviouslyIsNotOfTypeVoc(DFile*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45dde6c (    0x90) verifySubFileExists(DFile*, SubFileExtension, char const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45ddefc (   0x32c) EnvHolder::errorIfFileObviouslyIsNotOfTypeParamSetHolder(DFile*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45de228 (   0x1dc) EnvHolder::loadEnvHolder(DFile*, B_EnvHolderSourceType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45de404 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001b45de418 (   0x184) EnvHolder::saveEnvHolder(FileSpec const&, B_SaveResultCode*, B_SaveOverrideFormatType, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45de59c (   0x2e4) EnvHolder::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45de880 (    0x4c) EnvHolderMgr::startupEnvHolderMgr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45de8cc (    0x78) EnvHolderMgr::getEnvHolder(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45de944 (    0x90) EnvHolderMgr::newEnvHolder() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45de9d4 (    0x4c) EnvHolderMgr::deleteEnvHolder(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45dea20 (    0x34) void DgnDelete<EnvHolder>(EnvHolder*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45dea54 (    0xb8) EnvHolderMgr::loadEnvHolder(DFile*, B_EnvHolderSourceType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45deb0c (    0x58) EnvHolderMgr::saveEnvHolder(unsigned int, FileSpec const&, B_SaveResultCode*, B_SaveOverrideFormatType, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45deb64 (   0x3c8) EnvHolderMgr::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45def2c (    0x4c) DgnPrimArray<SubFileExtension>::~DgnPrimArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45def78 (   0xc68) TGrammarManager2::TGrammarManager2(TInputStream&, TTagManager const*, TLexicon*, TItnParamManager*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45dfbe0 (   0x4dc) callBackThousandSeparator(TGrammarCompiler::TArgument const*, unsigned long, void*, void*, TAllocator&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e00bc (   0x204) callBackToken(TGrammarCompiler::TArgument const*, unsigned long, void*, void*, TAllocator&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e02c0 (   0x210) callBackAlt(TGrammarCompiler::TArgument const*, unsigned long, void*, void*, TAllocator&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e04d0 (   0x1ec) callBackTag(TGrammarCompiler::TArgument const*, unsigned long, void*, void*, TAllocator&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e06bc (   0x748) callBackParam2(TGrammarCompiler::TArgument const*, unsigned long, void*, void*, TAllocator&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e0e04 (     0x4) TWordVerifier::~TWordVerifier() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e0e08 (    0x74) TGrammarManager2::freeMemory() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e0e7c (     0x4) TGrammarManager2::TGrammarManager2(TInputStream&, TTagManager const*, TLexicon*, TItnParamManager*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e0e80 (    0x28) TGrammarManager2::~TGrammarManager2() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e0ea8 (    0x18) TGrammarManager2::clearResult() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e0ec0 (   0x55c) TWideChartSeeder2::makeTerminals(unsigned long, std::__1::vector<TSymbol const*, std::__1::allocator<TSymbol const*>>&, std::__1::vector<unsigned long, std::__1::allocator<unsigned long>>&, std::__1::vector<void const*, std::__1::allocator<void const*>>&, TAllocator&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e141c (   0x3d0) TGrammarManager2::getLMScore(wchar_t const*, std::__1::vector<TItnWordData, std::__1::allocator<TItnWordData>> const&, unsigned long, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e17ec (   0xc08) TGrammarManager2::search(std::__1::vector<TItnWordData, std::__1::allocator<TItnWordData>> const&, unsigned long, unsigned long, unsigned long, std::__1::vector<TGrammarManager2Result, std::__1::allocator<TGrammarManager2Result>>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e23f4 (    0x28) sortResult(TGrammarManager2Result const&, TGrammarManager2Result const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e241c (     0x4) TWideChartSeeder2::~TWideChartSeeder2() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e2420 (     0x4) TWideChartSeeder2::~TWideChartSeeder2() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e2424 (     0x4) TWordVerifier::~TWordVerifier() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e2428 (   0x148) TWordVerifier::verifyTerminal(wchar_t const*, bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e2570 (    0x18) std::__1::vector<TGrammarManager2Result, std::__1::allocator<TGrammarManager2Result>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e2588 (    0x4c) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<TGrammarManager2Result>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<TGrammarManager2Result>>(std::__1::allocator<TGrammarManager2Result>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e25d4 (   0x618) void std::__1::__introsort<std::__1::_ClassicAlgPolicy, bool (*&)(TGrammarManager2Result const&, TGrammarManager2Result const&), TGrammarManager2Result*>(TGrammarManager2Result*, TGrammarManager2Result*, bool (*&)(TGrammarManager2Result const&, TGrammarManager2Result const&), std::__1::iterator_traits<TGrammarManager2Result*>::difference_type) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e2bec (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001b45e2c04 (   0x114) void std::__1::__insertion_sort_3[abi:v160006]<std::__1::_ClassicAlgPolicy, bool (*&)(TGrammarManager2Result const&, TGrammarManager2Result const&), TGrammarManager2Result*>(TGrammarManager2Result*, TGrammarManager2Result*, bool (*&)(TGrammarManager2Result const&, TGrammarManager2Result const&)) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e2d18 (   0x1a4) unsigned int std::__1::__sort3[abi:v160006]<std::__1::_ClassicAlgPolicy, bool (*&)(TGrammarManager2Result const&, TGrammarManager2Result const&), TGrammarManager2Result*>(TGrammarManager2Result*, TGrammarManager2Result*, TGrammarManager2Result*, bool (*&)(TGrammarManager2Result const&, TGrammarManager2Result const&)) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e2ebc (   0x230) bool std::__1::__insertion_sort_incomplete<bool (*&)(TGrammarManager2Result const&, TGrammarManager2Result const&), TGrammarManager2Result*>(TGrammarManager2Result*, TGrammarManager2Result*, bool (*&)(TGrammarManager2Result const&, TGrammarManager2Result const&)) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e30ec (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001b45e3104 (   0x140) unsigned int std::__1::__sort4[abi:v160006]<std::__1::_ClassicAlgPolicy, bool (*&)(TGrammarManager2Result const&, TGrammarManager2Result const&), TGrammarManager2Result*>(TGrammarManager2Result*, TGrammarManager2Result*, TGrammarManager2Result*, TGrammarManager2Result*, bool (*&)(TGrammarManager2Result const&, TGrammarManager2Result const&)) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e3244 (   0x294) TGrammarManager2Result* std::__1::__partial_sort_impl[abi:v160006]<std::__1::_ClassicAlgPolicy, bool (*&)(TGrammarManager2Result const&, TGrammarManager2Result const&), TGrammarManager2Result*, TGrammarManager2Result*>(TGrammarManager2Result*, TGrammarManager2Result*, TGrammarManager2Result*, bool (*&)(TGrammarManager2Result const&, TGrammarManager2Result const&)) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e34d8 (   0x188) void std::__1::__sift_down[abi:v160006]<std::__1::_ClassicAlgPolicy, bool (*&)(TGrammarManager2Result const&, TGrammarManager2Result const&), TGrammarManager2Result*>(TGrammarManager2Result*, bool (*&)(TGrammarManager2Result const&, TGrammarManager2Result const&), std::__1::iterator_traits<TGrammarManager2Result*>::difference_type, TGrammarManager2Result*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e3660 (    0xe8) void std::__1::__sift_up[abi:v160006]<std::__1::_ClassicAlgPolicy, bool (*&)(TGrammarManager2Result const&, TGrammarManager2Result const&), TGrammarManager2Result*>(TGrammarManager2Result*, TGrammarManager2Result*, bool (*&)(TGrammarManager2Result const&, TGrammarManager2Result const&), std::__1::iterator_traits<TGrammarManager2Result*>::difference_type) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e3748 (   0x190) unsigned int std::__1::__sort5<bool (*&)(TGrammarManager2Result const&, TGrammarManager2Result const&), TGrammarManager2Result*>(TGrammarManager2Result*, TGrammarManager2Result*, TGrammarManager2Result*, TGrammarManager2Result*, TGrammarManager2Result*, bool (*&)(TGrammarManager2Result const&, TGrammarManager2Result const&)) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e38d8 (     0x4) MrecInitModule_emptywt_mrecutil() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e38dc (     0x4) MrecInitModule_lpppcache_kernel() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e38e0 (   0x1e0) StartupLatticePostProbParamSpecMgr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e3ac0 (    0xb0) LatticePostProbParamSet::LatticePostProbParamSet(char const*, B_ParamSetType, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e3b70 (     0x4) LatticePostProbParamSet::LatticePostProbParamSet(char const*, B_ParamSetType, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e3b74 (    0xa4) LatticePostProbParamSet::LatticePostProbParamSet(LatticePostProbParamSet const&, char const*, B_ParamSetType, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e3c18 (     0x4) LatticePostProbParamSet::LatticePostProbParamSet(LatticePostProbParamSet const&, char const*, B_ParamSetType, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e3c1c (    0xd0) LatticePostProbParamSet::setDefaults() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e3cec (    0x54) LatticePostProbParamSet::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e3d40 (   0x104) LatticePostProbParamSet::getBoolParameter(unsigned short, B_ParamQueryMode) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e3e44 (    0x1c) (null) [FUNC, FunctionStarts] 
                0x00000001b45e3e60 (   0x460) LatticePostProbParamSet::getIntParameter(unsigned short, B_ParamQueryMode) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e42c0 (    0x1c) (null) [FUNC, FunctionStarts] 
                0x00000001b45e42dc (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45e42ec (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45e42fc (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45e430c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45e431c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45e432c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45e433c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45e434c (   0x104) LatticePostProbParamSet::getDoubleParameter(unsigned short, B_ParamQueryMode) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e4450 (    0x1c) (null) [FUNC, FunctionStarts] 
                0x00000001b45e446c (   0x104) LatticePostProbParamSet::getStringParameter(unsigned short, B_ParamQueryMode) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e4570 (    0x1c) (null) [FUNC, FunctionStarts] 
                0x00000001b45e458c (   0x104) LatticePostProbParamSet::getEnumParameter(unsigned short, B_ParamQueryMode) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e4690 (    0x1c) (null) [FUNC, FunctionStarts] 
                0x00000001b45e46ac (   0x110) LatticePostProbParamSet::setBoolParameter(unsigned short, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e47bc (    0x1c) (null) [FUNC, FunctionStarts] 
                0x00000001b45e47d8 (   0x434) LatticePostProbParamSet::setIntParameter(unsigned short, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e4c0c (    0x1c) (null) [FUNC, FunctionStarts] 
                0x00000001b45e4c28 (   0x110) LatticePostProbParamSet::setDoubleParameter(unsigned short, double) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e4d38 (    0x1c) (null) [FUNC, FunctionStarts] 
                0x00000001b45e4d54 (   0x110) LatticePostProbParamSet::setStringParameter(unsigned short, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e4e64 (    0x1c) (null) [FUNC, FunctionStarts] 
                0x00000001b45e4e80 (   0x110) LatticePostProbParamSet::setEnumParameter(unsigned short, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e4f90 (    0x1c) (null) [FUNC, FunctionStarts] 
                0x00000001b45e4fac (    0x44) LatticePostProbParamSet::~LatticePostProbParamSet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e4ff0 (    0x54) LatticePostProbParamSet::~LatticePostProbParamSet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e5044 (    0x98) getPropCheckTokenExistence() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e50dc (   0x7f4) TGlobalParamManager::TGlobalParamManager(TLocaleInfo&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e58d0 (     0x4) TGlobalParamManager::TGlobalParamManager(TLocaleInfo&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e58d4 (   0x174) TGlobalParamManager::notifyChange(TParam const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e5a48 (     0x4) TGlobalParamManager::~TGlobalParamManager() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e5a4c (    0x28) TGlobalParamManager::~TGlobalParamManager() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e5a74 (   0x470) TGlobalParamManager::~TGlobalParamManager() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e5ee4 (    0x58) TChartInfo::TChartInfo(TProduction const*, TAllocator*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e5f3c (   0x188) TParser::TParser(TGrammar const*, TDataMaker*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e60c4 (     0x4) TParser::TParser(TGrammar const*, TDataMaker*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e60c8 (    0x70) TParser::~TParser() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e6138 (     0x4) TParser::~TParser() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e613c (    0xbc) TParser::getCell(TSymbol const*, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e61f8 (    0xa8) std::__1::vector<TCell*, std::__1::allocator<TCell*>>::reserve(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e62a0 (    0x2c) std::__1::vector<TCell*, std::__1::allocator<TCell*>>::resize(unsigned long, TCell* const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e62cc (    0x58) TParser::addOpenProduction(TProduction*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e6324 (   0x334) TParser::addClosedProduction(TProduction*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e6658 (   0x15c) TParser::startNewProductions(TProduction const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e67b4 (   0x198) TParser::getAllProductions(TTerminalMaker*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e694c (    0x2c) std::__1::vector<TCell*, std::__1::allocator<TCell*>>::resize(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e6978 (    0x2c) std::__1::vector<TSymbol const*, std::__1::allocator<TSymbol const*>>::resize(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e69a4 (    0x2c) std::__1::vector<void const*, std::__1::allocator<void const*>>::resize(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e69d0 (   0x200) TParser::logChart(std::__1::basic_ostream<char, std::__1::char_traits<char>>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e6bd0 (   0x2ac) TProduction::log(TDataMaker*, std::__1::basic_ostream<char, std::__1::char_traits<char>>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e6e7c (   0x37c) TParser::logTree(TProduction const*, TSymbol const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, bool, std::__1::basic_ostream<char, std::__1::char_traits<char>>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e71f8 (    0xb4) TParser::logTree(TProduction const*, std::__1::basic_ostream<char, std::__1::char_traits<char>>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e72ac (    0x18) std::__1::vector<TCell*, std::__1::allocator<TCell*>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e72c4 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<TCell*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<TCell*>>(std::__1::allocator<TCell*>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e72fc (   0x12c) std::__1::vector<TCell*, std::__1::allocator<TCell*>>::__append(unsigned long, TCell* const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e7428 (   0x114) std::__1::vector<TCell*, std::__1::allocator<TCell*>>::__append(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e753c (   0x114) std::__1::vector<TSymbol const*, std::__1::allocator<TSymbol const*>>::__append(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e7650 (    0x18) std::__1::vector<TSymbol const*, std::__1::allocator<TSymbol const*>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e7668 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<TSymbol const*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<TSymbol const*>>(std::__1::allocator<TSymbol const*>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e76a0 (   0x114) std::__1::vector<void const*, std::__1::allocator<void const*>>::__append(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e77b4 (   0x110) MrecInitModule_netmgr_net() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e78c4 (    0x48) BestData::newOrTiedBestNode(int, Node const*, HmmNet*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e790c (    0x10) NetStats::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e791c (    0x20) NetStats::resetStats() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e793c (    0x4c) NetStats::operator=(NetStats const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e7988 (    0x94) NetStats::operator-=(NetStats const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e7a1c (   0x280) NetMgr::NetMgr(B_RecogMode, B_NetType, Direction) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e7c9c (     0x4) NetMgr::NetMgr(B_RecogMode, B_NetType, Direction) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e7ca0 (    0xdc) NetMgr::~NetMgr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e7d7c (     0x4) NetMgr::~NetMgr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e7d80 (  0x1424) NetMgr::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e91a4 (    0x48) NetMgr::addEmptyNet(CWIDAC const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e91ec (   0x19c) NetMgr::addSilNet(CWIDAC const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e9388 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45e9398 (   0x310) NetMgr::addNonSilNet(CWIDAC const&, bool, bool, int, unsigned short, int, B_NodeSkippingType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e96a8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45e96b8 (     0x8) NetMgr::removeNet(HmmNet*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e96c0 (    0x64) void DgnDelete<HmmNet>(HmmNet*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e9724 (   0x1b0) NetMgr::beginNetMgrSyncRecog(PicMgr const*, DgnPrimArray<short> const*, PelScoreCache*, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e98d4 (    0x50) NetMgr::endNetMgrSyncRecog() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e9924 (    0xac) NetMgr::beginNetMgrFrame(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e99d0 (     0x4) NetMgr::endNetMgrFrame(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e99d4 (   0x170) NetMgr::normalizeBestAndComputeEstimatedThresh(int, int, int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e9b44 (    0xf4) NetMgr::getBestDataMaybeShadow(bool, int*, int*, bool*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e9c38 (    0x88) NetMgr::computeEstimatedThreshThisFrame(int, unsigned short, int, int, int, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e9cc0 (   0x278) NetMgr::computeThreshScore(int, int, int, int, unsigned int*, unsigned long long*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45e9f38 (   0x100) NetMgr::adjustBestForBWBack(bool, int, int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45ea038 (   0x15c) NetMgr::shadowBest(NetMgr*, int, int, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45ea194 (    0x68) NetMgr::estimateActivePelsPrevFrame(BitArray*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45ea1fc (    0x6c) EmptyNet::EmptyNet(NetMgr*, CWIDAC const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45ea268 (    0xa4) NonCoartSyncNet::NonCoartSyncNet(NetMgr*, CWIDAC const&, B_NetShape, int, int, bool, B_NodeSkippingType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45ea30c (    0x94) SyncNet::SyncNet(NetMgr*, CWIDAC const&, B_NetShape, int, int, bool, B_NodeSkippingType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45ea3a0 (    0x64) DgnIdFactory<NetNBestTraceNoTime<unsigned int>, 1024u>::DgnIdFactory() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45ea404 (    0x40) DgnIArray<NetMgr*>::~DgnIArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45ea444 (    0x40) DgnIArray<NodeScoringData*>::~DgnIArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45ea484 (    0x40) DgnIArray<Node*>::~DgnIArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45ea4c4 (    0x6c) DgnIdFactory<NetNBestTraceNoTime<unsigned int>, 1024u>::~DgnIdFactory() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45ea530 (    0x9c) MrecInitModule_nbchoice_kernel() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45ea5cc (    0x80) NBestChoice::NBestChoice(DgnArray<WordLatticeLC> const&, ItemizedScores const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45ea64c (     0x4) NBestChoice::NBestChoice(DgnArray<WordLatticeLC> const&, ItemizedScores const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45ea650 (    0x34) void DgnDelete<DgnPrimArray<int>>(DgnPrimArray<int>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45ea684 (    0x34) void DgnDelete<DgnArray<WordConfidenceInfo>>(DgnArray<WordConfidenceInfo>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45ea6b8 (    0x44) NBestChoice::~NBestChoice() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45ea6fc (     0x4) NBestChoice::~NBestChoice() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45ea700 (   0x348) NBestChoiceList::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45eaa48 (    0xf8) unsigned long sizeObject<NBestChoice*>(DgnIOwnArray<NBestChoice*> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45eab40 (    0xd0) sizeObject(NBestChoice const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45eac10 (   0x158) unsigned long sizeObject<WordLatticeLC>(DgnArray<WordLatticeLC> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45ead68 (    0x90) DgnArray<WordConfidenceInfo>::reallocElts(unsigned int, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45eadf8 (    0x40) DgnArray<WordConfidenceInfo>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45eae38 (    0x88) DgnArray<WordLatticeLC>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45eaec0 (   0x1ec) DgnArray<WordLatticeLC>::copyArraySlice(DgnArray<WordLatticeLC> const&, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45eb0ac (    0xe0) DgnArray<WordConfidenceInfo>::copyArraySlice(DgnArray<WordConfidenceInfo> const&, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45eb18c (    0x70) unsigned long sizeObject<WordConfidenceInfo>(DgnArray<WordConfidenceInfo> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45eb1fc (    0x9c) MrecInitModule_multilm_lm() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45eb298 (   0x164) MultiLanguageModel::MultiLanguageModel(unsigned int, WordList const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45eb3fc (     0x4) MultiLanguageModel::MultiLanguageModel(unsigned int, WordList const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45eb400 (   0x1ac) MultiLanguageModel::~MultiLanguageModel() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45eb5ac (    0x34) void DgnDelete<RecentBuffer>(RecentBuffer*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45eb5e0 (     0x4) MultiLanguageModel::~MultiLanguageModel() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45eb5e4 (    0x28) MultiLanguageModel::~MultiLanguageModel() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45eb60c (  0x1f74) MultiLanguageModel::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45ed580 (    0xf0) unsigned long sizeObject<DgnPrimArray<short>>(DgnArray<DgnPrimArray<short>> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45ed670 (    0xf8) unsigned long sizeObject<HashNCHV<unsigned int, unsigned int, WordToScoreAndDurationHashHelper, ScoreAndDuration>*>(DgnIOwnArray<HashNCHV<unsigned int, unsigned int, WordToScoreAndDurationHashHelper, ScoreAndDuration>*> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45ed768 (    0x84) MultiLanguageModel::checkWordIdLmIdValidityAgreement(unsigned int, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45ed7ec (   0x1a0) MultiLanguageModel::dumpWordLM(DgnPrimArray<unsigned short>, unsigned short, bool, DgnStream*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45ed98c (   0x1b8) MultiLanguageModel::getWordTransducer(DgnPrimArray<unsigned short>, DgnPrimStructArray<WordLMTransducerArc>&, DgnArray<DgnPrimArray<unsigned int>>&, unsigned int, short, DgnPrimArray<unsigned int>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45edb44 (   0x1e4) MultiLanguageModel::verifyLM(bool, char const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45edd28 (    0xc4) MultiLanguageModel::beginLMSyncRecog(bool, LMContextData*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45eddec (    0xbc) MultiLanguageModel::beginRescoringInLMSyncRecog(LMContextData*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45edea8 (    0xc4) MultiLanguageModel::endLMSyncRecog(bool, LMContextData*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45edf6c (    0x84) MultiLanguageModel::clearLoadedData(B_LMClearLoadedType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45edff0 (   0x1c0) MultiLanguageModel::isFinalSilenceScoredVerify() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45ee1b0 (    0xb8) MultiLanguageModel::hasAnyQuadgrams() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45ee268 (   0x1b0) MultiLanguageModel::tri1HasTrigrams(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45ee418 (   0x284) MultiLanguageModel::quad1quad2HasQuadgrams(unsigned int, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45ee69c (    0xa4) MultiLanguageModel::createContextData() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45ee740 (   0x2d4) MultiLanguageModel::setContext(DgnPrimArray<unsigned int> const&, DgnPrimArray<unsigned int> const*, LMStats*, LMContextPars const&, LMContextData*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45eea14 (    0xd4) MultiLanguageModel::unsetContext(LMContextData*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45eeae8 (   0x154) MultiLanguageModel::mayWordBeIgnoredInContext(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45eec3c (    0x88) MultiLanguageModel::getNumLoadedBigramBytes() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45eecc4 (    0x88) MultiLanguageModel::getNumLoadedTrigramBytes() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45eed4c (    0x90) MultiLanguageModel::getNumLoadedQuadgramBytes() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45eeddc (    0x44) MultiLanguageModel::getDefaultRestrictRange(unsigned int*, unsigned int*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45eee20 (    0x70) MultiLanguageModel::getValidTopicLmSlots(DgnPrimArray<unsigned int>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45eee90 (   0x1bc) MultiLanguageModel::getTopicLmSlotNames(DgnArray<DgnString>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45ef04c (    0x28) MultiLanguageModel::getTopicLmSlotId(DgnString const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45ef074 (   0x230) MultiLanguageModel::setTopicLmSlotName(unsigned int, DgnString const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45ef2a4 (    0x6c) MultiLanguageModel::getTopicLmSlotName(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45ef310 (    0x94) MultiLanguageModel::hasTopicLM(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45ef3a4 (   0x130) MultiLanguageModel::getInternalTopicLmSlot(unsigned int*, MultiLanguageModel const**, unsigned int*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45ef4d4 (   0x18c) MultiLanguageModel::deleteTopicLMs(DgnPrimArray<unsigned int> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45ef660 (   0x228) MultiLanguageModel::deleteTopicLMsInternal(DgnPrimArray<bool> const&, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45ef888 (    0x68) MultiLanguageModel::adjustNamedWeightsSets() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45ef8f0 (    0x70) MultiLanguageModel::getValidFactoryCorrectiveLms(DgnPrimArray<unsigned int>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45ef960 (   0x1bc) MultiLanguageModel::getFactoryCorrectiveLmNames(DgnArray<DgnString>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45efb1c (    0x28) MultiLanguageModel::getFactoryCorrectiveLmId(DgnString const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45efb44 (   0x234) MultiLanguageModel::setFactoryCorrectiveLmName(unsigned int, DgnString const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45efd78 (    0xdc) MultiLanguageModel::getInternalFactoryCorrectiveLm(unsigned int*, MultiLanguageModel**, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45efe54 (    0x6c) MultiLanguageModel::getFactoryCorrectiveLmName(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45efec0 (   0x1ec) MultiLanguageModel::getActiveFactoryCorrectiveLms(DgnPrimArray<unsigned int> const&, DgnPrimArray<bool>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45f00ac (   0x148) MultiLanguageModel::getActiveFactoryCorrectiveLmsInternal(DgnPrimArray<bool>*, unsigned int*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45f01f4 (   0x1cc) MultiLanguageModel::setActiveFactoryCorrectiveLms(DgnPrimArray<unsigned int> const&, DgnPrimArray<bool> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45f03c0 (   0x118) MultiLanguageModel::setActiveFactoryCorrectiveLmsInternal(DgnPrimArray<int> const&, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45f04d8 (   0x21c) MultiLanguageModel::addWord(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45f06f4 (    0x84) MultiLanguageModel::addUnmappedWord(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45f0778 (   0x1bc) MultiLanguageModel::deleteWord(unsigned int, bool*, bool*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45f0934 (    0x88) MultiLanguageModel::recomputeRecentBufferHeadClonesAndCommonWords() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45f09bc (    0x88) MultiLanguageModel::recomputeRecentBufferRemainders() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45f0a44 (    0x74) MultiLanguageModel::notifyEmptiedWordList() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45f0ab8 (   0x39c) MultiLanguageModel::loadUnsTable(DgnPrimArray<unsigned int>*, char const*, unsigned int, unsigned int, unsigned int, DgnTextFileParser*, int, int, int, int, int, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45f0e54 (    0x70) SubDirExtension::appendToString(DgnString*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45f0ec4 (   0x360) MultiLanguageModel::loadIntTable(DgnPrimArray<int>*, char const*, int, int, int, DgnTextFileParser*, int, int, int, int, int, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45f1224 (   0x408) MultiLanguageModel::loadRealTable(DgnPrimArray<double>*, DgnString*, char const*, double, double, double, DgnTextFileParser*, int, int, int, int, int, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45f162c (   0x36c) MultiLanguageModel::loadStringTable(DgnArray<DgnString>*, char const*, DgnTextFileParser*, int, int, int, int, int, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45f1998 (   0x3e4) MultiLanguageModel::loadLM(DFile*, DFile*, DFileChecksums*, DgnSharedMemStream*, bool, bool, bool, unsigned int, unsigned int, bool, bool, bool*, bool*, double*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45f1d7c (   0x450) MultiLanguageModel::loadMultiBinary(DFile*, DFileChecksums*, bool*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45f21cc (   0xb18) MultiLanguageModel::loadComponentLMSubFiles(bool, DFile*, DFile*, DFileChecksums*, DgnSharedMemStream*, bool, bool, bool, unsigned int, unsigned int, bool, bool, bool*, bool*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45f2ce4 (  0x2084) MultiLanguageModel::loadMultiText(DFile*, bool, DgnPrimArray<double>*, bool*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45f4d68 (   0x114) void readObject<DgnPrimArray<double>>(DgnStream*, DgnArray<DgnPrimArray<double>>&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45f4e7c (    0xd4) void readObject<unsigned int>(DgnStream*, IdMgr<unsigned int>&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45f4f50 (    0xcc) void readObject<WordDummySpec>(DgnStream*, DgnArray<WordDummySpec>&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45f501c (   0x2f8) MultiLanguageModel::saveMultiBinary(DFile*, DFileChecksums*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45f5314 (    0x88) void writeObject<DgnPrimArray<double>>(DgnStream*, DgnArray<DgnPrimArray<double>> const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45f539c (    0x88) void writeObject<DgnPrimArray<short>>(DgnStream*, DgnArray<DgnPrimArray<short>> const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45f5424 (    0x88) void writeObject<unsigned int>(DgnStream*, IdMgr<unsigned int> const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45f54ac (    0x8c) DgnArray<DgnString>::findBelow(DgnString const&, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45f5538 (   0x55c) MultiLanguageModel::verifySubdirContents(DFile const*, unsigned int, bool, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45f5a94 (    0x88) MultiLanguageModel::getTotalPreloadableBytes() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45f5b1c (    0x88) MultiLanguageModel::computeTotalPreloadableBytes() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45f5ba4 (   0x2cc) MultiLanguageModel::finalizeLM(LanguageModel*, DFile*, DFileChecksums*, DgnSharedMemStream*, bool, bool, unsigned int, unsigned int, bool, DgnIOwnArray<WordNgramTemplate*>*, bool, unsigned long long, long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45f5e70 (   0x274) MultiLanguageModel::maybeUpgradeToWordNgramTemplates(LanguageModel*, DFile*, unsigned int, unsigned int, bool, DgnIOwnArray<WordNgramTemplate*>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45f60e4 (   0x2e8) MultiLanguageModel::setWordNgramTemplates(DgnIOwnArray<WordNgramTemplate*> const*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45f63cc (   0x6f4) MultiLanguageModel::getLMForDirPathVerify(char const*, DgnString const&, LanguageModel*, DFile*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45f6ac0 (   0x104) MultiLanguageModel::getLMWithLegacyPath(DgnString*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45f6bc4 (    0x74) MultiLanguageModel::canSaveAsText() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45f6c38 (   0x140) MultiLanguageModel::saveUnsTable(DgnPrimArray<unsigned int> const&, char const*, DgnTextFileWriter*, int, int, int, int, int, int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45f6d78 (   0x13c) MultiLanguageModel::saveIntTable(DgnPrimArray<int> const&, char const*, DgnTextFileWriter*, int, int, int, int, int, int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45f6eb4 (   0x14c) MultiLanguageModel::saveRealTable(DgnPrimArray<double> const&, DgnString const&, char const*, DgnTextFileWriter*, int, int, int, int, int, int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45f7000 (   0x158) MultiLanguageModel::saveStringTable(DgnArray<DgnString> const&, char const*, DgnTextFileWriter*, int, int, int, int, int, int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45f7158 (   0xb4c) MultiLanguageModel::saveMultiText(DFile*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45f7ca4 (   0x128) MultiLanguageModel::saveLM(DFile*, DFileChecksums*, bool, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45f7dcc (    0x98) MultiLanguageModel::saveLMShared(DgnSharedMemStream*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45f7e64 (    0x98) MultiLanguageModel::reloadLMShared(DgnSharedMemStream*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45f7efc (   0x198) MultiLanguageModel::saveVocAndSvc(DFile*, DFile*, DFileChecksums*, DFileChecksums*, bool, unsigned long long, unsigned long long, B_LMSBigramTrigramGroupingType, B_LMSQuadgramGroupingType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45f8094 (    0x98) MultiLanguageModel::setLMScale(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45f812c (    0x74) MultiLanguageModel::recentBufferUsesWord(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45f81a0 (    0x94) MultiLanguageModel::hasRecentBuffer() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45f8234 (    0x98) MultiLanguageModel::getRecentBufferLength() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45f82cc (    0xa0) MultiLanguageModel::addToRecent(DgnPrimArray<unsigned int> const&, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45f836c (    0x80) MultiLanguageModel::clearRecent() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45f83ec (   0x23c) MultiLanguageModel::setWeights(DgnPrimArray<double> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45f8628 (   0x4d4) MultiLanguageModel::fitWeightsToFloorAndCeiling(DgnPrimArray<double> const&, DgnPrimArray<double>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45f8afc (   0x1d8) MultiLanguageModel::failsafeFitWeightsToFloorAndCeiling(DgnPrimArray<double> const&, DgnPrimArray<double>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45f8cd4 (    0x18) MultiLanguageModel::getNumDispatchComponents() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45f8cec (    0xd4) MultiLanguageModel::setDispatchPrefiltererPerWordPenalty(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45f8dc0 (    0x94) MultiLanguageModel::getDispatchPrefiltererPerWordPenalty(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45f8e54 (    0x88) MultiLanguageModel::getNumInterpolatedLms() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45f8edc (    0xe8) MultiLanguageModel::setInterpolatedLmWeights(DgnPrimArray<double> const&, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45f8fc4 (    0xac) MultiLanguageModel::getInterpolatedLmWeights(unsigned int*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45f9070 (   0x1c0) MultiLanguageModel::getActiveTopicLmSlots(DgnPrimArray<unsigned int> const&, DgnPrimArray<bool>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45f9230 (   0x144) MultiLanguageModel::getActiveTopicLmSlotsInternal(DgnPrimArray<bool>*, unsigned int*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45f9374 (   0x1e0) MultiLanguageModel::setTopicLmSlotWeights(DgnPrimArray<unsigned int> const&, DgnPrimArray<double> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45f9554 (   0x364) MultiLanguageModel::setTopicLmSlotWeightsInternal(DgnPrimArray<double> const&, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45f98b8 (     0x8) MultiLanguageModel::hasWeights() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45f98c0 (    0x1c) MultiLanguageModel::getWeightsData(DgnArray<DgnString> const**, unsigned int*, unsigned int*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45f98dc (    0xdc) MultiLanguageModel::cleanupWeightsData() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45f99b8 (   0x54c) MultiLanguageModel::makeNewWeights(DgnString const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45f9f04 (   0x2b4) MultiLanguageModel::adjustNamedWeightsSet(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45fa1b8 (   0x228) MultiLanguageModel::deleteWeights(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45fa3e0 (   0x17c) MultiLanguageModel::applyWeights(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45fa55c (    0xc0) MultiLanguageModel::getValidWeightsIds(DgnPrimArray<unsigned int>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45fa61c (    0x28) MultiLanguageModel::getWeightsId(DgnString const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45fa644 (    0x80) MultiLanguageModel::getWeightsName(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45fa6c4 (    0x84) MultiLanguageModel::isFactoryWeights(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45fa748 (    0x6c) MultiLanguageModel::checkWeightsId(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45fa7b4 (   0x4a8) MultiLanguageModel::languageScore(unsigned int, unsigned int, LMStats*, LMContextData*, LMScoreDetails*, bool, bool, bool*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45fac5c (    0xc8) LMScoreDetails::addDetails(short, B_LMScoreComponentType, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45fad24 (   0x398) MultiLanguageModel::languageScoreForSearch(unsigned int, unsigned int, LMStats*, LMContextData*, bool, bool*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45fb0bc (   0x938) MultiLanguageModel::languageScoreForPrefilterer(DgnPrimArray<unsigned int> const&, ScoreArray*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45fb9f4 (   0xbe4) MultiLanguageModel::adaptLMFromTranscripts(DgnArray<DgnPrimArray<unsigned int>> const&, DgnArray<DgnPrimArray<unsigned int>> const&, DgnPrimArray<unsigned int> const&, int, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45fc5d8 (   0x134) MultiLanguageModel::setWeightsForNewTopicLM(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45fc70c (   0x17c) MultiLanguageModel::startBuildingTopicLM(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45fc888 (    0x94) MultiLanguageModel::addBuildTopicLM(DgnArray<DgnPrimArray<unsigned int>> const&, DgnArray<DgnPrimArray<unsigned int>> const&, DgnPrimArray<unsigned int> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45fc91c (   0x1f8) MultiLanguageModel::endBuildingTopicLM(DgnArray<DgnPrimArray<unsigned int>> const&, DgnArray<DgnPrimArray<unsigned int>> const&, DgnPrimArray<unsigned int> const&, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45fcb14 (    0xa8) MultiLanguageModel::abortBuildingTopicLM() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45fcbbc (    0x10) MultiLanguageModel::isBuildingTopicLM() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45fcbcc (     0x8) MultiLanguageModel::getBuildExternalTopicLmSlot() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45fcbd4 (     0x8) MultiLanguageModel::getRecentBufferLanguageModel() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45fcbdc (    0xd4) MultiLMContextData::MultiLMContextData(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45fccb0 (    0x48) MultiLMContextData::~MultiLMContextData() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45fccf8 (    0x58) MultiLMContextData::~MultiLMContextData() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45fcd50 (    0x30) MultiLMContextData::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45fcd80 (    0x6c) DgnIOwnArray<LanguageModel*>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45fcdec (    0x40) DgnIArray<WordLanguageModel*>::~DgnIArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45fce2c (    0x4c) DgnPrimArray<B_LMSlotType>::~DgnPrimArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45fce78 (    0x40) DgnArray<WordDummySpec>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45fceb8 (    0x44) DgnIOwnArray<WordNgramBuildSpec*>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45fcefc (    0x6c) DgnIOwnArray<WordNgramBuildSpec*>::destructAt(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45fcf68 (    0x40) DgnIArray<WordNgramTemplate*>::~DgnIArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45fcfa8 (    0x9c) void readObject<unsigned int, DgnPrimArray<unsigned int>>(DgnStream*, DgnPrimQueue<unsigned int, DgnPrimArray<unsigned int>>&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45fd044 (    0xf4) void writeObject<unsigned int, DgnPrimArray<unsigned int>>(DgnStream*, DgnPrimQueue<unsigned int, DgnPrimArray<unsigned int>> const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45fd138 (    0x90) DgnArray<DgnArray<ScoreArray>>::DgnArray(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45fd1c8 (    0x68) DgnArray<DgnArray<ScoreArray>>::destructAt(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45fd230 (    0x44) DgnArray<DgnArray<ScoreArray>>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45fd274 (     0x4) MrecInitModule_mactive_kernel() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45fd278 (   0x1e0) MergedStateTransition::updateMergedStateTransition(PredState const&, HiddenState const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45fd458 (    0x6c) DgnArray<PredState>::reverseFind(PredState const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45fd4c4 (    0x5c) sizeObject(MergedStateTransition const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45fd520 (    0xf4) unsigned long sizeObject<BitArray>(DgnArray<BitArray> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45fd614 (   0x1c0) SeedMergedActiveWord::processMergedWord(ActiveWord*, HistoryMgr const*, PhnIndexSet const&, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45fd7d4 (   0x10c) void SeedMergedActiveWord::processOnePredStateForPort<true>(MergedStateTransition const*, HistoryMgr const*, int, unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45fd8e0 (   0x12c) void SeedMergedActiveWord::processOnePredStateForPort<false>(MergedStateTransition const*, HistoryMgr const*, int, unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45fda0c (    0xa8) sizeObject(SeedMergedActiveWord const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45fdab4 (    0x10) MergedActive::initMergedActive(HistoryMgr const*, bool, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45fdac4 (    0x7c) sizeObject(MergedActive const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45fdb40 (    0x68) unsigned long sizeObject<BaseNode*>(DgnIArray<BaseNode*> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45fdba8 (    0x5c) DgnArray<PredState>::find(PredState const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45fdc04 (    0x58) ActiveWord::maybeGetNonSilOutPort(unsigned short) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45fdc5c (     0x4) MrecInitModule_pbpcache_prefilt() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45fdc60 (   0x4c8) StartupPrefiltererBuildParamSpecMgr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45fe128 (   0x10c) PrefiltererBuildParamSet::PrefiltererBuildParamSet(char const*, B_ParamSetType, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45fe234 (     0x4) PrefiltererBuildParamSet::PrefiltererBuildParamSet(char const*, B_ParamSetType, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45fe238 (   0x160) PrefiltererBuildParamSet::PrefiltererBuildParamSet(PrefiltererBuildParamSet const&, char const*, B_ParamSetType, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45fe398 (     0x4) PrefiltererBuildParamSet::PrefiltererBuildParamSet(PrefiltererBuildParamSet const&, char const*, B_ParamSetType, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45fe39c (   0x1d8) PrefiltererBuildParamSet::setDefaults() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45fe574 (    0xac) PrefiltererBuildParamSet::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45fe620 (    0x24) PrefiltererBuildParamSet::setParamSetPrefiltererBuildHierScorerBeamList(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45fe644 (    0x24) PrefiltererBuildParamSet::setParamSetPrefiltererBuildHierScorerCutoffRatioList(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45fe668 (   0x2dc) PrefiltererBuildParamSet::getBoolParameter(unsigned short, B_ParamQueryMode) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45fe944 (    0x4c) (null) [FUNC, FunctionStarts] 
                0x00000001b45fe990 (   0x47c) PrefiltererBuildParamSet::getIntParameter(unsigned short, B_ParamQueryMode) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45fee0c (    0x4c) (null) [FUNC, FunctionStarts] 
                0x00000001b45fee58 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45fee68 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45fee78 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45fee88 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45fee98 (   0x424) PrefiltererBuildParamSet::getDoubleParameter(unsigned short, B_ParamQueryMode) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45ff2bc (    0x4c) (null) [FUNC, FunctionStarts] 
                0x00000001b45ff308 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45ff318 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45ff328 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45ff338 (   0x2bc) PrefiltererBuildParamSet::getStringParameter(unsigned short, B_ParamQueryMode) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45ff5f4 (    0x4c) (null) [FUNC, FunctionStarts] 
                0x00000001b45ff640 (   0x4e0) PrefiltererBuildParamSet::getEnumParameter(unsigned short, B_ParamQueryMode) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45ffb20 (    0x4c) (null) [FUNC, FunctionStarts] 
                0x00000001b45ffb6c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45ffb7c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45ffb8c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45ffb9c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45ffbac (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b45ffbbc (   0x284) PrefiltererBuildParamSet::setBoolParameter(unsigned short, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b45ffe40 (    0x4c) (null) [FUNC, FunctionStarts] 
                0x00000001b45ffe8c (   0x420) PrefiltererBuildParamSet::setIntParameter(unsigned short, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46002ac (    0x4c) (null) [FUNC, FunctionStarts] 
                0x00000001b46002f8 (   0x3b4) PrefiltererBuildParamSet::setDoubleParameter(unsigned short, double) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46006ac (    0x4c) (null) [FUNC, FunctionStarts] 
                0x00000001b46006f8 (   0x260) PrefiltererBuildParamSet::setStringParameter(unsigned short, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4600958 (    0x4c) (null) [FUNC, FunctionStarts] 
                0x00000001b46009a4 (   0x450) PrefiltererBuildParamSet::setEnumParameter(unsigned short, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4600df4 (    0x4c) (null) [FUNC, FunctionStarts] 
                0x00000001b4600e40 (     0x4) PrefiltererBuildParamSet::~PrefiltererBuildParamSet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4600e44 (    0x28) PrefiltererBuildParamSet::~PrefiltererBuildParamSet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4600e6c (    0x78) PrefiltererBuildParamSet::~PrefiltererBuildParamSet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4600ee4 (   0x26c) MrecInitModule_wordlist_word() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4601150 (    0x34) WordIdCollSearchCmp(void const*, void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4601184 (    0xc4) WordIdCollSearchCmpFromWordId(void const*, void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4601248 (    0x50) TagBitsAndStrings::reInit() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4601298 (   0x154) TagBitsAndStrings::compact() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46013ec (    0xc4) TagBitsAndStrings::setTagBits(unsigned int, BitArray const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46014b0 (   0x1d0) TagBitsAndStrings::createIndex(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4601680 (    0xa8) TagBitsAndStrings::getTagBits(unsigned int, BitArray*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4601728 (    0x74) TagBitsAndStrings::setTagString(unsigned int, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460179c (    0x68) writeObject(DgnStream*, TagBitsAndStrings const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4601804 (   0x1cc) readObject(DgnStream*, TagBitsAndStrings&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46019d0 (    0xfc) void readObject<unsigned int, unsigned int, WordIdScope, unsigned int>(DgnStream*, HashNCHV<unsigned int, unsigned int, WordIdScope, unsigned int>&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4601acc (     0x4) HashNCHV<unsigned int, unsigned int, WordIdScope, unsigned int>::~HashNCHV() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4601ad0 (   0x37c) WordList::WordList(CollMgr*, PronCollMgr const*, PhnMgr const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4601e4c (     0x4) WordList::WordList(CollMgr*, PronCollMgr const*, PhnMgr const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4601e50 (   0x128) WordList::~WordList() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4601f78 (     0x4) WordList::~WordList() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4601f7c (    0x80) WordList::computeWordIdNameChecksum(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4601ffc (    0xa8) WordList::computeWordIdPronChecksum(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46020a4 (    0xcc) WordList::computeWordChecksums() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4602170 (  0x28ac) WordList::loadTwl(DFile*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4604a1c (   0x240) splitTagsString(DgnString const&, DgnArray<DgnString>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4604c5c (   0x1c0) tagStringToTagBits(DgnString const&, DgnArray<DgnString> const&, BitArray*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4604e1c (   0x338) WordList::setSizeForWordListLoad(int, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4605154 (   0x130) WordList::strToPhonemes(char const*, DgnPrimArray<unsigned short>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4605284 (   0x110) WordList::checkNewTwlWordBoundaryPhonemes(DgnPrimArray<unsigned short> const&, unsigned int, DgnString const&, DgnString const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4605394 (   0x468) WordList::addWordInternal(bool, unsigned int, unsigned int, int, char const*, unsigned char, DgnPrimArray<unsigned short> const&, bool, bool, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46057fc (    0x84) WordList::setPronPredecessorSeedCategory(unsigned int, unsigned char) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4605880 (    0x84) WordList::setPronSuccessorSeedCategory(unsigned int, unsigned char) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4605904 (   0x1c4) WordList::setupWordIdsForWordListLoad() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4605ac8 (    0xa0) WordList::lookupWord(char const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4605b68 (     0x8) WordList::setColls(DgnPrimArray<unsigned short> const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4605b70 (    0xa4) copyBadPredecessorSeedCategoryArray(DgnArray<BadPredecessorSeedCategory> const&, DgnPrimArray<unsigned char>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4605c14 (    0xa4) copyBadSuccessorSeedCategoryArray(DgnArray<BadSuccessorSeedCategory> const&, DgnPrimArray<unsigned char>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4605cb8 (   0x834) WordList::loadBinary(DFile*, DFileChecksums*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46064ec (   0x114) void readObject<DgnPrimArray<bool>>(DgnStream*, DgnArray<DgnPrimArray<bool>>&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4606600 (    0xb4) void readObject<BadSuccessorSeedCategory>(DgnStream*, DgnArray<BadSuccessorSeedCategory>&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46066b4 (    0x5c) WordList::setEndPhonesInfo(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4606710 (     0x8) WordList::willLoadWordListInTextFormat(DFile*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4606718 (    0x7c) WordList::loadWordList(DFile*, DFileChecksums*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4606794 (   0x51c) WordList::compact() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4606cb0 (  0x1040) WordList::saveTwl(DFile*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4607cf0 (     0x8) WordList::getValidIdCount() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4607cf8 (   0x1f0) WordList::getAllByRootId(DgnArray<DgnPrimArray<unsigned int>>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4607ee8 (    0x20) WordList::getPronPredecessorSeedCategory(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4607f08 (    0x20) WordList::getPronSuccessorSeedCategory(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4607f28 (    0x70) WordList::getHumanReadablePron(unsigned int, DgnString*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4607f98 (    0xcc) tagBitsToTagString(BitArray const&, DgnArray<DgnString> const&, DgnString*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4608064 (   0x308) WordList::saveBinary(DFile*, DFileChecksums*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460836c (    0x88) void writeObject<DgnPrimArray<bool>>(DgnStream*, DgnArray<DgnPrimArray<bool>> const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46083f4 (    0x14) WordList::saveWordList(DFile*, DFileChecksums*, bool, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4608408 (  0x2038) WordList::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460a440 (    0xf0) unsigned long sizeObject<DgnPrimArray<bool>>(DgnArray<DgnPrimArray<bool>> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460a530 (   0x1a0) WordList::lookupAll(char const*, DgnPrimArray<unsigned int>*, unsigned int*, unsigned int*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460a6d0 (    0xd8) WordList::lookupAllClientAddedProns(char const*, DgnPrimArray<unsigned int>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460a7a8 (    0x24) WordList::lookupAll(unsigned int, DgnPrimArray<unsigned int>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460a7cc (    0xe4) WordList::getAllGuessedWordsByOptionalTag(DgnPrimArray<unsigned int>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460a8b0 (    0x5c) WordList::numAltProns(char const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460a90c (     0x8) WordList::getColls() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460a914 (    0xc0) WordList::getWordsWithPrefix(unsigned short, char const*, char const*, DgnPrimArray<unsigned int>*, bool*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460a9d4 (   0x484) WordList::getWordsWithPrefix(DgnPrimArray<unsigned int> const*, unsigned short, char const*, char const*, DgnPrimArray<unsigned int>*, bool*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460ae58 (    0xd4) DgnPrimArray<unsigned int>::searchFirstEqualWithLastEqualBounds(int, int, void const*, int (*)(void const*, void const*), int*, int*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460af2c (    0xb4) DgnPrimArray<unsigned int>::searchLastEqual(int, int, void const*, int (*)(void const*, void const*)) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460afe0 (     0x8) WordList::getWordsWithCommonPron(unsigned int, DgnPrimArray<unsigned int>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460afe8 (    0x60) WordList::verifyValid(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460b048 (    0x74) WordList::verifyVisible(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460b0bc (   0x110) WordList::verifyModifiable(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460b1cc (   0x1a0) WordList::verifyDeletable(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460b36c (    0x74) WordList::addWord(char const*, unsigned char, bool, bool, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460b3e0 (   0x314) WordList::getFreeId() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460b6f4 (    0x2c) WordList::getTagBits(unsigned int, bool, BitArray*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460b720 (   0x264) WordList::setPron(unsigned int, DgnPrimArray<unsigned short> const&, unsigned char, unsigned char, bool, bool, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460b984 (   0x42c) WordList::addClientPronsAvoidDuplicates(unsigned int, DgnPrimArray<unsigned int>*, DgnPrimArray<unsigned int>*, DgnArray<DgnPrimArray<unsigned short>> const&, DgnPrimArray<unsigned char> const&, DgnPrimArray<unsigned char> const&, unsigned int, char const*, DgnPrimArray<unsigned int>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460bdb0 (   0x100) WordList::getPronWithWB(unsigned int, DgnPrimArray<unsigned short>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460beb0 (    0x88) WordList::getNumClientProns(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460bf38 (   0x220) WordList::deleteWordClientProns(unsigned int, DgnPrimArray<unsigned int> const&, DgnPrimArray<unsigned int>*, DgnPrimArray<unsigned int>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460c158 (   0x138) WordList::invalidateId(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460c290 (   0x1c0) WordList::resetWordList() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460c450 (   0x214) WordList::deleteWords(DgnPrimArray<unsigned int> const&, bool*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460c664 (    0x80) WordList::getNumProns(unsigned int, unsigned int*, unsigned int*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460c6e4 (    0x80) WordList::getPron(unsigned int, DgnPrimArray<unsigned short>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460c764 (   0x1e0) WordList::getWordFamilyCollatedSeedableProns(unsigned int, bool, unsigned char, DgnArray<DgnPrimArray<unsigned short>>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460c944 (     0x8) WordList::getRequiredWordTagsVersion() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460c94c (     0x8) WordList::getOptionalWordTagsVersion() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460c954 (    0x14) WordList::addIncludingStateRef(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460c968 (    0x14) WordList::removeIncludingStateRef(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460c97c (     0xc) WordList::getIncludingStateRefCount(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460c988 (    0x14) WordList::addIncludingRuleRef(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460c99c (    0x14) WordList::removeIncludingRuleRef(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460c9b0 (     0xc) WordList::getIncludingRuleRefCount(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460c9bc (     0xc) WordList::getIncludingLatticeRefCount(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460c9c8 (    0x14) WordList::addIncludingPrefilterResultRef(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460c9dc (    0x14) WordList::removeIncludingPrefilterResultRef(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460c9f0 (     0xc) WordList::getIncludingPrefilterResultRefCount(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460c9fc (    0x14) WordList::addIncludingSausageRef(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460ca10 (    0x14) WordList::removeIncludingSausageRef(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460ca24 (     0xc) WordList::getIncludingSausageRefCount(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460ca30 (    0xa8) WordList::phonemesToStr(DgnPrimArray<unsigned short> const&, DgnString*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460cad8 (    0x8c) WordList::compareElements(void*, void const*, void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460cb64 (    0xdc) HashNCHV<unsigned int, unsigned int, WordIdScope, unsigned int>::HashNCHV(char const*, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460cc40 (    0x28) HashNCHV<unsigned int, unsigned int, WordIdScope, unsigned int>::~HashNCHV() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460cc68 (    0x40) DgnIFixArray<BucketLinkNCHV<unsigned int, unsigned int>*>::~DgnIFixArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460cca8 (    0x74) HashNCHV<unsigned int, unsigned int, WordIdScope, unsigned int>::~HashNCHV() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460cd1c (    0x94) HashNCHV<unsigned int, unsigned int, WordToScoreAndDurationHashHelper, ScoreAndDuration>::removeAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460cdb0 (    0x70) HashNCHV<unsigned int, unsigned int, WordIdScope, unsigned int>::reInit(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460ce20 (    0xe4) HashNCHV<unsigned int, unsigned int, WordIdScope, unsigned int>::add(unsigned int const&, unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460cf04 (   0x110) HashNCHV<unsigned int, unsigned int, WordIdScope, unsigned int>::upSize(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460d014 (    0x40) DgnArray<BadPredecessorSeedCategory>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460d054 (    0x40) DgnArray<BadSuccessorSeedCategory>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460d094 (     0x4) MrecInitModule_dummylm_lm() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460d098 (    0x34) DummyLanguageModel::DummyLanguageModel(unsigned int, WordList const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460d0cc (   0x1a0) DummyLanguageModel::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460d26c (     0x4) DummyLanguageModel::checkWordIdLmIdValidityAgreement(unsigned int, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460d270 (     0x4) DummyLanguageModel::verifyLM(bool, char const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460d274 (    0x50) DummyLanguageModel::dumpWordLM(DgnPrimArray<unsigned short>, unsigned short, bool, DgnStream*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460d2c4 (    0x50) DummyLanguageModel::getWordTransducer(DgnPrimArray<unsigned short>, DgnPrimStructArray<WordLMTransducerArc>&, DgnArray<DgnPrimArray<unsigned int>>&, unsigned int, short, DgnPrimArray<unsigned int>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460d314 (    0x3c) DummyLanguageModel::languageScore(unsigned int, unsigned int, LMStats*, LMContextData*, LMScoreDetails*, bool, bool, bool*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460d350 (    0x10) DummyLanguageModel::languageScoreForSearch(unsigned int, unsigned int, LMStats*, LMContextData*, bool, bool*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460d360 (    0x80) DummyLanguageModel::languageScoreForPrefilterer(DgnPrimArray<unsigned int> const&, ScoreArray*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460d3e0 (     0x8) DummyLanguageModel::isFinalSilenceScoredVerify() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460d3e8 (     0x4) DummyLanguageModel::addWord(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460d3ec (     0x4) DummyLanguageModel::addUnmappedWord(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460d3f0 (     0x4) DummyLanguageModel::deleteWord(unsigned int, bool*, bool*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460d3f4 (     0x4) DummyLanguageModel::recomputeRecentBufferHeadClonesAndCommonWords() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460d3f8 (     0x4) DummyLanguageModel::recomputeRecentBufferRemainders() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460d3fc (     0x4) DummyLanguageModel::notifyEmptiedWordList() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460d400 (     0x4) DummyLanguageModel::loadLM(DFile*, DFile*, DFileChecksums*, DgnSharedMemStream*, bool, bool, bool, unsigned int, unsigned int, bool, bool, bool*, bool*, double*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460d404 (     0x4) DummyLanguageModel::saveLMShared(DgnSharedMemStream*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460d408 (     0x4) DummyLanguageModel::reloadLMShared(DgnSharedMemStream*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460d40c (     0x8) DummyLanguageModel::canSaveAsText() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460d414 (     0x4) DummyLanguageModel::saveLM(DFile*, DFileChecksums*, bool, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460d418 (     0x8) DummyLanguageModel::setLMScale(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460d420 (     0x8) DummyLanguageModel::recentBufferUsesWord(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460d428 (     0x4) DummyLanguageModel::~DummyLanguageModel() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460d42c (    0x28) DummyLanguageModel::~DummyLanguageModel() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460d454 (    0x58) LanguageModel::createContextData() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460d4ac (     0x8) DummyLanguageModel::getRecentBufferLanguageModel() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460d4b4 (     0x4) LMContextData::~LMContextData() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460d4b8 (     0x4) LMContextData::~LMContextData() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460d4bc (    0x10) LMContextData::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460d4cc (   0x1f8) MrecInitModule_osfile_mrecutil() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460d6c4 (    0x5c) OsFile::OsFile(FileSpec const&, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460d720 (    0xe0) OsFile::~OsFile() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460d800 (     0x4) OsFile::~OsFile() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460d804 (    0x34) OsFile::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460d838 (   0x104) OsFile::deleteFileAndCleanUp() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460d93c (   0x100) OsFile::seekFromBeg(unsigned long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460da3c (    0x14) OsFile::seekFromBegGrowWithZeros(unsigned long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460da50 (   0x19c) OsFile::seekToEnd() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460dbec (     0x8) OsFile::tell() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460dbf4 (   0x184) OsFile::readBytes(char*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460dd78 (   0x100) OsFile::writeBytes(char const*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460de78 (    0xe4) OsFile::getFileSize() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460df5c (   0x198) OsFile::shrinkSize(unsigned long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460e0f4 (   0x100) OsFile::openOsFile(FileSpec const&, B_OsFileOpenMode) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460e1f4 (    0x1c) OsFile::fileExists(FileSpec const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460e210 (    0xf0) OsFile::fileExists(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460e300 (    0x3c) OsFile::dirExists(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460e33c (    0x34) void DgnDelete<OsFile>(OsFile*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460e370 (    0x48) OsFile::compareElements(void*, void const*, void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460e3b8 (   0x398) FindMatchingFiles(FileSpec const&, DgnArray<FileSpec>*, DgnPrimArray<bool>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460e750 (    0x58) DgnArray<FileSpec>::add() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460e7a8 (    0x54) DgnPrimArray<bool>::add(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460e7fc (   0x7b8) void mrec_qsort_r<OsFile>(void*, unsigned long, unsigned long, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460efb4 (    0xc0) DgnArray<FileSpec>::DgnArray(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460f074 (   0x130) DgnArray<FileSpec>::copyArraySlice(DgnArray<FileSpec> const&, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460f1a4 (     0x4) MrecInitModule_contextset_fstgraph() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460f1a8 (   0x110) MrecInitModule_retlist_prefilt() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460f2b8 (    0x30) ReturnListMgr::ReturnListMgr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460f2e8 (    0x54) ReturnListMgr::~ReturnListMgr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460f33c (     0x4) ReturnListMgr::~ReturnListMgr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460f340 (   0x688) ReturnListMgr::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460f9c8 (    0xf0) unsigned long sizeObject<ScoreArray>(DgnArray<ScoreArray> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460fab8 (   0x15c) ReturnListMgr::setReturnScoreAndDuration(int, unsigned int, int, short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460fc14 (   0x114) ReturnListMgr::makeRoomInHash(HashNCHV<unsigned int, unsigned int, WordToScoreAndDurationHashHelper, ScoreAndDuration>*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460fd28 (    0xe4) HashNCHV<unsigned int, unsigned int, WordToScoreAndDurationHashHelper, ScoreAndDuration>::add(unsigned int const&, ScoreAndDuration const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460fe0c (    0xb4) ReturnListMgr::compareElements(void*, void const*, void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b460fec0 (   0x16c) ReturnListMgr::finishList(int, DgnArray<Germ>*, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b461002c (   0x37c) ReturnListMgr::returnGerms(int, DgnArray<Germ>*, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46103a8 (   0x7b8) void mrec_qsort_r<ReturnListMgr>(void*, unsigned long, unsigned long, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4610b60 (   0x20c) ReturnListMgr::getCutoffScore(HashNCHV<unsigned int, unsigned int, WordToScoreAndDurationHashHelper, ScoreAndDuration> const*, unsigned int, unsigned int*, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4610d6c (   0x20c) ReturnListMgr::addToReturnList(int, int, unsigned int, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4610f78 (     0x8) ReturnListMgr::initReturnLists(unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4610f80 (   0x158) ReturnListMgr::setInjectCwids(DgnArray<DgnPrimArray<unsigned int>> const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46110d8 (    0xe0) ReturnListMgr::beginRetListSyncRecog(PrefiltererSearchParamSet const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46111b8 (    0x64) ReturnListMgr::endRetListSyncRecog() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b461121c (   0x170) ReturnListMgr::setEffectiveLmForCwid(unsigned int, short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b461138c (    0x4c) HashNCHV<unsigned int, unsigned int, WordToScoreAndDurationHashHelper, ScoreAndDuration>::remove(unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46113d8 (   0x110) HashNCHV<unsigned int, unsigned int, WordToScoreAndDurationHashHelper, ScoreAndDuration>::upSize(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46114e8 (    0x40) DgnIFixArray<BucketLinkNCHV<unsigned int, ScoreAndDuration>*>::~DgnIFixArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4611528 (    0xdc) HashNCHV<unsigned int, unsigned int, WordToScoreAndDurationHashHelper, ScoreAndDuration>::HashNCHV(char const*, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4611604 (     0x4) HashNCHV<unsigned int, unsigned int, WordToScoreAndDurationHashHelper, ScoreAndDuration>::~HashNCHV() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4611608 (    0x28) HashNCHV<unsigned int, unsigned int, WordToScoreAndDurationHashHelper, ScoreAndDuration>::~HashNCHV() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4611630 (    0x74) HashNCHV<unsigned int, unsigned int, WordToScoreAndDurationHashHelper, ScoreAndDuration>::~HashNCHV() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46116a4 (    0x64) HashNCHV<unsigned int, unsigned int, WordToScoreAndDurationHashHelper, ScoreAndDuration>::removeBucket(BucketLinkNCHV<unsigned int, ScoreAndDuration>**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4611708 (     0x4) MrecInitModule_fixscale_mrecutil() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b461170c (    0x58) MrecInitLibrary_pel() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4611764 (    0x2c) MrecInitLibrarySet_throughPel() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4611790 (     0x4) MrecInitModule_sduser_sdapi() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4611794 (   0x930) TPItn_Open [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46120c4 (   0x3fc) TPItn_Close [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46124c0 (   0x130) verifyFormatterHandle(TPItnHandle_fake**, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46125f0 (   0x1d0) void verifyPointerArgument<unsigned int, unsigned int>(unsigned int const*, unsigned int, bool, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46127c0 (  0x1604) TPItn_WordSequenceToResult [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4613dc4 (   0x1d0) void verifyPointerArgument<TPItnResultHandle_fake**, unsigned int>(TPItnResultHandle_fake** const*, unsigned int, bool, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4613f94 (   0x330) verifyRange(TPRange const*, unsigned int, unsigned int, bool, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46142c4 (   0x5cc) TPItn_DeleteResult [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4614890 (   0x6dc) TPItn_GetResultText [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4614f6c (   0x6e8) TPItn_GetResultAlignment [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4615654 (    0x50) TBaseRegistry<TIFormatter*>::find(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46156a4 (    0x10) OUTLINED_FUNCTION_0 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46156b4 (     0x4) MrecInitModule_utdsrc_audiosrc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46156b8 (    0x98) MrecInitLibrary_sdapi() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4615750 (    0x2c) MrecInitLibrarySet_throughSdapi() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b461577c (     0x4) MrecInitModule_tsr_voc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4615780 (    0x58) ParentFirstStateIdIterator::ParentFirstStateIdIterator(StateMgr const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46157d8 (    0x80) ParentFirstStateIdIterator::addChildStatesToQueue(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4615858 (    0x40) TextStateRule::TextStateRule() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4615898 (    0x2c) TextStateRule::~TextStateRule() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46158c4 (   0x6f4) TextStateRule::parseHeader(DgnTextFileParser&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4615fb8 (   0xdb8) TextStateRule::parseBody(DgnTextFileParser&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4616d70 (   0x408) TextStateRule::parseVocMaxIdInfo(DgnTextFileParser&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4617178 (   0x478) TextStateRule::parseStateDefinition(DgnTextFileParser&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46175f0 (   0x418) TextStateRule::parseStateName(DgnTextFileParser&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4617a08 (   0x44c) TextStateRule::parseStateAllowLM(DgnTextFileParser&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4617e54 (   0x4ac) TextStateRule::parseStateWeightsName(DgnTextFileParser&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4618300 (   0x470) TextStateRule::parseStateWordPenalty(DgnTextFileParser&, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4618770 (   0x480) TextStateRule::parseStateMinStartTime(DgnTextFileParser&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4618bf0 (   0x480) TextStateRule::parseStateMaxStartTime(DgnTextFileParser&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4619070 (   0x480) TextStateRule::parseStateMinEndTime(DgnTextFileParser&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46194f0 (   0x480) TextStateRule::parseStateMaxEndTime(DgnTextFileParser&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4619970 (   0x448) TextStateRule::parseStateCollapsible(DgnTextFileParser&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4619db8 (   0x44c) TextStateRule::parseStateAllowCoart(DgnTextFileParser&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b461a204 (   0x44c) TextStateRule::parseStateAllowSkip(DgnTextFileParser&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b461a650 (   0x44c) TextStateRule::parseStateAllowLeftWordBoundary(DgnTextFileParser&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b461aa9c (   0x44c) TextStateRule::parseStateAllowRightWordBoundary(DgnTextFileParser&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b461aee8 (   0x4b4) TextStateRule::parseStateAllowPrecedingNonAcousticWords(DgnTextFileParser&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b461b39c (   0x44c) TextStateRule::parseStateAllowPrefiltering(DgnTextFileParser&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b461b7e8 (   0x44c) TextStateRule::parseStateAllowEndOfUtt(DgnTextFileParser&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b461bc34 (   0x448) TextStateRule::parseStateAliasState(DgnTextFileParser&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b461c07c (   0x448) TextStateRule::parseStatePrecedingNonAcousticWordState(DgnTextFileParser&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b461c4c4 (   0x44c) TextStateRule::parseStatePrecedingNonAcousticWordRequired(DgnTextFileParser&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b461c910 (   0x60c) TextStateRule::parseStateIncludedWord(DgnTextFileParser&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b461cf1c (   0x808) TextStateRule::parseStateTransitionState(DgnTextFileParser&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b461d724 (   0x558) TextStateRule::parseStateAllowedCollations(DgnTextFileParser&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b461dc7c (   0x558) TextStateRule::parseStateEnv(DgnTextFileParser&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b461e1d4 (   0x56c) TextStateRule::parseStateIncludedWordEnv(DgnTextFileParser&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b461e740 (   0x448) TextStateRule::parseRuleDefinition(DgnTextFileParser&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b461eb88 (   0x41c) TextStateRule::parseRuleName(DgnTextFileParser&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b461efa4 (   0x44c) TextStateRule::parseRuleAllowLM(DgnTextFileParser&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b461f3f0 (   0x454) TextStateRule::parseRuleAllowCoart(DgnTextFileParser&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b461f844 (   0x44c) TextStateRule::parseRuleAllowPrefiltering(DgnTextFileParser&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b461fc90 (   0x92c) TextStateRule::parseRuleDescription(DgnTextFileParser&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46205bc (   0x55c) TextStateRule::parseRuleEnv(DgnTextFileParser&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4620b18 (    0xec) TextStateRule::loadStatesAndRules(DFile*, unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4620c04 (  0x2f48) TextStateRule::saveStatesAndRules(DFile*, unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4623b4c (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001b4623b60 (     0x4) MrecInitModule_usermgr_user() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4623b64 (    0x38) UserMgr::startupUserMgr(DgnIOwnArray<User*> const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4623b9c (   0x1cc) UserMgr::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4623d68 (     0x4) MrecInitModule_waveadj_sigproc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4623d6c (   0x110) MrecInitModule_btlat_kernel() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4623e7c (    0x74) BackTraceItem::computeHash(BackTraceItem const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4623ef0 (    0x54) BackTraceNodeCache::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4623f44 (   0x178) BackTraceNodeCache::createNodeCache(B_BackTraceLatticeType, Constraint const*, bool, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46240bc (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001b46240d0 (    0x58) BtNBestResult::init(DgnIdFactory<NetNBestTraceNoTime<unsigned int>, 1024u> const*, HistoryMgr const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4624128 (    0x60) void DgnDelete<NetNBestAlg>(NetNBestAlg*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4624188 (   0x170) BtNBestResult::prepare(AcousticContextScores const*, CWIDAC const&, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46242f8 (    0xe4) unsigned long sizeObject<HistoryAndBigScore>(DgnArray<HistoryAndBigScore> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46243dc (   0x2d8) BackTraceLatticeBuilder::BackTraceLatticeBuilder(Constraint*, CWIDCrumbBank const*, DgnIdFactory<NetNBestTraceNoTime<unsigned int>, 1024u> const*, SearchLMScorer*, bool, double, B_BackTraceLatticeType, int, unsigned int, int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, bool, bool, bool, int, int, bool, bool, bool, CWIDCrumbBank*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46246b4 (    0x70) bool MemChunkRegion::isObjectFromCurrentRegion<Constraint>(Constraint const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4624724 (    0x30) BackTraceItemCache::~BackTraceItemCache() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4624754 (     0x4) Hash<CWIDACPair, CWIDACPair, CWIDACPair, BigScorePair>::~Hash() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4624758 (    0x78) BackTraceLatticeBuilder::BackTraceLatticeBuilder(Constraint*, CWIDCrumbBank const*, DgnIdFactory<NetNBestTraceNoTime<unsigned int>, 1024u> const*, SearchLMScorer*, bool, double, B_BackTraceLatticeType, int, unsigned int, int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, bool, bool, bool, int, int, bool, bool, bool, CWIDCrumbBank*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46247d0 (    0xa4) BackTraceLatticeBuilder::~BackTraceLatticeBuilder() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4624874 (    0x64) void DgnDelete<BackTraceNodeCache>(BackTraceNodeCache*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46248d8 (     0x4) BackTraceLatticeBuilder::~BackTraceLatticeBuilder() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46248dc (   0x108) BackTraceLatticeBuilder::getLatticeType(bool, bool, unsigned int, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46249e4 (   0x410) BackTraceLatticeBuilder::getLMScore(CWIDAC const&, CWIDAC const&, int*, LMStats*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4624df4 (   0x100) Hash<CWIDACPair, CWIDACPair, CWIDACPair, BigScorePair>::add(CWIDACPair const&, BigScorePair const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4624ef4 (   0x1f4) BackTraceLatticeBuilder::bootStrap(WordLattice*, PelScorer*, bool, LMStats*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46250e8 (    0x64) BackTraceNodeCache::createEndNode(WordLattice*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462514c (   0x1b4) BackTraceLatticeBuilder::assembleRightGerms() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4625300 (   0xdc0) BackTraceLatticeBuilder::seedOneInContext(bool, RecogGerm const&, RecogGerm const&, int, int, int, int, WordLattice*, LMStats*, DgnArray<HistoryAndBigScore> const*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46260c0 (    0x9c) BackTraceLatticeBuilder::canSeedInAcousticContext(RecogGerm const&, RecogGerm const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462615c (   0x114) Hash<BackTraceLinkPair, BackTraceLinkPair, BackTraceLinkPair, int>::add(BackTraceLinkPair const&, int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4626270 (   0x154) Lattice<WordLatticeLC>::maybeCreateAndConnectOrUpdateLink(unsigned int, unsigned int, WordLatticeLC const&, bool, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46263c4 (    0xbc) BackTraceLatticeBuilder::updateLinkBestPathScore(int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4626480 (    0x7c) BackTraceItemCache::needCreateBTItem(BackTraceItem&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46264fc (   0x1cc) BackTraceLatticeBuilder::getBackTraceItem(WordLattice*, CWIDAC const&, bool, History const*, unsigned int, int, int, unsigned int, LMStats*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46266c8 (   0x3b8) BackTraceLatticeBuilder::stackDecode(WordLattice*, bool, unsigned int*, unsigned int*, unsigned int*, unsigned int*, LMStats*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4626a80 (    0x3c) BackTraceItemCache::clearCache() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4626abc (   0x748) BackTraceLatticeBuilder::seedAllRightGerms(RecogGerm&, unsigned int, WordLattice*, bool, unsigned int*, unsigned int*, unsigned int*, LMStats*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4627204 (   0x2bc) BackTraceLatticeBuilder::seedFinalSilence(RecogGerm&, unsigned int, WordLattice*, bool, unsigned int*, LMStats*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46274c0 (   0x134) DgnArray<HistoryAndBigScore> const* BtNBestResult::maybeGetNBest<true>(unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46275f4 (    0x50) AcousticContextScores::getHistAndScore(unsigned short) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4627644 (   0x17c) DgnArray<HistoryAndBigScore> const* BtNBestResult::maybeGetNBest<false>(unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46277c0 (   0x208) BackTraceLatticeBuilder::canSeedInLMContext(CWIDAC const&, RecogGerm const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46279c8 (   0x108) BackTraceLatticeBuilder::maybeEnableNBestGeneration(DgnIdFactory<NetNBestTraceNoTime<unsigned int>, 1024u> const*, HistoryMgr const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4627ad0 (   0x180) BackTraceLatticeBuilder::pruneLinks(WordLattice*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4627c50 (   0x1cc) Lattice<WordLatticeLC>::pruneLinks(unsigned int, DgnPrimArray<int> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4627e1c (   0x5d0) BackTraceLatticeBuilder::makeLattice(unsigned short, PelScorer*, bool, bool, bool, LatticeStats*, int, unsigned int, unsigned int, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46283ec (    0x94) Hash<BackTraceLinkPair, BackTraceLinkPair, BackTraceLinkPair, int>::removeAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4628480 (    0x9c) Hash<CWIDACPair, CWIDACPair, CWIDACPair, BigScorePair>::removeAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462851c (   0x220) BackTraceLatticeBuilder::makeSilentLattice(unsigned short, int, unsigned int, unsigned int, bool, LatticeStats*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462873c (     0x4) StringGlobalParam::~StringGlobalParam() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4628740 (    0x28) StringGlobalParam::~StringGlobalParam() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4628768 (    0xc0) NetNBestAlg::NetNBestAlg(DgnIdFactory<NetNBestTraceNoTime<unsigned int>, 1024u> const*, HistoryMgr const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4628828 (    0x40) DgnIArray<NBestQueueItem*>::~DgnIArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4628868 (    0x4c) DgnPrimStructArray<NBestQueueItem>::~DgnPrimStructArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46288b4 (    0x68) DgnPriorityQueue<NBestQueueItem>::~DgnPriorityQueue() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462891c (    0x54) DgnHeap<NBestQueueItem>::extractMin() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4628970 (    0x94) DgnHeap<NBestQueueItem>::heapifyDown(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4628a04 (    0x64) DgnArray<DgnArray<HistoryAndBigScore>>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4628a68 (    0x40) DgnArray<HistoryAndBigScore>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4628aa8 (    0xe0) HashKEV<BackTraceItemHashKey, BackTraceItem, BackTraceItemHashKey>::HashKEV(char const*, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4628b88 (     0x4) HashKEV<BackTraceItemHashKey, BackTraceItem, BackTraceItemHashKey>::~HashKEV() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4628b8c (    0x28) HashKEV<BackTraceItemHashKey, BackTraceItem, BackTraceItemHashKey>::~HashKEV() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4628bb4 (    0x40) DgnIFixArray<BucketLinkKEV<BackTraceItemHashKey>*>::~DgnIFixArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4628bf4 (    0x74) HashKEV<BackTraceItemHashKey, BackTraceItem, BackTraceItemHashKey>::~HashKEV() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4628c68 (    0x84) HashKEV<BackTraceItemHashKey, BackTraceItem, BackTraceItemHashKey>::removeAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4628cec (    0x4c) BtNBestResult::~BtNBestResult() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4628d38 (    0x38) SearchLMContext::~SearchLMContext() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4628d70 (    0xac) HashKEV<BackTraceItemHashKey, BackTraceItem, BackTraceItemHashKey>::findBucket(BackTraceItem const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4628e1c (    0xd4) BackTraceItem::operator==(BackTraceItem const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4628ef0 (    0xfc) HashKEV<BackTraceItemHashKey, BackTraceItem, BackTraceItemHashKey>::add(BackTraceItemHashKey const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4628fec (   0x110) HashKEV<BackTraceItemHashKey, BackTraceItem, BackTraceItemHashKey>::upSize(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46290fc (    0x94) RecogGerm::operator==(RecogGerm const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4629190 (    0x98) BtNodeCacheType<BtTrigramNodeHashKey, BtTrigramNodeHashKey>::BtNodeCacheType(Constraint const*, bool, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4629228 (    0x68) BtNodeCacheType<BtTrigramNodeHashKey, BtTrigramNodeHashKey>::~BtNodeCacheType() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4629290 (    0x78) BtNodeCacheType<BtTrigramNodeHashKey, BtTrigramNodeHashKey>::~BtNodeCacheType() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4629308 (    0x10) BtNodeCacheType<BtTrigramNodeHashKey, BtTrigramNodeHashKey>::isEmpty() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4629318 (     0x8) BtNodeCacheType<BtTrigramNodeHashKey, BtTrigramNodeHashKey>::removeAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4629320 (    0x70) BtNodeCacheType<BtTrigramNodeHashKey, BtTrigramNodeHashKey>::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4629390 (   0x1c0) BtNodeCacheType<BtTrigramNodeHashKey, BtTrigramNodeHashKey>::findOrCreateNode(WordLattice*, int, CWIDAC const&, bool, CWIDAC const&, bool*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4629550 (   0x128) HashNCHV<BtTrigramNodeHashKey, BtTrigramNodeHashKey, BtTrigramNodeHashKey, unsigned int>::HashNCHV(char const*, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4629678 (     0x4) HashNCHV<BtTrigramNodeHashKey, BtTrigramNodeHashKey, BtTrigramNodeHashKey, unsigned int>::~HashNCHV() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462967c (    0x28) HashNCHV<BtTrigramNodeHashKey, BtTrigramNodeHashKey, BtTrigramNodeHashKey, unsigned int>::~HashNCHV() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46296a4 (    0x40) DgnIFixArray<BucketLinkNCHV<BtTrigramNodeHashKey, unsigned int>*>::~DgnIFixArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46296e4 (    0x74) HashNCHV<BtTrigramNodeHashKey, BtTrigramNodeHashKey, BtTrigramNodeHashKey, unsigned int>::~HashNCHV() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4629758 (    0x94) HashNCHV<BtTrigramNodeHashKey, BtTrigramNodeHashKey, BtTrigramNodeHashKey, unsigned int>::removeAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46297ec (   0x12c) HashNCHV<BtTrigramNodeHashKey, BtTrigramNodeHashKey, BtTrigramNodeHashKey, unsigned int>::add(BtTrigramNodeHashKey const&, unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4629918 (    0x9c) HashNCHV<BtTrigramNodeHashKey, BtTrigramNodeHashKey, BtTrigramNodeHashKey, unsigned int>::findBucket(BtTrigramNodeHashKey const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46299b4 (    0x64) BtTrigramNodeHashKey::equalKeys(BtTrigramNodeHashKey const&, BtTrigramNodeHashKey const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4629a18 (   0x140) HashNCHV<BtTrigramNodeHashKey, BtTrigramNodeHashKey, BtTrigramNodeHashKey, unsigned int>::upSize(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4629b58 (    0x98) BtNodeCacheType<BtNodeHashKey, BtNodeKeyGenerator<false, true>>::BtNodeCacheType(Constraint const*, bool, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4629bf0 (    0x68) BtNodeCacheType<BtNodeHashKey, BtNodeKeyGenerator<false, true>>::~BtNodeCacheType() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4629c58 (    0x78) BtNodeCacheType<BtNodeHashKey, BtNodeKeyGenerator<false, true>>::~BtNodeCacheType() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4629cd0 (    0x10) BtNodeCacheType<BtNodeHashKey, BtNodeKeyGenerator<false, true>>::isEmpty() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4629ce0 (     0x8) BtNodeCacheType<BtNodeHashKey, BtNodeKeyGenerator<false, true>>::removeAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4629ce8 (    0x70) BtNodeCacheType<BtNodeHashKey, BtNodeKeyGenerator<false, true>>::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4629d58 (   0x1ac) BtNodeCacheType<BtNodeHashKey, BtNodeKeyGenerator<false, true>>::findOrCreateNode(WordLattice*, int, CWIDAC const&, bool, CWIDAC const&, bool*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4629f04 (   0x124) HashNCHV<BtNodeHashKey, BtNodeHashKey, BtNodeHashKey, unsigned int>::HashNCHV(char const*, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462a028 (     0x4) HashNCHV<BtNodeHashKey, BtNodeHashKey, BtNodeHashKey, unsigned int>::~HashNCHV() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462a02c (    0x28) HashNCHV<BtNodeHashKey, BtNodeHashKey, BtNodeHashKey, unsigned int>::~HashNCHV() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462a054 (    0x40) DgnIFixArray<BucketLinkNCHV<BtNodeHashKey, unsigned int>*>::~DgnIFixArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462a094 (    0x74) HashNCHV<BtNodeHashKey, BtNodeHashKey, BtNodeHashKey, unsigned int>::~HashNCHV() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462a108 (    0x94) HashNCHV<BtNodeHashKey, BtNodeHashKey, BtNodeHashKey, unsigned int>::removeAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462a19c (    0x90) BtNodeKeyGenerator<false, true>::getKey(int, CWIDAC const&, bool, CWIDAC const&, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462a22c (   0x130) HashNCHV<BtNodeHashKey, BtNodeHashKey, BtNodeHashKey, unsigned int>::add(BtNodeHashKey const&, unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462a35c (    0xa0) HashNCHV<BtNodeHashKey, BtNodeHashKey, BtNodeHashKey, unsigned int>::findBucket(BtNodeHashKey const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462a3fc (    0x64) BtNodeHashKey::equalKeys(BtNodeHashKey const&, BtNodeHashKey const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462a460 (   0x144) HashNCHV<BtNodeHashKey, BtNodeHashKey, BtNodeHashKey, unsigned int>::upSize(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462a5a4 (    0x98) BtNodeCacheType<BtNodeHashKey, BtNodeKeyGenerator<true, false>>::BtNodeCacheType(Constraint const*, bool, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462a63c (    0x68) BtNodeCacheType<BtNodeHashKey, BtNodeKeyGenerator<true, false>>::~BtNodeCacheType() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462a6a4 (    0x78) BtNodeCacheType<BtNodeHashKey, BtNodeKeyGenerator<true, false>>::~BtNodeCacheType() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462a71c (    0x10) BtNodeCacheType<BtNodeHashKey, BtNodeKeyGenerator<true, false>>::isEmpty() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462a72c (     0x8) BtNodeCacheType<BtNodeHashKey, BtNodeKeyGenerator<true, false>>::removeAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462a734 (    0x70) BtNodeCacheType<BtNodeHashKey, BtNodeKeyGenerator<true, false>>::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462a7a4 (   0x134) BtNodeCacheType<BtNodeHashKey, BtNodeKeyGenerator<true, false>>::findOrCreateNode(WordLattice*, int, CWIDAC const&, bool, CWIDAC const&, bool*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462a8d8 (    0x98) BtNodeCacheType<BtNodeHashKey, BtNodeKeyGenerator<true, true>>::BtNodeCacheType(Constraint const*, bool, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462a970 (    0x68) BtNodeCacheType<BtNodeHashKey, BtNodeKeyGenerator<true, true>>::~BtNodeCacheType() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462a9d8 (    0x78) BtNodeCacheType<BtNodeHashKey, BtNodeKeyGenerator<true, true>>::~BtNodeCacheType() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462aa50 (    0x10) BtNodeCacheType<BtNodeHashKey, BtNodeKeyGenerator<true, true>>::isEmpty() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462aa60 (     0x8) BtNodeCacheType<BtNodeHashKey, BtNodeKeyGenerator<true, true>>::removeAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462aa68 (    0x70) BtNodeCacheType<BtNodeHashKey, BtNodeKeyGenerator<true, true>>::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462aad8 (   0x1ac) BtNodeCacheType<BtNodeHashKey, BtNodeKeyGenerator<true, true>>::findOrCreateNode(WordLattice*, int, CWIDAC const&, bool, CWIDAC const&, bool*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462ac84 (    0x9c) BtNodeKeyGenerator<true, true>::getKey(int, CWIDAC const&, bool, CWIDAC const&, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462ad20 (    0x98) BtNodeCacheType<BtUnigramNodeHashKey, BtUnigramNodeHashKey>::BtNodeCacheType(Constraint const*, bool, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462adb8 (    0x68) BtNodeCacheType<BtUnigramNodeHashKey, BtUnigramNodeHashKey>::~BtNodeCacheType() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462ae20 (    0x78) BtNodeCacheType<BtUnigramNodeHashKey, BtUnigramNodeHashKey>::~BtNodeCacheType() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462ae98 (    0x10) BtNodeCacheType<BtUnigramNodeHashKey, BtUnigramNodeHashKey>::isEmpty() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462aea8 (     0x8) BtNodeCacheType<BtUnigramNodeHashKey, BtUnigramNodeHashKey>::removeAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462aeb0 (    0x70) BtNodeCacheType<BtUnigramNodeHashKey, BtUnigramNodeHashKey>::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462af20 (   0x128) BtNodeCacheType<BtUnigramNodeHashKey, BtUnigramNodeHashKey>::findOrCreateNode(WordLattice*, int, CWIDAC const&, bool, CWIDAC const&, bool*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462b048 (    0xe0) HashNCHV<BtUnigramNodeHashKey, BtUnigramNodeHashKey, BtUnigramNodeHashKey, unsigned int>::HashNCHV(char const*, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462b128 (     0x4) HashNCHV<BtUnigramNodeHashKey, BtUnigramNodeHashKey, BtUnigramNodeHashKey, unsigned int>::~HashNCHV() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462b12c (    0x28) HashNCHV<BtUnigramNodeHashKey, BtUnigramNodeHashKey, BtUnigramNodeHashKey, unsigned int>::~HashNCHV() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462b154 (    0x40) DgnIFixArray<BucketLinkNCHV<BtUnigramNodeHashKey, unsigned int>*>::~DgnIFixArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462b194 (    0x74) HashNCHV<BtUnigramNodeHashKey, BtUnigramNodeHashKey, BtUnigramNodeHashKey, unsigned int>::~HashNCHV() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462b208 (    0x94) HashNCHV<BtUnigramNodeHashKey, BtUnigramNodeHashKey, BtUnigramNodeHashKey, unsigned int>::removeAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462b29c (   0x104) HashNCHV<BtUnigramNodeHashKey, BtUnigramNodeHashKey, BtUnigramNodeHashKey, unsigned int>::add(BtUnigramNodeHashKey const&, unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462b3a0 (    0x90) HashNCHV<BtUnigramNodeHashKey, BtUnigramNodeHashKey, BtUnigramNodeHashKey, unsigned int>::findBucket(BtUnigramNodeHashKey const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462b430 (   0x128) HashNCHV<BtUnigramNodeHashKey, BtUnigramNodeHashKey, BtUnigramNodeHashKey, unsigned int>::upSize(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462b558 (   0x15c) Hash<CWIDACPair, CWIDACPair, CWIDACPair, BigScorePair>::Hash(char const*, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462b6b4 (    0x28) Hash<CWIDACPair, CWIDACPair, CWIDACPair, BigScorePair>::~Hash() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462b6dc (    0x40) DgnIFixArray<BucketLink<CWIDACPair, BigScorePair>*>::~DgnIFixArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462b71c (    0x74) Hash<CWIDACPair, CWIDACPair, CWIDACPair, BigScorePair>::~Hash() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462b790 (    0x64) DgnArray<DgnArray<BackTraceItem>>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462b7f4 (    0x40) DgnArray<BackTraceItem>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462b834 (    0x40) DgnArray<AcousticContextScores>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462b874 (   0x11c) Hash<BackTraceLinkPair, BackTraceLinkPair, BackTraceLinkPair, int>::Hash(char const*, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462b990 (     0x4) Hash<BackTraceLinkPair, BackTraceLinkPair, BackTraceLinkPair, int>::~Hash() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462b994 (    0x28) Hash<BackTraceLinkPair, BackTraceLinkPair, BackTraceLinkPair, int>::~Hash() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462b9bc (    0x40) DgnIFixArray<BucketLink<BackTraceLinkPair, int>*>::~DgnIFixArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462b9fc (    0x74) Hash<BackTraceLinkPair, BackTraceLinkPair, BackTraceLinkPair, int>::~Hash() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462ba70 (    0xc0) Hash<CWIDACPair, CWIDACPair, CWIDACPair, BigScorePair>::findBucket(CWIDACPair const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462bb30 (   0x110) Hash<CWIDACPair, CWIDACPair, CWIDACPair, BigScorePair>::upSize(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462bc40 (    0x34) CWIDACPair::CWIDACPair(CWIDACPair const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462bc74 (    0x78) DgnArray<BackTraceItem>::reallocElts(unsigned int, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462bcec (    0xc0) Hash<BackTraceLinkPair, BackTraceLinkPair, BackTraceLinkPair, int>::findBucket(BackTraceLinkPair const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462bdac (    0x74) BackTraceLinkPair::operator==(BackTraceLinkPair const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462be20 (   0x110) Hash<BackTraceLinkPair, BackTraceLinkPair, BackTraceLinkPair, int>::upSize(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462bf30 (    0x3c) BucketLink<BackTraceLinkPair, int>::BucketLink(BackTraceLinkPair const&, int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462bf6c (    0x3c) BaseWordLatticeLC::operator=(BaseWordLatticeLC const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462bfa8 (    0x40) DgnArray<EmbStateSpec>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462bfe8 (     0x4) MrecInitModule_udelta_sigproc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462bfec (   0x5c0) UserDelta::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462c5ac (   0x120) UserDelta::saveUserDelta(DFile*, DFileChecksums*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462c6cc (    0x30) MrecInitLibrarySet_throughPhoneme() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462c6fc (     0x4) MrecInitModule_sdlat_sdapi() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462c700 (     0x4) MrecInitModule_promgr_mrecutil() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462c704 (     0x4) ProMgr::initProfile(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462c708 (     0x4) MrecInitModule_emptynet_net() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462c70c (     0x4) EmptyNet::~EmptyNet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462c710 (    0x28) EmptyNet::~EmptyNet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462c738 (    0x60) EmptyNet::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462c798 (     0xc) EmptyNet::getExitContext() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462c7a4 (     0x8) EmptyNet::getExitContextPtr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462c7ac (    0x20) EmptyNet::getBestScore(BaseNode const**) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462c7cc (    0xf4) EmptyNet::scoreNetInternal(int, int, int, int, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462c8c0 (    0x28) EmptyNet::thresholdNetInternal(int, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462c8e8 (     0x8) EmptyNet::calcNumActiveNodes(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462c8f0 (    0x30) EmptyNet::unpackEmptySequence(Node**, Node**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462c920 (    0x10) EmptyNet::attachInPort(unsigned char, Node*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462c930 (     0x4) EmptyNet::configureOutPorts(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462c934 (     0x4) EmptyNet::estimateActivePelsThisFrame(BitArray*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462c938 (     0x8) HmmNet::isAcoustic() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462c940 (     0x4) MrecInitModule_ldt_pel() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462c944 (   0x26c) Imelda::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462cbb0 (    0xe0) Imelda::saveImelda(DFile*, DFileChecksums*, bool, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462cc90 (   0x358) Imelda::saveImeldaText(DFile*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462cfe8 (     0x4) MrecInitModule_emptyfp_mrecutil() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462cfec (     0x4) MrecInitModule_warpchan_channel() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462cff0 (    0x9c) MrecInitModule_utteranc_channel() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462d08c (    0x44) PerFrameUttInfo::~PerFrameUttInfo() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462d0d0 (     0x8) Utterance::getMicrosecPerFrame() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462d0d8 (    0xc8) DgnArray<EnergyInfo>::copyArraySlice(DgnArray<EnergyInfo> const&, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462d1a0 (    0xc0) DgnArray<SubDirExtension>::copyArraySlice(DgnArray<SubDirExtension> const&, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462d260 (   0x140) DgnArray<DgnPrimArray<double>>::copyArraySlice(DgnArray<DgnPrimArray<double>> const&, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462d3a0 (   0x108) Utterance::~Utterance() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462d4a8 (     0x4) Utterance::~Utterance() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462d4ac (  0x15c4) Utterance::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462ea70 (   0x100) unsigned long sizeObject<SynchronizedArray<DgnPrimArray<unsigned char>>*>(DgnIOwnArray<SynchronizedArray<DgnPrimArray<unsigned char>>*> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462eb70 (    0xf8) unsigned long sizeObject<WaveData*>(DgnIOwnArray<WaveData*> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462ec68 (    0x40) Utterance::getEnvMgr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462eca8 (     0x8) Utterance::getFeaturesPerFrame() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462ecb0 (    0x6c) DgnIOwnArray<WaveData*>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462ed1c (    0xc8) Utterance::setTransformedFrames(unsigned short, unsigned int, SynchronizedArray<DgnPrimArray<unsigned char>>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462ede4 (    0x60) Utterance::getTransformedFrames(unsigned short, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462ee44 (    0x18) Utterance::numCompleteRecogFrames(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462ee5c (   0x3b8) Utterance::Utterance(Utterance&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462f214 (     0x4) Utterance::Utterance(Utterance&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462f218 (    0x8c) Utterance::syncAfterRecognitionDone() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462f2a4 (   0x108) UttFeatureArraySynchronizedArray::update(Utterance const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462f3ac (    0x40) DgnArray<PitchInfo>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462f3ec (    0x40) DgnArray<EnergyInfo>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462f42c (    0x40) DgnArray<FrameTypeInfo>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462f46c (    0xb4) DgnArray<FrameTypeInfo>::copyArraySlice(DgnArray<FrameTypeInfo> const&, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462f520 (    0x6c) DgnIOwnArray<SynchronizedArray<DgnPrimArray<unsigned char>>*>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462f58c (     0x4) MrecInitModule_spd_sigproc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462f590 (    0xd0) SigProcDescriptor::SigProcDescriptor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462f660 (     0x4) SigProcDescriptor::SigProcDescriptor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462f664 (    0x70) SigProcDescriptor::~SigProcDescriptor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462f6d4 (     0x4) SigProcDescriptor::~SigProcDescriptor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462f6d8 (    0xc8) sizeObject(SigProcDescriptor const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462f7a0 (   0x100) unsigned long sizeObject<FeatureFilterSpec>(DgnArray<FeatureFilterSpec> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b462f8a0 (   0xea8) SigProcDescriptor::saveSPD(DFile*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4630748 (   0x160) SigProcDescriptor::saveSigProcDescriptor(DFile*, DFileChecksums*, bool, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46308a8 (    0x88) void writeObject<FeatureFilterSpec>(DgnStream*, DgnArray<FeatureFilterSpec> const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4630930 (   0x718) SigProcDescriptor::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4631048 (    0x40) DgnArray<WarpCoordinates>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4631088 (    0x68) DgnArray<FeatureFilterSpec>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46310f0 (     0x4) MrecInitModule_dsmstream_dfutil() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46310f4 (   0x144) DgnSharedMemStream::DgnSharedMemStream(DgnSharedMemSet&, unsigned int, B_DgnStreamOpenMode) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4631238 (    0xc8) DgnSharedMemStream::openDSM(B_DSMOpenMode, unsigned long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4631300 (     0x4) DgnSharedMemStream::DgnSharedMemStream(DgnSharedMemSet&, unsigned int, B_DgnStreamOpenMode) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4631304 (    0xd8) DgnSharedMemStream::DgnSharedMemStream(DgnSharedMemSet&, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46313dc (     0x4) DgnSharedMemStream::DgnSharedMemStream(DgnSharedMemSet&, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46313e0 (    0x38) DgnSharedMemStream::closeDSM() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4631418 (    0x68) DgnSharedMemStream::~DgnSharedMemStream() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4631480 (     0x4) DgnSharedMemStream::~DgnSharedMemStream() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4631484 (    0x28) DgnSharedMemStream::~DgnSharedMemStream() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46314ac (    0xd4) DgnSharedMemStream::seekFromBeg(unsigned long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4631580 (    0x6c) DgnSharedMemStream::seekToEnd() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46315ec (    0x68) DgnSharedMemStream::tell() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4631654 (    0xb8) DgnSharedMemStream::tell32() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463170c (    0x70) DgnSharedMemStream::eof() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463177c (     0x4) DgnSharedMemStream::flush() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4631780 (    0x80) DgnSharedMemStream::peekForChar() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4631800 (   0x124) DgnSharedMemStream::readWithMode(char*, unsigned int, B_DgnStreamReadMode) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4631924 (   0x16c) DgnSharedMemStream::writeBytes(char const*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4631a90 (   0x1dc) DgnSharedMemStream::writeSharedBytes(char const*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4631c6c (    0xfc) DgnSharedMemStream::readSharedBytes(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4631d68 (     0x4) MrecInitModule_vcc_voc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4631d6c (     0x8) VocCompatData::VocCompatData() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4631d74 (     0x4) VocCompatData::~VocCompatData() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4631d78 (   0x1e0) VocCompatData::loadVocCompatDataText(DFile*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4631f58 (   0x144) VocCompatData::saveVocCompatDataText(DFile*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463209c (   0x1ec) VocCompatData::loadVocCompatData(DFile*, DFileChecksums*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4632288 (    0xf0) VocCompatData::saveVocCompatData(DFile*, DFileChecksums*, bool, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4632378 (   0x28c) VocCompatData::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4632604 (     0x8) SvcCompatData::SvcCompatData() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463260c (     0xc) SvcCompatData::SvcCompatData(SvcCompatData const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4632618 (     0x8) SvcCompatData::SvcCompatData(B_SvcCompatType, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4632620 (     0x8) SvcCompatData::~SvcCompatData() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4632628 (   0x10c) SvcCompatData::loadSvcCompatData(DFile*, DFileChecksums*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4632734 (    0xa8) SvcCompatData::saveSvcCompatData(DFile*, DFileChecksums*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46327dc (    0x10) sizeObject(SvcCompatData const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46327ec (     0x4) MrecInitModule_thrdpref_prefilt() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46327f0 (   0x6d0) PrefiltererThreadWorker::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4632ec0 (    0xcc) PrefiltererThreadWorker::PrefiltererThreadWorker(B_DgnThreadExecutionType, DgnThreadClient*, MemChunkRegion*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4632f8c (    0x90) PrefiltererThreadWorker::~PrefiltererThreadWorker() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463301c (    0x4c) PrefiltererThreadWorker::reset() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4633068 (     0x4) PrefiltererThreadWorker::~PrefiltererThreadWorker() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463306c (    0x28) PrefiltererThreadWorker::~PrefiltererThreadWorker() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4633094 (    0x5c) SynchronizedArray<ScoreFixArray>::reset() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46330f0 (    0x38) PrefiltererThreadWorker::onStartup() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4633128 (    0x38) PrefiltererThreadWorker::onShutdown() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4633160 (    0x64) void DgnDelete<Prefilterer>(Prefilterer*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46331c4 (    0x94) PrefiltererThreadWorker::onPlay() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4633258 (   0x158) SynchronizedArray<ScoreFixArray>::update(SynchronizedArray<ScoreFixArray> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46333b0 (   0x1ec) PrefiltererThreadWorker::playOne() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463359c (   0x380) PrefiltererThread::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463391c (    0x70) PrefiltererThread::reset() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463398c (    0x7c) PrefiltererThread::scoreUntil(int, SynchronizedArray<DgnPrimArray<unsigned char>> const*, SynchronizedArray<ScoreFixArray> const*, ReturnListQueue*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4633a08 (    0xd4) ThreadedTreePrefilterer::ThreadedTreePrefilterer(B_DgnThreadExecutionType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4633adc (     0x4) ThreadedTreePrefilterer::ThreadedTreePrefilterer(B_DgnThreadExecutionType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4633ae0 (    0x84) ThreadedTreePrefilterer::~ThreadedTreePrefilterer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4633b64 (     0x4) ThreadedTreePrefilterer::~ThreadedTreePrefilterer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4633b68 (    0x28) ThreadedTreePrefilterer::~ThreadedTreePrefilterer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4633b90 (   0x53c) ThreadedTreePrefilterer::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46340cc (    0x94) ThreadedTreePrefilterer::scoreFramesUntil(int, SynchronizedArray<DgnPrimArray<unsigned char>> const*, SynchronizedArray<ScoreFixArray> const*, ReturnListQueue*, int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4634160 (    0x6c) ThreadedTreePrefilterer::maybeStartScoring(SynchronizedArray<DgnPrimArray<unsigned char>> const*, SynchronizedArray<ScoreFixArray> const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46341cc (    0x90) ThreadedTreePrefilterer::maybeStopScoring(bool, ReturnListQueue*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463425c (    0x88) ThreadedTreePrefilterer::setInjectCwids(DgnArray<DgnPrimArray<unsigned int>> const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46342e4 (    0xc0) ThreadedTreePrefilterer::beginPrefSyncRecog(bool, unsigned int, unsigned int, CTFTMgr const*, PrefiltererSearchParamSet const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46343a4 (    0x90) ThreadedTreePrefilterer::endPrefSyncRecog() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4634434 (    0x28) ThreadedTreePrefilterer::makePelScoreCacheData() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463445c (    0x88) ThreadedTreePrefilterer::setPelScoreCacheData(PelScoreCacheData const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46344e4 (    0xa8) ThreadedTreePrefilterer::initPrefilterer(User const*, unsigned short, unsigned int, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463458c (    0x18) ThreadedTreePrefilterer::getUserId() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46345a4 (    0x28) ThreadedTreePrefilterer::getPrefiltererStats(PelStats*, PrefStats*, PelStats*, PrefStats*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46345cc (    0x80) ThreadedTreePrefilterer::setSynchronousPrefiltererStats() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463464c (     0xc) ThreadedTreePrefilterer::getCurFrame() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4634658 (    0x28) ThreadedTreePrefilterer::getPelScorer() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4634680 (     0xc) ThreadedTreePrefilterer::getThreadId() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463468c (     0x4) PrefiltererThread::~PrefiltererThread() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4634690 (    0x28) PrefiltererThread::~PrefiltererThread() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46346b8 (    0x80) DgnThread<PrefiltererThreadWorker>::newWorker() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4634738 (    0x28) ThreadedTreePrefilterer::setPrefiltererBuildParamSet(PrefiltererBuildParamSet const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4634760 (    0x28) ThreadedTreePrefilterer::getPrefiltererBuildParamSet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4634788 (     0x8) ThreadedTreePrefilterer::isScoring() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4634790 (     0x8) ThreadedTreePrefilterer::isInUseByRecog() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4634798 (     0x8) Prefilterer::getWordToScoreAndDurationHash() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46347a0 (     0x8) Prefilterer::getEffectiveLms() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46347a8 (    0x60) DgnThread<PrefiltererThreadWorker>::DgnThread(B_DgnThreadExecutionType, MemChunkRegion*, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4634808 (     0x4) DgnThread<PrefiltererThreadWorker>::~DgnThread() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463480c (    0x28) DgnThread<PrefiltererThreadWorker>::~DgnThread() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4634834 (    0xd0) unsigned long sizeObject<ScoreFixArray>(DgnArray<ScoreFixArray> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4634904 (    0x54) SynchronizedArray<ScoreFixArray>::SynchronizedArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4634958 (    0x64) DgnArray<ScoreFixArray>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46349bc (     0x4) MrecInitModule_dynparset_dfutil() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46349c0 (    0x40) ParamValue::~ParamValue() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4634a00 (     0x4) ParamValue::~ParamValue() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4634a04 (    0x9c) ParamValue::ParamValue(ParamValue const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4634aa0 (   0x2d4) DynamicParamSet::DynamicParamSet(char const*, B_ParamSetType, DgnTextFileVersion, DgnPrimArray<unsigned short> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4634d74 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001b4634d88 (    0x1c) DynamicParamSet::setBoolParameter(unsigned short, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4634da4 (    0x1c) DynamicParamSet::setIntParameter(unsigned short, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4634dc0 (    0x1c) DynamicParamSet::setDoubleParameter(unsigned short, double) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4634ddc (    0xd8) DynamicParamSet::setStringParameter(unsigned short, char const*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4634eb4 (    0xd8) DynamicParamSet::setEnumParameter(unsigned short, char const*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4634f8c (     0x4) DynamicParamSet::DynamicParamSet(char const*, B_ParamSetType, DgnTextFileVersion, DgnPrimArray<unsigned short> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4634f90 (    0x8c) DynamicParamSet::DynamicParamSet(DynamicParamSet const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463501c (     0x4) DynamicParamSet::DynamicParamSet(DynamicParamSet const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4635020 (    0x44) DynamicParamSet::setBoolParameter(char const*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4635064 (    0x44) DynamicParamSet::setIntParameter(char const*, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46350a8 (    0x4c) DynamicParamSet::setDoubleParameter(char const*, double) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46350f4 (    0x58) DynamicParamSet::setStringParameter(char const*, char const*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463514c (    0x58) DynamicParamSet::setEnumParameter(char const*, char const*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46351a4 (   0x124) DynamicParamSet::getBoolParameter(unsigned short) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46352c8 (   0x124) DynamicParamSet::getIntParameter(unsigned short) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46353ec (   0x124) DynamicParamSet::getDoubleParameter(unsigned short) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4635510 (   0x124) DynamicParamSet::getStringParameter(unsigned short) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4635634 (   0x124) DynamicParamSet::getEnumParameter(unsigned short) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4635758 (    0x40) DynamicParamSet::getBoolParameter(char const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4635798 (    0x40) DynamicParamSet::getIntParameter(char const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46357d8 (    0x40) DynamicParamSet::getDoubleParameter(char const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4635818 (    0x40) DynamicParamSet::getEnumParameter(char const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4635858 (    0x6c) DynamicParamSet::removeParameter(unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46358c4 (    0x40) DynamicParamSet::removeParameter(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4635904 (   0x2f8) DynamicParamSet::validateSelf() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4635bfc (   0x15c) DgnArray<ParamValue>::copyArraySlice(DgnArray<ParamValue> const&, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4635d58 (     0x4) MrecInitModule_emptywp_mrecutil() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4635d5c (     0x4) MrecInitModule_sdparamsetparam_sdapi() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4635d60 (   0x520) sdGetAndValidateParamSet(SDParamSetSpec const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4636280 (    0x30) (null) [FUNC, FunctionStarts] 
                0x00000001b46362b0 (   0x154) SDParamSetParam_GetHandle [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4636404 (   0x20c) SDParamSetParam_GetType [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4636610 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001b4636624 (   0x1bc) SDParamSetParam_SetBoolValue [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46367e0 (   0x18c) SDParamSetParam_SetIntValue [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463696c (   0x1e8) SDParamSetParam_SetDoubleValue [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4636b54 (   0x19c) SDParamSetParam_SetStringValue [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4636cf0 (   0x294) SDParamSetParam_SetEnumValue [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4636f84 (     0x4) MrecInitModule_dfchksum_fileutil() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4636f88 (    0x60) DFileChecksumBucket::DFileChecksumBucket(DFileChecksumBucket const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4636fe8 (    0x60) DFileChecksumBucket::operator==(DFileChecksumBucket const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4637048 (     0xc) DFileChecksums::DFileChecksums() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4637054 (    0x2c) DFileChecksums::~DFileChecksums() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4637080 (    0x38) DFileChecksums::operator=(DFileChecksums const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46370b8 (    0x1c) DFileChecksums::operator==(DFileChecksums const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46370d4 (    0x94) DgnArray<DFileChecksumBucket>::operator==(DgnArray<DFileChecksumBucket> const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4637168 (   0x15c) DFileChecksums::addChecksum(DgnArray<SubDirExtension> const&, SubFileExtension, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46372c4 (    0x20) DFileChecksums::present(char const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46372e4 (    0x80) DFileChecksums::find(char const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4637364 (    0x34) DFileChecksums::getChecksum(char const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4637398 (    0x14) DFileChecksums::getChecksum(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46373ac (    0x28) DFileChecksums::getSubFileName(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46373d4 (    0x9c) void writeObject<DFileChecksumBucket>(DgnStream*, DgnArray<DFileChecksumBucket> const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4637470 (   0x134) void readObject<DFileChecksumBucket>(DgnStream*, DgnArray<DFileChecksumBucket>&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46375a4 (    0x50) writeObject(DgnStream*, DFileChecksums const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46375f4 (    0x50) readObject(DgnStream*, DFileChecksums&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4637644 (    0x68) DgnArray<DFileChecksumBucket>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46376ac (   0x144) DgnArray<DFileChecksumBucket>::copyArraySlice(DgnArray<DFileChecksumBucket> const&, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46377f0 (     0x4) MrecInitModule_specwarp_sigproc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46377f4 (     0x4) MrecInitModule_sdtrans_sdapi() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46377f8 (    0x50) throwDecodeSuccessorOverflow() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4637848 (    0x50) throwDecodeEndOfData() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4637898 (    0x48) throwTableCodeLimitExceeded(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46378e0 (    0x50) throwTableGenerationFailed() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4637930 (    0x48) throwEncodeUnknownSymbol(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4637978 (    0x18) HuffmanEncoder<unsigned short, unsigned int>::sortElements() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4637990 (   0x8b0) void mrec_qsort_r<EncodeBuildAlphabetCountsUns16Cmp>(void*, unsigned long, unsigned long, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4638240 (     0x4) MrecInitModule_arcgutil_fst() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4638244 (    0xb4) ForwardLatticeNodeIterator<WordLatticeLC>::next() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46382f8 (    0x74) WordLattice::~WordLattice() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463836c (    0xa0) Lattice<WordLatticeLC>::~Lattice() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463840c (    0x68) DgnArray<LatticeLink<WordLatticeLC>>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4638474 (    0x40) DgnArray<LatticeNode<WordLatticeLC>>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46384b4 (    0xdc) ForwardLatticeNodeIterator<WordLatticeLC>::ForwardLatticeNodeIterator(Lattice<WordLatticeLC> const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4638590 (   0x1f8) MrecInitModule_lexnet_prefilt() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4638788 (   0x1b4) HmmDurationPenalties::initDurationsLookups(double) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463893c (    0x78) HmmDurationPenalties::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46389b4 (    0x10) PrefStats::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46389c4 (    0x20) PrefStats::resetStats() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46389e4 (    0x34) PrefStats::operator=(PrefStats const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4638a18 (    0x64) PrefStats::operator-=(PrefStats const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4638a7c (   0x32c) LexTreeNetScorer::LexTreeNetScorer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4638da8 (    0x3c) HmmDurationPenalties::~HmmDurationPenalties() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4638de4 (     0x4) LexTreeNetScorer::LexTreeNetScorer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4638de8 (    0xd4) LexTreeNetScorer::~LexTreeNetScorer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4638ebc (     0x4) LexTreeNetScorer::~LexTreeNetScorer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4638ec0 (  0x1d80) LexTreeNetScorer::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463ac40 (    0xb8) LexTreeNetScorer::fillPens(unsigned int, DgnPrimArray<short> const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463acf8 (    0x78) HmmDurationPenalties::durationToPens(short, unsigned char, unsigned int*, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463ad70 (   0x1cc) LexTreeNetScorer::initScorer(unsigned short, bool, PelScorer*, PicMgr const*, unsigned int, DgnArray<TreePhoneRec> const*, DgnPrimArray<unsigned int> const*, DgnPrimArray<unsigned int> const&, unsigned int, unsigned int, unsigned int, unsigned int, double, bool, DgnArray<OpaquePelIdAndDurId> const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463af3c (   0x11c) LexTreeNetScorer::updateScorerDurations(DgnPrimArray<short> const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463b058 (   0x400) LexTreeNetScorer::beginScorerSyncRecog(unsigned int, PrefiltererSearchParamSet const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463b458 (   0x13c) LexTreeNetScorer::endScorerSyncRecog() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463b594 (     0x8) LexTreeNetScorer::getCurFrame() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463b59c (    0x40) LexTreeNetScorer::isPrefilteringListAvailable(int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463b5dc (    0x38) LexTreeNetScorer::needLookaheadToScoreFrame(int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463b614 (   0x10c) LexTreeNetScorer::scoreFrame(int, DgnPrimArray<unsigned char> const&, ScoreFixArray const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463b720 (    0x94) LexTreeNetScorer::initTreeThresholds(unsigned int*, unsigned long long*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463b7b4 (   0x128) LexTreeNetScorer::initLookaheadThresholds(int, ScoreFixArray const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463b8dc (    0x74) LexTreeNetScorer::initSeqsAndStats() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463b950 (   0x4c4) LexTreeNetScorer::updateTree_Skip() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463be14 (   0x470) LexTreeNetScorer::updateTree_NoSkip() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463c284 (    0x88) LexTreeNetScorer::getList(int, DgnArray<Germ>*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463c30c (   0x128) LexTreeNetScorer::seedTreeAndEndWords(ActiveSeq const&, int, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463c434 (   0x5ac) LexTreeNetScorer::seedSuccessors(unsigned int, unsigned int, unsigned int, unsigned short, int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463c9e0 (   0x15c) PelScoreCache::getScoreAllowBackoff_updateTree(unsigned short, int, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463cb3c (   0x370) LexTreeNetScorer::updateTrueBestPel() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463ceac (    0x4c) DgnPrimStructArray<PelIdAndStayAndPassPen>::~DgnPrimStructArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463cef8 (    0x4c) DgnPrimStructArray<StayAndPassPen>::~DgnPrimStructArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463cf44 (    0x8c) DgnPrimStructArray<PelIdAndStayAndPassPen>::reallocElts(unsigned int, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463cfd0 (     0x4) MrecInitModule_chanadpt_sigproc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463cfd4 (   0x2e0) MrecInitModule_memchunk_mrecutil() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463d2b4 (    0x64) GetRegionChecksum(MemChunkRegion*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463d318 (    0x94) MemChunkRegion::calculateChecksum() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463d3ac (    0xa4) ShowDeltaMemSummary(MemChunkRegion*, char const*, MemStats*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463d450 (    0xd0) MemStatsDisplayFromRef(MemChunkRegion*, bool, bool, bool, char const*, long long, long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463d520 (    0xe0) MemChunkRegion::memStatsDisplayFromRef(bool, bool, bool, char const*, long long, long long, char const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463d600 (    0x68) MemChunkRegion::newMemChunkRegion(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463d668 (   0x2d4) MemChunkRegion::initMemChunkRegion(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463d93c (    0x78) MemChunkRegion::getRegionStats(MemChunkRegion*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463d9b4 (    0x64) MemChunkRegion::resetInternalLocalMaxAllocBytes(MemChunkRegion*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463da18 (    0x68) MemChunkRegion::getAndResetInternalLocalMaxAllocBytes(MemChunkRegion*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463da80 (    0xa0) MemChunkRegion::deleteMemChunkRegion(MemChunkRegion*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463db20 (   0x228) MemChunkRegion::shutdown(bool, bool, bool, bool, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463dd48 (    0x24) MemChunkRegion::getBlockRegion(void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463dd6c (    0x94) MemChunkSuggestAllocExtraItems(unsigned long, unsigned long, MemChunkRegion*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463de00 (    0xb4) GetMemChunkRegionAndSuggestSize(void*, unsigned long, unsigned long*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463deb4 (   0x2b8) MemChunkAlloc(unsigned long, MemChunkRegion*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463e16c (    0xf8) MemChunkFree(void*, MemChunkRegion*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463e264 (   0x1f8) MemChunkRegion::printSomeStats(bool, bool, bool, bool, bool, long long, long long, char const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463e45c (     0x4) MemChunkPrintStats() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463e460 (    0x54) MemChunkInit() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463e4b4 (    0x44) MemChunkRegion::resetMaxAlloc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463e4f8 (   0x120) MemChunkAddChunk(unsigned long, unsigned long, MemChunk*, MemChunkRegion*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463e618 (    0x18) SetShadowDiagnosticVirtualCalculationInterval() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463e630 (    0x18) SetShadowShowActualMemoryAndChunkOverheadStats() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463e648 (    0x18) SetShadowShowMemChunkStatsOnThreadExit() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463e660 (    0x18) SetShadowShowMemStatsOnThreadExit() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463e678 (    0x18) SetShadowShowVirtualPrivateDetailsOnCalc() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463e690 (    0x38) MrecInitLibrary_frame() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463e6c8 (    0x28) MrecInitLibrarySet_throughFrame() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463e6f0 (     0x4) MrecInitModule_chanmgr_channel() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463e6f4 (   0x328) ChannelMgr::ChannelMgr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463ea1c (   0x15c) ChannelMgr::closeChannel(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463eb78 (    0x2c) ChannelMgr::startupChannelMgr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463eba4 (    0x70) ChannelMgr::validateChannelId(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463ec14 (    0x64) void DgnDelete<Channel>(Channel*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463ec78 (    0x34) ChannelMgr::getChannelType(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463ecac (    0x60) ChannelMgr::sourceHasFeatData(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463ed0c (    0x78) ChannelMgr::getUtterance(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463ed84 (    0x90) ChannelMgr::collectAvailableDataForUtt(Utterance*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463ee14 (    0xb4) ChannelMgr::collectThroughUttFrame(Utterance*, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463eec8 (    0x74) ChannelMgr::setRecogCtlUtterance(Utterance*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463ef3c (    0x74) ChannelMgr::maybeSyncRecogCtlUtterance(Utterance*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463efb0 (    0x94) ChannelMgr::maybeStartCollectingDataForUtt(Utterance*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463f044 (    0xb4) ChannelMgr::maybeStopCollectingDataForUtt(Utterance*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463f0f8 (    0x34) void DgnDelete<Utterance>(Utterance*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463f12c (    0x90) ChannelMgr::saveSigProc(unsigned int, FileSpec const&, B_SaveResultCode*, B_SaveOverrideFormatType, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463f1bc (    0x78) ChannelMgr::getSigProc(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463f234 (    0x34) void DgnDelete<SigProc>(SigProc*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463f268 (   0xc90) ChannelMgr::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463fef8 (    0x74) ChannelMgr::getThreadId(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463ff6c (    0x6c) DgnIOwnArray<Channel*>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b463ffd8 (    0x6c) DgnIOwnArray<Utterance*>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4640044 (    0x6c) DgnIOwnArray<SigProc*>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46400b0 (    0x10) WordDummySpec::WordDummySpec() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46400c0 (    0xb8) WordDummySpec::readObject(DgnStream*, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4640178 (    0x10) WordNgramBuildSpec::WordNgramBuildSpec() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4640188 (    0x24) WordNgramBuildSpec::WordNgramBuildSpec(WordDummySpec const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46401ac (   0x280) WordNgramBuildSpec::loadWordDummySpecText(DFile*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b464042c (   0x280) WordNgramBuildSpec::loadWordNgramBuildSpecText(DFile*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46406ac (   0x144) WordNgramBuildSpec::loadWordNgramBuildSpecBinary(DFile*, DFileChecksums*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46407f0 (     0xc) WordNgramBuildSpec::loadWordNgramBuildSpec(DFile*, DFileChecksums*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46407fc (   0x1c0) WordNgramBuildSpec::saveWordNgramBuildSpecText(DFile*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46409bc (   0x110) WordNgramBuildSpec::saveWordNgramBuildSpecBinary(DFile*, DFileChecksums*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4640acc (    0x14) WordNgramBuildSpec::saveWordNgramBuildSpec(DFile*, DFileChecksums*, bool, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4640ae0 (    0x9c) WordIdToHeadCloneWordIdMap::getHeadCloneForVisibleWordId(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4640b7c (    0x34) WordIdToHeadCloneWordIdMap::getHeadCloneForWordId(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4640bb0 (    0x50) WordIdToHeadCloneWordIdMap::addVisibleWordIdMap(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4640c00 (    0xcc) WordIdToHeadCloneWordIdMap::setDecrementForWordId(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4640ccc (    0xec) Hash<unsigned int, unsigned int, WordIdScope, unsigned int>::add(unsigned int const&, unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4640db8 (    0xc4) WordIdToHeadCloneWordIdMap::isHeadCloneWordId(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4640e7c (   0x3f4) WordIdToHeadCloneWordIdMap::deleteWord(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4641270 (    0x40) Hash<unsigned int, unsigned int, WordIdScope, unsigned int>::removeIfPresent(unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46412b0 (    0x50) Hash<unsigned int, unsigned int, WordIdScope, unsigned int>::remove(unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4641300 (   0x148) void writeObject<unsigned int, unsigned int, WordIdScope, unsigned int>(DgnStream*, Hash<unsigned int, unsigned int, WordIdScope, unsigned int> const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4641448 (    0xfc) void readObject<unsigned int, unsigned int, WordIdScope, unsigned int>(DgnStream*, Hash<unsigned int, unsigned int, WordIdScope, unsigned int>&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4641544 (    0x5c) WordNgramTemplate::WordNgramTemplate(WordList const*, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46415a0 (    0x9c) WordNgramTemplate::WordNgramTemplate(WordList const*, unsigned int, unsigned int, WordLanguageModel const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b464163c (   0x1b0) WordNgramTemplate::fillInFromTemplateLanguageModel() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46417ec (     0x4) WordNgramTemplate::WordNgramTemplate(WordList const*, unsigned int, unsigned int, WordLanguageModel const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46417f0 (    0x44) WordNgramTemplate::getHeadCloneForBuildWordId(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4641834 (     0x8) WordNgramTemplate::getHeadCloneForWordId(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b464183c (     0x8) WordNgramTemplate::isHeadCloneWordId(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4641844 (    0x14) WordNgramTemplate::isFinalSilenceScoredVerify() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4641858 (    0x9c) WordNgramTemplate::addWord(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46418f4 (    0x90) WordNgramTemplate::deleteWord(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4641984 (     0xc) WordNgramTemplate::loadWordNgramTemplate(DFile*, DFileChecksums*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4641990 (   0x870) WordNgramTemplate::loadWordNgramTemplateText(DFile*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4642200 (   0x124) WordNgramTemplate::loadWordNgramTemplateBinary(DFile*, DFileChecksums*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4642324 (    0x14) WordNgramTemplate::saveWordNgramTemplate(DFile*, DFileChecksums*, bool, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4642338 (   0x3a8) WordNgramTemplate::saveWordNgramTemplateText(DFile*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46426e0 (    0xf0) WordNgramTemplate::saveWordNgramTemplateBinary(DFile*, DFileChecksums*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46427d0 (   0x108) WordNgramTemplate::writeWordIdToHeadCloneWordId(WordIdToHeadCloneWordIdMap const&, DgnTextFileWriter&, unsigned int, unsigned int, unsigned int, char const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46428d8 (   0x410) WordNgramTemplate::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4642ce8 (    0xe0) Hash<unsigned int, unsigned int, WordIdScope, unsigned int>::Hash(char const*, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4642dc8 (   0x110) Hash<unsigned int, unsigned int, WordIdScope, unsigned int>::upSize(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4642ed8 (    0x64) Hash<unsigned int, unsigned int, WordIdScope, unsigned int>::removeBucket(BucketLink<unsigned int, unsigned int>**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4642f3c (    0x70) Hash<unsigned int, unsigned int, WordIdScope, unsigned int>::reInit(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4642fac (   0x224) TBlock::TBlock(wchar_t const*, bool, TItnRule const*, wchar_t const*, std::__1::set<TPItnTagHandle_fake**, std::__1::less<TPItnTagHandle_fake**>, std::__1::allocator<TPItnTagHandle_fake**>> const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46431d0 (     0x4) TBlock::TBlock(wchar_t const*, bool, TItnRule const*, wchar_t const*, std::__1::set<TPItnTagHandle_fake**, std::__1::less<TPItnTagHandle_fake**>, std::__1::allocator<TPItnTagHandle_fake**>> const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46431d4 (    0x30) TBlock::setRule(TItnRule const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4643204 (   0x288) TBlock::getMultiWordSeparator(TItnParamManager const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b464348c (  0x12f8) TBlock::format(wchar_t const*, TItnControlState const&, wchar_t, unsigned long, wchar_t, TItnParamManager const*, TLexiconParamManager const*, TBuffer<wchar_t>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4644784 (   0xea8) TBlock::applyControls(std::__1::vector<TItnControl, std::__1::allocator<TItnControl>> const&, TItnParamManager const*, TLexiconParamManager const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b464562c (   0x168) TBlock::adjustResult() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4645794 (     0x4) MrecInitModule_verifptr_mrecutil() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4645798 (    0x48) throwBadLengthForNullPointer(unsigned long, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46457e0 (    0x50) throwBadStringPointer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4645830 (    0x9c) MrecInitModule_neuraln_neuraln() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46458cc (    0x40) NeuralNet::~NeuralNet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b464590c (    0x34) void DgnDelete<NeuralNetImage>(NeuralNetImage*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4645940 (    0x34) void DgnDelete<NeuralNetState>(NeuralNetState*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4645974 (     0x4) NeuralNet::~NeuralNet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4645978 (    0x18) NeuralNet::saveNeuralNet(DFile*, DFileChecksums*, bool, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4645990 (   0x68c) NeuralNetImage::saveNeuralNetImageText(DFile*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b464601c (    0x28) (null) [FUNC, FunctionStarts] 
                0x00000001b4646044 (   0x260) NeuralNetImage::saveNeuralNetImageBinary(DFile*, DFileChecksums*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46462a4 (    0x74) NeuralNet::getWindowSize() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4646318 (    0x78) NeuralNet::getHalfWindowSize() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4646390 (    0x74) NeuralNet::getFrameSize() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4646404 (    0x74) NeuralNet::getOutputSize() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4646478 (    0x7c) NeuralNet::isOutTypeBF() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46464f4 (    0x7c) NeuralNet::isOutTypeConcatenatedBF() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4646570 (    0x7c) NeuralNet::reset() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46465ec (    0x84) NeuralNet::initFastNeuralNet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4646670 (   0x180) NeuralNet::run(MovingArrayWindow<DgnPrimArray<unsigned char>, DgnArray<DgnPrimArray<unsigned char>>> const&, unsigned int, DgnPrimArray<unsigned char>*, DgnPrimArray<double>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46467f0 (   0x134) NeuralNet::loadInputFastNeuralNet(MovingArrayWindow<DgnPrimArray<unsigned char>, DgnArray<DgnPrimArray<unsigned char>>> const&, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4646924 (    0xf4) NeuralNet::runFastNeuralNet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4646a18 (    0x20) (null) [FUNC, FunctionStarts] 
                0x00000001b4646a38 (    0x70) NeuralNetState::freeExecutionSpace() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4646aa8 (    0xb8) NeuralNet::fastInputSendingWithDotProduct(NeuralNetBlock*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4646b60 (    0xcc) NeuralNet::fastLinearSendingWithDotProduct(NeuralNetBlock*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4646c2c (   0x100) NeuralNet::fastDpsSendingWithDotProduct(NeuralNetBlock*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4646d2c (    0xb0) NeuralNet::fastFeedbackSendingWithDotProduct(NeuralNetBlock*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4646ddc (    0xd4) NeuralNet::fastReluSendingWithDotProduct(NeuralNetBlock*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4646eb0 (    0x58) NeuralNet::fastOutputLinear(NeuralNetBlock*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4646f08 (    0xe4) NeuralNet::fastOutputDps(NeuralNetBlock*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4646fec (   0x104) NeuralNet::fastOutputDpsm(NeuralNetBlock*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46470f0 (    0x64) NeuralNet::fastOutputRelu(NeuralNetBlock*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4647154 (    0xdc) NeuralNetImage::~NeuralNetImage() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4647230 (    0xdc) HashKEV<unsigned int, unsigned int, Uns32Scope>::add(unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b464730c (     0x4) HashKEV<unsigned int, unsigned int, Uns32Scope>::~HashKEV() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4647310 (    0x6c) NeuralNetState::~NeuralNetState() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b464737c (    0xdc) HashKEV<unsigned int, unsigned int, Uns32Scope>::HashKEV(char const*, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4647458 (    0x28) HashKEV<unsigned int, unsigned int, Uns32Scope>::~HashKEV() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4647480 (    0x74) HashKEV<unsigned int, unsigned int, Uns32Scope>::~HashKEV() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46474f4 (   0x110) HashKEV<unsigned int, unsigned int, Uns32Scope>::upSize(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4647604 (   0x140) DgnArray<DgnPrimArray<short>>::copyArraySlice(DgnArray<DgnPrimArray<short>> const&, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4647744 (    0x4c) DgnPrimArray<float>::~DgnPrimArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4647790 (    0x40) DgnIArray<void*>::~DgnIArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46477d0 (     0x4) MrecInitModule_sdmisc_sdapi() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46477d4 (   0x454) SDApi_Initialize [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4647c28 (   0x1b0) checkVersionAndSizes(unsigned int, unsigned int, SDInitTypeSize const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4647dd8 (   0x10c) SDApi_CheckVersion [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4647ee4 (    0xe4) SDApi_HasErrored [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4647fc8 (     0x4) MrecInitModule_sduttf_sdapi() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4647fcc (    0x9c) MrecInitModule_sputtdet_sigproc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4648068 (    0x9c) MrecInitModule_filespec_mrecutil() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4648104 (     0x4) FileSpec::FileSpec() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4648108 (    0x54) FileSpec::FileSpec(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b464815c (     0x4) FileSpec::FileSpec(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4648160 (    0x54) FileSpec::FileSpec(FileSpec const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46481b4 (     0x4) FileSpec::FileSpec(FileSpec const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46481b8 (    0x44) FileSpec::operator=(FileSpec const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46481fc (     0x4) FileSpec::~FileSpec() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4648200 (    0x38) FileSpec::setEmpty() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4648238 (    0x44) FileSpec::fillFromName(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b464827c (   0x100) FileSpec::fillFromPathAndName(char const*, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b464837c (   0x13c) FileSpec::fillFromDefPathAndName(char const*, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46484b8 (    0x48) FileSpec::operator==(FileSpec const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4648500 (    0x48) FileSpec::getRelativeSourceFileName(char const*, DgnString*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4648548 (    0xe0) FileSpec::getDiagnosticMaskedName(char const*, DgnString*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4648628 (    0x1c) FileSpec::getDiagnosticMaskedName(DgnString*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4648644 (   0x228) FileSpec::fillInComponents(DgnString*, DgnString*, DgnString*, DgnString*, DgnString*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b464886c (    0x14) FileSpec::getPathOnly(DgnString*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4648880 (    0x18) FileSpec::getNameOnly(DgnString*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4648898 (    0x30) FileSpec::isValid() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46488c8 (     0xc) FileSpec::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46488d4 (     0x4) MrecInitModule_dstream_dfutil() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46488d8 (    0x64) DgnStream::DgnStream(B_DgnStreamOpenMode, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b464893c (    0x44) DgnStream::~DgnStream() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4648980 (     0x4) DgnStream::~DgnStream() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4648984 (     0x4) DgnStream::~DgnStream() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4648988 (   0x26c) DgnStream::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4648bf4 (   0x1a0) DgnStream::getLine(DgnString&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4648d94 (   0x184) DgnStream::streamPrintf(char const*, ...) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4648f18 (     0x4) DgnStream::beginCachedReadGroup(unsigned int, unsigned int, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4648f1c (     0x4) DgnStream::endCachedReadGroup(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4648f20 (     0x4) MrecInitModule_scrcdat_pel() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4648f24 (     0xc) PelScoreCacheData::PelScoreCacheData() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4648f30 (    0x30) PelScoreCacheData::~PelScoreCacheData() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4648f60 (    0x58) PelScoreCacheData::clone() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4648fb8 (   0x26c) PelScoreCacheData::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4649224 (   0x100) unsigned long sizeObject<DgnPrimArray<Uns16AndScore>>(DgnArray<DgnPrimArray<Uns16AndScore>> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4649324 (    0x30) sizeObject(PelScoreCacheData const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4649354 (    0x64) DgnArray<DgnPrimArray<Uns16AndScore>>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46493b8 (    0x4c) DgnPrimArray<Uns16AndScore>::~DgnPrimArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4649404 (   0x140) DgnArray<DgnPrimArray<Uns16AndScore>>::copyArraySlice(DgnArray<DgnPrimArray<Uns16AndScore>> const&, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4649544 (    0x8c) DgnPrimArray<Uns16AndScore>::copyArraySlice(DgnPrimArray<Uns16AndScore> const&, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46495d0 (    0xdc) unsigned long sizeObject<Uns16AndScore>(DgnPrimArray<Uns16AndScore> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46496ac (     0x4) MrecInitModule_cmbtable_mrecutil() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46496b0 (   0x1c4) CombineTable::initCombineTable(double) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4649874 (    0x54) CombineTable::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46498c8 (     0x4) MrecInitModule_recogres_recogctl() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46498cc (   0x11c) unsigned long sizeObject<RecogResultToken>(DgnArray<RecogResultToken> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46499e8 (   0x374) RecogResultChoice::fillFromNBestChoice(NBestChoice const*, unsigned int, bool, bool, DgnArray<WordConfidenceInfo>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4649d5c (   0x150) addSilenceToken(DgnArray<RecogResultToken>&, WordLatticeLC const&, unsigned int, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4649eac (    0x8c) DgnArray<PRStatsItem>::reallocElts(unsigned int, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4649f38 (   0x3cc) MrecInitModule_pelsrvsm_pel() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b464a304 (     0x4) DoubleGlobalParam::~DoubleGlobalParam() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b464a308 (    0x28) DoubleGlobalParam::~DoubleGlobalParam() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b464a330 (     0x4) MrecInitModule_subext_dfutil() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b464a334 (    0x20) GetSubFileExtensionString(SubFileExtension) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b464a354 (    0x10) SubDirExtension::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b464a364 (    0x80) GetIndexForLMSubDirExtensionString(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b464a3e4 (     0x4) MrecInitModule_nsyncnet_net() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b464a3e8 (     0x4) NonCoartSyncNet::~NonCoartSyncNet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b464a3ec (    0x28) NonCoartSyncNet::~NonCoartSyncNet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b464a414 (    0x44) NonCoartSyncNet::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b464a458 (     0x8) NonCoartSyncNet::getExitContext() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b464a460 (     0x4) NonCoartSyncNet::configureOutPorts(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b464a464 (   0x220) NonCoartSyncNet::scoreNetInternal(int, int, int, int, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b464a684 (    0xd8) int BaseSyncNet::scoreIntSilNode1<true>(bool, bool, int, int, int, int, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b464a75c (    0x4c) NonCoartSyncNet::thresholdNetInternal(int, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b464a7a8 (    0x40) NonCoartSyncNet::calcNumActiveNodes(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b464a7e8 (    0x64) NonCoartSyncNet::addNodesSequential(unsigned int, B_ScoreOrder) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b464a84c (    0x44) NonCoartSyncNet::attachInPort(unsigned char, Node*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b464a890 (    0xd0) PredStruct::addPred(BaseNode const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b464a960 (     0x4) MrecInitModule_sdcorp_sdapi() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b464a964 (     0x4) MrecInitModule_preemph_sigproc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b464a968 (     0x4) MrecInitModule_sigproc_sigproc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b464a96c (   0x10c) SigProc::~SigProc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b464aa78 (    0x34) void DgnDelete<ChannelStats>(ChannelStats*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b464aaac (    0x34) void DgnDelete<CTFTMgr>(CTFTMgr*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b464aae0 (    0x50) void DgnDelete<UserDelta>(UserDelta*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b464ab30 (     0x4) SigProc::~SigProc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b464ab34 (   0x2a0) SigProc::saveSigProc(FileSpec const&, B_SaveResultCode*, B_SaveOverrideFormatType, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b464add4 (    0x6c) SigProc::decrementAdapterCount() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b464ae40 (   0x940) SigProc::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b464b780 (   0x2e0) MrecInitModule_sausage_kernel() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b464ba60 (    0x34) CWIDProbPair::~CWIDProbPair() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b464ba94 (    0x34) void DgnDelete<DgnArray<StartEndTimePair>>(DgnArray<StartEndTimePair>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b464bac8 (    0xa4) sizeObject(CWIDProbPair const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b464bb6c (    0x38) SausageSlot::~SausageSlot() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b464bba4 (    0xec) unsigned long sizeObject<CWIDProbPair>(DgnArray<CWIDProbPair> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b464bc90 (   0x128) Sausage::adjustReferenceCounts(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b464bdb8 (    0x54) Sausage::~Sausage() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b464be0c (     0x4) Sausage::~Sausage() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b464be10 (   0x5d4) Sausage::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b464c3e4 (    0xfc) unsigned long sizeObject<SausageSlot*>(DgnIOwnArray<SausageSlot*> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b464c4e0 (    0x40) DgnArray<StartEndTimePair>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b464c520 (    0x68) DgnArray<CWIDProbPair>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b464c588 (    0x6c) DgnIOwnArray<SausageSlot*>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b464c5f4 (    0x34) void DgnDelete<SausageSlot>(SausageSlot*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b464c628 (     0x4) MrecInitModule_sdvoc_sdapi() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b464c62c (   0x7cc) SDVoc_New [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b464cdf8 (   0x440) SDVoc_Save [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b464d238 (   0x20c) SDVoc_Delete [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b464d444 (   0x3bc) SDVoc_GetInfo [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b464d800 (   0x3fc) SDVoc_GetWords [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b464dbfc (   0x1d4) SDVoc_GetAllowedWordCollations [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b464ddd0 (   0x2e8) SDVoc_SetAllowedWordCollations [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b464e0b8 (   0x20c) SDVoc_GetCollationName [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b464e2c4 (   0x2a0) SDVoc_GetColls [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b464e564 (    0x40) DgnIArray<SDhColl_fake**>::~DgnIArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b464e5a4 (   0x524) MrecInitModule_wordlm_lm() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b464eac8 (    0xf4) DiskNgramContextBiTriIsolatedCmp::compareElements(void*, void const*, void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b464ebbc (   0x170) DiskNgramContextBiTriGroupTrigramsCmp::compareElements(void*, void const*, void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b464ed2c (   0x16c) DiskNgramContextBiTriGroupTrigramsWithBigramsCmp::compareElements(void*, void const*, void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b464ee98 (    0xb8) DiskNgramContextQuadIsolatedCmp::compareElements(void*, void const*, void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b464ef50 (   0x12c) DiskNgramContextQuadGroupCmp::compareElements(void*, void const*, void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b464f07c (    0x84) WordIdAndCountCmp::compareElements(void*, void const*, void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b464f100 (    0x64) WordLanguageModel::getWordIdWordName(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b464f164 (    0xf8) BigramData::BigramData() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b464f25c (    0xbc) BigramData::~BigramData() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b464f318 (    0xb4) BigramData::compact() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b464f3cc (    0x78) BigramData::bi1SetEmpty(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b464f444 (  0x1038) BigramData::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b465047c (   0x19c) BigramData::copyBigramData(BigramData const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4650618 (    0x8c) HuffmanDecoder<unsigned short, unsigned int>::operator=(HuffmanDecoder<unsigned short, unsigned int> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46506a4 (   0x188) BigramData::saveBinary(DgnStream*, unsigned int&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b465082c (   0x188) BigramData::loadBinary(DgnStream*, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46509b4 (   0x1e4) BigramData::saveBinaryShared(DgnSharedMemStream*, bool, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4650b98 (   0x1e4) BigramData::loadBinaryShared(DgnSharedMemStream*, bool, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4650d7c (   0x150) BigramData::computeLocalPreloadableBytes() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4650ecc (    0x94) BigramData::getSearchScoreForIndex(unsigned int, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4650f60 (   0x574) BigramData::initNewBigramData(BigramData*, HuffmanEncoder<unsigned short, unsigned int>*, DgnArray<DiskNgramContext>*, DgnIArray<DiskNgramContext*>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46514d4 (    0x84) BigramData::configureBigramData(bool, unsigned int, unsigned short const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4651558 (    0xa8) BigramData::preAllocateStaticBigramData(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4651600 (   0x128) BigramData::preAllocateDynamicBigramData(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4651728 (    0x54) DgnPrimArray<unsigned short>::add(unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b465177c (    0x58) DgnPrimArray<unsigned char>::add(unsigned char) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46517d4 (    0x60) BigramData::getSearchSuccIdForIndex(unsigned int, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4651834 (    0x5c) BigramData::getSearchQuantizedScoreForIndex(unsigned int, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4651890 (   0x164) BigramData::fillBigramRecord(unsigned int, DgnPrimArray<unsigned short> const&, DgnPrimArray<unsigned short> const&, DgnPrimArray<unsigned char> const&, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46519f4 (   0x114) BigramData::allocBi1(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4651b08 (    0x80) HuffmanEncoder<unsigned short, unsigned int>::addSuccessors(DgnPrimArray<unsigned short> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4651b88 (    0xd4) HuffmanEncoder<unsigned short, unsigned int>::addValue(unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4651c5c (   0x3b4) HuffmanEncoder<unsigned short, unsigned int>::finalizeTables(HuffmanDecoder<unsigned short, unsigned int>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4652010 (   0x434) BigramData::savePersistentAndFillInNewBigramData(DgnStream*, unsigned int&, BigramData*, HuffmanEncoder<unsigned short, unsigned int> const&, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4652444 (   0x120) HuffmanEncoder<unsigned short, unsigned int>::encodeSuccessors(DgnPrimArray<unsigned short> const&, DgnPrimArray<unsigned int>*, HuffmanDecoder<unsigned short, unsigned int> const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4652564 (   0x374) BigramData::fillInFullyLoadedBigramData(BigramData*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46528d8 (   0x134) BigramData::fillBigramRecordLookup(unsigned int, DgnPrimArray<unsigned short> const&, DgnPrimArray<unsigned short> const&, DgnPrimArray<unsigned char> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4652a0c (    0xf0) BigramData::allocSearch(unsigned int, unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4652afc (    0x68) BigramData::setSearchSuccIdForIndex(unsigned int, unsigned int, unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4652b64 (    0x6c) BigramData::setSearchQuantizedScoreForIndex(unsigned int, unsigned int, unsigned char) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4652bd0 (    0x6c) BigramData::setSearchScoreForIndex(unsigned int, unsigned int, unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4652c3c (    0xcc) BigramData::allocLookup(unsigned int, unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4652d08 (   0x14c) BigramData::fillBigramRecordPreload(unsigned int, DgnPrimArray<unsigned short> const&, DgnPrimArray<unsigned short> const&, DgnPrimArray<unsigned char> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4652e54 (    0xa8) BigramData::addBigramScoreQuantization(unsigned char, unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4652efc (   0x1a0) BigramData::allocLoaded(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b465309c (   0x22c) TrigramData::TrigramData() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46532c8 (   0x1ec) TrigramData::allocTri1(unsigned int, unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46534b4 (    0xec) TrigramData::~TrigramData() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46535a0 (    0xdc) TrigramData::compact() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b465367c (  0x1548) TrigramData::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4654bc4 (   0x214) TrigramData::copyTrigramData(TrigramData const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4654dd8 (   0x1f8) TrigramData::saveBinary(DgnStream*, unsigned int&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4654fd0 (   0x1f8) TrigramData::loadBinary(DgnStream*, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46551c8 (   0x2b4) TrigramData::saveBinaryShared(DgnSharedMemStream*, bool, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b465547c (   0x2b4) TrigramData::loadBinaryShared(DgnSharedMemStream*, bool, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4655730 (   0x1a4) TrigramData::computeLocalPreloadableBytes() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46558d4 (    0x94) TrigramData::getSearchScoreForIndex(unsigned int, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4655968 (   0x6a4) TrigramData::initNewTrigramData(TrigramData*, HuffmanEncoder<unsigned short, unsigned int>*, DgnArray<DiskNgramContext>*, DgnIArray<DiskNgramContext*>*, DgnPrimArray<double> const*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b465600c (    0xe8) TrigramData::configureTrigramData(bool, unsigned int, short const*, unsigned int, unsigned short const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46560f4 (   0x15c) TrigramData::preAllocateStaticTrigramData(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4656250 (   0x128) TrigramData::preAllocateDynamicTrigramData(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4656378 (    0x60) TrigramData::getSearchSuccIdForIndex(unsigned int, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46563d8 (    0x5c) TrigramData::getSearchQuantizedScoreForIndex(unsigned int, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4656434 (   0x164) TrigramData::fillTrigramRecord(unsigned int, DgnPrimArray<unsigned short> const&, DgnPrimArray<unsigned short> const&, DgnPrimArray<unsigned char> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4656598 (   0x438) TrigramData::savePersistentAndFillInNewTrigramData(DgnStream*, unsigned int&, TrigramData*, HuffmanEncoder<unsigned short, unsigned int> const&, unsigned int, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46569d0 (   0x468) TrigramData::fillInFullyLoadedTrigramData(TrigramData*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4656e38 (   0x134) TrigramData::fillTrigramRecordLookup(unsigned int, DgnPrimArray<unsigned short> const&, DgnPrimArray<unsigned short> const&, DgnPrimArray<unsigned char> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4656f6c (    0xe4) TrigramData::allocSearch(unsigned int, unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4657050 (    0x68) TrigramData::setSearchSuccIdForIndex(unsigned int, unsigned int, unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46570b8 (    0x6c) TrigramData::setSearchQuantizedScoreForIndex(unsigned int, unsigned int, unsigned char) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4657124 (    0x6c) TrigramData::setSearchScoreForIndex(unsigned int, unsigned int, unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4657190 (    0xd0) TrigramData::allocLookup(unsigned int, unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4657260 (   0x14c) TrigramData::fillTrigramRecordPreload(unsigned int, DgnPrimArray<unsigned short> const&, DgnPrimArray<unsigned short> const&, DgnPrimArray<unsigned char> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46573ac (    0xa8) TrigramData::addTrigramBackoffWeightQuantization(unsigned char, short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4657454 (    0xa8) TrigramData::addTrigramScoreQuantization(unsigned char, unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46574fc (   0x1a0) TrigramData::allocLoaded(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b465769c (   0x270) QuadgramData::QuadgramData() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b465790c (   0x180) QuadgramData::allocQuad1(unsigned int, unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4657a8c (   0x114) QuadgramData::~QuadgramData() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4657ba0 (    0xfc) QuadgramData::compact() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4657c9c (  0x1958) QuadgramData::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46595f4 (   0x280) QuadgramData::copyQuadgramData(QuadgramData const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4659874 (   0x248) QuadgramData::saveBinary(DgnStream*, unsigned int&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4659abc (   0x248) QuadgramData::loadBinary(DgnStream*, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4659d04 (   0x2d4) QuadgramData::saveBinaryShared(DgnSharedMemStream*, bool, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4659fd8 (   0x2d4) QuadgramData::loadBinaryShared(DgnSharedMemStream*, bool, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b465a2ac (   0x1cc) QuadgramData::computeLocalPreloadableBytes() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b465a478 (    0x8c) QuadgramData::getScoreForIndex(unsigned int, unsigned int, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b465a504 (   0x4e8) QuadgramData::initNewQuadgramData(QuadgramData*, HuffmanEncoder<unsigned short, unsigned int>*, DgnArray<DiskNgramContext>*, DgnPrimArray<double> const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b465a9ec (    0xe8) QuadgramData::configureQuadgramData(bool, unsigned int, short const*, unsigned int, unsigned short const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b465aad4 (   0x104) QuadgramData::preAllocateStaticQuadgramData(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b465abd8 (   0x168) QuadgramData::preAllocateDynamicQuadgramData(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b465ad40 (    0x64) QuadgramData::getQuad3SuccIdForIndex(unsigned int, unsigned int, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b465ada4 (   0x710) QuadgramData::savePersistentAndFillInNewQuadgramData(DgnStream*, unsigned int&, QuadgramData*, HuffmanEncoder<unsigned short, unsigned int> const&, unsigned int, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b465b4b4 (    0x64) QuadgramData::getQuantizedScoreForIndex(unsigned int, unsigned int, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b465b518 (    0x80) QuadgramData::getBackoffWeight(unsigned int, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b465b598 (   0x1b0) HuffmanEncoder<unsigned short, unsigned int>::encodeValues(DgnPrimArray<unsigned short> const&, DgnPrimArray<unsigned int>*, HuffmanDecoder<unsigned short, unsigned int> const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b465b748 (   0x754) QuadgramData::fillInFullyLoadedQuadgramData(QuadgramData*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b465be9c (   0x1a4) QuadgramData::fillQuad2BackoffWeights(unsigned int, DgnPrimArray<unsigned short> const&, DgnPrimArray<short> const&, DgnPrimArray<unsigned char> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b465c040 (   0x140) QuadgramData::fillQuadgramRecord(unsigned int, unsigned int, DgnPrimArray<unsigned short> const&, DgnPrimArray<unsigned short> const&, DgnPrimArray<unsigned char> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b465c180 (   0x12c) QuadgramData::allocQuad2(unsigned int, unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b465c2ac (    0xdc) QuadgramData::allocScoresForIndex(unsigned int, unsigned int, unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b465c388 (    0x64) QuadgramData::setQuad3SuccIdForIndex(unsigned int, unsigned int, unsigned int, unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b465c3ec (    0x64) QuadgramData::setQuantizedScoreForIndex(unsigned int, unsigned int, unsigned int, unsigned char) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b465c450 (    0x64) QuadgramData::setScoreForIndex(unsigned int, unsigned int, unsigned int, unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b465c4b4 (    0xa8) QuadgramData::addQuadgramBackoffWeightQuantization(unsigned char, short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b465c55c (    0xa8) QuadgramData::addQuadgramScoreQuantization(unsigned char, unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b465c604 (   0x2f4) QuadgramData::allocLoaded(unsigned int, DgnPrimArray<unsigned short> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b465c8f8 (   0x1d4) WordLanguageModel::WordLanguageModel(unsigned int, WordList const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b465cacc (     0x4) WordLanguageModel::WordLanguageModel(unsigned int, WordList const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b465cad0 (    0xf4) WordLanguageModel::~WordLanguageModel() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b465cbc4 (     0x4) WordLanguageModel::~WordLanguageModel() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b465cbc8 (    0x28) WordLanguageModel::~WordLanguageModel() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b465cbf0 (  0x19e4) WordLanguageModel::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b465e5d4 (    0x94) WordLanguageModel::initializeScoreToProb() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b465e668 (   0x100) WordLanguageModel::maybeAddAlienWordLmId(double, double, unsigned long long, unsigned long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b465e768 (   0x168) WordLanguageModel::allocLmId(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b465e8d0 (    0x7c) WordLanguageModel::computeAlienScore(unsigned long long, double, double) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b465e94c (   0x550) WordLanguageModel::loadLM(DFile*, DFile*, DFileChecksums*, DgnSharedMemStream*, bool, bool, bool, unsigned int, unsigned int, bool, bool, bool*, bool*, double*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b465ee9c (   0x798) WordLanguageModel::loadWns(DFile*, double*, double*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b465f634 (  0x5e3c) WordLanguageModel::loadText(DFile*, bool, unsigned int, unsigned int, double, double) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4665470 (   0x430) WordLanguageModel::loadBinary(DFile*, DFileChecksums*, bool, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46658a0 (   0x210) WordLanguageModel::loadBinaryShared(DgnSharedMemStream*, DFile*, DFileChecksums*, SubFileExtension, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4665ab0 (   0x60c) WordLanguageModel::loadDynamic(DFile*, DFile*, DFileChecksums*, bool, bool, bool*, bool*, bool, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46660bc (   0x270) WordLanguageModel::checkWordListLMAgreement() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b466632c (    0x54) WordLanguageModel::getTotalPreloadableBytes() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4666380 (    0x70) WordLanguageModel::computeTotalPreloadableBytes() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46663f0 (    0x74) WordLanguageModel::computeLocalPreloadableBytes() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4666464 (   0x1b4) WordLanguageModel::preloadBigramsAndTrigrams(unsigned int, DgnArray<DgnPrimArray<unsigned int>> const&, unsigned int*, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4666618 (    0x78) WordLanguageModel::preloadBigramRecord(unsigned int, DgnPrimArray<unsigned short>*, DgnPrimArray<unsigned short>*, DgnPrimArray<unsigned char>*, DgnPrimArray<unsigned int>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4666690 (    0x78) WordLanguageModel::preloadTrigramRecord(unsigned int, DgnPrimArray<unsigned short>*, DgnPrimArray<unsigned short>*, DgnPrimArray<unsigned char>*, DgnPrimArray<unsigned int>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4666708 (   0x208) WordLanguageModel::preloadQuadgrams(unsigned int, DgnArray<DgnPrimArray<unsigned int>> const&, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4666910 (   0x3e8) WordLanguageModel::preloadQuadgramRecord(unsigned int, DgnPrimArray<unsigned short>*, DgnPrimArray<unsigned short>*, DgnPrimArray<unsigned short>*, DgnPrimArray<short>*, DgnPrimArray<unsigned char>*, DgnPrimArray<unsigned short>*, DgnPrimArray<unsigned char>*, DgnPrimArray<unsigned int>*, DgnPrimArray<unsigned int>*, DgnPrimArray<unsigned int>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4666cf8 (   0x4fc) WordLanguageModel::finalizeLM(LanguageModel*, DFile*, DFileChecksums*, DgnSharedMemStream*, bool, bool, unsigned int, unsigned int, bool, DgnIOwnArray<WordNgramTemplate*>*, bool, unsigned long long, long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46671f4 (    0x78) void readObject<unsigned int>(RealDFileSubFileStream*, DgnPrimArray<unsigned int>&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b466726c (     0x4) WordLanguageModel::getLMWithLegacyPath(DgnString*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4667270 (    0x5c) WordLanguageModel::canSaveAsText() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46672cc (   0x144) WordLanguageModel::saveLM(DFile*, DFileChecksums*, bool, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4667410 (   0x154) WordLanguageModel::saveDynamic(DFile*, DFileChecksums*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4667564 (   0x244) WordLanguageModel::saveWns(DFile*, bool, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46677a8 (  0x1d68) WordLanguageModel::saveText(DFile*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4669510 (   0x194) WordLanguageModel::saveBinary(DFile*, DFileChecksums*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46696a4 (    0x94) WordLanguageModel::saveLMShared(DgnSharedMemStream*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4669738 (   0x180) WordLanguageModel::saveBinaryShared(DgnSharedMemStream*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46698b8 (    0xa4) WordLanguageModel::reloadLMShared(DgnSharedMemStream*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b466995c (   0x1c0) WordLanguageModel::saveVocAndSvc(DFile*, DFile*, DFileChecksums*, DFileChecksums*, bool, unsigned long long, unsigned long long, B_LMSBigramTrigramGroupingType, B_LMSQuadgramGroupingType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4669b1c (  0x1e58) WordLanguageModel::savePersistentAndIndex(DFile*, DFileChecksums*, bool, unsigned long long, unsigned long long, B_LMSBigramTrigramGroupingType, B_LMSQuadgramGroupingType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b466b974 (    0x94) SubDirExtension::isString(DgnString const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b466ba08 (   0x1b0) WordLanguageModel::loadUnigramMembersBinary(DgnStream*, unsigned int&, bool, unsigned long long*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b466bbb8 (    0xb8) WordLanguageModel::saveUnigramMembersBinary(DgnStream*, unsigned int&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b466bc70 (   0x124) WordLanguageModel::loadBigramMembersBinary(DgnStream*, unsigned int&, bool, unsigned long long*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b466bd94 (    0xbc) WordLanguageModel::verifyBoWtForBiSc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b466be50 (    0xc4) WordLanguageModel::throwOnBadBoWt() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b466bf14 (   0x1f0) WordLanguageModel::verifyUniScForBiSc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b466c104 (   0x1bc) WordLanguageModel::throwOnBadTriBoWt() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b466c2c0 (   0x234) WordLanguageModel::verifyUniScForTriSc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b466c4f4 (   0x2d4) WordLanguageModel::verifyUniScForQuadSc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b466c7c8 (   0x1c0) WordLanguageModel::maybeRepairOutOfRangeWordIdsOrThrow(bool, bool, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b466c988 (    0xc8) WordLanguageModel::saveBigramMembersBinary(DgnStream*, unsigned int&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b466ca50 (   0x1b4) WordLanguageModel::recordWordIdLmIdUsage(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b466cc04 (   0x1b4) WordLanguageModel::recordWordIdContextLmIdUsage(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b466cdb8 (   0x1ac) WordLanguageModel::recordWordIdInvalidLmIdUsage(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b466cf64 (   0x1ac) WordLanguageModel::recordWordIdInvalidContextLmIdUsage(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b466d110 (   0x254) WordLanguageModel::constructLmIdToWordIdMapping(DgnPrimArray<unsigned int>*, DgnPrimArray<unsigned int>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b466d364 (    0x90) WordLanguageModel::getWordIdWithMapping(unsigned int, bool, DgnPrimArray<unsigned int> const*, DgnPrimArray<unsigned int> const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b466d3f4 (   0x74c) void mrec_qsort_r<DiskNgramContextBiTriIsolatedCmp>(void*, unsigned long, unsigned long, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b466db40 (   0x74c) void mrec_qsort_r<DiskNgramContextQuadIsolatedCmp>(void*, unsigned long, unsigned long, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b466e28c (   0x74c) void mrec_qsort_r<DiskNgramContextBiTriGroupTrigramsCmp>(void*, unsigned long, unsigned long, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b466e9d8 (   0x74c) void mrec_qsort_r<DiskNgramContextBiTriGroupTrigramsWithBigramsCmp>(void*, unsigned long, unsigned long, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b466f124 (   0x74c) void mrec_qsort_r<DiskNgramContextQuadGroupCmp>(void*, unsigned long, unsigned long, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b466f870 (   0x4d0) WordLanguageModel::loadPersistentAndIndex() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b466fd40 (   0x348) WordLanguageModel::reabsorbStaticLM() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4670088 (   0x2b0) WordLanguageModel::loadBigramRecord(unsigned int, LMStats*, LMContextPars const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4670338 (   0x2b0) WordLanguageModel::loadTrigramRecord(unsigned int, unsigned int, unsigned int, LMStats*, LMContextPars const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46705e8 (   0x4f0) WordLanguageModel::loadQuadgramRecord(unsigned int, unsigned int, unsigned int, LMStats*, LMContextPars const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4670ad8 (   0x5d4) WordLanguageModel::setLMScale(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46710ac (   0x108) TrigramData::rescaleScores(unsigned int, double) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46711b4 (   0x108) BigramData::rescaleScores(unsigned int, double) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46712bc (     0x8) WordLanguageModel::recentBufferUsesWord(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46712c4 (    0x74) WordLanguageModel::hasRecentBuffer() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4671338 (    0x68) WordLanguageModel::getRecentBufferLength() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46713a0 (    0x80) WordLanguageModel::addToRecent(DgnPrimArray<unsigned int> const&, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4671420 (    0x60) WordLanguageModel::clearRecent() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4671480 (   0x208) WordLanguageModel::checkWordIdLmIdValidityAgreement(unsigned int, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4671688 (    0xdc) WordLanguageModel::verifyUnigrams(char const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4671764 (    0xc8) WordLanguageModel::getLmIdWordName(unsigned int, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467182c (   0x174) WordLanguageModel::verifyLM(bool, char const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46719a0 (   0x1ec) WordLanguageModel::verifyBackoffUnigrams(char const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4671b8c (   0x378) WordLanguageModel::verifyBigrams(char const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4671f04 (   0x3b8) WordLanguageModel::verifyTrigrams(char const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46722bc (   0x390) WordLanguageModel::verifyQuadgrams(char const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467264c (    0x90) WordLanguageModel::getNumLoadedBigramBytes() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46726dc (    0x90) WordLanguageModel::getNumLoadedTrigramBytes() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467276c (    0x84) WordLanguageModel::getNumLoadedQuadgramBytes() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46727f0 (    0x58) QuadgramData::sizeLoadedData() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4672848 (    0x40) WordLanguageModel::getNumInterpolatedLms() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4672888 (    0x40) WordLanguageModel::setInterpolatedLmWeights(DgnPrimArray<double> const&, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46728c8 (    0x40) WordLanguageModel::getInterpolatedLmWeights(unsigned int*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4672908 (   0x144) WordLanguageModel::maybeUncompactWordIdToLmIdArray(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4672a4c (   0x144) WordLanguageModel::maybeUncompactWordIdToContextLmIdArray(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4672b90 (    0x34) WordLanguageModel::fillInWordDummySpec(WordDummySpec*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4672bc4 (   0x240) WordLanguageModel::addWord(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4672e04 (    0x94) WordLanguageModel::addUnmappedWord(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4672e98 (   0x178) WordLanguageModel::deleteWord(unsigned int, bool*, bool*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4673010 (    0x94) WordLanguageModel::recomputeRecentBufferHeadClonesAndCommonWords() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46730a4 (    0x94) WordLanguageModel::recomputeRecentBufferRemainders() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4673138 (    0xb0) WordLanguageModel::notifyEmptiedWordList() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46731e8 (    0xd0) WordLanguageModel::verifyValidTopicWordLM() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46732b8 (    0xec) WordLanguageModel::verifyConsistentWithWordNgramBuildSpec(WordNgramBuildSpec const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46733a4 (   0x188) WordLanguageModel::getWordId(unsigned int, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467352c (   0x358) WordLanguageModel::languageScore(unsigned int, unsigned int, LMStats*, LMContextData*, LMScoreDetails*, bool, bool, bool*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4673884 (   0x154) WordLanguageModel::findQuadgramScoreSearch(unsigned int, LMStats*, WordLMContextData const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46739d8 (    0x54) WordLanguageModel::findTrigramScoreLookup(unsigned int, WordLMContextData const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4673a2c (   0x114) WordLanguageModel::findTrigramScoreSearch(unsigned int, LMStats*, WordLMContextData const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4673b40 (    0x54) WordLanguageModel::findBigramScoreLookup(unsigned int, WordLMContextData const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4673b94 (   0x114) WordLanguageModel::findBigramScoreSearch(unsigned int, LMStats*, WordLMContextData const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4673ca8 (   0x2c0) WordLanguageModel::languageScoreForSearch(unsigned int, unsigned int, LMStats*, LMContextData*, bool, bool*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4673f68 (    0x74) WordLanguageModel::getLmIdForSearch(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4673fdc (    0xc4) WordLanguageModel::languageScoreForPrefilterer(DgnPrimArray<unsigned int> const&, ScoreArray*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46740a0 (    0x14) WordLanguageModel::isFinalSilenceScoredVerify() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46740b4 (    0x10) WordLanguageModel::hasAnyQuadgrams() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46740c4 (    0xac) WordLanguageModel::tri1HasTrigrams(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4674170 (   0x104) WordLanguageModel::quad1quad2HasQuadgrams(unsigned int, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4674274 (    0x64) WordLanguageModel::findQuad2Index(unsigned int, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46742d8 (    0x40) WordLanguageModel::createContextData() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4674318 (   0x414) WordLanguageModel::setContext(DgnPrimArray<unsigned int> const&, DgnPrimArray<unsigned int> const*, LMStats*, LMContextPars const&, LMContextData*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467472c (    0x20) (null) [FUNC, FunctionStarts] 
                0x00000001b467474c (    0x20) (null) [FUNC, FunctionStarts] 
                0x00000001b467476c (    0xbc) WordLanguageModel::setBigramContext(LMStats*, LMContextPars const&, WordLMContextData&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4674828 (   0x144) WordLanguageModel::setTrigramContext(LMStats*, LMContextPars const&, WordLMContextData&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467496c (   0x1b4) WordLanguageModel::setQuadgramContext(LMStats*, LMContextPars const&, WordLMContextData&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4674b20 (    0x84) WordLanguageModel::unsetContext(LMContextData*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4674ba4 (    0x44) WordLanguageModel::mayWordBeIgnoredInContext(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4674be8 (   0x1c4) WordLanguageModel::readBigramRecord(unsigned int, DgnPrimArray<unsigned short>*, DgnPrimArray<unsigned short>*, DgnPrimArray<unsigned char>*, DgnPrimArray<unsigned int>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4674dac (    0x48) BigramData::isOnDiskCompressed(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4674df4 (    0x7c) HuffmanDecoder<unsigned short, unsigned int>::decodeSuccessors(DgnPrimArray<unsigned int> const&, DgnPrimArray<unsigned short>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4674e70 (   0x1c4) WordLanguageModel::readTrigramRecord(unsigned int, DgnPrimArray<unsigned short>*, DgnPrimArray<unsigned short>*, DgnPrimArray<unsigned char>*, DgnPrimArray<unsigned int>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4675034 (    0x48) TrigramData::isOnDiskCompressed(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467507c (    0x78) TrigramData::tri2SetUnallocated(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46750f4 (    0xe4) WordLanguageModel::readCompressedQuad3Data(DgnPrimArray<unsigned int>*, DgnPrimArray<unsigned int>*, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46751d8 (    0x64) WordLanguageModel::readUncompressedQuad3Data(DgnPrimArray<unsigned short>*, DgnPrimArray<unsigned short>*, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467523c (   0x2bc) WordLanguageModel::readQuadgramRecord(unsigned int, DgnPrimArray<unsigned short>*, DgnPrimArray<unsigned short>*, DgnPrimArray<unsigned short>*, DgnPrimArray<short>*, DgnPrimArray<unsigned char>*, DgnPrimArray<unsigned short>*, DgnPrimArray<unsigned char>*, DgnPrimArray<unsigned int>*, DgnPrimArray<unsigned int>*, DgnPrimArray<unsigned int>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46754f8 (    0x48) QuadgramData::isOnDiskCompressed(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4675540 (    0x78) void readObject<unsigned short>(RealDFileSubFileStream*, DgnPrimArray<unsigned short>&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46755b8 (   0x21c) HuffmanDecoder<unsigned short, unsigned int>::decodeValues(DgnPrimArray<unsigned int> const&, DgnPrimArray<unsigned short>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46757d4 (    0x68) QuadgramData::quad2SetUnallocated(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467583c (    0xa4) WordLanguageModel::beginLMSyncRecog(bool, LMContextData*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46758e0 (    0x94) WordLanguageModel::beginRescoringInLMSyncRecog(LMContextData*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4675974 (    0xa4) WordLanguageModel::endLMSyncRecog(bool, LMContextData*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4675a18 (   0x1f8) WordLanguageModel::clearLoadedData(B_LMClearLoadedType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4675c10 (    0xb0) BigramData::freeLoadedData() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4675cc0 (    0xb0) TrigramData::freeLoadedData() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4675d70 (   0x128) QuadgramData::freeLoadedData() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4675e98 (    0x1c) WordLanguageModel::initForBuild(WordNgramBuildSpec const*, WordNgramTemplate const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4675eb4 (   0x144) WordLanguageModel::startBuildingNgramLM(DgnPrimArray<double>*, double*, double*, DgnIOwnArray<Hash<BuildWordIdNgram, BuildWordIdNgram, BuildWordIdNgram, unsigned int>*>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4675ff8 (    0x80) WordLanguageModel::addBuildNgramLM(DgnArray<DgnPrimArray<unsigned int>> const&, DgnArray<DgnPrimArray<unsigned int>> const&, DgnPrimArray<unsigned int> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4676078 (   0x3a4) WordLanguageModel::addBuildOneTranscriptNgramLM(DgnPrimArray<unsigned int> const&, DgnPrimArray<unsigned int> const&, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467641c (   0x130) Hash<BuildWordIdNgram, BuildWordIdNgram, BuildWordIdNgram, unsigned int>::add(BuildWordIdNgram const&, unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467654c (   0x14c) WordLanguageModel::endBuildingNgramLM() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4676698 (   0x16c) WordLanguageModel::assignBuildLmIds() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4676804 (   0x3a8) WordLanguageModel::buildUnigramData(DgnPrimArray<double>*, double*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4676bac (   0x998) WordLanguageModel::buildNgramProbs(unsigned int, DgnPrimArray<double> const&, double, DgnIOwnArray<Hash<BuildLmIdNgram, BuildLmIdNgram, BuildLmIdNgram, double>*>*, DgnIOwnArray<Hash<BuildLmIdNgram, BuildLmIdNgram, BuildLmIdNgram, double>*>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4677544 (   0x448) WordLanguageModel::buildBigramDataFromProbsAndWeights(Hash<BuildLmIdNgram, BuildLmIdNgram, BuildLmIdNgram, double> const*, Hash<BuildLmIdNgram, BuildLmIdNgram, BuildLmIdNgram, double> const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467798c (   0x6e4) WordLanguageModel::buildTrigramDataFromProbsAndWeights(Hash<BuildLmIdNgram, BuildLmIdNgram, BuildLmIdNgram, double> const*, Hash<BuildLmIdNgram, BuildLmIdNgram, BuildLmIdNgram, double> const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4678070 (    0x74) WordLanguageModel::addWordDuringBuild(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46780e4 (    0x78) WordLanguageModel::computeLOOLogLikelihoodDerivative(DgnPrimArray<unsigned int> const&, int, double) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467815c (   0x1f0) WordLanguageModel::computeCountHistogram(unsigned int, Hash<BuildWordIdNgram, BuildWordIdNgram, BuildWordIdNgram, unsigned int> const*, DgnPrimArray<unsigned int>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467834c (    0x60) WordLanguageModel::setBuildLmIdNgramFromBuildWordIdNgram(BuildWordIdNgram const*, BuildLmIdNgram*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46783ac (   0x108) WordLanguageModel::computeLOODiscount(int, DgnPrimArray<unsigned int> const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46784b4 (   0x294) WordLanguageModel::computeMinCountNotToPrune(DgnPrimArray<unsigned int>, unsigned int, Hash<BuildWordIdNgram, BuildWordIdNgram, BuildWordIdNgram, unsigned int> const*, int, BuildLmIdNgram*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4678748 (   0x928) void mrec_qsort_r<BuildLmIdNgramCmp>(void*, unsigned long, unsigned long, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4679070 (    0xdc) WordLanguageModel::createBuildWordIdAndCountArray(DgnPrimArray<double> const&, unsigned int, unsigned int, DgnArray<WordIdAndCount>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467914c (    0x68) WordLanguageModel::maybeAddBuildBegAndEndLmId() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46791b4 (   0x474) WordLanguageModel::createBuildWordIdToLmIdArray(DgnArray<WordIdAndCount> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4679628 (   0x7b8) void mrec_qsort_r<WordIdAndCountCmp>(void*, unsigned long, unsigned long, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4679de0 (   0x130) Hash<BuildLmIdNgram, BuildLmIdNgram, BuildLmIdNgram, double>::add(BuildLmIdNgram const&, double const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4679f10 (   0x130) Hash<BuildLmIdNgram, BuildLmIdNgram, BuildLmIdNgram, unsigned int>::add(BuildLmIdNgram const&, unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467a040 (     0x4) Hash<BuildLmIdNgram, BuildLmIdNgram, BuildLmIdNgram, unsigned int>::~Hash() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467a044 (     0x4) Hash<BuildLmIdNgram, BuildLmIdNgram, BuildLmIdNgram, double>::~Hash() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467a048 (   0x194) WordLanguageModel::dumpWordLM(DgnPrimArray<unsigned short>, unsigned short, bool, DgnStream*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467a1dc (    0x24) NGramIterator::NGramIterator(WordLanguageModel const*, unsigned short, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467a200 (    0xd4) NGramIterator::next() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467a2d4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b467a2e4 (   0x134) NGramIterator::next1() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467a418 (    0xf0) NGramIterator::next2Backoff() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467a508 (   0x1c4) NGramIterator::next2() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467a6cc (   0x118) NGramIterator::next3Backoff() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467a7e4 (   0x2d4) NGramIterator::next3() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467aab8 (   0x1f4) NGramIterator::next4Backoff() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467acac (   0x268) NGramIterator::next4() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467af14 (    0x84) NGramIteratorData::set2(unsigned int, unsigned short, unsigned short, short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467af98 (    0x94) NGramIteratorData::set3(unsigned int, unsigned short, unsigned short, unsigned short, short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467b02c (    0xb0) NGramIteratorData::set4(unsigned int, unsigned short, unsigned short, unsigned short, unsigned short, short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467b0dc (     0x4) WordLanguageModel::getRecentBufferLanguageModel() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467b0e0 (   0x108) WordLMContextData::WordLMContextData(LanguageModel const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467b1e8 (     0x4) WordLMContextData::~WordLMContextData() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467b1ec (    0x28) WordLMContextData::~WordLMContextData() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467b214 (    0xdc) WordLMContextData::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467b2f0 (    0x60) WordLMContextData::~WordLMContextData() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467b350 (    0x54) HuffmanDecoder<unsigned short, unsigned int>::~HuffmanDecoder() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467b3a4 (    0x9c) HuffmanDecoder<unsigned short, unsigned int>::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467b440 (    0x78) HuffmanDecoder<unsigned short, unsigned int>::writeObject(DgnStream*, unsigned int&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467b4b8 (    0x80) HuffmanDecoder<unsigned short, unsigned int>::readObject(DgnStream*, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467b538 (   0x184) HuffmanDecoder<unsigned short, unsigned int>::configureIndexHelper() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467b6bc (    0x94) DgnArray<FwdBwdProb>::reallocElts(unsigned int, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467b750 (    0xf0) Hash<unsigned short, unsigned short, HuffmanSymbol<unsigned short, unsigned int>, HuffmanSymbol<unsigned short, unsigned int>*>::add(unsigned short const&, HuffmanSymbol<unsigned short, unsigned int>* const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467b840 (    0x60) Hash<unsigned short, unsigned short, HuffmanSymbol<unsigned short, unsigned int>, HuffmanSymbol<unsigned short, unsigned int>*>::findBucket(unsigned short const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467b8a0 (   0x110) Hash<unsigned short, unsigned short, HuffmanSymbol<unsigned short, unsigned int>, HuffmanSymbol<unsigned short, unsigned int>*>::upSize(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467b9b0 (    0x40) DgnIFixArray<BucketLink<unsigned short, HuffmanSymbol<unsigned short, unsigned int>*>*>::~DgnIFixArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467b9f0 (    0xc0) HuffmanDecoder<unsigned short, unsigned int>::initializeTable(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467bab0 (    0xd0) HuffmanDecoder<unsigned short, unsigned int>::addCode(unsigned int, unsigned char, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467bb80 (   0x26c) HuffmanEncoder<unsigned short, unsigned int>::countsToLengths(DgnPrimArray<unsigned int>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467bdec (    0x40) DgnIArray<RecentBuffer*>::~DgnIArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467be2c (     0x4) Hash<unsigned short, unsigned short, HuffmanSymbol<unsigned short, unsigned int>, HuffmanSymbol<unsigned short, unsigned int>*>::~Hash() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467be30 (    0xe0) Hash<unsigned short, unsigned short, HuffmanSymbol<unsigned short, unsigned int>, HuffmanSymbol<unsigned short, unsigned int>*>::Hash(char const*, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467bf10 (    0x28) Hash<unsigned short, unsigned short, HuffmanSymbol<unsigned short, unsigned int>, HuffmanSymbol<unsigned short, unsigned int>*>::~Hash() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467bf38 (    0x74) Hash<unsigned short, unsigned short, HuffmanSymbol<unsigned short, unsigned int>, HuffmanSymbol<unsigned short, unsigned int>*>::~Hash() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467bfac (    0x38) HuffmanEncoder<unsigned short, unsigned int>::~HuffmanEncoder() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467bfe4 (    0x44) DgnIOwnArray<HuffmanSymbol<unsigned short, unsigned int>*>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467c028 (    0x6c) DgnIOwnArray<HuffmanSymbol<unsigned short, unsigned int>*>::destructAt(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467c094 (    0x40) DgnArray<DiskNgramContext>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467c0d4 (    0x40) DgnIArray<DiskNgramContext*>::~DgnIArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467c114 (    0x84) DiskNgramContext::operator=(DiskNgramContext const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467c198 (    0x64) DgnIOwnArray<Hash<BuildWordIdNgram, BuildWordIdNgram, BuildWordIdNgram, unsigned int>*>::destructAt(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467c1fc (    0xdc) Hash<BuildWordIdNgram, BuildWordIdNgram, BuildWordIdNgram, unsigned int>::Hash(char const*, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467c2d8 (     0x4) Hash<BuildWordIdNgram, BuildWordIdNgram, BuildWordIdNgram, unsigned int>::~Hash() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467c2dc (    0x28) Hash<BuildWordIdNgram, BuildWordIdNgram, BuildWordIdNgram, unsigned int>::~Hash() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467c304 (    0x40) DgnIFixArray<BucketLink<BuildWordIdNgram, unsigned int>*>::~DgnIFixArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467c344 (    0x74) Hash<BuildWordIdNgram, BuildWordIdNgram, BuildWordIdNgram, unsigned int>::~Hash() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467c3b8 (    0x94) Hash<BuildLmIdNgram, BuildLmIdNgram, BuildLmIdNgram, unsigned int>::removeAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467c44c (    0x40) DgnArray<BuildWordIdNgram>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467c48c (    0xd4) Hash<BuildLmIdNgram, BuildLmIdNgram, BuildLmIdNgram, double>::findBucket(BuildLmIdNgram const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467c560 (   0x110) Hash<BuildWordIdNgram, BuildWordIdNgram, BuildWordIdNgram, unsigned int>::upSize(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467c670 (    0x40) DgnArray<BuildLmIdNgram>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467c6b0 (    0x40) DgnArray<WordIdAndCount>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467c6f0 (    0xe0) Hash<BuildLmIdNgram, BuildLmIdNgram, BuildLmIdNgram, double>::Hash(char const*, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467c7d0 (    0x28) Hash<BuildLmIdNgram, BuildLmIdNgram, BuildLmIdNgram, double>::~Hash() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467c7f8 (    0x40) DgnIFixArray<BucketLink<BuildLmIdNgram, double>*>::~DgnIFixArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467c838 (    0x74) Hash<BuildLmIdNgram, BuildLmIdNgram, BuildLmIdNgram, double>::~Hash() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467c8ac (    0x94) Hash<BuildLmIdNgram, BuildLmIdNgram, BuildLmIdNgram, double>::removeAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467c940 (    0xdc) Hash<BuildLmIdNgram, BuildLmIdNgram, BuildLmIdNgram, unsigned int>::Hash(char const*, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467ca1c (    0x28) Hash<BuildLmIdNgram, BuildLmIdNgram, BuildLmIdNgram, unsigned int>::~Hash() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467ca44 (    0x40) DgnIFixArray<BucketLink<BuildLmIdNgram, unsigned int>*>::~DgnIFixArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467ca84 (    0x74) Hash<BuildLmIdNgram, BuildLmIdNgram, BuildLmIdNgram, unsigned int>::~Hash() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467caf8 (   0x110) Hash<BuildLmIdNgram, BuildLmIdNgram, BuildLmIdNgram, double>::upSize(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467cc08 (   0x110) Hash<BuildLmIdNgram, BuildLmIdNgram, BuildLmIdNgram, unsigned int>::upSize(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467cd18 (    0xb4) MiniFst::init(ArcGraph const*, PelScoreCache*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467cdcc (    0x14) MiniFst::beginTopFstSyncRecog() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467cde0 (    0x4c) MiniFst::seed(int, int, int, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467ce2c (   0x568) MiniFst::updateFrame(int*, int, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467d394 (   0x84c) void mrec_qsort_r<MiniFst::Trace>(void*, unsigned long, unsigned long, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467dbe0 (    0x80) sizeObject(MiniFst const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467dc60 (    0x70) unsigned long sizeObject<MiniFst::Trace>(DgnArray<MiniFst::Trace> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467dcd0 (    0x70) unsigned long sizeObject<MiniFst::Token>(DgnArray<MiniFst::Token> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467dd40 (     0x4) MrecInitModule_aconet_net() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467dd44 (    0x8c) AcousticNet::AcousticNet(NetMgr*, CWIDAC const&, B_NetShape, B_PortStatus, int, int, B_NodeSkippingType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467ddd0 (    0x54) AcousticNet::~AcousticNet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467de24 (     0x4) AcousticNet::~AcousticNet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467de28 (     0x4) AcousticNet::~AcousticNet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467de2c (    0x74) AcousticNet::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467dea0 (    0x24) AcousticNet::updateSilSeedTime(bool, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467dec4 (    0x10) AcousticNet::hasSilSeedTime() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467ded4 (     0x8) AcousticNet::getSilSeedTime() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467dedc (   0x648) AcousticNet::unpackEnd(DgnArray<Pic> const&, B_ScoreOrder) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467e524 (   0x3b0) AcousticNet::unpackEndTrace(DgnArray<Pic> const&, B_ScoreOrder) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467e8d4 (    0x30) AcousticNet::estimateActivePelsThisFrame(BitArray*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467e904 (   0x70c) MrecInitModule_recog_kernel() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467f010 (    0x4c) GermRecogGermIterator::getCurrentGermInternal(RecogGerm*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467f05c (    0x70) GermRecogGermIterator::advanceUntilMatch() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467f0cc (   0x1fc) RecognizerOptions::RecognizerOptions(bool, int, int, int, bool, bool, unsigned int, unsigned int, unsigned int, int, int, int, int, int, int, int, int, int, B_NodeSkippingType, unsigned int, int, int, int, int, bool, double, int, unsigned int, int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, bool, bool, bool, bool, bool, bool, unsigned int, int, int, bool, bool, bool, bool, bool, bool, B_SearchLMLimitType, bool, int, int, unsigned int, int, bool, B_SearchPartialIncludePrefiltererResult, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467f2c8 (   0x220) RecognizerOptions::RecognizerOptions(bool, int, int, int, bool, bool, unsigned int, unsigned int, unsigned int, int, int, int, int, int, int, int, int, int, B_NodeSkippingType, unsigned int, int, int, int, int, bool, double, int, unsigned int, int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, bool, bool, bool, bool, bool, bool, unsigned int, int, int, bool, bool, bool, bool, bool, bool, B_SearchLMLimitType, bool, int, int, unsigned int, int, bool, B_SearchPartialIncludePrefiltererResult, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467f4e8 (     0x4) RecognizerOptions::~RecognizerOptions() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467f4ec (    0xf4) RecognizerOptions::RecognizerOptions(RecognizerOptions const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467f5e0 (     0x4) RecognizerOptions::RecognizerOptions(RecognizerOptions const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467f5e4 (    0x3c) RecognizerOptions::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467f620 (    0x10) SearchStats::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467f630 (    0x14) SearchStats::resetStats() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467f644 (    0x24) SearchStats::operator=(SearchStats const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467f668 (    0x44) SearchStats::operator-=(SearchStats const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467f6ac (   0x4c0) Recognizer::Recognizer(bool, B_RecogMode, unsigned short, PhnMgr const*, PicMgr const*, bool, RecognizerOptions const&, HashKEV<unsigned int, unsigned int, StateIdScope> const*, HashKEV<unsigned int, unsigned int, StateIdScope> const*, HashKEV<unsigned int, unsigned int, StateIdScope> const*, BitArray const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467fb6c (    0xe4) Recognizer::~Recognizer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467fc50 (    0x6c) void DgnDelete<Active>(Active*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467fcbc (    0x50) void DgnDelete<CWIDCrumbBank>(CWIDCrumbBank*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467fd0c (     0x4) Recognizer::~Recognizer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467fd10 (    0x28) Recognizer::~Recognizer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467fd38 (    0xac) Recognizer::makeRecognizer(bool, B_RecogMode, unsigned short, PhnMgr const*, PicMgr const*, bool, RecognizerOptions const&, HashKEV<unsigned int, unsigned int, StateIdScope> const*, HashKEV<unsigned int, unsigned int, StateIdScope> const*, HashKEV<unsigned int, unsigned int, StateIdScope> const*, BitArray const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b467fde4 (  0x2524) Recognizer::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4682308 (    0x28) Recognizer::beginTopRecSyncRecog(unsigned int, DgnIOwnArray<PelSegment*> const*, DgnArray<DgnPrimArray<unsigned int>> const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4682330 (    0x7c) Recognizer::endTopRecSyncRecog() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46823ac (   0x1c0) Recognizer::beginTopRecPassSyncRecog(unsigned int, int, PelScorer*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468256c (    0xbc) Recognizer::endTopRecPassSyncRecog() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4682628 (    0x30) Recognizer::checkForDone() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4682658 (   0x10c) Recognizer::collectLastFrameConfidencePredictors(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4682764 (    0xd4) Recognizer::collectByFrameConfidencePredictors() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4682838 (    0x58) DgnPrimArray<unsigned int>::add(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4682890 (    0x3c) Recognizer::adjustBestForBWBack(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46828cc (   0x2bc) Recognizer::debugFrameStart() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4682b88 (    0xc8) Recognizer::endNonAcousticFrame() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4682c50 (     0x8) Recognizer::setRecogEndTime(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4682c58 (   0x13c) Recognizer::checkForAbort() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4682d94 (    0x74) Recognizer::setSearchAbortRecognizerStats(B_SearchAbortType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4682e08 (    0x70) Recognizer::turnOffPrefilterer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4682e78 (    0x38) Recognizer::doFrame1() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4682eb0 (    0x4c) Recognizer::beginTopRecFrame(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4682efc (   0x244) Recognizer::doFrame2(DgnPrimArray<unsigned char> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4683140 (   0x26c) Recognizer::doFrame3(DgnArray<Germ> const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46833ac (    0xdc) Recognizer::seedActiveWords(int, int, bool, DgnArray<Germ> const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4683488 (    0x5c) Recognizer::endTopRecFrame(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46834e4 (   0x214) Recognizer::getBestHistoryMaybeExtend(bool, bool, int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46836f8 (    0x50) Recognizer::extendHistory(unsigned int, CWIDAC const&, bool, int, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4683748 (   0x6dc) Recognizer::makePartialResult(ReturnListQueue const*, DgnIOwnArray<HashNCHV<unsigned int, unsigned int, WordToScoreAndDurationHashHelper, ScoreAndDuration>*> const*, DgnArray<ScoreArray> const*, int, DgnArray<WordLatticeLC>*, DgnArray<HistContents>*, DgnPrimArray<unsigned int>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4683e24 (    0x64) DgnArray<WordLatticeLC>::add(WordLatticeLC const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4683e88 (   0x36c) Recognizer::getPartialResultWord(DgnArray<Germ> const*, int, CWIDAC const&, WordLatticeLC*, int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46841f4 (   0x1b0) Recognizer::returnIncompleteGerms(int, DgnIOwnArray<HashNCHV<unsigned int, unsigned int, WordToScoreAndDurationHashHelper, ScoreAndDuration>*> const*, DgnArray<ScoreArray> const*, DgnArray<Germ>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46843a4 (   0xa9c) Recognizer::makeRecognizerResults(bool, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4684e40 (    0x14) Recognizer::shadowBest(Recognizer*, int, int, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4684e54 (    0x44) Recognizer::setPelScores(PelScoreCacheData const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4684e98 (     0xc) Recognizer::beginTrackingConfidenceStatistics() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4684ea4 (     0x8) Recognizer::setInitialContext(DgnPrimArray<unsigned int> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4684eac (    0x4c) Recognizer::setContextPars(LMContextPars const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4684ef8 (   0x170) Recognizer::setRightGermsBackward() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4685068 (   0x384) Recognizer::doBackward() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46853ec (   0x1f4) Recognizer::seedOneBackward(ActiveWord*, unsigned short, RecogGerm const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46855e0 (   0x2b8) Recognizer::seedOneFromPort(SeedActiveWord*, unsigned short, int, int, int, int, int, int, unsigned int, RecogGerm const&, unsigned int, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4685898 (    0xc8) MergedActive::convertToMergedCWIDAC(CWIDAC*, HiddenState*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4685960 (     0x4) SeedUnmergedActiveWord::~SeedUnmergedActiveWord() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4685964 (   0x208) Recognizer::seedFromOnePredToOnePhoneForward(SeedActiveWord*, unsigned short, int, int, unsigned int, unsigned int, DgnArray<RecogGerm> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4685b6c (   0x230) Recognizer::seedFromOnePredToOnePhoneWithNonAcousticWordForward(SeedActiveWord*, unsigned short, int, int, unsigned int, unsigned int, DgnArray<RecogGerm> const&, unsigned int, DgnPrimArray<int> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4685d9c (  0x1d80) Recognizer::seedFromOnePredForward(SeedActiveWord*, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4687b1c (    0x84) Recognizer::dropCrumbs(CWIDAC const&, int, int, HistoryAndBigScore const&, DgnArray<HistoryAndBigScore> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4687ba0 (   0x214) Recognizer::doFinalSilForward(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4687db4 (   0x264) Recognizer::doForward(DgnArray<Germ> const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4688018 (    0x54) MergedActive::add(ActiveWord*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468806c (    0x80) MergedActive::processMergedWord(unsigned int, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46880ec (    0xb8) Recognizer::setConstraint(Constraint*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46881a4 (   0x3fc) Recognizer::addCrumbsToPrefilterResult(bool, PrefilterResult const*, unsigned int, PrefilterResult*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46885a0 (    0x18) Recognizer::setEmbeddedTransducers(DgnArray<WordTransducerSpec> const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46885b8 (     0x4) GermRecogGermIterator::~GermRecogGermIterator() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46885bc (    0x28) GermRecogGermIterator::~GermRecogGermIterator() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46885e4 (    0x50) MergedActive::MergedActive() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4688634 (    0x7c) SeedMergedActiveWord::SeedMergedActiveWord() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46886b0 (    0x58) SeedMergedActiveWord::~SeedMergedActiveWord() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4688708 (    0x68) SeedMergedActiveWord::~SeedMergedActiveWord() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4688770 (     0x8) SeedMergedActiveWord::getScoredWord() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4688778 (     0x8) SeedMergedActiveWord::getCWIDAC() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4688780 (    0xac) SeedMergedActiveWord::maybeGetActiveOutPort(unsigned short, int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468882c (    0x34) SeedMergedActiveWord::expandEmbFstHistory(DgnPrimArray<unsigned int>*, DgnPrimArray<int>*, unsigned int&, DgnPrimArray<unsigned int>*, DgnPrimArray<unsigned int>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4688860 (    0x68) MergedActive::~MergedActive() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46888c8 (    0x54) MemChunkRegion::getCurrentRegion() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468891c (    0x64) MergedActive::isCWIDAllowMerge(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4688980 (    0x60) MergedActive::isStateAllowMerge(StateMgr*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46889e0 (     0x4) SeedUnmergedActiveWord::~SeedUnmergedActiveWord() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46889e4 (     0x8) SeedUnmergedActiveWord::getScoredWord() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46889ec (    0x10) SeedUnmergedActiveWord::getCWIDAC() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46889fc (    0x50) SeedUnmergedActiveWord::maybeGetActiveOutPort(unsigned short, int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4688a4c (    0x34) SeedUnmergedActiveWord::expandEmbFstHistory(DgnPrimArray<unsigned int>*, DgnPrimArray<int>*, unsigned int&, DgnPrimArray<unsigned int>*, DgnPrimArray<unsigned int>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4688a80 (    0x40) DgnIArray<ActiveWord*>::~DgnIArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4688ac0 (    0x40) DgnArray<EmbeddedFstSeedData>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4688b00 (    0x6c) DgnIOwnArray<CWIDCrumbWACSFrame*>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4688b6c (    0x34) void DgnDelete<CWIDCrumbWACSFrame>(CWIDCrumbWACSFrame*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4688ba0 (    0x44) MrecInitLibrary_fst() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4688be4 (    0x28) MrecInitLibrarySet_throughFst() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4688c0c (     0x4) MrecInitModule_feature_frame() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4688c10 (    0x44) FeatureFrame::~FeatureFrame() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4688c54 (     0x4) FeatureFrame::~FeatureFrame() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4688c58 (     0x8) FeatureFrame::getFeature() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4688c60 (    0x68) FeatureFrame::getScaledFeature(unsigned int, int, int, BinaryIntScale const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4688cc8 (    0x34) FeatureFrame::setFeature(DgnPrimArray<double> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4688cfc (    0xd4) FeatureFrame::scaleFeatureToUns8(DgnPrimArray<int> const&, DgnPrimArray<int> const&, BinaryIntScale const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4688dd0 (    0x9c) MrecInitModule_lookahsc_prefilt() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4688e6c (   0x148) SimpleLookaheadScorer::SimpleLookaheadScorer(Lookahead const*, Imelda const*, B_LookaheadScoringType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4688fb4 (     0x4) SimpleLookaheadScorer::SimpleLookaheadScorer(Lookahead const*, Imelda const*, B_LookaheadScoringType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4688fb8 (    0x8c) SimpleLookaheadScorer::~SimpleLookaheadScorer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4689044 (     0x4) SimpleLookaheadScorer::~SimpleLookaheadScorer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4689048 (    0x28) SimpleLookaheadScorer::~SimpleLookaheadScorer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4689070 (    0x18) SimpleLookaheadScorer::reset() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4689088 (   0x6d8) SimpleLookaheadScorer::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4689760 (   0x1a4) SimpleLookaheadScorer::scoreForLookahead(int, DgnPrimArray<unsigned char> const*, SynchronizedArray<ScoreFixArray>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4689904 (    0x70) SimpleLookaheadScorer::doOverallScore(SynchronizedArray<ScoreFixArray>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4689974 (    0x58) FeatureArraySpinQueue::add(DgnPrimArray<unsigned char> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46899cc (    0xac) SimpleLookaheadScorer::doScore(DgnPrimArray<unsigned char> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4689a78 (    0x58) ScoreFixArraySpinQueue::add(ScoreFixArray const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4689ad0 (    0x18) SimpleLookaheadScorer::getNextFrameTime() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4689ae8 (   0x114) SimpleLookaheadScorer::scoreLookaheadUntil(int, SynchronizedArray<DgnPrimArray<unsigned char>> const*, SynchronizedArray<ScoreFixArray>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4689bfc (    0xa4) SimpleLookaheadScorer::computeSmoothFrame() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4689ca0 (    0xac) SimpleLookaheadScorer::computeMinimumScore() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4689d4c (    0xc4) SimpleLookaheadScorer::computeCombinedScore() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4689e10 (    0x88) SynchronizedArray<ScoreFixArray>::add(int, ScoreFixArray const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4689e98 (    0x58) LookaheadScorerThreadWorker::~LookaheadScorerThreadWorker() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4689ef0 (    0x5c) LookaheadScorerThreadWorker::~LookaheadScorerThreadWorker() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4689f4c (    0x6c) LookaheadScorerThreadWorker::onStartup() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4689fb8 (    0x44) LookaheadScorerThreadWorker::onShutdown() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4689ffc (    0x64) void DgnDelete<LookaheadScorer>(LookaheadScorer*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468a060 (    0x54) void DgnDelete<SynchronizedArray<ScoreFixArray>>(SynchronizedArray<ScoreFixArray>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468a0b4 (    0x24) LookaheadScorerThreadWorker::onPlay() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468a0d8 (   0x100) LookaheadScorerThreadWorker::playOne() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468a1d8 (    0xa4) LookaheadScorerThreadWorker::reset() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468a27c (   0x458) LookaheadScorerThreadWorker::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468a6d4 (    0x6c) LookaheadScorerThread::stopScoring(SynchronizedArray<ScoreFixArray>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468a740 (   0x4c8) LookaheadScorerThread::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468ac08 (    0xc4) ThreadedLookaheadScorer::ThreadedLookaheadScorer(B_DgnThreadExecutionType, Lookahead const*, Imelda const*, B_LookaheadScoringType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468accc (     0x4) ThreadedLookaheadScorer::ThreadedLookaheadScorer(B_DgnThreadExecutionType, Lookahead const*, Imelda const*, B_LookaheadScoringType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468acd0 (    0x6c) ThreadedLookaheadScorer::~ThreadedLookaheadScorer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468ad3c (     0x4) ThreadedLookaheadScorer::~ThreadedLookaheadScorer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468ad40 (    0x28) ThreadedLookaheadScorer::~ThreadedLookaheadScorer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468ad68 (   0x1cc) ThreadedLookaheadScorer::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468af34 (    0x2c) ThreadedLookaheadScorer::reset() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468af60 (     0xc) ThreadedLookaheadScorer::getNextFrameTime() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468af6c (    0x80) ThreadedLookaheadScorer::scoreLookaheadUntil(int, SynchronizedArray<DgnPrimArray<unsigned char>> const*, SynchronizedArray<ScoreFixArray>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468afec (    0x78) ThreadedLookaheadScorer::maybeStartScoring(SynchronizedArray<DgnPrimArray<unsigned char>> const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468b064 (    0x44) LookaheadScorerThread::isScoring() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468b0a8 (    0x78) ThreadedLookaheadScorer::maybeStopScoring(bool, SynchronizedArray<ScoreFixArray>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468b120 (     0xc) ThreadedLookaheadScorer::getThreadId() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468b12c (     0x8) SimpleLookaheadScorer::maybeStartScoring(SynchronizedArray<DgnPrimArray<unsigned char>> const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468b134 (     0x4) SimpleLookaheadScorer::maybeStopScoring(bool, SynchronizedArray<ScoreFixArray>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468b138 (     0x8) LookaheadScorer::getThreadId() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468b140 (     0x4) LookaheadScorerThread::~LookaheadScorerThread() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468b144 (    0x28) LookaheadScorerThread::~LookaheadScorerThread() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468b16c (    0xb4) DgnThread<LookaheadScorerThreadWorker>::newWorker() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468b220 (    0xc4) DgnArray<ScoreFixArray>::DgnArray(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468b2e4 (    0x30) ScoreFixArraySpinQueue::~ScoreFixArraySpinQueue() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468b314 (    0x30) FeatureArraySpinQueue::~FeatureArraySpinQueue() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468b344 (    0x60) DgnThread<LookaheadScorerThreadWorker>::DgnThread(B_DgnThreadExecutionType, MemChunkRegion*, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468b3a4 (     0x4) DgnThread<LookaheadScorerThreadWorker>::~DgnThread() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468b3a8 (    0x28) DgnThread<LookaheadScorerThreadWorker>::~DgnThread() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468b3d0 (     0x4) MrecInitModule_listdf_dfutil() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468b3d4 (    0x94) ListDFileSubFileStream::ListDFileSubFileStream(B_DgnStreamOpenMode, B_DgnStreamFileType, FileSpec const&, ListDFile*, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468b468 (    0x84) ListDFileSubFileStream::~ListDFileSubFileStream() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468b4ec (     0x4) ListDFileSubFileStream::~ListDFileSubFileStream() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468b4f0 (    0x28) ListDFileSubFileStream::~ListDFileSubFileStream() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468b518 (   0x2d8) ListDFileSubFileStream::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468b7f0 (    0x44) ListDFile::ListDFile(FileSpec const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468b834 (    0x64) ListDFile::createReadOnlyClone() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468b898 (    0x84) ListDFile::~ListDFile() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468b91c (     0x4) ListDFile::~ListDFile() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468b920 (    0x28) ListDFile::~ListDFile() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468b948 (   0x578) ListDFile::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468bec0 (   0x72c) ListDFile::startUp() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468c5ec (   0x1fc) ListDFile::populateBackoffSubFileActiveArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468c7e8 (   0x130) ListDFile::subFileExistsByExplicitExtension(char const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468c918 (   0x2b8) ListDFile::openSubFileByExplicitExtension(char const*, B_SubFileOpenMode, B_DgnStreamFileType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468cbd0 (    0x50) ListDFile::removeSubFileByExplicitExtension(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468cc20 (   0x290) ListDFile::getSubFileSizeByExplicitExtension(char const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468ceb0 (    0x50) ListDFile::deleteFileAndCleanUp() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468cf00 (     0x4) ListDFile::maybeDisplayContents() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468cf04 (   0x13c) ListDFile::verifyHaveOpenedAllSubFiles(char const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468d040 (   0x118) ListDFile::fillSubFileSizeInfo() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468d158 (    0x34) ListDFile::attachProgressInfo(DFileProgressInfo*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468d18c (     0x4) MrecInitModule_extchan_channel() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468d190 (    0x88) TEnvManager::TEnvManager(SDEnvSpec const&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468d218 (   0x100) TEnvManager::TEnvManager(char const*, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468d318 (     0x4) TEnvManager::TEnvManager(char const*, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468d31c (   0x248) TEnvManager::open() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468d564 (    0x50) TIOException::~TIOException() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468d5b4 (   0x240) TEnvManager::close() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468d7f4 (    0x9c) TEnvManager::getVar(char const*, char*, unsigned long) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468d890 (    0xd4) TEnvManager::setVar(char const*, char const*, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468d964 (     0x4) TEnvManager::~TEnvManager() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468d968 (    0x28) TEnvManager::~TEnvManager() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468d990 (     0x8) TEnvManager::isOpen() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468d998 (    0x60) TIOException::~TIOException() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468d9f8 (   0x6f4) MrecInitModule_fwdbwd_fst() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468e0ec (   0x174) FwdBwd::FwdBwd(PicMgr const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468e260 (     0x4) FwdBwd::FwdBwd(PicMgr const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468e264 (    0xb0) FwdBwd::~FwdBwd() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468e314 (    0x34) void DgnDelete<FwdBwdGPUData>(FwdBwdGPUData*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468e348 (     0x4) FwdBwd::~FwdBwd() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468e34c (    0x28) FwdBwd::~FwdBwd() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468e374 (    0x78) FwdBwd::reset() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468e3ec (    0x10) FwdBwd::getNumOutPortsItf() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468e3fc (    0x7c) FwdBwd::getNumOutPortsCPU() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468e478 (    0x78) FwdBwd::getNumOutPortsGPU() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468e4f0 (    0x90) FwdBwd::getNumOutPortsFromFwdBwdProbsGPU(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468e580 (    0x74) FwdBwd::cumulativeSumsItf(int*, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468e5f4 (    0x10) FwdBwd::initCandidateStatesItf(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468e604 (    0xec) FwdBwd::initCandidateStatesCPU() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468e6f0 (   0x104) FwdBwd::initCandidateStatesGPU(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468e7f4 (   0x1a0) FwdBwd::makeBackwardDecision(int, double) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468e994 (    0x84) FwdBwd::getStateBlockSizesCPU(int, int, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468ea18 (    0x80) FwdBwd::initCandidateBlocksCPU(int, int, int, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468ea98 (   0x168) FwdBwd::doStepFwdBwdCPU(int, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468ec00 (    0x80) FwdBwd::copyWithCutoffCPU(FBToken const*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468ec80 (   0x160) FwdBwd::appendNonEmittingCandidates(FBToken, DgnArray<FBToken>&, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468ede0 (   0x1fc) FwdBwd::propagateNulls(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468efdc (   0x164) FwdBwd::sortAndMergeNonEmittingCandidates(DgnArray<FBToken>&, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468f140 (   0x614) void mrec_qsort_r<FBTokenCompareByScoreDecr>(void*, unsigned long, unsigned long, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468f754 (   0x608) void mrec_qsort_r<FBBackwardLinkCompareByOrigin>(void*, unsigned long, unsigned long, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468fd5c (   0x104) FwdBwd::copyNonCondensedBackwardLinks(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468fe60 (    0xa8) FwdBwd::maybeReallocFwdBwdColumn(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b468ff08 (   0x1f4) FwdBwd::doFrame(int, int, SearchStats*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46900fc (   0x244) FwdBwd::copyActiveToFwdProbs(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4690340 (     0x4) FwdBwd::beginTopRecPassSyncRecog(PelScorer*, ArcGraph const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4690344 (    0x38) FwdBwd::endTopRecPassSyncRecog() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b469037c (    0xf8) FwdBwd::doBackwardPass() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4690474 (   0x18c) FwdBwd::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4690600 (   0x164) FwdBwd::findBestPath(DgnPrimFixArray<unsigned char>&, DgnPrimFixArray<bool>&, int&, DgnPrimArray<int>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4690764 (    0xa4) FwdBwd::beginTopRecSyncRecog(VirtMap*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4690808 (    0xbc) FwdBwd::endTopRecSyncRecog() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46908c4 (    0x44) DgnArray<FwdBwdColumn>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4690908 (   0x170) FwdBwd::buildWordLattice(WordLattice*, DgnPrimFixArray<unsigned char>&, DgnPrimFixArray<bool>&, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4690a78 (   0x1f4) FwdBwd::updateBackwardProbNullArcs(FwdBwdColumn*, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4690c6c (    0x6c) FwdBwd::doBackwardStep(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4690cd8 (    0x90) FwdBwd::doBackwardStepFromEmittingCPU(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4690d68 (   0x18c) FwdBwd::updateBackwardProbFromEmittingCPU(FwdBwdProb&, FwdBwdColumn const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4690ef4 (    0x98) FwdBwd::updateBackwardLinksGPU(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4690f8c (    0x9c) FwdBwd::doBackwardStepFromEmittingGPU(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4691028 (    0x10) FwdBwd::doBackwardStepFromEmittingItf(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4691038 (     0x4) Hash<int, int, IntToUintScope, unsigned int>::~Hash() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b469103c (    0x5c) FwdBwdGPUData::~FwdBwdGPUData() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4691098 (    0x18) FwdBwd::loadArcGraphOnGPU() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46910b0 (   0x588) FwdBwdGPUData::loadArcGraph(ArcGraph const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4691638 (     0x4) FwdBwd::unloadArcGraphOnGPU() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b469163c (    0xec) Hash<int, int, IntToUintScope, unsigned int>::add(int const&, unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4691728 (     0x4) FwdBwd::seedTheory(int, int, unsigned int, SearchStats*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b469172c (     0x8) FwdBwd::getBestExitScore() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4691734 (     0x8) FwdBwd::getBestScoreMaybeUpdateFstNode(Node*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b469173c (     0x8) FwdBwd::getBestScoreThisFrame() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4691744 (     0x8) FwdBwd::getNActiveStates() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b469174c (     0x8) FwdBwd::makePartialResult(DgnArray<WordLatticeLC>*, DgnArray<HistContents>*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4691754 (     0x4) FwdBwd::expandEmbFstHistory(DgnPrimArray<unsigned int>*, DgnPrimArray<int>*, unsigned int&, DgnPrimArray<unsigned int>*, DgnPrimArray<unsigned int>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4691758 (     0x4) FwdBwd::maybeGeneratePelMaps(PicMgr const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b469175c (     0x4) FwdBwd::maybeInitDurModel(PicMgr const*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4691760 (     0x8) FwdBwd::getRequiredVirtMapSize() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4691768 (     0x4) FwdBwd::checkSearchParametersValidityForArcGraph(bool, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b469176c (    0x40) DgnArray<FwdBwdProb>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46917ac (    0x40) DgnArray<FBTrace>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46917ec (    0x40) DgnArray<FBToken>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b469182c (    0x6c) DgnArray<FwdBwdColumn>::destructAt(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4691898 (    0x40) DgnArray<FBBackwardLink>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46918d8 (    0xe0) Hash<int, int, IntToUintScope, unsigned int>::Hash(char const*, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46919b8 (    0x28) Hash<int, int, IntToUintScope, unsigned int>::~Hash() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46919e0 (    0x74) Hash<int, int, IntToUintScope, unsigned int>::~Hash() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4691a54 (   0x110) Hash<int, int, IntToUintScope, unsigned int>::upSize(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4691b64 (     0x4) MrecInitModule_melfbank_sigproc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4691b68 (     0x4) MrecInitModule_apcache_recogctl() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4691b6c (   0xff0) StartupAdapterParamSpecMgr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4692b5c (    0xb0) AdapterParamSet::AdapterParamSet(char const*, B_ParamSetType, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4692c0c (     0x4) AdapterParamSet::AdapterParamSet(char const*, B_ParamSetType, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4692c10 (   0x1ec) AdapterParamSet::AdapterParamSet(AdapterParamSet const&, char const*, B_ParamSetType, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4692dfc (     0x4) AdapterParamSet::AdapterParamSet(AdapterParamSet const&, char const*, B_ParamSetType, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4692e00 (   0x6b0) AdapterParamSet::setDefaults() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46934b0 (    0x84) AdapterParamSet::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4693534 (   0x814) AdapterParamSet::getBoolParameter(unsigned short, B_ParamQueryMode) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4693d48 (   0x118) (null) [FUNC, FunctionStarts] 
                0x00000001b4693e60 (  0x149c) AdapterParamSet::getIntParameter(unsigned short, B_ParamQueryMode) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46952fc (   0x118) (null) [FUNC, FunctionStarts] 
                0x00000001b4695414 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4695424 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4695434 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4695444 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4695454 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4695464 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4695474 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4695484 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4695494 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b46954a4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b46954b4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b46954c4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b46954d4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b46954e4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b46954f4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4695504 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4695514 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4695524 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4695534 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4695544 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4695554 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4695564 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4695574 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4695584 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4695594 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b46955a4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b46955b4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b46955c4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b46955d4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b46955e4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b46955f4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4695604 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4695614 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4695624 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4695634 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4695644 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4695654 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4695664 (   0xec4) AdapterParamSet::getDoubleParameter(unsigned short, B_ParamQueryMode) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4696528 (   0x118) (null) [FUNC, FunctionStarts] 
                0x00000001b4696640 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4696650 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4696660 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4696670 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4696680 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4696690 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b46966a0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b46966b0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b46966c0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b46966d0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b46966e0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b46966f0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4696700 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4696710 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4696720 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4696730 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4696740 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4696750 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4696760 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4696770 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4696780 (   0x6ec) AdapterParamSet::getStringParameter(unsigned short, B_ParamQueryMode) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4696e6c (   0x118) (null) [FUNC, FunctionStarts] 
                0x00000001b4696f84 (   0x810) AdapterParamSet::getEnumParameter(unsigned short, B_ParamQueryMode) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4697794 (   0x118) (null) [FUNC, FunctionStarts] 
                0x00000001b46978ac (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b46978bc (   0x768) AdapterParamSet::setBoolParameter(unsigned short, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4698024 (   0x118) (null) [FUNC, FunctionStarts] 
                0x00000001b469813c (  0x16d4) AdapterParamSet::setIntParameter(unsigned short, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4699810 (   0x118) (null) [FUNC, FunctionStarts] 
                0x00000001b4699928 (   0xfa8) AdapterParamSet::setDoubleParameter(unsigned short, double) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b469a8d0 (   0x118) (null) [FUNC, FunctionStarts] 
                0x00000001b469a9e8 (   0x6f8) AdapterParamSet::setStringParameter(unsigned short, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b469b0e0 (   0x118) (null) [FUNC, FunctionStarts] 
                0x00000001b469b1f8 (   0x76c) AdapterParamSet::setEnumParameter(unsigned short, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b469b964 (   0x118) (null) [FUNC, FunctionStarts] 
                0x00000001b469ba7c (    0x44) AdapterParamSet::~AdapterParamSet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b469bac0 (    0x54) AdapterParamSet::~AdapterParamSet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b469bb14 (     0x4) MrecInitModule_arrutil_mrecutil() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b469bb18 (    0x1c) minAddAllocWithExtra(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b469bb34 (   0x6d4) buildRegExp(TFileObject const*, TLexicon*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b469c208 (    0xd4) TFsaBuilder::minimizeChildren(TFsa*, TState*, std::__1::set<TState*, TFsaBuilder::TStateCompare, std::__1::allocator<TState*>>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b469c2dc (    0x8c) TFsaBuilder::addSuffix(TFsa*, TState*, wchar_t const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b469c368 (   0x160) TFsaBuilder::operator()(std::__1::vector<wchar_t const*, std::__1::allocator<wchar_t const*>> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b469c4c8 (   0xe8c) TDecompounder::load(TInputStream&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b469d354 (    0x38) TDecompounder::TDecompounder(TInputStream&, TLexicon*, TTokenizerParamManager*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b469d38c (    0x74) TDecompounder::~TDecompounder() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b469d400 (     0x4) TDecompounder::~TDecompounder() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b469d404 (   0x744) TDecompounder::isValidWord(TWord const*, TWord const*, bool, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b469db48 (  0x13b8) TDecompounder::decompound(TWord const*, TFsa&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b469ef00 (   0x3f8) fsaSearch(TLexicon*, TState const*, wchar_t const*, wchar_t const*, wchar_t const*, wchar_t*, bool, unsigned long, unsigned long, std::__1::vector<TLexiconMatch, std::__1::allocator<TLexiconMatch>>&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b469f2f8 (   0x5ec) TDecompounder::addWords(TVertex*, TGraph*, TSegmenter*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b469f8e4 (   0x450) void std::__1::__introsort<std::__1::_ClassicAlgPolicy, TWideCharCompare&, wchar_t const**>(wchar_t const**, wchar_t const**, TWideCharCompare&, std::__1::iterator_traits<wchar_t const**>::difference_type) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b469fd34 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001b469fd4c (    0xc4) void std::__1::__insertion_sort_3[abi:v160006]<std::__1::_ClassicAlgPolicy, TWideCharCompare&, wchar_t const**>(wchar_t const**, wchar_t const**, TWideCharCompare&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b469fe10 (    0xd8) unsigned int std::__1::__sort3[abi:v160006]<std::__1::_ClassicAlgPolicy, TWideCharCompare&, wchar_t const**>(wchar_t const**, wchar_t const**, wchar_t const**, TWideCharCompare&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b469fee8 (   0x1a0) bool std::__1::__insertion_sort_incomplete<TWideCharCompare&, wchar_t const**>(wchar_t const**, wchar_t const**, TWideCharCompare&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46a0088 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001b46a00a0 (    0xc0) unsigned int std::__1::__sort4[abi:v160006]<std::__1::_ClassicAlgPolicy, TWideCharCompare&, wchar_t const**>(wchar_t const**, wchar_t const**, wchar_t const**, wchar_t const**, TWideCharCompare&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46a0160 (   0x154) wchar_t const** std::__1::__partial_sort_impl[abi:v160006]<std::__1::_ClassicAlgPolicy, TWideCharCompare&, wchar_t const**, wchar_t const**>(wchar_t const**, wchar_t const**, wchar_t const**, TWideCharCompare&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46a02b4 (   0x110) void std::__1::__sift_down[abi:v160006]<std::__1::_ClassicAlgPolicy, TWideCharCompare&, wchar_t const**>(wchar_t const**, TWideCharCompare&, std::__1::iterator_traits<wchar_t const**>::difference_type, wchar_t const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46a03c4 (    0xa0) wchar_t const** std::__1::__floyd_sift_down[abi:v160006]<std::__1::_ClassicAlgPolicy, TWideCharCompare&, wchar_t const**>(wchar_t const**, TWideCharCompare&, std::__1::iterator_traits<wchar_t const**>::difference_type) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46a0464 (    0x8c) void std::__1::__sift_up[abi:v160006]<std::__1::_ClassicAlgPolicy, TWideCharCompare&, wchar_t const**>(wchar_t const**, wchar_t const**, TWideCharCompare&, std::__1::iterator_traits<wchar_t const**>::difference_type) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46a04f0 (    0xec) unsigned int std::__1::__sort5<TWideCharCompare&, wchar_t const**>(wchar_t const**, wchar_t const**, wchar_t const**, wchar_t const**, wchar_t const**, TWideCharCompare&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46a05dc (    0x90) std::__1::__tree_iterator<TState*, std::__1::__tree_node<TState*, void*>*, long> std::__1::__tree<TState*, TFsaBuilder::TStateCompare, std::__1::allocator<TState*>>::find<TState*>(TState* const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46a066c (    0x7c) TFsaBuilder::TStateCompare::operator()(TState const*, TState const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46a06e8 (    0x84) bool std::__1::__lexicographical_compare[abi:v160006]<TFsaBuilder::TTransCompare&, TTransConstIteratorDef, TTransConstIteratorDef>(TTransConstIteratorDef, TTransConstIteratorDef, TTransConstIteratorDef, TTransConstIteratorDef, TFsaBuilder::TTransCompare&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46a076c (    0x84) std::__1::pair<std::__1::__tree_iterator<TState*, std::__1::__tree_node<TState*, void*>*, long>, bool> std::__1::__tree<TState*, TFsaBuilder::TStateCompare, std::__1::allocator<TState*>>::__emplace_unique_key_args<TState*, TState* const&>(TState* const&, TState* const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46a07f0 (    0x9c) std::__1::__tree_node_base<void*>*& std::__1::__tree<TState*, TFsaBuilder::TStateCompare, std::__1::allocator<TState*>>::__find_equal<TState*>(std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*&, TState* const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46a088c (    0x84) std::__1::vector<TState*, std::__1::allocator<TState*>>::vector(unsigned long, TState* const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46a0910 (    0x18) std::__1::vector<SDWordSpec, std::__1::allocator<SDWordSpec>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46a0928 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<SDWordSpec>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<SDWordSpec>>(std::__1::allocator<SDWordSpec>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46a0960 (    0x84) std::__1::vector<TVertex*, std::__1::allocator<TVertex*>>::vector(unsigned long, TVertex* const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46a09e4 (    0x44) std::__1::vector<TVertex*, std::__1::allocator<TVertex*>>::__vallocate[abi:v160006](unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46a0a28 (    0xcc) arabicToRoman(unsigned long, TBuffer<wchar_t>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46a0af4 (   0x138) romanToArabic(wchar_t const*, unsigned long&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46a0c2c (    0xbc) getNextToken(char const*, TBuffer<char>&, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46a0ce8 (    0xc4) getNextToken(wchar_t const*, TBuffer<wchar_t>&, wchar_t const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46a0dac (   0x118) slashEscape(wchar_t const*, TBuffer<wchar_t>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46a0ec4 (   0x118) slashEscape(char const*, TBuffer<char>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46a0fdc (   0x13c) tildeEscape(wchar_t const*, TBuffer<wchar_t>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46a1118 (    0xfc) formatString(wchar_t const*, std::__1::vector<wchar_t const*, std::__1::allocator<wchar_t const*>>&, TBuffer<wchar_t>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46a1214 (   0x1f8) MrecInitModule_recogctl_recogctl() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46a140c (   0x448) RecogSpecLayer::RecogSpecLayer(SearchParamSet*, bool, bool, bool, int, int, int, bool, unsigned int, unsigned int, unsigned int, int, int, double, int, unsigned int, int, unsigned int, bool, bool, bool, B_SearchPartialIncludePrefiltererResult, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46a1854 (    0x64) RecogSpecLayer::RecogSpecLayer(RecogSpecLayer const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46a18b8 (    0x54) RecogSpecLayer::~RecogSpecLayer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46a190c (    0x18) RecogSpec::RecogSpec(bool, bool, unsigned short, unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46a1924 (    0xcc) RecogSpec::operator=(RecogSpec const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46a19f0 (    0x34) void DgnDelete<RecogSpecLayer>(RecogSpecLayer*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46a1a24 (    0x44) RecogSpec::RecogSpec(RecogSpec const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46a1a68 (    0x30) RecogSpec::~RecogSpec() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46a1a98 (   0x120) unsigned long sizeObject<RecogSpecLayer*>(DgnIOwnArray<RecogSpecLayer*> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46a1bb8 (   0x128) RecogSpec::addLayer(SearchParamSet*, bool, bool, int, int, int, bool, unsigned int, unsigned int, unsigned int, int, int, double, int, unsigned int, int, unsigned int, bool, bool, bool, B_SearchPartialIncludePrefiltererResult, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46a1ce0 (    0x14) RecogContext::RecogContext() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46a1cf4 (    0x58) RecogContext::~RecogContext() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46a1d4c (    0x50) void DgnDelete<DgnArray<DgnPrimArray<unsigned int>>>(DgnArray<DgnPrimArray<unsigned int>>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46a1d9c (     0x4) RecogContext::~RecogContext() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46a1da0 (    0x10) RecogContext::setLeftContext(DgnPrimArray<unsigned int> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46a1db0 (    0xb4) RecogLayerPhaseStats::RecogLayerPhaseStats() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46a1e64 (   0x53c) RecogLayerPhaseStats::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46a23a0 (   0x278) PRStats::recordPartialResult(DgnPrimArray<unsigned int> const&, unsigned long long, SnapTime const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46a2618 (    0xb8) RecogLayerStats::RecogLayerStats() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46a26d0 (   0x680) RecogLayerStats::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46a2d50 (    0x84) RecogPhaseStats::RecogPhaseStats() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46a2dd4 (   0x3f4) RecogPhaseStats::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46a31c8 (    0x78) RecogStats::RecogStats() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46a3240 (  0x18c0) RecogStats::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46a4b00 (   0x5c4) RecogStats::initRecognitionPhaseTimes(SnapTime const&, SnapTime const&, DgnArray<SnapTime> const&, DgnArray<SnapTime> const&, DgnArray<SnapTime> const&, DgnArray<SnapTime> const&, DgnArray<SnapTime> const&, DgnArray<SnapTime> const&, SnapTime const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46a50c4 (   0x138) PrefiltererThreadInsurance::~PrefiltererThreadInsurance() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46a51fc (    0xec) ChannelThreadInsurance::~ChannelThreadInsurance() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46a52e8 (   0x100) LookaheadThreadInsurance::~LookaheadThreadInsurance() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46a53e8 (   0x100) FrameTransformThreadInsurance::~FrameTransformThreadInsurance() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46a54e8 (   0x260) ProcessPrefilterer::ProcessPrefilterer(Prefilterer*, SynchronizedArray<DgnPrimArray<unsigned char>> const*, SynchronizedArray<ScoreFixArray> const*, int, bool, bool, ReturnListQueue*, int*, SnapTime*, SnapTime*, SnapTime*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46a5748 (    0xc0) ProcessPrefilterer::~ProcessPrefilterer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46a5808 (   0x1a4) ProcessLookahead::ProcessLookahead(LookaheadScorer*, SynchronizedArray<DgnPrimArray<unsigned char>> const*, int, bool, bool, bool, SynchronizedArray<ScoreFixArray>*, int*, SnapTime*, SnapTime*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46a59ac (    0x98) ProcessLookahead::~ProcessLookahead() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46a5a44 (   0x1f0) ProcessFrameTransform::ProcessFrameTransform(char const*, FrameTransformer*, SynchronizedArray<DgnPrimArray<unsigned char>> const*, int, bool, bool, bool, SynchronizedArray<DgnPrimArray<unsigned char>>*, int*, SnapTime*, SnapTime*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46a5c34 (    0x98) ProcessFrameTransform::~ProcessFrameTransform() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46a5ccc (   0x21c) ProcessChannel::ProcessChannel(int, bool, bool, bool, Utterance*, UttFeatureArraySynchronizedArray*, int*, SnapTime*, SnapTime*, SnapTime*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46a5ee8 (    0x4c) ProcessChannel::~ProcessChannel() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46a5f34 (   0x5e4) RecogController::RecogController(RecogSpec const&, bool, PrefiltererSearchParamSet*, SearchCrossLayerParamSet*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46a6518 (     0x4) Hash<EmbStateSpec, EmbStateSpec, EmbStateSpecToActiveWordScope, ActiveWord*>::~Hash() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46a651c (     0x4) RecogController::RecogController(RecogSpec const&, bool, PrefiltererSearchParamSet*, SearchCrossLayerParamSet*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46a6520 (   0x1c0) RecogController::~RecogController() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46a66e0 (    0x34) void DgnDelete<ReproMgr>(ReproMgr*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46a6714 (    0x50) void DgnDelete<RecogStats>(RecogStats*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46a6764 (    0x34) void DgnDelete<ReturnListQueue>(ReturnListQueue*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46a6798 (     0x4) RecogController::~RecogController() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46a679c (    0x28) RecogController::~RecogController() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46a67c4 (  0x3110) RecogController::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46a98d4 (    0xf0) unsigned long sizeObject<DgnArray<RecogResultToken>>(DgnArray<DgnArray<RecogResultToken>> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46a99c4 (    0xec) unsigned long sizeObject<HistContents>(DgnArray<HistContents> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46a9ab0 (    0xd4) unsigned long sizeObject<SnapTime>(DgnArray<SnapTime> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46a9b84 (   0x354) RecogController::setupRecognizers(DgnArray<ScoreArray> const&, DgnArray<ScoreArray> const&, bool, HashKEV<unsigned int, unsigned int, StateIdScope> const*, HashKEV<unsigned int, unsigned int, StateIdScope> const*, HashKEV<unsigned int, unsigned int, StateIdScope> const*, BitArray const*, DgnPrimArray<unsigned short> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46a9ed8 (   0x2ec) RecogController::recognizeOneSingleLayer(unsigned short, Utterance*, PrefilterResult const*, SearchParamSet*, RecogContext const&, bool, DgnArray<DgnPrimArray<unsigned int>> const*, DgnIArray<DgnPrimArray<unsigned int>*> const&, DgnIArray<DgnArray<DgnArray<ParseToken>>*> const&, bool, bool, PhnMgr const*, DgnArray<DgnPrimArray<unsigned int>> const*, bool, bool, Prefilterer*, PrefilterResult*, LookaheadScorer*, SnapTime const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46aa1c4 (    0x20) RecogController::haveCompletePrefilterResult() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46aa1e4 (    0x4c) RecogController::extractPrefilterResult() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46aa230 (  0x1d54) RecogController::startRecognizeOne(unsigned short, Utterance*, PrefilterResult const*, DgnIArray<SearchParamSet*>&, RecogContext const&, bool, DgnArray<DgnPrimArray<unsigned int>> const*, DgnIArray<DgnPrimArray<unsigned int>*> const&, DgnIArray<DgnArray<DgnArray<ParseToken>>*> const&, DgnIArray<DgnArray<WordTransducerSpec>*> const&, DgnIArray<WordLattice const*> const&, bool, bool, PhnMgr const*, DgnArray<DgnPrimArray<unsigned int>> const*, bool, DgnPrimArray<bool> const&, Prefilterer*, PrefilterResult*, LookaheadScorer*, SnapTime const&, ReproMgr*, Segmentation const*, DgnArray<DgnPrimArray<unsigned int>> const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46abf84 (    0x88) Recognizer::resetRecognizerStats() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ac00c (    0x74) FstCore::resetRecognizerStats() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ac080 (   0x1d8) RecogController::setCallerThreadIdForChildren(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ac258 (    0x20) RecogController::recognizeOneDone() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ac278 (   0x144) RecogController::restartPostSynchronousRecognition() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ac3bc (    0x64) Recognizer::setSynchronousRecognizerStats() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ac420 (   0xa40) RecogController::recognizeOneDoMainSearch(SnapTime*, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ace60 (   0x1e4) RecogController::maybeEstimateAndPreScoreActivePelsThisFrame(BitArray*, DgnPrimArray<unsigned char> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ad044 (   0x104) Hash<EmbStateSpec, EmbStateSpec, EmbStateSpecToActiveWordScope, ActiveWord*>::add(EmbStateSpec const&, ActiveWord* const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ad148 (    0xa0) RecogController::maybeCleanupAfterEstimateAndPreScoreActivePels(BitArray const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ad1e8 (   0x2ac) RecogController::accumulate(unsigned short, DgnPrimArray<unsigned char>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ad494 (   0x748) RecogController::recognizeOneDoFrames(bool, unsigned int, DgnBreakPoint*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46adbdc (   0x68c) RecogController::doAtEndOfRecognition() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ae268 (   0x768) RecogController::finishRecognizeOne(DgnIArray<WordLattice*>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ae9d0 (   0x13c) FstCore::getRecognizerStats(PelStats*, LMStats*, SearchStats*, PelStats*, LMStats*, SearchStats*, unsigned int*, B_SearchAbortType*, unsigned int*, unsigned int*, long long*, double*, B_LatticeLMRescoringAbortType*, unsigned int*, double*, LatticeStats*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46aeb0c (    0x60) FstCore::getFstStats(FstStats*, FstStats*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46aeb6c (   0x19c) Recognizer::getRecognizerStats(PelStats*, LMStats*, SearchStats*, PelStats*, LMStats*, SearchStats*, unsigned int*, B_SearchAbortType*, unsigned int*, unsigned int*, long long*, double*, B_LatticeLMRescoringAbortType*, unsigned int*, double*, LatticeStats*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46aed08 (    0x68) NetMgr::getNetMgrStats(NetStats*, NetStats*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46aed70 (     0x8) RecogController::getReproMgr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46aed78 (   0x290) RecogController::abortRecognizeOne() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46af008 (   0x570) RecogController::makePartialResult() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46af578 (    0xb4) RecogControllerBase::makeRecogController(B_DgnThreadExecutionType, RecogSpec const&, bool, PrefiltererSearchParamSet*, SearchCrossLayerParamSet*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46af62c (     0x8) RecogControllerBase::maybeStartRecogController(DgnEvent*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46af634 (     0x4) RecogControllerBase::maybeStopRecogController() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46af638 (     0x8) RecogController::getNumRecogLayers() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46af640 (     0x8) RecogController::calledStartRecognizeOne() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46af648 (     0x8) RecogController::calledFinishRecognizeOne() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46af650 (     0x8) RecogController::calledExtractPrefilterResult() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46af658 (     0xc) RecogController::getPartialResult(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46af664 (     0xc) RecogController::getPartialTokenConfidences(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46af670 (     0xc) RecogController::getPartialResultScore(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46af67c (    0x2c) RecogController::getPartialResultMicrosecPerRecogFrame(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46af6a8 (     0x8) RecogController::getContinuationInterval() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46af6b0 (    0x10) RecogController::isUsingPrefilterer(Prefilterer const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46af6c0 (    0x1c) RecogController::getUser() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46af6dc (     0xc) RecogController::getOnlineCTPelScorer() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46af6e8 (     0x8) RecogController::setPrefPelScoreCacheData(PelScoreCacheData*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46af6f0 (     0x8) RecogController::setRecogPelScoreCacheData(PelScoreCacheData*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46af6f8 (     0x8) RecogController::getPrefPelScores() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46af700 (     0x8) RecogController::getRecogPelScores() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46af708 (     0x8) RecogController::getRecogStats() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46af710 (     0x8) RecogController::getPrefiltererSearchParamSet() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46af718 (     0x8) RecogController::getSearchCrossLayerParamSet() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46af720 (    0x10) RecogController::getSearchParamSet(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46af730 (     0x8) RecogController::isThreaded() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46af738 (    0x38) PRStats::~PRStats() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46af770 (    0x68) DgnArray<PRStatsItem>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46af7d8 (    0x6c) DgnIOwnArray<RecogSpecLayer*>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46af844 (    0x64) DgnIOwnArray<RecogSpecLayer*>::destructAt(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46af8a8 (    0xc4) DgnIOwnArray<RecogSpecLayer*>::copyArraySlice(DgnIOwnArray<RecogSpecLayer*> const&, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46af96c (    0x44) DgnArray<RecogLayerStats>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46af9b0 (    0x80) DgnArray<RecogLayerStats>::destructAt(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46afa30 (    0x40) DgnArray<SnapTime>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46afa70 (    0xdc) Hash<EmbStateSpec, EmbStateSpec, EmbStateSpecToActiveWordScope, ActiveWord*>::Hash(char const*, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46afb4c (    0x28) Hash<EmbStateSpec, EmbStateSpec, EmbStateSpecToActiveWordScope, ActiveWord*>::~Hash() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46afb74 (    0x40) DgnIFixArray<BucketLink<EmbStateSpec, ActiveWord*>*>::~DgnIFixArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46afbb4 (    0x6c) DgnIOwnArray<Recognizer*>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46afc20 (    0x6c) DgnIOwnArray<FstCore*>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46afc8c (    0x64) DgnArray<DgnArray<RecogResultToken>>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46afcf0 (    0x74) Hash<EmbStateSpec, EmbStateSpec, EmbStateSpecToActiveWordScope, ActiveWord*>::~Hash() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46afd64 (    0x90) DgnArray<RecogLayerStats>::reallocElts(unsigned int, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46afdf4 (    0xd0) DgnArray<SnapTime>::copyArraySlice(DgnArray<SnapTime> const&, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46afec4 (    0x80) Hash<EmbStateSpec, EmbStateSpec, EmbStateSpecToActiveWordScope, ActiveWord*>::findBucket(EmbStateSpec const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46aff44 (   0x110) Hash<EmbStateSpec, EmbStateSpec, EmbStateSpecToActiveWordScope, ActiveWord*>::upSize(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b0054 (    0x9c) MrecInitModule_arcgraph_fst() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b00f0 (    0x90) ArcGraph::~ArcGraph() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b0180 (    0x34) void DgnDelete<PhnMgr>(PhnMgr*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b01b4 (     0x4) ArcGraph::~ArcGraph() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b01b8 (   0xbf0) ArcGraph::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b0da8 (    0x38) ArcGraph::lexToCWIDAC(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b0de0 (    0xd4) ArcGraph::lexToCWID(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b0eb4 (   0x1f0) ArcGraph::getNameAndHumanReadablePron(unsigned int, DgnString*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b10a4 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001b46b10bc (    0x50) ArcGraph::ensureHeaderValid(char const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b110c (    0x50) ArcGraph::findBackoffState() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b115c (     0x4) MrecInitModule_vocutil_voc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b1160 (   0x170) GetWordId(unsigned short, char const*, char const*, char const*, bool, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b12d0 (    0x88) GetWordName(unsigned short, unsigned int, bool, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b1358 (    0xf4) VerifyVocName(char const*, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b144c (   0x16c) GetStateName(unsigned short, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b15b8 (    0xa0) GetRuleName(unsigned short, unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b1658 (    0x38) GetCollationName(unsigned short, unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b1690 (     0x4) MrecInitModule_phnlat_kernel() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b1694 (    0x88) Lattice<PhonemeLatticeLC>::cmpInLink(unsigned int, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b171c (    0x88) Lattice<PhonemeLatticeLC>::cmpOutLink(unsigned int, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b17a4 (    0x6c) Lattice<PhonemeLatticeLC>::cmpNodesByInLinks(unsigned int, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b1810 (    0x6c) Lattice<PhonemeLatticeLC>::cmpNodesByOutLinks(unsigned int, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b187c (    0x14) PhonemeLattice::SortInLinks(DgnPrimArray<unsigned int>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b1890 (   0x7bc) void mrec_qsort_r<InLinkICmp1>(void*, unsigned long, unsigned long, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b204c (    0x14) PhonemeLattice::SortOutLinks(DgnPrimArray<unsigned int>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b2060 (   0x7bc) void mrec_qsort_r<OutLinkICmp1>(void*, unsigned long, unsigned long, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b281c (    0x14) PhonemeLattice::SortNodes(DgnPrimArray<unsigned int>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b2830 (   0x8a8) void mrec_qsort_r<NodeICmp>(void*, unsigned long, unsigned long, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b30d8 (    0x14) PhonemeLattice::SortNodesCount(DgnPrimArray<unsigned int>*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b30ec (    0x14) PhonemeLattice::SortNodesByInLinks(DgnPrimArray<unsigned int>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b3100 (   0x7bc) void mrec_qsort_r<NodeByInLinksICmp1>(void*, unsigned long, unsigned long, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b38bc (    0x14) PhonemeLattice::SortNodesByOutLinks(DgnPrimArray<unsigned int>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b38d0 (   0x7bc) void mrec_qsort_r<NodeByOutLinksICmp1>(void*, unsigned long, unsigned long, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b408c (   0x1a0) PhonemeLattice::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b422c (   0xa5c) Lattice<PhonemeLatticeLC>::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b4c88 (   0x270) PhonemeLattice::PhonemeLattice(DgnPrimArray<unsigned int> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b4ef8 (    0xf8) Lattice<PhonemeLatticeLC>::maybeCreateAndConnectLink(unsigned int, unsigned int, PhonemeLatticeLC const&, bool, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b4ff0 (    0x5c) Lattice<PhonemeLatticeLC>::gc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b504c (    0x9c) Lattice<PhonemeLatticeLC>::~Lattice() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b50e8 (     0x4) PhonemeLattice::PhonemeLattice(DgnPrimArray<unsigned int> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b50ec (     0x4) PhonemeLattice::~PhonemeLattice() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b50f0 (    0x28) PhonemeLattice::~PhonemeLattice() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b5118 (    0xdc) PhonemeLattice::getNextStartNodes(unsigned int, PhonemeLatticeLC const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b51f4 (   0x6dc) PhonemeLattice::hasCommonProns(DgnPrimArray<unsigned int> const&, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b58d0 (    0xbc) Lattice<PhonemeLatticeLC>::cmpNodesByInLinksIgnoreNodes(unsigned int, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b598c (    0xbc) Lattice<PhonemeLatticeLC>::cmpNodesByOutLinksIgnoreNodes(unsigned int, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b5a48 (    0x40) DgnArray<LatticeLink<PhonemeLatticeLC>>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b5a88 (    0x40) DgnArray<LatticeNode<PhonemeLatticeLC>>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b5ac8 (    0xfc) Lattice<PhonemeLatticeLC>::createLink(unsigned int, unsigned int, PhonemeLatticeLC const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b5bc4 (   0x11c) Lattice<PhonemeLatticeLC>::connectInLink(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b5ce0 (   0x11c) Lattice<PhonemeLatticeLC>::connectOutLink(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b5dfc (    0x44) Lattice<PhonemeLatticeLC>::connectInLinkUnordered(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b5e40 (    0x44) Lattice<PhonemeLatticeLC>::connectOutLinkUnordered(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b5e84 (   0x194) Lattice<PhonemeLatticeLC>::gcNonTerminal() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b6018 (   0x194) Lattice<PhonemeLatticeLC>::gcNonInitial() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b61ac (   0x1b0) Lattice<PhonemeLatticeLC>::gcSetup() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b635c (    0xcc) Lattice<PhonemeLatticeLC>::gcCleanup() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b6428 (    0x4c) Lattice<PhonemeLatticeLC>::disconnectAndDestroyLink(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b6474 (   0x100) Lattice<PhonemeLatticeLC>::disconnectInLink(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b6574 (   0x100) Lattice<PhonemeLatticeLC>::disconnectOutLink(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b6674 (    0x94) Lattice<PhonemeLatticeLC>::destroyLinkNoDuplicateCheck(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b6708 (   0x4c0) Lattice<PhonemeLatticeLC>::topSortInternal(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b6bc8 (    0x2c) MrecInitLibrarySet_throughGerm() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b6bf4 (   0x1b8) TCliticsParamManager::TCliticsParamManager(TLocaleInfo&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b6dac (    0x90) TCliticsProc::freeMemory() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b6e3c (   0x140) TCliticsProc::TCliticsProc(TLexicon*, bool, wchar_t const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b6f7c (     0x4) TCliticsProc::TCliticsProc(TLexicon*, bool, wchar_t const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b6f80 (    0x60) TCliticsProc::~TCliticsProc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b6fe0 (     0x4) TCliticsProc::~TCliticsProc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b6fe4 (    0x28) TCliticsProc::~TCliticsProc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b700c (   0xa88) TCliticsProc::applyInternal(std::__1::vector<wchar_t const*, std::__1::allocator<wchar_t const*>> const&, TLattice const*, std::__1::vector<TLatticeConstructionTransData*, std::__1::allocator<TLatticeConstructionTransData*>>&, unsigned long&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b7a94 (   0x7ec) addTransitionToLattice(TLattice const*, std::__1::vector<TWord const*, std::__1::allocator<TWord const*>> const&, TCliticsProduction*, TLexicon*, TCliticsParamManager const*, TRegExp&, std::__1::vector<TLatticeConstructionTransData*, std::__1::allocator<TLatticeConstructionTransData*>>&, std::__1::vector<unsigned long, std::__1::allocator<unsigned long>>&, unsigned long&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b8280 (   0x310) TCliticsProc::apply(std::__1::vector<wchar_t const*, std::__1::allocator<wchar_t const*>> const&, TLattice const*, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b8590 (   0x624) TCliticsProc::apply(std::__1::vector<TWord const*, std::__1::allocator<TWord const*>> const&, unsigned long, unsigned long, unsigned long, std::__1::vector<std::__1::pair<TWord const*, unsigned long>, std::__1::allocator<std::__1::pair<TWord const*, unsigned long>>>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b8bb4 (   0x584) TCliticsProc::save(TDataManager*, TDataManager*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b9138 (     0x8) TCliticsProc::getParamManager() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b9140 (     0x8) TCliticsProc::getType() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b9148 (     0x4) TCliticsParamManager::~TCliticsParamManager() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b914c (    0x28) TCliticsParamManager::~TCliticsParamManager() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b9174 (    0x18) std::__1::vector<TCliticsProduction*, std::__1::allocator<TCliticsProduction*>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b918c (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<TCliticsProduction*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<TCliticsProduction*>>(std::__1::allocator<TCliticsProduction*>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b91c4 (   0x180) TCliticsParamManager::~TCliticsParamManager() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b9344 (    0x38) MrecInitLibrary_word() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b937c (    0x28) MrecInitLibrarySet_throughWord() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b93a4 (    0x9c) MrecInitModule_dfile_dfutil() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b9440 (   0x1a0) writeMrecHeader(DgnStream*, char const*, unsigned int, unsigned int, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b95e0 (    0xa4) OpenAndWriteMrecHeader(DFile*, SubFileExtension, bool, char const*, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b9684 (    0x78) DFile::openSubFile(SubFileExtension, B_SubFileOpenMode, B_DgnStreamFileType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b96fc (   0x23c) readMrecHeader(DgnStream*, DFile*, SubFileExtension, char const*, unsigned int*, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b9938 (    0xa8) OpenAndReadMrecHeader(DFile*, SubFileExtension, bool, char const*, unsigned int*, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b99e0 (   0x1e4) MrecHeaderCheckVersions(char const*, char const*, unsigned int, unsigned int, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b9bc4 (    0x84) MrecHeaderCheckLatestVersionIfShared(DFile*, char const*, unsigned int, unsigned int, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b9c48 (     0xc) DFileOwner::DFileOwner() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b9c54 (    0x40) DFileOwner::closeDFile() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b9c94 (    0x2c) DFileOwner::~DFileOwner() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b9cc0 (    0x5c) DFile::removeFileAfterSaveException(DFile**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b9d1c (    0x10) DFileOwner::setRemoveFileOnDestruction(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b9d2c (    0xc8) DFile::DFile(FileSpec const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b9df4 (    0x60) DFile::subFileExists(SubFileExtension) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b9e54 (    0x54) DFile::~DFile() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b9ea8 (     0x4) DFile::~DFile() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b9eac (     0x4) DFile::~DFile() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46b9eb0 (   0x434) DFile::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ba2e4 (    0xd4) unsigned long sizeObject<SubDirExtension>(DgnArray<SubDirExtension> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ba3b8 (     0x8) DFile::getCurrentSubDirComponents() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ba3c0 (    0xa8) DFile::pushCurrentSubDirComponent(SubDirExtension const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ba468 (    0x2c) DFile::popCurrentSubDirComponent() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ba494 (    0x9c) DFile::makeSubFileName(DgnArray<SubDirExtension> const&, char const*, DgnString*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ba530 (   0x398) DFile::openDFile(FileSpec const&, B_DFileOpenMode, unsigned int, DFileOwner*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ba8c8 (    0x18) DFile::copyDFileState(DFile const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ba8e0 (    0x24) DFile::getNameForSemanticType(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ba904 (     0x4) DFile::clearBigReadCache(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ba908 (    0x5c) DFile::cacheSubFileSizeInfo() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ba964 (    0x64) DFile::reportProgress(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ba9c8 (    0x90) DFileProgressInfo::findSubFile(char const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46baa58 (    0x40) DFileProgressInfo::recordFileAsReported(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46baa98 (    0x68) DFileProgressInfo::reset() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46bab00 (    0x38) DFileProgressInfo::DFileProgressInfo() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46bab38 (    0xd8) DFileProgressInfo::add(DgnString const&, unsigned long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46bac10 (    0x38) DFileProgressInfo::resetReportedInfo() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46bac48 (    0x14) DFileProgressInfo::attachProgressHandler(ProgressCallbackHandler*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46bac5c (    0x98) sizeObject(DFileProgressInfo const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46bacf4 (    0x40) DgnArray<SubDirExtension>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46bad34 (     0x4) MrecInitModule_vocmgr_voc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46bad38 (    0x38) VocMgr::startupVocMgr(DgnIOwnArray<Voc*> const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46bad70 (   0x1cc) VocMgr::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46baf3c (    0x80) VocMgr::getVocOrThrow(unsigned short) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46bafbc (    0x70) VocMgr::beginRuleStateRecursiveOperation() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46bb02c (    0x70) VocMgr::endRuleStateRecursiveOperation() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46bb09c (     0x4) MrecInitModule_sdsaus_sdapi() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46bb0a0 (     0x4) MrecInitModule_disopnw_mrecutil() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46bb0a4 (    0x84) TTagManager::getClosedTagSet(TTag const*, std::__1::set<TPItnTagHandle_fake**, std::__1::less<TPItnTagHandle_fake**>, std::__1::allocator<TPItnTagHandle_fake**>>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46bb128 (    0x38) TBoolParam::get() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46bb160 (   0xd78) TFormatter::addCapBlocks(TFsa&, TState*, TState*, wchar_t const*, unsigned long, unsigned long, std::__1::vector<TPItnTagHandle_fake**, std::__1::allocator<TPItnTagHandle_fake**>> const&, std::__1::vector<wchar_t const*, std::__1::allocator<wchar_t const*>> const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46bbed8 (  0x19ec) TFormatter::splitGrammarResult(wchar_t const*, std::__1::vector<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>, std::__1::allocator<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>>&, std::__1::vector<TPItnTagHandle_fake**, std::__1::allocator<TPItnTagHandle_fake**>>&, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46bd8c4 (    0x2c) std::__1::vector<TPItnTagHandle_fake**, std::__1::allocator<TPItnTagHandle_fake**>>::resize(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46bd8f0 (    0xa8) std::__1::vector<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>, std::__1::allocator<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>>::resize(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46bd998 (   0x2dc) std::__1::__wrap_iter<TPItnTagHandle_fake***> std::__1::vector<TPItnTagHandle_fake**, std::__1::allocator<TPItnTagHandle_fake**>>::insert<std::__1::__tree_const_iterator<TPItnTagHandle_fake**, std::__1::__tree_node<TPItnTagHandle_fake**, void*>*, long>, 0>(std::__1::__wrap_iter<TPItnTagHandle_fake** const*>, std::__1::__tree_const_iterator<TPItnTagHandle_fake**, std::__1::__tree_node<TPItnTagHandle_fake**, void*>*, long>, std::__1::__tree_const_iterator<TPItnTagHandle_fake**, std::__1::__tree_node<TPItnTagHandle_fake**, void*>*, long>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46bdc74 (    0x58) TBuffer<wchar_t>::assign(wchar_t const*, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46bdccc (   0xae0) TFormatter::addGrammarBlocks(std::__1::vector<TItnWordData, std::__1::allocator<TItnWordData>> const&, unsigned long, TState*, TFsa&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46be7ac (   0x724) TFormatter::addWordBlocks(TWord const*, TState*, TState*, TFsa&, unsigned long, unsigned long, std::__1::vector<TPItnTagHandle_fake**, std::__1::allocator<TPItnTagHandle_fake**>> const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46beed0 (    0xf4) std::__1::vector<wchar_t const*, std::__1::allocator<wchar_t const*>>::push_back[abi:v160006](wchar_t const* const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46befc4 (   0x1f8) std::__1::__wrap_iter<TPItnTagHandle_fake***> std::__1::vector<TPItnTagHandle_fake**, std::__1::allocator<TPItnTagHandle_fake**>>::insert<std::__1::__wrap_iter<TPItnTagHandle_fake** const*>, 0>(std::__1::__wrap_iter<TPItnTagHandle_fake** const*>, std::__1::__wrap_iter<TPItnTagHandle_fake** const*>, std::__1::__wrap_iter<TPItnTagHandle_fake** const*>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46bf1bc (   0x258) TFormatter::constructGraph(std::__1::vector<TItnWordData, std::__1::allocator<TItnWordData>> const&, unsigned long, unsigned long, TFsa&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46bf414 (   0x2f4) TFormatter::logFsa(TFsa const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46bf708 (   0xba4) TFormatter::collectTags(TFsa&, TBuffer<wchar_t>&, unsigned long, unsigned long, TAllocator&, std::__1::vector<TFormatProduction const*, std::__1::allocator<TFormatProduction const*>>&, std::__1::set<TPItnTagHandle_fake**, std::__1::less<TPItnTagHandle_fake**>, std::__1::allocator<TPItnTagHandle_fake**>>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c02ac (  0x2c3c) TFormatter::replace(TPItnResultHandle_fake** const*, unsigned long, unsigned long, unsigned long, char const*, unsigned int, TBuffer<TPItnResultHandle_fake**>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c2ee8 (   0x100) std::__1::vector<unsigned long, std::__1::allocator<unsigned long>>::push_back[abi:v160006](unsigned long&&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c2fe8 (    0xf8) std::__1::vector<unsigned long, std::__1::allocator<unsigned long>>::push_back[abi:v160006](unsigned long const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c30e0 (    0xac) std::__1::vector<THint, std::__1::allocator<THint>>::resize(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c318c (   0x198) std::__1::vector<THint, std::__1::allocator<THint>>::__append(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c3324 (    0x8c) void std::__1::__advance[abi:v160006]<std::__1::__tree_const_iterator<TPItnTagHandle_fake**, std::__1::__tree_node<TPItnTagHandle_fake**, void*>*, long>>(std::__1::__tree_const_iterator<TPItnTagHandle_fake**, std::__1::__tree_node<TPItnTagHandle_fake**, void*>*, long>&, std::__1::iterator_traits<std::__1::__tree_const_iterator<TPItnTagHandle_fake**, std::__1::__tree_node<TPItnTagHandle_fake**, void*>*, long>>::difference_type, std::__1::bidirectional_iterator_tag) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c33b0 (   0x114) std::__1::vector<TPItnTagHandle_fake**, std::__1::allocator<TPItnTagHandle_fake**>>::__append(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c34c4 (   0x170) std::__1::vector<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>, std::__1::allocator<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>>>::__append(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c3634 (    0xa4) std::__1::enable_if<__is_cpp17_forward_iterator<std::__1::__tree_const_iterator<TPItnTagHandle_fake**, std::__1::__tree_node<TPItnTagHandle_fake**, void*>*, long>>::value, void>::type std::__1::__split_buffer<TPItnTagHandle_fake**, std::__1::allocator<TPItnTagHandle_fake**>&>::__construct_at_end<std::__1::__tree_const_iterator<TPItnTagHandle_fake**, std::__1::__tree_node<TPItnTagHandle_fake**, void*>*, long>>(std::__1::__tree_const_iterator<TPItnTagHandle_fake**, std::__1::__tree_node<TPItnTagHandle_fake**, void*>*, long>, std::__1::__tree_const_iterator<TPItnTagHandle_fake**, std::__1::__tree_node<TPItnTagHandle_fake**, void*>*, long>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c36d8 (    0x58) std::__1::pair<std::__1::__tree_const_iterator<TPItnTagHandle_fake**, std::__1::__tree_node<TPItnTagHandle_fake**, void*>*, long>, TPItnTagHandle_fake***> std::__1::__unwrap_and_dispatch[abi:v160006]<std::__1::__overload<std::__1::__copy_loop<std::__1::_ClassicAlgPolicy>, std::__1::__copy_trivial>, std::__1::__tree_const_iterator<TPItnTagHandle_fake**, std::__1::__tree_node<TPItnTagHandle_fake**, void*>*, long>, std::__1::__tree_const_iterator<TPItnTagHandle_fake**, std::__1::__tree_node<TPItnTagHandle_fake**, void*>*, long>, TPItnTagHandle_fake***, 0>(std::__1::__tree_const_iterator<TPItnTagHandle_fake**, std::__1::__tree_node<TPItnTagHandle_fake**, void*>*, long>, std::__1::__tree_const_iterator<TPItnTagHandle_fake**, std::__1::__tree_node<TPItnTagHandle_fake**, void*>*, long>, TPItnTagHandle_fake***) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c3730 (   0x10c) void std::__1::vector<TPItnTagHandle_fake**, std::__1::allocator<TPItnTagHandle_fake**>>::assign<TPItnTagHandle_fake***, 0>(TPItnTagHandle_fake***, TPItnTagHandle_fake***) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c383c (    0x18) std::__1::vector<TFormatProduction*, std::__1::allocator<TFormatProduction*>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c3854 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<TFormatProduction*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<TFormatProduction*>>(std::__1::allocator<TFormatProduction*>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c388c (    0x18) std::__1::vector<TFormatProduction const*, std::__1::allocator<TFormatProduction const*>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c38a4 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<TFormatProduction const*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<TFormatProduction const*>>(std::__1::allocator<TFormatProduction const*>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c38dc (    0x18) std::__1::vector<TBlock const*, std::__1::allocator<TBlock const*>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c38f4 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<TBlock const*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<TBlock const*>>(std::__1::allocator<TBlock const*>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c392c (    0x9c) MrecInitModule_ddump_mrecutil() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c39c8 (     0x4) MrecInitModule_sdstate_sdapi() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c39cc (   0x1c4) SDState_GetHandle [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c3b90 (   0x228) SDState_GetAllowedWordCollations [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c3db8 (     0x4) MrecInitModule_ccrc32_fileutil() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c3dbc (    0x1c) computeCRC32(unsigned int, unsigned char const*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c3dd8 (    0xac) computeCRC32(unsigned int, unsigned short const*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c3e84 (    0xc4) computeCRC32(unsigned int, unsigned int const*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c3f48 (     0x4) MrecInitModule_featfilt_sigproc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c3f4c (     0x4) MrecInitModule_featrang_sigproc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c3f50 (     0x4) MrecInitModule_lm_lm() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c3f54 (    0x64) LMStats::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c3fb8 (    0x20) LMStats::resetStats() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c3fd8 (    0x54) LMStats::operator=(LMStats const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c402c (    0xa0) LMStats::operator-=(LMStats const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c40cc (    0x28) LanguageModel::LanguageModel(unsigned int, WordList const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c40f4 (    0x54) LanguageModel::~LanguageModel() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c4148 (     0x4) LanguageModel::~LanguageModel() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c414c (     0x4) LanguageModel::~LanguageModel() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c4150 (    0x10) LanguageModel::hasRecentBuffer() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c4160 (    0x18) LanguageModel::getRecentBufferLength() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c4178 (   0x1b0) LanguageModel::addToRecent(DgnPrimArray<unsigned int> const&, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c4328 (    0x10) LanguageModel::clearRecent() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c4338 (    0x10) LanguageModel::getDefaultRestrictRange(unsigned int*, unsigned int*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c4348 (    0xa4) LanguageModel::languageScoreFinish(unsigned int, short, LMScoreDetails*, bool, unsigned int, LMContextData*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c43ec (    0x98) LanguageModel::languageScoreFinishForSearch(unsigned int, short, LMContextData const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c4484 (    0x50) LanguageModel::startBuildingTopicLM(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c44d4 (    0x50) LanguageModel::addBuildTopicLM(DgnArray<DgnPrimArray<unsigned int>> const&, DgnArray<DgnPrimArray<unsigned int>> const&, DgnPrimArray<unsigned int> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c4524 (    0x50) LanguageModel::endBuildingTopicLM(DgnArray<DgnPrimArray<unsigned int>> const&, DgnArray<DgnPrimArray<unsigned int>> const&, DgnPrimArray<unsigned int> const&, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c4574 (    0x50) LanguageModel::abortBuildingTopicLM() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c45c4 (     0x8) LanguageModel::isBuildingTopicLM() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c45cc (     0x8) LanguageModel::getBuildExternalTopicLmSlot() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c45d4 (   0x128) LanguageModel::setContext(DgnPrimArray<unsigned int> const&, DgnPrimArray<unsigned int> const*, LMStats*, LMContextPars const&, LMContextData*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c46fc (    0x10) LanguageModel::unsetContext(LMContextData*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c470c (     0x4) LanguageModel::beginLMSyncRecog(bool, LMContextData*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c4710 (     0x4) LanguageModel::beginRescoringInLMSyncRecog(LMContextData*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c4714 (     0x4) LanguageModel::endLMSyncRecog(bool, LMContextData*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c4718 (     0x4) LanguageModel::clearLoadedData(B_LMClearLoadedType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c471c (     0x4) LanguageModel::adaptLMFromTranscripts(DgnArray<DgnPrimArray<unsigned int>> const&, DgnArray<DgnPrimArray<unsigned int>> const&, DgnPrimArray<unsigned int> const&, int, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c4720 (    0x50) LanguageModel::setWeights(DgnPrimArray<double> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c4770 (     0x8) LanguageModel::getNumDispatchComponents() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c4778 (    0x50) LanguageModel::setDispatchPrefiltererPerWordPenalty(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c47c8 (    0x54) LanguageModel::getDispatchPrefiltererPerWordPenalty(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c481c (     0x8) LanguageModel::getNumInterpolatedLms() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c4824 (     0x8) LanguageModel::setInterpolatedLmWeights(DgnPrimArray<double> const&, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c482c (     0x8) LanguageModel::getInterpolatedLmWeights(unsigned int*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c4834 (    0x50) LanguageModel::getActiveTopicLmSlots(DgnPrimArray<unsigned int> const&, DgnPrimArray<bool>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c4884 (    0x50) LanguageModel::setTopicLmSlotWeights(DgnPrimArray<unsigned int> const&, DgnPrimArray<double> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c48d4 (     0x8) LanguageModel::hasWeights() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c48dc (    0x50) LanguageModel::getWeightsData(DgnArray<DgnString> const**, unsigned int*, unsigned int*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c492c (    0x50) LanguageModel::cleanupWeightsData() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c497c (    0x54) LanguageModel::makeNewWeights(DgnString const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c49d0 (    0x50) LanguageModel::deleteWeights(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c4a20 (    0x50) LanguageModel::applyWeights(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c4a70 (    0x54) LanguageModel::getValidWeightsIds(DgnPrimArray<unsigned int>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c4ac4 (    0x54) LanguageModel::getWeightsId(DgnString const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c4b18 (    0x54) LanguageModel::getWeightsName(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c4b6c (    0x54) LanguageModel::isFactoryWeights(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c4bc0 (    0x50) LanguageModel::checkWeightsId(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c4c10 (     0x8) LanguageModel::getNumLoadedBigramBytes() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c4c18 (     0x8) LanguageModel::getNumLoadedTrigramBytes() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c4c20 (     0x8) LanguageModel::getNumLoadedQuadgramBytes() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c4c28 (    0x10) LanguageModel::getValidTopicLmSlots(DgnPrimArray<unsigned int>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c4c38 (     0x8) LanguageModel::getTopicLmSlotId(DgnString const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c4c40 (    0x50) LanguageModel::setTopicLmSlotName(unsigned int, DgnString const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c4c90 (    0x54) LanguageModel::getTopicLmSlotName(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c4ce4 (    0x54) LanguageModel::hasTopicLM(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c4d38 (    0x50) LanguageModel::deleteTopicLMs(DgnPrimArray<unsigned int> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c4d88 (    0x10) LanguageModel::getValidFactoryCorrectiveLms(DgnPrimArray<unsigned int>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c4d98 (     0x8) LanguageModel::getFactoryCorrectiveLmId(DgnString const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c4da0 (    0x54) LanguageModel::getFactoryCorrectiveLmName(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c4df4 (    0x50) LanguageModel::setFactoryCorrectiveLmName(unsigned int, DgnString const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c4e44 (    0x50) LanguageModel::getActiveFactoryCorrectiveLms(DgnPrimArray<unsigned int> const&, DgnPrimArray<bool>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c4e94 (    0x50) LanguageModel::setActiveFactoryCorrectiveLms(DgnPrimArray<unsigned int> const&, DgnPrimArray<bool> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c4ee4 (     0x8) LanguageModel::hasAnyQuadgrams() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c4eec (     0x8) LanguageModel::tri1HasTrigrams(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c4ef4 (     0x8) LanguageModel::quad1quad2HasQuadgrams(unsigned int, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c4efc (     0x8) LanguageModel::mayWordBeIgnoredInContext(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c4f04 (   0x3fc) LanguageModel::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c5300 (    0x30) LanguageModel::saveVocAndSvc(DFile*, DFile*, DFileChecksums*, DFileChecksums*, bool, unsigned long long, unsigned long long, B_LMSBigramTrigramGroupingType, B_LMSQuadgramGroupingType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c5330 (     0x8) LanguageModel::getTotalPreloadableBytes() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c5338 (     0x8) LanguageModel::computeTotalPreloadableBytes() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c5340 (   0x148) LanguageModel::finalizeLM(LanguageModel*, DFile*, DFileChecksums*, DgnSharedMemStream*, bool, bool, unsigned int, unsigned int, bool, DgnIOwnArray<WordNgramTemplate*>*, bool, unsigned long long, long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c5488 (    0x54) LanguageModel::getLMWithLegacyPath(DgnString*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c54dc (   0x2b0) LanguageModel::CreateAndLoadLanguageModel(DFile*, DFile*, DFileChecksums*, DgnSharedMemStream*, bool, bool, bool, bool, unsigned int, WordList const*, bool, unsigned int, unsigned int, bool, bool, bool*, bool*, double*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c578c (   0x2dc) MrecInitModule_generr_mrecutil() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c5a68 (   0x234) errWarnInternal(char const*, int, char const*, int, char const*, ...) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c5c9c (   0x2b4) errThrowInternal(B_ErrorThrowType, char const*, int, char const*, int, char const*, ...) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c5f50 (    0x2c) crashIntoDebugger [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c5f7c (   0x16c) errCopyAndThrowException(B_ErrorThrowType, DgnException*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c60e8 (     0x4) StartupAssertSkips() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c60ec (    0x54) ThrowMemoryException(DgnMemoryException*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c6140 (    0x68) ThrowNewFailure(DgnMemoryException*, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c61a8 (    0x68) ThrowExternalNewFailure(DgnMemoryException*, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c6210 (     0xc) haveTerminatedSuccessfully() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c621c (    0x20) setDllTerminatedSuccessfullyOrNotInUse(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c623c (    0x18) SetShadowDiagnosticCrashOnAssert() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c6254 (    0x18) SetShadowDiagnosticCrashOnError() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c626c (    0x18) SetShadowDiagnosticCrashOnWarning() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c6284 (    0x18) SetShadowDiagnosticAbortOnAssert() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c629c (     0x4) SetSkipAsserts() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c62a0 (   0x20c) MrecInitModule_realdf_dfutil() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c64ac (     0xc) mrecZlibAlloc [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c64b8 (    0x14) mrecZlibFree [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c64cc (   0xc44) RealDFileSubFileStream::RealDFileSubFileStream(B_DgnStreamOpenMode, FileSpec const&, RealDFile*, char const*, B_SubFileOpenMode, unsigned short, unsigned int, unsigned int, bool, unsigned long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c7110 (    0xb8) RealDFileSubFileStream::basicReadWithMode(char*, unsigned int, B_DgnStreamReadMode) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c71c8 (    0xf0) RealDFile::verifyCompressionInfo(unsigned short, unsigned long long, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c72b8 (   0x4cc) RealDFileSubFileStream::~RealDFileSubFileStream() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c7784 (   0x200) RealDFileSubFileStream::basicWrite(char const*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c7984 (     0x4) RealDFileSubFileStream::~RealDFileSubFileStream() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c7988 (    0x28) RealDFileSubFileStream::~RealDFileSubFileStream() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c79b0 (   0x720) RealDFileSubFileStream::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c80d0 (   0x1c4) RealDFileSubFileStream::seekFromBeg(unsigned long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c8294 (    0x5c) RealDFileSubFileStream::seekToEnd() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c82f0 (    0x18) RealDFileSubFileStream::tell() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c8308 (    0x8c) RealDFileSubFileStream::tell32() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c8394 (     0x8) RealDFileSubFileStream::eof() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c839c (    0xd8) RealDFileSubFileStream::peekForChar() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c8474 (   0x11c) RealDFileSubFileStream::basicCompressedRead(char*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c8590 (    0xd4) RealDFileSubFileStream::readWithMode(char*, unsigned int, B_DgnStreamReadMode) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c8664 (    0x74) RealDFileSubFileStream::throwUnexpectedEof(unsigned int, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c86d8 (   0x4ac) RealDFileSubFileStream::writeBytes(char const*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c8b84 (     0x8) RealDFileSubFileStream::flush() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c8b8c (    0x5c) RealDFile::flushDFile() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c8be8 (    0xc0) RealDFileSubFileStream::beginCachedReadGroup(unsigned int, unsigned int, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c8ca8 (    0x40) RealDFileSubFileStream::endCachedReadGroup(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c8ce8 (   0x1b8) RealDFile::endCachedReadGroup(unsigned short, unsigned int, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c8ea0 (   0x134) RealDFile::addBlock(unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c8fd4 (   0x198) RealDFile::doWriteToCache(unsigned long long, char const*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c916c (   0x1ac) RealDFile::doReadFromCache(unsigned long long, char*, unsigned int, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c9318 (   0x274) RealDFile::RealDFile(FileSpec const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c958c (     0x4) RealDFile::RealDFile(FileSpec const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c9590 (   0x1f0) RealDFile::createReadOnlyClone() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c9780 (   0x33c) RealDFile::~RealDFile() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c9abc (    0xb8) RealDFile::addRemainingDirEntryBlocks() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c9b74 (    0xb8) RealDFile::addRemainingBlockUsageBlocks() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c9c2c (   0x26c) RealDFile::shrinkInternalUsage() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46c9e98 (   0x6a4) RealDFile::writeHeader() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ca53c (     0x4) RealDFile::~RealDFile() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ca540 (    0x28) RealDFile::~RealDFile() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ca568 (  0x1468) RealDFile::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46cb9d0 (    0xcc) unsigned long sizeObject<DgnPrimFixArray<char>*>(DgnIOwnArray<DgnPrimFixArray<char>*> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46cba9c (   0x4dc) RealDFile::startUp(B_DFileOpenMode, unsigned int, bool, B_DFileSupportType*, DgnString*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46cbf78 (   0x114) RealDFile::getDFileVersion(FileSpec const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46cc08c (  0x137c) RealDFile::readHeader(bool, B_DFileSupportType*, DgnString*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46cd408 (    0x40) (null) [FUNC, FunctionStarts] 
                0x00000001b46cd448 (    0x8c) RealDFile::subFileExistsByExplicitExtension(char const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46cd4d4 (    0x7c) RealDFile::findSubFile(char const*, unsigned short*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46cd550 (   0x718) RealDFile::openSubFileByExplicitExtension(char const*, B_SubFileOpenMode, B_DgnStreamFileType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46cdc68 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001b46cdc80 (   0x108) RealDFile::deleteSubFile(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46cdd88 (   0x2dc) RealDFile::addDirEntrySpace() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ce064 (    0x80) RealDFile::removeSubFileByExplicitExtension(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ce0e4 (   0x35c) RealDFile::renameSubFileByExplicitExtension(char const*, char const*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ce440 (   0x144) RealDFile::getSubFileSizeByExplicitExtension(char const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ce584 (    0x44) RealDFile::deleteFileAndCleanUp() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ce5c8 (    0x54) RealDFile::clearBigReadCache(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ce61c (    0x6c) DgnIOwnArray<DgnPrimFixArray<char>*>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ce688 (     0x4) RealDFile::maybeDisplayContents() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ce68c (    0xdc) RealDFile::verifyHaveOpenedAllSubFiles(char const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ce768 (    0xec) RealDFile::verifyHaveOpenedAllSubFiles(char const*, DgnPrimArray<bool> const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ce854 (   0x1a4) RealDFile::addBlockSpace() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ce9f8 (   0x400) RealDFile::readDirEntries(RealDFileHeaderFile*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46cedf8 (   0x1bc) RealDFile::readBlockUsage(RealDFileHeaderFile*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46cefb4 (   0x278) RealDFile::writeDirEntries(RealDFileHeaderFile*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46cf22c (    0xe4) RealDFile::writeBlockUsage(RealDFileHeaderFile*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46cf310 (    0xc8) RealDFile::clearPreviousBigReadCache(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46cf3d8 (   0x3b0) RealDFile::fillBigCache(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46cf788 (   0x108) RealDFile::freeBlock(unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46cf890 (    0xd8) RealDFile::fillSubFileSizeInfo() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46cf968 (    0xe0) RealDFile::fillSubFileSizeInfo(DgnPrimArray<bool> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46cfa48 (     0x8) RealDFile::attachProgressInfo(DFileProgressInfo*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46cfa50 (    0x18) SetShadowDebugShowDFileStatsOnDestruction() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46cfa68 (    0x40) DgnArray<RealDFileDirEntry>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46cfaa8 (    0x40) DgnPrimFixArray<char>::~DgnPrimFixArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46cfae8 (    0x78) DgnArray<RealDFileDirEntry>::reallocElts(unsigned int, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46cfb60 (   0x138) DgnArray<RealDFileDirEntry>::copyArraySlice(DgnArray<RealDFileDirEntry> const&, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46cfc98 (    0x64) DgnIOwnArray<DgnPrimFixArray<char>*>::destructAt(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46cfcfc (    0x34) void DgnDelete<DgnPrimFixArray<char>>(DgnPrimFixArray<char>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46cfd30 (     0x4) MrecInitModule_syncnet_net() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46cfd34 (   0x1d8) BaseSyncNet::BaseSyncNet(NetMgr*, CWIDAC const&, B_NetShape, B_PortStatus, int, int, bool, B_NodeSkippingType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46cff0c (    0x98) BaseSyncNet::~BaseSyncNet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46cffa4 (    0x38) Sequence::deleteSequence(Sequence*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46cffdc (     0x4) BaseSyncNet::~BaseSyncNet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46cffe0 (     0x4) BaseSyncNet::~BaseSyncNet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46cffe4 (    0xec) BaseSyncNet::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d00d0 (    0xac) BaseSyncNet::getBestScore(BaseNode const**) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d017c (    0x20) BaseSyncNet::updateBestNodeScore() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d019c (    0x18) BaseSyncNet::addArc(Node const*, Node*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d01b4 (    0x14) SyncNet::attachInPort(unsigned char, Node*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d01c8 (   0x208) BaseSyncNet::unpackSequence(Pic const*, int, Node**, Node**, B_ScoreOrder) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d03d0 (    0x8c) BaseSyncNet::unpackEndSilence() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d045c (   0x150) BaseSyncNet::unpackOneFromPicNodes(PicNode const*, unsigned int, Pic const&, Node**, Node**, B_ScoreOrder) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d05ac (    0x58) BaseSyncNet::scoreIntSilNode2(int, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d0604 (    0x80) SyncNet::~SyncNet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d0684 (     0x4) SyncNet::~SyncNet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d0688 (    0x28) SyncNet::~SyncNet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d06b0 (    0xd4) SyncNet::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d0784 (    0xac) SyncNet::getBestScore(BaseNode const**) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d0830 (    0x34) SyncNet::updateBestNodeScore() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d0864 (   0x5e0) SyncNet::scoreNetInternal(int, int, int, int, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d0e44 (    0x64) SyncNet::thresholdNetInternal(int, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d0ea8 (    0x48) SyncNet::maybeDoCallback(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d0ef0 (    0xb8) SyncNet::calcNumActiveNodes(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d0fa8 (    0x30) SyncNet::addEpsilonNode() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d0fd8 (    0x68) SyncNet::addArc(Node const*, Node*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d1040 (   0x128) SyncNet::addNodesSequential(unsigned int, B_ScoreOrder) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d1168 (    0x84) SyncNet::preallocEndSequences(unsigned short, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d11ec (     0x4) SyncNet::configureOutPorts(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d11f0 (   0x110) SyncNet::estimateActivePelsThisFrame(BitArray*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d1300 (    0xb8) BaseSyncNet::estimateActivePelsThisFrame(BitArray*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d13b8 (     0x4) OnePhonemeSyncNet::estimateActivePelsThisFrame(BitArray*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d13bc (     0x4) NonCoartSyncNet::estimateActivePelsThisFrame(BitArray*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d13c0 (    0x40) DgnIArray<Sequence*>::~DgnIArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d1400 (     0x4) MrecInitModule_chunkalloc_fstgraph() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d1404 (     0x4) MrecInitModule_lookah_user() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d1408 (    0x68) Lookahead::~Lookahead() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d1470 (     0x4) Lookahead::~Lookahead() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d1474 (   0x894) Lookahead::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d1d08 (   0x104) unsigned long sizeObject<DgnArray<PositionClu>>(DgnArray<DgnArray<PositionClu>> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d1e0c (   0x100) unsigned long sizeObject<DgnArray<DgnPrimArray<unsigned char>>>(DgnArray<DgnArray<DgnPrimArray<unsigned char>>> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d1f0c (   0x110) Lookahead::saveLookaheadBinary(DFile*, DFileChecksums*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d201c (    0x88) void writeObject<DgnArray<DgnPrimFixArray<unsigned char>>>(DgnStream*, DgnArray<DgnArray<DgnPrimFixArray<unsigned char>>> const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d20a4 (   0x51c) Lookahead::saveLookaheadText(DFile*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d25c0 (    0x14) Lookahead::saveLookahead(DFile*, DFileChecksums*, bool, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d25d4 (   0x188) Lookahead::scoreOneForLookahead(DgnPrimArray<unsigned char> const*, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d275c (    0x44) DgnArray<DgnArray<PositionClu>>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d27a0 (    0x68) DgnArray<DgnArray<PositionClu>>::destructAt(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d2808 (    0x64) DgnArray<PositionClu>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d286c (    0x44) DgnArray<DgnArray<DgnPrimArray<unsigned char>>>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d28b0 (    0x68) DgnArray<DgnArray<DgnPrimArray<unsigned char>>>::destructAt(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d2918 (    0xd0) unsigned long sizeObject<PositionClu>(DgnArray<PositionClu> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d29e8 (   0x2a8) TCondition::TCondition(TFileObject const*, unsigned long, TLexicon*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d2c90 (   0x510) TCondition::setEnum(TFileObject const*, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d31a0 (    0x34) TCondition::~TCondition() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d31d4 (   0x1e0) TCondition::getSource(TEdge const*, wchar_t const*, wchar_t const*, TBuffer<wchar_t>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d33b4 (    0x1c) (null) [FUNC, FunctionStarts] 
                0x00000001b46d33d0 (   0x228) TCondition::test(TEdge const*, wchar_t const*, wchar_t const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d35f8 (   0x328) collectEdge(TEdge const*, TCondition::TPosition, std::__1::vector<TEdge const*, std::__1::allocator<TEdge const*>>&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d3920 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001b46d3934 (   0x7b0) TRule::TRule(TFileObject const*, TLexicon*, TAllocator&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d40e4 (    0xa8) std::__1::vector<TCondition*, std::__1::allocator<TCondition*>>::reserve(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d418c (   0x238) buildReplaceObject(TFileObject const*, TLexicon*, TAllocator&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d43c4 (    0x54) TRule::freeMemory() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d4418 (    0x38) TRule::~TRule() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d4450 (    0x80) TRule::test(TEdge const*, wchar_t const*, wchar_t const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d44d0 (   0xd10) TGroup::TGroup(TFileObject const*, TRegExp*, unsigned long, TLexicon*, TAllocator&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d51e0 (    0xa8) std::__1::vector<TRule*, std::__1::allocator<TRule*>>::reserve(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d5288 (    0x54) TGroup::freeMemory() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d52dc (    0x38) TGroup::~TGroup() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d5314 (    0x9c) TGroup::munge(TEdge const*, wchar_t const*, wchar_t const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d53b0 (   0x76c) TMungeMapManager::TMungeMapManager(TInputStream&, TLexicon*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d5b1c (    0x64) TMungeMapManager::freeMemory() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d5b80 (     0x4) TMungeMapManager::TMungeMapManager(TInputStream&, TLexicon*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d5b84 (    0x44) TMungeMapManager::~TMungeMapManager() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d5bc8 (     0x4) TMungeMapManager::~TMungeMapManager() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d5bcc (   0x558) TMungeMapManager::mungeWithGroups(TVertex*, TGraph*, wchar_t const*, wchar_t const*, TSegmenter*, unsigned long, unsigned long) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d6124 (    0x14) sortMatch(TRegExpMatch const&, TRegExpMatch const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d6138 (    0xd0) TMungeMapManager::munge(TGraph*, wchar_t const*, wchar_t const*, TSegmenter*, unsigned long) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d6208 (    0x18) std::__1::vector<TCondition*, std::__1::allocator<TCondition*>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d6220 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<TCondition*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<TCondition*>>(std::__1::allocator<TCondition*>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d6258 (    0x18) std::__1::vector<TGroup*, std::__1::allocator<TGroup*>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d6270 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<TGroup*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<TGroup*>>(std::__1::allocator<TGroup*>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d62a8 (   0x578) void std::__1::__introsort<std::__1::_ClassicAlgPolicy, bool (*&)(TRegExpMatch const&, TRegExpMatch const&), TRegExpMatch*>(TRegExpMatch*, TRegExpMatch*, bool (*&)(TRegExpMatch const&, TRegExpMatch const&), std::__1::iterator_traits<TRegExpMatch*>::difference_type) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d6820 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001b46d6838 (    0xf8) void std::__1::__insertion_sort_3[abi:v160006]<std::__1::_ClassicAlgPolicy, bool (*&)(TRegExpMatch const&, TRegExpMatch const&), TRegExpMatch*>(TRegExpMatch*, TRegExpMatch*, bool (*&)(TRegExpMatch const&, TRegExpMatch const&)) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d6930 (   0x150) unsigned int std::__1::__sort3[abi:v160006]<std::__1::_ClassicAlgPolicy, bool (*&)(TRegExpMatch const&, TRegExpMatch const&), TRegExpMatch*>(TRegExpMatch*, TRegExpMatch*, TRegExpMatch*, bool (*&)(TRegExpMatch const&, TRegExpMatch const&)) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d6a80 (   0x1f8) bool std::__1::__insertion_sort_incomplete<bool (*&)(TRegExpMatch const&, TRegExpMatch const&), TRegExpMatch*>(TRegExpMatch*, TRegExpMatch*, bool (*&)(TRegExpMatch const&, TRegExpMatch const&)) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d6c78 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001b46d6c90 (   0x108) unsigned int std::__1::__sort4[abi:v160006]<std::__1::_ClassicAlgPolicy, bool (*&)(TRegExpMatch const&, TRegExpMatch const&), TRegExpMatch*>(TRegExpMatch*, TRegExpMatch*, TRegExpMatch*, TRegExpMatch*, bool (*&)(TRegExpMatch const&, TRegExpMatch const&)) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d6d98 (   0x248) TRegExpMatch* std::__1::__partial_sort_impl[abi:v160006]<std::__1::_ClassicAlgPolicy, bool (*&)(TRegExpMatch const&, TRegExpMatch const&), TRegExpMatch*, TRegExpMatch*>(TRegExpMatch*, TRegExpMatch*, TRegExpMatch*, bool (*&)(TRegExpMatch const&, TRegExpMatch const&)) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d6fe0 (   0x168) void std::__1::__sift_down[abi:v160006]<std::__1::_ClassicAlgPolicy, bool (*&)(TRegExpMatch const&, TRegExpMatch const&), TRegExpMatch*>(TRegExpMatch*, bool (*&)(TRegExpMatch const&, TRegExpMatch const&), std::__1::iterator_traits<TRegExpMatch*>::difference_type, TRegExpMatch*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d7148 (    0xd0) void std::__1::__sift_up[abi:v160006]<std::__1::_ClassicAlgPolicy, bool (*&)(TRegExpMatch const&, TRegExpMatch const&), TRegExpMatch*>(TRegExpMatch*, TRegExpMatch*, bool (*&)(TRegExpMatch const&, TRegExpMatch const&), std::__1::iterator_traits<TRegExpMatch*>::difference_type) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d7218 (   0x150) unsigned int std::__1::__sort5<bool (*&)(TRegExpMatch const&, TRegExpMatch const&), TRegExpMatch*>(TRegExpMatch*, TRegExpMatch*, TRegExpMatch*, TRegExpMatch*, TRegExpMatch*, bool (*&)(TRegExpMatch const&, TRegExpMatch const&)) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d7368 (   0xb28) TGrammarManager::TGrammarManager(TInputStream&, TTagManager const*, TLexicon*, TItnParamManager*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d7e90 (   0x4dc) callBackThousandSeparator(TGrammarCompiler::TArgument const*, unsigned long, void*, void*, TAllocator&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d836c (   0x218) callBackToken(TGrammarCompiler::TArgument const*, unsigned long, void*, void*, TAllocator&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d8584 (   0x1ec) callBackTag(TGrammarCompiler::TArgument const*, unsigned long, void*, void*, TAllocator&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d8770 (    0x74) TGrammarManager::freeMemory() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d87e4 (     0x4) TGrammarManager::TGrammarManager(TInputStream&, TTagManager const*, TLexicon*, TItnParamManager*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d87e8 (    0x28) TGrammarManager::~TGrammarManager() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d8810 (    0x18) TGrammarManager::clearResult() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d8828 (   0x55c) TWideChartSeeder::makeTerminals(unsigned long, std::__1::vector<TSymbol const*, std::__1::allocator<TSymbol const*>>&, std::__1::vector<unsigned long, std::__1::allocator<unsigned long>>&, std::__1::vector<void const*, std::__1::allocator<void const*>>&, TAllocator&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d8d84 (   0x3d0) TGrammarManager::getLMScore(wchar_t const*, std::__1::vector<TItnWordData, std::__1::allocator<TItnWordData>> const&, unsigned long, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d9154 (   0xc08) TGrammarManager::search(std::__1::vector<TItnWordData, std::__1::allocator<TItnWordData>> const&, unsigned long, unsigned long, unsigned long, std::__1::vector<TGrammarManagerResult, std::__1::allocator<TGrammarManagerResult>>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d9d5c (    0x28) sortResult(TGrammarManagerResult const&, TGrammarManagerResult const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d9d84 (     0x4) TWideChartSeeder::~TWideChartSeeder() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d9d88 (     0x4) TWideChartSeeder::~TWideChartSeeder() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d9d8c (    0x18) std::__1::vector<TGrammarManagerResult, std::__1::allocator<TGrammarManagerResult>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d9da4 (    0x4c) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<TGrammarManagerResult>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<TGrammarManagerResult>>(std::__1::allocator<TGrammarManagerResult>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46d9df0 (   0x618) void std::__1::__introsort<std::__1::_ClassicAlgPolicy, bool (*&)(TGrammarManagerResult const&, TGrammarManagerResult const&), TGrammarManagerResult*>(TGrammarManagerResult*, TGrammarManagerResult*, bool (*&)(TGrammarManagerResult const&, TGrammarManagerResult const&), std::__1::iterator_traits<TGrammarManagerResult*>::difference_type) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46da408 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001b46da420 (   0x114) void std::__1::__insertion_sort_3[abi:v160006]<std::__1::_ClassicAlgPolicy, bool (*&)(TGrammarManagerResult const&, TGrammarManagerResult const&), TGrammarManagerResult*>(TGrammarManagerResult*, TGrammarManagerResult*, bool (*&)(TGrammarManagerResult const&, TGrammarManagerResult const&)) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46da534 (   0x1a4) unsigned int std::__1::__sort3[abi:v160006]<std::__1::_ClassicAlgPolicy, bool (*&)(TGrammarManagerResult const&, TGrammarManagerResult const&), TGrammarManagerResult*>(TGrammarManagerResult*, TGrammarManagerResult*, TGrammarManagerResult*, bool (*&)(TGrammarManagerResult const&, TGrammarManagerResult const&)) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46da6d8 (   0x230) bool std::__1::__insertion_sort_incomplete<bool (*&)(TGrammarManagerResult const&, TGrammarManagerResult const&), TGrammarManagerResult*>(TGrammarManagerResult*, TGrammarManagerResult*, bool (*&)(TGrammarManagerResult const&, TGrammarManagerResult const&)) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46da908 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001b46da920 (   0x140) unsigned int std::__1::__sort4[abi:v160006]<std::__1::_ClassicAlgPolicy, bool (*&)(TGrammarManagerResult const&, TGrammarManagerResult const&), TGrammarManagerResult*>(TGrammarManagerResult*, TGrammarManagerResult*, TGrammarManagerResult*, TGrammarManagerResult*, bool (*&)(TGrammarManagerResult const&, TGrammarManagerResult const&)) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46daa60 (   0x294) TGrammarManagerResult* std::__1::__partial_sort_impl[abi:v160006]<std::__1::_ClassicAlgPolicy, bool (*&)(TGrammarManagerResult const&, TGrammarManagerResult const&), TGrammarManagerResult*, TGrammarManagerResult*>(TGrammarManagerResult*, TGrammarManagerResult*, TGrammarManagerResult*, bool (*&)(TGrammarManagerResult const&, TGrammarManagerResult const&)) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46dacf4 (   0x188) void std::__1::__sift_down[abi:v160006]<std::__1::_ClassicAlgPolicy, bool (*&)(TGrammarManagerResult const&, TGrammarManagerResult const&), TGrammarManagerResult*>(TGrammarManagerResult*, bool (*&)(TGrammarManagerResult const&, TGrammarManagerResult const&), std::__1::iterator_traits<TGrammarManagerResult*>::difference_type, TGrammarManagerResult*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46dae7c (    0xe8) void std::__1::__sift_up[abi:v160006]<std::__1::_ClassicAlgPolicy, bool (*&)(TGrammarManagerResult const&, TGrammarManagerResult const&), TGrammarManagerResult*>(TGrammarManagerResult*, TGrammarManagerResult*, bool (*&)(TGrammarManagerResult const&, TGrammarManagerResult const&), std::__1::iterator_traits<TGrammarManagerResult*>::difference_type) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46daf64 (   0x190) unsigned int std::__1::__sort5<bool (*&)(TGrammarManagerResult const&, TGrammarManagerResult const&), TGrammarManagerResult*>(TGrammarManagerResult*, TGrammarManagerResult*, TGrammarManagerResult*, TGrammarManagerResult*, TGrammarManagerResult*, bool (*&)(TGrammarManagerResult const&, TGrammarManagerResult const&)) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46db0f4 (    0x84) TLmScore::TLmScore(SDhVoc_fake**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46db178 (    0xa0) TLmScore::getClass(char const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46db218 (    0x54) TLmScore::~TLmScore() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46db26c (   0x168) TLmScore::getLmScore(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>> const&, char const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46db3d4 (    0x9c) TLmScore::getLmScore(char const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46db470 (   0x210) TCompounderParamManager::TCompounderParamManager(TLocaleInfo&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46db680 (   0x1a4) TCompounder::TCompounder(TInputStream&, char const*, TLexicon*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46db824 (   0x2b4) TCompounder::initFugenSEndings() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46dbad8 (  0x29d4) TCompounder::loadModel(TInputStream&, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46de4ac (     0x4) TCompounder::TCompounder(TInputStream&, char const*, TLexicon*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46de4b0 (  0x1134) TCompounder::loadOptionalLists(TInputStream&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46df5e4 (   0xc40) TCompounder::loadRules(TInputStream&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46e0224 (   0x17c) TCompounder::freeMemory() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46e03a0 (   0x158) TCompounder::~TCompounder() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46e04f8 (     0x4) TCompounder::~TCompounder() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46e04fc (    0x28) TCompounder::~TCompounder() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46e0524 (   0x550) TCompounder::save(TDataManager*, TDataManager*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46e0a74 (   0x844) TCompounder::compoundGerman(std::__1::vector<std::__1::pair<TWord const*, unsigned int>, std::__1::allocator<std::__1::pair<TWord const*, unsigned int>>> const&, std::__1::vector<std::__1::pair<TWord const*, unsigned long>, std::__1::allocator<std::__1::pair<TWord const*, unsigned long>>> const&, unsigned long, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46e12b8 (   0x460) TCompounder::getBindingLetter(TWord const*, TWord const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46e1718 (   0x15c) TCompounder::getCapitalization(TWord const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46e1874 (   0x9e0) TCompounder::compoundNordic(std::__1::vector<std::__1::pair<TWord const*, unsigned int>, std::__1::allocator<std::__1::pair<TWord const*, unsigned int>>> const&, std::__1::vector<std::__1::pair<TWord const*, unsigned long>, std::__1::allocator<std::__1::pair<TWord const*, unsigned long>>> const&, unsigned long, unsigned long, TCompounder::TLanguage) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46e2254 (   0xfbc) TCompounder::compoundWithRules(std::__1::vector<std::__1::pair<TWord const*, unsigned int>, std::__1::allocator<std::__1::pair<TWord const*, unsigned int>>> const&, std::__1::vector<std::__1::pair<TWord const*, unsigned long>, std::__1::allocator<std::__1::pair<TWord const*, unsigned long>>> const&, unsigned long, unsigned long, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46e3210 (   0x8a8) TCompounder::makeResult(std::__1::vector<std::__1::pair<TWord const*, unsigned long>, std::__1::allocator<std::__1::pair<TWord const*, unsigned long>>>&, std::__1::vector<std::__1::pair<TWord const*, unsigned int>, std::__1::allocator<std::__1::pair<TWord const*, unsigned int>>> const&, std::__1::vector<std::__1::pair<TWord const*, unsigned int>, std::__1::allocator<std::__1::pair<TWord const*, unsigned int>>> const&, std::__1::vector<std::__1::pair<TWord const*, unsigned long>, std::__1::allocator<std::__1::pair<TWord const*, unsigned long>>> const&, std::__1::vector<bool, std::__1::allocator<bool>> const&, std::__1::vector<double, std::__1::allocator<double>> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46e3ab8 (  0x31c8) TCompounder::applyModelMBR(std::__1::vector<std::__1::pair<TWord const*, unsigned int>, std::__1::allocator<std::__1::pair<TWord const*, unsigned int>>> const&, std::__1::vector<TContext*, std::__1::allocator<TContext*>>&, std::__1::vector<std::__1::pair<TWord const*, unsigned long>, std::__1::allocator<std::__1::pair<TWord const*, unsigned long>>> const&, std::__1::vector<std::__1::pair<TWord const*, unsigned long>, std::__1::allocator<std::__1::pair<TWord const*, unsigned long>>>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46e6c80 (    0xb4) std::__1::vector<std::__1::pair<TWord const*, unsigned long>, std::__1::allocator<std::__1::pair<TWord const*, unsigned long>>>::reserve(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46e6d34 (    0xc4) std::__1::vector<bool, std::__1::allocator<bool>>::reserve(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46e6df8 (    0xa8) std::__1::vector<double, std::__1::allocator<double>>::reserve(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46e6ea0 (    0xa8) std::__1::vector<bool, std::__1::allocator<bool>>::push_back(bool const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46e6f48 (    0xa8) std::__1::vector<int, std::__1::allocator<int>>::reserve(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46e6ff0 (    0x2c) std::__1::vector<TContext*, std::__1::allocator<TContext*>>::resize(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46e701c (   0x110) void std::__1::vector<int, std::__1::allocator<int>>::assign<std::__1::__wrap_iter<int*>, 0>(std::__1::__wrap_iter<int*>, std::__1::__wrap_iter<int*>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46e712c (   0x608) TCompounder::applyInternal(std::__1::vector<std::__1::pair<TWord const*, unsigned int>, std::__1::allocator<std::__1::pair<TWord const*, unsigned int>>> const&, unsigned long, unsigned long, std::__1::vector<TContext*, std::__1::allocator<TContext*>>&, std::__1::vector<std::__1::pair<TWord const*, unsigned long>, std::__1::allocator<std::__1::pair<TWord const*, unsigned long>>> const&, std::__1::vector<std::__1::pair<TWord const*, unsigned long>, std::__1::allocator<std::__1::pair<TWord const*, unsigned long>>>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46e7734 (    0x2c) std::__1::vector<std::__1::pair<TWord const*, unsigned int>, std::__1::allocator<std::__1::pair<TWord const*, unsigned int>>>::resize(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46e7760 (    0x2c) std::__1::vector<std::__1::pair<TWord const*, unsigned long>, std::__1::allocator<std::__1::pair<TWord const*, unsigned long>>>::resize(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46e778c (   0x5ec) TCompounder::apply(std::__1::vector<TWord const*, std::__1::allocator<TWord const*>> const&, unsigned long, unsigned long, unsigned long, std::__1::vector<std::__1::pair<TWord const*, unsigned long>, std::__1::allocator<std::__1::pair<TWord const*, unsigned long>>>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46e7d78 (   0x1bc) TCompounder::apply(std::__1::vector<std::__1::pair<TWord const*, unsigned int>, std::__1::allocator<std::__1::pair<TWord const*, unsigned int>>> const&, unsigned long, unsigned long, unsigned long, std::__1::vector<std::__1::pair<TWord const*, unsigned long>, std::__1::allocator<std::__1::pair<TWord const*, unsigned long>>> const&, std::__1::vector<std::__1::pair<TWord const*, unsigned long>, std::__1::allocator<std::__1::pair<TWord const*, unsigned long>>>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46e7f34 (  0x15b0) TCompounder::apply(std::__1::vector<wchar_t const*, std::__1::allocator<wchar_t const*>> const&, TLattice const*, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46e94e4 (   0x1c8) createTransitionForProduction(TLattice const*, TCompoundProduction*, std::__1::vector<std::__1::pair<std::__1::pair<TWord const*, unsigned int>, bool>, std::__1::allocator<std::__1::pair<std::__1::pair<TWord const*, unsigned int>, bool>>> const&, std::__1::vector<unsigned long, std::__1::allocator<unsigned long>>&, unsigned long&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46e96ac (   0x304) TCompounder::takesFugenS(wchar_t const*, wchar_t const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46e99b0 (     0x8) TCompounder::getParamManager() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46e99b8 (     0x8) TCompounder::getType() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46e99c0 (     0x4) TCompounderParamManager::~TCompounderParamManager() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46e99c4 (    0x28) TCompounderParamManager::~TCompounderParamManager() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46e99ec (    0x84) TMbrEntry::TMbrEntry(double, std::__1::vector<int, std::__1::allocator<int>> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46e9a70 (    0x5c) TCRFModel::TCRFModel(TCompounder::TFeatureType, unsigned int, double, wchar_t const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46e9acc (   0x10c) void std::__1::vector<int, std::__1::allocator<int>>::assign<int*, 0>(int*, int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46e9bd8 (    0xec) std::__1::enable_if<__is_cpp17_forward_iterator<std::__1::__bit_iterator<std::__1::vector<bool, std::__1::allocator<bool>>, false, 0ul>>::value, void>::type std::__1::vector<bool, std::__1::allocator<bool>>::__construct_at_end<std::__1::__bit_iterator<std::__1::vector<bool, std::__1::allocator<bool>>, false, 0ul>>(std::__1::__bit_iterator<std::__1::vector<bool, std::__1::allocator<bool>>, false, 0ul>, std::__1::__bit_iterator<std::__1::vector<bool, std::__1::allocator<bool>>, false, 0ul>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46e9cc4 (   0x158) std::__1::__bit_iterator<std::__1::vector<bool, std::__1::allocator<bool>>, false, 0> std::__1::__copy_aligned[abi:v160006]<std::__1::vector<bool, std::__1::allocator<bool>>, false>(std::__1::__bit_iterator<std::__1::vector<bool, std::__1::allocator<bool>>, false, 0>, std::__1::__bit_iterator<std::__1::vector<bool, std::__1::allocator<bool>>, false, 0>, std::__1::__bit_iterator<std::__1::vector<bool, std::__1::allocator<bool>>, false, 0>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46e9e1c (   0x234) std::__1::__bit_iterator<std::__1::vector<bool, std::__1::allocator<bool>>, false, 0> std::__1::__copy_unaligned[abi:v160006]<std::__1::vector<bool, std::__1::allocator<bool>>, false>(std::__1::__bit_iterator<std::__1::vector<bool, std::__1::allocator<bool>>, false, 0>, std::__1::__bit_iterator<std::__1::vector<bool, std::__1::allocator<bool>>, false, 0>, std::__1::__bit_iterator<std::__1::vector<bool, std::__1::allocator<bool>>, false, 0>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ea050 (    0x18) std::__1::vector<double, std::__1::allocator<double>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ea068 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<double>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<double>>(std::__1::allocator<double>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ea0a0 (   0x114) std::__1::vector<TContext*, std::__1::allocator<TContext*>>::__append(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ea1b4 (    0x18) std::__1::vector<TContext*, std::__1::allocator<TContext*>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ea1cc (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<TContext*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<TContext*>>(std::__1::allocator<TContext*>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ea204 (    0x84) std::__1::vector<int, std::__1::allocator<int>>::vector(std::__1::vector<int, std::__1::allocator<int>> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ea288 (    0x18) std::__1::vector<TMbrEntry*, std::__1::allocator<TMbrEntry*>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ea2a0 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<TMbrEntry*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<TMbrEntry*>>(std::__1::allocator<TMbrEntry*>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ea2d8 (    0x64) std::__1::__tree<std::__1::__value_type<std::__1::vector<int, std::__1::allocator<int>> const, double>, std::__1::__map_value_compare<std::__1::vector<int, std::__1::allocator<int>> const, std::__1::__value_type<std::__1::vector<int, std::__1::allocator<int>> const, double>, std::__1::less<std::__1::vector<int, std::__1::allocator<int>> const>, true>, std::__1::allocator<std::__1::__value_type<std::__1::vector<int, std::__1::allocator<int>> const, double>>>::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::vector<int, std::__1::allocator<int>> const, double>, void*>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ea33c (    0x80) std::__1::__tree_iterator<std::__1::__value_type<std::__1::vector<int, std::__1::allocator<int>> const, double>, std::__1::__tree_node<std::__1::__value_type<std::__1::vector<int, std::__1::allocator<int>> const, double>, void*>*, long> std::__1::__tree<std::__1::__value_type<std::__1::vector<int, std::__1::allocator<int>> const, double>, std::__1::__map_value_compare<std::__1::vector<int, std::__1::allocator<int>> const, std::__1::__value_type<std::__1::vector<int, std::__1::allocator<int>> const, double>, std::__1::less<std::__1::vector<int, std::__1::allocator<int>> const>, true>, std::__1::allocator<std::__1::__value_type<std::__1::vector<int, std::__1::allocator<int>> const, double>>>::find<std::__1::vector<int, std::__1::allocator<int>>>(std::__1::vector<int, std::__1::allocator<int>> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ea3bc (    0x64) std::__1::__tree_iterator<std::__1::__value_type<std::__1::vector<int, std::__1::allocator<int>> const, double>, std::__1::__tree_node<std::__1::__value_type<std::__1::vector<int, std::__1::allocator<int>> const, double>, void*>*, long> std::__1::__tree<std::__1::__value_type<std::__1::vector<int, std::__1::allocator<int>> const, double>, std::__1::__map_value_compare<std::__1::vector<int, std::__1::allocator<int>> const, std::__1::__value_type<std::__1::vector<int, std::__1::allocator<int>> const, double>, std::__1::less<std::__1::vector<int, std::__1::allocator<int>> const>, true>, std::__1::allocator<std::__1::__value_type<std::__1::vector<int, std::__1::allocator<int>> const, double>>>::__lower_bound<std::__1::vector<int, std::__1::allocator<int>>>(std::__1::vector<int, std::__1::allocator<int>> const&, std::__1::__tree_node<std::__1::__value_type<std::__1::vector<int, std::__1::allocator<int>> const, double>, void*>*, std::__1::__...
                0x00000001b46ea420 (    0x98) std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<std::__1::vector<int, std::__1::allocator<int>> const, double>, std::__1::__tree_node<std::__1::__value_type<std::__1::vector<int, std::__1::allocator<int>> const, double>, void*>*, long>, bool> std::__1::__tree<std::__1::__value_type<std::__1::vector<int, std::__1::allocator<int>> const, double>, std::__1::__map_value_compare<std::__1::vector<int, std::__1::allocator<int>> const, std::__1::__value_type<std::__1::vector<int, std::__1::allocator<int>> const, double>, std::__1::less<std::__1::vector<int, std::__1::allocator<int>> const>, true>, std::__1::allocator<std::__1::__value_type<std::__1::vector<int, std::__1::allocator<int>> const, double>>>::__emplace_unique_key_args<std::__1::vector<int, std::__1::allocator<int>>, std::__1::piecewise_construct_t const&, std::__1::tuple<std::__1::vector<int, std::__1::allocator<int>> const&>, std::__1::tuple<>>(std::__1::vector<int...
                0x00000001b46ea4b8 (    0xc0) std::__1::__tree_node_base<void*>*& std::__1::__tree<std::__1::__value_type<std::__1::vector<int, std::__1::allocator<int>> const, double>, std::__1::__map_value_compare<std::__1::vector<int, std::__1::allocator<int>> const, std::__1::__value_type<std::__1::vector<int, std::__1::allocator<int>> const, double>, std::__1::less<std::__1::vector<int, std::__1::allocator<int>> const>, true>, std::__1::allocator<std::__1::__value_type<std::__1::vector<int, std::__1::allocator<int>> const, double>>>::__find_equal<std::__1::vector<int, std::__1::allocator<int>>>(std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*&, std::__1::vector<int, std::__1::allocator<int>> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ea578 (    0x88) std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::vector<int, std::__1::allocator<int>> const, double>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::vector<int, std::__1::allocator<int>> const, double>, void*>>>> std::__1::__tree<std::__1::__value_type<std::__1::vector<int, std::__1::allocator<int>> const, double>, std::__1::__map_value_compare<std::__1::vector<int, std::__1::allocator<int>> const, std::__1::__value_type<std::__1::vector<int, std::__1::allocator<int>> const, double>, std::__1::less<std::__1::vector<int, std::__1::allocator<int>> const>, true>, std::__1::allocator<std::__1::__value_type<std::__1::vector<int, std::__1::allocator<int>> const, double>>>::__construct_node<std::__1::piecewise_construct_t const&, std::__1::tuple<std::__1::vector<int, std::__1::allocator<int>> const&>, std::__1::tuple<>>(std::__1::piecewise_constru...
                0x00000001b46ea600 (    0x60) std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::vector<int, std::__1::allocator<int>> const, double>, void*>>>::operator()[abi:v160006](std::__1::__tree_node<std::__1::__value_type<std::__1::vector<int, std::__1::allocator<int>> const, double>, void*>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ea660 (   0x134) std::__1::vector<std::__1::pair<TWord const*, unsigned int>, std::__1::allocator<std::__1::pair<TWord const*, unsigned int>>>::__append(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ea794 (   0x120) std::__1::vector<std::__1::pair<TWord const*, unsigned long>, std::__1::allocator<std::__1::pair<TWord const*, unsigned long>>>::__append(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ea8b4 (    0xa0) std::__1::vector<TCompoundPath, std::__1::allocator<TCompoundPath>>::vector(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ea954 (    0x54) std::__1::vector<TCompoundPath, std::__1::allocator<TCompoundPath>>::__vallocate[abi:v160006](unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ea9a8 (    0x18) std::__1::vector<TCompoundPath, std::__1::allocator<TCompoundPath>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ea9c0 (    0x48) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<TCompoundPath>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<TCompoundPath>>(std::__1::allocator<TCompoundPath>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46eaa08 (    0x80) std::__1::vector<std::__1::pair<std::__1::pair<TWord const*, unsigned int>, bool>, std::__1::allocator<std::__1::pair<std::__1::pair<TWord const*, unsigned int>, bool>>>::vector(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46eaa88 (    0x54) std::__1::vector<std::__1::pair<std::__1::pair<TWord const*, unsigned int>, bool>, std::__1::allocator<std::__1::pair<std::__1::pair<TWord const*, unsigned int>, bool>>>::__vallocate[abi:v160006](unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46eaadc (    0x18) std::__1::vector<std::__1::pair<std::__1::pair<TWord const*, unsigned int>, bool>, std::__1::allocator<std::__1::pair<std::__1::pair<TWord const*, unsigned int>, bool>>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46eaaf4 (    0x48) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<std::__1::pair<std::__1::pair<TWord const*, unsigned int>, bool>>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<std::__1::pair<std::__1::pair<TWord const*, unsigned int>, bool>>>(std::__1::allocator<std::__1::pair<std::__1::pair<TWord const*, unsigned int>, bool>>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46eab3c (    0x18) std::__1::vector<TCompoundProduction*, std::__1::allocator<TCompoundProduction*>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46eab54 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<TCompoundProduction*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<TCompoundProduction*>>(std::__1::allocator<TCompoundProduction*>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46eab8c (    0x84) std::__1::vector<std::__1::pair<TWord const*, unsigned long>, std::__1::allocator<std::__1::pair<TWord const*, unsigned long>>>::vector(unsigned long, std::__1::pair<TWord const*, unsigned long> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46eac10 (    0x44) std::__1::vector<std::__1::pair<TWord const*, unsigned long>, std::__1::allocator<std::__1::pair<TWord const*, unsigned long>>>::__vallocate[abi:v160006](unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46eac54 (    0x18) std::__1::vector<TCRFModel const*, std::__1::allocator<TCRFModel const*>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46eac6c (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<TCRFModel const*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<TCRFModel const*>>(std::__1::allocator<TCRFModel const*>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46eaca4 (    0x90) std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> const, std::__1::pair<TRegExp const*, TRegExp const*>>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> const, std::__1::pair<TRegExp const*, TRegExp const*>>, void*>*, long> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> const, std::__1::pair<TRegExp const*, TRegExp const*>>, std::__1::__map_value_compare<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> const, std::__1::__value_type<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> const, std::__1::pair<TRegExp const*, TRegExp const*>>, std::__1::less<std::__1::basic_string<wchar_t,...
                0x00000001b46ead34 (    0x80) std::__1::less<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> const>::operator()[abi:v160006](std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> const&, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46eadb4 (    0x98) std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> const, TLmScore const*>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> const, TLmScore const*>, void*>*, long>, bool> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> const, TLmScore const*>, std::__1::__map_value_compare<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> const, std::__1::__value_type<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> const, TLmScore const*>, std::__1::less<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> const>, true>, std::__1::allocator<std:...
                0x00000001b46eae4c (    0xa0) std::__1::__tree_node_base<void*>*& std::__1::__tree<std::__1::__value_type<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> const, std::__1::pair<TRegExp const*, TRegExp const*>>, std::__1::__map_value_compare<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> const, std::__1::__value_type<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> const, std::__1::pair<TRegExp const*, TRegExp const*>>, std::__1::less<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> const>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> const, std::__1::pair<TRegExp const*, TRegExp const*>>>>::__find_equal<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wch...
                0x00000001b46eaeec (    0x88) std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> const, TLmScore const*>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> const, TLmScore const*>, void*>>>> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> const, TLmScore const*>, std::__1::__map_value_compare<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> const, std::__1::__value_type<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> const, TLmScore const*>, std::__1::less<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocato...
                0x00000001b46eaf74 (    0x60) std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> const, TLmScore const*>, void*>>>::operator()[abi:v160006](std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> const, TLmScore const*>, void*>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46eafd4 (    0x98) std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> const, std::__1::pair<TRegExp const*, TRegExp const*>>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> const, std::__1::pair<TRegExp const*, TRegExp const*>>, void*>*, long>, bool> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> const, std::__1::pair<TRegExp const*, TRegExp const*>>, std::__1::__map_value_compare<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> const, std::__1::__value_type<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> const, std::__1::pair<TRegExp const*, TRegExp const*>>, std::__1::less<std::__1:...
                0x00000001b46eb06c (    0x88) std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> const, std::__1::pair<TRegExp const*, TRegExp const*>>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> const, std::__1::pair<TRegExp const*, TRegExp const*>>, void*>>>> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> const, std::__1::pair<TRegExp const*, TRegExp const*>>, std::__1::__map_value_compare<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> const, std::__1::__value_type<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> const, std::__1::pair<TRegExp...
                0x00000001b46eb0f4 (    0x60) std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> const, std::__1::pair<TRegExp const*, TRegExp const*>>, void*>>>::operator()[abi:v160006](std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> const, std::__1::pair<TRegExp const*, TRegExp const*>>, void*>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46eb154 (    0x18) std::__1::vector<TCompounderRule const*, std::__1::allocator<TCompounderRule const*>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46eb16c (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<TCompounderRule const*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<TCompounderRule const*>>(std::__1::allocator<TCompounderRule const*>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46eb1a4 (   0x1b4) TCompounderParamManager::~TCompounderParamManager() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46eb358 (     0x4) MrecInitModule_envmgr_fileutil() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46eb35c (   0x20c) EnvMgr::EnvMgr(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46eb568 (     0x4) EnvMgr::EnvMgr(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46eb56c (    0x8c) EnvMgr::~EnvMgr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46eb5f8 (     0x4) EnvMgr::~EnvMgr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46eb5fc (    0xbc) EnvMgr::findStringIdIndex(char const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46eb6b8 (    0x64) EnvMgr::findStringId(char const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46eb71c (   0x39c) EnvMgr::addString(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ebab8 (   0x1c0) DgnCollArray<unsigned short, StringIdCollCmpWithTemp>::add(unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ebc78 (    0x88) EnvMgr::releaseString(unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ebd00 (   0x13c) DgnCollArray<unsigned short, StringIdCollCmpWithTemp>::remove(unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ebe3c (    0x14) EnvMgr::getName(unsigned short) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ebe50 (     0x8) EnvMgr::setSemanticType(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ebe58 (   0x294) EnvMgr::loadEnvMgrFromStream(DFile*, DgnStream*, unsigned int*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ec0ec (    0xe8) void readObject<DgnArray<DgnPrimFixArray<unsigned char>>>(DgnStream*, DgnArray<DgnArray<DgnPrimFixArray<unsigned char>>>&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ec1d4 (   0x494) EnvMgr::loadEnvMgrFromText(DFile*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ec668 (   0x108) EnvMgr::newEnv() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ec770 (   0x420) EnvMgr::setData(unsigned int, char const*, unsigned char const*, unsigned int, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ecb90 (   0x100) EnvMgr::loadEnvMgr(DFile*, DFileChecksums*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ecc90 (   0x3d0) EnvMgr::compact() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ed060 (   0x2bc) EnvMgr::saveEnvMgrToStream(DgnStream*, unsigned int*, bool, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ed31c (   0x314) EnvMgr::saveEnvMgrToText(DFile*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ed630 (    0xf4) EnvMgr::saveEnvMgr(DFile*, DFileChecksums*, bool, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ed724 (   0xb18) EnvMgr::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ee23c (   0x104) unsigned long sizeObject<DgnArray<DgnPrimFixArray<unsigned char>>>(DgnArray<DgnArray<DgnPrimFixArray<unsigned char>>> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ee340 (   0x138) DgnArray<DgnPrimArray<unsigned int>>::compactRemoveMatchingSuffix(DgnPrimArray<unsigned int> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ee478 (    0xc4) DgnArray<DgnArray<DgnPrimArray<unsigned int>>>::compactRemoveMatchingSuffix(DgnArray<DgnPrimArray<unsigned int>> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ee53c (    0x84) DgnArray<DgnPrimArray<unsigned int>>::compact() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ee5c0 (    0x68) DgnCollArray<unsigned short, StringIdCollCmpWithTemp>::compact() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ee628 (    0xc4) EnvMgr::verifyEnvId(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ee6ec (    0xec) EnvMgr::killEnv(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ee7d8 (    0x64) DgnArray<DgnPrimFixArray<unsigned char>>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ee83c (     0x8) EnvMgr::getTopEnvId() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ee844 (    0x50) EnvMgr::getTopEnvIdMaybeNew(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ee894 (    0x30) EnvMgr::setTopEnvId(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ee8c4 (    0x20) EnvMgr::getItemEnvId(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ee8e4 (    0x94) EnvMgr::getItemEnvIdMaybeNew(unsigned int, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ee978 (    0x58) EnvMgr::setItemEnvId(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ee9d0 (    0x9c) SetEnvIdInArray(DgnPrimArray<unsigned int>*, unsigned int, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46eea6c (    0x90) EnvMgr::getItemsWithEnv(DgnPrimArray<unsigned int>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46eeafc (    0x3c) EnvMgr::getItemPairEnvId(unsigned int, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46eeb38 (    0xbc) EnvMgr::getItemPairEnvIdMaybeNew(unsigned int, unsigned int, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46eebf4 (   0x10c) EnvMgr::setItemPairEnvId(unsigned int, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46eed00 (   0x100) EnvMgr::getItemPairsWithEnv(DgnPrimArray<unsigned int>*, DgnPrimArray<unsigned int>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46eee00 (    0xbc) EnvMgr::getData(unsigned int, char const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46eeebc (    0x30) EnvMgr::getNameIds(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46eeeec (    0x30) EnvMgr::getValues(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46eef1c (    0x6c) DgnIOwnArray<DgnPrimArray<unsigned short>*>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46eef88 (    0x64) DgnIOwnArray<DgnPrimArray<unsigned short>*>::destructAt(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46eefec (    0x34) void DgnDelete<DgnPrimArray<unsigned short>>(DgnPrimArray<unsigned short>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ef020 (    0x44) DgnArray<DgnArray<DgnPrimFixArray<unsigned char>>>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ef064 (    0x68) DgnArray<DgnArray<DgnPrimFixArray<unsigned char>>>::destructAt(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ef0cc (    0x48) DgnCollArray<unsigned short, StringIdCollCmpWithTemp>::~DgnCollArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ef114 (    0x50) DgnCollArray<unsigned short, StringIdCollCmpWithTemp>::wipeOtherArrays() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ef164 (    0xd0) DgnPrimArray<unsigned short>::searchLastOrBefore(int, int, void const*, int (*)(void const*, void const*)) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ef234 (   0x114) void readObject<DgnPrimFixArray<unsigned char>>(DgnStream*, DgnArray<DgnPrimFixArray<unsigned char>>&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ef348 (   0x1f8) DgnCollArray<unsigned short, StringIdCollCmpWithTemp>::readObject(DgnStream*, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ef540 (   0x13c) DgnCollArray<unsigned short, StringIdCollCmpWithTemp>::writeObject(DgnStream*, unsigned int&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ef67c (    0xd0) unsigned long sizeObject<DgnPrimFixArray<unsigned char>>(DgnArray<DgnPrimFixArray<unsigned char>> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ef74c (    0x9c) DgnCollArray<unsigned short, StringIdCollCmpWithTemp>::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ef7e8 (    0xf8) unsigned long sizeObject<DgnPrimArray<unsigned short>*>(DgnIOwnArray<DgnPrimArray<unsigned short>*> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ef8e0 (    0xac) DgnArray<DgnPrimArray<unsigned int>>::operator==(DgnArray<DgnPrimArray<unsigned int>> const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ef98c (     0x4) MrecInitModule_pcollmgr_word() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ef990 (     0xc) PronCollMgr::PronCollMgr(PhnMgr const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ef99c (    0x2c) PronCollMgr::~PronCollMgr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ef9c8 (    0xb8) PronCollMgr::checkSimple() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46efa80 (   0x538) PronCollMgr::loadPronCollMgrFromText(DFile*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46effb8 (   0x274) PronCollMgr::loadPronCollMgr(DFile*, DFileChecksums*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f022c (   0x304) PronCollMgr::savePronCollMgrToText(DFile*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f0530 (    0xd0) PronCollMgr::savePronCollMgr(DFile*, DFileChecksums*, bool, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f0600 (   0x29c) PronCollMgr::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f089c (    0x64) PronCollMgr::operator==(PronCollMgr const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f0900 (    0x9c) MrecInitModule_paramspec_mrecutil() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f099c (    0xa4) ParamSpec::getDescription(DgnString*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f0a40 (    0x88) ParamSpecMgr::ParamSpecMgr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f0ac8 (    0x48) ParamSpecMgr::startupParamSpecMgrs() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f0b10 (   0x2c0) ParamSpecMgr::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f0dd0 (   0x118) unsigned long sizeObject<ParamSpec*>(DgnIOwnArray<ParamSpec*> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f0ee8 (    0x10) ParamSpecMgr::getParamId(B_ParamSetType, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f0ef8 (    0x64) ParamSpecMgr::getParamIdByParamName(char const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f0f5c (    0x54) ParamSpecMgr::addParam(ParamSpec*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f0fb0 (    0xa8) ParamSpecMgr::sortParams() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f1058 (   0x914) void mrec_qsort_r<ParamSpecMgr>(void*, unsigned long, unsigned long, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f196c (    0x6c) ParamSpecMgr::getParamByParamId(unsigned short) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f19d8 (    0xec) ParamSpecMgr::getAllParamIdsSortedByName(DgnPrimArray<unsigned short>*, unsigned int, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f1ac4 (    0x10) ParamSpecMgr::getNumParamIds() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f1ad4 (   0x154) ParamSpecMgr::ParamGetDefault_bool(unsigned short, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f1c28 (    0x64) BoolParamSpec::getDefault(unsigned int, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f1c8c (   0x180) ParamSpecMgr::ParamGetDefault_int(unsigned short, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f1e0c (    0x64) IntParamSpec::getDefault(unsigned int, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f1e70 (   0x154) ParamSpecMgr::ParamGetDefault_string(unsigned short, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f1fc4 (    0x64) StringParamSpec::getDefault(unsigned int, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f2028 (   0x13c) ParamSpecMgr::ParamGetDefault_enum(unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f2164 (   0x154) ParamSpecMgr::ParamGetDefault_enumAsString(unsigned short, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f22b8 (    0xcc) EnumParamSpec::getDefaultAsString(unsigned int, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f2384 (   0x154) ParamSpecMgr::ParamGetDefault_double(unsigned short, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f24d8 (    0x64) DoubleParamSpec::getDefault(unsigned int, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f253c (    0x28) IntParamSpec::IntParamSpec(char const*, char const*, char const*, IntParamHistoryItem const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f2564 (     0x4) IntParamSpec::~IntParamSpec() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f2568 (     0x4) IntParamSpec::~IntParamSpec() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f256c (    0x44) IntParamSpec::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f25b0 (    0x4c) IntParamSpec::getDescription(DgnString*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f25fc (    0xe0) IntParamSpec::validateValue(int, unsigned int, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f26dc (    0x94) sizeObject(EnumParamHistoryItem const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f2770 (    0x28) EnumParamSpec::EnumParamSpec(char const*, char const*, char const*, EnumParamHistoryItem const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f2798 (     0x4) EnumParamSpec::~EnumParamSpec() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f279c (     0x4) EnumParamSpec::~EnumParamSpec() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f27a0 (    0x84) EnumParamSpec::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f2824 (    0xcc) EnumParamSpec::getDescription(DgnString*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f28f0 (    0xdc) EnumParamSpec::validateValue(int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f29cc (    0xa0) EnumParamSpec::convertEnumStringToInt(char const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f2a6c (    0xd0) EnumParamSpec::checkStringEnumValue(char const*, unsigned int, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f2b3c (    0x28) BoolParamSpec::BoolParamSpec(char const*, char const*, char const*, BoolParamHistoryItem const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f2b64 (     0x4) BoolParamSpec::~BoolParamSpec() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f2b68 (     0x4) BoolParamSpec::~BoolParamSpec() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f2b6c (    0x30) BoolParamSpec::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f2b9c (    0x28) DoubleParamSpec::DoubleParamSpec(char const*, char const*, char const*, DoubleParamHistoryItem const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f2bc4 (     0x4) DoubleParamSpec::~DoubleParamSpec() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f2bc8 (     0x4) DoubleParamSpec::~DoubleParamSpec() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f2bcc (    0x28) DoubleParamSpec::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f2bf4 (    0xb8) DoubleParamSpec::getDescription(DgnString*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f2cac (    0xe0) DoubleParamSpec::validateValue(double, unsigned int, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f2d8c (    0x50) StringParamSpec::StringParamSpec(char const*, char const*, char const*, StringParamHistoryItem const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f2ddc (    0x44) StringParamSpec::~StringParamSpec() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f2e20 (    0x54) StringParamSpec::~StringParamSpec() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f2e74 (    0x4c) StringParamSpec::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f2ec0 (     0x8) IntParamSpec::getType() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f2ec8 (    0x64) IntParamSpec::isPresent(unsigned int, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f2f2c (     0x8) EnumParamSpec::getType() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f2f34 (    0x64) EnumParamSpec::isPresent(unsigned int, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f2f98 (     0x8) BoolParamSpec::getType() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f2fa0 (    0x64) BoolParamSpec::isPresent(unsigned int, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f3004 (     0x8) DoubleParamSpec::getType() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f300c (    0x64) DoubleParamSpec::isPresent(unsigned int, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f3070 (     0x8) StringParamSpec::getType() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f3078 (    0x64) StringParamSpec::isPresent(unsigned int, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f30dc (    0x6c) DgnIOwnArray<ParamSpec*>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f3148 (    0x64) void DgnDelete<ParamSpec>(ParamSpec*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f31ac (   0x184) MrecInitModule_recentb_lm() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f3330 (   0x28c) RecentBuffer::RecentBuffer(unsigned int, WordList const*, LanguageModel*, LanguageModel*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f35bc (    0x54) WordLanguageModel::registerRecentBuffer(RecentBuffer*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f3610 (     0x4) Hash<WordIdPair, WordIdPair, WordIdPair, unsigned int>::~Hash() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f3614 (     0x4) RecentBuffer::RecentBuffer(unsigned int, WordList const*, LanguageModel*, LanguageModel*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f3618 (    0xd4) RecentBuffer::~RecentBuffer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f36ec (     0x4) RecentBuffer::~RecentBuffer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f36f0 (  0x16c4) RecentBuffer::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f4db4 (     0x4) RecentBuffer::verifyRB() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f4db8 (   0x100) RecentBuffer::computeAppearancesToScores(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f4eb8 (    0xd4) RecentBuffer::addWordCountUni(unsigned int, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f4f8c (   0x10c) RecentBuffer::addWordCountBi(unsigned int, unsigned int, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f5098 (    0xf4) Hash<WordIdPair, WordIdPair, WordIdPair, unsigned int>::add(WordIdPair const&, unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f518c (    0x50) Hash<WordIdPair, WordIdPair, WordIdPair, unsigned int>::remove(WordIdPair const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f51dc (   0x140) RecentBuffer::addToRecentInternal(DgnPrimArray<unsigned int> const&, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f531c (   0x2e8) RecentBuffer::getRecentScore(unsigned int, short, LMContextData const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f5604 (    0xcc) RecentBuffer::setContext(DgnPrimArray<unsigned int> const&, LMStats*, LMContextData*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f56d0 (     0xc) RecentBuffer::unsetContext(LMContextData*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f56dc (   0x170) RecentBuffer::initRecentBuffer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f584c (    0xbc) RecentBuffer::clearRecent() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f5908 (   0x15c) RecentBuffer::setWeights() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f5a64 (   0x1b4) RecentBuffer::initHeadClonesAndCommonWords() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f5c18 (   0x310) RecentBuffer::setCommonWords(DgnPrimArray<unsigned int> const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f5f28 (   0x1a8) RecentBuffer::computeRemainderScore(DgnPrimArray<unsigned int> const&, LMContextPars const&, LMContextData*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f60d0 (   0x4ac) RecentBuffer::computeRemainderScores() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f657c (  0x14d4) RecentBuffer::loadRecentBufferText(DFile*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f7a50 (   0xa68) RecentBuffer::loadRecentBufferBinary(DFile*, DFileChecksums*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f84b8 (   0x6bc) RecentBuffer::saveRecentBufferText(DFile*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f8b74 (   0x210) RecentBuffer::saveRecentBufferBinary(DFile*, DFileChecksums*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f8d84 (   0x544) RecentBuffer::loadRecentBuffer(DFile*, DFileChecksums*, bool, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f92c8 (    0x14) RecentBuffer::saveRecentBuffer(DFile*, DFileChecksums*, bool, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f92dc (   0x228) RecentBuffer::addWordId(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f9504 (   0x254) RecentBuffer::deleteWordId(unsigned int, bool*, bool*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f9758 (     0x4) RecentBuffer::recomputeRecentBufferHeadClonesAndCommonWords() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f975c (     0x4) RecentBuffer::recomputeRecentBufferRemainders() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f9760 (   0x314) RecentBuffer::addToRecent(DgnPrimArray<unsigned int> const&, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f9a74 (    0xe0) Hash<WordIdPair, WordIdPair, WordIdPair, unsigned int>::Hash(char const*, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f9b54 (    0x28) Hash<WordIdPair, WordIdPair, WordIdPair, unsigned int>::~Hash() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f9b7c (    0x40) DgnIFixArray<BucketLink<WordIdPair, unsigned int>*>::~DgnIFixArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f9bbc (    0x74) Hash<WordIdPair, WordIdPair, WordIdPair, unsigned int>::~Hash() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f9c30 (   0x110) Hash<WordIdPair, WordIdPair, WordIdPair, unsigned int>::upSize(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f9d40 (    0x64) Hash<WordIdPair, WordIdPair, WordIdPair, unsigned int>::removeBucket(BucketLink<WordIdPair, unsigned int>**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f9da4 (     0x4) MrecInitModule_varclass_pel() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46f9da8 (   0x570) VarClassMgr::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46fa318 (   0x144) VarClassMgr::saveVarClassMgr(DFile*, DFileChecksums*, bool, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46fa45c (   0x47c) VarClassMgr::saveTransforms(DFile*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46fa8d8 (   0x1f8) VarClassMgr::saveMap(DFile*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46faad0 (     0x4) MrecInitModule_sdparamsetholder_sdapi() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46faad4 (   0x214) SDParamSetHolder_NewFromFile [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46face8 (   0x118) SDParamSetHolder_Delete [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46fae00 (   0x184) MrecInitModule_wordlat_kernel() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46faf84 (    0x54) LatticeStats::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46fafd8 (    0x5c) LatticeStats::resetStats() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46fb034 (    0x90) LatticeStats::operator=(LatticeStats const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46fb0c4 (     0x4) BaseWordLatticeLC::~BaseWordLatticeLC() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46fb0c8 (     0x4) BaseWordLatticeLC::~BaseWordLatticeLC() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46fb0cc (   0x148) WordLatticeLC::WordLatticeLC(WordLatticeLC const&, bool, bool, bool, bool, bool, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46fb214 (     0x4) WordLatticeLC::~WordLatticeLC() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46fb218 (     0x4) WordLatticeLC::~WordLatticeLC() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46fb21c (    0xd8) WordLatticeLC::cmp(WordLatticeLC const&, WordLatticeLC const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46fb2f4 (    0xb8) ItemizedScores::cmp(ItemizedScores const&, ItemizedScores const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46fb3ac (    0x78) WordLatticeLC::cmpForDuplicateCheck(WordLatticeLC const&, WordLatticeLC const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46fb424 (    0x50) WordLatticeLC::cmpForSameLinkWithDifferentScoresCheck(WordLatticeLC const&, WordLatticeLC const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46fb474 (    0xa8) WordLatticeLC::cmpForMultiLinkCheck(WordLatticeLC const&, WordLatticeLC const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46fb51c (    0x60) sizeObject(WordLatticeLC const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46fb57c (     0x4) InputLatticeLC::~InputLatticeLC() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46fb580 (     0x4) InputLatticeLC::~InputLatticeLC() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46fb584 (   0x1e0) writeObject(DgnStream*, InputLatticeLC const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46fb764 (    0x60) writeObject(DgnStream*, InputLatticeArc const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46fb7c4 (   0x108) writeObject(DgnStream*, LinkSegment const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46fb8cc (   0x144) LinkSegIds::findOrAddLinkSegSeqIdFromLinkSegIds(DgnPrimArray<unsigned long long>&, HashProbeKEV<unsigned long long, DgnPrimArray<unsigned long long>, LinkSegIds>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46fba10 (    0xec) HashProbeKEV<unsigned long long, DgnPrimArray<unsigned long long>, LinkSegIds>::insert(unsigned long long, DgnPrimArray<unsigned long long> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46fbafc (    0x4c) LatticePath::isRootPath() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46fbb48 (    0x6c) LatticePath::operator==(LatticePath const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46fbbb4 (   0x100) WordLattice::WordLattice(int, unsigned int, unsigned int, unsigned short, bool, bool, bool, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46fbcb4 (     0xc) WordLattice::WordLattice(int, unsigned int, unsigned int, unsigned short, bool, bool, bool, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46fbcc0 (   0x3dc) WordLattice::WordLattice(WordLattice const*, bool, bool, bool, bool, bool, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46fc09c (    0xc4) Lattice<WordLatticeLC>::maybeCreateAndConnectLink2(unsigned int, unsigned int, WordLatticeLC const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46fc160 (     0x4) WordLattice::WordLattice(WordLattice const*, bool, bool, bool, bool, bool, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46fc164 (    0x6c) Lattice<WordLatticeLC>::cmpNodesByInLinks(unsigned int, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46fc1d0 (    0x6c) Lattice<WordLatticeLC>::cmpNodesByOutLinks(unsigned int, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46fc23c (    0x14) WordLattice::SortInLinks(DgnPrimArray<unsigned int>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46fc250 (   0x7bc) void mrec_qsort_r<InLinkICmp>(void*, unsigned long, unsigned long, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46fca0c (    0x14) WordLattice::SortOutLinks(DgnPrimArray<unsigned int>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46fca20 (   0x7bc) void mrec_qsort_r<OutLinkICmp>(void*, unsigned long, unsigned long, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46fd1dc (    0x14) WordLattice::SortNodes(DgnPrimArray<unsigned int>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46fd1f0 (    0x14) WordLattice::SortNodesCount(DgnPrimArray<unsigned int>*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46fd204 (    0x14) WordLattice::SortNodesByInLinks(DgnPrimArray<unsigned int>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46fd218 (   0x7bc) void mrec_qsort_r<NodeByInLinksICmp>(void*, unsigned long, unsigned long, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46fd9d4 (    0x14) WordLattice::SortNodesByOutLinks(DgnPrimArray<unsigned int>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46fd9e8 (   0x7bc) void mrec_qsort_r<NodeByOutLinksICmp>(void*, unsigned long, unsigned long, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46fe1a4 (    0x80) WordLattice::hasCollapsedWords() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46fe224 (   0x104) WordLattice::findOrAddLinkSegId(DgnArray<LinkSegment> const&, HashProbeKEV<unsigned long long, DgnArray<LinkSegment>, WordLattice>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46fe328 (    0xc4) HashProbeKEV<unsigned long long, DgnArray<LinkSegment>, WordLattice>::insert(unsigned long long, DgnArray<LinkSegment> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46fe3ec (    0x1c) WordLattice::findOrAddLinkSegSeqId(DgnArray<LinkSegment> const&, HashProbeKEV<unsigned long long, DgnArray<LinkSegment>, WordLattice>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46fe408 (   0xc18) WordLattice::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ff020 (   0xa60) Lattice<WordLatticeLC>::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ffa80 (   0x234) writeObject(DgnStream*, LatticeData const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ffcb4 (    0x88) void writeObject<LinkSegment>(DgnStream*, DgnArray<LinkSegment> const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b46ffd3c (   0x314) WordLattice::fillLatticeData(LatticeData*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4700050 (   0x19c) WordLattice::computeConfidencePredictorsForLinks(DgnPrimArray<unsigned int> const&, DgnPrimArray<unsigned int> const&, ScoreArray const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47001ec (   0x1d4) WordLattice::saveLattice(FileSpec const&, B_SaveResultCode*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47003c0 (    0x64) LatticeData::~LatticeData() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4700424 (    0xa4) WordLattice::fixStateIds() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47004c8 (   0x138) WordLattice::extendPath(LatticePath const&, unsigned int, unsigned int, DgnArray<DgnArray<LatticePath>> const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4700600 (   0x31c) WordLattice::makeMinimumSpanningTree(DgnArray<DgnArray<LatticePath>>*, DgnIOwnArray<DgnPriorityQueue<LatticePath>*>*, DgnPrimArray<bool>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b470091c (   0x140) WordLattice::initializeEndNodeHeap(unsigned int, DgnArray<DgnArray<LatticePath>> const&, DgnIOwnArray<DgnPriorityQueue<LatticePath>*>*, DgnPrimArray<bool> const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4700a5c (    0x64) DgnPriorityQueue<LatticePath>::push(LatticePath const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4700ac0 (   0x34c) WordLattice::nextBestPath(LatticePath const&, DgnArray<DgnArray<LatticePath>>*, DgnIOwnArray<DgnPriorityQueue<LatticePath>*>*, DgnPrimArray<bool>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4700e0c (    0x34) void DgnDelete<DgnPriorityQueue<LatticePath>>(DgnPriorityQueue<LatticePath>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4700e40 (   0x1f0) WordLattice::wordSeqPresent(LatticePath const&, unsigned int, DgnArray<DgnArray<LatticePath>> const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4701030 (   0x5b8) WordLattice::getNBestListMaybePrune(unsigned int, NBestChoiceList*, DgnPrimArray<bool>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47015e8 (    0x34) ItemizedScores::operator+=(ItemizedScores const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b470161c (    0x54) NBestChoiceList::addChoice(NBestChoice*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4701670 (    0xac) WordLattice::maybePruneToNumUniquePaths(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b470171c (    0x8c) WordLattice::getNBestList(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47017a8 (    0xd4) WordLattice::skipToNextPathWithDifferentWord(LatticePath const*, DgnArray<DgnArray<LatticePath>> const&, WordLatticeLC const**) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b470187c (    0x6c) WordLattice::getLatticeStats(unsigned int*, unsigned int*, unsigned long long*, unsigned long long*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47018e8 (    0xa4) WordLattice::resortLatticeLinks() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b470198c (   0x39c) Lattice<WordLatticeLC>::resortLinks(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4701d28 (   0x5c4) WordLattice::addSegmentations(Active const*, PhnMgr const*, PicMgr const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47022ec (   0x1f8) getPortSegments(ActiveWord*, BaseNode const*, DgnArray<LinkSegment>*, int, unsigned int, unsigned int, PicMgr const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47024e4 (    0xb4) BackwardLatticeNodeIterator<WordLatticeLC>::next() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4702598 (   0x1c0) WordLattice::computeBackwardScores(DgnPrimArray<int>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4702758 (   0x168) WordLattice::expandLMContext(unsigned int, unsigned int, int, LatticeStats*, B_LatticeLMRescoringAbortType*, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47028c0 (   0x1e8) WordLattice::getNodesToSplitForExpansion(DgnPrimArray<unsigned int>&, unsigned int, unsigned int, unsigned int*, unsigned int*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4702aa8 (   0x1d0) WordLattice::splitNodes(DgnPrimArray<unsigned int>&, unsigned long long*, unsigned long long*, unsigned long long*, unsigned long long*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4702c78 (   0x108) WordLattice::needToSplitNodeForBigramExpansion(unsigned int, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4702d80 (   0x660) WordLattice::needToSplitNodeForExpansion(unsigned int, unsigned int, unsigned int, DgnPrimArray<unsigned int>*, DgnPrimArray<bool>*, DgnPrimArray<unsigned int>*, DgnPrimArray<bool>*, unsigned int*, unsigned int*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47033e0 (   0x1c4) WordLattice::maybePred3Pred2HasDistinctScore(unsigned short, unsigned int, unsigned int, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47035a4 (   0x5d0) WordLattice::rescoreLatticeLM(SearchLMScorer*, LatticeStats*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4703b74 (   0x4ec) WordLattice::computeParseTokens(DgnPrimArray<unsigned int> const*, DgnArray<DgnArray<ParseToken>> const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4704060 (     0x4) Hash<StateIdPair, StateIdPair, StateIdPair, ParseTokenRange>::~Hash() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4704064 (     0x4) WordLattice::~WordLattice() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4704068 (    0x28) WordLattice::~WordLattice() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4704090 (    0x40) DgnArray<InputLatticeArc>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47040d0 (    0xf0) Hash<StateIdPair, StateIdPair, StateIdPair, ParseTokenRange>::add(StateIdPair const&, ParseTokenRange const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47041c0 (    0x90) Hash<StateIdPair, StateIdPair, StateIdPair, ParseTokenRange>::findBucket(StateIdPair const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4704250 (   0x110) Hash<StateIdPair, StateIdPair, StateIdPair, ParseTokenRange>::upSize(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4704360 (    0x40) DgnIFixArray<BucketLink<StateIdPair, ParseTokenRange>*>::~DgnIFixArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47043a0 (   0x170) HashProbeKEV<unsigned long long, DgnPrimArray<unsigned long long>, LinkSegIds>::upSize(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4704510 (    0x74) LinkSegIds::equalKeys(unsigned long long, DgnPrimArray<unsigned long long> const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4704584 (   0x138) HashProbeKEV<unsigned long long, DgnArray<LinkSegment>, WordLattice>::upSize(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47046bc (    0x70) WordLattice::computeHash(DgnArray<LinkSegment> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b470472c (    0xac) WordLattice::equalKeys(unsigned long long, DgnArray<LinkSegment> const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47047d8 (    0x74) WordLattice::computeHash(unsigned long long) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b470484c (    0x84) LinkSegment::computeHash(LinkSegment const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47048d0 (    0x9c) LinkSegment::operator==(LinkSegment const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b470496c (   0x15c) unsigned long sizeObject<LatticeLink<WordLatticeLC>>(DgnArray<LatticeLink<WordLatticeLC>> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4704ac8 (   0x118) DgnArray<LinkSegment>::copyArraySlice(DgnArray<LinkSegment> const&, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4704be0 (    0x40) DgnArray<LatticePath>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4704c20 (    0x64) DgnIOwnArray<DgnPriorityQueue<LatticePath>*>::destructAt(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4704c84 (    0x40) DgnIArray<LatticePath*>::~DgnIArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4704cc4 (    0x80) DgnHeap<LatticePath>::insert(LatticePath*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4704d44 (    0x8c) DgnHeap<LatticePath>::heapifyUp(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4704dd0 (    0x68) DgnPriorityQueue<LatticePath>::~DgnPriorityQueue() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4704e38 (    0x54) DgnHeap<LatticePath>::extractMin() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4704e8c (    0xe4) DgnHeap<LatticePath>::heapifyDown(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4704f70 (    0x64) DgnArray<DgnArray<LatticePath>>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4704fd4 (    0x6c) DgnIOwnArray<DgnPriorityQueue<LatticePath>*>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4705040 (    0x74) HashProbeKEV<unsigned long long, DgnPrimArray<unsigned long long>, LinkSegIds>::HashProbeKEV(char const*, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47050b4 (    0x40) DgnIArray<BaseNode*>::~DgnIArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47050f4 (    0xdc) BackwardLatticeNodeIterator<WordLatticeLC>::BackwardLatticeNodeIterator(Lattice<WordLatticeLC> const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47051d0 (    0x8c) DgnArray<CWIDAC>::DgnArray(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b470525c (   0x154) Hash<StateIdPair, StateIdPair, StateIdPair, ParseTokenRange>::Hash(char const*, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47053b0 (    0x28) Hash<StateIdPair, StateIdPair, StateIdPair, ParseTokenRange>::~Hash() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47053d8 (    0x74) Hash<StateIdPair, StateIdPair, StateIdPair, ParseTokenRange>::~Hash() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b470544c (    0xa4) Hash<StateIdPair, StateIdPair, StateIdPair, ParseTokenRange>::removeAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47054f0 (     0x4) MrecInitModule_prostats_mrecutil() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47054f4 (     0x4) MrecInitModule_hmmnet_net() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47054f8 (    0x6c) HmmNet::HmmNet(NetMgr*, CWIDAC const&, B_NetShape, B_PortStatus, B_NodeSkippingType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4705564 (    0x58) HmmNet::sizeofOutPorts(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47055bc (   0x134) HmmNet::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47056f0 (     0x8) HmmNet::appendCalculatedSegments(BaseNode const*, int, DgnIOwnArray<PelSegmentData*>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47056f8 (     0x8) HmmNet::hasSegments(BaseNode const*, int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4705700 (     0x8) HmmNet::wasEnding(BaseNode*, int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4705708 (     0x4) HmmNet::recordNodeData(DgnArray<NodeData>*, int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b470570c (     0x4) HmmNet::pushEntryScore() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4705710 (     0x8) HmmNet::hasSilSeedTime() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4705718 (     0x8) HmmNet::getSilSeedTime() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4705720 (     0x4) HmmNet::unpackSequence(Pic const*, int, Node**, Node**, B_ScoreOrder) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4705724 (     0x8) HmmNet::unpackEndSilence() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b470572c (     0x4) HmmNet::unpackOne(Pic const&, Node**, Node**, B_ScoreOrder) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4705730 (     0x4) HmmNet::unpackOneFromPicNodes(PicNode const*, unsigned int, Pic const&, Node**, Node**, B_ScoreOrder) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4705734 (     0x4) HmmNet::unpackEmptySequence(Node**, Node**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4705738 (     0x4) HmmNet::unpackFstSequence(Node**, Node**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b470573c (     0x8) HmmNet::unpackEnd(DgnArray<Pic> const&, B_ScoreOrder) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4705744 (    0xe8) HmmNet::unpackNonAcoustic() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b470582c (    0xe8) HmmNet::unpackEmbeddedFst() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4705914 (   0x100) HmmNet::unpackSilence() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4705a14 (   0x160) HmmNet::unpackNoCoart(Pic const*, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4705b74 (    0xdc) HmmNet::unpackInPort(Pic const&, Node*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4705c50 (     0x4) HmmNet::seedInPortFst(unsigned char, int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4705c54 (     0x4) HmmNet::addArc(Node const*, Node*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4705c58 (     0x4) HmmNet::preallocEndSequences(unsigned short, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4705c5c (    0x90) HmmNet::passScoresToOutPorts1(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4705cec (    0x7c) HmmNet::~HmmNet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4705d68 (    0x64) HmmNet::deleteInPorts() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4705dcc (    0x94) HmmNet::deleteOutPorts() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4705e60 (     0x4) HmmNet::~HmmNet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4705e64 (     0x4) HmmNet::~HmmNet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4705e68 (     0x8) HmmNet::addEpsilonNode() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4705e70 (    0xb8) HmmNet::initEndIndices() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4705f28 (    0x7c) HmmNet::configureOutPortsInternal(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4705fa4 (    0xa8) HmmNet::configureOutPortsExternal(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b470604c (    0x40) DgnIFixArray<BaseNode*>::~DgnIFixArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b470608c (     0x4) MrecInitModule_vgroupi_voc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4706090 (   0x268) VocGroupInfo::loadVocGroupInfo(DFile*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47062f8 (   0x11c) void readObject<DFileChecksums>(DgnStream*, DgnArray<DFileChecksums>&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4706414 (    0x70) VocGroupInfo::saveVocGroupInfo(DFile*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4706484 (     0x4) VocGroupInfo::getVocChecksums() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4706488 (     0x4) VocGroupInfo::setVocChecksums(DFileChecksums const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b470648c (    0x68) DgnArray<DFileChecksums>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47064f4 (    0x50) MrecInitLibrary_voc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4706544 (    0x28) MrecInitLibrarySet_throughVoc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b470656c (     0x4) MrecInitModule_nodenet_net() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4706570 (    0x64) NodeNet::~NodeNet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47065d4 (     0x4) NodeNet::~NodeNet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47065d8 (    0x28) NodeNet::~NodeNet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4706600 (    0x54) NodeNet::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4706654 (   0x118) unsigned long sizeObject<NodeNetNode*>(DgnIOwnArray<NodeNetNode*> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b470676c (    0x54) NodeNet::getBestScore(BaseNode const**) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47067c0 (   0x108) NodeNet::addNodesIndirect(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47068c8 (    0x94) NodeNet::preallocEndSequences(unsigned short, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b470695c (     0xc) NodeNet::fillEpsilonNode(NodeNetNode*, NodeNetNode*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4706968 (   0x354) NodeNet::unpackEpsilonNodes(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4706cbc (   0x10c) NodeNet::fillTraceNodes(unsigned int, unsigned int, Pic const*, int, B_ScoreOrder) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4706dc8 (   0x28c) NodeNet::unpackSequence(Pic const*, int, Node**, Node**, B_ScoreOrder) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4707054 (   0x100) NodeNet::unpackEndSilence() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4707154 (   0x20c) NodeNet::unpackOne(Pic const&, Node**, Node**, B_ScoreOrder) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4707360 (   0x1ec) NodeNet::unpackOneFromPicNodes(PicNode const*, unsigned int, Pic const&, Node**, Node**, B_ScoreOrder) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b470754c (    0x28) NodeNet::addArc(Node const*, Node*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4707574 (    0x90) NodeNet::addEpsilonNode() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4707604 (    0x20) NodeNet::attachInPort(unsigned char, Node*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4707624 (    0x28) TraceNodeNet::attachInPort(unsigned char, Node*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b470764c (    0xfc) NodeNet::seedEpsilonNodes(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4707748 (    0x3c) NodeNet::scoreNode(NodeNetNode*, BaseNode const*, int, int, int, int, bool*, int, int, unsigned int*, HmmNet*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4707784 (   0x2ac) NodeNet::scoreNetInternal(int, int, int, int, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4707a30 (    0xa4) NodeNet::thresholdNetInternal(int, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4707ad4 (    0x78) NodeNet::calcNumActiveNodes(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4707b4c (    0x88) TraceNodeNet::thresholdNetInternal(int, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4707bd4 (    0x68) TraceNodeNet::passScoresToOutPorts2(int, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4707c3c (   0x144) TraceNodeNet::seedEpsilonNodes(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4707d80 (    0x38) TraceNodeNet::scoreNode(NodeNetNode*, BaseNode const*, int, int, int, int, bool*, int, int, unsigned int*, HmmNet*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4707db8 (    0x40) NodeNet::newNode(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4707df8 (     0x4) NodeNet::configureOutPorts(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4707dfc (    0xc0) NodeNet::estimateActivePelsThisFrame(BitArray*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4707ebc (    0x58) TraceNodeNet::~TraceNodeNet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4707f14 (    0xac) TraceNodeNet::deleteOutPorts() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4707fc0 (     0x4) TraceNodeNet::~TraceNodeNet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4707fc4 (    0x28) TraceNodeNet::~TraceNodeNet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4707fec (    0x40) TraceNodeNet::newNode(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b470802c (   0x10c) TraceNodeNet::configureOutPorts(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4708138 (    0xb8) TraceNodeNet::sizeofOutPorts(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47081f0 (    0x28) TraceNodeNet::hasSegments(BaseNode const*, int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4708218 (     0xc) TraceNodeNet::wasEnding(BaseNode*, int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4708224 (    0x60) TraceExternalOutPort::wasEnding(int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4708284 (   0x16c) TraceNodeNet::appendCalculatedSegments(BaseNode const*, int, DgnIOwnArray<PelSegmentData*>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47083f0 (     0x8) TraceNodeNet::isTraceNet() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47083f8 (    0x78) TraceNode::TraceNode(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4708470 (    0x48) SeederStruct::SeederStruct() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47084b8 (    0x60) SeederStruct::findSeederIndex(int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4708518 (    0x6c) DgnIOwnArray<NodeNetNode*>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4708584 (    0x64) void DgnDelete<NodeNetNode>(NodeNetNode*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47085e8 (    0x3c) MrecInitLibrary_user() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4708624 (    0x2c) MrecInitLibrarySet_throughUser() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4708650 (     0x4) MrecInitModule_utbsrc_audiosrc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4708654 (    0x98) MrecInitLibrary_sigproc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47086ec (    0x28) MrecInitLibrarySet_throughSigproc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4708714 (     0x4) MrecInitModule_sddiag_sdapi() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4708718 (   0x3f0) MrecInitModule_pelsc_pel() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4708b08 (   0x39c) PelScorer::PelScorer(PelMgr const*, GenoneClassTree const*, VarClassMgr const*, FmpeMgr const*, NeuralNet const*, Imelda const*, bool, double, bool, double) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4708ea4 (     0xc) OnDemandPelScorer::OnDemandPelScorer(PelMgr const*, GenoneClassTree const*, VarClassMgr const*, FmpeMgr const*, NeuralNet const*, Imelda const*, bool, double, bool, double) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4708eb0 (   0x128) PelScorer::~PelScorer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4708fd8 (    0x34) void DgnDelete<PelScoreCache>(PelScoreCache*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b470900c (     0x4) PelScorer::~PelScorer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4709010 (     0x4) PelScorer::~PelScorer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4709014 (  0x253c) PelScorer::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b470b550 (     0x8) PelScorer::startRecordRequestedPels() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b470b558 (     0x8) PelScorer::stopRecordRequestedPels(BitArray const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b470b560 (   0x170) OnDemandPelScorer::beginPelSyncRecog(unsigned int, AdaptConfig const*, CTFTMgr const*, bool, bool, bool, double) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b470b6d0 (   0x12c) PelScorer::beginPelSyncRecogBase(unsigned int, AdaptConfig const*, CTFTMgr const*, bool, bool, bool, double, void (*)(PelScorer const*, unsigned short, unsigned int, unsigned short*, unsigned int*), int (*)(PelScorer const*, unsigned short, unsigned short const*, unsigned int*), int (*)(PelScorer const*, unsigned short, unsigned int*)) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b470b7fc (    0x58) PelScorer::beginFmpePelSyncRecog() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b470b854 (    0x84) PelScorer::beginOnlineCTPelSyncRecog(CTFTMgr const*, double) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b470b8d8 (   0x34c) PelScorer::initFeatureCache() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b470bc24 (     0x4) OnDemandPelScorer::endPelSyncRecog() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b470bc28 (    0x80) PelScorer::endPelSyncRecogBase() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b470bca8 (   0x180) PelScorer::deleteFeatureCache() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b470be28 (    0x28) PelScorer::endFmpePelSyncRecog() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b470be50 (   0x4ec) PelScorer::initFeatureCacheForSlots() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b470c33c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b470c34c (     0x8) PelScorer::setupPelFrame(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b470c354 (    0xa0) PelScorer::setupForUttAccumulate(DgnPrimArray<unsigned char> const*, PelStats*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b470c3f4 (   0x358) PelScorer::getMICFeatures(DgnPrimArray<unsigned char> const&, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b470c74c (   0x294) PelScorer::setFrameStaticsMic(unsigned int, DgnPrimArray<unsigned char> const&, DgnPrimArray<unsigned short> const&, int, int, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b470c9e0 (   0x1d8) PelScorer::setFrameStaticsNoMic(unsigned int, DgnPrimArray<unsigned char> const&, int, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b470cbb8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b470cbc8 (     0x4) OnDemandPelScorer::beginPelFrame(int, bool, DgnPrimArray<unsigned char> const*, PelStats*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b470cbcc (    0xd8) PelScorer::beginPelFrameBase(int, bool, DgnPrimArray<unsigned char> const*, PelStats*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b470cca4 (    0x8c) PelScorer::resetFeatureCache() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b470cd30 (   0x20c) PelScorer::setFrameStaticsForGenoneAdapt(unsigned short, bool, PelStats*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b470cf3c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b470cf4c (    0x10) OnDemandPelScorer::endPelFrame(int, PelStats*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b470cf5c (   0x12c) OnDemandPelScorer::getGenoneScoringFunction() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b470d088 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b470d098 (   0x214) MulTableShortListGenoneScoringFunction(PelScorer const*, unsigned short, unsigned int, unsigned short*, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b470d2ac (   0x148) MulTableGenoneScoringFunction(PelScorer const*, unsigned short, unsigned int, unsigned short*, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b470d3f4 (   0x1fc) FloatMICShortListGenoneScoringFunction(PelScorer const*, unsigned short, unsigned int, unsigned short*, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b470d5f0 (   0x128) FloatMICGenoneScoringFunction(PelScorer const*, unsigned short, unsigned int, unsigned short*, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b470d718 (   0x184) FloatShortListGenoneScoringFunction(PelScorer const*, unsigned short, unsigned int, unsigned short*, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b470d89c (    0xc0) FloatGenoneScoringFunction(PelScorer const*, unsigned short, unsigned int, unsigned short*, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b470d95c (   0x174) PackedIntMICShortListGenoneScoringFunction(PelScorer const*, unsigned short, unsigned int, unsigned short*, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b470dad0 (    0xa0) PackedIntMICGenoneScoringFunction(PelScorer const*, unsigned short, unsigned int, unsigned short*, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b470db70 (   0x194) PackedIntShortListGenoneScoringFunction(PelScorer const*, unsigned short, unsigned int, unsigned short*, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b470dd04 (    0xc0) PackedIntGenoneScoringFunction(PelScorer const*, unsigned short, unsigned int, unsigned short*, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b470ddc4 (    0xc0) QuantPerDimGenoneScoringFunction(PelScorer const*, unsigned short, unsigned int, unsigned short*, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b470de84 (    0xf0) OnDemandPelScorer::getCompScoresToPelScoreFunction() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b470df74 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b470df84 (   0x188) FloatShortListCompScoresToPelScoreFunction(PelScorer const*, unsigned short, unsigned short const*, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b470e10c (   0x150) FloatAttilaCompatibleCompScoresToPelScoreFunction(PelScorer const*, unsigned short, unsigned short const*, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b470e25c (    0xc0) FloatCompScoresToPelScoreFunction(PelScorer const*, unsigned short, unsigned short const*, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b470e31c (   0x17c) MulTableShortListCompScoresToPelScoreFunction(PelScorer const*, unsigned short, unsigned short const*, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b470e498 (    0xb4) MulTableCompScoresToPelScoreFunction(PelScorer const*, unsigned short, unsigned short const*, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b470e54c (   0x188) PackedIntShortListCompScoresToPelScoreFunction(PelScorer const*, unsigned short, unsigned short const*, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b470e6d4 (    0xc0) PackedIntCompScoresToPelScoreFunction(PelScorer const*, unsigned short, unsigned short const*, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b470e794 (   0x11c) OnDemandPelScorer::getPelScoringFunction() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b470e8b0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b470e8c0 (    0xe8) FloatMICShortListPelScoringFunction(PelScorer const*, unsigned short, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b470e9a8 (    0xd0) FloatMICPelScoringFunction(PelScorer const*, unsigned short, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b470ea78 (    0xe4) FloatShortListPelScoringFunction(PelScorer const*, unsigned short, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b470eb5c (    0xd0) FloatPelScoringFunction(PelScorer const*, unsigned short, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b470ec2c (    0xe4) MulTableShortListPelScoringFunction(PelScorer const*, unsigned short, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b470ed10 (    0xe4) MulTablePelScoringFunction(PelScorer const*, unsigned short, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b470edf4 (   0x224) PackedIntMICShortListPelScoringFunction(PelScorer const*, unsigned short, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b470f018 (   0x148) PackedIntMICPelScoringFunction(PelScorer const*, unsigned short, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b470f160 (   0x244) PackedIntShortListPelScoringFunction(PelScorer const*, unsigned short, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b470f3a4 (   0x168) PackedIntPelScoringFunction(PelScorer const*, unsigned short, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b470f50c (   0x168) QuantPerDimPelScoringFunction(PelScorer const*, unsigned short, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b470f674 (   0x7a0) PelScorer::getComponentProbs(unsigned short, DgnVector&, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b470fe14 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b470fe24 (   0x2e4) PelScorer::getPackedIntMICComponentScore(unsigned short, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4710108 (   0x258) OnDemandPelScorer::setFrameStaticsForGenone(unsigned short, PelStats*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4710360 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4710370 (   0x398) PelScorer::getTransformedFeatures_NoAdapt_Cache(unsigned short, bool, DgnPrimArray<unsigned char>*, PelStats*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4710708 (   0x2d4) PelScorer::getTransformedFeatures_Adapt_Cache(unsigned short, bool, DgnPrimArray<unsigned char>*, PelStats*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47109dc (   0x310) PelScorer::MICFeaturesFunction(DgnPrimArray<unsigned char> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4710cec (   0x150) OnDemandPelScorer::OnDemandPelScorer(PelMgr const*, GenoneClassTree const*, VarClassMgr const*, FmpeMgr const*, NeuralNet const*, Imelda const*, bool, double, bool, double) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4710e3c (    0x58) OnDemandPelScorer::~OnDemandPelScorer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4710e94 (    0x58) OnDemandPelScorer::~OnDemandPelScorer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4710eec (    0x5c) OnDemandPelScorer::~OnDemandPelScorer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4710f48 (    0x28) OnDemandPelScorer::loadFrames(int, SynchronizedArray<DgnPrimArray<unsigned char>> const*, int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4710f70 (    0x64) OnDemandPelScorer::computeScoreForActivePelsThisFrame(BitArray const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4710fd4 (   0x18c) OnDemandPelScorer::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4711160 (    0x80) OnDemandPelScorer::getPackedIntComponentScore(unsigned short, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47111e0 (    0x94) OnDemandPelScorer::getQuantPerDimComponentScore(unsigned short, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4711274 (    0xac) AlignedArray<short>::AlignedArray(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4711320 (    0x40) DgnIArray<short const*>::~DgnIArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4711360 (     0x4) MrecInitModule_frmtime_frame() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4711364 (     0x4) MrecInitModule_segment_recogctl() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4711368 (   0x1dc) Segmentation::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4711544 (    0xf8) unsigned long sizeObject<PelSegment*>(DgnIOwnArray<PelSegment*> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471163c (   0x918) MrecInitModule_leafgraph_fstgraph() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4711f54 (   0x360) TDataManager::getBoolVar(char const*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47122b4 (    0x40) TDataManager::setBoolVar(char const*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47122f4 (   0x160) TDataManager::getIntVar(char const*, int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4712454 (   0x1f8) TDataManager::setIntVar(char const*, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471264c (   0x100) TDataManager::getStringVar(char const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>&, char const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471274c (   0x21c) TDataManager::getVar(char const*, char*, unsigned long) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4712968 (   0x458) TDataManager::setVar(char const*, char const*, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4712dc0 (    0x8c) TDataSaver::~TDataSaver() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4712e4c (     0x4) TDataSaver::~TDataSaver() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4712e50 (   0x15c) TDataSaver::load(TDataManager const&, char const*, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4712fac (    0xac) TDataSaver::save(TDataManager&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4713058 (    0xa0) TDataSaver::getStringVar(char const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>&, char const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47130f8 (    0x50) TDataManager::~TDataManager() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4713148 (    0x60) TDataManager::~TDataManager() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47131a8 (     0x4) TDataManager::open() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47131ac (     0x4) TDataManager::close() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47131b0 (     0x8) TDataManager::isOpen() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47131b8 (    0x9c) std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::pair<char*, unsigned long>>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::pair<char*, unsigned long>>, void*>*, long>, bool> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::pair<char*, unsigned long>>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::pair<char*, unsigned long>>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, true>, std::__1::allocator<std::__1::...
                0x00000001b4713254 (    0x9c) MrecInitModule_snr_channel() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47132f0 (    0x38) MrecInitLibrary_audiosrc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4713328 (    0x28) MrecInitLibrarySet_throughAudiosrc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4713350 (     0x4) MrecInitModule_dmem_mrecutil() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4713354 (    0xb4) realloc_array(void*, void**, unsigned long, unsigned long, unsigned long, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4713408 (   0x130) TGrammar::TGrammar(TLocaleInfo const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4713538 (   0x108) TGrammar::addNonTerminal(wchar_t const*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4713640 (     0x4) TGrammar::TGrammar(TLocaleInfo const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4713644 (    0x74) TGrammar::~TGrammar() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47136b8 (     0x4) TGrammar::~TGrammar() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47136bc (   0x13c) TGrammar::computeDerivationForSymbol(TSymbol const*, std::__1::vector<bool, std::__1::allocator<bool>>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47137f8 (    0xf4) TGrammar::finalize() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47138ec (   0x190) std::__1::vector<bool, std::__1::allocator<bool>>::resize(unsigned long, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4713a7c (   0x1c4) TGrammar::addTerminal(wchar_t const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4713c40 (    0xd4) TGrammar::addRule(unsigned long, TSymbol const*, TSymbol const**, bool const*, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4713d14 (   0x1b4) TGrammar::getTerminals(wchar_t const*, std::__1::vector<TSymbol const*, std::__1::allocator<TSymbol const*>>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4713ec8 (   0x138) std::__1::__bit_iterator<std::__1::vector<bool, std::__1::allocator<bool>>, false, 0> std::__1::__copy_aligned[abi:v160006]<std::__1::vector<bool, std::__1::allocator<bool>>, true>(std::__1::__bit_iterator<std::__1::vector<bool, std::__1::allocator<bool>>, true, 0>, std::__1::__bit_iterator<std::__1::vector<bool, std::__1::allocator<bool>>, true, 0>, std::__1::__bit_iterator<std::__1::vector<bool, std::__1::allocator<bool>>, false, 0>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4714000 (    0x18) std::__1::vector<TSymbol*, std::__1::allocator<TSymbol*>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4714018 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<TSymbol*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<TSymbol*>>(std::__1::allocator<TSymbol*>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4714050 (    0xb4) MrecInitModule_ltf_sigproc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4714104 (    0x24) LinearTransform::LinearTransform() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4714128 (    0xec) LinearTransform::LinearTransform(LinearTransform const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4714214 (     0x4) LinearTransform::LinearTransform(LinearTransform const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4714218 (    0x44) LinearTransform::~LinearTransform() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471425c (     0x4) LinearTransform::~LinearTransform() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4714260 (    0xc8) LinearTransform::setSize(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4714328 (   0x270) LinearTransform::setTransform(DgnArray<DgnPrimArray<int>> const&, unsigned short, DgnPrimArray<int> const&, bool, unsigned int, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4714598 (   0x164) LinearTransform::verifyMatrix() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47146fc (   0x184) LinearTransform::padMatrix() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4714880 (   0x1ac) LinearTransform::getUnscaledData(DgnMatrix&, DgnVector&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4714a2c (    0x90) LinearTransform::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4714abc (    0xa8) LinearTransform::writeObject(DgnStream*, unsigned int&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4714b64 (   0x100) LinearTransform::transformMeans(DgnPrimArray<unsigned int> const&, DgnPrimArray<unsigned int>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4714c64 (   0x204) LinearTransform::doTransform(DgnPrimArray<unsigned char> const&, DgnPrimArray<unsigned char>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4714e68 (    0x30) MrecInitLibrarySet_throughFstgraph() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4714e98 (   0x130) MrecInitModule_util_mrecutil() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4714fc8 (    0x74) getShipObjectSizeDescription(char const*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471503c (     0x4) PrintSizeObjectPointerArray(unsigned int, unsigned long*, unsigned long*, unsigned long*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4715040 (    0xd0) MrecBeginningOfTime() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4715110 (    0x30) StartupMrecutil(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4715140 (   0x58c) MrecutilPrintSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47156cc (     0x4) PrintPageFaults(bool, bool, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47156d0 (   0x3f8) AppendFullMrecMachineInfo(DgnString*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4715ac8 (    0x34) RoundUpToPowerOf2(unsigned int, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4715afc (     0x4) DgnLog(double) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4715b00 (     0x4) DgnExp(double) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4715b04 (     0x8) DgnSqrt(double) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4715b0c (    0x18) SetShadowDiagnosticShowIdealizedObjectSizes() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4715b24 (    0x18) SetTrackObjectPointerAllocation() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4715b3c (     0x4) MrecInitModule_nettraces_net() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4715b40 (   0x2b4) NetNBestAlg::getNBest(unsigned int, unsigned int, int, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4715df4 (    0xfc) DgnPrimQueue<NBestQueueItem, DgnPrimStructArray<NBestQueueItem>>::enqueue(NBestQueueItem) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4715ef0 (    0x50) DgnPrimQueue<NBestQueueItem, DgnPrimStructArray<NBestQueueItem>>::dequeue() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4715f40 (    0x64) DgnPriorityQueue<NBestQueueItem>::push(NBestQueueItem const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4715fa4 (    0x80) DgnHeap<NBestQueueItem>::insert(NBestQueueItem*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4716024 (    0x6c) DgnHeap<NBestQueueItem>::heapifyUp(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4716090 (     0x4) MrecInitModule_textchan_channel() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4716094 (   0x110) MrecInitModule_model_recogctl() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47161a4 (   0x540) ModelMgr::ModelMgr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47166e4 (   0x1bc) ModelMgr::freeVoc(unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47168a0 (    0x6c) ModelMgr::startupModelMgr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471690c (  0x1c28) ModelMgr::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4718534 (    0xfc) ModelMgr::rebuildPrefilterer(unsigned short, unsigned short, unsigned short, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4718630 (    0x88) ModelMgr::rebuildAllStalePrefilterers() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47186b8 (    0x78) ModelMgr::getUserOrThrow(unsigned short) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4718730 (    0x34) void DgnDelete<User>(User*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4718764 (    0x34) void DgnDelete<Corpus>(Corpus*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4718798 (    0x44) VocOwner::~VocOwner() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47187dc (   0x55c) ModelMgr::loadVoc(DFile*, DFile*, DgnSharedMemSet*, long long, bool, bool, ProgressCallbackHandler*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4718d38 (   0x1b8) ModelMgr::checkChecksums(VocGroupInfo*, DFileChecksums const*, bool, unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4718ef0 (    0x78) ModelMgr::getVocOrThrow(unsigned short) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4718f68 (    0x34) void DgnDelete<Voc>(Voc*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4718f9c (   0x2b0) ModelMgr::saveVoc(unsigned short, FileSpec const&, FileSpec const&, B_SaveResultCode*, B_SaveOverrideFormatType, bool, ProgressCallbackHandler*, B_LMSBigramTrigramGroupingType, B_LMSQuadgramGroupingType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471924c (   0x110) ModelMgr::createWord(unsigned short, char const*, unsigned int, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471935c (   0x138) ModelMgr::deleteWordFamilyFromWordList(unsigned short, DgnPrimArray<unsigned int> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4719494 (    0xd4) ModelMgr::notifyWordFamilyDeleted(unsigned short, unsigned int, DgnPrimArray<unsigned int> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4719568 (    0xec) ModelMgr::notifyWordFamilyAdded(unsigned short, unsigned int, DgnPrimArray<unsigned int> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4719654 (   0x324) ModelMgr::notifyWordFamilyChangedProns(unsigned short, unsigned int, DgnPrimArray<unsigned int> const&, DgnPrimArray<unsigned int> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4719978 (   0x100) ModelMgr::deleteWordClientProns(unsigned short, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4719a78 (    0xc4) ModelMgr::addClientPronsAvoidDuplicates(unsigned short, unsigned int, DgnPrimArray<unsigned int>*, DgnPrimArray<unsigned int>*, DgnArray<DgnPrimArray<unsigned short>> const&, DgnPrimArray<unsigned char> const&, DgnPrimArray<unsigned char> const&, unsigned int, char const*, DgnPrimArray<unsigned int>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4719b3c (    0x34) void DgnDelete<ArcGraph>(ArcGraph*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4719b70 (    0x78) ModelMgr::getArcGraphOrThrow(unsigned short) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4719be8 (    0x64) void DgnDelete<TransducerGrammar>(TransducerGrammar*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4719c4c (     0xc) ModelMgr::getEmbeddedRecSpec(unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4719c58 (    0x18) ModelMgr::getEmbRecSpecId(unsigned short, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4719c70 (    0x6c) DgnIOwnArray<User*>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4719cdc (    0x6c) DgnIOwnArray<Prefilterer*>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4719d48 (    0x6c) DgnIOwnArray<LookaheadScorer*>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4719db4 (    0x6c) DgnIOwnArray<Voc*>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4719e20 (    0x6c) DgnIOwnArray<Corpus*>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4719e8c (    0x6c) DgnIOwnArray<ReproData*>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4719ef8 (    0x6c) DgnIOwnArray<ArcGraph*>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4719f64 (    0x6c) DgnIOwnArray<TransducerGrammar*>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4719fd0 (   0x43c) MrecInitModule_scrcache_pel() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471a40c (    0x88) PelStats::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471a494 (    0x20) PelStats::resetStats() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471a4b4 (    0x6c) PelStats::operator=(PelStats const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471a520 (    0xd4) PelStats::operator-=(PelStats const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471a5f4 (    0xd4) PelStats::operator+=(PelStats const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471a6c8 (    0x84) PelScoreCache::PelScoreCache(PelScorer*, DgnPrimArray<unsigned short> const*, DgnPrimFixArray<unsigned short> const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471a74c (    0xb0) PelScoreCache::~PelScoreCache() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471a7fc (     0x4) PelScoreCache::~PelScoreCache() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471a800 (  0x121c) PelScoreCache::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471ba1c (   0x170) PelScoreCache::beginPelScoreCacheSyncRecog(bool, bool, void (*)(PelScorer const*, unsigned short, unsigned int, unsigned short*, unsigned int*), int (*)(PelScorer const*, unsigned short, unsigned short const*, unsigned int*), int (*)(PelScorer const*, unsigned short, unsigned int*), double) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471bb8c (   0x280) PelScoreCache::cleanPelScoreCache(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471be0c (    0x20) PelScoreCache::endPelScoreCacheSyncRecog() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471be2c (   0x38c) PelScoreCache::beginPelScoreCacheFrame(int, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471c1b8 (    0xdc) PelScoreCache::scoreAllPels() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471c294 (     0x4) PelScoreCache::startRecordRequestedPels() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471c298 (     0x4) PelScoreCache::stopRecordRequestedPels(BitArray const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471c29c (   0x128) PelScoreCache::endPelScoreCacheFrame(int, PelStats*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471c3c4 (    0x64) PelScoreCache::setPelsNotScored() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471c428 (    0x64) PelScoreCache::setGensNotScored() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471c48c (    0x80) PelScoreCache::addCacheClient(void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471c50c (    0x58) PelScoreCache::removeCacheClient(void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471c564 (    0xf8) PelScoreCache::removeCacheClientOfFrame(int, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471c65c (    0x70) PelScoreCache::removeCacheClientOfFramesFromTimeOn(int, bool, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471c6cc (   0x1b0) PelScoreCache::computeGenScores(unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471c87c (   0x198) PelScoreCache::computePelScoreFromGenScores(unsigned short, unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471ca14 (   0x150) PelScoreCache::computePelScore(unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471cb64 (    0x64) PelScoreCache::computePelScoreNoCache(unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471cbc8 (    0xdc) PelScoreCache::makeBestStats() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471cca4 (   0x1d4) PelScoreCache::makePelScoreCacheData() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471ce78 (   0x600) void mrec_qsort_r<PelScoreCache>(void*, unsigned long, unsigned long, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471d478 (   0x2d4) PelScoreCache::setCacheData(PelScoreCacheData const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471d74c (     0x4) PelScoreCache::maybeDumpBestPels() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471d750 (    0x40) DgnIArray<void const*>::~DgnIArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471d790 (     0x4) MrecInitModule_bwnet_net() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471d794 (     0x8) BaumWelchNet::reverseSil(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471d79c (    0x24) BaumWelchReverseNet::reverseSil(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471d7c0 (     0x4) BaumWelchNet::~BaumWelchNet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471d7c4 (    0x28) BaumWelchNet::~BaumWelchNet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471d7ec (   0x164) BaumWelchNet::recordNodeData(DgnArray<NodeData>*, int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471d950 (   0x1ac) BaumWelchReverseNet::recordNodeData(DgnArray<NodeData>*, int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471dafc (     0x4) BaumWelchReverseNet::~BaumWelchReverseNet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471db00 (    0x28) BaumWelchReverseNet::~BaumWelchReverseNet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471db28 (   0x13c) BaumWelchReverseNet::pushEntryScore() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471dc64 (    0x40) BaumWelchNet::newNode(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471dca4 (    0x1c) BaumWelchReverseNet::scoreNode(NodeNetNode*, BaseNode const*, int, int, int, int, bool*, int, int, unsigned int*, HmmNet*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471dcc0 (     0x8) BaumWelchReverseNet::updateSilSeedTime(bool, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471dcc8 (     0x8) BaumWelchNet::isTraceNet() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471dcd0 (     0x4) InternalDisplayObjectSizes() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471dcd4 (     0x4) MrecInitModule_wpcolla_word() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471dcd8 (    0xf4) PronCmp(unsigned int, unsigned int, WordList const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471ddcc (     0xc) WordIdPronCollArray::WordIdPronCollArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471ddd8 (     0x4) WordIdPronCollArray::~WordIdPronCollArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471dddc (    0x40) WordIdPronSearchCmpFunc(void const*, void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471de1c (   0x940) void mrec_qsort_r<WordIdPronCollArray>(void*, unsigned long, unsigned long, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471e75c (     0x8) WordIdPronCollArray::removeAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471e764 (    0x68) WordIdPronCollArray::remove(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471e7cc (    0xc0) WordIdPronCollArray::add(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471e88c (   0x1ac) WordIdPronCollArray::mergeLargeSortedArray(DgnPrimArray<unsigned int> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471ea38 (   0x198) WordIdPronCollArray::mergeSmallSortedArray(DgnPrimArray<unsigned int> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471ebd0 (   0x128) WordIdPronCollArray::removeSortedArray(DgnPrimArray<unsigned int> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471ecf8 (    0xd4) WordIdPronCollArray::addArray(DgnPrimArray<unsigned int> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471edcc (    0x7c) WordIdPronCollArray::removeArray(DgnPrimArray<unsigned int> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471ee48 (   0x230) WordIdPronCollArray::getWordsWithCommonPron(unsigned int, DgnPrimArray<unsigned int>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471f078 (    0x10) WordIdPronCollArray::writeObject(DgnStream*, unsigned int&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471f088 (    0x10) WordIdPronCollArray::readObject(DgnStream*, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471f098 (    0x4c) WordIdPronCollArray::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471f0e4 (     0x4) MrecInitModule_sgpcache_kernel() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471f0e8 (   0x130) StartupSausageParamSpecMgr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471f218 (    0xb0) SausageParamSet::SausageParamSet(char const*, B_ParamSetType, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471f2c8 (     0x4) SausageParamSet::SausageParamSet(char const*, B_ParamSetType, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471f2cc (    0xa4) SausageParamSet::SausageParamSet(SausageParamSet const&, char const*, B_ParamSetType, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471f370 (    0x88) SausageParamSet::setDefaults() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471f3f8 (    0x58) SausageParamSet::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471f450 (   0x134) SausageParamSet::getBoolParameter(unsigned short, B_ParamQueryMode) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471f584 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b471f594 (   0x20c) SausageParamSet::getIntParameter(unsigned short, B_ParamQueryMode) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471f7a0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b471f7b0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b471f7c0 (   0x264) SausageParamSet::getDoubleParameter(unsigned short, B_ParamQueryMode) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471fa24 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b471fa34 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b471fa44 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b471fa54 (    0xbc) SausageParamSet::getStringParameter(unsigned short, B_ParamQueryMode) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471fb10 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b471fb20 (    0xb8) SausageParamSet::getEnumParameter(unsigned short, B_ParamQueryMode) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471fbd8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b471fbe8 (   0x10c) SausageParamSet::setBoolParameter(unsigned short, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471fcf4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b471fd04 (   0x174) SausageParamSet::setIntParameter(unsigned short, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b471fe78 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b471fe88 (   0x1e0) SausageParamSet::setDoubleParameter(unsigned short, double) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4720068 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4720078 (    0xc8) SausageParamSet::setStringParameter(unsigned short, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4720140 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4720150 (    0xc4) SausageParamSet::setEnumParameter(unsigned short, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4720214 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b4720224 (    0x44) SausageParamSet::~SausageParamSet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4720268 (    0x54) SausageParamSet::~SausageParamSet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47202bc (     0x4) MrecInitModule_sequence_net() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47202c0 (    0x28) Sequence::scoreNoSkip(BaseNode const*, bool, int, int, int, NetMgr*, int, int, unsigned int*, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47202e8 (    0x28) Sequence::scoreOneSkip(BaseNode const*, bool, int, int, int, NetMgr*, int, int, unsigned int*, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4720310 (    0x28) Sequence::scoreMultiSkip(BaseNode const*, bool, int, int, int, NetMgr*, int, int, unsigned int*, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4720338 (    0x64) Sequence::scoreNoSkipDeadSeq(BaseNode const*, bool, int, int, int, NetMgr*, int, int, unsigned int*, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b472039c (    0x64) Sequence::scoreOneSkipDeadSeq(BaseNode const*, bool, int, int, int, NetMgr*, int, int, unsigned int*, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4720400 (    0x4c) Sequence::scoreMultiSkipDeadSeq(BaseNode const*, bool, int, int, int, NetMgr*, int, int, unsigned int*, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b472044c (    0x34) Sequence::calcNumActiveNodes(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4720480 (    0x28) Sequence::scoreNoSkipNBest(BaseNode const*, bool, int, int, int, NetMgr*, int, int, unsigned int*, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47204a8 (    0x28) Sequence::scoreOneSkipNBest(BaseNode const*, bool, int, int, int, NetMgr*, int, int, unsigned int*, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47204d0 (    0x28) Sequence::scoreMultiSkipNBest(BaseNode const*, bool, int, int, int, NetMgr*, int, int, unsigned int*, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47204f8 (    0x80) Sequence::scoreNoSkipDeadSeqNBest(BaseNode const*, bool, int, int, int, NetMgr*, int, int, unsigned int*, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4720578 (    0x64) Sequence::scoreOneSkipDeadSeqNBest(BaseNode const*, bool, int, int, int, NetMgr*, int, int, unsigned int*, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47205dc (    0x4c) Sequence::scoreMultiSkipDeadSeqNBest(BaseNode const*, bool, int, int, int, NetMgr*, int, int, unsigned int*, unsigned int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4720628 (    0x4c) Sequence::getBestScore(BaseNode const**) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4720674 (    0x78) sizeObject(Sequence const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47206ec (     0x4) MrecInitModule_pelsegment_kernel() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47206f0 (    0x10) sizeObject(PelSegment const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4720700 (     0x4) MrecInitModule_dfstream_dfutil() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4720704 (   0x3cc) DgnFileStream::DgnFileStream(B_DgnStreamOpenMode, B_DgnStreamFileType, FileSpec const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4720ad0 (     0x4) DgnFileStream::DgnFileStream(B_DgnStreamOpenMode, B_DgnStreamFileType, FileSpec const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4720ad4 (    0xb8) DgnFileStream::~DgnFileStream() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4720b8c (     0x4) DgnFileStream::~DgnFileStream() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4720b90 (    0x28) DgnFileStream::~DgnFileStream() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4720bb8 (   0x530) DgnFileStream::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47210e8 (    0xf8) DgnFileStream::seekFromBeg(unsigned long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47211e0 (    0xfc) DgnFileStream::seekToEnd() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47212dc (    0xac) DgnFileStream::tell() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4721388 (    0xd0) DgnFileStream::basicTell() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4721458 (    0x8c) DgnFileStream::tell32() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47214e4 (     0x8) DgnFileStream::eof() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47214ec (    0xbc) DgnFileStream::peekForChar() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47215a8 (    0xec) DgnFileStream::fillInputBuffer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4721694 (   0x23c) DgnFileStream::readWithMode(char*, unsigned int, B_DgnStreamReadMode) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47218d0 (   0x110) DgnFileStream::basicRead(char*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47219e0 (   0x198) DgnFileStream::writeBytes(char const*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4721b78 (    0x7c) DgnFileStream::flush() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4721bf4 (    0x9c) MrecInitModule_channel_channel() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4721c90 (     0x4) MrecInitModule_spspec_sigproc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4721c94 (    0x2c) FeatureGeneratorSpec::FeatureGeneratorSpec() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4721cc0 (     0x4) FeatureGeneratorSpec::~FeatureGeneratorSpec() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4721cc4 (   0x108) FeatureGeneratorSpec::writeObject(DgnStream*, unsigned int&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4721dcc (    0x10) writeObject(DgnStream*, FeatureGeneratorSpec const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4721ddc (    0x10) sizeObject(FeatureGeneratorSpec const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4721dec (    0x10) FeatureFilterSpec::FeatureFilterSpec() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4721dfc (    0x98) FeatureFilterSpec::writeObject(DgnStream*, unsigned int&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4721e94 (    0x10) writeObject(DgnStream*, FeatureFilterSpec const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4721ea4 (    0x38) sizeObject(FeatureFilterSpec const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4721edc (     0x8) FrameDecimatorSpec::FrameDecimatorSpec() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4721ee4 (     0x4) writeObject(DgnStream*, FrameDecimatorSpec const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4721ee8 (    0x10) sizeObject(FrameDecimatorSpec const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4721ef8 (    0x50) FeatureSelectorSpec::FeatureSelectorSpec() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4721f48 (     0x4) FeatureSelectorSpec::FeatureSelectorSpec() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4721f4c (    0x68) FeatureSelectorSpec::writeObject(DgnStream*, unsigned int&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4721fb4 (    0x10) writeObject(DgnStream*, FeatureSelectorSpec const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4721fc4 (    0x30) sizeObject(FeatureSelectorSpec const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4721ff4 (    0x68) FeatureScaleSpec::writeObject(DgnStream*, unsigned int&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b472205c (    0x54) FeatureScaleSpec::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47220b0 (    0x10) writeObject(DgnStream*, FeatureScaleSpec const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47220c0 (     0x4) sizeObject(FeatureScaleSpec const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47220c4 (    0x9c) void writeObject<WarpCoordinates>(DgnStream*, DgnArray<WarpCoordinates> const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4722160 (    0x38) ChanStatsSpec::ChanStatsSpec() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4722198 (    0x58) ChanStatsSpec::~ChanStatsSpec() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47221f0 (     0x4) ChanStatsSpec::~ChanStatsSpec() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47221f4 (   0x128) ChanStatsSpec::writeObject(DgnStream*, unsigned int&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b472231c (    0x9c) void writeObject<WarpChoice>(DgnStream*, DgnArray<WarpChoice> const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47223b8 (    0xc0) ChanStatsSpec::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4722478 (   0x114) unsigned long sizeObject<WarpChoice>(DgnArray<WarpChoice> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b472258c (    0x10) writeObject(DgnStream*, ChanStatsSpec const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b472259c (     0x4) sizeObject(ChanStatsSpec const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47225a0 (    0x68) DgnArray<WarpChoice>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4722608 (     0x4) MrecInitModule_tranutil_kernel() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b472260c (    0x54) MrecInitLibrary_net() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4722660 (    0x2c) MrecInitLibrarySet_throughNet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b472268c (  0x1490) TItnParamManager::TItnParamManager(TLocaleInfo&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4723b1c (     0x4) TItnParamManager::TItnParamManager(TLocaleInfo&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4723b20 (    0xa0) TItnParamManager::initialize(TInputStream&, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4723bc0 (    0x70) TItnParamManager::initializeParamConfigs() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4723c30 (     0x4) TItnParamManager::~TItnParamManager() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4723c34 (    0x28) TItnParamManager::~TItnParamManager() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4723c5c (   0xcc4) TItnParamManager::~TItnParamManager() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4724920 (    0x9c) MrecInitModule_history_net() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47249bc (    0x2c) sizeObject(HistContents const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47249e8 (    0x10) sizeObject(Direction const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47249f8 (    0x68) HistoryMgr::HistoryMgr(Direction) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4724a60 (     0x4) HashKEVTLT<unsigned int, History const*, HistoryMgr>::~HashKEVTLT() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4724a64 (     0x4) HistoryMgr::HistoryMgr(Direction) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4724a68 (    0x48) HistoryMgr::~HistoryMgr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4724ab0 (     0x4) HistoryMgr::~HistoryMgr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4724ab4 (   0x3ac) HistoryMgr::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4724e60 (    0xf8) unsigned long sizeObject<History>(DgnArray<History> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4724f58 (    0x5c) HashKEVTLT<unsigned int, History const*, HistoryMgr>::releaseAllQuick() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4724fb4 (     0xc) HistoryMgr::beginHistoryMgrSyncRecog() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4724fc0 (     0xc) HistoryMgr::endHistoryMgrSyncRecog() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4724fcc (   0x114) HistoryMgr::copyAndOverrideToBigramHistories() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47250e0 (   0x120) HashKEVTLT<unsigned int, History const*, HistoryMgr>::add(unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4725200 (   0x10c) HistoryMgr::extendHistory(unsigned int, CWIDAC const&, bool, int, int, bool*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b472530c (   0x114) HistoryMgr::getForwardContents(unsigned int, DgnArray<HistContents>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4725420 (    0xe0) HashKEVTLT<unsigned int, History const*, HistoryMgr>::HashKEVTLT(char const*, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4725500 (    0x28) HashKEVTLT<unsigned int, History const*, HistoryMgr>::~HashKEVTLT() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4725528 (    0x74) HashKEVTLT<unsigned int, History const*, HistoryMgr>::computeDepth() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b472559c (   0x164) HashKEVTLT<unsigned int, History const*, HistoryMgr>::initBuckets() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4725700 (    0x54) DgnFixArray<DgnIFixArray<BucketLinkKEVTLT<unsigned int>*>>::allocElts(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4725754 (    0x64) DgnFixArray<DgnIFixArray<BucketLinkKEVTLT<unsigned int>*>>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47257b8 (    0x40) DgnIFixArray<BucketLinkKEVTLT<unsigned int>*>::~DgnIFixArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47257f8 (    0x40) DgnArray<History>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4725838 (    0x78) HashKEVTLT<unsigned int, History const*, HistoryMgr>::~HashKEVTLT() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47258b0 (    0xc0) HashKEVTLT<unsigned int, History const*, HistoryMgr>::removeAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4725970 (    0xbc) unsigned long sizeObject<DgnIFixArray<BucketLinkKEVTLT<unsigned int>*>>(DgnFixArray<DgnIFixArray<BucketLinkKEVTLT<unsigned int>*>> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4725a2c (   0x148) HashKEVTLT<unsigned int, History const*, HistoryMgr>::upSize(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4725b74 (    0x90) DgnFixArray<DgnIFixArray<BucketLinkKEVTLT<unsigned int>*>>::copyArraySlice(DgnFixArray<DgnIFixArray<BucketLinkKEVTLT<unsigned int>*>> const&, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4725c04 (    0xdc) HashKEVTLT<unsigned int, History const*, HistoryMgr>::findBucket(History const* const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4725ce0 (    0x64) History::operator==(History const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4725d44 (    0x9c) MrecInitModule_crumb_kernel() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4725de0 (   0x2c8) CWIDCrumbWACS::CWIDCrumbWACS(CWIDAC const&, short, HistoryAndBigScore const&, DgnArray<HistoryAndBigScore> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47260a8 (    0x5c) DgnArray<HistoryAndBigScore>::find(HistoryAndBigScore const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4726104 (   0x504) CWIDCrumbWACS::mergeCrumb(CWIDCrumbWACS const&, HistoryMgr const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4726608 (    0x58) CWIDCrumbWACS::updateCrumbHistory(unsigned int, HistoryMgr const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4726660 (    0x68) sizeObject(CWIDCrumbWACS const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47266c8 (    0x10) sizeObject(HistoryAndBigScore const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47266d8 (    0x3c) CWIDCrumbWACSFrame::~CWIDCrumbWACSFrame() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4726714 (     0x4) CWIDCrumbWACSFrame::~CWIDCrumbWACSFrame() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4726718 (    0x54) CWIDCrumbWACSFrame::copy(CWIDCrumbWACSFrame const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b472676c (   0x1a8) CWIDCrumbWACSFrame::mergeCrumbs(HistoryMgr const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4726914 (   0x100) Hash<CWIDAC, CWIDAC, CWIDAC, unsigned int>::add(CWIDAC const&, unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4726a14 (    0xcc) DgnArray<CWIDCrumbWACS>::removeIndex(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4726ae0 (   0xa5c) void mrec_qsort_r<CWIDCrumbWACS>(void*, unsigned long, unsigned long, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b472753c (    0x74) CWIDCrumbWACSFrame::updateCrumbHistory(unsigned int, HistoryMgr const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47275b0 (    0xa8) CWIDCrumbWACSFrame::addCrumbWACSRecord(CWIDAC const&, int, HistoryAndBigScore const&, DgnArray<HistoryAndBigScore> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4727658 (   0x344) CWIDCrumbWACSFrame::addCrumbWACSRecordEFst(CWIDAC const&, int, HistoryAndBigScore const&, DgnArray<HistoryAndBigScore> const&, unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b472799c (    0xc8) CWIDCrumbWACSFrame::maybeBuildHashTable(MemChunkRegion*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4727a64 (    0xc0) CWIDCrumbWACSFrame::setTopChoiceWord(HistoryMgr const*, unsigned int, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4727b24 (    0xa4) CWIDCrumbWACSFrame::getHistScore(HistoryMgr const*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4727bc8 (   0x2b8) CWIDCrumbWACSFrame::getFrameInfo(bool, DgnArray<CWIDAC>*, DgnPrimArray<int>*, DgnArray<AcousticContextScores>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4727e80 (    0xa8) CWIDCrumbWACSFrame::getAccumHistScore(HistoryMgr const*, unsigned int, unsigned short) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4727f28 (    0x94) CWIDCrumbWACSFrame::getHistory(CWIDAC const&, unsigned short) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4727fbc (    0x90) sizeObject(CWIDCrumbWACSFrame const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b472804c (   0x140) unsigned long sizeObject<CWIDCrumbWACS>(DgnArray<CWIDCrumbWACS> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b472818c (    0x9c) CWIDCrumbBank::CWIDCrumbBank(HistoryMgr const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4728228 (     0x4) CWIDCrumbBank::CWIDCrumbBank(HistoryMgr const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b472822c (   0x114) CWIDCrumbBank::copy(CWIDCrumbBank const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4728340 (    0x84) CWIDCrumbBank::ensureCrumbFrame(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47283c4 (    0x7c) CWIDCrumbBank::getCrumbFrame(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4728440 (    0x20) CWIDCrumbBank::getCrumbFrame(int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4728460 (    0x54) CWIDCrumbBank::setFirstFrame(Direction, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47284b4 (    0x18) CWIDCrumbBank::getLastFrame() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47284cc (    0x28) CWIDCrumbBank::setBestAccumScore(int, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47284f4 (    0x44) CWIDCrumbBank::endCrumbFrame(int, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4728538 (    0x58) CWIDCrumbBank::addCrumbWACSRecord(int, CWIDAC const&, int, HistoryAndBigScore const&, DgnArray<HistoryAndBigScore> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4728590 (    0x68) CWIDCrumbBank::addCrumbWACSRecordEFst(int, CWIDAC const&, int, HistoryAndBigScore const&, DgnArray<HistoryAndBigScore> const&, unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47285f8 (    0x34) CWIDCrumbBank::addFinalSilHABS(int, CWIDAC const&, unsigned int, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b472862c (    0x64) CWIDCrumbBank::addZeroFrameFinalSilHABS(int, CWIDAC const&, unsigned int, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4728690 (    0xc8) CWIDCrumbBank::setTopChoiceHistory(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4728758 (   0x1e0) CWIDCrumbBank::setTopChoiceHistoryExtendToEnd(unsigned int, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4728938 (    0x30) CWIDCrumbBank::getRightSilenceInfo(int, unsigned int*, int*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4728968 (    0x64) CWIDCrumbBank::getFrameInfo(bool, int, DgnArray<CWIDAC>*, DgnPrimArray<int>*, DgnArray<AcousticContextScores>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47289cc (    0xac) CWIDCrumbBank::getScore(CWIDAC const&, int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4728a78 (   0x190) CWIDCrumbBank::getFrameInfoForBTLat(bool, int, DgnArray<CWIDAC>*, DgnPrimArray<int>*, DgnArray<AcousticContextScores>*, DgnPrimArray<bool>*, int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4728c08 (    0x24) CWIDCrumbBank::hasRightSilenceCrumb(int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4728c2c (    0x90) CWIDCrumbBank::getAccumHistScore(int, unsigned int, unsigned short) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4728cbc (    0x8c) CWIDCrumbBank::getHistory(int, CWIDAC const&, unsigned short) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4728d48 (    0xa0) CWIDCrumbBank::getSilHistory(int, CWIDAC const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4728de8 (    0x24) CWIDCrumbBank::getFinalSilFrameScore(int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4728e0c (    0x48) CWIDCrumbBank::mergeCrumbs() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4728e54 (    0x58) CWIDCrumbBank::updateCrumbHistory(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4728eac (   0x358) CWIDCrumbBank::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4729204 (    0xf8) unsigned long sizeObject<CWIDCrumbWACSFrame*>(DgnIOwnArray<CWIDCrumbWACSFrame*> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47292fc (    0x50) CWIDACRecogGermIterator::getCurrentGermInternal(RecogGerm*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b472934c (     0x4) CWIDACRecogGermIterator::~CWIDACRecogGermIterator() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4729350 (    0x28) CWIDACRecogGermIterator::~CWIDACRecogGermIterator() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4729378 (    0x44) DgnArray<CWIDCrumbWACS>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47293bc (    0x78) DgnArray<CWIDCrumbWACS>::destructAt(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4729434 (   0x134) DgnArray<CWIDCrumbWACS>::copyArraySlice(DgnArray<CWIDCrumbWACS> const&, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4729568 (    0x9c) CWIDCrumbWACS::CWIDCrumbWACS(CWIDCrumbWACS const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4729604 (    0xf8) DgnArray<HistoryAndBigScore>::copyArraySlice(DgnArray<HistoryAndBigScore> const&, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47296fc (   0x11c) Hash<CWIDAC, CWIDAC, CWIDAC, unsigned int>::Hash(char const*, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4729818 (     0x4) Hash<CWIDAC, CWIDAC, CWIDAC, unsigned int>::~Hash() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b472981c (    0x28) Hash<CWIDAC, CWIDAC, CWIDAC, unsigned int>::~Hash() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4729844 (    0x40) DgnIFixArray<BucketLink<CWIDAC, unsigned int>*>::~DgnIFixArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4729884 (    0x74) Hash<CWIDAC, CWIDAC, CWIDAC, unsigned int>::~Hash() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47298f8 (    0x94) Hash<CWIDAC, CWIDAC, CWIDAC, unsigned int>::removeAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b472998c (   0x110) Hash<CWIDAC, CWIDAC, CWIDAC, unsigned int>::upSize(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4729a9c (    0x80) CWIDCrumbWACS::operator=(CWIDCrumbWACS const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4729b1c (    0x64) DgnIOwnArray<CWIDCrumbWACSFrame*>::destructAt(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4729b80 (     0x4) MrecInitModule_collmgr_word() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4729b84 (    0x70) writeObject(DgnStream*, Uns8SpecialMapItem const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4729bf4 (    0x70) readObject(DgnStream*, Uns8SpecialMapItem&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4729c64 (    0x70) writeObject(DgnStream*, Uns32SpecialMapItem const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4729cd4 (    0x70) readObject(DgnStream*, Uns32SpecialMapItem&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4729d44 (   0x318) CollMgr::CollMgr(CharInfo const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b472a05c (     0x4) CollMgr::CollMgr(CharInfo const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b472a060 (    0xd4) CollMgr::~CollMgr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b472a134 (     0x4) CollMgr::~CollMgr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b472a138 (   0x170) CollMgr::flushPendingCollation(DgnString const&, DgnString const&, DgnArray<Uns8SpecialMapItem>*, DgnArray<Uns8SpecialMapItem>*, DgnArray<Uns8SpecialMapItem>*, DgnPrimArray<unsigned char>*, DgnArray<Uns32SpecialMapItem>*, DgnArray<Uns32SpecialMapItem>*, DgnArray<Uns32SpecialMapItem>*, Uns32OneToOneMap*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b472a2a8 (   0x9e8) CollMgr::newUns8Collation(char const*, DgnArray<Uns8SpecialMapItem> const&, DgnArray<Uns8SpecialMapItem> const&, DgnArray<Uns8SpecialMapItem> const&, DgnPrimArray<unsigned char> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b472ac90 (   0xcc8) CollMgr::newUns32Collation(char const*, DgnArray<Uns32SpecialMapItem> const&, DgnArray<Uns32SpecialMapItem> const&, DgnArray<Uns32SpecialMapItem> const&, Uns32OneToOneMap const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b472b958 (  0x1904) CollMgr::loadCollMgrFromText(DFile*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b472d25c (    0x5c) checkValidCollName(char const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b472d2b8 (    0x74) CollMgr::lookupCollation(char const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b472d32c (   0x2a4) CollMgr::newTwoLevelCollation(char const*, unsigned short, unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b472d5d0 (   0x29c) CollMgr::loadCollMgr(DFile*, DFileChecksums*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b472d86c (   0x114) void readObject<DgnArray<Uns8SpecialMapItem>>(DgnStream*, DgnArray<DgnArray<Uns8SpecialMapItem>>&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b472d980 (   0x12c) void readObject<Uns32OneToOneMap>(DgnStream*, DgnArray<Uns32OneToOneMap>&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b472daac (   0x114) void readObject<DgnArray<Uns32SpecialMapItem>>(DgnStream*, DgnArray<DgnArray<Uns32SpecialMapItem>>&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b472dbc0 (   0xc84) CollMgr::saveCollMgrToText(DFile*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b472e844 (    0x68) CollMgr::getCollationName(unsigned short) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b472e8ac (   0x1d4) CollMgr::saveCollMgr(DFile*, DFileChecksums*, bool, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b472ea80 (    0x88) void writeObject<DgnArray<Uns8SpecialMapItem>>(DgnStream*, DgnArray<DgnArray<Uns8SpecialMapItem>> const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b472eb08 (    0x9c) void writeObject<Uns32OneToOneMap>(DgnStream*, DgnArray<Uns32OneToOneMap> const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b472eba4 (    0x88) void writeObject<DgnArray<Uns32SpecialMapItem>>(DgnStream*, DgnArray<DgnArray<Uns32SpecialMapItem>> const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b472ec2c (  0x1058) CollMgr::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b472fc84 (    0xf0) unsigned long sizeObject<DgnArray<Uns8SpecialMapItem>>(DgnArray<DgnArray<Uns8SpecialMapItem>> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b472fd74 (   0x11c) unsigned long sizeObject<Uns32OneToOneMap>(DgnArray<Uns32OneToOneMap> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b472fe90 (    0xf0) unsigned long sizeObject<DgnArray<Uns32SpecialMapItem>>(DgnArray<DgnArray<Uns32SpecialMapItem>> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b472ff80 (   0x2a8) CollMgr::verifyCollId(unsigned short, B_CollUserDefinedType, B_CollCollationType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4730228 (     0x8) CollMgr::getActiveCollations() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4730230 (    0x9c) CollMgr::collationCanGetWordsWithPrefix(unsigned short) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47302cc (   0x3f4) CollMgr::collStrcmpUns8(unsigned short, unsigned char const*, unsigned char const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47306c0 (    0x5c) Uns32OneToOneMap::getUns32OneToOne(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473071c (   0x180) CollMgr::collTransformUns32(unsigned short, unsigned int const*, unsigned int*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473089c (   0x13c) CollMgr::collTransformUns8(unsigned short, unsigned char const*, unsigned char*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47309d8 (   0x41c) CollMgr::collPrefixcmpUns8(unsigned short, unsigned char const*, unsigned char const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4730df4 (    0x40) Uns32OneToOneMap::~Uns32OneToOneMap() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4730e34 (    0x64) DgnArray<DgnArray<Uns8SpecialMapItem>>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4730e98 (    0x64) DgnArray<Uns32OneToOneMap>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4730efc (    0x64) DgnArray<DgnArray<Uns32SpecialMapItem>>::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4730f60 (    0x40) DgnArray<Uns8SpecialMapItem>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4730fa0 (    0x40) DgnArray<Uns32SpecialMapItem>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4730fe0 (    0xa8) void readObject<Uns8SpecialMapItem>(DgnStream*, DgnArray<Uns8SpecialMapItem>&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4731088 (    0xa8) void readObject<Uns32SpecialMapItem>(DgnStream*, DgnArray<Uns32SpecialMapItem>&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4731130 (    0x88) void writeObject<Uns8SpecialMapItem>(DgnStream*, DgnArray<Uns8SpecialMapItem> const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47311b8 (    0x88) void writeObject<Uns32SpecialMapItem>(DgnStream*, DgnArray<Uns32SpecialMapItem> const&, unsigned int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4731240 (    0x6c) unsigned long sizeObject<Uns32SpecialMapItem>(DgnArray<Uns32SpecialMapItem> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47312ac (     0x4) MrecInitLibrary_sxprintf() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47312b0 (     0x4) xalogString(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47312b4 (     0x4) xascreenString(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47312b8 (     0x4) MrecInitModule_pitchtrk_sigproc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47312bc (   0x1f8) MrecInitModule_treepref_prefilt() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47314b4 (    0xac) TreePrefilterer::TreePrefilterer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4731560 (     0x4) TreePrefilterer::TreePrefilterer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4731564 (    0x9c) TreePrefilterer::~TreePrefilterer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4731600 (     0x4) TreePrefilterer::~TreePrefilterer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4731604 (    0x28) TreePrefilterer::~TreePrefilterer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473162c (   0x888) TreePrefilterer::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4731eb4 (    0xec) unsigned long sizeObject<TreePhoneRec>(DgnArray<TreePhoneRec> const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4731fa0 (    0x18) TreePrefilterer::setPrefiltererBuildParamSet(PrefiltererBuildParamSet const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4731fb8 (    0x20) TreePrefilterer::getUserId() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4731fd8 (     0x8) TreePrefilterer::getPrefiltererStats(PelStats*, PrefStats*, PelStats*, PrefStats*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4731fe0 (    0xc8) LexTreeNetScorer::getPrefiltererStats(PelStats*, PrefStats*, PelStats*, PrefStats*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47320a8 (     0x8) TreePrefilterer::setSynchronousPrefiltererStats() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47320b0 (    0x8c) LexTreeNetScorer::setSynchronousPrefiltererStats() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473213c (     0x8) TreePrefilterer::getCurFrame() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4732144 (     0x8) TreePrefilterer::needLookaheadToScoreFrame(int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473214c (    0xb0) TreePrefilterer::scoreFrame(int, DgnPrimArray<unsigned char> const&, ScoreFixArray const&, ReturnListQueue*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47321fc (    0xb0) TreePrefilterer::completeUtterance(int, ReturnListQueue*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47322ac (   0x318) TreePrefilterer::scoreFramesUntil(int, SynchronizedArray<DgnPrimArray<unsigned char>> const*, SynchronizedArray<ScoreFixArray> const*, ReturnListQueue*, int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47325c4 (     0x8) TreePrefilterer::initPrefilterer(User const*, unsigned short, unsigned int, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47325cc (   0x23c) TreePrefilterer::initPrefilterer(User const*, unsigned short, unsigned int, bool, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4732808 (   0xf60) TreePrefilterer::populateUsingCwidList(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4733768 (     0x8) TreePrefilterer::setInjectCwids(DgnArray<DgnPrimArray<unsigned int>> const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4733770 (    0x14) TreePrefilterer::makePelScoreCacheData() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4733784 (    0x14) TreePrefilterer::setPelScoreCacheData(PelScoreCacheData const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4733798 (    0xa0) TreePrefilterer::beginPrefSyncRecog(bool, unsigned int, unsigned int, CTFTMgr const*, PrefiltererSearchParamSet const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4733838 (    0x5c) TreePrefilterer::endPrefSyncRecog() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4733894 (   0x10c) TreePrefilterer::getPhoneStringFromCWID(unsigned int, DgnString*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47339a0 (   0x2a8) TreePrefilterer::checkAndAddEndingWords(unsigned int, DgnPrimArray<unsigned int> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4733c48 (    0x70) TreePrefilterer::setAllPhoneRecBestLms() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4733cb8 (    0x8c) TreePrefilterer::calcBestLm(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4733d44 (   0x1bc) TreePrefilterer::computePicModelIds(Voc*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4733f00 (   0x82c) void mrec_qsort_r<SortCwidsByWordEndScope>(void*, unsigned long, unsigned long, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473472c (   0x198) LexTreePathIter::nextStandard() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47348c4 (    0x3c) LexTreePathIter::~LexTreePathIter() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4734900 (   0x190) TreePrefilterer::setupAllEffectiveLms() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4734a90 (   0x104) TreePrefilterer::setupEffectiveLms(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4734b94 (   0x118) LexTreePathIter::LexTreePathIter(DgnArray<TreePhoneRec> const*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4734cac (    0x10) TreePrefilterer::getPrefiltererBuildParamSet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4734cbc (     0x8) TreePrefilterer::isScoring() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4734cc4 (     0x8) TreePrefilterer::maybeStartScoring(SynchronizedArray<DgnPrimArray<unsigned char>> const*, SynchronizedArray<ScoreFixArray> const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4734ccc (     0x8) TreePrefilterer::maybeStopScoring(bool, ReturnListQueue*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4734cd4 (     0x8) TreePrefilterer::isInUseByRecog() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4734cdc (    0x10) TreePrefilterer::getPelScorer() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4734cec (     0x8) Prefilterer::getThreadId() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4734cf4 (     0xc) TreePrefilterer::getWordToScoreAndDurationHash() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4734d00 (     0xc) TreePrefilterer::getEffectiveLms() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4734d0c (    0x40) DgnArray<TreePhoneRec>::~DgnArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4734d4c (    0xcc) Latch<MemChunkRegion, LatchAdapter>::Latch(MemChunkRegion*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4734e18 (     0x4) MrecInitModule_memstats_mrecutil() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4734e1c (    0xb0) MrecInitModule_hashbase_mrecutil() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4734ecc (    0x24) HashBase::HashBase(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4734ef0 (     0x4) HashBase::~HashBase() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4734ef4 (     0x4) HashBase::~HashBase() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4734ef8 (     0x4) HashBase::~HashBase() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4734efc (     0x4) sizeObject(DgnPool const&, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4734f00 (    0xe0) DgnPool::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4734fe0 (     0xc) HashProbeBase::HashProbeBase(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4734fec (     0x4) HashProbeBase::~HashProbeBase() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4734ff0 (    0x18) SetShadowDebugShowHashStatsOnDestruction() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4735008 (     0x4) MrecInitModule_pgpcache_recogctl() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473500c (    0xf0) StartupPronGuessParamSpecMgr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47350fc (    0xec) PronGuessParamSet::PronGuessParamSet(char const*, B_ParamSetType, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47351e8 (     0x4) PronGuessParamSet::PronGuessParamSet(char const*, B_ParamSetType, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47351ec (    0xe8) PronGuessParamSet::PronGuessParamSet(PronGuessParamSet const&, char const*, B_ParamSetType, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47352d4 (     0x4) PronGuessParamSet::PronGuessParamSet(PronGuessParamSet const&, char const*, B_ParamSetType, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47352d8 (    0x78) PronGuessParamSet::setDefaults() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4735350 (    0x70) PronGuessParamSet::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47353c0 (    0x24) PronGuessParamSet::setParamSetPronGuessFragmentSuffixTag(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47353e4 (    0x90) PronGuessParamSet::getBoolParameter(unsigned short, B_ParamQueryMode) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4735474 (   0x238) PronGuessParamSet::getIntParameter(unsigned short, B_ParamQueryMode) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47356ac (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b47356bc (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b47356cc (    0x90) PronGuessParamSet::getDoubleParameter(unsigned short, B_ParamQueryMode) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473575c (   0x114) PronGuessParamSet::getStringParameter(unsigned short, B_ParamQueryMode) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4735870 (    0x90) PronGuessParamSet::getEnumParameter(unsigned short, B_ParamQueryMode) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4735900 (    0x9c) PronGuessParamSet::setBoolParameter(unsigned short, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473599c (   0x1a0) PronGuessParamSet::setIntParameter(unsigned short, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4735b3c (    0x9c) PronGuessParamSet::setDoubleParameter(unsigned short, double) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4735bd8 (    0xa4) PronGuessParamSet::setStringParameter(unsigned short, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4735c7c (    0x9c) PronGuessParamSet::setEnumParameter(unsigned short, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4735d18 (    0x68) PronGuessParamSet::~PronGuessParamSet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4735d80 (    0x78) PronGuessParamSet::~PronGuessParamSet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4735df8 (     0x4) MrecInitModule_ocntrnac_user() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4735dfc (   0x428) OnlineConstrainedTransAccMgr::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4736224 (   0x110) OnlineConstrainedTransAccMgr::saveOnlineConstrainedTransAcc(DFile*, DFileChecksums*, bool, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4736334 (   0x3c8) OnlineConstrainedTransAccMgr::saveOCT(DFile*, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47366fc (    0x9c) MrecInitModule_progcall_dfutil() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4736798 (    0x68) ProgressCallbackHandler::ProgressCallbackHandler(void (*)(unsigned int, void const*), void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4736800 (    0x4c) ProgressCallbackHandler::~ProgressCallbackHandler() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473684c (     0x4) ProgressCallbackHandler::~ProgressCallbackHandler() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4736850 (    0x64) ProgressCallbackHandler::startReporting(ProgressCallbackHandler*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47368b4 (    0x58) ProgressCallbackHandler::updateTotals() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473690c (    0x80) ProgressCallbackHandler::addProgress(ProgressCallbackHandler*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473698c (     0xc) ProgressCallbackHandler::addDFileProgressInfoPtr(ProgressCallbackHandler*, DFileProgressInfo*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4736998 (    0x54) ProgressCallbackHandler::addDFileProgressInfoPtr(DFileProgressInfo*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47369ec (    0x40) DgnIArray<DFileProgressInfo*>::~DgnIArray() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4736a2c (   0x210) MrecInitModule_param_mrecutil() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4736c3c (    0x34) LoadSaveTracker::LoadSaveTracker() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4736c70 (    0x38) LoadSaveTracker::~LoadSaveTracker() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4736ca8 (    0xa4) GlobalParam::getDescription(DgnString*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4736d4c (    0x54) GlobalParamMgr::startupGlobalParamMgr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4736da0 (    0xd4) sizeObjectSpecial(DgnIArray<GlobalParam**> const*, B_SizeObjectType) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4736e74 (   0x208) GlobalParamMgr::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473707c (    0x54) GlobalParamMgr::addParam(GlobalParam**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47370d0 (    0x8c) GlobalParamMgr::resetAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473715c (   0x888) void mrec_qsort_r<GlobalParamMgr>(void*, unsigned long, unsigned long, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47379e4 (     0x4) GlobalParamMgr::resetReferenced() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47379e8 (    0xc0) IntGlobalParamBase::setVal(int, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4737aa8 (    0xc0) DoubleGlobalParamBase::setVal(double, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4737b68 (   0x118) GlobalParamMgr::ParamGetAllParamNames(DgnArray<DgnString>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4737c80 (    0x68) GlobalParamMgr::ParamGetParId(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4737ce8 (   0x150) GlobalParamMgr::ParamGetType(unsigned short) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4737e38 (   0x184) GlobalParamMgr::ParamGetBoolValue(unsigned short, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4737fbc (   0x260) GlobalParamMgr::ParamGetIntValue(unsigned short, B_ParamQueryMode) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473821c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b473822c (   0x238) GlobalParamMgr::ParamGetStringValue(unsigned short, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4738464 (    0x44) EnumGlobalParamBase::getNameForEnumItem(int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47384a8 (   0x264) GlobalParamMgr::ParamGetDoubleValue(unsigned short, B_ParamQueryMode) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473870c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b473871c (    0x34) IntGlobalParamBase::IntGlobalParamBase(char const*, char const*, char const*, int, IntParamRange const&, void (*)(), char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4738750 (     0x4) IntGlobalParamBase::~IntGlobalParamBase() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4738754 (     0x4) IntGlobalParamBase::~IntGlobalParamBase() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4738758 (     0x4) IntGlobalParamBase::~IntGlobalParamBase() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473875c (    0x28) IntGlobalParamBase::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4738784 (     0xc) IntGlobalParamBase::reset() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4738790 (    0x48) IntGlobalParamBase::getDescription(DgnString*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47387d8 (    0x44) GetNameForEnumItem(EnumParamItem const*, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473881c (    0x34) EnumGlobalParamBase::EnumGlobalParamBase(char const*, char const*, char const*, int, EnumParamRange const&, void (*)(), char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4738850 (     0x4) EnumGlobalParamBase::~EnumGlobalParamBase() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4738854 (     0x4) EnumGlobalParamBase::~EnumGlobalParamBase() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4738858 (     0x4) EnumGlobalParamBase::~EnumGlobalParamBase() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473885c (    0x28) EnumGlobalParamBase::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4738884 (    0xc0) EnumGlobalParamBase::setVal(int, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4738944 (     0xc) EnumGlobalParamBase::reset() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4738950 (    0xcc) EnumGlobalParamBase::getDescription(DgnString*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4738a1c (    0x30) BoolGlobalParamBase::BoolGlobalParamBase(char const*, char const*, char const*, bool, void (*)(), char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4738a4c (     0x4) BoolGlobalParamBase::~BoolGlobalParamBase() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4738a50 (     0x4) BoolGlobalParamBase::~BoolGlobalParamBase() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4738a54 (     0x4) BoolGlobalParamBase::~BoolGlobalParamBase() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4738a58 (    0x28) BoolGlobalParamBase::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4738a80 (    0x18) BoolGlobalParamBase::reset() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4738a98 (    0x34) DoubleGlobalParamBase::DoubleGlobalParamBase(char const*, char const*, char const*, double, DoubleParamRange const&, void (*)(), char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4738acc (     0x4) DoubleGlobalParamBase::~DoubleGlobalParamBase() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4738ad0 (     0x4) DoubleGlobalParamBase::~DoubleGlobalParamBase() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4738ad4 (     0x4) DoubleGlobalParamBase::~DoubleGlobalParamBase() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4738ad8 (    0x28) DoubleGlobalParamBase::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4738b00 (     0xc) DoubleGlobalParamBase::reset() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4738b0c (    0xb0) DoubleGlobalParamBase::getDescription(DgnString*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4738bbc (    0xb4) StringGlobalParamBase::StringGlobalParamBase(char const*, char const*, char const*, char const*, void (*)(), char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4738c70 (    0x54) StringGlobalParamBase::~StringGlobalParamBase() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4738cc4 (    0x54) StringGlobalParamBase::~StringGlobalParamBase() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4738d18 (    0x64) StringGlobalParamBase::~StringGlobalParamBase() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4738d7c (    0x74) StringGlobalParamBase::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4738df0 (    0x64) StringGlobalParamBase::reset() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4738e54 (    0x18) SetShadowDebugShowParameterSettings() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4738e6c (    0x18) SetShadowDebugShowEffectiveParameterSettings() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4738e84 (    0x18) SetShadowDebugShowDefaultToDefaultParameterSettings() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4738e9c (     0x4) MrecInitModule_srfft_sigproc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4738ea0 (     0x4) MrecInitModule_pspcache_prefilt() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4738ea4 (   0x5a8) StartupPrefiltererSearchParamSpecMgr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473944c (    0xb0) PrefiltererSearchParamSet::PrefiltererSearchParamSet(char const*, B_ParamSetType, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47394fc (     0x4) PrefiltererSearchParamSet::PrefiltererSearchParamSet(char const*, B_ParamSetType, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4739500 (   0x10c) PrefiltererSearchParamSet::PrefiltererSearchParamSet(PrefiltererSearchParamSet const&, char const*, B_ParamSetType, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473960c (     0x4) PrefiltererSearchParamSet::PrefiltererSearchParamSet(PrefiltererSearchParamSet const&, char const*, B_ParamSetType, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4739610 (   0x228) PrefiltererSearchParamSet::setDefaults() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4739838 (    0x74) PrefiltererSearchParamSet::sizeObject(B_SizeObjectType) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47398ac (   0x324) PrefiltererSearchParamSet::getBoolParameter(unsigned short, B_ParamQueryMode) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4739bd0 (    0x58) (null) [FUNC, FunctionStarts] 
                0x00000001b4739c28 (   0x784) PrefiltererSearchParamSet::getIntParameter(unsigned short, B_ParamQueryMode) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473a3ac (    0x58) (null) [FUNC, FunctionStarts] 
                0x00000001b473a404 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b473a414 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b473a424 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b473a434 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b473a444 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b473a454 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b473a464 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b473a474 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b473a484 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b473a494 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b473a4a4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b473a4b4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b473a4c4 (   0x46c) PrefiltererSearchParamSet::getDoubleParameter(unsigned short, B_ParamQueryMode) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473a930 (    0x58) (null) [FUNC, FunctionStarts] 
                0x00000001b473a988 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b473a998 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b473a9a8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b473a9b8 (   0x26c) PrefiltererSearchParamSet::getStringParameter(unsigned short, B_ParamQueryMode) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473ac24 (    0x58) (null) [FUNC, FunctionStarts] 
                0x00000001b473ac7c (   0x420) PrefiltererSearchParamSet::getEnumParameter(unsigned short, B_ParamQueryMode) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473b09c (    0x58) (null) [FUNC, FunctionStarts] 
                0x00000001b473b0f4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b473b104 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b473b114 (   0x2cc) PrefiltererSearchParamSet::setBoolParameter(unsigned short, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473b3e0 (    0x58) (null) [FUNC, FunctionStarts] 
                0x00000001b473b438 (   0x7c8) PrefiltererSearchParamSet::setIntParameter(unsigned short, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473bc00 (    0x58) (null) [FUNC, FunctionStarts] 
                0x00000001b473bc58 (   0x3fc) PrefiltererSearchParamSet::setDoubleParameter(unsigned short, double) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473c054 (    0x58) (null) [FUNC, FunctionStarts] 
                0x00000001b473c0ac (   0x278) PrefiltererSearchParamSet::setStringParameter(unsigned short, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473c324 (    0x58) (null) [FUNC, FunctionStarts] 
                0x00000001b473c37c (   0x36c) PrefiltererSearchParamSet::setEnumParameter(unsigned short, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473c6e8 (    0x58) (null) [FUNC, FunctionStarts] 
                0x00000001b473c740 (    0x44) PrefiltererSearchParamSet::~PrefiltererSearchParamSet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473c784 (    0x54) PrefiltererSearchParamSet::~PrefiltererSearchParamSet() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473c7d8 (    0x48) TCollation::setCollation() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473c820 (    0x38) TCollation::TCollation() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473c858 (   0x790) TCollation::setCollation(TInputStream&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473cfe8 (    0x38) TCollation::~TCollation() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473d020 (     0x4) TCollation::~TCollation() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473d024 (   0x658) TCollation::initSerializedTable(TFileObject const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473d67c (   0x178) TCollation::initCharacterClasses() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473d7f4 (    0x24) sortCollationPair(std::__1::pair<wchar_t const*, wchar_t> const&, std::__1::pair<wchar_t const*, wchar_t> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473d818 (    0xbc) TCollation::collateCharSlow(wchar_t const*, unsigned long&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473d8d4 (    0xbc) TCollation::collprefixcmp(wchar_t const*, wchar_t const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473d990 (    0xb8) TCollation::collate(wchar_t const*, TBuffer<wchar_t>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473da48 (    0x18) std::__1::vector<std::__1::pair<wchar_t const*, wchar_t>, std::__1::allocator<std::__1::pair<wchar_t const*, wchar_t>>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473da60 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<std::__1::pair<wchar_t const*, wchar_t>>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<std::__1::pair<wchar_t const*, wchar_t>>>(std::__1::allocator<std::__1::pair<wchar_t const*, wchar_t>>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473da98 (   0x4dc) void std::__1::__introsort<std::__1::_ClassicAlgPolicy, bool (*&)(std::__1::pair<wchar_t const*, wchar_t> const&, std::__1::pair<wchar_t const*, wchar_t> const&), std::__1::pair<wchar_t const*, wchar_t>*>(std::__1::pair<wchar_t const*, wchar_t>*, std::__1::pair<wchar_t const*, wchar_t>*, bool (*&)(std::__1::pair<wchar_t const*, wchar_t> const&, std::__1::pair<wchar_t const*, wchar_t> const&), std::__1::iterator_traits<std::__1::pair<wchar_t const*, wchar_t>*>::difference_type) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473df74 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001b473df8c (    0xf0) void std::__1::__insertion_sort_3[abi:v160006]<std::__1::_ClassicAlgPolicy, bool (*&)(std::__1::pair<wchar_t const*, wchar_t> const&, std::__1::pair<wchar_t const*, wchar_t> const&), std::__1::pair<wchar_t const*, wchar_t>*>(std::__1::pair<wchar_t const*, wchar_t>*, std::__1::pair<wchar_t const*, wchar_t>*, bool (*&)(std::__1::pair<wchar_t const*, wchar_t> const&, std::__1::pair<wchar_t const*, wchar_t> const&)) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473e07c (   0x144) unsigned int std::__1::__sort3[abi:v160006]<std::__1::_ClassicAlgPolicy, bool (*&)(std::__1::pair<wchar_t const*, wchar_t> const&, std::__1::pair<wchar_t const*, wchar_t> const&), std::__1::pair<wchar_t const*, wchar_t>*>(std::__1::pair<wchar_t const*, wchar_t>*, std::__1::pair<wchar_t const*, wchar_t>*, std::__1::pair<wchar_t const*, wchar_t>*, bool (*&)(std::__1::pair<wchar_t const*, wchar_t> const&, std::__1::pair<wchar_t const*, wchar_t> const&)) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473e1c0 (   0x1e0) bool std::__1::__insertion_sort_incomplete<bool (*&)(std::__1::pair<wchar_t const*, wchar_t> const&, std::__1::pair<wchar_t const*, wchar_t> const&), std::__1::pair<wchar_t const*, wchar_t>*>(std::__1::pair<wchar_t const*, wchar_t>*, std::__1::pair<wchar_t const*, wchar_t>*, bool (*&)(std::__1::pair<wchar_t const*, wchar_t> const&, std::__1::pair<wchar_t const*, wchar_t> const&)) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473e3a0 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001b473e3b8 (   0x100) unsigned int std::__1::__sort4[abi:v160006]<std::__1::_ClassicAlgPolicy, bool (*&)(std::__1::pair<wchar_t const*, wchar_t> const&, std::__1::pair<wchar_t const*, wchar_t> const&), std::__1::pair<wchar_t const*, wchar_t>*>(std::__1::pair<wchar_t const*, wchar_t>*, std::__1::pair<wchar_t const*, wchar_t>*, std::__1::pair<wchar_t const*, wchar_t>*, std::__1::pair<wchar_t const*, wchar_t>*, bool (*&)(std::__1::pair<wchar_t const*, wchar_t> const&, std::__1::pair<wchar_t const*, wchar_t> const&)) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473e4b8 (   0x17c) std::__1::pair<wchar_t const*, wchar_t>* std::__1::__partial_sort_impl[abi:v160006]<std::__1::_ClassicAlgPolicy, bool (*&)(std::__1::pair<wchar_t const*, wchar_t> const&, std::__1::pair<wchar_t const*, wchar_t> const&), std::__1::pair<wchar_t const*, wchar_t>*, std::__1::pair<wchar_t const*, wchar_t>*>(std::__1::pair<wchar_t const*, wchar_t>*, std::__1::pair<wchar_t const*, wchar_t>*, std::__1::pair<wchar_t const*, wchar_t>*, bool (*&)(std::__1::pair<wchar_t const*, wchar_t> const&, std::__1::pair<wchar_t const*, wchar_t> const&)) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473e634 (   0x144) void std::__1::__sift_down[abi:v160006]<std::__1::_ClassicAlgPolicy, bool (*&)(std::__1::pair<wchar_t const*, wchar_t> const&, std::__1::pair<wchar_t const*, wchar_t> const&), std::__1::pair<wchar_t const*, wchar_t>*>(std::__1::pair<wchar_t const*, wchar_t>*, bool (*&)(std::__1::pair<wchar_t const*, wchar_t> const&, std::__1::pair<wchar_t const*, wchar_t> const&), std::__1::iterator_traits<std::__1::pair<wchar_t const*, wchar_t>*>::difference_type, std::__1::pair<wchar_t const*, wchar_t>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473e778 (    0xb0) std::__1::pair<wchar_t const*, wchar_t>* std::__1::__floyd_sift_down[abi:v160006]<std::__1::_ClassicAlgPolicy, bool (*&)(std::__1::pair<wchar_t const*, wchar_t> const&, std::__1::pair<wchar_t const*, wchar_t> const&), std::__1::pair<wchar_t const*, wchar_t>*>(std::__1::pair<wchar_t const*, wchar_t>*, bool (*&)(std::__1::pair<wchar_t const*, wchar_t> const&, std::__1::pair<wchar_t const*, wchar_t> const&), std::__1::iterator_traits<std::__1::pair<wchar_t const*, wchar_t>*>::difference_type) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473e828 (    0xb8) void std::__1::__sift_up[abi:v160006]<std::__1::_ClassicAlgPolicy, bool (*&)(std::__1::pair<wchar_t const*, wchar_t> const&, std::__1::pair<wchar_t const*, wchar_t> const&), std::__1::pair<wchar_t const*, wchar_t>*>(std::__1::pair<wchar_t const*, wchar_t>*, std::__1::pair<wchar_t const*, wchar_t>*, bool (*&)(std::__1::pair<wchar_t const*, wchar_t> const&, std::__1::pair<wchar_t const*, wchar_t> const&), std::__1::iterator_traits<std::__1::pair<wchar_t const*, wchar_t>*>::difference_type) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473e8e0 (   0x148) unsigned int std::__1::__sort5<bool (*&)(std::__1::pair<wchar_t const*, wchar_t> const&, std::__1::pair<wchar_t const*, wchar_t> const&), std::__1::pair<wchar_t const*, wchar_t>*>(std::__1::pair<wchar_t const*, wchar_t>*, std::__1::pair<wchar_t const*, wchar_t>*, std::__1::pair<wchar_t const*, wchar_t>*, std::__1::pair<wchar_t const*, wchar_t>*, std::__1::pair<wchar_t const*, wchar_t>*, bool (*&)(std::__1::pair<wchar_t const*, wchar_t> const&, std::__1::pair<wchar_t const*, wchar_t> const&)) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473ea28 (     0x4) MrecInitModule_pelclism_pel() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473ea2c (     0x4) MrecInitModule_trecogctl_recogctl() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473ea30 (    0xd4) ThreadedRecogController::ThreadedRecogController(B_DgnThreadExecutionType, RecogSpec const&, bool, PrefiltererSearchParamSet*, SearchCrossLayerParamSet*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473eb04 (     0x4) ThreadedRecogController::ThreadedRecogController(B_DgnThreadExecutionType, RecogSpec const&, bool, PrefiltererSearchParamSet*, SearchCrossLayerParamSet*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473eb08 (    0x98) ThreadedRecogController::~ThreadedRecogController() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473eba0 (     0x4) ThreadedRecogController::~ThreadedRecogController() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473eba4 (    0x28) ThreadedRecogController::~ThreadedRecogController() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473ebcc (   0x42c) ThreadedRecogController::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473eff8 (    0xe0) ThreadedRecogController::setupRecognizers(DgnArray<ScoreArray> const&, DgnArray<ScoreArray> const&, bool, HashKEV<unsigned int, unsigned int, StateIdScope> const*, HashKEV<unsigned int, unsigned int, StateIdScope> const*, HashKEV<unsigned int, unsigned int, StateIdScope> const*, BitArray const*, DgnPrimArray<unsigned short> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473f0d8 (   0x12c) ThreadedRecogController::recognizeOneSingleLayer(unsigned short, Utterance*, PrefilterResult const*, SearchParamSet*, RecogContext const&, bool, DgnArray<DgnPrimArray<unsigned int>> const*, DgnIArray<DgnPrimArray<unsigned int>*> const&, DgnIArray<DgnArray<DgnArray<ParseToken>>*> const&, bool, bool, PhnMgr const*, DgnArray<DgnPrimArray<unsigned int>> const*, bool, bool, Prefilterer*, PrefilterResult*, LookaheadScorer*, SnapTime const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473f204 (    0x28) ThreadedRecogController::haveCompletePrefilterResult() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473f22c (    0xd0) ThreadedRecogController::extractPrefilterResult() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473f2fc (   0x1f0) ThreadedRecogController::startRecognizeOne(unsigned short, Utterance*, PrefilterResult const*, DgnIArray<SearchParamSet*>&, RecogContext const&, bool, DgnArray<DgnPrimArray<unsigned int>> const*, DgnIArray<DgnPrimArray<unsigned int>*> const&, DgnIArray<DgnArray<DgnArray<ParseToken>>*> const&, DgnIArray<DgnArray<WordTransducerSpec>*> const&, DgnIArray<WordLattice const*> const&, bool, bool, PhnMgr const*, DgnArray<DgnPrimArray<unsigned int>> const*, bool, DgnPrimArray<bool> const&, Prefilterer*, PrefilterResult*, LookaheadScorer*, SnapTime const&, ReproMgr*, Segmentation const*, DgnArray<DgnPrimArray<unsigned int>> const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473f4ec (    0x90) Voc::isThreadedRecogAllowed() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473f57c (    0x28) ThreadedRecogController::recognizeOneDone() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473f5a4 (    0xb0) ThreadedRecogController::maybeStartRecogController(DgnEvent*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473f654 (    0x20) ThreadedRecogController::recognizeOneDoFrames(bool, unsigned int, DgnBreakPoint*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473f674 (   0x174) ThreadedRecogController::maybeStopRecogController() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473f7e8 (    0x88) ThreadedRecogController::finishRecognizeOne(DgnIArray<WordLattice*>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473f870 (     0x8) ThreadedRecogController::getReproMgr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473f878 (    0x28) ThreadedRecogController::getNumRecogLayers() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473f8a0 (    0x28) ThreadedRecogController::calledStartRecognizeOne() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473f8c8 (    0x28) ThreadedRecogController::calledFinishRecognizeOne() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473f8f0 (    0x28) ThreadedRecogController::calledExtractPrefilterResult() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473f918 (    0x80) ThreadedRecogController::abortRecognizeOne() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473f998 (    0x80) ThreadedRecogController::makePartialResult() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473fa18 (    0x28) ThreadedRecogController::getPartialResult(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473fa40 (    0x28) ThreadedRecogController::getPartialTokenConfidences(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473fa68 (    0x28) ThreadedRecogController::getPartialResultScore(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473fa90 (    0x28) ThreadedRecogController::getPartialResultMicrosecPerRecogFrame(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473fab8 (    0x28) ThreadedRecogController::getContinuationInterval() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473fae0 (    0x28) ThreadedRecogController::isUsingPrefilterer(Prefilterer const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473fb08 (    0x28) ThreadedRecogController::getUser() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473fb30 (    0x28) ThreadedRecogController::getOnlineCTPelScorer() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473fb58 (     0x4) ThreadedRecogController::setPrefPelScoreCacheData(PelScoreCacheData*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473fb5c (     0x4) ThreadedRecogController::setRecogPelScoreCacheData(PelScoreCacheData*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473fb60 (    0x28) ThreadedRecogController::getPrefPelScores() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473fb88 (    0x28) ThreadedRecogController::getRecogPelScores() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473fbb0 (    0x28) ThreadedRecogController::getRecogStats() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473fbd8 (    0x30) ThreadedRecogController::getPrefiltererSearchParamSet() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473fc08 (    0x30) ThreadedRecogController::getSearchCrossLayerParamSet() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473fc38 (    0x30) ThreadedRecogController::getSearchParamSet(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473fc68 (    0x4c) RecogCtlThreadWorker::onStartup() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473fcb4 (    0xcc) RecogCtlThreadWorker::playOne() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473fd80 (     0x4) RecogCtlThreadWorker::onShutdown() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473fd84 (    0x78) RecogCtlThreadWorker::releaseAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b473fdfc (   0x4f4) RecogCtlThreadWorker::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47402f0 (   0x1a0) RecogCtlThread::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4740490 (     0x4) RecogCtlThreadWorker::~RecogCtlThreadWorker() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4740494 (    0x28) RecogCtlThreadWorker::~RecogCtlThreadWorker() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47404bc (     0x4) RecogCtlThreadWorker::onPlay() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47404c0 (     0x4) RecogCtlThread::~RecogCtlThread() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47404c4 (    0x28) RecogCtlThread::~RecogCtlThread() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47404ec (    0xb0) DgnThread<RecogCtlThreadWorker>::newWorker() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b474059c (     0x8) ThreadedRecogController::isThreaded() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47405a4 (    0x60) DgnThread<RecogCtlThreadWorker>::DgnThread(B_DgnThreadExecutionType, MemChunkRegion*, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4740604 (     0x4) DgnThread<RecogCtlThreadWorker>::~DgnThread() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4740608 (    0x28) DgnThread<RecogCtlThreadWorker>::~DgnThread() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4740630 (    0x38) DgnEventLatch::~DgnEventLatch() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4740668 (    0x58) RecogCtlThreadWorker::~RecogCtlThreadWorker() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47406c0 (     0x4) MrecInitModule_prefilt_prefilt() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47406c4 (    0x20) Prefilterer::Prefilterer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47406e4 (     0x4) Prefilterer::~Prefilterer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47406e8 (     0x4) Prefilterer::~Prefilterer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47406ec (     0x4) Prefilterer::~Prefilterer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47406f0 (   0x224) Prefilterer::printSize(unsigned int, unsigned int, unsigned long*, unsigned long*, unsigned long*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4740914 (    0xe0) Prefilterer::makePrefilterer(PrefiltererBuildParamSet const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b47409f4 (    0xb0) Prefilterer::maybeMakeLookaheadScorer(User const*, PrefiltererBuildParamSet const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4740aa4 (    0x70) TParam::TParam(TParam::TType, wchar_t const*, wchar_t const*, unsigned long, wchar_t const*, wchar_t const*) (.cold.1) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4740b14 (    0x70) TParam::TParam(TParam::TType, wchar_t const*) (.cold.1) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4740b84 (     0x4) ParamSetBase::~ParamSetBase() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4740b88 (     0x4) ParamSetBase::~ParamSetBase() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4740b8c (    0x50) saveDump(TTokenizer*, char const*, char const*, char const*, char const*, char const*) (.cold.1) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4740bdc (     0x4) TPatternObject::~TPatternObject() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4740be0 (     0x4) TPatternObject::~TPatternObject() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4740be4 (    0x2c) callBackSync(TGrammarCompiler::TArgument const*, unsigned long, void*, void*, TAllocator&) (.cold.1) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4740c10 (    0x5c) TGraph::TGraph(char const*, TSegmenter&, bool) (.cold.1) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4740c6c (    0x14) TTag::TTag(wchar_t const*, unsigned long, TPItnTagHandle_fake**) (.cold.1) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4740c80 (    0x2c) callBackToken(TGrammarCompiler::TArgument const*, unsigned long, void*, void*, TAllocator&) (.cold.1) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4740cac (    0x2c) callBackTag(TGrammarCompiler::TArgument const*, unsigned long, void*, void*, TAllocator&) (.cold.1) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4740cd8 (    0x50) TPItn_WordSequenceToResult.cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4740d28 (    0x24) TPItn_GetResultText.cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4740d4c (     0x4) BackTraceNodeCache::~BackTraceNodeCache() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4740d50 (     0x4) BackTraceNodeCache::~BackTraceNodeCache() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4740d54 (     0x4) Lattice<WordLatticeLC>::~Lattice() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4740d58 (    0x2c) callBackToken(TGrammarCompiler::TArgument const*, unsigned long, void*, void*, TAllocator&) (.cold.1) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b4740d84 (    0x2c) callBackTag(TGrammarCompiler::TArgument const*, unsigned long, void*, void*, TAllocator&) (.cold.1) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
            0x00000001b4740db0 (   0xcb0) __TEXT __auth_stubs
                0x00000001b4740db0 (    0x10) DYLD-STUB$$_Unwind_Resume [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4740dc0 (    0x10) DYLD-STUB$$std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::rfind(char, unsigned long) const [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4740dd0 (    0x10) DYLD-STUB$$std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char>>::str() const [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4740de0 (    0x10) DYLD-STUB$$std::__1::locale::use_facet(std::__1::locale::id&) const [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4740df0 (    0x10) DYLD-STUB$$std::__1::ios_base::getloc() const [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4740e00 (    0x10) DYLD-STUB$$std::logic_error::logic_error(char const*) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4740e10 (    0x10) DYLD-STUB$$std::bad_array_new_length::bad_array_new_length() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4740e20 (    0x10) DYLD-STUB$$std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::append(char const*) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4740e30 (    0x10) DYLD-STUB$$std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::assign(char const*) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4740e40 (    0x10) DYLD-STUB$$std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::assign(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, unsigned long, unsigned long) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4740e50 (    0x10) DYLD-STUB$$std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::resize(unsigned long, char) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4740e60 (    0x10) DYLD-STUB$$std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::reserve(unsigned long) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4740e70 (    0x10) DYLD-STUB$$std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::push_back(char) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4740e80 (    0x10) DYLD-STUB$$std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::basic_string(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4740e90 (    0x10) DYLD-STUB$$std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>::append(wchar_t const*) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4740ea0 (    0x10) DYLD-STUB$$std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>::assign(wchar_t const*) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4740eb0 (    0x10) DYLD-STUB$$std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>::resize(unsigned long, wchar_t) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4740ec0 (    0x10) DYLD-STUB$$std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>::push_back(wchar_t) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4740ed0 (    0x10) DYLD-STUB$$std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>::basic_string(std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> const&) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4740ee0 (    0x10) DYLD-STUB$$std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>::basic_string(std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> const&, unsigned long, unsigned long, std::__1::allocator<wchar_t> const&) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4740ef0 (    0x10) DYLD-STUB$$std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>>::operator=(std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> const&) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4740f00 (    0x10) DYLD-STUB$$std::__1::basic_filebuf<char, std::__1::char_traits<char>>::open(char const*, unsigned int) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4740f10 (    0x10) DYLD-STUB$$std::__1::basic_filebuf<char, std::__1::char_traits<char>>::basic_filebuf() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4740f20 (    0x10) DYLD-STUB$$std::__1::basic_filebuf<char, std::__1::char_traits<char>>::~basic_filebuf() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4740f30 (    0x10) DYLD-STUB$$std::__1::basic_istream<char, std::__1::char_traits<char>>::seekg(std::__1::fpos<__mbstate_t>) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4740f40 (    0x10) DYLD-STUB$$std::__1::basic_istream<char, std::__1::char_traits<char>>::tellg() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4740f50 (    0x10) DYLD-STUB$$std::__1::basic_istream<char, std::__1::char_traits<char>>::getline(char*, long, char) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4740f60 (    0x10) DYLD-STUB$$std::__1::basic_istream<char, std::__1::char_traits<char>>::~basic_istream() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4740f70 (    0x10) DYLD-STUB$$std::__1::basic_istream<wchar_t, std::__1::char_traits<wchar_t>>::~basic_istream() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4740f80 (    0x10) DYLD-STUB$$std::__1::basic_istream<wchar_t, std::__1::char_traits<wchar_t>>::operator>>(double&) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4740f90 (    0x10) DYLD-STUB$$std::__1::basic_ostream<char, std::__1::char_traits<char>>::write(char const*, long) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4740fa0 (    0x10) DYLD-STUB$$std::__1::basic_ostream<char, std::__1::char_traits<char>>::sentry::sentry(std::__1::basic_ostream<char, std::__1::char_traits<char>>&) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4740fb0 (    0x10) DYLD-STUB$$std::__1::basic_ostream<char, std::__1::char_traits<char>>::sentry::~sentry() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4740fc0 (    0x10) DYLD-STUB$$std::__1::basic_ostream<char, std::__1::char_traits<char>>::~basic_ostream() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4740fd0 (    0x10) DYLD-STUB$$std::__1::basic_ostream<char, std::__1::char_traits<char>>::operator<<(bool) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4740fe0 (    0x10) DYLD-STUB$$std::__1::basic_ostream<char, std::__1::char_traits<char>>::operator<<(int) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4740ff0 (    0x10) DYLD-STUB$$std::__1::basic_ostream<char, std::__1::char_traits<char>>::operator<<(unsigned int) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741000 (    0x10) DYLD-STUB$$std::__1::basic_ostream<char, std::__1::char_traits<char>>::operator<<(unsigned long) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741010 (    0x10) DYLD-STUB$$std::__1::basic_ostream<wchar_t, std::__1::char_traits<wchar_t>>::~basic_ostream() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741020 (    0x10) DYLD-STUB$$std::__1::basic_ostream<wchar_t, std::__1::char_traits<wchar_t>>::operator<<(double) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741030 (    0x10) DYLD-STUB$$std::__1::basic_ostream<wchar_t, std::__1::char_traits<wchar_t>>::operator<<(int) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741040 (    0x10) DYLD-STUB$$std::__1::basic_ostream<wchar_t, std::__1::char_traits<wchar_t>>::operator<<(unsigned long) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741050 (    0x10) DYLD-STUB$$std::__1::basic_streambuf<char, std::__1::char_traits<char>>::basic_streambuf() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741060 (    0x10) DYLD-STUB$$std::__1::basic_streambuf<char, std::__1::char_traits<char>>::~basic_streambuf() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741070 (    0x10) DYLD-STUB$$std::__1::basic_streambuf<wchar_t, std::__1::char_traits<wchar_t>>::basic_streambuf() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741080 (    0x10) DYLD-STUB$$std::__1::basic_streambuf<wchar_t, std::__1::char_traits<wchar_t>>::~basic_streambuf() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741090 (    0x10) DYLD-STUB$$std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char>>::str(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b47410a0 (    0x10) DYLD-STUB$$std::__1::locale::classic() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b47410b0 (    0x10) DYLD-STUB$$std::__1::locale::locale(std::__1::locale const&) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b47410c0 (    0x10) DYLD-STUB$$std::__1::locale::~locale() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b47410d0 (    0x10) DYLD-STUB$$std::__1::locale::operator=(std::__1::locale const&) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b47410e0 (    0x10) DYLD-STUB$$std::__1::ios_base::__set_badbit_and_consider_rethrow() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b47410f0 (    0x10) DYLD-STUB$$std::__1::ios_base::init(void*) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741100 (    0x10) DYLD-STUB$$std::__1::ios_base::clear(unsigned int) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741110 (    0x10) DYLD-STUB$$std::__1::ios_base::imbue(std::__1::locale const&) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741120 (    0x10) DYLD-STUB$$std::__1::basic_ios<char, std::__1::char_traits<char>>::~basic_ios() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741130 (    0x10) DYLD-STUB$$std::__1::basic_ios<wchar_t, std::__1::char_traits<wchar_t>>::~basic_ios() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741140 (    0x10) DYLD-STUB$$std::terminate() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741150 (    0x10) DYLD-STUB$$operator delete[](void*) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741160 (    0x10) DYLD-STUB$$operator delete(void*) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741170 (    0x10) DYLD-STUB$$operator new[](unsigned long) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741180 (    0x10) DYLD-STUB$$operator new(unsigned long) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741190 (    0x10) DYLD-STUB$$__cxa_allocate_exception [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b47411a0 (    0x10) DYLD-STUB$$__cxa_begin_catch [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b47411b0 (    0x10) DYLD-STUB$$__cxa_end_catch [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b47411c0 (    0x10) DYLD-STUB$$__cxa_free_exception [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b47411d0 (    0x10) DYLD-STUB$$__cxa_guard_abort [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b47411e0 (    0x10) DYLD-STUB$$__cxa_guard_acquire [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b47411f0 (    0x10) DYLD-STUB$$__cxa_guard_release [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741200 (    0x10) DYLD-STUB$$__cxa_rethrow [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741210 (    0x10) DYLD-STUB$$__cxa_throw [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741220 (    0x10) DYLD-STUB$$__dynamic_cast [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741230 (    0x10) DYLD-STUB$$__error [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741240 (    0x10) DYLD-STUB$$__maskrune [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741250 (    0x10) DYLD-STUB$$__stack_chk_fail [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741260 (    0x10) DYLD-STUB$$__tolower [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741270 (    0x10) DYLD-STUB$$__toupper [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741280 (    0x10) DYLD-STUB$$abort [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741290 (    0x10) DYLD-STUB$$access [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b47412a0 (    0x10) DYLD-STUB$$atof [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b47412b0 (    0x10) DYLD-STUB$$atoi [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b47412c0 (    0x10) DYLD-STUB$$atol [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b47412d0 (    0x10) DYLD-STUB$$bzero [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b47412e0 (    0x10) DYLD-STUB$$close [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b47412f0 (    0x10) DYLD-STUB$$crc32 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741300 (    0x10) DYLD-STUB$$deflate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741310 (    0x10) DYLD-STUB$$deflateEnd [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741320 (    0x10) DYLD-STUB$$deflateInit2_ [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741330 (    0x10) DYLD-STUB$$exit [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741340 (    0x10) DYLD-STUB$$exp [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741350 (    0x10) DYLD-STUB$$fclose [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741360 (    0x10) DYLD-STUB$$feof [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741370 (    0x10) DYLD-STUB$$ferror [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741380 (    0x10) DYLD-STUB$$fflush [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741390 (    0x10) DYLD-STUB$$fmtcheck [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b47413a0 (    0x10) DYLD-STUB$$fopen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b47413b0 (    0x10) DYLD-STUB$$fread [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b47413c0 (    0x10) DYLD-STUB$$fseek [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b47413d0 (    0x10) DYLD-STUB$$fseeko [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b47413e0 (    0x10) DYLD-STUB$$fstat [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b47413f0 (    0x10) DYLD-STUB$$fstatvfs [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741400 (    0x10) DYLD-STUB$$ftell [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741410 (    0x10) DYLD-STUB$$ftello [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741420 (    0x10) DYLD-STUB$$ftruncate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741430 (    0x10) DYLD-STUB$$fwrite [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741440 (    0x10) DYLD-STUB$$gethostname [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741450 (    0x10) DYLD-STUB$$getpid [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741460 (    0x10) DYLD-STUB$$getrusage [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741470 (    0x10) DYLD-STUB$$gettimeofday [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741480 (    0x10) DYLD-STUB$$glob [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741490 (    0x10) DYLD-STUB$$globfree [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b47414a0 (    0x10) DYLD-STUB$$inflate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b47414b0 (    0x10) DYLD-STUB$$inflateEnd [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b47414c0 (    0x10) DYLD-STUB$$inflateInit2_ [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b47414d0 (    0x10) DYLD-STUB$$kill [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b47414e0 (    0x10) DYLD-STUB$$localtime [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b47414f0 (    0x10) DYLD-STUB$$log [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741500 (    0x10) DYLD-STUB$$log1p [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741510 (    0x10) DYLD-STUB$$lseek [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741520 (    0x10) DYLD-STUB$$mach_absolute_time [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741530 (    0x10) DYLD-STUB$$memcmp [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741540 (    0x10) DYLD-STUB$$memcpy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741550 (    0x10) DYLD-STUB$$memmove [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741560 (    0x10) DYLD-STUB$$memset [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741570 (    0x10) DYLD-STUB$$memset_pattern16 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741580 (    0x10) DYLD-STUB$$mmap [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741590 (    0x10) DYLD-STUB$$modf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b47415a0 (    0x10) DYLD-STUB$$mprotect [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b47415b0 (    0x10) DYLD-STUB$$munmap [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b47415c0 (    0x10) DYLD-STUB$$nanosleep [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b47415d0 (    0x10) DYLD-STUB$$newlocale [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b47415e0 (    0x10) DYLD-STUB$$open [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b47415f0 (    0x10) DYLD-STUB$$pthread_cond_destroy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741600 (    0x10) DYLD-STUB$$pthread_cond_init [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741610 (    0x10) DYLD-STUB$$pthread_cond_signal [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741620 (    0x10) DYLD-STUB$$pthread_cond_timedwait [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741630 (    0x10) DYLD-STUB$$pthread_cond_wait [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741640 (    0x10) DYLD-STUB$$pthread_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741650 (    0x10) DYLD-STUB$$pthread_getspecific [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741660 (    0x10) DYLD-STUB$$pthread_join [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741670 (    0x10) DYLD-STUB$$pthread_key_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741680 (    0x10) DYLD-STUB$$pthread_kill [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741690 (    0x10) DYLD-STUB$$pthread_mutex_destroy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b47416a0 (    0x10) DYLD-STUB$$pthread_mutex_init [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b47416b0 (    0x10) DYLD-STUB$$pthread_mutex_lock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b47416c0 (    0x10) DYLD-STUB$$pthread_mutex_unlock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b47416d0 (    0x10) DYLD-STUB$$pthread_mutexattr_destroy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b47416e0 (    0x10) DYLD-STUB$$pthread_mutexattr_init [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b47416f0 (    0x10) DYLD-STUB$$pthread_mutexattr_settype [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741700 (    0x10) DYLD-STUB$$pthread_rwlock_destroy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741710 (    0x10) DYLD-STUB$$pthread_rwlock_init [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741720 (    0x10) DYLD-STUB$$pthread_rwlock_rdlock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741730 (    0x10) DYLD-STUB$$pthread_rwlock_unlock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741740 (    0x10) DYLD-STUB$$pthread_rwlock_wrlock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741750 (    0x10) DYLD-STUB$$pthread_self [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741760 (    0x10) DYLD-STUB$$pthread_setcancelstate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741770 (    0x10) DYLD-STUB$$pthread_setcanceltype [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741780 (    0x10) DYLD-STUB$$pthread_setspecific [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741790 (    0x10) DYLD-STUB$$pthread_yield_np [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b47417a0 (    0x10) DYLD-STUB$$rand [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b47417b0 (    0x10) DYLD-STUB$$read [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b47417c0 (    0x10) DYLD-STUB$$remove [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b47417d0 (    0x10) DYLD-STUB$$sem_open [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b47417e0 (    0x10) DYLD-STUB$$sem_post [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b47417f0 (    0x10) DYLD-STUB$$sem_trywait [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741800 (    0x10) DYLD-STUB$$shm_open [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741810 (    0x10) DYLD-STUB$$shm_unlink [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741820 (    0x10) DYLD-STUB$$snprintf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741830 (    0x10) DYLD-STUB$$sprintf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741840 (    0x10) DYLD-STUB$$srand [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741850 (    0x10) DYLD-STUB$$sscanf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741860 (    0x10) DYLD-STUB$$stat [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741870 (    0x10) DYLD-STUB$$strcasecmp [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741880 (    0x10) DYLD-STUB$$strcat [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741890 (    0x10) DYLD-STUB$$strchr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b47418a0 (    0x10) DYLD-STUB$$strcmp [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b47418b0 (    0x10) DYLD-STUB$$strcpy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b47418c0 (    0x10) DYLD-STUB$$strerror [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b47418d0 (    0x10) DYLD-STUB$$strlen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b47418e0 (    0x10) DYLD-STUB$$strncmp [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b47418f0 (    0x10) DYLD-STUB$$strncpy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741900 (    0x10) DYLD-STUB$$strrchr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741910 (    0x10) DYLD-STUB$$strstr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741920 (    0x10) DYLD-STUB$$sysconf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741930 (    0x10) DYLD-STUB$$sysctlbyname [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741940 (    0x10) DYLD-STUB$$time [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741950 (    0x10) DYLD-STUB$$uname [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741960 (    0x10) DYLD-STUB$$unlink [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741970 (    0x10) DYLD-STUB$$uselocale [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741980 (    0x10) DYLD-STUB$$usleep [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741990 (    0x10) DYLD-STUB$$vsnprintf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b47419a0 (    0x10) DYLD-STUB$$wcscasecmp [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b47419b0 (    0x10) DYLD-STUB$$wcscat [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b47419c0 (    0x10) DYLD-STUB$$wcschr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b47419d0 (    0x10) DYLD-STUB$$wcscmp [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b47419e0 (    0x10) DYLD-STUB$$wcscpy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b47419f0 (    0x10) DYLD-STUB$$wcslen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741a00 (    0x10) DYLD-STUB$$wcsncmp [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741a10 (    0x10) DYLD-STUB$$wcsncpy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741a20 (    0x10) DYLD-STUB$$wcsstr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741a30 (    0x10) DYLD-STUB$$wmemcmp [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741a40 (    0x10) DYLD-STUB$$wmemcpy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b4741a50 (    0x10) DYLD-STUB$$write [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
            0x00000001b4741a60 ( 0x2e223) __TEXT __const
                0x00000001b4741a60 (    0x28) SDAPIVersionString [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4741a88 (     0x8) SDAPIVersionNumber [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4741a90 (    0x16) typeinfo name for DgnFileIOException* [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4741aa6 (    0x13) errStr_kernel_latutil_E_DUPLICATE_LINK [NameNList, MangledNameNList, NList] 
                0x00000001b4741ab9 (    0xc7) typeinfo name for EnumGlobalParam [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4741b80 (   0x19c) typeinfo name for TLogicException [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4741d1c (    0x15) typeinfo name for TSemanticException [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4741d31 (     0x8) typeinfo name for TParam [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4741d39 (     0xb) typeinfo name for TIntParam [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4741d44 (    0x24) typeinfo name for TBoolParam [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4741d68 (   0x398) typeinfo name for TStringParam [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4742100 (     0xe) typeinfo name for TFloatParam [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b474210e (    0x42) typeinfo name for TParamManager [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4742150 (    0x46) typeinfo name for std::__1::basic_ostringstream<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4742196 (   0x262) typeinfo name for std::__1::basic_stringbuf<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b47423f8 (   0x180) std::__1::piecewise_construct [NameNList, MangledNameNList, NList] 
                0x00000001b4742578 (    0x30) typeinfo name for TProp<unsigned long> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b47425a8 (     0x7) errStr_pel_hiersc_E_NOT_IMPLEMENTED [NameNList, MangledNameNList, NList] 
                0x00000001b47425af (    0x29) typeinfo name for HScorer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b47425d8 (     0xe) errStr_mrecutil_dsmsetdata_E_DSMSETDATA_CREATE [NameNList, MangledNameNList, NList] 
                0x00000001b47425e6 (     0xe) errStr_mrecutil_dsmsetdata_E_DSMSETDATA_STAT [NameNList, MangledNameNList, NList] 
                0x00000001b47425f4 (     0x7) errStr_mrecutil_dsmsetdata_E_DSMSETDATA_GLOBALLOCK [NameNList, MangledNameNList, NList] 
                0x00000001b47425fb (     0xe) errStr_mrecutil_dsmsetdata_E_DSMSETDATA_MAP [NameNList, MangledNameNList, NList] 
                0x00000001b4742609 (    0x12) typeinfo name for DSMShmOperation [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b474261b (     0xf) typeinfo name for DSMOperation [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b474262a (    0x1e) typeinfo name for DSMFileOperation [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4742648 (     0xd) errStr_dfutil_dobj_E_BADCHECKSUM [NameNList, MangledNameNList, NList] 
                0x00000001b4742655 (     0xd) errStr_dfutil_dobj_E_BADSTREAMLENGTH [NameNList, MangledNameNList, NList] 
                0x00000001b4742662 (    0x2e) errStr_dfutil_dobj_E_BADARRAYCHECKSUM [NameNList, MangledNameNList, NList] 
                0x00000001b4742690 (     0x2) errStr_voc_rulemgr_E_MIXED_TEXT_AND_BINARY_SUBFILES [NameNList, MangledNameNList, NList] 
                0x00000001b4742692 (     0x1) errStr_voc_rulemgr_E_TOO_MANY_RULES [NameNList, MangledNameNList, NList] 
                0x00000001b4742693 (     0x6) errStr_voc_rulemgr_E_ENSURE_RULE [NameNList, MangledNameNList, NList] 
                0x00000001b4742699 (     0x3) errStr_voc_rulemgr_E_DUP_ENSURE_RULE [NameNList, MangledNameNList, NList] 
                0x00000001b474269c (     0xc) errStr_voc_rulemgr_E_RECURSIVE_RULE_INCLUSION [NameNList, MangledNameNList, NList] 
                0x00000001b47426a8 (     0x1) errStr_voc_rulemgr_E_NO_START_TOKEN [NameNList, MangledNameNList, NList] 
                0x00000001b47426a9 (     0x1) errStr_voc_rulemgr_E_COUNT_MISMATCH [NameNList, MangledNameNList, NList] 
                0x00000001b47426aa (     0x1) errStr_voc_rulemgr_E_TYPE_MISMATCH [NameNList, MangledNameNList, NList] 
                0x00000001b47426ab (     0x1) errStr_voc_rulemgr_E_SINGLE_IN_REPEAT_OR_OPTIONAL [NameNList, MangledNameNList, NList] 
                0x00000001b47426ac (     0x1) errStr_voc_rulemgr_E_SINGLE_IN_RULE [NameNList, MangledNameNList, NList] 
                0x00000001b47426ad (     0x6) errStr_voc_rulemgr_E_BAD_WB_ATTRIBUTES_IN_STATE [NameNList, MangledNameNList, NList] 
                0x00000001b47426b3 (     0x3) errStr_voc_rulemgr_E_SELF_INCLUSION [NameNList, MangledNameNList, NList] 
                0x00000001b47426b6 (     0x3) errStr_voc_rulemgr_E_RULE_ALREADY_IN_STATE [NameNList, MangledNameNList, NList] 
                0x00000001b47426b9 (     0x3) errStr_voc_rulemgr_E_INVALID_RULE [NameNList, MangledNameNList, NList] 
                0x00000001b47426bc (    0x12) typeinfo name for BoolGlobalParam [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b47426ce (    0x15) errStr_voc_rulemgr_E_REFERRED_RULE [NameNList, MangledNameNList, NList] 
                0x00000001b47426e3 (    0x42) typeinfo name for HashKEV<unsigned int, unsigned int, CWIDScope> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4742725 (     0xf) errStr_phoneme_phnmgr_E_UNKNOWN_PHONEME_IN_PRON [NameNList, MangledNameNList, NList] 
                0x00000001b4742734 (    0x18) sPHT_Versions [NameNList, MangledNameNList, NList] 
                0x00000001b474274c (     0xe) errStr_phoneme_phnmgr_E_PHT_BAD_FIELD_FORMAT [NameNList, MangledNameNList, NList] 
                0x00000001b474275a (     0x7) errStr_phoneme_phnmgr_E_PHT_UNKNOWN_ENTRY [NameNList, MangledNameNList, NList] 
                0x00000001b4742761 (     0x7) errStr_phoneme_phnmgr_E_PHT_MISSING_FIELD [NameNList, MangledNameNList, NList] 
                0x00000001b4742768 (     0x7) errStr_phoneme_phnmgr_E_BAD_HUMAN_READABLE [NameNList, MangledNameNList, NList] 
                0x00000001b474276f (     0x3) errStr_phoneme_phnmgr_E_TOO_MANY_PHONES [NameNList, MangledNameNList, NList] 
                0x00000001b4742772 (     0x6) errStr_phoneme_phnmgr_E_TOO_FEW_PHONES [NameNList, MangledNameNList, NList] 
                0x00000001b4742778 (     0x3) errStr_phoneme_phnmgr_E_MAX_PHONEMES_EXCEEDED [NameNList, MangledNameNList, NList] 
                0x00000001b474277b (     0x1) errStr_phoneme_phnmgr_E_EMPTY_HUMAN_READABLE [NameNList, MangledNameNList, NList] 
                0x00000001b474277c (     0xa) errStr_phoneme_phnmgr_E_DUPLICATE_HUMAN_READABLE [NameNList, MangledNameNList, NList] 
                0x00000001b4742786 (     0xa) errStr_phoneme_phnmgr_E_NO_SUCH_PHONEME [NameNList, MangledNameNList, NList] 
                0x00000001b4742790 (    0x30) sUserDeltaRunLengthMinIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b47427c0 (    0x30) sUserDeltaRunLengthRangeIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b47427f0 (    0x30) sUserDeltaInclusionMinDivergenceIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4742820 (    0x8c) typeinfo name for UserDeltaParamSet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b47428ac (    0x13) typeinfo name for TGrammarCompiler [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b47428bf (   0x235) typeinfo name for TDataMaker [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4742af4 (    0x10) typeinfo name for DgnException* [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4742b04 (    0x16) typeinfo name for DgnMemoryException* [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4742b1a (    0x2e) typeinfo name for DgnMemoryException [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4742b48 (   0x110) s_pszCodePage1252ToUnicode [NameNList, MangledNameNList, NList] 
                0x00000001b4742c58 (     0xe) errStr_mrecutil_dstring_E_CONVERSION_FAILED [NameNList, MangledNameNList, NList] 
                0x00000001b4742c66 (     0x8) errStr_mrecutil_dstring_E_NON_DIGIT [NameNList, MangledNameNList, NList] 
                0x00000001b4742c6e (   0x1fa) errStr_mrecutil_dstring_E_INTEGER_TOO_LARGE [NameNList, MangledNameNList, NList] 
                0x00000001b4742e68 (    0x12) typeinfo name for TItnRuleManager [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4742e7a (   0x21e) typeinfo name for TIFormatterRuleManager [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4743098 (    0x39) std::__1::piecewise_construct [NameNList, MangledNameNList, NList] 
                0x00000001b47430d1 (     0x1) errStr_kernel_constran_E_LATTICE_TIME_CONSTRAINT [NameNList, MangledNameNList, NList] 
                0x00000001b47430d2 (     0x1) errStr_kernel_constran_E_TOOMANYWORDS [NameNList, MangledNameNList, NList] 
                0x00000001b47430d3 (    0x14) typeinfo name for RecogGermIterator [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b47430e7 (    0x22) typeinfo name for RecogGermArrayRecogGermIterator [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4743109 (    0x19) typeinfo name for Hash<StateSpec, StateSpec, StateSpec, bool> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4743122 (    0x1e) typeinfo name for Hash<StateSpec, StateSpec, StateSpec, unsigned int> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4743140 (    0x10) sPQT_Versions [NameNList, MangledNameNList, NList] 
                0x00000001b4743150 (    0x20) sPDT_Versions [NameNList, MangledNameNList, NList] 
                0x00000001b4743170 (    0x10) sPAT_Versions [NameNList, MangledNameNList, NList] 
                0x00000001b4743180 (    0x20) sPTT_Versions [NameNList, MangledNameNList, NList] 
                0x00000001b47431a0 (    0x14) typeinfo name for TResGraphMaker [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b47431b4 (    0x18) sSearchCrossLayerUseBestSilenceBoolHistory [NameNList, MangledNameNList, NList] 
                0x00000001b47431cc (    0x1c) typeinfo name for SearchCrossLayerParamSet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b47431e8 (    0x10) sTCH_Versions [NameNList, MangledNameNList, NList] 
                0x00000001b47431f8 (     0x7) errStr_word_charinfo_E_BAD_CHAR_TYPE [NameNList, MangledNameNList, NList] 
                0x00000001b47431ff (     0x2) errStr_word_charinfo_E_LOADING_MIXED_TEXT_AND_BINARY_SUBFILES [NameNList, MangledNameNList, NList] 
                0x00000001b4743201 (    0x1f) errStr_word_charinfo_E_BAD_ENCODED_STRING [NameNList, MangledNameNList, NList] 
                0x00000001b4743220 (    0x1c) typeinfo name for Hash<CWIDAtFrame, CWIDAtFrame, CWIDAtFrame, unsigned int> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b474323c (  0x1b54) typeinfo name for HashKEV<unsigned int, unsigned int, WordIdScope> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4744d90 (     0xe) typeinfo name for TException [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4744d9e (     0x6) typeinfo name for TRne [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4744da4 (    0x44) typeinfo name for TRneParamManager [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4744de8 (    0x11) sBET_Versions [NameNList, MangledNameNList, NList] 
                0x00000001b4744df9 (     0x3) errStr_pel_genclass_E_TNODE_NOT_COVERED [NameNList, MangledNameNList, NList] 
                0x00000001b4744dfc (    0x44) sGCT_Versions [NameNList, MangledNameNList, NList] 
                0x00000001b4744e40 (    0x10) errStr_recogctl_psholder_E_NAME_ALREADY_USED [NameNList, MangledNameNList, NList] 
                0x00000001b4744e50 (    0x40) sADPT_Versions [NameNList, MangledNameNList, NList] 
                0x00000001b4744e90 (    0x30) sCHPT_Versions [NameNList, MangledNameNList, NList] 
                0x00000001b4744ec0 (    0x18) sCOPT_Versions [NameNList, MangledNameNList, NList] 
                0x00000001b4744ed8 (    0x18) sLNPT_Versions [NameNList, MangledNameNList, NList] 
                0x00000001b4744ef0 (    0x18) sLPPT_Versions [NameNList, MangledNameNList, NList] 
                0x00000001b4744f08 (    0x40) sPBPT_Versions [NameNList, MangledNameNList, NList] 
                0x00000001b4744f48 (    0x40) sPSPT_Versions [NameNList, MangledNameNList, NList] 
                0x00000001b4744f88 (    0x18) sPGPT_Versions [NameNList, MangledNameNList, NList] 
                0x00000001b4744fa0 (    0x28) sSAPT_Versions [NameNList, MangledNameNList, NList] 
                0x00000001b4744fc8 (   0x138) sSRPT_Versions [NameNList, MangledNameNList, NList] 
                0x00000001b4745100 (    0x18) sSCPT_Versions [NameNList, MangledNameNList, NList] 
                0x00000001b4745118 (    0x18) sUDPT_Versions [NameNList, MangledNameNList, NList] 
                0x00000001b4745130 (    0x15) errStr_recogctl_psholder_E_BAD_FIELD_FORMAT [NameNList, MangledNameNList, NList] 
                0x00000001b4745145 (     0xe) errStr_recogctl_psholder_E_BAD_FIELD [NameNList, MangledNameNList, NList] 
                0x00000001b4745153 (     0x6) errStr_recogctl_psholder_E_NUM_FIELDS [NameNList, MangledNameNList, NList] 
                0x00000001b4745159 (    0x10) errStr_recogctl_psholder_E_INCOMPLETE_DEFAULT_BLOCK [NameNList, MangledNameNList, NList] 
                0x00000001b4745169 (    0x10) errStr_recogctl_psholder_E_INCORRECT_NUMBER_OF_SETS [NameNList, MangledNameNList, NList] 
                0x00000001b4745179 (     0xd) errStr_recogctl_psholder_E_WRONG_ZERO_SET_NUMBER [NameNList, MangledNameNList, NList] 
                0x00000001b4745186 (    0x18) errStr_recogctl_psholder_E_WRONG_SET_NAME [NameNList, MangledNameNList, NList] 
                0x00000001b474519e (    0x18) errStr_recogctl_psholder_E_WRONG_PARAMETER_NAME [NameNList, MangledNameNList, NList] 
                0x00000001b47451b6 (    0x18) errStr_recogctl_psholder_E_WRONG_BOOL_VALUE [NameNList, MangledNameNList, NList] 
                0x00000001b47451ce (    0x1f) errStr_recogctl_psholder_E_WRONG_BOOL_DEFAULT [NameNList, MangledNameNList, NList] 
                0x00000001b47451ed (    0x17) errStr_recogctl_psholder_E_WRONG_INT_DEFAULT [NameNList, MangledNameNList, NList] 
                0x00000001b4745204 (    0x17) errStr_recogctl_psholder_E_WRONG_DOUBLE_DEFAULT [NameNList, MangledNameNList, NList] 
                0x00000001b474521b (    0x1f) errStr_recogctl_psholder_E_WRONG_STRING_DEFAULT [NameNList, MangledNameNList, NList] 
                0x00000001b474523a (    0x1f) errStr_recogctl_psholder_E_WRONG_ENUM_DEFAULT [NameNList, MangledNameNList, NList] 
                0x00000001b4745259 (     0xd) errStr_recogctl_psholder_E_ZERO_NONDEFAULT_SET_NUMBER [NameNList, MangledNameNList, NList] 
                0x00000001b4745266 (    0x10) errStr_recogctl_psholder_E_WRONG_SET_NUMBER [NameNList, MangledNameNList, NList] 
                0x00000001b4745276 (    0x11) errStr_recogctl_psholder_E_INVALID_SET_NAME_TEXT [NameNList, MangledNameNList, NList] 
                0x00000001b4745287 (    0x17) errStr_recogctl_psholder_E_REUSED_SET_NAME [NameNList, MangledNameNList, NList] 
                0x00000001b474529e (    0x11) errStr_recogctl_psholder_E_NONEMPTY_PARAMETER_VALUE [NameNList, MangledNameNList, NList] 
                0x00000001b47452af (    0x1b) errStr_recogctl_psholder_E_REDEFINED_SET_NAME [NameNList, MangledNameNList, NList] 
                0x00000001b47452ca (     0xd) errStr_recogctl_psholder_E_UNEXPECTED_EMPTY_PARAM_NAME [NameNList, MangledNameNList, NList] 
                0x00000001b47452d7 (    0x11) errStr_recogctl_psholder_E_UNRECOGNIZED_PARAMETER_NAME [NameNList, MangledNameNList, NList] 
                0x00000001b47452e8 (    0x11) errStr_recogctl_psholder_E_REPEATED_PARAMETER_NAME [NameNList, MangledNameNList, NList] 
                0x00000001b47452f9 (    0x18) errStr_recogctl_psholder_E_ILLEGAL_ENUM_VALUE [NameNList, MangledNameNList, NList] 
                0x00000001b4745311 (     0xe) errStr_recogctl_psholder_E_INVALID_SET_NAME_BINARY [NameNList, MangledNameNList, NList] 
                0x00000001b474531f (     0x7) errStr_recogctl_psholder_E_INVALID_SET_NAME_ARG [NameNList, MangledNameNList, NList] 
                0x00000001b4745326 (     0x1) errStr_recogctl_psholder_E_NULL_SET_TO_COPY [NameNList, MangledNameNList, NList] 
                0x00000001b4745327 (     0x1) errStr_recogctl_psholder_E_NONNULL_PARAMSET_ARG [NameNList, MangledNameNList, NList] 
                0x00000001b4745328 (     0x7) errStr_recogctl_psholder_E_MANY_PARAMSETS_ONE_NAME [NameNList, MangledNameNList, NList] 
                0x00000001b474532f (     0x3) errStr_recogctl_psholder_E_GETTING_NONEXISTENT_PARAMSET [NameNList, MangledNameNList, NList] 
                0x00000001b4745332 (     0x3) errStr_recogctl_psholder_E_READING_NONEXISTENT_PARAMSET [NameNList, MangledNameNList, NList] 
                0x00000001b4745335 (     0x3) errStr_recogctl_psholder_E_INVALID_PARAMSETHOLDERID [NameNList, MangledNameNList, NList] 
                0x00000001b4745338 (     0xc) errStr_recogctl_psholder_E_PARAMSETHOLDER_IN_USE [NameNList, MangledNameNList, NList] 
                0x00000001b4745344 (    0x2c) typeinfo name for Hash<DgnString, DgnString, DgnStringScope, unsigned int> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4745370 (    0x18) sChannelEnablePitchTrackingBoolHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4745388 (    0x30) sChannelWaveInputClippingThresholdIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b47453b8 (    0x18) sChannelWaveInputEnableSpectralWarpingBoolHistory [NameNList, MangledNameNList, NList] 
                0x00000001b47453d0 (    0x30) sChannelWaveStereoInputSelectSourceIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4745400 (    0x18) sChannelMaxNormEnergyUseOnlineBoolHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4745418 (    0x30) sChannelOnlineMaxNormEnergyInitialWindowFramesIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4745448 (    0x30) sChannelOnlineMaxNormEnergyGeneralRampFactorIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4745478 (    0x30) sChannelOnlineMaxNormEnergyGeneralDecayValueIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b47454a8 (    0x30) sChannelWavePacketLossDetectionPacketSizeIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b47454d8 (    0x30) sChannelWavePacketLossDetectionSlopeThreshIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4745508 (    0x30) sChannelWavePacketLossDetectionSlopeCountPercentIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4745538 (    0x30) sChannelWavePacketLossDetectionWindowSizeIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4745568 (    0x18) sChannelAdaptationDelayApplyTillUttEndBoolHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4745580 (    0x30) sChannelAdaptationMeansRelevanceIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b47455b0 (    0x30) sChannelAdaptationMeansAccumSmoothingWindowMicrosecondsIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b47455e0 (    0x18) sChannelAdaptationMeansAdaptFastInitiallyBoolHistory [NameNList, MangledNameNList, NList] 
                0x00000001b47455f8 (    0x18) sChannelAdaptationMeansDelayApplyInitiallyBoolHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4745610 (    0x30) sChannelAdaptationMeansInitialWindowMicrosecondsIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4745640 (    0x30) sChannelAdaptationMeansWindowMicrosecondsIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4745670 (    0x50) sChannelAdaptationMeansRelevanceScaleDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b47456c0 (    0x24) sChannelAdaptationMeansUseGlobalAccumBoolHistory [NameNList, MangledNameNList, NList] 
                0x00000001b47456e4 (    0x18) sChannelAdaptationMeansUseSilenceTrackerBoolHistory [NameNList, MangledNameNList, NList] 
                0x00000001b47456fc (    0x18) sChannelAdaptationMeansC0UseSilenceTrackerBoolHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4745714 (    0x18) sChannelAdaptationMeansApplySynchronousBoolHistory [NameNList, MangledNameNList, NList] 
                0x00000001b474572c (    0x30) sChannelAdaptationCDFRelevanceIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b474575c (    0x18) sChannelAdaptationCDFAdaptFastInitiallyBoolHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4745774 (    0x30) sChannelAdaptationCDFWindowMicrosecondsIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b47457a4 (    0x18) sChannelAdaptationCDFUseSilenceTrackerBoolHistory [NameNList, MangledNameNList, NList] 
                0x00000001b47457bc (    0x30) sChannelAdaptationInterpolatedCDFMaxPercentMassPerBinIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b47457ec (    0x30) sChannelAdaptationVarianceRelevanceIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b474581c (    0x18) sChannelAdaptationVarianceAdaptFastInitiallyBoolHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4745834 (    0x30) sChannelAdaptationVarianceWindowMicrosecondsIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4745864 (    0x18) sChannelAdaptationVarianceUseSilenceTrackerBoolHistory [NameNList, MangledNameNList, NList] 
                0x00000001b474587c (    0x30) sChannelSilenceTrackerInitialLevelIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b47458ac (    0x30) sChannelSilenceTrackerBackgroundThreshIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b47458dc (    0x30) sChannelSilenceTrackerSpeechThreshIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b474590c (    0x30) sChannelSilenceTrackerIncrementPerSecondIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b474593c (    0x30) sChannelSilenceTrackerDecrementPerSecondIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b474596c (    0x30) sChannelSilenceTrackerOutlierWindowMicrosecondsIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b474599c (    0x30) sChannelSilenceTrackerOutlierMinTriggerPercentIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b47459cc (    0x30) sChannelSilenceTrackerRelevanceIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b47459fc (    0x34) sChannelSpectralSubtractionDelayMicrosecondsIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4745a30 (    0x50) sChannelSpectralSubtractionTargetSNRDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4745a80 (    0x18) sChannelSpectralSubtractionDisableAtTargetSNRBoolHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4745a98 (    0x30) sChannelSpectralSubtractionInitialWindowMicrosecondsIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4745ac8 (    0x50) sChannelSpectralSubtractionDecayRateDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4745b18 (    0x30) sChannelSpectralSubtractionMinSNRMicrosecondsIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4745b48 (    0x50) sChannelSpectralSubtractionMaxNoiseScaleChangeDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4745b98 (    0x30) sChannelSpectralSubtractionStartDecimationMicrosecondsIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4745bc8 (    0x30) sUttDetBackgroundFloorIncreasePerSecondIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4745bf8 (    0x18) sUttDetResetFileChannelStateAfterSectionBoolHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4745c10 (    0x30) sUttDetSpeechThreshOffsetPercentIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4745c40 (    0x30) sUttDetBackgroundThreshPercentIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4745c70 (    0x30) sUttDetBeginUttWindowMicrosecondsIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4745ca0 (    0x30) sUttDetBeginUttMinTriggerPercentIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4745cd0 (    0x30) sUttDetEndUttWindowMicrosecondsIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4745d00 (    0x30) sUttDetEndUttMinTriggerPercentIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4745d30 (    0x30) sUttDetInitializeWindowMicrosecondsIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4745d60 (    0x30) sUttDetInitialBackgroundLevelMinIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4745d90 (    0x30) sUttDetInitialBackgroundLevelRangeIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4745dc0 (    0x30) sUttDetSpeechOffsetMinIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4745df0 (    0x30) sUttDetSpeechOffsetRangeIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4745e20 (    0x30) sUttDetSpeechUttSecondsMinIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4745e50 (    0x30) sUttDetSpeechUttSecondsRangeIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4745e80 (    0x30) sUttDetMaxNonSpeechUttSecondsIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4745eb0 (    0x18) sUttDetLimitFrameEnergyBoolHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4745ec8 (    0x30) sUttDetBackgroundFloorDecreasePerSecondIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4745ef8 (    0x30) sUttDetBackgroundFloorOutlierWindowMicrosecondsIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4745f28 (    0x30) sUttDetBackgroundFloorOutlierMinTriggerPercentIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4745f58 (    0x20) typeinfo name for ChannelParamSet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4745f78 (    0x12) errStr_dfutil_dtxtfile_E_NON_DIGIT [NameNList, MangledNameNList, NList] 
                0x00000001b4745f8a (    0x11) errStr_dfutil_dtxtfile_E_INTEGER_TOO_LARGE [NameNList, MangledNameNList, NList] 
                0x00000001b4745f9b (    0x11) errStr_dfutil_dtxtfile_E_BAD_VERSION_SEQUENCE [NameNList, MangledNameNList, NList] 
                0x00000001b4745fac (    0x15) errStr_dfutil_dtxtfile_E_MISSING_HEADER_FIELD [NameNList, MangledNameNList, NList] 
                0x00000001b4745fc1 (    0x1e) errStr_dfutil_dtxtfile_E_INCORRECT_HEADER_FIELD_UNSIGNED [NameNList, MangledNameNList, NList] 
                0x00000001b4745fdf (    0x24) errStr_dfutil_dtxtfile_E_INCORRECT_HEADER_FIELD_UNSIGNED64 [NameNList, MangledNameNList, NList] 
                0x00000001b4746003 (    0x1e) errStr_dfutil_dtxtfile_E_INCORRECT_HEADER_FIELD_INTEGER [NameNList, MangledNameNList, NList] 
                0x00000001b4746021 (    0x1e) errStr_dfutil_dtxtfile_E_INCORRECT_HEADER_FIELD_REAL [NameNList, MangledNameNList, NList] 
                0x00000001b474603f (     0x4) sZeroLengthFieldSpecialValue [NameNList, MangledNameNList, NList] 
                0x00000001b4746043 (    0x19) errStr_dfutil_dtxtfile_E_BAD_FORMATTED_CHAR [NameNList, MangledNameNList, NList] 
                0x00000001b474605c (    0x14) errStr_dfutil_dtxtfile_E_MISSING_HEX_CHAR [NameNList, MangledNameNList, NList] 
                0x00000001b4746070 (    0x17) errStr_dfutil_dtxtfile_E_BAD_HEX_CHAR [NameNList, MangledNameNList, NList] 
                0x00000001b4746087 (    0x11) errStr_dfutil_dtxtfile_E_ZERO_HEX_SEQUENCE [NameNList, MangledNameNList, NList] 
                0x00000001b4746098 (     0xe) errStr_dfutil_dtxtfile_E_MISMATCHING_TYPE [NameNList, MangledNameNList, NList] 
                0x00000001b47460a6 (    0x14) errStr_dfutil_dtxtfile_E_INCORRECT_VERSION [NameNList, MangledNameNList, NList] 
                0x00000001b47460ba (    0x14) errStr_dfutil_dtxtfile_E_WRONG_NUMBER_OF_FIELD_SPECS [NameNList, MangledNameNList, NList] 
                0x00000001b47460ce (     0xe) errStr_dfutil_dtxtfile_E_NON_EMPTY_BODY [NameNList, MangledNameNList, NList] 
                0x00000001b47460dc (    0x15) errStr_dfutil_dtxtfile_E_UNKNOWN_HEADER_FIELD [NameNList, MangledNameNList, NList] 
                0x00000001b47460f1 (    0x14) spkDgnTextVersionLine [NameNList, MangledNameNList, NList] 
                0x00000001b4746105 (    0x11) errStr_dfutil_dtxtfile_E_BAD_TYPE_LINE [NameNList, MangledNameNList, NList] 
                0x00000001b4746116 (    0x11) errStr_dfutil_dtxtfile_E_BAD_VERSION_LINE [NameNList, MangledNameNList, NList] 
                0x00000001b4746127 (    0x11) errStr_dfutil_dtxtfile_E_BAD_DGNTEXTFILE_VERSION [NameNList, MangledNameNList, NList] 
                0x00000001b4746138 (    0x11) spkDgnTextTypeLine [NameNList, MangledNameNList, NList] 
                0x00000001b4746149 (    0x1e) spkDgnTextFileMajorVersionLine [NameNList, MangledNameNList, NList] 
                0x00000001b4746167 (    0x11) errStr_dfutil_dtxtfile_E_BAD_FILEVERSION_LINE [NameNList, MangledNameNList, NList] 
                0x00000001b4746178 (    0x18) errStr_dfutil_dtxtfile_E_BAD_FILE_VERSION [NameNList, MangledNameNList, NList] 
                0x00000001b4746190 (    0x1e) spkDgnTextFileMinorVersionLine [NameNList, MangledNameNList, NList] 
                0x00000001b47461ae (    0x13) spkDgnTextFieldsFieldName [NameNList, MangledNameNList, NList] 
                0x00000001b47461c1 (    0x11) errStr_dfutil_dtxtfile_E_BAD_FIELDS_LINE [NameNList, MangledNameNList, NList] 
                0x00000001b47461d2 (    0x11) errStr_dfutil_dtxtfile_E_BAD_FIELD_NAME [NameNList, MangledNameNList, NList] 
                0x00000001b47461e3 (    0x14) spkDgnTextFieldsEndFieldName [NameNList, MangledNameNList, NList] 
                0x00000001b47461f7 (    0x11) errStr_dfutil_dtxtfile_E_BAD_FIELD_VALUE [NameNList, MangledNameNList, NList] 
                0x00000001b4746208 (    0x11) errStr_dfutil_dtxtfile_E_REPEATED_DGNTEXTFILE_FIELDS [NameNList, MangledNameNList, NList] 
                0x00000001b4746219 (    0x18) errStr_dfutil_dtxtfile_E_UNKNOWN_DGNTEXTFILE_KEYWORD [NameNList, MangledNameNList, NList] 
                0x00000001b4746231 (    0x18) errStr_dfutil_dtxtfile_E_REPEATED_FIELD [NameNList, MangledNameNList, NList] 
                0x00000001b4746249 (    0x18) errStr_dfutil_dtxtfile_E_NONPRINTABLE_IN_FIELD [NameNList, MangledNameNList, NList] 
                0x00000001b4746261 (    0x18) errStr_dfutil_dtxtfile_E_WHITESPACE_IN_FIELD [NameNList, MangledNameNList, NList] 
                0x00000001b4746279 (     0xa) errStr_dfutil_dtxtfile_E_UNNAMED_FIELD [NameNList, MangledNameNList, NList] 
                0x00000001b4746283 (     0xa) errStr_dfutil_dtxtfile_E_EMPTY_FIELD_NAME [NameNList, MangledNameNList, NList] 
                0x00000001b474628d (    0x11) errStr_dfutil_dtxtfile_E_NONPRINTABLE_OR_COLON_IN_FIELD_NAME [NameNList, MangledNameNList, NList] 
                0x00000001b474629e (    0x14) errStr_dfutil_dtxtfile_E_REDUNDANT_FIELD_NAME [NameNList, MangledNameNList, NList] 
                0x00000001b47462b2 (    0x11) errStr_dfutil_dtxtfile_E_UNKNOWN_FIELD_TYPE [NameNList, MangledNameNList, NList] 
                0x00000001b47462c3 (    0x14) errStr_dfutil_dtxtfile_E_FIELD_PARSE_PROBLEM [NameNList, MangledNameNList, NList] 
                0x00000001b47462d7 (    0x1b) errStr_dfutil_dtxtfile_E_FIELD_REMAINDER_IN_PARSE [NameNList, MangledNameNList, NList] 
                0x00000001b47462f2 (     0xa) errStr_dfutil_dtxtfile_E_MID_LINE_EOF [NameNList, MangledNameNList, NList] 
                0x00000001b47462fc (     0xe) typeinfo name for DgnTextFile [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b474630a (    0x14) typeinfo name for DgnTextFileParser [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b474631e (    0x22) typeinfo name for DgnTextFileWriter [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4746340 (     0x1) errStr_sdapi_sdrecog_E_RECOG_UNLOADEDLM [NameNList, MangledNameNList, NList] 
                0x00000001b4746341 (     0x1) errStr_sdapi_sdrecog_E_NO_SPOKENFORM [NameNList, MangledNameNList, NList] 
                0x00000001b4746342 (     0x1) errStr_sdapi_sdrecog_E_BAD_SPOKENFORM [NameNList, MangledNameNList, NList] 
                0x00000001b4746343 (     0x1) errStr_sdapi_sdrecog_E_ZERO_MAXNEWPRONS [NameNList, MangledNameNList, NList] 
                0x00000001b4746344 (     0x1) errStr_sdapi_sdrecog_E_BAD_COLL [NameNList, MangledNameNList, NList] 
                0x00000001b4746345 (     0x1) errStr_sdapi_sdrecog_E_SEEDTABLE_MISMATCH [NameNList, MangledNameNList, NList] 
                0x00000001b4746346 (     0x5) errStr_sdapi_sdrecog_E_BAD_WORDVOC [NameNList, MangledNameNList, NList] 
                0x00000001b474634b (     0x6) errStr_sdapi_sdrecog_E_MISMATCHED_PHONEME_TABLES_VOCS [NameNList, MangledNameNList, NList] 
                0x00000001b4746351 (     0x7) errStr_sdapi_sdrecog_E_NONACOUSTIC_PRON_SPOKENFORMS [NameNList, MangledNameNList, NList] 
                0x00000001b4746358 (    0x1b) typeinfo name for HashKEV<unsigned int, unsigned int, StateIdScope> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4746373 (     0x7) errStr_recogctl_repromgr_E_INVALID_FILESPEC [NameNList, MangledNameNList, NList] 
                0x00000001b474637a (     0x7) errStr_recogctl_repromgr_E_NO_MATCHING_REPRODIR [NameNList, MangledNameNList, NList] 
                0x00000001b4746381 (     0x7) errStr_recogctl_repromgr_E_MANY_MATCHING_REPRODIR [NameNList, MangledNameNList, NList] 
                0x00000001b4746388 (     0x7) errStr_recogctl_repromgr_E_NONEMPTY_REPRODIR [NameNList, MangledNameNList, NList] 
                0x00000001b474638f (    0x13) savePars(DgnStream*, char const*, bool)::pBoolFormat [NameNList, MangledNameNList, NList] 
                0x00000001b47463a2 (    0x13) savePars(DgnStream*, char const*, bool)::pIntFormat [NameNList, MangledNameNList, NList] 
                0x00000001b47463b5 (    0x13) savePars(DgnStream*, char const*, bool)::pDoubleFormat [NameNList, MangledNameNList, NList] 
                0x00000001b47463c8 (    0x13) savePars(DgnStream*, char const*, bool)::pStringFormat [NameNList, MangledNameNList, NList] 
                0x00000001b47463db (    0x18) errStr_mrecutil_dstrutil_E_MISMATCHED_NUM_OF_ITEMS [NameNList, MangledNameNList, NList] 
                0x00000001b47463f3 (    0x14) errStr_mrecutil_dstrutil_E_UINT_OUT_OF_RANGE [NameNList, MangledNameNList, NList] 
                0x00000001b4746407 (    0x14) errStr_mrecutil_dstrutil_E_FLOAT_OUT_OF_RANGE [NameNList, MangledNameNList, NList] 
                0x00000001b474641b (    0x11) errStr_mrecutil_paramset_E_WRONG_TYPE_FOR_PARAMID [NameNList, MangledNameNList, NList] 
                0x00000001b474642c (     0xa) errStr_mrecutil_paramset_E_WRONG_QUERY_MODE [NameNList, MangledNameNList, NList] 
                0x00000001b4746436 (     0xe) errStr_mrecutil_paramset_E_PARAMSET_SET_FAILED [NameNList, MangledNameNList, NList] 
                0x00000001b4746444 (    0x1c) errStr_mrecutil_paramset_E_WRONG_PARAMID_VALUE [NameNList, MangledNameNList, NList] 
                0x00000001b4746460 (    0x32) sRPD_Versions [NameNList, MangledNameNList, NList] 
                0x00000001b4746492 (    0x2e) typeinfo name for TReentrancyException [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b47464c0 (  0x3580) TWord::ms_pnOTBIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4749a40 (    0x2c) s_pszUnaccentedVowels [NameNList, MangledNameNList, NList] 
                0x00000001b4749a6c (    0x2c) s_pszAccentedVowels [NameNList, MangledNameNList, NList] 
                0x00000001b4749a98 (    0x17) typeinfo name for TLexiconParamManager [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4749aaf (     0xa) typeinfo name for TLexicon [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4749ab9 (    0x57) typeinfo name for TRegisterable<TLexicon> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4749b10 (    0x38) typeinfo name for TRegisterable<TParamManager> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4749b48 (    0x71) typeinfo name for THashBase<std::__1::pair<wchar_t const* const, TWord*>, THashMapCompare<std::__1::pair<wchar_t const* const, TWord*>, TWideCharEqualTo>, THashMapFunction<std::__1::pair<wchar_t const* const, TWord*>, THash<wchar_t const*>>> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4749bb9 (    0x76) typeinfo name for THashBase<std::__1::pair<wchar_t* const, TWordBlock*>, THashMapCompare<std::__1::pair<wchar_t* const, TWordBlock*>, TWideCharEqualTo>, THashMapFunction<std::__1::pair<wchar_t* const, TWordBlock*>, THash<wchar_t const*>>> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4749c2f (    0xa1) typeinfo name for THashBase<std::__1::pair<TDecodeLinkMapWord::THistory const, TDecodeLinkMapWord const*>, THashMapCompare<std::__1::pair<TDecodeLinkMapWord::THistory const, TDecodeLinkMapWord const*>, std::__1::equal_to<TDecodeLinkMapWord::THistory>>, THashMapFunction<std::__1::pair<TDecodeLinkMapWord::THistory const, TDecodeLinkMapWord const*>, THash<TDecodeLinkMapWord::THistory>>> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4749cd0 (    0x1c) findPreviousVowel(wchar_t const*, int)::s_pszStrongVowels [NameNList, MangledNameNList, NList] 
                0x00000001b4749cec (    0x24) findPreviousVowel(wchar_t const*, int)::s_pszWeakVowels [NameNList, MangledNameNList, NList] 
                0x00000001b4749d10 (    0x38) typeinfo name for THashMap<wchar_t*, TWordBlock*, THash<wchar_t const*>, TWideCharEqualTo> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4749d48 (    0x33) typeinfo name for THashMap<wchar_t const*, TWord*, THash<wchar_t const*>, TWideCharEqualTo> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4749d7b (     0x1) std::__1::piecewise_construct [NameNList, MangledNameNList, NList] 
                0x00000001b4749d7c (    0x51) typeinfo name for THashMap<TDecodeLinkMapWord::THistory, TDecodeLinkMapWord const*, THash<TDecodeLinkMapWord::THistory>, std::__1::equal_to<TDecodeLinkMapWord::THistory>> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4749dcd (     0x2) errStr_voc_statemgr_E_MIXED_TEXT_AND_BINARY_SUBFILES [NameNList, MangledNameNList, NList] 
                0x00000001b4749dcf (     0x3) errStr_voc_statemgr_E_INVALID_STATE [NameNList, MangledNameNList, NList] 
                0x00000001b4749dd2 (     0x1) errStr_voc_statemgr_E_CHAINED_WORD_ALIAS [NameNList, MangledNameNList, NList] 
                0x00000001b4749dd3 (     0x7) errStr_voc_statemgr_E_PRECEDING_NONACOUSTIC_WORD_STATE [NameNList, MangledNameNList, NList] 
                0x00000001b4749dda (     0x1) errStr_voc_statemgr_E_TOO_MANY_STATES [NameNList, MangledNameNList, NList] 
                0x00000001b4749ddb (     0x6) errStr_voc_statemgr_E_ENSURE_STATE [NameNList, MangledNameNList, NList] 
                0x00000001b4749de1 (     0x3) errStr_voc_statemgr_E_DUP_ENSURE_STATE [NameNList, MangledNameNList, NList] 
                0x00000001b4749de4 (    0x17) errStr_voc_statemgr_E_REFERRED_STATE_WITH_EXAMPLE [NameNList, MangledNameNList, NList] 
                0x00000001b4749dfb (    0x14) errStr_voc_statemgr_E_REFERRED_STATE [NameNList, MangledNameNList, NList] 
                0x00000001b4749e0f (     0x7) errStr_voc_statemgr_E_DUPLICATE_STATE [NameNList, MangledNameNList, NList] 
                0x00000001b4749e16 (     0x1) errStr_voc_statemgr_E_WORDPENALTY [NameNList, MangledNameNList, NList] 
                0x00000001b4749e17 (     0x6) errStr_voc_statemgr_E_WORD_ALREADY_IN_STATE [NameNList, MangledNameNList, NList] 
                0x00000001b4749e1d (     0x6) errStr_voc_statemgr_E_WORD_NOT_IN_STATE [NameNList, MangledNameNList, NList] 
                0x00000001b4749e23 (    0x13) errStr_voc_statemgr_E_REFERRED_ITEM_STATE_PAIR [NameNList, MangledNameNList, NList] 
                0x00000001b4749e36 (     0x3) errStr_voc_statemgr_E_INCONSISTENT_PRECEDING_NONACOUSTIC_WORD_STATE [NameNList, MangledNameNList, NList] 
                0x00000001b4749e39 (     0x1) errStr_voc_statemgr_E_SKIPPABLE_WB_MISMATCH [NameNList, MangledNameNList, NList] 
                0x00000001b4749e3a (    0x17) errStr_voc_statemgr_E_INCONSISTENT_TIMES [NameNList, MangledNameNList, NList] 
                0x00000001b4749e51 (     0x6) errStr_voc_statemgr_E_ALL_SKIPPABLE_LOOP [NameNList, MangledNameNList, NList] 
                0x00000001b4749e57 (    0x39) errStr_voc_statemgr_E_TRANSITION_WB_MISMATCH [NameNList, MangledNameNList, NList] 
                0x00000001b4749e90 (     0x4) errStr_fst_fstcore_E_FST_TOO_MANY_EMBEDDED_TRANSDUCERS [NameNList, MangledNameNList, NList] 
                0x00000001b4749e94 (     0x7) errStr_fst_fstcore_E_FST_NOT_IMPLEMENTED [NameNList, MangledNameNList, NList] 
                0x00000001b4749e9b (     0x1) errStr_fst_fstcore_E_FST_START_TOKENS_DO_NOT_MATCH [NameNList, MangledNameNList, NList] 
                0x00000001b4749e9c (    0x25) typeinfo name for HashKEV<ComposeLatticeNode, ComposeLatticeNode, ComposeLatticeNode> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4749ec1 (  0xbc9b) typeinfo name for Hash<CwidStatePair, CwidStatePair, CwidStatePair, bool> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4755b5c (    0x44) typeinfo name for TTokenizerParamManager [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4755ba0 (     0x8) errStr_recogctl_contrnac_E_IDENTITY_TRANSFORM [NameNList, MangledNameNList, NList] 
                0x00000001b4755ba8 (     0x8) LEXER_BADID [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4755bb0 (    0x40) typeinfo name for TDataException [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4755bf0 (    0x14) typeinfo name for TSyntaxException [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4755c04 (     0x3) errStr_fst_agmgr_E_BADARCGRAPHID [NameNList, MangledNameNList, NList] 
                0x00000001b4755c07 (    0x30) errStr_dfutil_littlend_E_BADDOUBLE [NameNList, MangledNameNList, NList] 
                0x00000001b4755c37 (     0x3) errStr_recogctl_rctlmgr_E_BAD_RECOGCONTROLLERID [NameNList, MangledNameNList, NList] 
                0x00000001b4755c3a (     0x1) errStr_sdapi_sdenv_E_EMPTYNAME [NameNList, MangledNameNList, NList] 
                0x00000001b4755c3b (    0x35) errStr_sdapi_sdenv_E_RESERVED [NameNList, MangledNameNList, NList] 
                0x00000001b4755c70 (    0x71) typeinfo name for SearchItf [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4755ce1 (     0xf) errStr_fst_fstsrch_E_FST_INVALID_SEARCH_TYPE [NameNList, MangledNameNList, NList] 
                0x00000001b4755cf0 (    0x22) typeinfo name for FstSearchLateLatticeHashBackoff [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4755d12 (    0x1b) typeinfo name for FstSearchLateLatticeHash [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4755d2d (    0x1e) typeinfo name for FstSearchLatticeHashBackoff [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4755d4b (    0x17) typeinfo name for FstSearchLatticeHash [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4755d62 (    0x1f) typeinfo name for FstSearchDurationHashBackoff [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4755d81 (    0x18) typeinfo name for FstSearchDurationHash [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4755d99 (    0x17) typeinfo name for FstSearchHashBackoff [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4755db0 (    0x10) typeinfo name for FstSearchHash [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4755dc0 (    0x26) typeinfo name for FstSearchLeafLatticeDurationBackoff [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4755de6 (    0x1f) typeinfo name for FstSearchLeafLatticeDuration [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4755e05 (    0x1e) typeinfo name for FstSearchLeafLatticeBackoff [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4755e23 (    0x17) typeinfo name for FstSearchLeafLattice [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4755e3a (    0x22) typeinfo name for FstSearchLatticeDurationBackoff [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4755e5c (    0x1b) typeinfo name for FstSearchLatticeDuration [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4755e77 (    0x1e) typeinfo name for FstSearchLateLatticeBackoff [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4755e95 (    0x17) typeinfo name for FstSearchLateLattice [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4755eac (    0x1a) typeinfo name for FstSearchLatticeBackoff [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4755ec6 (    0x13) typeinfo name for FstSearchLattice [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4755ed9 (    0x1f) typeinfo name for FstSearchLeafDurationBackoff [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4755ef8 (    0x18) typeinfo name for FstSearchLeafDuration [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4755f10 (    0x1b) typeinfo name for FstSearchDurationBackoff [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4755f2b (    0x14) typeinfo name for FstSearchDuration [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4755f3f (    0x17) typeinfo name for FstSearchLeafBackoff [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4755f56 (    0x10) typeinfo name for FstSearchLeaf [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4755f66 (    0x13) typeinfo name for FstSearchBackoff [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4755f79 (     0xb) typeinfo name for FstSearch [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4755f84 (    0x10) errStr_fst_fstsrch_E_FST_PARAM_INVALID_FOR_ARCGRAPH [NameNList, MangledNameNList, NList] 
                0x00000001b4755f94 (    0x12) typeinfo name for TApiException [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4755fa6 (    0x2a) typeinfo name for TUnexpectedException [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4755fd0 (     0xf) typeinfo name for DgnException [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4755fdf (    0x15) typeinfo name for DgnFileIOException [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4755ff4 (   0x100) sEncryptPerm256Table [NameNList, MangledNameNList, NList] 
                0x00000001b47560f4 (     0x3) errStr_dfutil_encrypt_E_BADENCRYPTION [NameNList, MangledNameNList, NList] 
                0x00000001b47560f7 (   0x100) sDecryptPerm256Table [NameNList, MangledNameNList, NList] 
                0x00000001b47561f7 (     0xd) typeinfo name for ActiveWord [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4756204 (    0x18) typeinfo name for ActiveWordNoCoartBase [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b475621c (    0x18) typeinfo name for ActiveWordNonAcoustic [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4756234 (    0x14) typeinfo name for ActiveWordSilence [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4756248 (    0x14) typeinfo name for ActiveWordNoCoart [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b475625c (    0x16) typeinfo name for ActiveWordCoartBase [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4756272 (    0x13) typeinfo name for ActiveWordCoart1 [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4756285 (    0x13) typeinfo name for ActiveWordCoartN [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4756298 (    0x18) typeinfo name for ActiveWordEmbeddedFst [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b47562b0 (    0x22) typeinfo name for Hash<CWIDAC, CWIDAC, CWIDAC, ActiveWord*> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b47562d2 (    0x26) typeinfo name for HashKEV<CWIDAC, CWIDAC, CWIDAC> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b47562f8 (     0x3) errStr_user_user_E_HAS_ADAPTER [NameNList, MangledNameNList, NList] 
                0x00000001b47562fb (     0x3) errStr_user_user_E_HAS_PREFILTERER [NameNList, MangledNameNList, NList] 
                0x00000001b47562fe (     0x4) errStr_user_user_E_HAS_TRANSDUCER [NameNList, MangledNameNList, NList] 
                0x00000001b4756302 (     0x6) errStr_user_user_E_NO_ADAPTER [NameNList, MangledNameNList, NList] 
                0x00000001b4756308 (    0x18) sConfidenceEnableWordLevelBoolHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4756320 (    0x18) sConfidenceEnableUttLevelBoolHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4756338 (    0x18) sConfidenceEnableForAllNBestBoolHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4756350 (    0x50) sConfidenceUttNBestHighThreshDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b47563a0 (    0x50) sConfidenceUttNBestLowThreshDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b47563f0 (    0x50) sConfidenceWordProbConstantTermDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4756440 (    0x50) sConfidenceUttProbConstantTermDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4756490 (    0x50) sConfidenceUttProbTotalLMScoreFactorDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b47564e0 (    0x50) sConfidenceUttProbAverageLMScoreFactorDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4756530 (    0x50) sConfidenceUttProbUttAverageAMinusBScoreFactorDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4756580 (    0x50) sConfidenceUttProbNBestWordAverageFactorDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b47565d0 (    0x50) sConfidenceUttProbNBestMaxFactorDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4756620 (    0x50) sConfidenceUttProbNBestMinFactorDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4756670 (    0x50) sConfidenceUttProbNBestHighCountFactorDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b47566c0 (    0x50) sConfidenceUttProbNBestLowCountFactorDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4756710 (    0x50) sConfidenceUttProbAverageActiveNodeCountFactorDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4756760 (    0x50) sConfidenceUttProbMaxWordsEndingFactorDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b47567b0 (    0x50) sConfidenceUttProbAverageDurationFactorDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4756800 (    0x50) sConfidenceUttProbLogWordCountFactorDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4756850 (    0x50) sConfidenceWordProbLeftContextIndicator2FactorDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b47568a0 (    0x50) sConfidenceWordProbLeftContextIndicator1FactorDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b47568f0 (    0x50) sConfidenceWordProbRightContextIndicator1FactorDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4756940 (    0x50) sConfidenceWordProbRightContextIndicator2FactorDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4756990 (    0x50) sConfidenceWordProbDurationFactorDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b47569e0 (    0x50) sConfidenceWordProbDurationLCntx2FactorDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4756a30 (    0x50) sConfidenceWordProbDurationLCntx1FactorDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4756a80 (    0x50) sConfidenceWordProbDurationRCntx1FactorDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4756ad0 (    0x50) sConfidenceWordProbDurationRCntx2FactorDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4756b20 (    0x50) sConfidenceWordProbAverageActiveNodeCountFactorDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4756b70 (    0x50) sConfidenceWordProbAverageActiveNodeCountLCntx2FactorDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4756bc0 (    0x50) sConfidenceWordProbAverageActiveNodeCountLCntx1FactorDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4756c10 (    0x50) sConfidenceWordProbAverageActiveNodeCountRCntx1FactorDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4756c60 (    0x50) sConfidenceWordProbAverageActiveNodeCountRCntx2FactorDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4756cb0 (    0x50) sConfidenceWordProbAverageAMinusBScoreFactorDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4756d00 (    0x50) sConfidenceWordProbAverageAMinusBScoreLCntx2FactorDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4756d50 (    0x50) sConfidenceWordProbAverageAMinusBScoreLCntx1FactorDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4756da0 (    0x50) sConfidenceWordProbAverageAMinusBScoreRCntx1FactorDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4756df0 (    0x50) sConfidenceWordProbAverageAMinusBScoreRCntx2FactorDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4756e40 (    0x50) sConfidenceWordProbLMScoreFactorDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4756e90 (    0x50) sConfidenceWordProbLMScoreLCntx2FactorDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4756ee0 (    0x50) sConfidenceWordProbLMScoreLCntx1FactorDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4756f30 (    0x50) sConfidenceWordProbLMScoreRCntx1FactorDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4756f80 (    0x50) sConfidenceWordProbLMScoreRCntx2FactorDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4756fd0 (    0x50) sConfidenceWordProbNBestScoreFactorDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4757020 (    0x50) sConfidenceWordProbNBestScoreLCntx2FactorDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4757070 (    0x50) sConfidenceWordProbNBestScoreLCntx1FactorDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b47570c0 (    0x50) sConfidenceWordProbNBestScoreRCntx1FactorDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4757110 (    0x50) sConfidenceWordProbNBestScoreRCntx2FactorDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4757160 (    0x50) sConfidenceWordProbWordsEndingCountFactorDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b47571b0 (    0x50) sConfidenceWordProbWordsEndingCountLCntx2FactorDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4757200 (    0x50) sConfidenceWordProbWordsEndingCountLCntx1FactorDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4757250 (    0x50) sConfidenceWordProbWordsEndingCountRCntx1FactorDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b47572a0 (    0x50) sConfidenceWordProbWordsEndingCountRCntx2FactorDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b47572f0 (    0x50) sConfidenceWordProbAverageBestScoreFactorDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4757340 (    0x50) sConfidenceWordProbAverageBestScoreLCntx2FactorDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4757390 (    0x50) sConfidenceWordProbAverageBestScoreLCntx1FactorDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b47573e0 (    0x50) sConfidenceWordProbAverageBestScoreRCntx1FactorDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4757430 (    0x50) sConfidenceWordProbAverageBestScoreRCntx2FactorDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4757480 (    0x50) sConfidenceWordProbAcousticScoreFactorDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b47574d0 (    0x50) sConfidenceWordProbAcousticScoreLCntx2FactorDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4757520 (    0x50) sConfidenceWordProbAcousticScoreLCntx1FactorDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4757570 (    0x50) sConfidenceWordProbAcousticScoreRCntx1FactorDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b47575c0 (    0x50) sConfidenceWordProbAcousticScoreRCntx2FactorDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4757610 (    0x50) sConfidenceWordProbAverageAcousticScoreFactorDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4757660 (    0x50) sConfidenceWordProbAverageAcousticScoreLCntx2FactorDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b47576b0 (    0x50) sConfidenceWordProbAverageAcousticScoreLCntx1FactorDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4757700 (    0x50) sConfidenceWordProbAverageAcousticScoreRCntx1FactorDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4757750 (    0x50) sConfidenceWordProbAverageAcousticScoreRCntx2FactorDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b47577a0 (    0x50) sConfidenceWordProbLogWordCountFactorDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b47577f0 (    0x50) sConfidenceWordProbLogWordCountLCntx2FactorDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4757840 (    0x50) sConfidenceWordProbLogWordCountLCntx1FactorDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4757890 (    0x50) sConfidenceWordProbLogWordCountRCntx1FactorDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b47578e0 (    0x50) sConfidenceWordProbLogWordCountRCntx2FactorDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4757930 (   0x140) typeinfo name for ConfidenceParamSet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4757a70 (     0xd) typeinfo name for TTokenizer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4757a7d (    0x2f) typeinfo name for TRegisterable<TTokenizer> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4757aac (    0x85) typeinfo name for THashBase<std::__1::pair<TDecodeLink::THistory const, TDecodeLink const*>, THashMapCompare<std::__1::pair<TDecodeLink::THistory const, TDecodeLink const*>, std::__1::equal_to<TDecodeLink::THistory>>, THashMapFunction<std::__1::pair<TDecodeLink::THistory const, TDecodeLink const*>, THash<TDecodeLink::THistory>>> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4757b31 (   0x147) typeinfo name for THashMap<TDecodeLink::THistory, TDecodeLink const*, THash<TDecodeLink::THistory>, std::__1::equal_to<TDecodeLink::THistory>> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4757c78 (    0x20) TRomanObject::TRomanObject(TFileObject const*, TLexicon*, TAllocator*)::pszLetters [NameNList, MangledNameNList, NList] 
                0x00000001b4757c98 (   0x548) TRomanObject::build(wchar_t const*, TVertex*, TVertex*, TGraph*, TLexicon*) const::pszRoman [NameNList, MangledNameNList, NList] 
                0x00000001b47581e0 (     0xf) typeinfo name for TDigitObject [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b47581ef (    0x11) typeinfo name for TPatternObject [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4758200 (     0xf) typeinfo name for TRomanObject [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b475820f (    0x12) typeinfo name for TCountingObject [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4758221 (     0xf) typeinfo name for TChartSeeder [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4758230 (    0x11) typeinfo name for TTerminalMaker [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4758241 (   0x1fb) typeinfo name for TArrayObject [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b475843c (     0x3) warnStr_mrecutil_timer_W_GETTIMEOFDAY [NameNList, MangledNameNList, NList] 
                0x00000001b475843f (    0x31) warnStr_mrecutil_timer_W_BAD_ELAPSED_MICROSEC [NameNList, MangledNameNList, NList] 
                0x00000001b4758470 (     0x7) errStr_mrecutil_dsmset_E_DSMSET_MAPGLOBALRECORD [NameNList, MangledNameNList, NList] 
                0x00000001b4758477 (     0x7) errStr_mrecutil_dsmset_E_DSMSET_GLOBALLOCK [NameNList, MangledNameNList, NList] 
                0x00000001b475847e (     0x7) errStr_mrecutil_dsmset_E_DSMSET_RECORDSFULL [NameNList, MangledNameNList, NList] 
                0x00000001b4758485 (    0x13) errStr_mrecutil_dsmset_E_DSMSET_MAP [NameNList, MangledNameNList, NList] 
                0x00000001b4758498 (    0x11) errStr_mrecutil_dsmset_E_DSMSET_CORRUPTED [NameNList, MangledNameNList, NList] 
                0x00000001b47584a9 (    0x14) errStr_mrecutil_dsmset_E_DSMSET_UNEXPECTEDSTATE [NameNList, MangledNameNList, NList] 
                0x00000001b47584bd (     0xe) errStr_mrecutil_dsmset_E_DSMSET_OPENNOCREATE [NameNList, MangledNameNList, NList] 
                0x00000001b47584cb (    0x18) errStr_mrecutil_dsmset_E_DSMSET_UNMATCHEDNAME [NameNList, MangledNameNList, NList] 
                0x00000001b47584e3 (     0x8) errStr_mrecutil_dsmset_E_DSMSET_NOIMPLEMENTATION [NameNList, MangledNameNList, NList] 
                0x00000001b47584eb (     0x5) errStr_mrecutil_xprhelp_E_THREAD_PRINTER_ALREADY_SET [NameNList, MangledNameNList, NList] 
                0x00000001b47584f0 (   0x308) errStr_mrecutil_xprhelp_E_LOGLINELEN [NameNList, MangledNameNList, NList] 
                0x00000001b47587f8 (    0x14) typeinfo name for TLatticeProcessor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b475880c (    0x2a) typeinfo name for TRegisterable<TLatticeProcessor> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4758836 (     0x2) errStr_sigproc_ctftmgr_E_CTFT_SAVE [NameNList, MangledNameNList, NList] 
                0x00000001b4758838 (    0x20) sLTF_Versions [NameNList, MangledNameNList, NList] 
                0x00000001b4758858 (     0xf) typeinfo name for RecogGrammar [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4758867 (    0x19) typeinfo name for WordStatesRecogGrammar [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4758880 (    0x18) typeinfo name for ContainerRecogGrammar [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4758898 (    0x98) typeinfo name for SequenceRecogGrammar [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4758930 (    0x7c) s_szTableNuktaComposition0915to0933 [NameNList, MangledNameNList, NList] 
                0x00000001b47589ac (   0x5d0) s_szTableBaseCharacter00C0to0233 [NameNList, MangledNameNList, NList] 
                0x00000001b4758f7c (   0x5d0) s_szTableDiacritic00C0to0233 [NameNList, MangledNameNList, NList] 
                0x00000001b475954c (   0x13c) s_szTableBaseCharacter0386to03D4 [NameNList, MangledNameNList, NList] 
                0x00000001b4759688 (   0x13c) s_szTableDiacritic0386to03D4 [NameNList, MangledNameNList, NList] 
                0x00000001b47597c4 (   0x3e8) s_szTableBaseCharacter0400to04F9 [NameNList, MangledNameNList, NList] 
                0x00000001b4759bac (   0x3e8) s_szTableDiacritic0400to04F9 [NameNList, MangledNameNList, NList] 
                0x00000001b4759f94 (    0x20) s_szTableNuktaBaseCharacter0958to095F [NameNList, MangledNameNList, NList] 
                0x00000001b4759fb4 (   0x7f4) s_szTableBaseCharacter1E00to1FFC [NameNList, MangledNameNList, NList] 
                0x00000001b475a7a8 (   0x820) s_szTableDiacritic1E00to1FFC [NameNList, MangledNameNList, NList] 
                0x00000001b475afc8 (   0x1f0) s_szTableNormalizeWidthFF61toFFDC [NameNList, MangledNameNList, NList] 
                0x00000001b475b1b8 (   0x540) s_szTableLowercase0100to024F [NameNList, MangledNameNList, NList] 
                0x00000001b475b6f8 (   0x240) s_szTableLowercase0370to03FF [NameNList, MangledNameNList, NList] 
                0x00000001b475b938 (   0x3f4) s_szTableLowercase1F00to1FFC [NameNList, MangledNameNList, NList] 
                0x00000001b475bd2c (    0x80) s_szTableLowercase2C60to2C7F [NameNList, MangledNameNList, NList] 
                0x00000001b475bdac (   0x64c) s_szTableUppercase0100to0292 [NameNList, MangledNameNList, NList] 
                0x00000001b475c3f8 (   0x240) s_szTableUppercase0370to03FF [NameNList, MangledNameNList, NList] 
                0x00000001b475c638 (   0x3d0) s_szTableUppercase1F00to1FF3 [NameNList, MangledNameNList, NList] 
                0x00000001b475ca08 (    0x5c) s_szTableUppercase2C60to2C76 [NameNList, MangledNameNList, NList] 
                0x00000001b475ca64 (   0x2a4) s_szTableCharacterComposition0300 [NameNList, MangledNameNList, NList] 
                0x00000001b475cd08 (   0x3a4) s_szTableCharacterComposition0301 [NameNList, MangledNameNList, NList] 
                0x00000001b475d0ac (   0x104) s_szTableCharacterComposition0302 [NameNList, MangledNameNList, NList] 
                0x00000001b475d1b0 (    0xe4) s_szTableCharacterComposition0303 [NameNList, MangledNameNList, NList] 
                0x00000001b475d294 (   0x164) s_szTableCharacterComposition0304 [NameNList, MangledNameNList, NList] 
                0x00000001b475d3f8 (   0x104) s_szTableCharacterComposition0306 [NameNList, MangledNameNList, NList] 
                0x00000001b475d4fc (   0x17c) s_szTableCharacterComposition0307 [NameNList, MangledNameNList, NList] 
                0x00000001b475d678 (   0x1b4) s_szTableCharacterComposition0308 [NameNList, MangledNameNList, NList] 
                0x00000001b475d82c (    0xc4) s_szTableCharacterComposition0309 [NameNList, MangledNameNList, NList] 
                0x00000001b475d8f0 (    0x34) s_szTableCharacterComposition030A [NameNList, MangledNameNList, NList] 
                0x00000001b475d924 (    0x34) s_szTableCharacterComposition030B [NameNList, MangledNameNList, NList] 
                0x00000001b475d958 (   0x12c) s_szTableCharacterComposition030C [NameNList, MangledNameNList, NList] 
                0x00000001b475da84 (    0x74) s_szTableCharacterComposition030F [NameNList, MangledNameNList, NList] 
                0x00000001b475daf8 (    0x64) s_szTableCharacterComposition0311 [NameNList, MangledNameNList, NList] 
                0x00000001b475db5c (    0x74) s_szTableCharacterComposition0313 [NameNList, MangledNameNList, NList] 
                0x00000001b475dbd0 (    0x84) s_szTableCharacterComposition0314 [NameNList, MangledNameNList, NList] 
                0x00000001b475dc54 (    0x24) s_szTableCharacterComposition031B [NameNList, MangledNameNList, NList] 
                0x00000001b475dc78 (   0x154) s_szTableCharacterComposition0323 [NameNList, MangledNameNList, NList] 
                0x00000001b475ddcc (    0x14) s_szTableCharacterComposition0324 [NameNList, MangledNameNList, NList] 
                0x00000001b475dde0 (    0x14) s_szTableCharacterComposition0325 [NameNList, MangledNameNList, NList] 
                0x00000001b475ddf4 (    0x24) s_szTableCharacterComposition0326 [NameNList, MangledNameNList, NList] 
                0x00000001b475de18 (    0xb4) s_szTableCharacterComposition0327 [NameNList, MangledNameNList, NList] 
                0x00000001b475decc (    0x54) s_szTableCharacterComposition0328 [NameNList, MangledNameNList, NList] 
                0x00000001b475df20 (    0x64) s_szTableCharacterComposition032D [NameNList, MangledNameNList, NList] 
                0x00000001b475df84 (    0x14) s_szTableCharacterComposition032E [NameNList, MangledNameNList, NList] 
                0x00000001b475df98 (    0x34) s_szTableCharacterComposition0330 [NameNList, MangledNameNList, NList] 
                0x00000001b475dfcc (    0x8c) s_szTableCharacterComposition0331 [NameNList, MangledNameNList, NList] 
                0x00000001b475e058 (    0xec) s_szTableCharacterComposition0342 [NameNList, MangledNameNList, NList] 
                0x00000001b475e144 (   0x52c) s_szTableCharacterComposition0345 [NameNList, MangledNameNList, NList] 
                0x00000001b475e670 (    0x80) typeinfo name for std::__1::basic_istringstream<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b475e6f0 (    0x14) errStr_voc_voc_E_REFERREDVOC [NameNList, MangledNameNList, NList] 
                0x00000001b475e704 (     0x1) errStr_voc_voc_E_RSD_PRESENT [NameNList, MangledNameNList, NList] 
                0x00000001b475e705 (     0xe) errStr_voc_voc_E_VOC_SVC_INCOMPATIBLE [NameNList, MangledNameNList, NList] 
                0x00000001b475e713 (     0xe) errStr_voc_voc_E_VOC_SVC_UNEXPECTED_SVC [NameNList, MangledNameNList, NList] 
                0x00000001b475e721 (     0x7) errStr_voc_voc_E_VOC_SVC_MISSING_SVC [NameNList, MangledNameNList, NList] 
                0x00000001b475e728 (     0x7) errStr_voc_voc_E_INVALID_SCC [NameNList, MangledNameNList, NList] 
                0x00000001b475e72f (     0xe) errStr_voc_voc_E_SCC_MISMATCH [NameNList, MangledNameNList, NList] 
                0x00000001b475e73d (     0xe) errStr_voc_voc_E_VOC_LOBOT_W_SVC [NameNList, MangledNameNList, NList] 
                0x00000001b475e74b (     0xc) errStr_voc_voc_E_BAD_PRELOAD_SIZE_NO_SVC [NameNList, MangledNameNList, NList] 
                0x00000001b475e757 (    0x13) errStr_voc_voc_E_BAD_PRELOAD_SIZE [NameNList, MangledNameNList, NList] 
                0x00000001b475e76a (     0x1) errStr_voc_voc_E_VOC_UNSHARABLE [NameNList, MangledNameNList, NList] 
                0x00000001b475e76b (     0x1) errStr_voc_voc_E_LOADING_MIXED_TEXT_AND_BINARY_SUBFILES [NameNList, MangledNameNList, NList] 
                0x00000001b475e76c (     0x1) errStr_voc_voc_E_LM_SAVE_TEXT [NameNList, MangledNameNList, NList] 
                0x00000001b475e76d (     0x2) errStr_voc_voc_E_NO_TEXT_SVC [NameNList, MangledNameNList, NList] 
                0x00000001b475e76f (     0x7) errStr_voc_voc_E_VOC_INCOMPATIBLE [NameNList, MangledNameNList, NList] 
                0x00000001b475e776 (     0xd) errStr_voc_voc_E_DELETEIDINUSE [NameNList, MangledNameNList, NList] 
                0x00000001b475e783 (     0x1) errStr_voc_voc_E_BAD_WORDNAME [NameNList, MangledNameNList, NList] 
                0x00000001b475e784 (    0x1c) errStr_voc_voc_E_WORD_ALREADY_IN_VOC [NameNList, MangledNameNList, NList] 
                0x00000001b475e7a0 (    0x20) typeinfo name for OnePhonemeSyncNet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b475e7c0 (    0xea) sPRandTable [NameNList, MangledNameNList, NList] 
                0x00000001b475e8aa (    0x12) typeinfo name for TResultMaker [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b475e8bc (     0xc) std::__1::piecewise_construct [NameNList, MangledNameNList, NList] 
                0x00000001b475e8c8 (    0x11) errStr_sdapi_apist_E_BADARG [NameNList, MangledNameNList, NList] 
                0x00000001b475e8d9 (     0xe) errStr_sdapi_apist_E_ERROR_DURING_CALLBACK [NameNList, MangledNameNList, NList] 
                0x00000001b475e8e7 (     0x1) errStr_sdapi_apist_E_BAD_UNKNOWNWORD [NameNList, MangledNameNList, NList] 
                0x00000001b475e8e8 (     0x1) errStr_sdapi_apist_E_BAD_OOVVOC [NameNList, MangledNameNList, NList] 
                0x00000001b475e8e9 (     0x1) errStr_sdapi_apist_E_BAD_COLLAPSED [NameNList, MangledNameNList, NList] 
                0x00000001b475e8ea (     0x1) errStr_sdapi_apist_E_BAD_STARTCONTEXT [NameNList, MangledNameNList, NList] 
                0x00000001b475e8eb (     0x2) errStr_sdapi_apist_E_BAD_ENDCONTEXT [NameNList, MangledNameNList, NList] 
                0x00000001b475e8ed (     0x1) errStr_sdapi_apist_E_REEXIT [NameNList, MangledNameNList, NList] 
                0x00000001b475e8ee (     0x1) errStr_sdapi_apist_E_BAD_HEAP_ON_ENTRY [NameNList, MangledNameNList, NList] 
                0x00000001b475e8ef (     0x1) errStr_sdapi_apist_E_BAD_HEAP_ON_EXIT [NameNList, MangledNameNList, NList] 
                0x00000001b475e8f0 (     0xf) errStr_sdapi_apist_E_OUTOFMEM [NameNList, MangledNameNList, NList] 
                0x00000001b475e8ff (    0x15) typeinfo name for FpuUseMrecDefaults [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b475e914 (    0x14) typeinfo name for FpuSaveRestore [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b475e928 (    0x30) sLatticeNBestListMaxLengthIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b475e958 (    0x29) typeinfo name for LatticeNBestParamSet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b475e981 (    0x19) typeinfo name for SimpleFrameTransformer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b475e99a (    0x13) typeinfo name for FrameTransformer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b475e9ad (    0x19) typeinfo name for FrameTransformerThread [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b475e9c6 (    0x2b) typeinfo name for DgnThread<FrameTransformerThreadWorker> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b475e9f1 (    0x1f) typeinfo name for FrameTransformerThreadWorker [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b475ea10 (    0x1d) typeinfo name for ThreadedFrameTransformer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b475ea2d (    0x11) typeinfo name for TResultManager [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b475ea3e (    0x36) typeinfo name for TIFormatterHintManager [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b475ea74 (    0xb0) REGEXP_CHAR_CLASSES [NameNList, MangledNameNList, NList] 
                0x00000001b475eb24 (    0x12) typeinfo name for TRegExpCompiler [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b475eb36 (   0x3f2) typeinfo name for TFsaDataCallBack [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b475ef28 (     0xe) typeinfo name for TTagManager [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b475ef36 (    0x1a) typeinfo name for TIFormatterTagManager [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b475ef50 (    0x71) typeinfo name for THashBase<std::__1::pair<wchar_t const* const, TTag const*>, THashMapCompare<std::__1::pair<wchar_t const* const, TTag const*>, TWideCharEqualTo>, THashMapFunction<std::__1::pair<wchar_t const* const, TTag const*>, THash<wchar_t const*>>> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b475efc1 (    0x33) typeinfo name for THashMap<wchar_t const*, TTag const*, THash<wchar_t const*>, TWideCharEqualTo> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b475eff4 (    0x28) errStr_mrecutil_mrecver_E_BAD_MREC_VERSION [NameNList, MangledNameNList, NList] 
                0x00000001b475f01c (    0x44) sFPT_Versions [NameNList, MangledNameNList, NList] 
                0x00000001b475f060 (     0x6) errStr_sdapi_sdlm_E_MISMATCHED_NOUTSCOREDETAILSETS_NOUTSCORES [NameNList, MangledNameNList, NList] 
                0x00000001b475f066 (     0x1) errStr_sdapi_sdlm_E_INVALID_COUNT_ARG [NameNList, MangledNameNList, NList] 
                0x00000001b475f067 (     0x6) errStr_sdapi_sdlm_E_MISMATCHED_NINWORDS_NOUTSCORES [NameNList, MangledNameNList, NList] 
                0x00000001b475f06d (     0x1) errStr_sdapi_sdlm_E_EMPTY_TRANSCRIPTION [NameNList, MangledNameNList, NList] 
                0x00000001b475f06e (    0x12) errStr_sdapi_sdlm_E_VOC_UNLOADEDLM [NameNList, MangledNameNList, NList] 
                0x00000001b475f080 (    0x27) errStr_mrecutil_dthread_E_OS_CALL_FAILED [NameNList, MangledNameNList, NList] 
                0x00000001b475f0a7 (     0xa) warnStr_mrecutil_dthread_W_DESTRUCTING_LIVE_THREAD [NameNList, MangledNameNList, NList] 
                0x00000001b475f0b1 (     0x3) warnStr_mrecutil_dthread_W_FAILED_TO_END_THREAD [NameNList, MangledNameNList, NList] 
                0x00000001b475f0b4 (     0xe) warnStr_mrecutil_dthread_W_WAITFORTHREADDONE_EXCEPTION [NameNList, MangledNameNList, NList] 
                0x00000001b475f0c2 (     0x9) errStr_mrecutil_dthread_E_THREAD_REGION_CHECKSUM_MISMATCH [NameNList, MangledNameNList, NList] 
                0x00000001b475f0cb (     0x3) warnStr_mrecutil_dthread_W_TERMINATING_THREAD [NameNList, MangledNameNList, NList] 
                0x00000001b475f0ce (     0x7) errStr_mrecutil_dthread_E_UNIMPLEMENTED [NameNList, MangledNameNList, NList] 
                0x00000001b475f0d5 (     0x3) errStr_mrecutil_dthread_E_NO_WORKER [NameNList, MangledNameNList, NList] 
                0x00000001b475f0d8 (     0x3) warnStr_mrecutil_dthread_W_THREAD_DETECTED_CLIENT_MEMORY_ERROR [NameNList, MangledNameNList, NList] 
                0x00000001b475f0db (     0x6) warnStr_mrecutil_dthread_W_THREAD_MEMORY_EXCEPTION [NameNList, MangledNameNList, NList] 
                0x00000001b475f0e1 (     0x3) warnStr_mrecutil_dthread_W_THREAD_DETECTED_CLIENT_ERROR [NameNList, MangledNameNList, NList] 
                0x00000001b475f0e4 (     0x6) warnStr_mrecutil_dthread_W_THREAD_UNKNOWN_EXCEPTION [NameNList, MangledNameNList, NList] 
                0x00000001b475f0ea (    0x14) warnStr_mrecutil_dthread_W_THREAD_EXCEPTION [NameNList, MangledNameNList, NList] 
                0x00000001b475f0fe (     0x9) errStr_mrecutil_dthread_E_GLOBAL_REGION_CHECKSUM_MISMATCH [NameNList, MangledNameNList, NList] 
                0x00000001b475f107 (     0x3) errStr_mrecutil_dthread_E_INVALID_THREADID [NameNList, MangledNameNList, NList] 
                0x00000001b475f10a (    0x12) typeinfo name for DgnThreadClient [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b475f11c (    0x12) typeinfo name for DgnThreadWorker [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b475f12e (    0x13) typeinfo name for AbstractObserver [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b475f141 (    0x53) typeinfo name for AbstractObservation [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b475f194 (    0x20) sMCT_Versions [NameNList, MangledNameNList, NList] 
                0x00000001b475f1b4 (    0x10) sBMT_Versions [NameNList, MangledNameNList, NList] 
                0x00000001b475f1c4 (    0x18) sBCT_Versions [NameNList, MangledNameNList, NList] 
                0x00000001b475f1dc (    0x18) sMGT_Versions [NameNList, MangledNameNList, NList] 
                0x00000001b475f1f4 (    0x18) sMPT_Versions [NameNList, MangledNameNList, NList] 
                0x00000001b475f20c (    0x18) sMST_Versions [NameNList, MangledNameNList, NList] 
                0x00000001b475f224 (    0x18) sHST_Versions [NameNList, MangledNameNList, NList] 
                0x00000001b475f23c (     0xe) errStr_pel_pel_E_TRANSFORM_FEATURE_DIM [NameNList, MangledNameNList, NList] 
                0x00000001b475f24a (     0x9) errStr_pel_pel_E_FEATURE_DIM [NameNList, MangledNameNList, NList] 
                0x00000001b475f253 (     0x3) errStr_pel_pel_E_NONPOSITIVE_COVARIANCE_DETERMINANT [NameNList, MangledNameNList, NList] 
                0x00000001b475f256 (     0xb) typeinfo name for TraceNode [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b475f261 (     0xe) typeinfo name for NodeNetNode [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b475f26f (     0x6) typeinfo name for Node [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b475f275 (     0xa) typeinfo name for BaseNode [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b475f27f (     0xd) typeinfo name for PredStruct [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b475f28c (     0x6) errStr_fileutil_collarra_E_BAD_COLLATION_ID [NameNList, MangledNameNList, NList] 
                0x00000001b475f292 (     0xa) typeinfo name for TLattice [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b475f29c (    0x30) typeinfo name for TRegisterable<TLattice> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b475f2cc (    0x9c) sWDT_Versions [NameNList, MangledNameNList, NList] 
                0x00000001b475f368 (     0xd) typeinfo name for TFormatter [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b475f375 (     0xe) typeinfo name for TIFormatter [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b475f383 (    0x1f) typeinfo name for TRegisterable<TIFormatter> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b475f3a2 (    0x1e) typeinfo name for TIFormatterResultManager [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b475f3c0 (    0x50) sSearchPelScoreScaleDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b475f410 (    0x18) sSearchPelScoreUseBestCompScoreBoolHistory [NameNList, MangledNameNList, NList] 
                0x00000001b475f428 (    0x50) sSearchEnableGenoneScoreCacheThreshDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b475f478 (    0x18) sSearchTruncatePackedIntComponentScoresBoolHistory [NameNList, MangledNameNList, NList] 
                0x00000001b475f490 (    0x50) sSearchFmpeMinimumPosteriorProbabilityDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b475f4e0 (    0x24) sSearchFmpeWindowTruncateUnavailableFramesBoolHistory [NameNList, MangledNameNList, NList] 
                0x00000001b475f504 (    0x18) sSearchUseWordEndThreshWhenSeedingFinalSilenceBoolHistory [NameNList, MangledNameNList, NList] 
                0x00000001b475f51c (    0x30) sSearchTraceThreshScoreIncrementIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b475f54c (    0x30) sSearchActiveWordSpreadSeedScoreIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b475f57c (    0x30) sSearchPelBackoffThreshScoreDecrementIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b475f5ac (    0x30) sSearchInterWordSilencePenaltyIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b475f5dc (    0x30) sSearchRemoveInactiveWordsIntervalFramesIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b475f60c (    0x30) sSearchAbortOnNumHistoriesIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b475f63c (    0x30) sSearchAbortOnAllocBytesIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b475f66c (    0x30) sSearchAbortOnAverageWordsEndingPerFrameIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b475f69c (    0x30) sSearchAbortOnNumRecognizedFramesIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b475f6cc (    0x30) sSearchLatticeLMRescoringAbortOnTotalNewNodesIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b475f6fc (    0x18) sSearchLatticeSilentWordsUseCoarticulationBoolHistory [NameNList, MangledNameNList, NList] 
                0x00000001b475f714 (    0x30) sSearchLatticeAbortOnNumNodesIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b475f744 (    0x30) sSearchLatticeAbortOnNumLinksIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b475f774 (    0x30) sSearchLatticeAbortOnScaledAverageNodesPerFrameIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b475f7a4 (    0x34) sSearchLatticeAbortOnScaledAverageLinksPerFrameIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b475f7d8 (    0x50) sSearchTraceLatticeNormalizedThreshFactorDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b475f828 (    0x30) sSearchTraceLatticeThreshScoreIncrementIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b475f858 (    0x18) sSearchLatticeAllowZeroDurationFinalSilenceBoolHistory [NameNList, MangledNameNList, NList] 
                0x00000001b475f870 (    0x30) sSearchPerWordPenaltyIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b475f8a0 (    0x30) sSearchWordSeedThreshScoreDecrementIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b475f8d0 (    0x30) sSearchWordSeedFinalSilenceThreshScoreDecrementIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b475f900 (    0x18) sSearchWordSeedScoreIncludePrefiltererScoreBoolHistory [NameNList, MangledNameNList, NList] 
                0x00000001b475f918 (    0x18) sSearchWordSeedUnprefilteredUseThreshScoreDecrementBoolHistory [NameNList, MangledNameNList, NList] 
                0x00000001b475f930 (    0x18) sSearchEstimateAndPreScoreActivePelsBoolHistory [NameNList, MangledNameNList, NList] 
                0x00000001b475f948 (    0x18) sSearchActiveWordHasPredecessorPhonemeContextBoolHistory [NameNList, MangledNameNList, NList] 
                0x00000001b475f960 (    0x18) sSearchActiveWordHasPredecessorWordContextBoolHistory [NameNList, MangledNameNList, NList] 
                0x00000001b475f978 (    0x18) sSearchActiveWordHasMergedGrammarStateBoolHistory [NameNList, MangledNameNList, NList] 
                0x00000001b475f990 (    0x18) sSearchActiveWordHasMergedLatticeLinkIdBoolHistory [NameNList, MangledNameNList, NList] 
                0x00000001b475f9a8 (    0x30) sSearchLatticeTimeConstraintDistanceMaxFramesIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b475f9d8 (    0x30) sSearchLatticeTimeConstraintSeedThreshScoreIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b475fa08 (    0x18) sSearchLMRescoreWithCorrectiveBoolHistory [NameNList, MangledNameNList, NList] 
                0x00000001b475fa20 (    0x30) sSearchLMDisallowedLMScoreIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b475fa50 (    0x30) sSearchLMDynamicReadCacheBlocksPerChunkIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b475fa80 (    0x30) sSearchLMDynamicReadCacheMaxBlocksIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b475fab0 (    0x30) sSearchLMDynamicBigramReadCacheMaxChunksPerReadIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b475fae0 (    0x30) sSearchLMDynamicTrigramReadCacheMaxChunksPerReadIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b475fb10 (    0x30) sSearchLMDynamicQuadgramReadCacheMaxChunksPerReadIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b475fb40 (    0x30) sSearchInitialSilenceToFinalSilenceLMScoreIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b475fb70 (    0x30) sSearchLatticePruneKeepUniquePathsMaxSizeIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b475fba0 (    0x18) sSearchLatticeNodeCreationUseRightWordBoolHistory [NameNList, MangledNameNList, NList] 
                0x00000001b475fbb8 (    0x18) sSearchLatticeUseCoarticulationBoolHistory [NameNList, MangledNameNList, NList] 
                0x00000001b475fbd0 (    0x18) sSearchLatticeUseThresholdingBoolHistory [NameNList, MangledNameNList, NList] 
                0x00000001b475fbe8 (    0x18) sSearchLatticePreserveAlternatePronsBoolHistory [NameNList, MangledNameNList, NList] 
                0x00000001b475fc00 (    0x30) sSearchRecognitionContinuationIntervalIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b475fc30 (    0x18) sSearchRecognitionBatchProcessingBoolHistory [NameNList, MangledNameNList, NList] 
                0x00000001b475fc48 (    0x30) sSearchNonAcousticWordLMThreshScoreIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b475fc78 (    0x30) sSearchNonAcousticWordEndThreshScoreIncrementIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b475fca8 (    0x30) sSearchNonAcousticWordAndSuccessorLMThreshScoreIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b475fcd8 (    0x30) sSearchNonAcousticWordSeedThreshScoreIncrementIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b475fd08 (    0x24) sSearchGenerateConstraintLatticeBoolHistory [NameNList, MangledNameNList, NList] 
                0x00000001b475fd2c (    0x24) sSearchConstraintLatticePreserveTimesBoolHistory [NameNList, MangledNameNList, NList] 
                0x00000001b475fd50 (    0x48) sSearchConstraintLatticeMaxSyntheticSilenceFramesIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b475fd98 (    0x48) sSearchConstraintLatticeMergeNodeMaxFramesIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b475fde0 (    0x18) sSearchLatticeComputeOnlyBestPathBoolHistory [NameNList, MangledNameNList, NList] 
                0x00000001b475fdf8 (    0x30) sSearchThreshScoreWhenSilenceBestIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b475fe28 (    0x30) sSearchThreshScoreIncrementWhenNonSilenceBestIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b475fe58 (    0x30) sSearchFinalSilenceThreshScoreIncrementIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b475fe88 (    0x24) sSearchActiveCountLimitScoreCompareWithBeamBoolHistory [NameNList, MangledNameNList, NList] 
                0x00000001b475feac (    0x30) sSearchActiveNodeCountLimitIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b475fedc (    0x18) sSearchActiveNodePreserveMultipleHistoriesBoolHistory [NameNList, MangledNameNList, NList] 
                0x00000001b475fef4 (    0x30) sSearchActiveSequenceCountLimitIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b475ff24 (    0x30) sSearchWordEndThreshScoreDecrementIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b475ff54 (    0x30) sSearchWordEndAgainstBestWordEndThreshScoreDecrementIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b475ff84 (    0x4c) sSearchWordEndAgainstPrevBestNodeThreshScoreIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b475ffd0 (    0x50) sSearchLatticeNormalizedThreshFactorDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4760020 (    0x30) sSearchLatticeThreshScoreIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4760050 (    0x48) sSearchLatticeLinksPerSecondLimitIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4760098 (    0x30) sSearchLatticePruneLinksPerSecondLimitIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b47600c8 (    0x30) sSearchLatticeBestCrumbDistanceMaxFramesIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b47600f8 (    0x30) sSearchLatticeBestCrumbThreshScoreIncrementIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4760128 (    0x18) sSearchLatticeComputeOnlyBestTimesBoolHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4760140 (    0x30) sSearchStateUsePrefiltererMinNumWordsIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4760170 (    0x30) sSearchConTransAccStartFrameIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b47601a0 (    0x30) sSearchConTransAccRampFramesIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b47601d0 (    0x30) sSearchConTransAccMaxSilenceFramesIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4760200 (    0x30) sSearchConTransAccDecayFrequencyIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4760230 (    0x50) sSearchConTransAccDecayFactorDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4760280 (    0x18) sSearchPrefilterResultUseCrumbBankBoolHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4760298 (    0x30) sSearchPrefilterResultUseCrumbBankDistanceMaxFramesIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b47602c8 (    0x18) sSearchSegmentAllNetsBoolHistory [NameNList, MangledNameNList, NList] 
                0x00000001b47602e0 (    0x48) sSearchHierInactiveComponentScoreIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4760328 (    0x28) sSearchUsesFstBoolHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4760350 (    0x50) sFstCoreBeamDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b47603a0 (    0x50) sFstCoreLatticeBeamDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b47603f0 (    0x78) sFstCoreLateLatticeArcFingerSuckPenaltyDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4760468 (    0x30) sFstCoreMaxActiveIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4760498 (    0x30) sFstCoreNBestIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b47604c8 (    0x30) sFstCoreHashPropagateBestTokensFirstIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b47604f8 (    0x18) sFstCoreRepeatFrameBoolHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4760510 (    0x78) sFstCorePelScoreScaleDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4760588 (    0x18) sFstCoreGenerateLeafLatticeBoolHistory [NameNList, MangledNameNList, NList] 
                0x00000001b47605a0 (    0x48) sFstCorePerWordPenaltyIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b47605e8 (    0x18) sSearchDisableHierarchicalScorerBoolHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4760600 (    0x18) sSearchDisableGPUScorerBoolHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4760618 (    0x18) sFstCoreUseDurationModelBoolHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4760630 (    0x24) sFstCoreGenerateLatticeBoolHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4760654 (    0x18) sFstCoreHashTokensBoolHistory [NameNList, MangledNameNList, NList] 
                0x00000001b476066c (    0x18) sFstCoreUseFwdBwdAlgorithmBoolHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4760684 (    0x18) sFstCoreLockPelScoreCacheBoolHistory [NameNList, MangledNameNList, NList] 
                0x00000001b476069c (    0x30) sFstCoreCollectTracesPeriodIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b47606cc (    0x30) sFstCoreBackoffThreshScoreIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b47606fc (    0x24) sSearchPartialExtendWithPrefiltererBoolHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4760720 (    0x30) sSearchPartialIncompleteMaxWordsIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4760750 (    0x30) sSearchPartialIncompleteMinListFramesIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4760780 (    0x30) sSearchPartialIncompleteMinWordFramesIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b47607b0 (    0x30) sSearchPartialCompleteMinWordFramesIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b47607e0 (    0x30) sSearchPartialRegularMinWordFramesIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4760810 (    0x11) typeinfo name for SearchParamSet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4760821 (     0x3) errStr_sdapi_sdword_E_BUILDING_TOPIC_LM [NameNList, MangledNameNList, NList] 
                0x00000001b4760824 (     0x6) errStr_sdapi_sdword_E_DELETING_FACTORY_WORD [NameNList, MangledNameNList, NList] 
                0x00000001b476082a (     0x1) errStr_sdapi_sdword_E_REQUIREDTAGS [NameNList, MangledNameNList, NList] 
                0x00000001b476082b (     0x1) errStr_sdapi_sdword_E_OPTIONALTAGS [NameNList, MangledNameNList, NList] 
                0x00000001b476082c (     0x6) errStr_sdapi_sdword_E_TAGBITBYTES [NameNList, MangledNameNList, NList] 
                0x00000001b4760832 (    0xb2) errStr_sdapi_sdword_E_ZERO_WORDS [NameNList, MangledNameNList, NList] 
                0x00000001b47608e4 (    0x10) sCST_Versions [NameNList, MangledNameNList, NList] 
                0x00000001b47608f4 (    0x10) typeinfo name for FstHmmNet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4760904 (    0x10) sMTT_Versions [NameNList, MangledNameNList, NList] 
                0x00000001b4760914 (     0xc) errStr_lm_ngram2fsm_E_INVALID_NON_ROOT_MAPPING [NameNList, MangledNameNList, NList] 
                0x00000001b4760920 (     0x3) errStr_lm_ngram2fsm_E_WORD_LM_NON_TERMINAL [NameNList, MangledNameNList, NList] 
                0x00000001b4760923 (    0x26) typeinfo name for Hash<Int32Pair, Int32Pair, Int32PairScope, int> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4760949 (    0x2b) typeinfo name for Hash<Int32Triple, Int32Triple, Int32TripleScope, int> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4760974 (     0x3) errStr_fileutil_envhold_E_INVALID_ENVHOLDERID [NameNList, MangledNameNList, NList] 
                0x00000001b4760977 (    0x1c) errStr_fileutil_envhold_E_REDUNDANTSUBFILES2 [NameNList, MangledNameNList, NList] 
                0x00000001b4760993 (    0x1c) errStr_fileutil_envhold_E_MISSINGSUBFILE2 [NameNList, MangledNameNList, NList] 
                0x00000001b47609af (    0x15) errStr_fileutil_envhold_E_PRESENTSUBFILE1 [NameNList, MangledNameNList, NList] 
                0x00000001b47609c4 (    0x1c) errStr_fileutil_envhold_E_INCONSISTENTSUBFILE [NameNList, MangledNameNList, NList] 
                0x00000001b47609e0 (   0x37c) errStr_fileutil_envhold_E_MISSINGSUBFILE1 [NameNList, MangledNameNList, NList] 
                0x00000001b4760d5c (    0xa4) typeinfo name for TWideChartSeeder2 [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4760e00 (    0x10) typeinfo name for TWordVerifier [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4760e10 (    0x14) typeinfo name for TTerminalChecker [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4760e24 (     0xc) typeinfo name for TProp<bool> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4760e30 (    0x30) sLatticePostProbDenominatorIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4760e60 (    0x30) sLatticePostProbAcousticScoreScaleIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4760e90 (    0x30) sLatticePostProbWordDurationScoreScaleIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4760ec0 (    0x30) sLatticePostProbLMScoreScaleIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4760ef0 (    0x30) sLatticePostProbStateWordPenaltyScaleIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4760f20 (    0x30) sLatticePostProbPerWordPenaltyScaleIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4760f50 (    0x30) sLatticePostProbInterWordSilencePenaltyScaleIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4760f80 (  0x1324) typeinfo name for LatticePostProbParamSet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b47622a4 (    0x7d) typeinfo name for TGlobalParamManager [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4762321 (     0x6) errStr_lm_multilm_E_MULTI_LM_DUMP_OUTSIDE_INDEX [NameNList, MangledNameNList, NList] 
                0x00000001b4762327 (     0x1) errStr_lm_multilm_E_MULTI_LM_DUMP_NULL [NameNList, MangledNameNList, NList] 
                0x00000001b4762328 (     0x1) errStr_lm_multilm_E_NON_DEFAULT_DISPATCH_SCORING_FINAL_SILENCE [NameNList, MangledNameNList, NList] 
                0x00000001b4762329 (     0x1) errStr_lm_multilm_E_ENDLMID_DISAGREEMENT [NameNList, MangledNameNList, NList] 
                0x00000001b476232a (     0xd) errStr_lm_multilm_E_DUPLICATE_TOPICNAMES [NameNList, MangledNameNList, NList] 
                0x00000001b4762337 (    0x15) typeinfo name for MultiLanguageModel [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b476234c (     0x7) errStr_lm_multilm_E_BAD_NEW_TOPICNAME [NameNList, MangledNameNList, NList] 
                0x00000001b4762353 (     0xd) errStr_lm_multilm_E_DUPLICATE_CORRECTIVE_AND_TOPIC_NAMES [NameNList, MangledNameNList, NList] 
                0x00000001b4762360 (     0x7) errStr_lm_multilm_E_BUILDINGLM [NameNList, MangledNameNList, NList] 
                0x00000001b4762367 (     0x3) errStr_lm_multilm_E_DUPLICATE_TOPICLMSLOTID [NameNList, MangledNameNList, NList] 
                0x00000001b476236a (     0x3) errStr_lm_multilm_E_CANT_DELETE_MISSING_TOPIC_LM [NameNList, MangledNameNList, NList] 
                0x00000001b476236d (     0xd) errStr_lm_multilm_E_DUPLICATE_CORRECTIVENAMES [NameNList, MangledNameNList, NList] 
                0x00000001b476237a (     0x7) errStr_lm_multilm_E_BAD_NEW_CORRECTIVENAME [NameNList, MangledNameNList, NList] 
                0x00000001b4762381 (     0x3) errStr_lm_multilm_E_BAD_FACTORYCORRECTIVELMID [NameNList, MangledNameNList, NList] 
                0x00000001b4762384 (     0x3) errStr_lm_multilm_E_DUPLICATE_FACTORYCORRECTIVELMID [NameNList, MangledNameNList, NList] 
                0x00000001b4762387 (     0x3) errStr_lm_multilm_E_ADDING_PRON_TO_WORD_IN_NON_DEFAULT_DISPATCH_RANGE [NameNList, MangledNameNList, NList] 
                0x00000001b476238a (     0x3) errStr_lm_multilm_E_CLONING_WORD_IN_NON_DEFAULT_DISPATCH_RANGE [NameNList, MangledNameNList, NList] 
                0x00000001b476238d (     0x3) errStr_lm_multilm_E_DELETING_WORD_IN_NON_DEFAULT_DISPATCH_RANGE [NameNList, MangledNameNList, NList] 
                0x00000001b4762390 (     0x3) errStr_lm_multilm_E_DELETING_PRON_FROM_WORD_IN_NON_DEFAULT_DISPATCH_RANGE [NameNList, MangledNameNList, NList] 
                0x00000001b4762393 (     0x7) errStr_lm_multilm_E_UNEXPECTED_EOF [NameNList, MangledNameNList, NList] 
                0x00000001b476239a (    0x18) errStr_lm_multilm_E_BAD_TABLENAME [NameNList, MangledNameNList, NList] 
                0x00000001b47623b2 (    0x11) errStr_lm_multilm_E_BAD_WEIGHTSNAME [NameNList, MangledNameNList, NList] 
                0x00000001b47623c3 (    0x18) errStr_lm_multilm_E_BAD_SUBDIRECTORY [NameNList, MangledNameNList, NList] 
                0x00000001b47623db (     0xe) errStr_lm_multilm_E_BAD_LINE [NameNList, MangledNameNList, NList] 
                0x00000001b47623e9 (    0x14) errStr_lm_multilm_E_BAD_UNS_FIELD [NameNList, MangledNameNList, NList] 
                0x00000001b47623fd (    0x14) errStr_lm_multilm_E_BAD_INT_FIELD [NameNList, MangledNameNList, NList] 
                0x00000001b4762411 (    0x1b) errStr_lm_multilm_E_BAD_REAL_FIELD [NameNList, MangledNameNList, NList] 
                0x00000001b476242c (     0x1) errStr_lm_multilm_E_RECENT_BUFFER_WITH_FIXED_SCORING [NameNList, MangledNameNList, NList] 
                0x00000001b476242d (     0x1) errStr_lm_multilm_E_LOADING_MIXED_TEXT_AND_BINARY_SUBFILES [NameNList, MangledNameNList, NList] 
                0x00000001b476242e (     0xa) errStr_lm_multilm_E_MLS_NONSHARABLE [NameNList, MangledNameNList, NList] 
                0x00000001b4762438 (    0x20) sMLS_Versions [NameNList, MangledNameNList, NList] 
                0x00000001b4762458 (     0xe) errStr_lm_multilm_E_BAD_MULTILMTYPE [NameNList, MangledNameNList, NList] 
                0x00000001b4762466 (     0x7) errStr_lm_multilm_E_DISPATCH_SUB_LM [NameNList, MangledNameNList, NList] 
                0x00000001b476246d (     0x7) errStr_lm_multilm_E_NO_WEIGHTSNAMES_WITH_FIXED_SCORING [NameNList, MangledNameNList, NList] 
                0x00000001b4762474 (     0x1) errStr_lm_multilm_E_RECENT_BUFFER_MISMATCH [NameNList, MangledNameNList, NList] 
                0x00000001b4762475 (    0x15) errStr_lm_multilm_E_BAD_FIELD_SPEC [NameNList, MangledNameNList, NList] 
                0x00000001b476248a (    0x15) errStr_lm_multilm_E_BAD_FIELD_FORMAT [NameNList, MangledNameNList, NList] 
                0x00000001b476249f (    0x11) errStr_lm_multilm_E_BAD_CORRECTIVENAME [NameNList, MangledNameNList, NList] 
                0x00000001b47624b0 (    0x11) errStr_lm_multilm_E_BAD_TOPICNAME [NameNList, MangledNameNList, NList] 
                0x00000001b47624c1 (    0x14) errStr_lm_multilm_E_DUPLICATE_WEIGHTSNAMES [NameNList, MangledNameNList, NList] 
                0x00000001b47624d5 (    0x11) errStr_lm_multilm_E_WORDID_LIMIT_MISMATCH [NameNList, MangledNameNList, NList] 
                0x00000001b47624e6 (     0xa) errStr_lm_multilm_E_BAD_WORDID_LIMITS [NameNList, MangledNameNList, NList] 
                0x00000001b47624f0 (     0xa) errStr_lm_multilm_E_WORDID_LIMIT_GAP [NameNList, MangledNameNList, NList] 
                0x00000001b47624fa (    0x11) errStr_lm_multilm_E_INVALID_WORD_IN_NON_DEFAULT_DISPATCH_RANGE [NameNList, MangledNameNList, NList] 
                0x00000001b476250b (    0x14) errStr_lm_multilm_E_BAD_ROOT_IN_NON_DEFAULT_DISPATCH_RANGE [NameNList, MangledNameNList, NList] 
                0x00000001b476251f (     0xa) errStr_lm_multilm_E_BAD_SLOTTYPE [NameNList, MangledNameNList, NList] 
                0x00000001b4762529 (     0xa) errStr_lm_multilm_E_TEMPLATEPATH_MISMATCH [NameNList, MangledNameNList, NList] 
                0x00000001b4762533 (     0xa) errStr_lm_multilm_E_BAD_WEIGHT_LIMITS [NameNList, MangledNameNList, NList] 
                0x00000001b476253d (     0xa) errStr_lm_multilm_E_BAD_PREFILTERERFIXEDWEIGHT [NameNList, MangledNameNList, NList] 
                0x00000001b4762547 (     0xa) errStr_lm_multilm_E_WBS_WITH_NONZERO_CURRENTWEIGHT [NameNList, MangledNameNList, NList] 
                0x00000001b4762551 (     0xa) errStr_lm_multilm_E_BAD_CURRENTWEIGHT [NameNList, MangledNameNList, NList] 
                0x00000001b476255b (     0xa) errStr_lm_multilm_E_BAD_DEFAULTTOPICWEIGHT [NameNList, MangledNameNList, NList] 
                0x00000001b4762565 (    0x11) errStr_lm_multilm_E_ABSENT_NAMED_WEIGHT [NameNList, MangledNameNList, NList] 
                0x00000001b4762576 (    0x11) errStr_lm_multilm_E_BAD_NAMED_WEIGHT [NameNList, MangledNameNList, NList] 
                0x00000001b4762587 (     0xa) errStr_lm_multilm_E_BAD_ISACTIVE [NameNList, MangledNameNList, NList] 
                0x00000001b4762591 (     0xa) errStr_lm_multilm_E_BAD_SET_OF_WEIGHT_FLOORS [NameNList, MangledNameNList, NList] 
                0x00000001b476259b (     0xa) errStr_lm_multilm_E_BAD_SET_OF_TOPIC_WEIGHT_FLOORS [NameNList, MangledNameNList, NList] 
                0x00000001b47625a5 (     0xa) errStr_lm_multilm_E_BAD_SET_OF_WEIGHT_CEILINGS [NameNList, MangledNameNList, NList] 
                0x00000001b47625af (     0xa) errStr_lm_multilm_E_BAD_SET_OF_PREFILTERER_FIXED_WEIGHTS [NameNList, MangledNameNList, NList] 
                0x00000001b47625b9 (     0x7) errStr_lm_multilm_E_BAD_SET_OF_NON_TOPIC_WEIGHTS [NameNList, MangledNameNList, NList] 
                0x00000001b47625c0 (     0xa) errStr_lm_multilm_E_BAD_SET_OF_WEIGHTS [NameNList, MangledNameNList, NList] 
                0x00000001b47625ca (     0xa) errStr_lm_multilm_E_BAD_SET_OF_DEFAULT_TOPIC_WEIGHTS [NameNList, MangledNameNList, NList] 
                0x00000001b47625d4 (    0x11) errStr_lm_multilm_E_BAD_SET_OF_NAMED_WEIGHTS [NameNList, MangledNameNList, NList] 
                0x00000001b47625e5 (     0xe) errStr_lm_multilm_E_BAD_SET_OF_NAMED_NON_TOPIC_WEIGHTS [NameNList, MangledNameNList, NList] 
                0x00000001b47625f3 (     0x1) errStr_lm_multilm_E_FIRST_LM_WORDNGRAMBUILDSPEC [NameNList, MangledNameNList, NList] 
                0x00000001b47625f4 (     0x1) errStr_lm_multilm_E_NAMED_WEIGHTS_MISMATCH [NameNList, MangledNameNList, NList] 
                0x00000001b47625f5 (     0x3) errStr_lm_multilm_E_MISMATCHED_SLOTTYPE [NameNList, MangledNameNList, NList] 
                0x00000001b47625f8 (     0x1) errStr_lm_multilm_E_NO_INTERPOLATED_IN_NON_DEFAULT_DISPATCH [NameNList, MangledNameNList, NList] 
                0x00000001b47625f9 (     0x1) errStr_lm_multilm_E_NO_SUB_LANGUAGE_MODELS [NameNList, MangledNameNList, NList] 
                0x00000001b47625fa (     0x1) errStr_lm_multilm_E_BAD_NUM_SPEC_SUBFILES [NameNList, MangledNameNList, NList] 
                0x00000001b47625fb (     0x1) errStr_lm_multilm_E_MULTIPLE_SPEC_SUBFILES [NameNList, MangledNameNList, NList] 
                0x00000001b47625fc (     0xa) errStr_lm_multilm_E_TEXT_SUBFILE_WITH_MLB [NameNList, MangledNameNList, NList] 
                0x00000001b4762606 (     0x3) errStr_lm_multilm_E_MISSING_WORDNGRAMBUILDSPEC [NameNList, MangledNameNList, NList] 
                0x00000001b4762609 (     0x3) errStr_lm_multilm_E_MULTIPLE_LMS_IN_TOPICWORD_SLOT [NameNList, MangledNameNList, NList] 
                0x00000001b476260c (     0x3) errStr_lm_multilm_E_MULTILM_IN_TOPICWORD_SLOT [NameNList, MangledNameNList, NList] 
                0x00000001b476260f (     0x3) errStr_lm_multilm_E_BAD_WORDNGRAMBUILDSPEC [NameNList, MangledNameNList, NList] 
                0x00000001b4762612 (     0x3) errStr_lm_multilm_E_NOT_ONE_LM [NameNList, MangledNameNList, NList] 
                0x00000001b4762615 (     0xa) errStr_lm_multilm_E_BINARY_SUBFILE_WITH_MLS [NameNList, MangledNameNList, NList] 
                0x00000001b476261f (     0x1) errStr_lm_multilm_E_NO_LEGACY_PATH [NameNList, MangledNameNList, NList] 
                0x00000001b4762620 (    0x15) errStr_lm_multilm_E_ILLEGAL_PARENT_IN_PATH [NameNList, MangledNameNList, NList] 
                0x00000001b4762635 (    0x15) errStr_lm_multilm_E_TOO_MANY_PARENTS_IN_PATH [NameNList, MangledNameNList, NList] 
                0x00000001b476264a (    0x15) errStr_lm_multilm_E_CANT_TRAVERSE_DISPATCH_LM [NameNList, MangledNameNList, NList] 
                0x00000001b476265f (    0x15) errStr_lm_multilm_E_PATH_ELEMENT_NOT_DEFAULT_SUBDIRECTORY [NameNList, MangledNameNList, NList] 
                0x00000001b4762674 (    0x15) errStr_lm_multilm_E_PATH_ELEMENT_NOT_SUBDIRECTORY [NameNList, MangledNameNList, NList] 
                0x00000001b4762689 (    0x15) errStr_lm_multilm_E_INVALID_SUBDIRECTORY_SLOTTYPE [NameNList, MangledNameNList, NList] 
                0x00000001b476269e (    0x15) errStr_lm_multilm_E_PATH_ELEMENT_NOT_BACKOFFSUBDIRECTORY [NameNList, MangledNameNList, NList] 
                0x00000001b47626b3 (    0x15) errStr_lm_multilm_E_INVALID_PATH_TARGET_SLOTTYPE [NameNList, MangledNameNList, NList] 
                0x00000001b47626c8 (     0x4) errStr_lm_multilm_E_TOPICLMPATHS_WITH_WORDNGRAMTEMPLATES [NameNList, MangledNameNList, NList] 
                0x00000001b47626cc (     0x7) errStr_lm_multilm_E_BAD_WT_SUBDIR [NameNList, MangledNameNList, NList] 
                0x00000001b47626d3 (     0x7) errStr_lm_multilm_E_NONEXISTENT_TEMPLATE [NameNList, MangledNameNList, NList] 
                0x00000001b47626da (     0xa) errStr_lm_multilm_E_WBS_IGNORELMID_MISMATCH [NameNList, MangledNameNList, NList] 
                0x00000001b47626e4 (     0x6) errStr_lm_multilm_E_WRONG_NUMWEIGHTS [NameNList, MangledNameNList, NList] 
                0x00000001b47626ea (     0x1) errStr_lm_multilm_E_ALL_WEIGHTS_ZERO [NameNList, MangledNameNList, NList] 
                0x00000001b47626eb (     0x6) errStr_lm_multilm_E_BAD_DISPATCH_COMPONENT [NameNList, MangledNameNList, NList] 
                0x00000001b47626f1 (     0x3) errStr_lm_multilm_E_BAD_PREFILTERERPERWORDPENALTY [NameNList, MangledNameNList, NList] 
                0x00000001b47626f4 (     0x3) errStr_lm_multilm_E_WEIGHT_ACCESS_ON_EMPTY_TOPIC_SLOT [NameNList, MangledNameNList, NList] 
                0x00000001b47626f7 (     0x7) errStr_lm_multilm_E_BAD_NEW_WEIGHTSNAME [NameNList, MangledNameNList, NList] 
                0x00000001b47626fe (     0x1) errStr_lm_multilm_E_TOO_MANY_WEIGHTSIDS [NameNList, MangledNameNList, NList] 
                0x00000001b47626ff (     0x3) errStr_lm_multilm_E_TOO_MANY_CLIENTWEIGHTSNAMES [NameNList, MangledNameNList, NList] 
                0x00000001b4762702 (     0xa) errStr_lm_multilm_E_WEIGHTSNAME_EXISTS [NameNList, MangledNameNList, NList] 
                0x00000001b476270c (     0x3) errStr_lm_multilm_E_BAD_WEIGHTSID [NameNList, MangledNameNList, NList] 
                0x00000001b476270f (     0x1) errStr_lm_multilm_E_CANT_DELETE_FACTORY_WEIGHTS [NameNList, MangledNameNList, NList] 
                0x00000001b4762710 (     0x1) errStr_lm_multilm_E_BAD_INPLACE_BUILD [NameNList, MangledNameNList, NList] 
                0x00000001b4762711 (     0x3) errStr_lm_multilm_E_NOTBUILDINGLM [NameNList, MangledNameNList, NList] 
                0x00000001b4762714 (    0x1c) typeinfo name for MultiLMContextData [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4762730 (    0x18) sPrefiltererBuildAllowMultiPhonemeSequencesBoolHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4762748 (    0x50) sPrefiltererBuildDurationScoreScaleDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4762798 (    0x30) sPrefiltererBuildBestScoreAdditionalPhonemeStartDepthIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b47627c8 (    0x30) sPrefiltererBuildMaxPronLengthIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b47627f8 (    0x30) sPrefiltererBuildMaxWordEndScoreIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4762828 (    0x50) sPrefiltererBuildEnableGenoneScoreCacheThreshDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4762878 (    0x18) sPrefiltererBuildTruncatePackedIntComponentScoresBoolHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4762890 (    0x50) sPrefiltererBuildFmpeMinimumPosteriorProbabilityDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b47628e0 (    0x18) sPrefiltererBuildUseGPUBoolHistory [NameNList, MangledNameNList, NList] 
                0x00000001b47628f8 (    0x48) sPrefiltererBuildHierInactiveComponentScoreIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4762940 (    0x18) sPrefiltererBuildDisableHierarchicalScorerBoolHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4762958 (    0x18) sPrefiltererBuildDisableGPUScorerBoolHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4762970 (    0x1c) typeinfo name for PrefiltererBuildParamSet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b476298c (    0x28) sTWL_Versions [NameNList, MangledNameNList, NList] 
                0x00000001b47629b4 (     0xc) errStr_word_wordlist_E_WORD_COUNTS [NameNList, MangledNameNList, NList] 
                0x00000001b47629c0 (     0xe) errStr_word_wordlist_E_TWL_BAD_FIELD_FORMAT [NameNList, MangledNameNList, NList] 
                0x00000001b47629ce (     0xd) errStr_word_wordlist_E_BAD_TWL_FIELD [NameNList, MangledNameNList, NList] 
                0x00000001b47629db (     0x7) errStr_word_wordlist_E_MISSING_TWL_FIELD [NameNList, MangledNameNList, NList] 
                0x00000001b47629e2 (     0xa) errStr_word_wordlist_E_MISSING_TABLE [NameNList, MangledNameNList, NList] 
                0x00000001b47629ec (     0x1) errStr_word_wordlist_E_INCOMPLETE_SEEDTABLE [NameNList, MangledNameNList, NList] 
                0x00000001b47629ed (     0x3) errStr_word_wordlist_E_PREDSEEDCAT_VALUE [NameNList, MangledNameNList, NList] 
                0x00000001b47629f0 (     0x3) errStr_word_wordlist_E_SUCCSEEDCAT_VALUE [NameNList, MangledNameNList, NList] 
                0x00000001b47629f3 (     0x3) errStr_word_wordlist_E_UNSVALUE3_MUST_BE_ZERO_OR_ONE [NameNList, MangledNameNList, NList] 
                0x00000001b47629f6 (     0x3) errStr_word_wordlist_E_STRVALUE1_MUST_BE_EMPTY [NameNList, MangledNameNList, NList] 
                0x00000001b47629f9 (     0x3) errStr_word_wordlist_E_STRVALUE2_MUST_BE_EMPTY [NameNList, MangledNameNList, NList] 
                0x00000001b47629fc (     0x1) errStr_word_wordlist_E_SEED_TABLE_NOSEED [NameNList, MangledNameNList, NList] 
                0x00000001b47629fd (     0x6) errStr_word_wordlist_E_PREDSEEDCAT_TOO_LARGE [NameNList, MangledNameNList, NList] 
                0x00000001b4762a03 (     0x6) errStr_word_wordlist_E_SUCCSEEDCAT_TOO_LARGE [NameNList, MangledNameNList, NList] 
                0x00000001b4762a09 (     0xa) errStr_word_wordlist_E_ILLEGAL_PRONSOURCETYPE [NameNList, MangledNameNList, NList] 
                0x00000001b4762a13 (     0x3) errStr_word_wordlist_E_EMPTY_WORD_NAME [NameNList, MangledNameNList, NList] 
                0x00000001b4762a16 (     0xd) errStr_word_wordlist_E_WORDID [NameNList, MangledNameNList, NList] 
                0x00000001b4762a23 (     0xd) errStr_word_wordlist_E_DUPLICATE_WORDID [NameNList, MangledNameNList, NList] 
                0x00000001b4762a30 (     0xd) errStr_word_wordlist_E_LONG_PRON [NameNList, MangledNameNList, NList] 
                0x00000001b4762a3d (     0xd) errStr_word_wordlist_E_ALTPRONS [NameNList, MangledNameNList, NList] 
                0x00000001b4762a4a (     0xa) errStr_word_wordlist_E_PRONLESS_WORD [NameNList, MangledNameNList, NList] 
                0x00000001b4762a54 (     0x3) errStr_word_wordlist_E_PRON_CONTAINS_NON_INTERNAL_SILENCE [NameNList, MangledNameNList, NList] 
                0x00000001b4762a57 (     0x6) errStr_word_wordlist_E_NUMIDS [NameNList, MangledNameNList, NList] 
                0x00000001b4762a5d (     0x6) errStr_word_wordlist_E_NUMPRONLESS [NameNList, MangledNameNList, NList] 
                0x00000001b4762a63 (     0x3) errStr_word_wordlist_E_UNSVALUE2_MUST_BE_ZERO [NameNList, MangledNameNList, NList] 
                0x00000001b4762a66 (     0x3) errStr_word_wordlist_E_UNSVALUE3_MUST_BE_ZERO [NameNList, MangledNameNList, NList] 
                0x00000001b4762a69 (     0xa) errStr_word_wordlist_E_MISSING_WORD [NameNList, MangledNameNList, NList] 
                0x00000001b4762a73 (    0x11) errStr_word_wordlist_E_REDUNDANT_ENTRY [NameNList, MangledNameNList, NList] 
                0x00000001b4762a84 (     0x3) errStr_word_wordlist_E_UNSVALUE1_MUST_BE_ZERO [NameNList, MangledNameNList, NList] 
                0x00000001b4762a87 (     0xa) errStr_word_wordlist_E_ILLEGAL_WORDSOURCETYPE [NameNList, MangledNameNList, NList] 
                0x00000001b4762a91 (     0xa) errStr_word_wordlist_E_TAGS_REQUIRED [NameNList, MangledNameNList, NList] 
                0x00000001b4762a9b (    0x11) errStr_word_wordlist_E_MISSING_ENTRY [NameNList, MangledNameNList, NList] 
                0x00000001b4762aac (     0xa) errStr_word_wordlist_E_TAGS_NOOPT [NameNList, MangledNameNList, NList] 
                0x00000001b4762ab6 (     0xa) errStr_word_wordlist_E_TAGS_OPTSTRING [NameNList, MangledNameNList, NList] 
                0x00000001b4762ac0 (     0x3) errStr_word_wordlist_E_BAD_STRVALUE1 [NameNList, MangledNameNList, NList] 
                0x00000001b4762ac3 (     0x3) errStr_word_wordlist_E_BAD_STRVALUE2 [NameNList, MangledNameNList, NList] 
                0x00000001b4762ac6 (     0x3) errStr_word_wordlist_E_TWL_NO_EOF [NameNList, MangledNameNList, NList] 
                0x00000001b4762ac9 (     0x7) errStr_word_wordlist_E_ALLOWED_COLLATION_NOT_FOUND [NameNList, MangledNameNList, NList] 
                0x00000001b4762ad0 (     0x3) errStr_word_wordlist_E_FREE_ID1 [NameNList, MangledNameNList, NList] 
                0x00000001b4762ad3 (     0x4) errStr_word_wordlist_E_FREE_ID2 [NameNList, MangledNameNList, NList] 
                0x00000001b4762ad7 (     0x1) errStr_word_wordlist_E_EMPTY_PREFIX1_WITH_NONEMPTY_PREFIX2 [NameNList, MangledNameNList, NList] 
                0x00000001b4762ad8 (     0x1) errStr_word_wordlist_E_BAD_COLLATION [NameNList, MangledNameNList, NList] 
                0x00000001b4762ad9 (     0x3) errStr_word_wordlist_E_BAD_WORDID [NameNList, MangledNameNList, NList] 
                0x00000001b4762adc (    0x14) errStr_word_wordlist_E_REFERRED_WORD [NameNList, MangledNameNList, NList] 
                0x00000001b4762af0 (     0x7) errStr_word_wordlist_E_MULTIPLE_NAMES [NameNList, MangledNameNList, NList] 
                0x00000001b4762af7 (     0xa) errStr_word_wordlist_E_TOO_MANY_WORDS [NameNList, MangledNameNList, NList] 
                0x00000001b4762b01 (     0xe) errStr_word_wordlist_E_TOO_MANY_ALTPRONS [NameNList, MangledNameNList, NList] 
                0x00000001b4762b0f (     0x6) errStr_word_wordlist_E_PRON_TOO_LONG [NameNList, MangledNameNList, NList] 
                0x00000001b4762b15 (    0x13) errStr_word_wordlist_E_BAD_WORD_BOUNDARY_PHONEME [NameNList, MangledNameNList, NList] 
                0x00000001b4762b28 (     0xa) errStr_word_wordlist_E_TAG_INVALID_CHAR [NameNList, MangledNameNList, NList] 
                0x00000001b4762b32 (     0x7) errStr_word_wordlist_E_TAG_INVALID_COMMA [NameNList, MangledNameNList, NList] 
                0x00000001b4762b39 (     0x7) errStr_word_wordlist_E_TAGS_BAD_TOKEN [NameNList, MangledNameNList, NList] 
                0x00000001b4762b40 (    0x1d) typeinfo name for HashNCHV<unsigned int, unsigned int, WordIdScope, unsigned int> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4762b5d (     0x1) errStr_lm_dummylm_E_DUMMY_WORD_LM_WTRANS [NameNList, MangledNameNList, NList] 
                0x00000001b4762b5e (    0x15) typeinfo name for DummyLanguageModel [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4762b73 (    0x18) errStr_mrecutil_osfile_E_OPERATION_FAILED_0 [NameNList, MangledNameNList, NList] 
                0x00000001b4762b8b (    0x1d) errStr_mrecutil_osfile_E_OPERATION_FAILED_1 [NameNList, MangledNameNList, NList] 
                0x00000001b4762ba8 (    0x28) errStr_mrecutil_osfile_E_RESERVED [NameNList, MangledNameNList, NList] 
                0x00000001b4762bd0 (     0xc) errStr_prefilt_retlist_E_BAD_LIST_THRESH [NameNList, MangledNameNList, NList] 
                0x00000001b4762bdc (    0x54) typeinfo name for HashNCHV<unsigned int, unsigned int, WordToScoreAndDurationHashHelper, ScoreAndDuration> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4762c30 (    0x28) sTSR_Versions [NameNList, MangledNameNList, NList] 
                0x00000001b4762c58 (     0xe) errStr_voc_tsr_E_TSR_BAD_FIELD_FORMAT [NameNList, MangledNameNList, NList] 
                0x00000001b4762c66 (     0xa) errStr_voc_tsr_E_LINE_FIELD [NameNList, MangledNameNList, NList] 
                0x00000001b4762c70 (     0xa) errStr_voc_tsr_E_MISSING_FIELD [NameNList, MangledNameNList, NList] 
                0x00000001b4762c7a (     0x6) errStr_voc_tsr_E_BAD_NUM_VOCS [NameNList, MangledNameNList, NList] 
                0x00000001b4762c80 (     0x3) errStr_voc_tsr_E_TSR_EOF [NameNList, MangledNameNList, NList] 
                0x00000001b4762c83 (     0x3) errStr_voc_tsr_E_MISSING_VOCMAXIDINFO [NameNList, MangledNameNList, NList] 
                0x00000001b4762c86 (     0x3) errStr_voc_tsr_E_TSR_NO_EOF [NameNList, MangledNameNList, NList] 
                0x00000001b4762c89 (     0xf) errStr_voc_tsr_E_BAD_VOCNAME [NameNList, MangledNameNList, NList] 
                0x00000001b4762c98 (     0x3) errStr_voc_tsr_E_STRVALUE1_MUST_BE_EMPTY [NameNList, MangledNameNList, NList] 
                0x00000001b4762c9b (     0x3) errStr_voc_tsr_E_STRVALUE2_MUST_BE_EMPTY [NameNList, MangledNameNList, NList] 
                0x00000001b4762c9e (     0x3) errStr_voc_tsr_E_STRVALUE3_MUST_BE_EMPTY [NameNList, MangledNameNList, NList] 
                0x00000001b4762ca1 (     0x3) errStr_voc_tsr_E_BAD_INTVALUE1 [NameNList, MangledNameNList, NList] 
                0x00000001b4762ca4 (     0x3) errStr_voc_tsr_E_BAD_INTVALUE2 [NameNList, MangledNameNList, NList] 
                0x00000001b4762ca7 (     0x3) errStr_voc_tsr_E_BAD_NUMVOCS_IN_VOCMAXIDINFO [NameNList, MangledNameNList, NList] 
                0x00000001b4762caa (    0x10) errStr_voc_tsr_E_REPEAT_STATE [NameNList, MangledNameNList, NList] 
                0x00000001b4762cba (     0x3) errStr_voc_tsr_E_INTVALUE2_MUST_BE_ZERO [NameNList, MangledNameNList, NList] 
                0x00000001b4762cbd (     0x3) errStr_voc_tsr_E_INTVALUE2_MUST_BE_ZERO_OR_ONE [NameNList, MangledNameNList, NList] 
                0x00000001b4762cc0 (    0x10) errStr_voc_tsr_E_INVALID_WEIGHTSNAME [NameNList, MangledNameNList, NList] 
                0x00000001b4762cd0 (     0xc) errStr_voc_tsr_E_WORDPENALTY [NameNList, MangledNameNList, NList] 
                0x00000001b4762cdc (     0xf) errStr_voc_tsr_E_BAD_TIME [NameNList, MangledNameNList, NList] 
                0x00000001b4762ceb (     0x6) errStr_voc_tsr_E_SKIPPABLE_WB_MISMATCH [NameNList, MangledNameNList, NList] 
                0x00000001b4762cf1 (     0x9) errStr_voc_tsr_E_WB_MISMATCH [NameNList, MangledNameNList, NList] 
                0x00000001b4762cfa (     0x3) errStr_voc_tsr_E_BAD_STRVALUE1 [NameNList, MangledNameNList, NList] 
                0x00000001b4762cfd (     0x3) errStr_voc_tsr_E_BAD_STRVALUE2 [NameNList, MangledNameNList, NList] 
                0x00000001b4762d00 (     0x3) errStr_voc_tsr_E_BAD_STRVALUE3 [NameNList, MangledNameNList, NList] 
                0x00000001b4762d03 (    0x2d) errStr_voc_tsr_E_REPEAT_RULE [NameNList, MangledNameNList, NList] 
                0x00000001b4762d30 (     0x7) errStr_kernel_btlat_E_INVALID_LATTICE_OPTION [NameNList, MangledNameNList, NList] 
                0x00000001b4762d37 (     0x7) errStr_kernel_btlat_E_NBEST_INVALID_OPTION [NameNList, MangledNameNList, NList] 
                0x00000001b4762d3e (    0x15) typeinfo name for BackTraceNodeCache [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4762d53 (    0x14) typeinfo name for StringGlobalParam [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4762d67 (    0x33) typeinfo name for HashKEV<BackTraceItemHashKey, BackTraceItem, BackTraceItemHashKey> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4762d9a (    0x2d) typeinfo name for BtNodeCacheType<BtTrigramNodeHashKey, BtTrigramNodeHashKey> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4762dc7 (    0x29) typeinfo name for HashNCHV<BtTrigramNodeHashKey, BtTrigramNodeHashKey, BtTrigramNodeHashKey, unsigned int> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4762df0 (    0x41) typeinfo name for BtNodeCacheType<BtNodeHashKey, BtNodeKeyGenerator<false, true>> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4762e31 (    0x22) typeinfo name for HashNCHV<BtNodeHashKey, BtNodeHashKey, BtNodeHashKey, unsigned int> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4762e53 (    0x41) typeinfo name for BtNodeCacheType<BtNodeHashKey, BtNodeKeyGenerator<true, false>> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4762e94 (    0x41) typeinfo name for BtNodeCacheType<BtNodeHashKey, BtNodeKeyGenerator<true, true>> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4762ed5 (    0x2d) typeinfo name for BtNodeCacheType<BtUnigramNodeHashKey, BtUnigramNodeHashKey> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4762f02 (    0x29) typeinfo name for HashNCHV<BtUnigramNodeHashKey, BtUnigramNodeHashKey, BtUnigramNodeHashKey, unsigned int> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4762f2b (    0x28) typeinfo name for Hash<CWIDACPair, CWIDACPair, CWIDACPair, BigScorePair> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4762f53 (    0x2b) typeinfo name for Hash<BackTraceLinkPair, BackTraceLinkPair, BackTraceLinkPair, int> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4762f7e (     0xa) typeinfo name for EmptyNet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4762f88 (    0x18) typeinfo name for OneInPort [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4762fa0 (    0x10) sLDT_Versions [NameNList, MangledNameNList, NList] 
                0x00000001b4762fb0 (     0x4) errStr_channel_utteranc_E_DEL [NameNList, MangledNameNList, NList] 
                0x00000001b4762fb4 (    0x37) sSPD_Versions [NameNList, MangledNameNList, NList] 
                0x00000001b4762feb (     0x7) errStr_dfutil_dsmstream_E_DSMSTREAM_NO_APPEND [NameNList, MangledNameNList, NList] 
                0x00000001b4762ff2 (     0x7) errStr_dfutil_dsmstream_E_DSMSTREAM_REOPEN [NameNList, MangledNameNList, NList] 
                0x00000001b4762ff9 (    0x11) errStr_dfutil_dsmstream_E_DSMSTREAM_OVERFLOW [NameNList, MangledNameNList, NList] 
                0x00000001b476300a (     0x7) errStr_dfutil_dsmstream_E_DSMSTREAM_LARGEFILE [NameNList, MangledNameNList, NList] 
                0x00000001b4763011 (     0x7) errStr_dfutil_dsmstream_E_DSMSTREAM_NO_WRITE [NameNList, MangledNameNList, NList] 
                0x00000001b4763018 (    0x18) typeinfo name for DgnSharedMemStream [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4763030 (    0x2a) sVCC_Versions [NameNList, MangledNameNList, NList] 
                0x00000001b476305a (    0x14) typeinfo name for PrefiltererThread [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b476306e (    0x26) typeinfo name for DgnThread<PrefiltererThreadWorker> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4763094 (    0x1a) typeinfo name for PrefiltererThreadWorker [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b47630ae (    0x1a) typeinfo name for ThreadedTreePrefilterer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b47630c8 (     0xe) errStr_dfutil_dynparset_E_PARAMETER_DOES_NOT_EXIST [NameNList, MangledNameNList, NList] 
                0x00000001b47630d6 (    0x15) errStr_dfutil_dynparset_E_DYNAMIC_PARAMSET_READ_TYPE_ERROR [NameNList, MangledNameNList, NList] 
                0x00000001b47630eb (     0x8) errStr_dfutil_dynparset_E_UNWANTED_PARAMETERS_EXIST [NameNList, MangledNameNList, NList] 
                0x00000001b47630f3 (     0x1) errStr_fileutil_huffutil_E_DECODE_SUCCESSOR_OVERFLOW [NameNList, MangledNameNList, NList] 
                0x00000001b47630f4 (     0x1) errStr_fileutil_huffutil_E_DECODE_END_OF_DATA [NameNList, MangledNameNList, NList] 
                0x00000001b47630f5 (     0x3) errStr_fileutil_huffutil_E_TABLE_CODE_LIMIT_EXCEEDED [NameNList, MangledNameNList, NList] 
                0x00000001b47630f8 (     0x1) errStr_fileutil_huffutil_E_TABLE_GENERATION_FAILED [NameNList, MangledNameNList, NList] 
                0x00000001b47630f9 (     0x3) errStr_fileutil_huffutil_E_ENCODE_UNKNOWN_SYMBOL [NameNList, MangledNameNList, NList] 
                0x00000001b47630fc (    0x2c) typeinfo name for Lattice<WordLatticeLC> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4763128 (    0x18) errStr_prefilt_lexnet_E_BAD_BACKOFF_THRESH [NameNList, MangledNameNList, NList] 
                0x00000001b4763140 (     0xa) warnStr_mrecutil_memchunk_W_MAXSIZE_TOO_BIG [NameNList, MangledNameNList, NList] 
                0x00000001b476314a (     0xa) warnStr_mrecutil_memchunk_W_CHUNK_TOO_BIG [NameNList, MangledNameNList, NList] 
                0x00000001b4763154 (     0x3) errStr_channel_chanmgr_E_INVALID_CHANID [NameNList, MangledNameNList, NList] 
                0x00000001b4763157 (     0x3) errStr_channel_chanmgr_E_INVALID_UTTID [NameNList, MangledNameNList, NList] 
                0x00000001b476315a (     0x6) errStr_channel_chanmgr_E_INVALID_SIGPROCID [NameNList, MangledNameNList, NList] 
                0x00000001b4763160 (    0x10) sWDS_Versions [NameNList, MangledNameNList, NList] 
                0x00000001b4763170 (     0xa) errStr_lm_wordt_E_DUMMY_BAD_DEPTH [NameNList, MangledNameNList, NList] 
                0x00000001b476317a (     0xa) errStr_lm_wordt_E_WDS_BAD_HEADER_FIELD [NameNList, MangledNameNList, NList] 
                0x00000001b4763184 (    0x10) sWBS_Versions [NameNList, MangledNameNList, NList] 
                0x00000001b4763194 (     0xa) errStr_lm_wordt_E_WBS_BAD_DEPTH [NameNList, MangledNameNList, NList] 
                0x00000001b476319e (     0xa) errStr_lm_wordt_E_WBS_BAD_HEADER_FIELD [NameNList, MangledNameNList, NList] 
                0x00000001b47631a8 (    0x10) sWTT_Versions [NameNList, MangledNameNList, NList] 
                0x00000001b47631b8 (     0x7) errStr_lm_wordt_E_WTT_BAD_HEADER_FIELD [NameNList, MangledNameNList, NList] 
                0x00000001b47631bf (     0xe) errStr_lm_wordt_E_WTT_BAD_FIELD_FORMAT [NameNList, MangledNameNList, NList] 
                0x00000001b47631cd (     0x7) errStr_lm_wordt_E_BAD_WTT_FIELD [NameNList, MangledNameNList, NList] 
                0x00000001b47631d4 (     0x7) errStr_lm_wordt_E_WTT_BAD_LINE [NameNList, MangledNameNList, NList] 
                0x00000001b47631db (     0x3) errStr_lm_wordt_E_WORDIDS_NOT_INCREASING_IN_WORDIDTOHEADCLONEWORDID [NameNList, MangledNameNList, NList] 
                0x00000001b47631de (     0x3) errStr_lm_wordt_E_IDENTITY_MAP_IN_WORDIDTOHEADCLONEWORDID [NameNList, MangledNameNList, NList] 
                0x00000001b47631e1 (     0x3) errStr_lm_wordt_E_NONVISIBLE_WORDID_IN_WORDIDTOHEADCLONEWORDID [NameNList, MangledNameNList, NList] 
                0x00000001b47631e4 (     0x3) errStr_lm_wordt_E_NONHEADCLONEWORDID_AS_HEADCLONEWORDID [NameNList, MangledNameNList, NList] 
                0x00000001b47631e7 (    0x71) errStr_lm_wordt_E_SPECIFIED_NONVISIBLE_WORDID [NameNList, MangledNameNList, NList] 
                0x00000001b4763258 (     0xc) errStr_mrecutil_verifptr_E_BAD_LENGTH [NameNList, MangledNameNList, NList] 
                0x00000001b4763264 (     0x2) errStr_mrecutil_verifptr_E_BAD_STRING_PTR [NameNList, MangledNameNList, NList] 
                0x00000001b4763266 (     0x1) errStr_neuraln_neuraln_E_JOIN_REQUIRED [NameNList, MangledNameNList, NList] 
                0x00000001b4763267 (     0x1) errStr_neuraln_neuraln_E_BAD_RUN_API_OUTPUT_PARAMETERS [NameNList, MangledNameNList, NList] 
                0x00000001b4763268 (    0x24) sNNT_Versions [NameNList, MangledNameNList, NList] 
                0x00000001b476328c (    0x1b) typeinfo name for HashKEV<unsigned int, unsigned int, Uns32Scope> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b47632a7 (     0xc) errStr_sdapi_sdmisc_E_INITBADVER [NameNList, MangledNameNList, NList] 
                0x00000001b47632b3 (    0x18) errStr_sdapi_sdmisc_E_INITBADTYPE [NameNList, MangledNameNList, NList] 
                0x00000001b47632cb (     0xa) errStr_sdapi_sdmisc_E_INITBADNUMTYPES [NameNList, MangledNameNList, NList] 
                0x00000001b47632d5 (     0x7) errStr_dfutil_dstream_E_NO_READ [NameNList, MangledNameNList, NList] 
                0x00000001b47632dc (     0xd) typeinfo name for DgnStream [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b47632e9 (    0x37) errStr_mrecutil_cmbtable_E_SCALE_TOO_LARGE [NameNList, MangledNameNList, NList] 
                0x00000001b4763320 (    0x14) typeinfo name for DoubleGlobalParam [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4763334 (     0x7) errStr_dfutil_subext_E_BAD_LM_SUBDIR [NameNList, MangledNameNList, NList] 
                0x00000001b476333b (    0x12) typeinfo name for NonCoartSyncNet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b476334d (     0x3) errStr_sigproc_sigproc_E_HAS_ADAPTER [NameNList, MangledNameNList, NList] 
                0x00000001b4763350 (     0x5) errStr_sigproc_sigproc_E_NO_ADAPTER [NameNList, MangledNameNList, NList] 
                0x00000001b4763355 (     0x1) errStr_sdapi_sdvoc_E_SHAREDMEM_HAVECACHEDIR [NameNList, MangledNameNList, NList] 
                0x00000001b4763356 (     0x1) errStr_sdapi_sdvoc_E_SHAREDMEM_REABSORB [NameNList, MangledNameNList, NList] 
                0x00000001b4763357 (     0x1) errStr_sdapi_sdvoc_E_SHAREDMEM_LOBOTOMIZE [NameNList, MangledNameNList, NList] 
                0x00000001b4763358 (     0x7) errStr_sdapi_sdvoc_E_INVALIDCACHEDIR [NameNList, MangledNameNList, NList] 
                0x00000001b476335f (     0x1) errStr_sdapi_sdvoc_E_SHAREDMEM_STATICVOC [NameNList, MangledNameNList, NList] 
                0x00000001b4763360 (     0x1) errStr_sdapi_sdvoc_E_SAVE_AFTER_ERROR [NameNList, MangledNameNList, NList] 
                0x00000001b4763361 (     0x1) errStr_sdapi_sdvoc_E_VOC_UNLOADEDLM [NameNList, MangledNameNList, NList] 
                0x00000001b4763362 (     0x3) errStr_sdapi_sdvoc_E_CLOSING_VOC_IN_PREFILTERER [NameNList, MangledNameNList, NList] 
                0x00000001b4763365 (     0x3) errStr_sdapi_sdvoc_E_CLOSING_VOC_BUILDING_TOPIC_LM [NameNList, MangledNameNList, NList] 
                0x00000001b4763368 (     0x1) errStr_sdapi_sdvoc_E_PREFIXNOCOLLATION [NameNList, MangledNameNList, NList] 
                0x00000001b4763369 (    0x88) errStr_sdapi_sdvoc_E_SETCOLL_WITH_NONE [NameNList, MangledNameNList, NList] 
                0x00000001b47633f1 (     0x1) errStr_lm_wordlm_E_CANT_LOAD_TEXT_LANGUAGE_MODEL [NameNList, MangledNameNList, NList] 
                0x00000001b47633f2 (     0x1) errStr_lm_wordlm_E_WNB_WITH_OTHER_LM_FILE [NameNList, MangledNameNList, NList] 
                0x00000001b47633f3 (     0x1) errStr_lm_wordlm_E_LOADING_MIXED_TEXT_AND_BINARY_SUBFILES [NameNList, MangledNameNList, NList] 
                0x00000001b47633f4 (     0x1) errStr_lm_wordlm_E_NO_LM_FILE [NameNList, MangledNameNList, NList] 
                0x00000001b47633f5 (     0xd) errStr_lm_wordlm_E_BAD_BEGLMID_SCORE [NameNList, MangledNameNList, NList] 
                0x00000001b4763402 (     0xd) errStr_lm_wordlm_E_BAD_ENDLMID_SCORE [NameNList, MangledNameNList, NList] 
                0x00000001b476340f (     0x3) errStr_lm_wordlm_E_BAD_DISK_RECORD_TYPE [NameNList, MangledNameNList, NList] 
                0x00000001b4763412 (     0x2) errStr_lm_wordlm_E_BACKOFF_MISMATCHED_ENDLMID [NameNList, MangledNameNList, NList] 
                0x00000001b4763414 (    0x28) sWNS_Versions [NameNList, MangledNameNList, NList] 
                0x00000001b476343c (     0x7) errStr_lm_wordlm_E_WNS_BAD_HEADER_FIELD [NameNList, MangledNameNList, NList] 
                0x00000001b4763443 (     0x1) errStr_lm_wordlm_E_WNS_NEW_WORD_BEHAVIOR_NOT_SPECIFIED [NameNList, MangledNameNList, NList] 
                0x00000001b4763444 (     0x1) errStr_lm_wordlm_E_WNS_NEW_WORD_BEHAVIOR_SPECIFIED_TWICE [NameNList, MangledNameNList, NList] 
                0x00000001b4763445 (     0x1) errStr_lm_wordlm_E_WNS_ALIEN_WORD_LMID_NOT_SPECIFIED [NameNList, MangledNameNList, NList] 
                0x00000001b4763446 (     0x1) errStr_lm_wordlm_E_UNKNOWNCONTEXTLMID_WITHOUT_ALIENWORDLMID [NameNList, MangledNameNList, NList] 
                0x00000001b4763447 (     0x1) errStr_lm_wordlm_E_WNS_ONLY_ONE_BACKOFF_FIELD [NameNList, MangledNameNList, NList] 
                0x00000001b4763448 (     0x1) errStr_lm_wordlm_E_BAD_UPPER_LM [NameNList, MangledNameNList, NList] 
                0x00000001b4763449 (     0x6) errStr_lm_wordlm_E_LM_SPEC_LMSCALE_DIFFERENCE [NameNList, MangledNameNList, NList] 
                0x00000001b476344f (     0x1) errStr_lm_wordlm_E_WNS_WNB_MISMATCH [NameNList, MangledNameNList, NList] 
                0x00000001b4763450 (    0x28) sWNT_Versions [NameNList, MangledNameNList, NList] 
                0x00000001b4763478 (     0x6) errStr_lm_wordlm_E_UNSUPPORTED_DISTANCE_LM_DEPTH [NameNList, MangledNameNList, NList] 
                0x00000001b476347e (     0xe) errStr_lm_wordlm_E_WNT_BAD_FIELD_FORMAT [NameNList, MangledNameNList, NList] 
                0x00000001b476348c (     0xa) errStr_lm_wordlm_E_BAD_WNT_FIELD [NameNList, MangledNameNList, NList] 
                0x00000001b4763496 (     0x7) errStr_lm_wordlm_E_MISSING_WNT_FIELD [NameNList, MangledNameNList, NList] 
                0x00000001b476349d (     0x7) errStr_lm_wordlm_E_WNT_BAD_LINE [NameNList, MangledNameNList, NList] 
                0x00000001b47634a4 (     0x3) errStr_lm_wordlm_E_BOWT_MISSING [NameNList, MangledNameNList, NList] 
                0x00000001b47634a7 (     0x6) errStr_lm_wordlm_E_TRIBOWT_MISSING [NameNList, MangledNameNList, NList] 
                0x00000001b47634ad (     0x9) errStr_lm_wordlm_E_QUADBOWT_MISSING [NameNList, MangledNameNList, NList] 
                0x00000001b47634b6 (     0x6) errStr_lm_wordlm_E_QUAD_BOWTS_WITHOUT_SCORES [NameNList, MangledNameNList, NList] 
                0x00000001b47634bc (     0x3) errStr_lm_wordlm_E_BEGLMID_UNISC_OR_BOWT_MISSING [NameNList, MangledNameNList, NList] 
                0x00000001b47634bf (     0x3) errStr_lm_wordlm_E_ENDLMID_UNISC_MISSING [NameNList, MangledNameNList, NList] 
                0x00000001b47634c2 (     0x3) errStr_lm_wordlm_E_UNIBOSC_MISSING [NameNList, MangledNameNList, NList] 
                0x00000001b47634c5 (     0x6) errStr_lm_wordlm_E_DIFFERENT_LMIDS_FOR_ALT_PRON_WORDIDS [NameNList, MangledNameNList, NList] 
                0x00000001b47634cb (     0x6) errStr_lm_wordlm_E_DIFFERENT_CONTEXT_LMIDS_FOR_ALT_PRON_WORDIDS [NameNList, MangledNameNList, NList] 
                0x00000001b47634d1 (     0x1) errStr_lm_wordlm_E_WNT_ALIEN_WORD_LMID_NOT_SPECIFIED [NameNList, MangledNameNList, NList] 
                0x00000001b47634d2 (     0x1) errStr_lm_wordlm_E_BAD_HAS_WORDID_TO_CONTEXT_LMID [NameNList, MangledNameNList, NList] 
                0x00000001b47634d3 (     0x1) errStr_lm_wordlm_E_ALIEN_WORD_CONTEXT_LMID_WITHOUT_CONTEXT_LMIDS [NameNList, MangledNameNList, NList] 
                0x00000001b47634d4 (     0x6) errStr_lm_wordlm_E_BISC_MISSING [NameNList, MangledNameNList, NList] 
                0x00000001b47634da (     0x3) errStr_lm_wordlm_E_UNISC_MISSING [NameNList, MangledNameNList, NList] 
                0x00000001b47634dd (     0x9) errStr_lm_wordlm_E_TRISC_MISSING [NameNList, MangledNameNList, NList] 
                0x00000001b47634e6 (     0xa) errStr_lm_wordlm_E_DISK_RECORD_ID_TOO_LARGE [NameNList, MangledNameNList, NList] 
                0x00000001b47634f0 (     0xc) errStr_lm_wordlm_E_WNP_WNI_MISMATCH [NameNList, MangledNameNList, NList] 
                0x00000001b47634fc (    0x13) errStr_lm_wordlm_E_WNP_WND_MISMATCH [NameNList, MangledNameNList, NList] 
                0x00000001b476350f (     0x6) errStr_lm_wordlm_E_WNP_WNI_MISMATCH2 [NameNList, MangledNameNList, NList] 
                0x00000001b4763515 (     0x6) errStr_lm_wordlm_E_WNI_WNI_MISMATCH [NameNList, MangledNameNList, NList] 
                0x00000001b476351b (     0x1) errStr_lm_wordlm_E_WNS_WND_PRESENCE_MISMATCH [NameNList, MangledNameNList, NList] 
                0x00000001b476351c (     0x1) errStr_lm_wordlm_E_NO_STATIC_VOC [NameNList, MangledNameNList, NList] 
                0x00000001b476351d (     0x1) errStr_lm_wordlm_E_WND_WITH_NO_WNP_FILE [NameNList, MangledNameNList, NList] 
                0x00000001b476351e (     0x1) errStr_lm_wordlm_E_WND_WITH_NO_WNI_FILE [NameNList, MangledNameNList, NList] 
                0x00000001b476351f (     0x1) errStr_lm_wordlm_E_LMSCALE_ON_DISK [NameNList, MangledNameNList, NList] 
                0x00000001b4763520 (     0x6) errStr_lm_wordlm_E_VALID_WORDID_INVALID_LMID [NameNList, MangledNameNList, NList] 
                0x00000001b4763526 (     0x6) errStr_lm_wordlm_E_INVALID_WORDID_VALID_LMID [NameNList, MangledNameNList, NList] 
                0x00000001b476352c (     0x6) errStr_lm_wordlm_E_VALID_WORDID_INVALID_CONTEXT_LMID [NameNList, MangledNameNList, NList] 
                0x00000001b4763532 (     0x6) errStr_lm_wordlm_E_INVALID_WORDID_VALID_CONTEXT_LMID [NameNList, MangledNameNList, NList] 
                0x00000001b4763538 (     0x6) errStr_lm_wordlm_E_BAD_NUM_VALID_WORDIDS [NameNList, MangledNameNList, NList] 
                0x00000001b476353e (    0x1a) errStr_lm_wordlm_E_DIFFERENT_LMIDS_FOR_ALT_PRONS [NameNList, MangledNameNList, NList] 
                0x00000001b4763558 (    0x1a) errStr_lm_wordlm_E_DIFFERENT_CONTEXT_LMIDS_FOR_ALT_PRONS [NameNList, MangledNameNList, NList] 
                0x00000001b4763572 (    0x17) errStr_lm_wordlm_E_VERIFY_BAD_UNIGRAM [NameNList, MangledNameNList, NList] 
                0x00000001b4763589 (    0x13) errStr_lm_wordlm_E_VERIFY_INVALID_SCORE_MISMATCH [NameNList, MangledNameNList, NList] 
                0x00000001b476359c (    0x17) errStr_lm_wordlm_E_VERIFY_BAD_UNIGRAM_BACKOFF [NameNList, MangledNameNList, NList] 
                0x00000001b47635b3 (    0x17) errStr_lm_wordlm_E_VERIFY_BAD_BACKOFF [NameNList, MangledNameNList, NList] 
                0x00000001b47635ca (     0xa) errStr_lm_wordlm_E_VERIFY_BIGRAMS_PRESENT_BAD_BOWT [NameNList, MangledNameNList, NList] 
                0x00000001b47635d4 (    0x1e) errStr_lm_wordlm_E_VERIFY_BAD_LOOKUP_BI_SCORE [NameNList, MangledNameNList, NList] 
                0x00000001b47635f2 (    0x1e) errStr_lm_wordlm_E_VERIFY_BAD_SEARCH_BI_SCORE [NameNList, MangledNameNList, NList] 
                0x00000001b4763610 (     0xa) errStr_lm_wordlm_E_VERIFY_TRIGRAMS_PRESENT_BAD_BOWT [NameNList, MangledNameNList, NList] 
                0x00000001b476361a (    0x28) errStr_lm_wordlm_E_VERIFY_BAD_LOOKUP_TRI_SCORE [NameNList, MangledNameNList, NList] 
                0x00000001b4763642 (    0x28) errStr_lm_wordlm_E_VERIFY_BAD_SEARCH_TRI_SCORE [NameNList, MangledNameNList, NList] 
                0x00000001b476366a (     0xa) errStr_lm_wordlm_E_VERIFY_QUADGRAMS_PRESENT_BAD_BOWT [NameNList, MangledNameNList, NList] 
                0x00000001b4763674 (    0x32) errStr_lm_wordlm_E_VERIFY_BAD_SEARCH_QUAD_SCORE [NameNList, MangledNameNList, NList] 
                0x00000001b47636a6 (     0x3) errStr_lm_wordlm_E_WORDID_OUTSIDE_RANGE_DISPATCH_COMPONENT [NameNList, MangledNameNList, NList] 
                0x00000001b47636a9 (     0xa) errStr_lm_wordlm_E_SLOTTYPE_BAD_DEPTH [NameNList, MangledNameNList, NList] 
                0x00000001b47636b3 (     0x7) errStr_lm_wordlm_E_SLOTTYPE_DISK_LM [NameNList, MangledNameNList, NList] 
                0x00000001b47636ba (     0x7) errStr_lm_wordlm_E_SLOTTYPE_BACKOFF_LM [NameNList, MangledNameNList, NList] 
                0x00000001b47636c1 (     0x6) errStr_lm_wordlm_E_WORDNGRAMBUILDSPEC_MISMATCH_DEPTH [NameNList, MangledNameNList, NList] 
                0x00000001b47636c7 (     0x6) errStr_lm_wordlm_E_WORDNGRAMBUILDSPEC_MISMATCH_ALLOWNEWWORDCLONING [NameNList, MangledNameNList, NList] 
                0x00000001b47636cd (     0x1) errStr_lm_wordlm_E_WORDNGRAMBUILDSPEC_MISMATCH_IGNOREINCONTEXTLMID [NameNList, MangledNameNList, NList] 
                0x00000001b47636ce (     0x3) errStr_lm_wordlm_E_UNIGRAM_COUNT_TOO_HIGH [NameNList, MangledNameNList, NList] 
                0x00000001b47636d1 (     0x3) errStr_lm_wordlm_E_WORD_LM_NON_TERMINAL [NameNList, MangledNameNList, NList] 
                0x00000001b47636d4 (     0x9) errStr_lm_wordlm_E_NGRAM_DOES_NOT_EXIST [NameNList, MangledNameNList, NList] 
                0x00000001b47636dd (    0x19) typeinfo name for WordLanguageModel [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b47636f6 (    0x14) typeinfo name for WordLMContextData [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b476370a (    0x10) typeinfo name for LMContextData [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b476371a (    0x21) typeinfo name for Hash<unsigned short, unsigned short, HuffmanSymbol<unsigned short, unsigned int>, HuffmanSymbol<unsigned short, unsigned int>*> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b476373b (    0x21) typeinfo name for Hash<BuildWordIdNgram, BuildWordIdNgram, BuildWordIdNgram, unsigned int> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b476375c (    0x1f) typeinfo name for Hash<BuildLmIdNgram, BuildLmIdNgram, BuildLmIdNgram, double> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b476377b (    0x1f) typeinfo name for Hash<BuildLmIdNgram, BuildLmIdNgram, BuildLmIdNgram, unsigned int> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b476379a (    0x26) typeinfo name for AcousticNet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b47637c0 (     0xc) errStr_kernel_recog_E_BAD_BACKOFF_THRESH [NameNList, MangledNameNList, NList] 
                0x00000001b47637cc (     0xc) errStr_kernel_recog_E_BAD_WORD_END_THRESH [NameNList, MangledNameNList, NList] 
                0x00000001b47637d8 (     0xc) errStr_kernel_recog_E_BAD_WORD_END_AGAINST_BEST_WORD_END_THRESH [NameNList, MangledNameNList, NList] 
                0x00000001b47637e4 (     0xa) errStr_kernel_recog_E_NO_PARAMETER_VALUE [NameNList, MangledNameNList, NList] 
                0x00000001b47637ee (     0x3) errStr_kernel_recog_E_MISMATCHED_PHONEME_TABLES [NameNList, MangledNameNList, NList] 
                0x00000001b47637f1 (    0x18) typeinfo name for GermRecogGermIterator [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4763809 (     0xd) typeinfo name for Recognizer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4763816 (    0x17) typeinfo name for SeedMergedActiveWord [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b476382d (    0x11) typeinfo name for SeedActiveWord [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b476383e (     0x7) errStr_kernel_recog_E_DUMMYERR [NameNList, MangledNameNList, NList] 
                0x00000001b4763845 (     0x7) errStr_kernel_recog_E_NOSUCHCMD [NameNList, MangledNameNList, NList] 
                0x00000001b476384c (    0x19) typeinfo name for SeedUnmergedActiveWord [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4763865 (    0x18) typeinfo name for SimpleLookaheadScorer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b476387d (    0x12) typeinfo name for LookaheadScorer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b476388f (    0x18) typeinfo name for LookaheadScorerThread [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b47638a7 (    0x2a) typeinfo name for DgnThread<LookaheadScorerThreadWorker> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b47638d1 (    0x1e) typeinfo name for LookaheadScorerThreadWorker [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b47638ef (    0x1e) typeinfo name for ThreadedLookaheadScorer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b476390d (     0x7) errStr_dfutil_listdf_E_NO_CLONE [NameNList, MangledNameNList, NList] 
                0x00000001b4763914 (    0x10) sListDFile_Versions [NameNList, MangledNameNList, NList] 
                0x00000001b4763924 (     0xe) errStr_dfutil_listdf_E_LISTDFILE_BAD_FIELD_SPEC [NameNList, MangledNameNList, NList] 
                0x00000001b4763932 (     0xe) errStr_dfutil_listdf_E_LISTDFILE_BAD_FIELD_FORMAT [NameNList, MangledNameNList, NList] 
                0x00000001b4763940 (     0x7) errStr_dfutil_listdf_E_LISTDFILE_REDUNDANT_LINE [NameNList, MangledNameNList, NList] 
                0x00000001b4763947 (     0x7) errStr_dfutil_listdf_E_LISTDFILE_BAD_INTERNAL_FILE_NAME [NameNList, MangledNameNList, NList] 
                0x00000001b476394e (     0x7) errStr_dfutil_listdf_E_NOT_FOUND [NameNList, MangledNameNList, NList] 
                0x00000001b4763955 (     0xe) errStr_dfutil_listdf_E_EXTERNAL_FILE_NOT_FOUND [NameNList, MangledNameNList, NList] 
                0x00000001b4763963 (     0xe) errStr_dfutil_listdf_E_SUPERFLUOUS_SUBFILE [NameNList, MangledNameNList, NList] 
                0x00000001b4763971 (    0x19) typeinfo name for ListDFileSubFileStream [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b476398a (     0xb) typeinfo name for ListDFile [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4763995 (     0xf) typeinfo name for TIOException [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b47639a4 (    0x2d) typeinfo name for TEnvManager [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b47639d1 (     0x8) typeinfo name for FwdBwd [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b47639d9 (    0x1f) typeinfo name for Hash<int, int, IntToUintScope, unsigned int> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b47639f8 (    0x50) sAdaptationSilenceAccumulateFactorDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4763a48 (    0x50) sAdaptationNonSilenceAccumulateFactorDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4763a98 (    0x18) sAdaptationAccumulateDoublyGenericBackoffPelsBoolHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4763ab0 (    0x18) sAdaptationAccumulateRightGenericBackoffPelsBoolHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4763ac8 (    0x18) sAdaptationAccumulateLeftGenericBackoffPelsBoolHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4763ae0 (    0x18) sAdaptationConTransAccInitFromIdentityMatrixBoolHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4763af8 (    0x18) sAdaptationMicUseDiagonalBoolHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4763b10 (    0x30) sAdaptationConTransAccRelevanceIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4763b40 (    0x18) sAdaptationConTransAccComputeTransformMatrixBoolHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4763b58 (    0x18) sAdaptationConTransAccComputeTranslationBoolHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4763b70 (    0x18) sAdaptationConTransAccDiagonalTransformsBoolHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4763b88 (    0x30) sAdaptationConTransAccMinAccumFramesIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4763bb8 (    0x30) sAdaptationConTransAccMaxNumTransformsIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4763be8 (    0x30) sAdaptationConTransAccOnlineNumTransformsMinIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4763c18 (    0x30) sAdaptationConTransAccOnlineNumTransformsRangeIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4763c48 (    0x30) sAdaptationConTransAccOnlineCommitIntervalUttsIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4763c78 (    0x30) sAdaptationConTransAccOnlineCommitIntervalSecondsIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4763ca8 (    0x30) sAdaptationConTransAccSilenceToSpeechWeightIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4763cd8 (    0x30) sAdaptationDTMMIntruderMinMicrosecondsIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4763d08 (    0x30) sAdaptationDTMMNumIterationsIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4763d38 (    0x30) sAdaptationBaumWelchMaxUttSecondsIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4763d68 (    0x50) sAdaptationBaumWelchScaleDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4763db8 (    0x30) sAdaptationBaumWelchThreshScoreIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4763de8 (    0x30) sAdaptationConTransAccOnlineDecayIntervalIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4763e18 (    0x50) sAdaptationConTransAccOnlineDecayFactorDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4763e68 (    0x18) sAdaptationConTransAccOnlineIncludeCurrentTransformBoolHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4763e80 (    0x30) sAdaptationConTransAccNumIterationsIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4763eb0 (    0x30) sAdaptationConTransAccGlobalSmoothingMinAccumFramesIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4763ee0 (    0x30) sAdaptationConTransAccGlobalSmoothingRelevanceIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4763f10 (    0x50) sAdaptationConTransAccComponentBackoffPercentDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4763f60 (    0x50) sAdaptationConTransAccMaxTotalComponentProbabilityDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4763fb0 (    0x30) sAdaptationConTransAccRootGenoneClassMinFrameCountIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4763fe0 (    0x30) sAdaptationConTransAccGenoneClassMinFrameCountIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4764010 (    0x30) sAdaptationTransAccGlobalSmoothingMinAccumFramesIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4764040 (    0x30) sAdaptationTransAccGlobalSmoothingRelevanceIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4764070 (    0x30) sAdaptationTransAccMaxNumTransformsIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b47640a0 (    0x30) sAdaptationTransAccMinAccumFramesIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b47640d0 (    0x50) sAdaptationTransAccComponentBackoffPercentDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4764120 (    0x30) sAdaptationTransAccGenoneClassMinFrameCountIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4764150 (    0x50) sAdaptationTransAccMaxTotalComponentProbabilityDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b47641a0 (    0x30) sAdaptationTransAccRelevanceIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b47641d0 (    0x30) sAdaptationTransAccNumIterationsIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4764200 (    0x30) sAdaptationBasisMeanRelevanceIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4764230 (    0x30) sAdaptationBasisDevRelevanceIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4764260 (    0x30) sAdaptationLogWeightRelevanceIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4764290 (    0x30) sAdaptationMaxLogWeightIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b47642c0 (    0x30) sAdaptationDurationRelevanceIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b47642f0 (    0x50) sAdaptationDTMMScoreScaleDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4764340 (    0x50) sAdaptationDTMMNormalizedDeltaRangeDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4764390 (    0x50) sAdaptationDTMMNormalizedDeltaMinDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b47643e0 (    0x30) sAdaptationDTMMUniqMaxDeltaMicrosecondsIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4764410 (    0x30) sAdaptationDTMMMaxIntrudersPerStartTimeSegmentIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4764440 (    0x30) sAdaptationDTMMStartTimeSegmentMaxDeltaMicrosecondsIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4764470 (    0x50) sAdaptationDTMMMeanGradientWeightDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b47644c0 (    0x50) sAdaptationDTMMDevGradientWeightDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4764510 (    0x50) sAdaptationDTMMPositiveGradientWeightDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4764560 (    0x50) sAdaptationDTMMNegativeGradientWeightDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b47645b0 (    0x50) sAdaptationDTMMMinPositiveCountDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4764600 (    0x50) sAdaptationDTMMMinNegativeCountDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4764650 (    0x50) sAdaptationDTMMMinTotalCountDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b47646a0 (    0x18) sAdaptationDTMMSmoothGradientsBoolHistory [NameNList, MangledNameNList, NList] 
                0x00000001b47646b8 (    0x30) sAdaptationDTMMSmoothRelevanceIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b47646e8 (    0x50) sAdaptationDTMMErrorBetaDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4764738 (    0x50) sAdaptationDTMMErrorOffsetDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4764788 (    0x30) sAdaptationDTMMMaxIntruderCountIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b47647b8 (    0x24) sAdaptationConTransAccComputeExtraGlobalTransformBoolHistory [NameNList, MangledNameNList, NList] 
                0x00000001b47647dc (    0x18) sAdaptationConTransAccComputeHierScorerTransformsBoolHistory [NameNList, MangledNameNList, NList] 
                0x00000001b47647f4 (    0x18) sAdaptationConTransAccEconomizeCofactorComputationBoolHistory [NameNList, MangledNameNList, NList] 
                0x00000001b476480c (    0x48) sAdaptationConTransAccRidgeRegularizationFactorIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4764854 (    0x30) sAdaptationConTransAccDecomposedAccumCutoffPercentIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4764884 (   0x30c) typeinfo name for AdapterParamSet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4764b90 (    0xf4) romanToArabic(wchar_t const*, unsigned long&)::pNums [NameNList, MangledNameNList, NList] 
                0x00000001b4764c84 (    0x1d) errStr_recogctl_recogctl_E_INCOMPATIBLE_BOOL_PARAMS [NameNList, MangledNameNList, NList] 
                0x00000001b4764ca1 (     0x7) errStr_recogctl_recogctl_E_FST_UNSUPPORTED_FEATURE [NameNList, MangledNameNList, NList] 
                0x00000001b4764ca8 (    0x10) errStr_recogctl_recogctl_E_INT_LAYER_INCONSISTENCY [NameNList, MangledNameNList, NList] 
                0x00000001b4764cb8 (    0x18) errStr_recogctl_recogctl_E_BOOL_LAYER_INCONSISTENCY [NameNList, MangledNameNList, NList] 
                0x00000001b4764cd0 (    0x10) errStr_recogctl_recogctl_E_ENUM_LAYER_INCONSISTENCY [NameNList, MangledNameNList, NList] 
                0x00000001b4764ce0 (    0x18) errStr_recogctl_recogctl_E_STRING_LAYER_INCONSISTENCY [NameNList, MangledNameNList, NList] 
                0x00000001b4764cf8 (    0x10) errStr_recogctl_recogctl_E_DOUBLE_LAYER_INCONSISTENCY [NameNList, MangledNameNList, NList] 
                0x00000001b4764d08 (     0x1) errStr_recogctl_recogctl_E_ONLINE_CONSTRAINED_TRANSACC_INVALID_WITH_FST [NameNList, MangledNameNList, NList] 
                0x00000001b4764d09 (     0x1) errStr_recogctl_recogctl_E_ONLINE_CONSTRAINED_TRANSACC_INVALID_WITH_FEATURES [NameNList, MangledNameNList, NList] 
                0x00000001b4764d0a (     0x1) errStr_recogctl_recogctl_E_DISALLOWED_DECAY_FACTOR [NameNList, MangledNameNList, NList] 
                0x00000001b4764d0b (     0x1) errStr_recogctl_recogctl_E_DISALLOWED_REPEAT_FRAME_WITH_NO_DECIMATION [NameNList, MangledNameNList, NList] 
                0x00000001b4764d0c (     0x1) errStr_recogctl_recogctl_E_MISMATCHED_DECIMATION [NameNList, MangledNameNList, NList] 
                0x00000001b4764d0d (     0x1) errStr_recogctl_recogctl_E_PREFILTERRESULT_INCOMPATIBLE_WITH_UTT [NameNList, MangledNameNList, NList] 
                0x00000001b4764d0e (    0x12) typeinfo name for RecogController [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4764d20 (    0x16) typeinfo name for RecogControllerBase [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4764d36 (    0x48) typeinfo name for Hash<EmbStateSpec, EmbStateSpec, EmbStateSpecToActiveWordScope, ActiveWord*> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4764d7e (     0x3) errStr_fst_arcgraph_E_INVALID_WORDID [NameNList, MangledNameNList, NList] 
                0x00000001b4764d81 (     0x3) errStr_fst_arcgraph_E_INVALID_WORDID_TEXT [NameNList, MangledNameNList, NList] 
                0x00000001b4764d84 (     0x7) errStr_fst_arcgraph_E_ARCGRAPH_HEADER_MISSING [NameNList, MangledNameNList, NList] 
                0x00000001b4764d8b (    0x15) errStr_voc_vocutil_E_BAD_WORD [NameNList, MangledNameNList, NList] 
                0x00000001b4764da0 (     0xe) errStr_voc_vocutil_E_NO_WORD_NAME [NameNList, MangledNameNList, NList] 
                0x00000001b4764dae (    0x15) errStr_voc_vocutil_E_NO_SUCH_WORD [NameNList, MangledNameNList, NList] 
                0x00000001b4764dc3 (     0xe) errStr_voc_vocutil_E_BAD_VOC_NAME [NameNList, MangledNameNList, NList] 
                0x00000001b4764dd1 (    0x11) typeinfo name for PhonemeLattice [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4764de2 (   0x90a) typeinfo name for Lattice<PhonemeLatticeLC> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b47656ec (     0xf) typeinfo name for TCliticsProc [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b47656fb (    0x17) typeinfo name for TCliticsParamManager [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4765712 (    0x11) errStr_dfutil_dfile_E_BADHEADER [NameNList, MangledNameNList, NList] 
                0x00000001b4765723 (     0xe) errStr_dfutil_dfile_E_OLDHEADER [NameNList, MangledNameNList, NList] 
                0x00000001b4765731 (    0x1a) errStr_dfutil_dfile_E_OLDVERSION [NameNList, MangledNameNList, NList] 
                0x00000001b476574b (    0x1a) errStr_dfutil_dfile_E_NEWVERSION [NameNList, MangledNameNList, NList] 
                0x00000001b4765765 (    0x1b) errStr_dfutil_dfile_E_BADVERSION_SHMEM [NameNList, MangledNameNList, NList] 
                0x00000001b4765780 (     0x7) errStr_dfutil_dfile_E_NOTFOUND [NameNList, MangledNameNList, NList] 
                0x00000001b4765787 (     0x7) errStr_dfutil_dfile_E_READWRITE_LISTDFILE [NameNList, MangledNameNList, NList] 
                0x00000001b476578e (     0x7) errStr_dfutil_dfile_E_NOTDFILE [NameNList, MangledNameNList, NList] 
                0x00000001b4765795 (     0xa) typeinfo name for DFile [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b476579f (   0x12d) errStr_voc_vocmgr_E_BADVOCID [NameNList, MangledNameNList, NList] 
                0x00000001b47658cc (     0x8) errStr_lm_lm_E_FUNCTION_NOT_SUPPORTED [NameNList, MangledNameNList, NList] 
                0x00000001b47658d4 (    0x10) typeinfo name for LanguageModel [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b47658e4 (     0x1) errStr_lm_lm_E_RECENT_WITHOUT_LM [NameNList, MangledNameNList, NList] 
                0x00000001b47658e5 (     0x1) errStr_lm_lm_E_CANT_LOAD_WORDDUMMY [NameNList, MangledNameNList, NList] 
                0x00000001b47658e6 (     0x1) errStr_lm_lm_E_MULTIPLE_SPEC_SUBFILES [NameNList, MangledNameNList, NList] 
                0x00000001b47658e7 (    0x19) errStr_lm_lm_E_MISSING_LM [NameNList, MangledNameNList, NList] 
                0x00000001b4765900 (     0xe) errStr_dfutil_realdf_E_COMPRESSED_STREAM_OVERFLOW [NameNList, MangledNameNList, NList] 
                0x00000001b476590e (     0xe) errStr_dfutil_realdf_E_BAD_COMPRESSED_HEADER [NameNList, MangledNameNList, NList] 
                0x00000001b476591c (    0x14) errStr_dfutil_realdf_E_BAD_CRC [NameNList, MangledNameNList, NList] 
                0x00000001b4765930 (    0x16) errStr_dfutil_realdf_E_BAD_TOTAL_OUT [NameNList, MangledNameNList, NList] 
                0x00000001b4765946 (    0x11) errStr_dfutil_realdf_E_INFLATE_FAILED [NameNList, MangledNameNList, NList] 
                0x00000001b4765957 (     0xe) errStr_dfutil_realdf_E_INFLATE_UNEXPECTED_EOF [NameNList, MangledNameNList, NList] 
                0x00000001b4765965 (    0x12) errStr_dfutil_realdf_E_DEFLATE_FAILED [NameNList, MangledNameNList, NList] 
                0x00000001b4765977 (     0xe) errStr_dfutil_realdf_E_LATE_SEEK [NameNList, MangledNameNList, NList] 
                0x00000001b4765985 (    0x18) errStr_dfutil_realdf_E_SEEK_TOO_FAR [NameNList, MangledNameNList, NList] 
                0x00000001b476599d (    0x14) errStr_dfutil_realdf_E_UNEXPECTED_EOF [NameNList, MangledNameNList, NList] 
                0x00000001b47659b1 (     0x7) errStr_dfutil_realdf_E_CANT_OPEN_OR_CREATE [NameNList, MangledNameNList, NList] 
                0x00000001b47659b8 (     0x7) errStr_dfutil_realdf_E_NOWRITE [NameNList, MangledNameNList, NList] 
                0x00000001b47659bf (     0xd) errStr_dfutil_realdf_E_OLDDFILE [NameNList, MangledNameNList, NList] 
                0x00000001b47659cc (     0x7) errStr_dfutil_realdf_E_CANT_OPEN_NON_DFILE [NameNList, MangledNameNList, NList] 
                0x00000001b47659d3 (     0x7) errStr_dfutil_realdf_E_CANT_WRITE_READ_ONLY [NameNList, MangledNameNList, NList] 
                0x00000001b47659da (    0x14) errStr_dfutil_realdf_E_BADSIZE [NameNList, MangledNameNList, NList] 
                0x00000001b47659ee (     0x7) errStr_dfutil_realdf_E_EMPTY_SUBFILENAME [NameNList, MangledNameNList, NList] 
                0x00000001b47659f5 (     0xe) errStr_dfutil_realdf_E_SUBFILE_NOT_FOUND [NameNList, MangledNameNList, NList] 
                0x00000001b4765a03 (     0xe) errStr_dfutil_realdf_E_SUBFILENAME_TOO_LONG [NameNList, MangledNameNList, NList] 
                0x00000001b4765a11 (    0x11) errStr_dfutil_realdf_E_BAD_ISCOMPRESSED [NameNList, MangledNameNList, NList] 
                0x00000001b4765a22 (    0x11) errStr_dfutil_realdf_E_BAD_COMPRESSIONTYPE [NameNList, MangledNameNList, NList] 
                0x00000001b4765a33 (     0xe) errStr_dfutil_realdf_E_REDUNDANTLY_OPENED_SUBFILE [NameNList, MangledNameNList, NList] 
                0x00000001b4765a41 (    0x11) errStr_dfutil_realdf_E_BAD_COMPRESSED_OPEN_MODE [NameNList, MangledNameNList, NList] 
                0x00000001b4765a52 (     0x7) errStr_dfutil_realdf_E_SUBEXISTS [NameNList, MangledNameNList, NList] 
                0x00000001b4765a59 (    0x15) errStr_dfutil_realdf_E_SUPERFLUOUS_SUBFILE [NameNList, MangledNameNList, NList] 
                0x00000001b4765a6e (     0xa) errStr_dfutil_realdf_E_BADVER3 [NameNList, MangledNameNList, NList] 
                0x00000001b4765a78 (    0x11) errStr_dfutil_realdf_E_BADVER4 [NameNList, MangledNameNList, NList] 
                0x00000001b4765a89 (     0xd) errStr_dfutil_realdf_E_BADVER2 [NameNList, MangledNameNList, NList] 
                0x00000001b4765a96 (     0x7) errStr_dfutil_realdf_E_BIGENDIAN_DFILE [NameNList, MangledNameNList, NList] 
                0x00000001b4765a9d (     0xe) errStr_dfutil_realdf_E_BADENDIANFIELDS [NameNList, MangledNameNList, NList] 
                0x00000001b4765aab (     0xa) errStr_dfutil_realdf_E_BADVER5 [NameNList, MangledNameNList, NList] 
                0x00000001b4765ab5 (     0x7) errStr_dfutil_realdf_E_NOCLEANWRITE [NameNList, MangledNameNList, NList] 
                0x00000001b4765abc (    0x11) errStr_dfutil_realdf_E_REALLYUNCLEANWRITE [NameNList, MangledNameNList, NList] 
                0x00000001b4765acd (    0x1b) errStr_dfutil_realdf_E_MISMATCHEDSEMANTICTYPE [NameNList, MangledNameNList, NList] 
                0x00000001b4765ae8 (    0x11) errStr_dfutil_realdf_E_BAD_FILE_WITH_KNOWN_SEMANTIC_TYPE [NameNList, MangledNameNList, NList] 
                0x00000001b4765af9 (    0x1f) errStr_dfutil_realdf_E_OLD_FORK_1_19_110_FILE_WITH_KNOWN_SEMANTIC_TYPE [NameNList, MangledNameNList, NList] 
                0x00000001b4765b18 (    0x1f) errStr_dfutil_realdf_E_OLD_FILE_WITH_KNOWN_SEMANTIC_TYPE [NameNList, MangledNameNList, NList] 
                0x00000001b4765b37 (    0x1f) errStr_dfutil_realdf_E_NEW_FILE_WITH_KNOWN_SEMANTIC_TYPE [NameNList, MangledNameNList, NList] 
                0x00000001b4765b56 (    0x11) errStr_dfutil_realdf_E_BLOCKUSAGE_BLOCKUSED_CORRUPT [NameNList, MangledNameNList, NList] 
                0x00000001b4765b67 (    0x17) errStr_dfutil_realdf_E_BADUSAGEINFO [NameNList, MangledNameNList, NList] 
                0x00000001b4765b7e (    0x17) errStr_dfutil_realdf_E_BADFIRSTUSEDBLOCK [NameNList, MangledNameNList, NList] 
                0x00000001b4765b95 (    0x17) errStr_dfutil_realdf_E_BADFIRSTMAPPEDBLOCK [NameNList, MangledNameNList, NList] 
                0x00000001b4765bac (    0x17) errStr_dfutil_realdf_E_BADLASTUSEDBLOCK [NameNList, MangledNameNList, NList] 
                0x00000001b4765bc3 (    0x17) errStr_dfutil_realdf_E_NUMBLOCKSDISAGREE [NameNList, MangledNameNList, NList] 
                0x00000001b4765bda (    0x17) errStr_dfutil_realdf_E_LASTBLOCKSDISAGREE [NameNList, MangledNameNList, NList] 
                0x00000001b4765bf1 (    0x11) errStr_dfutil_realdf_E_DIRENTRY_CORRUPT [NameNList, MangledNameNList, NList] 
                0x00000001b4765c02 (    0x11) errStr_dfutil_realdf_E_BLOCKUSAGE_CORRUPT [NameNList, MangledNameNList, NList] 
                0x00000001b4765c13 (     0xd) errStr_dfutil_realdf_E_INCONSISTENT_BLOCKCOUNT [NameNList, MangledNameNList, NList] 
                0x00000001b4765c20 (    0x11) errStr_dfutil_realdf_E_GENERIC_UNEXPECTED_EOF [NameNList, MangledNameNList, NList] 
                0x00000001b4765c31 (     0x7) errStr_dfutil_realdf_E_TOOMANYSUBFILES [NameNList, MangledNameNList, NList] 
                0x00000001b4765c38 (     0x7) errStr_dfutil_realdf_E_TOOMUCHDATA [NameNList, MangledNameNList, NList] 
                0x00000001b4765c3f (    0x18) errStr_dfutil_realdf_E_BAD_HEADER_TOTAL_OUT [NameNList, MangledNameNList, NList] 
                0x00000001b4765c57 (    0x14) errStr_dfutil_realdf_E_BAD_HEADER_CRC [NameNList, MangledNameNList, NList] 
                0x00000001b4765c6b (    0x19) typeinfo name for RealDFileSubFileStream [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4765c84 (     0xb) typeinfo name for RealDFile [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4765c8f (     0xa) errStr_dfutil_realdf_E_READHEADER_BAD_TELL [NameNList, MangledNameNList, NList] 
                0x00000001b4765c99 (     0xa) errStr_dfutil_realdf_E_WRITEHEADER_BAD_TELL [NameNList, MangledNameNList, NList] 
                0x00000001b4765ca3 (     0x9) typeinfo name for SyncNet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4765cac (    0x14) typeinfo name for BaseSyncNet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4765cc0 (   0x5e8) sPLT_Versions [NameNList, MangledNameNList, NList] 
                0x00000001b47662a8 (   0xdc8) typeinfo name for TWideChartSeeder [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4767070 (    0x1c) TCompounder::compoundNordic(std::__1::vector<std::__1::pair<TWord const*, unsigned int>, std::__1::allocator<std::__1::pair<TWord const*, unsigned int>>> const&, std::__1::vector<std::__1::pair<TWord const*, unsigned long>, std::__1::allocator<std::__1::pair<TWord const*, unsigned long>>> const&, unsigned long, unsigned long, TCompounder::TLanguage)::pszVowels [NameNList, MangledNameNList, NList] 
                0x00000001b476708c (   0x6bc) TCompounder::compoundNordic(std::__1::vector<std::__1::pair<TWord const*, unsigned int>, std::__1::allocator<std::__1::pair<TWord const*, unsigned int>>> const&, std::__1::vector<std::__1::pair<TWord const*, unsigned long>, std::__1::allocator<std::__1::pair<TWord const*, unsigned long>>> const&, unsigned long, unsigned long, TCompounder::TLanguage)::pszVowelsDutch [NameNList, MangledNameNList, NList] 
                0x00000001b4767748 (     0xe) typeinfo name for TCompounder [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4767756 (    0x1a) typeinfo name for TCompounderParamManager [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4767770 (    0x28) typeinfo name for TLattProcParamManager [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4767798 (     0x4) std::__1::piecewise_construct [NameNList, MangledNameNList, NList] 
                0x00000001b476779c (     0x6) errStr_fileutil_envmgr_E_TOO_MUCH_STRING_DATA [NameNList, MangledNameNList, NList] 
                0x00000001b47677a2 (    0x16) errStr_fileutil_envmgr_E_MISMATCHEDSEMANTICTYPE [NameNList, MangledNameNList, NList] 
                0x00000001b47677b8 (    0x10) sENS_Versions [NameNList, MangledNameNList, NList] 
                0x00000001b47677c8 (     0x3) errStr_fileutil_envmgr_E_ENS_NOT_TWO_FIELD_SPECS [NameNList, MangledNameNList, NList] 
                0x00000001b47677cb (     0xe) errStr_fileutil_envmgr_E_ENS_BAD_FIELD_SPEC [NameNList, MangledNameNList, NList] 
                0x00000001b47677d9 (     0xe) errStr_fileutil_envmgr_E_ENS_BAD_FIELD_FORMAT [NameNList, MangledNameNList, NList] 
                0x00000001b47677e7 (     0x2) errStr_fileutil_envmgr_E_EMPTY_VARIABLE_VALUE [NameNList, MangledNameNList, NList] 
                0x00000001b47677e9 (     0x3) errStr_fileutil_envmgr_E_INVALID_ENVID [NameNList, MangledNameNList, NList] 
                0x00000001b47677ec (     0x1) errStr_fileutil_envmgr_E_TOO_MANY [NameNList, MangledNameNList, NList] 
                0x00000001b47677ed (     0x7) errStr_fileutil_envmgr_E_REDUNDANT_VARIABLE_NAME [NameNList, MangledNameNList, NList] 
                0x00000001b47677f4 (     0xc) errStr_word_pcollmgr_E_COMPLEX_MAP [NameNList, MangledNameNList, NList] 
                0x00000001b4767800 (    0x10) sPCT_Versions [NameNList, MangledNameNList, NList] 
                0x00000001b4767810 (     0xe) errStr_word_pcollmgr_E_BAD_FIELD_SPEC [NameNList, MangledNameNList, NList] 
                0x00000001b476781e (     0xe) errStr_word_pcollmgr_E_BAD_FIELD_FORMAT [NameNList, MangledNameNList, NList] 
                0x00000001b476782c (     0x7) errStr_word_pcollmgr_E_MISSING_HUMAN_READABLE [NameNList, MangledNameNList, NList] 
                0x00000001b4767833 (     0x2) errStr_word_pcollmgr_E_LOADING_MIXED_TEXT_AND_BINARY_SUBFILES [NameNList, MangledNameNList, NList] 
                0x00000001b4767835 (     0x3) errStr_mrecutil_paramspec_E_INVALID_HANDLE [NameNList, MangledNameNList, NList] 
                0x00000001b4767838 (     0xb) typeinfo name for ParamSpec [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4767843 (     0x3) errStr_mrecutil_paramspec_E_TYPE [NameNList, MangledNameNList, NList] 
                0x00000001b4767846 (     0x7) errStr_mrecutil_paramspec_E_BOUNDS_EXCEEDED [NameNList, MangledNameNList, NList] 
                0x00000001b476784d (     0xe) errStr_mrecutil_paramspec_E_BAD_ENUM [NameNList, MangledNameNList, NList] 
                0x00000001b476785b (     0xf) typeinfo name for IntParamSpec [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b476786a (    0x10) typeinfo name for EnumParamSpec [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b476787a (    0x10) typeinfo name for BoolParamSpec [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b476788a (    0x12) typeinfo name for DoubleParamSpec [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b476789c (    0x30) typeinfo name for StringParamSpec [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b47678cc (    0x18) sRBT_Versions [NameNList, MangledNameNList, NList] 
                0x00000001b47678e4 (     0x1) errStr_lm_recentb_E_RBT_BAD_RECENTBUFFERLENGTH [NameNList, MangledNameNList, NList] 
                0x00000001b47678e5 (     0xe) errStr_lm_recentb_E_RBT_BAD_FIELD_SPEC [NameNList, MangledNameNList, NList] 
                0x00000001b47678f3 (     0xe) errStr_lm_recentb_E_RBT_BAD_FIELD_FORMAT [NameNList, MangledNameNList, NList] 
                0x00000001b4767901 (     0x7) errStr_lm_recentb_E_RBT_BAD_LINE [NameNList, MangledNameNList, NList] 
                0x00000001b4767908 (     0x1) errStr_lm_recentb_E_UNI_BI_MISMATCH [NameNList, MangledNameNList, NList] 
                0x00000001b4767909 (     0x3) errStr_lm_recentb_E_RBT_BAD_NUMFIELDS [NameNList, MangledNameNList, NList] 
                0x00000001b476790c (    0x18) sRBS_Versions [NameNList, MangledNameNList, NList] 
                0x00000001b4767924 (     0x1) errStr_lm_recentb_E_LOADING_MIXED_TEXT_AND_BINARY_SUBFILES [NameNList, MangledNameNList, NList] 
                0x00000001b4767925 (     0x1) errStr_lm_recentb_E_RBS_RBB_MISMATCH [NameNList, MangledNameNList, NList] 
                0x00000001b4767926 (     0x1) errStr_lm_recentb_E_RBT_WITH_BINARY_RB_FILE [NameNList, MangledNameNList, NList] 
                0x00000001b4767927 (     0x1) errStr_lm_recentb_E_CANT_LOAD_TEXT_RECENT_BUFFER [NameNList, MangledNameNList, NList] 
                0x00000001b4767928 (     0xa) errStr_lm_recentb_E_ILLEGAL_WEIGHT [NameNList, MangledNameNList, NList] 
                0x00000001b4767932 (     0x3) errStr_lm_recentb_E_CONTRADICTORY_UNIGRAM_WEIGHT [NameNList, MangledNameNList, NList] 
                0x00000001b4767935 (     0x3) errStr_lm_recentb_E_COMMON_WORDS_FIX_CONFLICT [NameNList, MangledNameNList, NList] 
                0x00000001b4767938 (    0x18) typeinfo name for Hash<unsigned int, unsigned int, WordIdScope, unsigned int> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4767950 (    0x28) typeinfo name for Hash<WordIdPair, WordIdPair, WordIdPair, unsigned int> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4767978 (    0x10) sSCT_Versions [NameNList, MangledNameNList, NList] 
                0x00000001b4767988 (    0x39) sSCM_Versions [NameNList, MangledNameNList, NList] 
                0x00000001b47679c1 (    0x14) typeinfo name for BaseWordLatticeLC [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b47679d5 (    0x10) typeinfo name for WordLatticeLC [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b47679e5 (    0x11) typeinfo name for InputLatticeLC [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b47679f6 (     0xe) typeinfo name for WordLattice [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4767a04 (    0x2c) typeinfo name for Hash<StateIdPair, StateIdPair, StateIdPair, ParseTokenRange> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4767a30 (     0x8) typeinfo name for HmmNet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4767a38 (     0x6) errStr_voc_vgroupi_E_COUNT [NameNList, MangledNameNList, NList] 
                0x00000001b4767a3e (     0x9) typeinfo name for NodeNet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4767a47 (    0x31) typeinfo name for TraceNodeNet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4767a78 (     0xb) typeinfo name for PelScorer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4767a83 (    0x33) typeinfo name for OnDemandPelScorer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4767ab6 (    0x11) typeinfo name for IntGlobalParam [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4767ac7 (     0xf) typeinfo name for TDataManager [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4767ad6 (    0x42) std::__1::piecewise_construct [NameNList, MangledNameNList, NList] 
                0x00000001b4767b18 (     0x1) std::__1::piecewise_construct [NameNList, MangledNameNList, NList] 
                0x00000001b4767b19 (     0x3) errStr_sigproc_ltf_E_INCORRECT_INTSCALE [NameNList, MangledNameNList, NList] 
                0x00000001b4767b1c (     0xd) errStr_sigproc_ltf_E_BAD_MATRIX_DIM [NameNList, MangledNameNList, NList] 
                0x00000001b4767b29 (     0x6) errStr_sigproc_ltf_E_BAD_TRANS_DIM [NameNList, MangledNameNList, NList] 
                0x00000001b4767b2f (     0x9) errStr_sigproc_ltf_E_MATRIX_RANGE [NameNList, MangledNameNList, NList] 
                0x00000001b4767b38 (     0x8) errStr_sigproc_ltf_E_TRANSFORM_IN [NameNList, MangledNameNList, NList] 
                0x00000001b4767b40 (     0xa) errStr_recogctl_model_E_DSMOBJECT_TIMEOUT [NameNList, MangledNameNList, NList] 
                0x00000001b4767b4a (     0x3) errStr_recogctl_model_E_BADUSERID [NameNList, MangledNameNList, NList] 
                0x00000001b4767b4d (     0x1) errStr_recogctl_model_E_TOO_MANY_VOCS [NameNList, MangledNameNList, NList] 
                0x00000001b4767b4e (     0x7) errStr_recogctl_model_E_EXTRA_SUBFILES [NameNList, MangledNameNList, NList] 
                0x00000001b4767b55 (     0xa) errStr_recogctl_model_E_SUBFILE_ABSENT [NameNList, MangledNameNList, NList] 
                0x00000001b4767b5f (    0x14) errStr_recogctl_model_E_CHECKSUM [NameNList, MangledNameNList, NList] 
                0x00000001b4767b73 (     0x1) errStr_recogctl_model_E_REPRO_REF_PRESENT [NameNList, MangledNameNList, NList] 
                0x00000001b4767b74 (     0x3) warnStr_recogctl_model_E_VOCFREE_WITH_UNLOADEDLM [NameNList, MangledNameNList, NList] 
                0x00000001b4767b77 (     0x3) errStr_recogctl_model_E_VOC_HAS_PREFILTERER [NameNList, MangledNameNList, NList] 
                0x00000001b4767b7a (     0x6) errStr_recogctl_model_E_PREFILTERER_REFERS_TO_VOC [NameNList, MangledNameNList, NList] 
                0x00000001b4767b80 (     0x1) errStr_recogctl_model_E_SAVE_SVC_AS_TEXT [NameNList, MangledNameNList, NList] 
                0x00000001b4767b81 (     0x3) errStr_recogctl_model_E_VOC_NOT_REABSORBED [NameNList, MangledNameNList, NList] 
                0x00000001b4767b84 (     0x3) errStr_recogctl_model_E_BADVOCID [NameNList, MangledNameNList, NList] 
                0x00000001b4767b87 (     0x1) errStr_recogctl_model_E_BAD_WORD_NAME [NameNList, MangledNameNList, NList] 
                0x00000001b4767b88 (     0xd) errStr_recogctl_model_E_NON_FACTORY_CLONE_FROM_WORD [NameNList, MangledNameNList, NList] 
                0x00000001b4767b95 (     0x2) errStr_recogctl_model_E_DELETE_WORD_REPRO_REF_PRESENT [NameNList, MangledNameNList, NList] 
                0x00000001b4767b97 (     0xf) typeinfo name for BaumWelchNet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4767ba6 (    0x1a) typeinfo name for BaumWelchReverseNet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4767bc0 (    0x50) sSausageGenerationPruneGlobalThreshDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4767c10 (    0x50) sSausageGenerationMinEpsilonPostProbDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4767c60 (    0x30) sSausageGenerationAbortOnNumLatticeLinksIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4767c90 (    0x18) sSausageGenerationNewAlgorithmBoolHistory [NameNList, MangledNameNList, NList] 
                0x00000001b4767ca8 (    0x12) typeinfo name for SausageParamSet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b4767cba (     0x7) errStr_dfutil_dfstream_E_CANT_OPEN [NameNList, MangledNameNList, NList] 
                0x00000001b4767cc1 (    0x18) errStr_dfutil_dfstream_E_OPERATION_FAILED_0 [NameNList, MangledNameNList, NList] 
                0x00000001b4767cd9 (     0x8) errStr_dfutil_dfstream_E_CANT_CLOSE [NameNList, MangledNameNList, NList] 
                0x00000001b4767ce1 (     0x1) errStr_dfutil_dfstream_E_STREAM_OVERFLOW [NameNList, MangledNameNList, NList] 
                0x00000001b4767ce2 (     0x7) errStr_dfutil_dfstream_E_NO_READ [NameNList, MangledNameNList, NList] 
                0x00000001b4767ce9 (    0x11) errStr_dfutil_dfstream_E_UNEXPECTED_EOF [NameNList, MangledNameNList, NList] 
                0x00000001b4767cfa (     0x7) errStr_dfutil_dfstream_E_NO_WRITE [NameNList, MangledNameNList, NList] 
                0x00000001b4767d01 (     0x7) errStr_dfutil_dfstream_E_WRITE_NO_FILE_POINTER [NameNList, MangledNameNList, NList] 
                0x00000001b4767d08 (     0x7) errStr_dfutil_dfstream_E_WRITE_ERROR [NameNList, MangledNameNList, NList] 
                0x00000001b4767d0f (     0x7) errStr_dfutil_dfstream_E_CANT_FLUSH [NameNList, MangledNameNList, NList] 
                0x00000001b4767d16 (     0x7) errStr_dfutil_dfstream_E_TELL_NO_FILE_POINTER [NameNList, MangledNameNList, NList] 
                0x00000001b4767d1d (     0x7) errStr_dfutil_dfstream_E_TELL_FAILED [NameNList, MangledNameNList, NList] 
                0x00000001b4767d24 (     0x7) errStr_dfutil_dfstream_E_READ_NO_FILE_POINTER [NameNList, MangledNameNList, NList] 
                0x00000001b4767d2b (     0xc) errStr_dfutil_dfstream_E_READ_ERROR [NameNList, MangledNameNList, NList] 
                0x00000001b4767d37 (  0x7851) typeinfo name for DgnFileStream [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b476f588 (    0x14) typeinfo name for TItnParamManager [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b476f59c (    0x44) typeinfo name for HashKEVTLT<unsigned int, History const*, HistoryMgr> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b476f5e0 (    0x1a) typeinfo name for CWIDACRecogGermIterator [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b476f5fa (    0x16) typeinfo name for Hash<CWIDAC, CWIDAC, CWIDAC, unsigned int> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b476f610 (    0x10) sTCO_Versions [NameNList, MangledNameNList, NList] 
                0x00000001b476f620 (     0xe) errStr_word_collmgr_E_COLL_BAD_FIELD_SPEC [NameNList, MangledNameNList, NList] 
                0x00000001b476f62e (     0xe) errStr_word_collmgr_E_COLL_BAD_FIELD_FORMAT [NameNList, MangledNameNList, NList] 
                0x00000001b476f63c (     0x7) errStr_word_collmgr_E_COLL_BAD_LINE [NameNList, MangledNameNList, NList] 
                0x00000001b476f643 (     0x2) errStr_word_collmgr_E_LOADING_MIXED_TEXT_AND_BINARY_SUBFILES [NameNList, MangledNameNList, NList] 
                0x00000001b476f645 (     0x7) errStr_word_collmgr_E_BAD_COLLATION_NAME [NameNList, MangledNameNList, NList] 
                0x00000001b476f64c (     0x7) errStr_word_collmgr_E_DUPLICATE_COLLATION_NAME [NameNList, MangledNameNList, NList] 
                0x00000001b476f653 (     0x1) errStr_word_collmgr_E_COLLATION_BAD_TYPE [NameNList, MangledNameNList, NList] 
                0x00000001b476f654 (     0x3) errStr_word_collmgr_E_ONETOONE_MAP_BAD_COUNT [NameNList, MangledNameNList, NList] 
                0x00000001b476f657 (     0x7) errStr_word_collmgr_E_CHAR_IN [NameNList, MangledNameNList, NList] 
                0x00000001b476f65e (     0x7) errStr_word_collmgr_E_CHAR_PAIR_IN [NameNList, MangledNameNList, NList] 
                0x00000001b476f665 (     0x1) errStr_word_collmgr_E_FROM_OR_TO_IS_ZERO [NameNList, MangledNameNList, NList] 
                0x00000001b476f666 (     0x3) errStr_word_collmgr_E_TO_AS_FROM [NameNList, MangledNameNList, NList] 
                0x00000001b476f669 (     0x3) errStr_word_collmgr_E_ONETOONE_NOT_ZERO [NameNList, MangledNameNList, NList] 
                0x00000001b476f66c (     0x3) errStr_word_collmgr_E_ONETOONE_IS_ZERO [NameNList, MangledNameNList, NList] 
                0x00000001b476f66f (     0x1) errStr_word_collmgr_E_TOO_MANY [NameNList, MangledNameNList, NList] 
                0x00000001b476f670 (     0x1) errStr_word_collmgr_E_CANT_USE_NOCOLLATION_AS_TWO_LEVEL_COMPONENT [NameNList, MangledNameNList, NList] 
                0x00000001b476f671 (     0x1) errStr_word_collmgr_E_COLLATION_BAD_USER_DEFINEDNESS [NameNList, MangledNameNList, NList] 
                0x00000001b476f672 (     0x1) errStr_word_collmgr_E_NO_SUCH_COLLATION [NameNList, MangledNameNList, NList] 
                0x00000001b476f673 (    0x1b) errStr_prefilt_treepref_E_MAXENDING [NameNList, MangledNameNList, NList] 
                0x00000001b476f68e (    0x14) errStr_prefilt_treepref_E_MAX_NON_UNIQUE_PRONS [NameNList, MangledNameNList, NList] 
                0x00000001b476f6a2 (    0x12) typeinfo name for TreePrefilterer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b476f6b4 (     0xc) typeinfo name for HashBase [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b476f6c0 (    0x30) sPronGuessLMPerBackoffWordPenaltyIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b476f6f0 (    0x30) sPronGuessMinNewPronLengthIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b476f720 (    0x18) typeinfo name for PronGuessParamSet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b476f738 (    0x10) sOCT_Versions [NameNList, MangledNameNList, NList] 
                0x00000001b476f748 (     0x3) errStr_mrecutil_param_E_INVALID_HANDLE [NameNList, MangledNameNList, NList] 
                0x00000001b476f74b (     0xe) typeinfo name for GlobalParam [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b476f759 (     0x3) errStr_mrecutil_param_E_TYPE [NameNList, MangledNameNList, NList] 
                0x00000001b476f75c (     0x7) errStr_mrecutil_param_E_BOUNDS_EXCEEDED [NameNList, MangledNameNList, NList] 
                0x00000001b476f763 (    0x15) typeinfo name for IntGlobalParamBase [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b476f778 (    0x16) typeinfo name for EnumGlobalParamBase [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b476f78e (    0x16) typeinfo name for BoolGlobalParamBase [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b476f7a4 (    0x18) typeinfo name for DoubleGlobalParamBase [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b476f7bc (    0x1c) typeinfo name for StringGlobalParamBase [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b476f7d8 (    0x50) sPrefiltererPelScoreScaleDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b476f828 (    0x18) sPrefiltererPelScoreUseBestCompScoreBoolHistory [NameNList, MangledNameNList, NList] 
                0x00000001b476f840 (    0x30) sPrefiltererThreshScoreWhenSilenceBestIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b476f870 (    0x30) sPrefiltererThreshScoreIncrementWhenNonSilenceBestIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b476f8a0 (    0x30) sPrefiltererReturnListThreshScoreDecrementIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b476f8d0 (    0x30) sPrefiltererPelBackoffThreshScoreDecrementIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b476f900 (    0x30) sPrefiltererActiveNodeCountLimitIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b476f930 (    0x18) sPrefiltererSeedScoreIncludeWordEndScoreBoolHistory [NameNList, MangledNameNList, NList] 
                0x00000001b476f948 (    0x30) sPrefiltererMaxSeedScoreIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b476f978 (    0x30) sPrefiltererMinNodeScoreIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b476f9a8 (    0x18) sPrefiltererAllowFirstNodeSkippingBoolHistory [NameNList, MangledNameNList, NList] 
                0x00000001b476f9c0 (    0x30) sPrefiltererBestScorePerAdditionalPhonemeScoreIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b476f9f0 (    0x50) sPrefiltererLookaheadSequenceFirstPhonemeLMScaleDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b476fa40 (    0x30) sPrefiltererLookaheadThreshScoreIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b476fa70 (    0x18) sPrefiltererLookaheadApplyOnReseedBoolHistory [NameNList, MangledNameNList, NList] 
                0x00000001b476fa88 (    0x30) sPrefiltererReturnDistanceMaxFramesIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b476fab8 (    0x30) sPrefiltererReturnDistancePerFramePenaltyIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b476fae8 (    0x50) sPrefiltererReturnDistanceWordDurationFactorDoubleHistory [NameNList, MangledNameNList, NList] 
                0x00000001b476fb38 (    0x18) sPrefiltererReturnDistanceAdjustDurationBoolHistory [NameNList, MangledNameNList, NList] 
                0x00000001b476fb50 (    0x30) sPrefiltererReturnListMaxLengthIntHistory [NameNList, MangledNameNList, NList] 
                0x00000001b476fb80 (    0x24) sPrefiltererFmpeWindowTruncateUnavailableFramesBoolHistory [NameNList, MangledNameNList, NList] 
                0x00000001b476fba4 (    0x1c) typeinfo name for PrefiltererSearchParamSet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b476fbc0 (    0x10) typeinfo name for ParamSetBase [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b476fbd0 (    0x38) TCollation::ms_nSize [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b476fc08 (     0x7) errStr_recogctl_trecogctl_E_PARTIALLY_LOADED_STATIC_VOC [NameNList, MangledNameNList, NList] 
                0x00000001b476fc0f (    0x17) typeinfo name for RecogCtlThreadWorker [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b476fc26 (    0x11) typeinfo name for RecogCtlThread [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b476fc37 (    0x23) typeinfo name for DgnThread<RecogCtlThreadWorker> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b476fc5a (    0x1b) typeinfo name for ThreadedRecogController [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b476fc75 (     0xe) typeinfo name for Prefilterer [PEXT, NameNList, MangledNameNList, NList] 
            0x00000001b476fc83 ( 0x17e7c) __TEXT __cstring
            0x00000001b4787b00 ( 0x22234) __TEXT __gcc_except_tab
                0x00000001b4787b00 (    0x14) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x00000001b4787b14 (    0x20) GCC_except_table10 [NameNList, MangledNameNList, NList] 
                0x00000001b4787b34 (    0x10) GCC_except_table13 [NameNList, MangledNameNList, NList] 
                0x00000001b4787b44 (    0x2c) GCC_except_table15 [NameNList, MangledNameNList, NList] 
                0x00000001b4787b70 (    0x14) GCC_except_table18 [NameNList, MangledNameNList, NList] 
                0x00000001b4787b84 (    0x14) GCC_except_table19 [NameNList, MangledNameNList, NList] 
                0x00000001b4787b98 (    0x24) GCC_except_table20 [NameNList, MangledNameNList, NList] 
                0x00000001b4787bbc (    0x14) GCC_except_table21 [NameNList, MangledNameNList, NList] 
                0x00000001b4787bd0 (    0x4c) GCC_except_table24 [NameNList, MangledNameNList, NList] 
                0x00000001b4787c1c (    0x10) GCC_except_table34 [NameNList, MangledNameNList, NList] 
                0x00000001b4787c2c (    0x10) GCC_except_table36 [NameNList, MangledNameNList, NList] 
                0x00000001b4787c3c (    0x10) GCC_except_table39 [NameNList, MangledNameNList, NList] 
                0x00000001b4787c4c (    0x10) GCC_except_table38 [NameNList, MangledNameNList, NList] 
                0x00000001b4787c5c (    0x10) GCC_except_table40 [NameNList, MangledNameNList, NList] 
                0x00000001b4787c6c (    0x18) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001b4787c84 (    0x6c) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x00000001b4787cf0 (    0x14) GCC_except_table11 [NameNList, MangledNameNList, NList] 
                0x00000001b4787d04 (    0x18) GCC_except_table13 [NameNList, MangledNameNList, NList] 
                0x00000001b4787d1c (    0x10) GCC_except_table18 [NameNList, MangledNameNList, NList] 
                0x00000001b4787d2c (    0x10) GCC_except_table21 [NameNList, MangledNameNList, NList] 
                0x00000001b4787d3c (    0x10) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001b4787d4c (    0x10) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x00000001b4787d5c (     0xc) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x00000001b4787d68 (    0x10) GCC_except_table10 [NameNList, MangledNameNList, NList] 
                0x00000001b4787d78 (    0x2c) GCC_except_table11 [NameNList, MangledNameNList, NList] 
                0x00000001b4787da4 (    0x10) GCC_except_table12 [NameNList, MangledNameNList, NList] 
                0x00000001b4787db4 (    0x2c) GCC_except_table13 [NameNList, MangledNameNList, NList] 
                0x00000001b4787de0 (    0x10) GCC_except_table14 [NameNList, MangledNameNList, NList] 
                0x00000001b4787df0 (    0x38) GCC_except_table15 [NameNList, MangledNameNList, NList] 
                0x00000001b4787e28 (    0x10) GCC_except_table16 [NameNList, MangledNameNList, NList] 
                0x00000001b4787e38 (    0x38) GCC_except_table19 [NameNList, MangledNameNList, NList] 
                0x00000001b4787e70 (    0x2c) GCC_except_table21 [NameNList, MangledNameNList, NList] 
                0x00000001b4787e9c (    0x10) GCC_except_table22 [NameNList, MangledNameNList, NList] 
                0x00000001b4787eac (    0x2c) GCC_except_table23 [NameNList, MangledNameNList, NList] 
                0x00000001b4787ed8 (    0x2c) GCC_except_table24 [NameNList, MangledNameNList, NList] 
                0x00000001b4787f04 (    0x14) GCC_except_table25 [NameNList, MangledNameNList, NList] 
                0x00000001b4787f18 (    0x2c) GCC_except_table27 [NameNList, MangledNameNList, NList] 
                0x00000001b4787f44 (    0x2c) GCC_except_table28 [NameNList, MangledNameNList, NList] 
                0x00000001b4787f70 (    0x10) GCC_except_table29 [NameNList, MangledNameNList, NList] 
                0x00000001b4787f80 (    0x2c) GCC_except_table30 [NameNList, MangledNameNList, NList] 
                0x00000001b4787fac (    0x10) GCC_except_table31 [NameNList, MangledNameNList, NList] 
                0x00000001b4787fbc (    0x2c) GCC_except_table32 [NameNList, MangledNameNList, NList] 
                0x00000001b4787fe8 (    0x2c) GCC_except_table33 [NameNList, MangledNameNList, NList] 
                0x00000001b4788014 (    0x38) GCC_except_table34 [NameNList, MangledNameNList, NList] 
                0x00000001b478804c (    0x14) GCC_except_table35 [NameNList, MangledNameNList, NList] 
                0x00000001b4788060 (    0x10) GCC_except_table37 [NameNList, MangledNameNList, NList] 
                0x00000001b4788070 (    0x20) GCC_except_table39 [NameNList, MangledNameNList, NList] 
                0x00000001b4788090 (    0x14) GCC_except_table40 [NameNList, MangledNameNList, NList] 
                0x00000001b47880a4 (    0x24) GCC_except_table41 [NameNList, MangledNameNList, NList] 
                0x00000001b47880c8 (    0x10) GCC_except_table46 [NameNList, MangledNameNList, NList] 
                0x00000001b47880d8 (    0x50) GCC_except_table54 [NameNList, MangledNameNList, NList] 
                0x00000001b4788128 (   0x864) GCC_except_table56 [NameNList, MangledNameNList, NList] 
                0x00000001b478898c (    0x10) GCC_except_table58 [NameNList, MangledNameNList, NList] 
                0x00000001b478899c (    0x78) GCC_except_table60 [NameNList, MangledNameNList, NList] 
                0x00000001b4788a14 (    0xa0) GCC_except_table61 [NameNList, MangledNameNList, NList] 
                0x00000001b4788ab4 (    0x8c) GCC_except_table62 [NameNList, MangledNameNList, NList] 
                0x00000001b4788b40 (    0x10) GCC_except_table82 [NameNList, MangledNameNList, NList] 
                0x00000001b4788b50 (    0x18) GCC_except_table95 [NameNList, MangledNameNList, NList] 
                0x00000001b4788b68 (    0x10) GCC_except_table102 [NameNList, MangledNameNList, NList] 
                0x00000001b4788b78 (    0x10) GCC_except_table107 [NameNList, MangledNameNList, NList] 
                0x00000001b4788b88 (    0x10) GCC_except_table111 [NameNList, MangledNameNList, NList] 
                0x00000001b4788b98 (    0x10) GCC_except_table112 [NameNList, MangledNameNList, NList] 
                0x00000001b4788ba8 (    0x10) GCC_except_table116 [NameNList, MangledNameNList, NList] 
                0x00000001b4788bb8 (     0xc) GCC_except_table120 [NameNList, MangledNameNList, NList] 
                0x00000001b4788bc4 (    0x10) GCC_except_table132 [NameNList, MangledNameNList, NList] 
                0x00000001b4788bd4 (    0x20) GCC_except_table135 [NameNList, MangledNameNList, NList] 
                0x00000001b4788bf4 (    0x10) GCC_except_table139 [NameNList, MangledNameNList, NList] 
                0x00000001b4788c04 (    0x10) GCC_except_table140 [NameNList, MangledNameNList, NList] 
                0x00000001b4788c14 (    0x10) GCC_except_table156 [NameNList, MangledNameNList, NList] 
                0x00000001b4788c24 (     0xc) GCC_except_table163 [NameNList, MangledNameNList, NList] 
                0x00000001b4788c30 (    0x44) GCC_except_table176 [NameNList, MangledNameNList, NList] 
                0x00000001b4788c74 (    0x18) GCC_except_table177 [NameNList, MangledNameNList, NList] 
                0x00000001b4788c8c (    0x10) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x00000001b4788c9c (   0x218) GCC_except_table10 [NameNList, MangledNameNList, NList] 
                0x00000001b4788eb4 (    0x10) GCC_except_table57 [NameNList, MangledNameNList, NList] 
                0x00000001b4788ec4 (    0x10) GCC_except_table58 [NameNList, MangledNameNList, NList] 
                0x00000001b4788ed4 (    0x10) GCC_except_table59 [NameNList, MangledNameNList, NList] 
                0x00000001b4788ee4 (    0x10) GCC_except_table69 [NameNList, MangledNameNList, NList] 
                0x00000001b4788ef4 (    0x10) GCC_except_table72 [NameNList, MangledNameNList, NList] 
                0x00000001b4788f04 (    0x24) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001b4788f28 (    0x10) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001b4788f38 (   0x10c) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x00000001b4789044 (    0x10) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x00000001b4789054 (    0x1c) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x00000001b4789070 (    0x24) GCC_except_table12 [NameNList, MangledNameNList, NList] 
                0x00000001b4789094 (    0x10) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x00000001b47890a4 (    0x10) GCC_except_table50 [NameNList, MangledNameNList, NList] 
                0x00000001b47890b4 (    0x28) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x00000001b47890dc (    0x10) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x00000001b47890ec (    0x10) GCC_except_table40 [NameNList, MangledNameNList, NList] 
                0x00000001b47890fc (    0x10) GCC_except_table41 [NameNList, MangledNameNList, NList] 
                0x00000001b478910c (    0x34) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x00000001b4789140 (    0x64) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x00000001b47891a4 (    0x14) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x00000001b47891b8 (    0x34) GCC_except_table11 [NameNList, MangledNameNList, NList] 
                0x00000001b47891ec (    0x10) GCC_except_table12 [NameNList, MangledNameNList, NList] 
                0x00000001b47891fc (    0x10) GCC_except_table13 [NameNList, MangledNameNList, NList] 
                0x00000001b478920c (    0x70) GCC_except_table14 [NameNList, MangledNameNList, NList] 
                0x00000001b478927c (    0x10) GCC_except_table25 [NameNList, MangledNameNList, NList] 
                0x00000001b478928c (    0x10) GCC_except_table27 [NameNList, MangledNameNList, NList] 
                0x00000001b478929c (    0x10) GCC_except_table30 [NameNList, MangledNameNList, NList] 
                0x00000001b47892ac (    0x14) GCC_except_table45 [NameNList, MangledNameNList, NList] 
                0x00000001b47892c0 (    0x14) GCC_except_table46 [NameNList, MangledNameNList, NList] 
                0x00000001b47892d4 (    0x40) GCC_except_table17 [NameNList, MangledNameNList, NList] 
                0x00000001b4789314 (    0x10) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001b4789324 (    0x20) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x00000001b4789344 (    0x10) GCC_except_table16 [NameNList, MangledNameNList, NList] 
                0x00000001b4789354 (    0x14) GCC_except_table46 [NameNList, MangledNameNList, NList] 
                0x00000001b4789368 (    0x24) GCC_except_table54 [NameNList, MangledNameNList, NList] 
                0x00000001b478938c (    0x18) GCC_except_table55 [NameNList, MangledNameNList, NList] 
                0x00000001b47893a4 (    0x24) GCC_except_table57 [NameNList, MangledNameNList, NList] 
                0x00000001b47893c8 (    0x10) GCC_except_table58 [NameNList, MangledNameNList, NList] 
                0x00000001b47893d8 (    0x70) GCC_except_table61 [NameNList, MangledNameNList, NList] 
                0x00000001b4789448 (    0x90) GCC_except_table70 [NameNList, MangledNameNList, NList] 
                0x00000001b47894d8 (    0x14) GCC_except_table71 [NameNList, MangledNameNList, NList] 
                0x00000001b47894ec (    0x14) GCC_except_table116 [NameNList, MangledNameNList, NList] 
                0x00000001b4789500 (    0x34) GCC_except_table125 [NameNList, MangledNameNList, NList] 
                0x00000001b4789534 (    0x10) GCC_except_table159 [NameNList, MangledNameNList, NList] 
                0x00000001b4789544 (    0x10) GCC_except_table168 [NameNList, MangledNameNList, NList] 
                0x00000001b4789554 (    0x10) GCC_except_table169 [NameNList, MangledNameNList, NList] 
                0x00000001b4789564 (    0x10) GCC_except_table179 [NameNList, MangledNameNList, NList] 
                0x00000001b4789574 (    0x10) GCC_except_table183 [NameNList, MangledNameNList, NList] 
                0x00000001b4789584 (    0x14) GCC_except_table185 [NameNList, MangledNameNList, NList] 
                0x00000001b4789598 (    0x10) GCC_except_table190 [NameNList, MangledNameNList, NList] 
                0x00000001b47895a8 (    0x10) GCC_except_table193 [NameNList, MangledNameNList, NList] 
                0x00000001b47895b8 (    0x14) GCC_except_table194 [NameNList, MangledNameNList, NList] 
                0x00000001b47895cc (    0x20) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x00000001b47895ec (    0x10) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001b47895fc (    0x6c) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x00000001b4789668 (    0x18) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x00000001b4789680 (    0x14) GCC_except_table13 [NameNList, MangledNameNList, NList] 
                0x00000001b4789694 (    0x70) GCC_except_table19 [NameNList, MangledNameNList, NList] 
                0x00000001b4789704 (    0x44) GCC_except_table20 [NameNList, MangledNameNList, NList] 
                0x00000001b4789748 (    0x14) GCC_except_table28 [NameNList, MangledNameNList, NList] 
                0x00000001b478975c (    0x10) GCC_except_table36 [NameNList, MangledNameNList, NList] 
                0x00000001b478976c (    0x10) GCC_except_table37 [NameNList, MangledNameNList, NList] 
                0x00000001b478977c (    0x14) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x00000001b4789790 (    0x1c) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001b47897ac (    0x24) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x00000001b47897d0 (    0x14) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x00000001b47897e4 (   0x1a8) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x00000001b478998c (    0x60) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x00000001b47899ec (    0x7c) GCC_except_table13 [NameNList, MangledNameNList, NList] 
                0x00000001b4789a68 (    0x58) GCC_except_table14 [NameNList, MangledNameNList, NList] 
                0x00000001b4789ac0 (    0x24) GCC_except_table15 [NameNList, MangledNameNList, NList] 
                0x00000001b4789ae4 (    0x2c) GCC_except_table17 [NameNList, MangledNameNList, NList] 
                0x00000001b4789b10 (    0x5c) GCC_except_table18 [NameNList, MangledNameNList, NList] 
                0x00000001b4789b6c (   0x1a0) GCC_except_table23 [NameNList, MangledNameNList, NList] 
                0x00000001b4789d0c (     0xc) GCC_except_table26 [NameNList, MangledNameNList, NList] 
                0x00000001b4789d18 (   0x14c) GCC_except_table32 [NameNList, MangledNameNList, NList] 
                0x00000001b4789e64 (   0x350) GCC_except_table33 [NameNList, MangledNameNList, NList] 
                0x00000001b478a1b4 (    0x10) GCC_except_table38 [NameNList, MangledNameNList, NList] 
                0x00000001b478a1c4 (    0x10) GCC_except_table40 [NameNList, MangledNameNList, NList] 
                0x00000001b478a1d4 (    0x3c) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x00000001b478a210 (    0x68) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x00000001b478a278 (    0x80) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001b478a2f8 (    0x38) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x00000001b478a330 (    0x18) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x00000001b478a348 (    0x10) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001b478a358 (     0xc) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x00000001b478a364 (     0xc) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x00000001b478a370 (     0xc) GCC_except_table10 [NameNList, MangledNameNList, NList] 
                0x00000001b478a37c (    0x1c) GCC_except_table20 [NameNList, MangledNameNList, NList] 
                0x00000001b478a398 (    0x1c) GCC_except_table23 [NameNList, MangledNameNList, NList] 
                0x00000001b478a3b4 (    0x1c) GCC_except_table24 [NameNList, MangledNameNList, NList] 
                0x00000001b478a3d0 (    0x5c) GCC_except_table28 [NameNList, MangledNameNList, NList] 
                0x00000001b478a42c (     0xc) GCC_except_table30 [NameNList, MangledNameNList, NList] 
                0x00000001b478a438 (     0xc) GCC_except_table31 [NameNList, MangledNameNList, NList] 
                0x00000001b478a444 (     0xc) GCC_except_table32 [NameNList, MangledNameNList, NList] 
                0x00000001b478a450 (     0xc) GCC_except_table33 [NameNList, MangledNameNList, NList] 
                0x00000001b478a45c (    0x38) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001b478a494 (    0x40) GCC_except_table12 [NameNList, MangledNameNList, NList] 
                0x00000001b478a4d4 (    0xcc) GCC_except_table13 [NameNList, MangledNameNList, NList] 
                0x00000001b478a5a0 (   0x238) GCC_except_table15 [NameNList, MangledNameNList, NList] 
                0x00000001b478a7d8 (    0x18) GCC_except_table22 [NameNList, MangledNameNList, NList] 
                0x00000001b478a7f0 (    0x14) GCC_except_table23 [NameNList, MangledNameNList, NList] 
                0x00000001b478a804 (    0x14) GCC_except_table24 [NameNList, MangledNameNList, NList] 
                0x00000001b478a818 (    0x2c) GCC_except_table26 [NameNList, MangledNameNList, NList] 
                0x00000001b478a844 (    0x14) GCC_except_table27 [NameNList, MangledNameNList, NList] 
                0x00000001b478a858 (    0x14) GCC_except_table28 [NameNList, MangledNameNList, NList] 
                0x00000001b478a86c (    0x38) GCC_except_table31 [NameNList, MangledNameNList, NList] 
                0x00000001b478a8a4 (    0x28) GCC_except_table32 [NameNList, MangledNameNList, NList] 
                0x00000001b478a8cc (    0x34) GCC_except_table33 [NameNList, MangledNameNList, NList] 
                0x00000001b478a900 (    0x10) GCC_except_table99 [NameNList, MangledNameNList, NList] 
                0x00000001b478a910 (    0x10) GCC_except_table100 [NameNList, MangledNameNList, NList] 
                0x00000001b478a920 (     0xc) GCC_except_table19 [NameNList, MangledNameNList, NList] 
                0x00000001b478a92c (     0xc) GCC_except_table41 [NameNList, MangledNameNList, NList] 
                0x00000001b478a938 (     0xc) GCC_except_table73 [NameNList, MangledNameNList, NList] 
                0x00000001b478a944 (     0xc) GCC_except_table80 [NameNList, MangledNameNList, NList] 
                0x00000001b478a950 (    0x58) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x00000001b478a9a8 (    0x28) GCC_except_table11 [NameNList, MangledNameNList, NList] 
                0x00000001b478a9d0 (    0x7c) GCC_except_table12 [NameNList, MangledNameNList, NList] 
                0x00000001b478aa4c (    0x48) GCC_except_table17 [NameNList, MangledNameNList, NList] 
                0x00000001b478aa94 (   0x1b4) GCC_except_table21 [NameNList, MangledNameNList, NList] 
                0x00000001b478ac48 (    0x14) GCC_except_table22 [NameNList, MangledNameNList, NList] 
                0x00000001b478ac5c (    0x14) GCC_except_table23 [NameNList, MangledNameNList, NList] 
                0x00000001b478ac70 (    0x18) GCC_except_table24 [NameNList, MangledNameNList, NList] 
                0x00000001b478ac88 (    0x10) GCC_except_table28 [NameNList, MangledNameNList, NList] 
                0x00000001b478ac98 (    0x24) GCC_except_table29 [NameNList, MangledNameNList, NList] 
                0x00000001b478acbc (    0x94) GCC_except_table34 [NameNList, MangledNameNList, NList] 
                0x00000001b478ad50 (    0x1c) GCC_except_table45 [NameNList, MangledNameNList, NList] 
                0x00000001b478ad6c (    0x1c) GCC_except_table48 [NameNList, MangledNameNList, NList] 
                0x00000001b478ad88 (    0x20) GCC_except_table55 [NameNList, MangledNameNList, NList] 
                0x00000001b478ada8 (    0x90) GCC_except_table57 [NameNList, MangledNameNList, NList] 
                0x00000001b478ae38 (    0x24) GCC_except_table62 [NameNList, MangledNameNList, NList] 
                0x00000001b478ae5c (    0x28) GCC_except_table77 [NameNList, MangledNameNList, NList] 
                0x00000001b478ae84 (    0x10) GCC_except_table82 [NameNList, MangledNameNList, NList] 
                0x00000001b478ae94 (    0x10) GCC_except_table83 [NameNList, MangledNameNList, NList] 
                0x00000001b478aea4 (    0x10) GCC_except_table93 [NameNList, MangledNameNList, NList] 
                0x00000001b478aeb4 (    0x14) GCC_except_table98 [NameNList, MangledNameNList, NList] 
                0x00000001b478aec8 (    0x10) GCC_except_table103 [NameNList, MangledNameNList, NList] 
                0x00000001b478aed8 (    0x14) GCC_except_table106 [NameNList, MangledNameNList, NList] 
                0x00000001b478aeec (    0x10) GCC_except_table110 [NameNList, MangledNameNList, NList] 
                0x00000001b478aefc (    0x10) GCC_except_table114 [NameNList, MangledNameNList, NList] 
                0x00000001b478af0c (    0x10) GCC_except_table117 [NameNList, MangledNameNList, NList] 
                0x00000001b478af1c (    0x10) GCC_except_table119 [NameNList, MangledNameNList, NList] 
                0x00000001b478af2c (    0x10) GCC_except_table120 [NameNList, MangledNameNList, NList] 
                0x00000001b478af3c (    0x14) GCC_except_table137 [NameNList, MangledNameNList, NList] 
                0x00000001b478af50 (    0x14) GCC_except_table142 [NameNList, MangledNameNList, NList] 
                0x00000001b478af64 (   0x110) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x00000001b478b074 (    0x10) GCC_except_table10 [NameNList, MangledNameNList, NList] 
                0x00000001b478b084 (    0x10) GCC_except_table11 [NameNList, MangledNameNList, NList] 
                0x00000001b478b094 (    0x80) GCC_except_table45 [NameNList, MangledNameNList, NList] 
                0x00000001b478b114 (    0x5c) GCC_except_table46 [NameNList, MangledNameNList, NList] 
                0x00000001b478b170 (    0xe8) GCC_except_table47 [NameNList, MangledNameNList, NList] 
                0x00000001b478b258 (    0x78) GCC_except_table48 [NameNList, MangledNameNList, NList] 
                0x00000001b478b2d0 (    0x14) GCC_except_table79 [NameNList, MangledNameNList, NList] 
                0x00000001b478b2e4 (    0x10) GCC_except_table98 [NameNList, MangledNameNList, NList] 
                0x00000001b478b2f4 (    0x10) GCC_except_table103 [NameNList, MangledNameNList, NList] 
                0x00000001b478b304 (    0x10) GCC_except_table121 [NameNList, MangledNameNList, NList] 
                0x00000001b478b314 (    0x10) GCC_except_table134 [NameNList, MangledNameNList, NList] 
                0x00000001b478b324 (    0x30) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x00000001b478b354 (    0x20) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x00000001b478b374 (    0x20) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x00000001b478b394 (    0x44) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x00000001b478b3d8 (    0x30) GCC_except_table10 [NameNList, MangledNameNList, NList] 
                0x00000001b478b408 (    0x28) GCC_except_table12 [NameNList, MangledNameNList, NList] 
                0x00000001b478b430 (    0x14) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x00000001b478b444 (    0x18) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x00000001b478b45c (    0x10) GCC_except_table18 [NameNList, MangledNameNList, NList] 
                0x00000001b478b46c (    0x30) GCC_except_table37 [NameNList, MangledNameNList, NList] 
                0x00000001b478b49c (    0x24) GCC_except_table40 [NameNList, MangledNameNList, NList] 
                0x00000001b478b4c0 (    0x10) GCC_except_table47 [NameNList, MangledNameNList, NList] 
                0x00000001b478b4d0 (    0x10) GCC_except_table75 [NameNList, MangledNameNList, NList] 
                0x00000001b478b4e0 (    0x14) GCC_except_table76 [NameNList, MangledNameNList, NList] 
                0x00000001b478b4f4 (    0x10) GCC_except_table82 [NameNList, MangledNameNList, NList] 
                0x00000001b478b504 (    0x10) GCC_except_table85 [NameNList, MangledNameNList, NList] 
                0x00000001b478b514 (    0x14) GCC_except_table88 [NameNList, MangledNameNList, NList] 
                0x00000001b478b528 (    0x14) GCC_except_table99 [NameNList, MangledNameNList, NList] 
                0x00000001b478b53c (    0x10) GCC_except_table104 [NameNList, MangledNameNList, NList] 
                0x00000001b478b54c (    0x14) GCC_except_table106 [NameNList, MangledNameNList, NList] 
                0x00000001b478b560 (    0x18) GCC_except_table108 [NameNList, MangledNameNList, NList] 
                0x00000001b478b578 (    0x20) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x00000001b478b598 (    0x10) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x00000001b478b5a8 (    0x38) GCC_except_table18 [NameNList, MangledNameNList, NList] 
                0x00000001b478b5e0 (    0x2c) GCC_except_table23 [NameNList, MangledNameNList, NList] 
                0x00000001b478b60c (    0x1c) GCC_except_table27 [NameNList, MangledNameNList, NList] 
                0x00000001b478b628 (    0x44) GCC_except_table28 [NameNList, MangledNameNList, NList] 
                0x00000001b478b66c (    0x10) GCC_except_table34 [NameNList, MangledNameNList, NList] 
                0x00000001b478b67c (     0xc) GCC_except_table40 [NameNList, MangledNameNList, NList] 
                0x00000001b478b688 (    0x40) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x00000001b478b6c8 (    0x18) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x00000001b478b6e0 (    0x18) GCC_except_table11 [NameNList, MangledNameNList, NList] 
                0x00000001b478b6f8 (   0x144) GCC_except_table19 [NameNList, MangledNameNList, NList] 
                0x00000001b478b83c (    0xbc) GCC_except_table20 [NameNList, MangledNameNList, NList] 
                0x00000001b478b8f8 (    0x58) GCC_except_table21 [NameNList, MangledNameNList, NList] 
                0x00000001b478b950 (    0x6c) GCC_except_table22 [NameNList, MangledNameNList, NList] 
                0x00000001b478b9bc (    0x5c) GCC_except_table25 [NameNList, MangledNameNList, NList] 
                0x00000001b478ba18 (    0x18) GCC_except_table26 [NameNList, MangledNameNList, NList] 
                0x00000001b478ba30 (    0x14) GCC_except_table37 [NameNList, MangledNameNList, NList] 
                0x00000001b478ba44 (    0x10) GCC_except_table53 [NameNList, MangledNameNList, NList] 
                0x00000001b478ba54 (    0x14) GCC_except_table87 [NameNList, MangledNameNList, NList] 
                0x00000001b478ba68 (    0x10) GCC_except_table91 [NameNList, MangledNameNList, NList] 
                0x00000001b478ba78 (     0xc) GCC_except_table92 [NameNList, MangledNameNList, NList] 
                0x00000001b478ba84 (    0x10) GCC_except_table107 [NameNList, MangledNameNList, NList] 
                0x00000001b478ba94 (    0x14) GCC_except_table45 [NameNList, MangledNameNList, NList] 
                0x00000001b478baa8 (    0x14) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001b478babc (    0x28) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x00000001b478bae4 (    0x3c) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x00000001b478bb20 (    0x18) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x00000001b478bb38 (    0x34) GCC_except_table11 [NameNList, MangledNameNList, NList] 
                0x00000001b478bb6c (    0x88) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x00000001b478bbf4 (    0x58) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x00000001b478bc4c (    0x1c) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001b478bc68 (   0x118) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x00000001b478bd80 (    0x14) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x00000001b478bd94 (    0x14) GCC_except_table10 [NameNList, MangledNameNList, NList] 
                0x00000001b478bda8 (    0xac) GCC_except_table12 [NameNList, MangledNameNList, NList] 
                0x00000001b478be54 (    0x40) GCC_except_table15 [NameNList, MangledNameNList, NList] 
                0x00000001b478be94 (    0x64) GCC_except_table18 [NameNList, MangledNameNList, NList] 
                0x00000001b478bef8 (    0xb4) GCC_except_table35 [NameNList, MangledNameNList, NList] 
                0x00000001b478bfac (    0x14) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x00000001b478bfc0 (    0x24) GCC_except_table10 [NameNList, MangledNameNList, NList] 
                0x00000001b478bfe4 (    0x14) GCC_except_table12 [NameNList, MangledNameNList, NList] 
                0x00000001b478bff8 (    0xf4) GCC_except_table16 [NameNList, MangledNameNList, NList] 
                0x00000001b478c0ec (   0x254) GCC_except_table18 [NameNList, MangledNameNList, NList] 
                0x00000001b478c340 (    0xc0) GCC_except_table20 [NameNList, MangledNameNList, NList] 
                0x00000001b478c400 (   0x11c) GCC_except_table22 [NameNList, MangledNameNList, NList] 
                0x00000001b478c51c (    0x38) GCC_except_table24 [NameNList, MangledNameNList, NList] 
                0x00000001b478c554 (   0x10c) GCC_except_table26 [NameNList, MangledNameNList, NList] 
                0x00000001b478c660 (    0xd8) GCC_except_table39 [NameNList, MangledNameNList, NList] 
                0x00000001b478c738 (    0x38) GCC_except_table40 [NameNList, MangledNameNList, NList] 
                0x00000001b478c770 (    0x14) GCC_except_table61 [NameNList, MangledNameNList, NList] 
                0x00000001b478c784 (    0x14) GCC_except_table65 [NameNList, MangledNameNList, NList] 
                0x00000001b478c798 (    0x40) GCC_except_table69 [NameNList, MangledNameNList, NList] 
                0x00000001b478c7d8 (    0x28) GCC_except_table100 [NameNList, MangledNameNList, NList] 
                0x00000001b478c800 (    0x6c) GCC_except_table107 [NameNList, MangledNameNList, NList] 
                0x00000001b478c86c (    0x18) GCC_except_table115 [NameNList, MangledNameNList, NList] 
                0x00000001b478c884 (    0x14) GCC_except_table142 [NameNList, MangledNameNList, NList] 
                0x00000001b478c898 (    0x20) GCC_except_table158 [NameNList, MangledNameNList, NList] 
                0x00000001b478c8b8 (    0x10) GCC_except_table164 [NameNList, MangledNameNList, NList] 
                0x00000001b478c8c8 (    0x10) GCC_except_table167 [NameNList, MangledNameNList, NList] 
                0x00000001b478c8d8 (    0x14) GCC_except_table169 [NameNList, MangledNameNList, NList] 
                0x00000001b478c8ec (    0x10) GCC_except_table177 [NameNList, MangledNameNList, NList] 
                0x00000001b478c8fc (    0x14) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x00000001b478c910 (    0x1c) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x00000001b478c92c (    0x24) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x00000001b478c950 (    0x14) GCC_except_table17 [NameNList, MangledNameNList, NList] 
                0x00000001b478c964 (    0x14) GCC_except_table21 [NameNList, MangledNameNList, NList] 
                0x00000001b478c978 (    0x14) GCC_except_table23 [NameNList, MangledNameNList, NList] 
                0x00000001b478c98c (    0x14) GCC_except_table25 [NameNList, MangledNameNList, NList] 
                0x00000001b478c9a0 (    0x14) GCC_except_table26 [NameNList, MangledNameNList, NList] 
                0x00000001b478c9b4 (    0x34) GCC_except_table34 [NameNList, MangledNameNList, NList] 
                0x00000001b478c9e8 (    0x10) GCC_except_table42 [NameNList, MangledNameNList, NList] 
                0x00000001b478c9f8 (    0x14) GCC_except_table47 [NameNList, MangledNameNList, NList] 
                0x00000001b478ca0c (    0x20) GCC_except_table53 [NameNList, MangledNameNList, NList] 
                0x00000001b478ca2c (    0x40) GCC_except_table54 [NameNList, MangledNameNList, NList] 
                0x00000001b478ca6c (    0x40) GCC_except_table57 [NameNList, MangledNameNList, NList] 
                0x00000001b478caac (    0x2c) GCC_except_table58 [NameNList, MangledNameNList, NList] 
                0x00000001b478cad8 (    0x24) GCC_except_table65 [NameNList, MangledNameNList, NList] 
                0x00000001b478cafc (    0x18) GCC_except_table67 [NameNList, MangledNameNList, NList] 
                0x00000001b478cb14 (    0x5c) GCC_except_table68 [NameNList, MangledNameNList, NList] 
                0x00000001b478cb70 (    0x1c) GCC_except_table75 [NameNList, MangledNameNList, NList] 
                0x00000001b478cb8c (    0x14) GCC_except_table79 [NameNList, MangledNameNList, NList] 
                0x00000001b478cba0 (    0x10) GCC_except_table84 [NameNList, MangledNameNList, NList] 
                0x00000001b478cbb0 (    0x28) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x00000001b478cbd8 (   0x218) GCC_except_table17 [NameNList, MangledNameNList, NList] 
                0x00000001b478cdf0 (    0x14) GCC_except_table22 [NameNList, MangledNameNList, NList] 
                0x00000001b478ce04 (    0x10) GCC_except_table37 [NameNList, MangledNameNList, NList] 
                0x00000001b478ce14 (    0x10) GCC_except_table38 [NameNList, MangledNameNList, NList] 
                0x00000001b478ce24 (    0x10) GCC_except_table48 [NameNList, MangledNameNList, NList] 
                0x00000001b478ce34 (    0x10) GCC_except_table49 [NameNList, MangledNameNList, NList] 
                0x00000001b478ce44 (    0x10) GCC_except_table50 [NameNList, MangledNameNList, NList] 
                0x00000001b478ce54 (    0x10) GCC_except_table62 [NameNList, MangledNameNList, NList] 
                0x00000001b478ce64 (    0x10) GCC_except_table69 [NameNList, MangledNameNList, NList] 
                0x00000001b478ce74 (    0x14) GCC_except_table76 [NameNList, MangledNameNList, NList] 
                0x00000001b478ce88 (    0x10) GCC_except_table85 [NameNList, MangledNameNList, NList] 
                0x00000001b478ce98 (    0x14) GCC_except_table87 [NameNList, MangledNameNList, NList] 
                0x00000001b478ceac (    0x10) GCC_except_table92 [NameNList, MangledNameNList, NList] 
                0x00000001b478cebc (    0x14) GCC_except_table93 [NameNList, MangledNameNList, NList] 
                0x00000001b478ced0 (    0x14) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x00000001b478cee4 (    0x90) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x00000001b478cf74 (    0x10) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x00000001b478cf84 (   0x134) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x00000001b478d0b8 (    0x94) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x00000001b478d14c (    0xa8) GCC_except_table10 [NameNList, MangledNameNList, NList] 
                0x00000001b478d1f4 (    0x6c) GCC_except_table13 [NameNList, MangledNameNList, NList] 
                0x00000001b478d260 (    0x34) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x00000001b478d294 (    0x34) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x00000001b478d2c8 (    0x1c) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x00000001b478d2e4 (    0x18) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001b478d2fc (    0x10) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x00000001b478d30c (    0x14) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x00000001b478d320 (   0x158) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x00000001b478d478 (    0x18) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001b478d490 (     0xc) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x00000001b478d49c (    0x68) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x00000001b478d504 (    0x1c) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x00000001b478d520 (   0x118) GCC_except_table10 [NameNList, MangledNameNList, NList] 
                0x00000001b478d638 (    0xe0) GCC_except_table11 [NameNList, MangledNameNList, NList] 
                0x00000001b478d718 (   0x104) GCC_except_table14 [NameNList, MangledNameNList, NList] 
                0x00000001b478d81c (    0x2c) GCC_except_table15 [NameNList, MangledNameNList, NList] 
                0x00000001b478d848 (    0xd4) GCC_except_table16 [NameNList, MangledNameNList, NList] 
                0x00000001b478d91c (    0xec) GCC_except_table17 [NameNList, MangledNameNList, NList] 
                0x00000001b478da08 (    0xe0) GCC_except_table18 [NameNList, MangledNameNList, NList] 
                0x00000001b478dae8 (    0x2c) GCC_except_table19 [NameNList, MangledNameNList, NList] 
                0x00000001b478db14 (    0x2c) GCC_except_table20 [NameNList, MangledNameNList, NList] 
                0x00000001b478db40 (    0x2c) GCC_except_table21 [NameNList, MangledNameNList, NList] 
                0x00000001b478db6c (    0x2c) GCC_except_table22 [NameNList, MangledNameNList, NList] 
                0x00000001b478db98 (    0x2c) GCC_except_table30 [NameNList, MangledNameNList, NList] 
                0x00000001b478dbc4 (     0xc) GCC_except_table31 [NameNList, MangledNameNList, NList] 
                0x00000001b478dbd0 (    0x10) GCC_except_table35 [NameNList, MangledNameNList, NList] 
                0x00000001b478dbe0 (    0x10) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x00000001b478dbf0 (    0x10) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x00000001b478dc00 (    0x14) GCC_except_table21 [NameNList, MangledNameNList, NList] 
                0x00000001b478dc14 (    0x1c) GCC_except_table24 [NameNList, MangledNameNList, NList] 
                0x00000001b478dc30 (    0x24) GCC_except_table25 [NameNList, MangledNameNList, NList] 
                0x00000001b478dc54 (    0x80) GCC_except_table27 [NameNList, MangledNameNList, NList] 
                0x00000001b478dcd4 (    0x4c) GCC_except_table30 [NameNList, MangledNameNList, NList] 
                0x00000001b478dd20 (    0x78) GCC_except_table31 [NameNList, MangledNameNList, NList] 
                0x00000001b478dd98 (    0xd0) GCC_except_table35 [NameNList, MangledNameNList, NList] 
                0x00000001b478de68 (    0x10) GCC_except_table36 [NameNList, MangledNameNList, NList] 
                0x00000001b478de78 (   0x148) GCC_except_table42 [NameNList, MangledNameNList, NList] 
                0x00000001b478dfc0 (    0x58) GCC_except_table47 [NameNList, MangledNameNList, NList] 
                0x00000001b478e018 (    0x18) GCC_except_table48 [NameNList, MangledNameNList, NList] 
                0x00000001b478e030 (    0x10) GCC_except_table54 [NameNList, MangledNameNList, NList] 
                0x00000001b478e040 (    0x30) GCC_except_table56 [NameNList, MangledNameNList, NList] 
                0x00000001b478e070 (    0x8c) GCC_except_table59 [NameNList, MangledNameNList, NList] 
                0x00000001b478e0fc (    0x30) GCC_except_table63 [NameNList, MangledNameNList, NList] 
                0x00000001b478e12c (    0x28) GCC_except_table65 [NameNList, MangledNameNList, NList] 
                0x00000001b478e154 (    0x48) GCC_except_table66 [NameNList, MangledNameNList, NList] 
                0x00000001b478e19c (    0x28) GCC_except_table68 [NameNList, MangledNameNList, NList] 
                0x00000001b478e1c4 (    0x68) GCC_except_table69 [NameNList, MangledNameNList, NList] 
                0x00000001b478e22c (    0x74) GCC_except_table75 [NameNList, MangledNameNList, NList] 
                0x00000001b478e2a0 (    0x18) GCC_except_table78 [NameNList, MangledNameNList, NList] 
                0x00000001b478e2b8 (    0x30) GCC_except_table82 [NameNList, MangledNameNList, NList] 
                0x00000001b478e2e8 (    0x28) GCC_except_table83 [NameNList, MangledNameNList, NList] 
                0x00000001b478e310 (   0x178) GCC_except_table87 [NameNList, MangledNameNList, NList] 
                0x00000001b478e488 (    0x70) GCC_except_table89 [NameNList, MangledNameNList, NList] 
                0x00000001b478e4f8 (    0x38) GCC_except_table90 [NameNList, MangledNameNList, NList] 
                0x00000001b478e530 (    0x7c) GCC_except_table99 [NameNList, MangledNameNList, NList] 
                0x00000001b478e5ac (    0x28) GCC_except_table103 [NameNList, MangledNameNList, NList] 
                0x00000001b478e5d4 (    0x10) GCC_except_table135 [NameNList, MangledNameNList, NList] 
                0x00000001b478e5e4 (    0x10) GCC_except_table165 [NameNList, MangledNameNList, NList] 
                0x00000001b478e5f4 (    0x10) GCC_except_table169 [NameNList, MangledNameNList, NList] 
                0x00000001b478e604 (     0xc) GCC_except_table175 [NameNList, MangledNameNList, NList] 
                0x00000001b478e610 (    0x10) GCC_except_table194 [NameNList, MangledNameNList, NList] 
                0x00000001b478e620 (    0x14) GCC_except_table197 [NameNList, MangledNameNList, NList] 
                0x00000001b478e634 (    0x10) GCC_except_table202 [NameNList, MangledNameNList, NList] 
                0x00000001b478e644 (    0x10) GCC_except_table222 [NameNList, MangledNameNList, NList] 
                0x00000001b478e654 (     0xc) GCC_except_table225 [NameNList, MangledNameNList, NList] 
                0x00000001b478e660 (    0x70) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x00000001b478e6d0 (    0x5c) GCC_except_table11 [NameNList, MangledNameNList, NList] 
                0x00000001b478e72c (    0x14) GCC_except_table15 [NameNList, MangledNameNList, NList] 
                0x00000001b478e740 (    0x14) GCC_except_table16 [NameNList, MangledNameNList, NList] 
                0x00000001b478e754 (    0x14) GCC_except_table17 [NameNList, MangledNameNList, NList] 
                0x00000001b478e768 (    0x1c) GCC_except_table34 [NameNList, MangledNameNList, NList] 
                0x00000001b478e784 (    0xb0) GCC_except_table39 [NameNList, MangledNameNList, NList] 
                0x00000001b478e834 (    0x30) GCC_except_table52 [NameNList, MangledNameNList, NList] 
                0x00000001b478e864 (    0x18) GCC_except_table56 [NameNList, MangledNameNList, NList] 
                0x00000001b478e87c (   0x284) GCC_except_table68 [NameNList, MangledNameNList, NList] 
                0x00000001b478eb00 (    0x10) GCC_except_table69 [NameNList, MangledNameNList, NList] 
                0x00000001b478eb10 (    0x10) GCC_except_table73 [NameNList, MangledNameNList, NList] 
                0x00000001b478eb20 (    0x14) GCC_except_table94 [NameNList, MangledNameNList, NList] 
                0x00000001b478eb34 (    0x14) GCC_except_table98 [NameNList, MangledNameNList, NList] 
                0x00000001b478eb48 (    0x1c) GCC_except_table121 [NameNList, MangledNameNList, NList] 
                0x00000001b478eb64 (    0x18) GCC_except_table129 [NameNList, MangledNameNList, NList] 
                0x00000001b478eb7c (    0x1c) GCC_except_table194 [NameNList, MangledNameNList, NList] 
                0x00000001b478eb98 (    0x14) GCC_except_table213 [NameNList, MangledNameNList, NList] 
                0x00000001b478ebac (    0x1c) GCC_except_table257 [NameNList, MangledNameNList, NList] 
                0x00000001b478ebc8 (    0x1c) GCC_except_table258 [NameNList, MangledNameNList, NList] 
                0x00000001b478ebe4 (    0x18) GCC_except_table262 [NameNList, MangledNameNList, NList] 
                0x00000001b478ebfc (    0x10) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001b478ec0c (   0x178) GCC_except_table23 [NameNList, MangledNameNList, NList] 
                0x00000001b478ed84 (    0x24) GCC_except_table24 [NameNList, MangledNameNList, NList] 
                0x00000001b478eda8 (    0xb8) GCC_except_table26 [NameNList, MangledNameNList, NList] 
                0x00000001b478ee60 (    0x20) GCC_except_table29 [NameNList, MangledNameNList, NList] 
                0x00000001b478ee80 (    0x10) GCC_except_table79 [NameNList, MangledNameNList, NList] 
                0x00000001b478ee90 (    0x10) GCC_except_table80 [NameNList, MangledNameNList, NList] 
                0x00000001b478eea0 (    0x3c) GCC_except_table94 [NameNList, MangledNameNList, NList] 
                0x00000001b478eedc (    0x3c) GCC_except_table95 [NameNList, MangledNameNList, NList] 
                0x00000001b478ef18 (    0x40) GCC_except_table99 [NameNList, MangledNameNList, NList] 
                0x00000001b478ef58 (    0x14) GCC_except_table101 [NameNList, MangledNameNList, NList] 
                0x00000001b478ef6c (    0x28) GCC_except_table112 [NameNList, MangledNameNList, NList] 
                0x00000001b478ef94 (    0x14) GCC_except_table115 [NameNList, MangledNameNList, NList] 
                0x00000001b478efa8 (    0x10) GCC_except_table121 [NameNList, MangledNameNList, NList] 
                0x00000001b478efb8 (    0x10) GCC_except_table124 [NameNList, MangledNameNList, NList] 
                0x00000001b478efc8 (    0x14) GCC_except_table126 [NameNList, MangledNameNList, NList] 
                0x00000001b478efdc (    0x10) GCC_except_table131 [NameNList, MangledNameNList, NList] 
                0x00000001b478efec (    0x10) GCC_except_table132 [NameNList, MangledNameNList, NList] 
                0x00000001b478effc (    0x10) GCC_except_table134 [NameNList, MangledNameNList, NList] 
                0x00000001b478f00c (    0x10) GCC_except_table136 [NameNList, MangledNameNList, NList] 
                0x00000001b478f01c (    0x14) GCC_except_table137 [NameNList, MangledNameNList, NList] 
                0x00000001b478f030 (    0x14) GCC_except_table143 [NameNList, MangledNameNList, NList] 
                0x00000001b478f044 (    0x10) GCC_except_table145 [NameNList, MangledNameNList, NList] 
                0x00000001b478f054 (   0x1d8) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001b478f22c (    0x14) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x00000001b478f240 (    0x14) GCC_except_table30 [NameNList, MangledNameNList, NList] 
                0x00000001b478f254 (    0x18) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x00000001b478f26c (    0x10) GCC_except_table10 [NameNList, MangledNameNList, NList] 
                0x00000001b478f27c (    0x24) GCC_except_table11 [NameNList, MangledNameNList, NList] 
                0x00000001b478f2a0 (    0x54) GCC_except_table13 [NameNList, MangledNameNList, NList] 
                0x00000001b478f2f4 (    0x24) GCC_except_table14 [NameNList, MangledNameNList, NList] 
                0x00000001b478f318 (    0x14) GCC_except_table17 [NameNList, MangledNameNList, NList] 
                0x00000001b478f32c (    0x60) GCC_except_table34 [NameNList, MangledNameNList, NList] 
                0x00000001b478f38c (    0x14) GCC_except_table50 [NameNList, MangledNameNList, NList] 
                0x00000001b478f3a0 (    0x64) GCC_except_table65 [NameNList, MangledNameNList, NList] 
                0x00000001b478f404 (   0x184) GCC_except_table67 [NameNList, MangledNameNList, NList] 
                0x00000001b478f588 (    0x18) GCC_except_table69 [NameNList, MangledNameNList, NList] 
                0x00000001b478f5a0 (    0x98) GCC_except_table70 [NameNList, MangledNameNList, NList] 
                0x00000001b478f638 (    0x3c) GCC_except_table71 [NameNList, MangledNameNList, NList] 
                0x00000001b478f674 (    0xb8) GCC_except_table76 [NameNList, MangledNameNList, NList] 
                0x00000001b478f72c (    0x18) GCC_except_table78 [NameNList, MangledNameNList, NList] 
                0x00000001b478f744 (    0x10) GCC_except_table99 [NameNList, MangledNameNList, NList] 
                0x00000001b478f754 (    0x10) GCC_except_table104 [NameNList, MangledNameNList, NList] 
                0x00000001b478f764 (    0x10) GCC_except_table105 [NameNList, MangledNameNList, NList] 
                0x00000001b478f774 (    0x10) GCC_except_table107 [NameNList, MangledNameNList, NList] 
                0x00000001b478f784 (    0x10) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x00000001b478f794 (    0x4c) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x00000001b478f7e0 (    0x38) GCC_except_table11 [NameNList, MangledNameNList, NList] 
                0x00000001b478f818 (    0x14) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001b478f82c (    0x10) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001b478f83c (    0x34) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x00000001b478f870 (    0x10) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x00000001b478f880 (    0x40) GCC_except_table12 [NameNList, MangledNameNList, NList] 
                0x00000001b478f8c0 (    0x40) GCC_except_table13 [NameNList, MangledNameNList, NList] 
                0x00000001b478f900 (    0x94) GCC_except_table15 [NameNList, MangledNameNList, NList] 
                0x00000001b478f994 (    0x28) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x00000001b478f9bc (    0x50) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x00000001b478fa0c (   0x12c) GCC_except_table19 [NameNList, MangledNameNList, NList] 
                0x00000001b478fb38 (    0x10) GCC_except_table69 [NameNList, MangledNameNList, NList] 
                0x00000001b478fb48 (    0x10) GCC_except_table98 [NameNList, MangledNameNList, NList] 
                0x00000001b478fb58 (    0x10) GCC_except_table100 [NameNList, MangledNameNList, NList] 
                0x00000001b478fb68 (    0x98) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x00000001b478fc00 (    0xe4) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x00000001b478fce4 (    0xf4) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x00000001b478fdd8 (    0x10) GCC_except_table16 [NameNList, MangledNameNList, NList] 
                0x00000001b478fde8 (    0x10) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x00000001b478fdf8 (    0x70) GCC_except_table15 [NameNList, MangledNameNList, NList] 
                0x00000001b478fe68 (    0x5c) GCC_except_table16 [NameNList, MangledNameNList, NList] 
                0x00000001b478fec4 (    0x5c) GCC_except_table20 [NameNList, MangledNameNList, NList] 
                0x00000001b478ff20 (    0x24) GCC_except_table25 [NameNList, MangledNameNList, NList] 
                0x00000001b478ff44 (   0x128) GCC_except_table29 [NameNList, MangledNameNList, NList] 
                0x00000001b479006c (    0x24) GCC_except_table30 [NameNList, MangledNameNList, NList] 
                0x00000001b4790090 (    0x10) GCC_except_table113 [NameNList, MangledNameNList, NList] 
                0x00000001b47900a0 (    0x10) GCC_except_table135 [NameNList, MangledNameNList, NList] 
                0x00000001b47900b0 (    0x10) GCC_except_table140 [NameNList, MangledNameNList, NList] 
                0x00000001b47900c0 (    0x10) GCC_except_table154 [NameNList, MangledNameNList, NList] 
                0x00000001b47900d0 (    0x58) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x00000001b4790128 (    0x18) GCC_except_table11 [NameNList, MangledNameNList, NList] 
                0x00000001b4790140 (    0x4c) GCC_except_table23 [NameNList, MangledNameNList, NList] 
                0x00000001b479018c (    0xa8) GCC_except_table24 [NameNList, MangledNameNList, NList] 
                0x00000001b4790234 (    0x38) GCC_except_table29 [NameNList, MangledNameNList, NList] 
                0x00000001b479026c (    0x14) GCC_except_table30 [NameNList, MangledNameNList, NList] 
                0x00000001b4790280 (    0x10) GCC_except_table36 [NameNList, MangledNameNList, NList] 
                0x00000001b4790290 (    0x18) GCC_except_table49 [NameNList, MangledNameNList, NList] 
                0x00000001b47902a8 (    0x58) GCC_except_table54 [NameNList, MangledNameNList, NList] 
                0x00000001b4790300 (    0x18) GCC_except_table59 [NameNList, MangledNameNList, NList] 
                0x00000001b4790318 (    0x4c) GCC_except_table71 [NameNList, MangledNameNList, NList] 
                0x00000001b4790364 (    0xa8) GCC_except_table72 [NameNList, MangledNameNList, NList] 
                0x00000001b479040c (    0x38) GCC_except_table76 [NameNList, MangledNameNList, NList] 
                0x00000001b4790444 (    0x14) GCC_except_table77 [NameNList, MangledNameNList, NList] 
                0x00000001b4790458 (    0x10) GCC_except_table81 [NameNList, MangledNameNList, NList] 
                0x00000001b4790468 (    0x18) GCC_except_table94 [NameNList, MangledNameNList, NList] 
                0x00000001b4790480 (    0x58) GCC_except_table100 [NameNList, MangledNameNList, NList] 
                0x00000001b47904d8 (    0x30) GCC_except_table104 [NameNList, MangledNameNList, NList] 
                0x00000001b4790508 (    0x1c) GCC_except_table109 [NameNList, MangledNameNList, NList] 
                0x00000001b4790524 (    0x1c) GCC_except_table113 [NameNList, MangledNameNList, NList] 
                0x00000001b4790540 (    0xa8) GCC_except_table119 [NameNList, MangledNameNList, NList] 
                0x00000001b47905e8 (    0x38) GCC_except_table123 [NameNList, MangledNameNList, NList] 
                0x00000001b4790620 (    0x14) GCC_except_table124 [NameNList, MangledNameNList, NList] 
                0x00000001b4790634 (    0x10) GCC_except_table128 [NameNList, MangledNameNList, NList] 
                0x00000001b4790644 (    0x18) GCC_except_table138 [NameNList, MangledNameNList, NList] 
                0x00000001b479065c (    0x58) GCC_except_table144 [NameNList, MangledNameNList, NList] 
                0x00000001b47906b4 (    0x30) GCC_except_table148 [NameNList, MangledNameNList, NList] 
                0x00000001b47906e4 (    0x1c) GCC_except_table153 [NameNList, MangledNameNList, NList] 
                0x00000001b4790700 (    0x1c) GCC_except_table157 [NameNList, MangledNameNList, NList] 
                0x00000001b479071c (    0xa8) GCC_except_table163 [NameNList, MangledNameNList, NList] 
                0x00000001b47907c4 (    0x38) GCC_except_table167 [NameNList, MangledNameNList, NList] 
                0x00000001b47907fc (    0x14) GCC_except_table168 [NameNList, MangledNameNList, NList] 
                0x00000001b4790810 (    0x10) GCC_except_table172 [NameNList, MangledNameNList, NList] 
                0x00000001b4790820 (    0x18) GCC_except_table182 [NameNList, MangledNameNList, NList] 
                0x00000001b4790838 (    0x14) GCC_except_table186 [NameNList, MangledNameNList, NList] 
                0x00000001b479084c (    0x60) GCC_except_table187 [NameNList, MangledNameNList, NList] 
                0x00000001b47908ac (    0x18) GCC_except_table191 [NameNList, MangledNameNList, NList] 
                0x00000001b47908c4 (    0x18) GCC_except_table194 [NameNList, MangledNameNList, NList] 
                0x00000001b47908dc (    0xa8) GCC_except_table201 [NameNList, MangledNameNList, NList] 
                0x00000001b4790984 (    0x38) GCC_except_table205 [NameNList, MangledNameNList, NList] 
                0x00000001b47909bc (    0x14) GCC_except_table206 [NameNList, MangledNameNList, NList] 
                0x00000001b47909d0 (    0x10) GCC_except_table210 [NameNList, MangledNameNList, NList] 
                0x00000001b47909e0 (    0x18) GCC_except_table220 [NameNList, MangledNameNList, NList] 
                0x00000001b47909f8 (    0x14) GCC_except_table224 [NameNList, MangledNameNList, NList] 
                0x00000001b4790a0c (    0x60) GCC_except_table225 [NameNList, MangledNameNList, NList] 
                0x00000001b4790a6c (    0x18) GCC_except_table229 [NameNList, MangledNameNList, NList] 
                0x00000001b4790a84 (    0x18) GCC_except_table232 [NameNList, MangledNameNList, NList] 
                0x00000001b4790a9c (    0xa8) GCC_except_table239 [NameNList, MangledNameNList, NList] 
                0x00000001b4790b44 (    0x38) GCC_except_table243 [NameNList, MangledNameNList, NList] 
                0x00000001b4790b7c (    0x14) GCC_except_table244 [NameNList, MangledNameNList, NList] 
                0x00000001b4790b90 (    0x10) GCC_except_table248 [NameNList, MangledNameNList, NList] 
                0x00000001b4790ba0 (    0x18) GCC_except_table258 [NameNList, MangledNameNList, NList] 
                0x00000001b4790bb8 (    0x58) GCC_except_table263 [NameNList, MangledNameNList, NList] 
                0x00000001b4790c10 (    0x18) GCC_except_table267 [NameNList, MangledNameNList, NList] 
                0x00000001b4790c28 (    0x18) GCC_except_table270 [NameNList, MangledNameNList, NList] 
                0x00000001b4790c40 (    0xa8) GCC_except_table277 [NameNList, MangledNameNList, NList] 
                0x00000001b4790ce8 (    0x38) GCC_except_table281 [NameNList, MangledNameNList, NList] 
                0x00000001b4790d20 (    0x14) GCC_except_table282 [NameNList, MangledNameNList, NList] 
                0x00000001b4790d34 (    0x10) GCC_except_table286 [NameNList, MangledNameNList, NList] 
                0x00000001b4790d44 (    0x18) GCC_except_table296 [NameNList, MangledNameNList, NList] 
                0x00000001b4790d5c (    0x58) GCC_except_table301 [NameNList, MangledNameNList, NList] 
                0x00000001b4790db4 (    0x18) GCC_except_table305 [NameNList, MangledNameNList, NList] 
                0x00000001b4790dcc (    0x18) GCC_except_table308 [NameNList, MangledNameNList, NList] 
                0x00000001b4790de4 (    0xa8) GCC_except_table315 [NameNList, MangledNameNList, NList] 
                0x00000001b4790e8c (    0x38) GCC_except_table319 [NameNList, MangledNameNList, NList] 
                0x00000001b4790ec4 (    0x14) GCC_except_table320 [NameNList, MangledNameNList, NList] 
                0x00000001b4790ed8 (    0x10) GCC_except_table324 [NameNList, MangledNameNList, NList] 
                0x00000001b4790ee8 (    0x18) GCC_except_table334 [NameNList, MangledNameNList, NList] 
                0x00000001b4790f00 (    0x14) GCC_except_table338 [NameNList, MangledNameNList, NList] 
                0x00000001b4790f14 (    0x4c) GCC_except_table339 [NameNList, MangledNameNList, NList] 
                0x00000001b4790f60 (    0x30) GCC_except_table343 [NameNList, MangledNameNList, NList] 
                0x00000001b4790f90 (    0x28) GCC_except_table346 [NameNList, MangledNameNList, NList] 
                0x00000001b4790fb8 (    0xb4) GCC_except_table352 [NameNList, MangledNameNList, NList] 
                0x00000001b479106c (    0x38) GCC_except_table356 [NameNList, MangledNameNList, NList] 
                0x00000001b47910a4 (    0x1c) GCC_except_table357 [NameNList, MangledNameNList, NList] 
                0x00000001b47910c0 (    0x10) GCC_except_table363 [NameNList, MangledNameNList, NList] 
                0x00000001b47910d0 (    0x18) GCC_except_table373 [NameNList, MangledNameNList, NList] 
                0x00000001b47910e8 (    0x14) GCC_except_table377 [NameNList, MangledNameNList, NList] 
                0x00000001b47910fc (    0x4c) GCC_except_table378 [NameNList, MangledNameNList, NList] 
                0x00000001b4791148 (    0x30) GCC_except_table382 [NameNList, MangledNameNList, NList] 
                0x00000001b4791178 (    0x28) GCC_except_table385 [NameNList, MangledNameNList, NList] 
                0x00000001b47911a0 (    0xb4) GCC_except_table391 [NameNList, MangledNameNList, NList] 
                0x00000001b4791254 (    0x38) GCC_except_table395 [NameNList, MangledNameNList, NList] 
                0x00000001b479128c (    0x1c) GCC_except_table396 [NameNList, MangledNameNList, NList] 
                0x00000001b47912a8 (    0x10) GCC_except_table402 [NameNList, MangledNameNList, NList] 
                0x00000001b47912b8 (    0x18) GCC_except_table412 [NameNList, MangledNameNList, NList] 
                0x00000001b47912d0 (    0x4c) GCC_except_table417 [NameNList, MangledNameNList, NList] 
                0x00000001b479131c (    0x30) GCC_except_table421 [NameNList, MangledNameNList, NList] 
                0x00000001b479134c (    0x28) GCC_except_table424 [NameNList, MangledNameNList, NList] 
                0x00000001b4791374 (    0xb4) GCC_except_table430 [NameNList, MangledNameNList, NList] 
                0x00000001b4791428 (    0x38) GCC_except_table434 [NameNList, MangledNameNList, NList] 
                0x00000001b4791460 (    0x1c) GCC_except_table435 [NameNList, MangledNameNList, NList] 
                0x00000001b479147c (    0x10) GCC_except_table441 [NameNList, MangledNameNList, NList] 
                0x00000001b479148c (    0x18) GCC_except_table451 [NameNList, MangledNameNList, NList] 
                0x00000001b47914a4 (    0x4c) GCC_except_table456 [NameNList, MangledNameNList, NList] 
                0x00000001b47914f0 (    0x30) GCC_except_table460 [NameNList, MangledNameNList, NList] 
                0x00000001b4791520 (    0x28) GCC_except_table463 [NameNList, MangledNameNList, NList] 
                0x00000001b4791548 (    0xb4) GCC_except_table469 [NameNList, MangledNameNList, NList] 
                0x00000001b47915fc (    0x38) GCC_except_table473 [NameNList, MangledNameNList, NList] 
                0x00000001b4791634 (    0x1c) GCC_except_table474 [NameNList, MangledNameNList, NList] 
                0x00000001b4791650 (    0x10) GCC_except_table480 [NameNList, MangledNameNList, NList] 
                0x00000001b4791660 (    0x18) GCC_except_table490 [NameNList, MangledNameNList, NList] 
                0x00000001b4791678 (    0x14) GCC_except_table494 [NameNList, MangledNameNList, NList] 
                0x00000001b479168c (    0x54) GCC_except_table495 [NameNList, MangledNameNList, NList] 
                0x00000001b47916e0 (    0x30) GCC_except_table499 [NameNList, MangledNameNList, NList] 
                0x00000001b4791710 (    0x18) GCC_except_table502 [NameNList, MangledNameNList, NList] 
                0x00000001b4791728 (    0xa8) GCC_except_table508 [NameNList, MangledNameNList, NList] 
                0x00000001b47917d0 (    0x38) GCC_except_table512 [NameNList, MangledNameNList, NList] 
                0x00000001b4791808 (    0x14) GCC_except_table513 [NameNList, MangledNameNList, NList] 
                0x00000001b479181c (    0x10) GCC_except_table517 [NameNList, MangledNameNList, NList] 
                0x00000001b479182c (    0x18) GCC_except_table527 [NameNList, MangledNameNList, NList] 
                0x00000001b4791844 (    0x14) GCC_except_table531 [NameNList, MangledNameNList, NList] 
                0x00000001b4791858 (    0x4c) GCC_except_table532 [NameNList, MangledNameNList, NList] 
                0x00000001b47918a4 (    0x30) GCC_except_table536 [NameNList, MangledNameNList, NList] 
                0x00000001b47918d4 (    0x18) GCC_except_table539 [NameNList, MangledNameNList, NList] 
                0x00000001b47918ec (    0xa8) GCC_except_table545 [NameNList, MangledNameNList, NList] 
                0x00000001b4791994 (    0x38) GCC_except_table549 [NameNList, MangledNameNList, NList] 
                0x00000001b47919cc (    0x14) GCC_except_table550 [NameNList, MangledNameNList, NList] 
                0x00000001b47919e0 (    0x10) GCC_except_table554 [NameNList, MangledNameNList, NList] 
                0x00000001b47919f0 (    0x18) GCC_except_table564 [NameNList, MangledNameNList, NList] 
                0x00000001b4791a08 (    0x4c) GCC_except_table569 [NameNList, MangledNameNList, NList] 
                0x00000001b4791a54 (    0x18) GCC_except_table573 [NameNList, MangledNameNList, NList] 
                0x00000001b4791a6c (    0x4c) GCC_except_table585 [NameNList, MangledNameNList, NList] 
                0x00000001b4791ab8 (    0xa8) GCC_except_table586 [NameNList, MangledNameNList, NList] 
                0x00000001b4791b60 (    0x38) GCC_except_table590 [NameNList, MangledNameNList, NList] 
                0x00000001b4791b98 (    0x14) GCC_except_table591 [NameNList, MangledNameNList, NList] 
                0x00000001b4791bac (    0x10) GCC_except_table595 [NameNList, MangledNameNList, NList] 
                0x00000001b4791bbc (    0x18) GCC_except_table608 [NameNList, MangledNameNList, NList] 
                0x00000001b4791bd4 (    0x54) GCC_except_table613 [NameNList, MangledNameNList, NList] 
                0x00000001b4791c28 (    0x18) GCC_except_table617 [NameNList, MangledNameNList, NList] 
                0x00000001b4791c40 (    0x4c) GCC_except_table629 [NameNList, MangledNameNList, NList] 
                0x00000001b4791c8c (    0xa8) GCC_except_table630 [NameNList, MangledNameNList, NList] 
                0x00000001b4791d34 (    0x38) GCC_except_table634 [NameNList, MangledNameNList, NList] 
                0x00000001b4791d6c (    0x14) GCC_except_table635 [NameNList, MangledNameNList, NList] 
                0x00000001b4791d80 (    0x10) GCC_except_table639 [NameNList, MangledNameNList, NList] 
                0x00000001b4791d90 (    0x18) GCC_except_table652 [NameNList, MangledNameNList, NList] 
                0x00000001b4791da8 (    0x4c) GCC_except_table657 [NameNList, MangledNameNList, NList] 
                0x00000001b4791df4 (    0x30) GCC_except_table661 [NameNList, MangledNameNList, NList] 
                0x00000001b4791e24 (    0x18) GCC_except_table664 [NameNList, MangledNameNList, NList] 
                0x00000001b4791e3c (    0xa8) GCC_except_table670 [NameNList, MangledNameNList, NList] 
                0x00000001b4791ee4 (    0x38) GCC_except_table674 [NameNList, MangledNameNList, NList] 
                0x00000001b4791f1c (    0x14) GCC_except_table675 [NameNList, MangledNameNList, NList] 
                0x00000001b4791f30 (    0x10) GCC_except_table679 [NameNList, MangledNameNList, NList] 
                0x00000001b4791f40 (    0x18) GCC_except_table689 [NameNList, MangledNameNList, NList] 
                0x00000001b4791f58 (    0x4c) GCC_except_table694 [NameNList, MangledNameNList, NList] 
                0x00000001b4791fa4 (    0x30) GCC_except_table698 [NameNList, MangledNameNList, NList] 
                0x00000001b4791fd4 (    0x18) GCC_except_table701 [NameNList, MangledNameNList, NList] 
                0x00000001b4791fec (    0xa8) GCC_except_table707 [NameNList, MangledNameNList, NList] 
                0x00000001b4792094 (    0x38) GCC_except_table711 [NameNList, MangledNameNList, NList] 
                0x00000001b47920cc (    0x14) GCC_except_table712 [NameNList, MangledNameNList, NList] 
                0x00000001b47920e0 (    0x10) GCC_except_table716 [NameNList, MangledNameNList, NList] 
                0x00000001b47920f0 (    0x18) GCC_except_table726 [NameNList, MangledNameNList, NList] 
                0x00000001b4792108 (    0x14) GCC_except_table730 [NameNList, MangledNameNList, NList] 
                0x00000001b479211c (    0x4c) GCC_except_table731 [NameNList, MangledNameNList, NList] 
                0x00000001b4792168 (    0x18) GCC_except_table735 [NameNList, MangledNameNList, NList] 
                0x00000001b4792180 (    0x28) GCC_except_table738 [NameNList, MangledNameNList, NList] 
                0x00000001b47921a8 (    0xb4) GCC_except_table745 [NameNList, MangledNameNList, NList] 
                0x00000001b479225c (    0x38) GCC_except_table749 [NameNList, MangledNameNList, NList] 
                0x00000001b4792294 (    0x1c) GCC_except_table750 [NameNList, MangledNameNList, NList] 
                0x00000001b47922b0 (    0x10) GCC_except_table756 [NameNList, MangledNameNList, NList] 
                0x00000001b47922c0 (    0x18) GCC_except_table766 [NameNList, MangledNameNList, NList] 
                0x00000001b47922d8 (    0x14) GCC_except_table770 [NameNList, MangledNameNList, NList] 
                0x00000001b47922ec (    0x54) GCC_except_table771 [NameNList, MangledNameNList, NList] 
                0x00000001b4792340 (    0x18) GCC_except_table775 [NameNList, MangledNameNList, NList] 
                0x00000001b4792358 (    0x28) GCC_except_table778 [NameNList, MangledNameNList, NList] 
                0x00000001b4792380 (    0xb4) GCC_except_table785 [NameNList, MangledNameNList, NList] 
                0x00000001b4792434 (    0x38) GCC_except_table789 [NameNList, MangledNameNList, NList] 
                0x00000001b479246c (    0x1c) GCC_except_table790 [NameNList, MangledNameNList, NList] 
                0x00000001b4792488 (    0x10) GCC_except_table796 [NameNList, MangledNameNList, NList] 
                0x00000001b4792498 (    0x18) GCC_except_table806 [NameNList, MangledNameNList, NList] 
                0x00000001b47924b0 (    0x14) GCC_except_table810 [NameNList, MangledNameNList, NList] 
                0x00000001b47924c4 (    0x4c) GCC_except_table811 [NameNList, MangledNameNList, NList] 
                0x00000001b4792510 (    0x18) GCC_except_table815 [NameNList, MangledNameNList, NList] 
                0x00000001b4792528 (    0x18) GCC_except_table818 [NameNList, MangledNameNList, NList] 
                0x00000001b4792540 (    0xa8) GCC_except_table825 [NameNList, MangledNameNList, NList] 
                0x00000001b47925e8 (    0x38) GCC_except_table829 [NameNList, MangledNameNList, NList] 
                0x00000001b4792620 (    0x14) GCC_except_table830 [NameNList, MangledNameNList, NList] 
                0x00000001b4792634 (    0x10) GCC_except_table834 [NameNList, MangledNameNList, NList] 
                0x00000001b4792644 (    0x18) GCC_except_table844 [NameNList, MangledNameNList, NList] 
                0x00000001b479265c (    0x14) GCC_except_table848 [NameNList, MangledNameNList, NList] 
                0x00000001b4792670 (    0x54) GCC_except_table849 [NameNList, MangledNameNList, NList] 
                0x00000001b47926c4 (    0x18) GCC_except_table853 [NameNList, MangledNameNList, NList] 
                0x00000001b47926dc (    0x18) GCC_except_table856 [NameNList, MangledNameNList, NList] 
                0x00000001b47926f4 (    0xa8) GCC_except_table863 [NameNList, MangledNameNList, NList] 
                0x00000001b479279c (    0x38) GCC_except_table867 [NameNList, MangledNameNList, NList] 
                0x00000001b47927d4 (    0x14) GCC_except_table868 [NameNList, MangledNameNList, NList] 
                0x00000001b47927e8 (    0x10) GCC_except_table872 [NameNList, MangledNameNList, NList] 
                0x00000001b47927f8 (    0x18) GCC_except_table882 [NameNList, MangledNameNList, NList] 
                0x00000001b4792810 (    0x54) GCC_except_table887 [NameNList, MangledNameNList, NList] 
                0x00000001b4792864 (    0x18) GCC_except_table891 [NameNList, MangledNameNList, NList] 
                0x00000001b479287c (    0x28) GCC_except_table894 [NameNList, MangledNameNList, NList] 
                0x00000001b47928a4 (    0xb4) GCC_except_table901 [NameNList, MangledNameNList, NList] 
                0x00000001b4792958 (    0x38) GCC_except_table905 [NameNList, MangledNameNList, NList] 
                0x00000001b4792990 (    0x1c) GCC_except_table906 [NameNList, MangledNameNList, NList] 
                0x00000001b47929ac (    0x10) GCC_except_table912 [NameNList, MangledNameNList, NList] 
                0x00000001b47929bc (    0x18) GCC_except_table922 [NameNList, MangledNameNList, NList] 
                0x00000001b47929d4 (    0x4c) GCC_except_table927 [NameNList, MangledNameNList, NList] 
                0x00000001b4792a20 (    0x18) GCC_except_table931 [NameNList, MangledNameNList, NList] 
                0x00000001b4792a38 (    0x28) GCC_except_table934 [NameNList, MangledNameNList, NList] 
                0x00000001b4792a60 (    0xb4) GCC_except_table941 [NameNList, MangledNameNList, NList] 
                0x00000001b4792b14 (    0x38) GCC_except_table945 [NameNList, MangledNameNList, NList] 
                0x00000001b4792b4c (    0x1c) GCC_except_table946 [NameNList, MangledNameNList, NList] 
                0x00000001b4792b68 (    0x10) GCC_except_table952 [NameNList, MangledNameNList, NList] 
                0x00000001b4792b78 (    0x18) GCC_except_table962 [NameNList, MangledNameNList, NList] 
                0x00000001b4792b90 (    0x4c) GCC_except_table967 [NameNList, MangledNameNList, NList] 
                0x00000001b4792bdc (    0x18) GCC_except_table971 [NameNList, MangledNameNList, NList] 
                0x00000001b4792bf4 (    0x18) GCC_except_table974 [NameNList, MangledNameNList, NList] 
                0x00000001b4792c0c (    0xa8) GCC_except_table981 [NameNList, MangledNameNList, NList] 
                0x00000001b4792cb4 (    0x38) GCC_except_table985 [NameNList, MangledNameNList, NList] 
                0x00000001b4792cec (    0x14) GCC_except_table986 [NameNList, MangledNameNList, NList] 
                0x00000001b4792d00 (    0x10) GCC_except_table990 [NameNList, MangledNameNList, NList] 
                0x00000001b4792d10 (    0x18) GCC_except_table1000 [NameNList, MangledNameNList, NList] 
                0x00000001b4792d28 (    0x54) GCC_except_table1005 [NameNList, MangledNameNList, NList] 
                0x00000001b4792d7c (    0x18) GCC_except_table1009 [NameNList, MangledNameNList, NList] 
                0x00000001b4792d94 (    0x18) GCC_except_table1012 [NameNList, MangledNameNList, NList] 
                0x00000001b4792dac (    0xa8) GCC_except_table1019 [NameNList, MangledNameNList, NList] 
                0x00000001b4792e54 (    0x38) GCC_except_table1023 [NameNList, MangledNameNList, NList] 
                0x00000001b4792e8c (    0x14) GCC_except_table1024 [NameNList, MangledNameNList, NList] 
                0x00000001b4792ea0 (    0x10) GCC_except_table1028 [NameNList, MangledNameNList, NList] 
                0x00000001b4792eb0 (    0x18) GCC_except_table1038 [NameNList, MangledNameNList, NList] 
                0x00000001b4792ec8 (    0x10) GCC_except_table1172 [NameNList, MangledNameNList, NList] 
                0x00000001b4792ed8 (    0x10) GCC_except_table1174 [NameNList, MangledNameNList, NList] 
                0x00000001b4792ee8 (    0x10) GCC_except_table1181 [NameNList, MangledNameNList, NList] 
                0x00000001b4792ef8 (    0x10) GCC_except_table1188 [NameNList, MangledNameNList, NList] 
                0x00000001b4792f08 (    0x10) GCC_except_table1189 [NameNList, MangledNameNList, NList] 
                0x00000001b4792f18 (    0x10) GCC_except_table1190 [NameNList, MangledNameNList, NList] 
                0x00000001b4792f28 (    0x10) GCC_except_table1196 [NameNList, MangledNameNList, NList] 
                0x00000001b4792f38 (    0x10) GCC_except_table1223 [NameNList, MangledNameNList, NList] 
                0x00000001b4792f48 (    0x10) GCC_except_table1224 [NameNList, MangledNameNList, NList] 
                0x00000001b4792f58 (    0x10) GCC_except_table1225 [NameNList, MangledNameNList, NList] 
                0x00000001b4792f68 (    0x10) GCC_except_table1230 [NameNList, MangledNameNList, NList] 
                0x00000001b4792f78 (    0x10) GCC_except_table1231 [NameNList, MangledNameNList, NList] 
                0x00000001b4792f88 (    0x10) GCC_except_table1232 [NameNList, MangledNameNList, NList] 
                0x00000001b4792f98 (    0x10) GCC_except_table1236 [NameNList, MangledNameNList, NList] 
                0x00000001b4792fa8 (    0x10) GCC_except_table1237 [NameNList, MangledNameNList, NList] 
                0x00000001b4792fb8 (    0x10) GCC_except_table1238 [NameNList, MangledNameNList, NList] 
                0x00000001b4792fc8 (    0x10) GCC_except_table1242 [NameNList, MangledNameNList, NList] 
                0x00000001b4792fd8 (    0x10) GCC_except_table1243 [NameNList, MangledNameNList, NList] 
                0x00000001b4792fe8 (    0x10) GCC_except_table1244 [NameNList, MangledNameNList, NList] 
                0x00000001b4792ff8 (    0x10) GCC_except_table1249 [NameNList, MangledNameNList, NList] 
                0x00000001b4793008 (    0x10) GCC_except_table1250 [NameNList, MangledNameNList, NList] 
                0x00000001b4793018 (    0x10) GCC_except_table1251 [NameNList, MangledNameNList, NList] 
                0x00000001b4793028 (    0x10) GCC_except_table1255 [NameNList, MangledNameNList, NList] 
                0x00000001b4793038 (    0x10) GCC_except_table1256 [NameNList, MangledNameNList, NList] 
                0x00000001b4793048 (    0x10) GCC_except_table1257 [NameNList, MangledNameNList, NList] 
                0x00000001b4793058 (    0x10) GCC_except_table1261 [NameNList, MangledNameNList, NList] 
                0x00000001b4793068 (    0x10) GCC_except_table1262 [NameNList, MangledNameNList, NList] 
                0x00000001b4793078 (    0x10) GCC_except_table1263 [NameNList, MangledNameNList, NList] 
                0x00000001b4793088 (    0x10) GCC_except_table1267 [NameNList, MangledNameNList, NList] 
                0x00000001b4793098 (    0x10) GCC_except_table1268 [NameNList, MangledNameNList, NList] 
                0x00000001b47930a8 (    0x10) GCC_except_table1269 [NameNList, MangledNameNList, NList] 
                0x00000001b47930b8 (    0x10) GCC_except_table1274 [NameNList, MangledNameNList, NList] 
                0x00000001b47930c8 (    0x10) GCC_except_table1275 [NameNList, MangledNameNList, NList] 
                0x00000001b47930d8 (    0x10) GCC_except_table1276 [NameNList, MangledNameNList, NList] 
                0x00000001b47930e8 (    0x10) GCC_except_table1280 [NameNList, MangledNameNList, NList] 
                0x00000001b47930f8 (    0x10) GCC_except_table1281 [NameNList, MangledNameNList, NList] 
                0x00000001b4793108 (    0x10) GCC_except_table1282 [NameNList, MangledNameNList, NList] 
                0x00000001b4793118 (    0x10) GCC_except_table1286 [NameNList, MangledNameNList, NList] 
                0x00000001b4793128 (    0x10) GCC_except_table1287 [NameNList, MangledNameNList, NList] 
                0x00000001b4793138 (    0x10) GCC_except_table1288 [NameNList, MangledNameNList, NList] 
                0x00000001b4793148 (    0x10) GCC_except_table1292 [NameNList, MangledNameNList, NList] 
                0x00000001b4793158 (    0x10) GCC_except_table1293 [NameNList, MangledNameNList, NList] 
                0x00000001b4793168 (    0x10) GCC_except_table1294 [NameNList, MangledNameNList, NList] 
                0x00000001b4793178 (    0x10) GCC_except_table1298 [NameNList, MangledNameNList, NList] 
                0x00000001b4793188 (    0x10) GCC_except_table1299 [NameNList, MangledNameNList, NList] 
                0x00000001b4793198 (    0x10) GCC_except_table1300 [NameNList, MangledNameNList, NList] 
                0x00000001b47931a8 (    0x10) GCC_except_table1304 [NameNList, MangledNameNList, NList] 
                0x00000001b47931b8 (    0x10) GCC_except_table1305 [NameNList, MangledNameNList, NList] 
                0x00000001b47931c8 (    0x10) GCC_except_table1306 [NameNList, MangledNameNList, NList] 
                0x00000001b47931d8 (    0x10) GCC_except_table1311 [NameNList, MangledNameNList, NList] 
                0x00000001b47931e8 (    0x10) GCC_except_table1312 [NameNList, MangledNameNList, NList] 
                0x00000001b47931f8 (    0x10) GCC_except_table1313 [NameNList, MangledNameNList, NList] 
                0x00000001b4793208 (    0x10) GCC_except_table1318 [NameNList, MangledNameNList, NList] 
                0x00000001b4793218 (    0x10) GCC_except_table1319 [NameNList, MangledNameNList, NList] 
                0x00000001b4793228 (    0x10) GCC_except_table1320 [NameNList, MangledNameNList, NList] 
                0x00000001b4793238 (    0x10) GCC_except_table1324 [NameNList, MangledNameNList, NList] 
                0x00000001b4793248 (    0x10) GCC_except_table1325 [NameNList, MangledNameNList, NList] 
                0x00000001b4793258 (    0x10) GCC_except_table1326 [NameNList, MangledNameNList, NList] 
                0x00000001b4793268 (    0x10) GCC_except_table1330 [NameNList, MangledNameNList, NList] 
                0x00000001b4793278 (    0x10) GCC_except_table1331 [NameNList, MangledNameNList, NList] 
                0x00000001b4793288 (    0x10) GCC_except_table1332 [NameNList, MangledNameNList, NList] 
                0x00000001b4793298 (    0x10) GCC_except_table1336 [NameNList, MangledNameNList, NList] 
                0x00000001b47932a8 (    0x10) GCC_except_table1337 [NameNList, MangledNameNList, NList] 
                0x00000001b47932b8 (    0x10) GCC_except_table1338 [NameNList, MangledNameNList, NList] 
                0x00000001b47932c8 (    0x10) GCC_except_table1342 [NameNList, MangledNameNList, NList] 
                0x00000001b47932d8 (    0x10) GCC_except_table1343 [NameNList, MangledNameNList, NList] 
                0x00000001b47932e8 (    0x10) GCC_except_table1344 [NameNList, MangledNameNList, NList] 
                0x00000001b47932f8 (    0x10) GCC_except_table1348 [NameNList, MangledNameNList, NList] 
                0x00000001b4793308 (    0x10) GCC_except_table1349 [NameNList, MangledNameNList, NList] 
                0x00000001b4793318 (    0x10) GCC_except_table1350 [NameNList, MangledNameNList, NList] 
                0x00000001b4793328 (    0x10) GCC_except_table1354 [NameNList, MangledNameNList, NList] 
                0x00000001b4793338 (    0x10) GCC_except_table1355 [NameNList, MangledNameNList, NList] 
                0x00000001b4793348 (    0x10) GCC_except_table1356 [NameNList, MangledNameNList, NList] 
                0x00000001b4793358 (    0x10) GCC_except_table1360 [NameNList, MangledNameNList, NList] 
                0x00000001b4793368 (    0x10) GCC_except_table1361 [NameNList, MangledNameNList, NList] 
                0x00000001b4793378 (    0x10) GCC_except_table1362 [NameNList, MangledNameNList, NList] 
                0x00000001b4793388 (    0x10) GCC_except_table1366 [NameNList, MangledNameNList, NList] 
                0x00000001b4793398 (    0x10) GCC_except_table1367 [NameNList, MangledNameNList, NList] 
                0x00000001b47933a8 (    0x10) GCC_except_table1368 [NameNList, MangledNameNList, NList] 
                0x00000001b47933b8 (    0x10) GCC_except_table1372 [NameNList, MangledNameNList, NList] 
                0x00000001b47933c8 (    0x10) GCC_except_table1373 [NameNList, MangledNameNList, NList] 
                0x00000001b47933d8 (    0x10) GCC_except_table1374 [NameNList, MangledNameNList, NList] 
                0x00000001b47933e8 (    0x18) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001b4793400 (   0x118) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x00000001b4793518 (    0x18) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x00000001b4793530 (    0xe0) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x00000001b4793610 (    0xdc) GCC_except_table10 [NameNList, MangledNameNList, NList] 
                0x00000001b47936ec (   0x10c) GCC_except_table17 [NameNList, MangledNameNList, NList] 
                0x00000001b47937f8 (    0x10) GCC_except_table31 [NameNList, MangledNameNList, NList] 
                0x00000001b4793808 (    0x20) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x00000001b4793828 (    0x40) GCC_except_table23 [NameNList, MangledNameNList, NList] 
                0x00000001b4793868 (    0x10) GCC_except_table25 [NameNList, MangledNameNList, NList] 
                0x00000001b4793878 (    0x14) GCC_except_table26 [NameNList, MangledNameNList, NList] 
                0x00000001b479388c (    0x10) GCC_except_table37 [NameNList, MangledNameNList, NList] 
                0x00000001b479389c (    0x10) GCC_except_table41 [NameNList, MangledNameNList, NList] 
                0x00000001b47938ac (    0x14) GCC_except_table45 [NameNList, MangledNameNList, NList] 
                0x00000001b47938c0 (    0x14) GCC_except_table50 [NameNList, MangledNameNList, NList] 
                0x00000001b47938d4 (    0x18) GCC_except_table55 [NameNList, MangledNameNList, NList] 
                0x00000001b47938ec (    0x10) GCC_except_table65 [NameNList, MangledNameNList, NList] 
                0x00000001b47938fc (    0x2c) GCC_except_table66 [NameNList, MangledNameNList, NList] 
                0x00000001b4793928 (    0x10) GCC_except_table67 [NameNList, MangledNameNList, NList] 
                0x00000001b4793938 (    0x10) GCC_except_table72 [NameNList, MangledNameNList, NList] 
                0x00000001b4793948 (    0x18) GCC_except_table78 [NameNList, MangledNameNList, NList] 
                0x00000001b4793960 (    0x70) GCC_except_table82 [NameNList, MangledNameNList, NList] 
                0x00000001b47939d0 (    0x10) GCC_except_table110 [NameNList, MangledNameNList, NList] 
                0x00000001b47939e0 (    0x10) GCC_except_table111 [NameNList, MangledNameNList, NList] 
                0x00000001b47939f0 (    0x10) GCC_except_table114 [NameNList, MangledNameNList, NList] 
                0x00000001b4793a00 (    0x18) GCC_except_table118 [NameNList, MangledNameNList, NList] 
                0x00000001b4793a18 (    0x10) GCC_except_table123 [NameNList, MangledNameNList, NList] 
                0x00000001b4793a28 (    0x18) GCC_except_table127 [NameNList, MangledNameNList, NList] 
                0x00000001b4793a40 (    0x10) GCC_except_table131 [NameNList, MangledNameNList, NList] 
                0x00000001b4793a50 (    0x10) GCC_except_table132 [NameNList, MangledNameNList, NList] 
                0x00000001b4793a60 (    0x10) GCC_except_table133 [NameNList, MangledNameNList, NList] 
                0x00000001b4793a70 (    0x14) GCC_except_table138 [NameNList, MangledNameNList, NList] 
                0x00000001b4793a84 (    0x14) GCC_except_table144 [NameNList, MangledNameNList, NList] 
                0x00000001b4793a98 (    0x24) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001b4793abc (   0x158) GCC_except_table19 [NameNList, MangledNameNList, NList] 
                0x00000001b4793c14 (    0x18) GCC_except_table20 [NameNList, MangledNameNList, NList] 
                0x00000001b4793c2c (    0x18) GCC_except_table21 [NameNList, MangledNameNList, NList] 
                0x00000001b4793c44 (    0x4c) GCC_except_table32 [NameNList, MangledNameNList, NList] 
                0x00000001b4793c90 (    0x10) GCC_except_table34 [NameNList, MangledNameNList, NList] 
                0x00000001b4793ca0 (    0x10) GCC_except_table88 [NameNList, MangledNameNList, NList] 
                0x00000001b4793cb0 (    0x18) GCC_except_table90 [NameNList, MangledNameNList, NList] 
                0x00000001b4793cc8 (    0x14) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x00000001b4793cdc (    0xd8) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001b4793db4 (    0xcc) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x00000001b4793e80 (    0x10) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x00000001b4793e90 (    0xcc) GCC_except_table12 [NameNList, MangledNameNList, NList] 
                0x00000001b4793f5c (    0x1c) GCC_except_table14 [NameNList, MangledNameNList, NList] 
                0x00000001b4793f78 (   0x13c) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001b47940b4 (    0x10) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x00000001b47940c4 (    0x10) GCC_except_table11 [NameNList, MangledNameNList, NList] 
                0x00000001b47940d4 (    0x4c) GCC_except_table14 [NameNList, MangledNameNList, NList] 
                0x00000001b4794120 (    0xe0) GCC_except_table17 [NameNList, MangledNameNList, NList] 
                0x00000001b4794200 (    0x54) GCC_except_table18 [NameNList, MangledNameNList, NList] 
                0x00000001b4794254 (    0xbc) GCC_except_table19 [NameNList, MangledNameNList, NList] 
                0x00000001b4794310 (    0xa0) GCC_except_table20 [NameNList, MangledNameNList, NList] 
                0x00000001b47943b0 (    0x1c) GCC_except_table21 [NameNList, MangledNameNList, NList] 
                0x00000001b47943cc (    0x34) GCC_except_table22 [NameNList, MangledNameNList, NList] 
                0x00000001b4794400 (    0x1c) GCC_except_table27 [NameNList, MangledNameNList, NList] 
                0x00000001b479441c (    0x10) GCC_except_table50 [NameNList, MangledNameNList, NList] 
                0x00000001b479442c (     0xc) GCC_except_table72 [NameNList, MangledNameNList, NList] 
                0x00000001b4794438 (     0xc) GCC_except_table98 [NameNList, MangledNameNList, NList] 
                0x00000001b4794444 (    0xb8) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001b47944fc (    0x88) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x00000001b4794584 (    0x14) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x00000001b4794598 (    0x7c) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x00000001b4794614 (    0x2c) GCC_except_table10 [NameNList, MangledNameNList, NList] 
                0x00000001b4794640 (    0x1c) GCC_except_table11 [NameNList, MangledNameNList, NList] 
                0x00000001b479465c (    0x4c) GCC_except_table12 [NameNList, MangledNameNList, NList] 
                0x00000001b47946a8 (    0x38) GCC_except_table14 [NameNList, MangledNameNList, NList] 
                0x00000001b47946e0 (    0xc4) GCC_except_table15 [NameNList, MangledNameNList, NList] 
                0x00000001b47947a4 (    0x38) GCC_except_table16 [NameNList, MangledNameNList, NList] 
                0x00000001b47947dc (    0x14) GCC_except_table17 [NameNList, MangledNameNList, NList] 
                0x00000001b47947f0 (    0x38) GCC_except_table18 [NameNList, MangledNameNList, NList] 
                0x00000001b4794828 (    0xb4) GCC_except_table23 [NameNList, MangledNameNList, NList] 
                0x00000001b47948dc (    0x4c) GCC_except_table26 [NameNList, MangledNameNList, NList] 
                0x00000001b4794928 (   0x148) GCC_except_table29 [NameNList, MangledNameNList, NList] 
                0x00000001b4794a70 (    0x14) GCC_except_table31 [NameNList, MangledNameNList, NList] 
                0x00000001b4794a84 (    0x24) GCC_except_table32 [NameNList, MangledNameNList, NList] 
                0x00000001b4794aa8 (    0x54) GCC_except_table33 [NameNList, MangledNameNList, NList] 
                0x00000001b4794afc (    0x78) GCC_except_table34 [NameNList, MangledNameNList, NList] 
                0x00000001b4794b74 (    0x54) GCC_except_table35 [NameNList, MangledNameNList, NList] 
                0x00000001b4794bc8 (    0x54) GCC_except_table36 [NameNList, MangledNameNList, NList] 
                0x00000001b4794c1c (    0x10) GCC_except_table40 [NameNList, MangledNameNList, NList] 
                0x00000001b4794c2c (    0x40) GCC_except_table42 [NameNList, MangledNameNList, NList] 
                0x00000001b4794c6c (   0x114) GCC_except_table45 [NameNList, MangledNameNList, NList] 
                0x00000001b4794d80 (    0x1c) GCC_except_table51 [NameNList, MangledNameNList, NList] 
                0x00000001b4794d9c (    0x4c) GCC_except_table52 [NameNList, MangledNameNList, NList] 
                0x00000001b4794de8 (    0x18) GCC_except_table59 [NameNList, MangledNameNList, NList] 
                0x00000001b4794e00 (    0x1c) GCC_except_table62 [NameNList, MangledNameNList, NList] 
                0x00000001b4794e1c (    0x2c) GCC_except_table66 [NameNList, MangledNameNList, NList] 
                0x00000001b4794e48 (    0x1c) GCC_except_table67 [NameNList, MangledNameNList, NList] 
                0x00000001b4794e64 (    0x34) GCC_except_table74 [NameNList, MangledNameNList, NList] 
                0x00000001b4794e98 (    0x10) GCC_except_table171 [NameNList, MangledNameNList, NList] 
                0x00000001b4794ea8 (    0x88) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x00000001b4794f30 (    0x54) GCC_except_table11 [NameNList, MangledNameNList, NList] 
                0x00000001b4794f84 (    0x60) GCC_except_table13 [NameNList, MangledNameNList, NList] 
                0x00000001b4794fe4 (    0x18) GCC_except_table14 [NameNList, MangledNameNList, NList] 
                0x00000001b4794ffc (    0x58) GCC_except_table15 [NameNList, MangledNameNList, NList] 
                0x00000001b4795054 (    0x58) GCC_except_table22 [NameNList, MangledNameNList, NList] 
                0x00000001b47950ac (    0x2c) GCC_except_table24 [NameNList, MangledNameNList, NList] 
                0x00000001b47950d8 (    0x18) GCC_except_table27 [NameNList, MangledNameNList, NList] 
                0x00000001b47950f0 (    0x7c) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x00000001b479516c (    0x20) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x00000001b479518c (    0x20) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x00000001b47951ac (    0x20) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x00000001b47951cc (    0x20) GCC_except_table11 [NameNList, MangledNameNList, NList] 
                0x00000001b47951ec (    0x6c) GCC_except_table23 [NameNList, MangledNameNList, NList] 
                0x00000001b4795258 (    0x60) GCC_except_table24 [NameNList, MangledNameNList, NList] 
                0x00000001b47952b8 (    0x14) GCC_except_table26 [NameNList, MangledNameNList, NList] 
                0x00000001b47952cc (    0x14) GCC_except_table27 [NameNList, MangledNameNList, NList] 
                0x00000001b47952e0 (    0x14) GCC_except_table29 [NameNList, MangledNameNList, NList] 
                0x00000001b47952f4 (    0x28) GCC_except_table30 [NameNList, MangledNameNList, NList] 
                0x00000001b479531c (    0x10) GCC_except_table36 [NameNList, MangledNameNList, NList] 
                0x00000001b479532c (    0x10) GCC_except_table39 [NameNList, MangledNameNList, NList] 
                0x00000001b479533c (    0x10) GCC_except_table40 [NameNList, MangledNameNList, NList] 
                0x00000001b479534c (    0x18) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001b4795364 (    0x10) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x00000001b4795374 (    0x24) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001b4795398 (   0x118) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x00000001b47954b0 (    0x18) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x00000001b47954c8 (    0xe8) GCC_except_table13 [NameNList, MangledNameNList, NList] 
                0x00000001b47955b0 (   0x134) GCC_except_table16 [NameNList, MangledNameNList, NList] 
                0x00000001b47956e4 (    0x14) GCC_except_table31 [NameNList, MangledNameNList, NList] 
                0x00000001b47956f8 (     0xc) GCC_except_table32 [NameNList, MangledNameNList, NList] 
                0x00000001b4795704 (    0x1c) GCC_except_table51 [NameNList, MangledNameNList, NList] 
                0x00000001b4795720 (    0x18) GCC_except_table23 [NameNList, MangledNameNList, NList] 
                0x00000001b4795738 (    0x14) GCC_except_table24 [NameNList, MangledNameNList, NList] 
                0x00000001b479574c (    0x54) GCC_except_table26 [NameNList, MangledNameNList, NList] 
                0x00000001b47957a0 (    0x10) GCC_except_table46 [NameNList, MangledNameNList, NList] 
                0x00000001b47957b0 (    0x54) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x00000001b4795804 (    0x20) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001b4795824 (    0x28) GCC_except_table17 [NameNList, MangledNameNList, NList] 
                0x00000001b479584c (    0x18) GCC_except_table20 [NameNList, MangledNameNList, NList] 
                0x00000001b4795864 (    0x10) GCC_except_table41 [NameNList, MangledNameNList, NList] 
                0x00000001b4795874 (    0x18) GCC_except_table42 [NameNList, MangledNameNList, NList] 
                0x00000001b479588c (    0x34) GCC_except_table43 [NameNList, MangledNameNList, NList] 
                0x00000001b47958c0 (    0x9c) GCC_except_table44 [NameNList, MangledNameNList, NList] 
                0x00000001b479595c (    0x20) GCC_except_table46 [NameNList, MangledNameNList, NList] 
                0x00000001b479597c (    0x10) GCC_except_table47 [NameNList, MangledNameNList, NList] 
                0x00000001b479598c (    0x7c) GCC_except_table49 [NameNList, MangledNameNList, NList] 
                0x00000001b4795a08 (   0x25c) GCC_except_table51 [NameNList, MangledNameNList, NList] 
                0x00000001b4795c64 (    0x1c) GCC_except_table62 [NameNList, MangledNameNList, NList] 
                0x00000001b4795c80 (    0x14) GCC_except_table63 [NameNList, MangledNameNList, NList] 
                0x00000001b4795c94 (    0x1c) GCC_except_table75 [NameNList, MangledNameNList, NList] 
                0x00000001b4795cb0 (    0x14) GCC_except_table76 [NameNList, MangledNameNList, NList] 
                0x00000001b4795cc4 (    0x20) GCC_except_table86 [NameNList, MangledNameNList, NList] 
                0x00000001b4795ce4 (    0x10) GCC_except_table131 [NameNList, MangledNameNList, NList] 
                0x00000001b4795cf4 (    0x10) GCC_except_table136 [NameNList, MangledNameNList, NList] 
                0x00000001b4795d04 (    0x10) GCC_except_table140 [NameNList, MangledNameNList, NList] 
                0x00000001b4795d14 (    0x10) GCC_except_table144 [NameNList, MangledNameNList, NList] 
                0x00000001b4795d24 (    0x14) GCC_except_table155 [NameNList, MangledNameNList, NList] 
                0x00000001b4795d38 (    0x28) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x00000001b4795d60 (    0x10) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x00000001b4795d70 (    0x44) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x00000001b4795db4 (    0x14) GCC_except_table16 [NameNList, MangledNameNList, NList] 
                0x00000001b4795dc8 (    0x10) GCC_except_table29 [NameNList, MangledNameNList, NList] 
                0x00000001b4795dd8 (    0x10) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x00000001b4795de8 (    0x10) GCC_except_table19 [NameNList, MangledNameNList, NList] 
                0x00000001b4795df8 (    0x30) GCC_except_table24 [NameNList, MangledNameNList, NList] 
                0x00000001b4795e28 (    0xf4) GCC_except_table28 [NameNList, MangledNameNList, NList] 
                0x00000001b4795f1c (    0x24) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001b4795f40 (    0x1c) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x00000001b4795f5c (   0x340) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x00000001b479629c (    0x14) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001b47962b0 (    0x14) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x00000001b47962c4 (    0x10) GCC_except_table10 [NameNList, MangledNameNList, NList] 
                0x00000001b47962d4 (    0x48) GCC_except_table12 [NameNList, MangledNameNList, NList] 
                0x00000001b479631c (    0x48) GCC_except_table13 [NameNList, MangledNameNList, NList] 
                0x00000001b4796364 (    0x14) GCC_except_table14 [NameNList, MangledNameNList, NList] 
                0x00000001b4796378 (    0x10) GCC_except_table16 [NameNList, MangledNameNList, NList] 
                0x00000001b4796388 (    0x1c) GCC_except_table17 [NameNList, MangledNameNList, NList] 
                0x00000001b47963a4 (   0x280) GCC_except_table19 [NameNList, MangledNameNList, NList] 
                0x00000001b4796624 (    0x50) GCC_except_table27 [NameNList, MangledNameNList, NList] 
                0x00000001b4796674 (    0x10) GCC_except_table38 [NameNList, MangledNameNList, NList] 
                0x00000001b4796684 (    0x10) GCC_except_table54 [NameNList, MangledNameNList, NList] 
                0x00000001b4796694 (    0x10) GCC_except_table61 [NameNList, MangledNameNList, NList] 
                0x00000001b47966a4 (    0x10) GCC_except_table67 [NameNList, MangledNameNList, NList] 
                0x00000001b47966b4 (    0x20) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001b47966d4 (    0x10) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x00000001b47966e4 (    0x7c) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x00000001b4796760 (    0x1c) GCC_except_table17 [NameNList, MangledNameNList, NList] 
                0x00000001b479677c (   0x14c) GCC_except_table18 [NameNList, MangledNameNList, NList] 
                0x00000001b47968c8 (    0x28) GCC_except_table19 [NameNList, MangledNameNList, NList] 
                0x00000001b47968f0 (    0x70) GCC_except_table20 [NameNList, MangledNameNList, NList] 
                0x00000001b4796960 (    0x18) GCC_except_table36 [NameNList, MangledNameNList, NList] 
                0x00000001b4796978 (    0x48) GCC_except_table37 [NameNList, MangledNameNList, NList] 
                0x00000001b47969c0 (    0x18) GCC_except_table40 [NameNList, MangledNameNList, NList] 
                0x00000001b47969d8 (    0x48) GCC_except_table41 [NameNList, MangledNameNList, NList] 
                0x00000001b4796a20 (    0x14) GCC_except_table43 [NameNList, MangledNameNList, NList] 
                0x00000001b4796a34 (    0x14) GCC_except_table44 [NameNList, MangledNameNList, NList] 
                0x00000001b4796a48 (    0x14) GCC_except_table47 [NameNList, MangledNameNList, NList] 
                0x00000001b4796a5c (    0x10) GCC_except_table71 [NameNList, MangledNameNList, NList] 
                0x00000001b4796a6c (    0x14) GCC_except_table74 [NameNList, MangledNameNList, NList] 
                0x00000001b4796a80 (    0x24) GCC_except_table77 [NameNList, MangledNameNList, NList] 
                0x00000001b4796aa4 (    0x1c) GCC_except_table78 [NameNList, MangledNameNList, NList] 
                0x00000001b4796ac0 (    0x24) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x00000001b4796ae4 (    0x1c) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x00000001b4796b00 (    0x10) GCC_except_table11 [NameNList, MangledNameNList, NList] 
                0x00000001b4796b10 (    0x34) GCC_except_table24 [NameNList, MangledNameNList, NList] 
                0x00000001b4796b44 (    0x1c) GCC_except_table25 [NameNList, MangledNameNList, NList] 
                0x00000001b4796b60 (    0x1c) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x00000001b4796b7c (    0x1c) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x00000001b4796b98 (    0x14) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x00000001b4796bac (    0x14) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x00000001b4796bc0 (    0x34) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x00000001b4796bf4 (    0x14) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001b4796c08 (   0x184) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x00000001b4796d8c (    0x10) GCC_except_table11 [NameNList, MangledNameNList, NList] 
                0x00000001b4796d9c (    0x40) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x00000001b4796ddc (    0x10) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001b4796dec (    0xec) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x00000001b4796ed8 (    0x14) GCC_except_table24 [NameNList, MangledNameNList, NList] 
                0x00000001b4796eec (    0x14) GCC_except_table34 [NameNList, MangledNameNList, NList] 
                0x00000001b4796f00 (    0x24) GCC_except_table38 [NameNList, MangledNameNList, NList] 
                0x00000001b4796f24 (    0x58) GCC_except_table40 [NameNList, MangledNameNList, NList] 
                0x00000001b4796f7c (    0xa4) GCC_except_table45 [NameNList, MangledNameNList, NList] 
                0x00000001b4797020 (    0x10) GCC_except_table48 [NameNList, MangledNameNList, NList] 
                0x00000001b4797030 (    0x28) GCC_except_table52 [NameNList, MangledNameNList, NList] 
                0x00000001b4797058 (    0x24) GCC_except_table76 [NameNList, MangledNameNList, NList] 
                0x00000001b479707c (    0x10) GCC_except_table82 [NameNList, MangledNameNList, NList] 
                0x00000001b479708c (    0x10) GCC_except_table96 [NameNList, MangledNameNList, NList] 
                0x00000001b479709c (    0x10) GCC_except_table98 [NameNList, MangledNameNList, NList] 
                0x00000001b47970ac (    0x60) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x00000001b479710c (    0x14) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001b4797120 (    0xc8) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x00000001b47971e8 (    0x40) GCC_except_table11 [NameNList, MangledNameNList, NList] 
                0x00000001b4797228 (    0x20) GCC_except_table14 [NameNList, MangledNameNList, NList] 
                0x00000001b4797248 (    0x28) GCC_except_table15 [NameNList, MangledNameNList, NList] 
                0x00000001b4797270 (    0x3c) GCC_except_table19 [NameNList, MangledNameNList, NList] 
                0x00000001b47972ac (   0x940) GCC_except_table21 [NameNList, MangledNameNList, NList] 
                0x00000001b4797bec (    0x28) GCC_except_table32 [NameNList, MangledNameNList, NList] 
                0x00000001b4797c14 (    0x14) GCC_except_table39 [NameNList, MangledNameNList, NList] 
                0x00000001b4797c28 (    0x74) GCC_except_table41 [NameNList, MangledNameNList, NList] 
                0x00000001b4797c9c (    0x14) GCC_except_table42 [NameNList, MangledNameNList, NList] 
                0x00000001b4797cb0 (    0x58) GCC_except_table43 [NameNList, MangledNameNList, NList] 
                0x00000001b4797d08 (    0x14) GCC_except_table45 [NameNList, MangledNameNList, NList] 
                0x00000001b4797d1c (    0x7c) GCC_except_table46 [NameNList, MangledNameNList, NList] 
                0x00000001b4797d98 (    0x20) GCC_except_table47 [NameNList, MangledNameNList, NList] 
                0x00000001b4797db8 (    0x14) GCC_except_table49 [NameNList, MangledNameNList, NList] 
                0x00000001b4797dcc (    0x40) GCC_except_table51 [NameNList, MangledNameNList, NList] 
                0x00000001b4797e0c (   0x13c) GCC_except_table54 [NameNList, MangledNameNList, NList] 
                0x00000001b4797f48 (    0x10) GCC_except_table58 [NameNList, MangledNameNList, NList] 
                0x00000001b4797f58 (    0xd8) GCC_except_table60 [NameNList, MangledNameNList, NList] 
                0x00000001b4798030 (    0xa8) GCC_except_table63 [NameNList, MangledNameNList, NList] 
                0x00000001b47980d8 (    0x24) GCC_except_table96 [NameNList, MangledNameNList, NList] 
                0x00000001b47980fc (    0x14) GCC_except_table97 [NameNList, MangledNameNList, NList] 
                0x00000001b4798110 (     0xc) GCC_except_table107 [NameNList, MangledNameNList, NList] 
                0x00000001b479811c (     0xc) GCC_except_table111 [NameNList, MangledNameNList, NList] 
                0x00000001b4798128 (    0x10) GCC_except_table137 [NameNList, MangledNameNList, NList] 
                0x00000001b4798138 (    0x10) GCC_except_table147 [NameNList, MangledNameNList, NList] 
                0x00000001b4798148 (    0x14) GCC_except_table156 [NameNList, MangledNameNList, NList] 
                0x00000001b479815c (    0x10) GCC_except_table161 [NameNList, MangledNameNList, NList] 
                0x00000001b479816c (    0x18) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x00000001b4798184 (    0x18) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x00000001b479819c (    0x14) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x00000001b47981b0 (    0x20) GCC_except_table12 [NameNList, MangledNameNList, NList] 
                0x00000001b47981d0 (    0x48) GCC_except_table14 [NameNList, MangledNameNList, NList] 
                0x00000001b4798218 (    0x20) GCC_except_table23 [NameNList, MangledNameNList, NList] 
                0x00000001b4798238 (    0x1c) GCC_except_table24 [NameNList, MangledNameNList, NList] 
                0x00000001b4798254 (    0x14) GCC_except_table25 [NameNList, MangledNameNList, NList] 
                0x00000001b4798268 (    0x14) GCC_except_table27 [NameNList, MangledNameNList, NList] 
                0x00000001b479827c (    0x10) GCC_except_table28 [NameNList, MangledNameNList, NList] 
                0x00000001b479828c (    0x24) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001b47982b0 (    0x10) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x00000001b47982c0 (    0x2c) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x00000001b47982ec (    0x38) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x00000001b4798324 (    0xb8) GCC_except_table14 [NameNList, MangledNameNList, NList] 
                0x00000001b47983dc (   0x144) GCC_except_table15 [NameNList, MangledNameNList, NList] 
                0x00000001b4798520 (    0x38) GCC_except_table16 [NameNList, MangledNameNList, NList] 
                0x00000001b4798558 (    0x9c) GCC_except_table17 [NameNList, MangledNameNList, NList] 
                0x00000001b47985f4 (    0x1c) GCC_except_table20 [NameNList, MangledNameNList, NList] 
                0x00000001b4798610 (    0x14) GCC_except_table22 [NameNList, MangledNameNList, NList] 
                0x00000001b4798624 (    0xb8) GCC_except_table27 [NameNList, MangledNameNList, NList] 
                0x00000001b47986dc (    0x10) GCC_except_table35 [NameNList, MangledNameNList, NList] 
                0x00000001b47986ec (    0x28) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001b4798714 (    0x24) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x00000001b4798738 (    0x28) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001b4798760 (    0x28) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x00000001b4798788 (    0x28) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x00000001b47987b0 (    0x28) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x00000001b47987d8 (    0x14) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x00000001b47987ec (    0x34) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x00000001b4798820 (    0x1c) GCC_except_table10 [NameNList, MangledNameNList, NList] 
                0x00000001b479883c (    0x20) GCC_except_table11 [NameNList, MangledNameNList, NList] 
                0x00000001b479885c (    0x28) GCC_except_table12 [NameNList, MangledNameNList, NList] 
                0x00000001b4798884 (    0x1c) GCC_except_table13 [NameNList, MangledNameNList, NList] 
                0x00000001b47988a0 (   0x110) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x00000001b47989b0 (     0xc) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x00000001b47989bc (   0x130) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x00000001b4798aec (    0x14) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x00000001b4798b00 (    0x40) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x00000001b4798b40 (    0x14) GCC_except_table10 [NameNList, MangledNameNList, NList] 
                0x00000001b4798b54 (    0x40) GCC_except_table11 [NameNList, MangledNameNList, NList] 
                0x00000001b4798b94 (    0x14) GCC_except_table21 [NameNList, MangledNameNList, NList] 
                0x00000001b4798ba8 (     0xc) GCC_except_table36 [NameNList, MangledNameNList, NList] 
                0x00000001b4798bb4 (    0x14) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x00000001b4798bc8 (    0x14) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x00000001b4798bdc (    0x14) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001b4798bf0 (    0xe0) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x00000001b4798cd0 (    0x90) GCC_except_table28 [NameNList, MangledNameNList, NList] 
                0x00000001b4798d60 (    0x28) GCC_except_table31 [NameNList, MangledNameNList, NList] 
                0x00000001b4798d88 (    0x20) GCC_except_table32 [NameNList, MangledNameNList, NList] 
                0x00000001b4798da8 (    0xa4) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x00000001b4798e4c (    0x48) GCC_except_table38 [NameNList, MangledNameNList, NList] 
                0x00000001b4798e94 (    0x10) GCC_except_table39 [NameNList, MangledNameNList, NList] 
                0x00000001b4798ea4 (    0x10) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x00000001b4798eb4 (    0x14) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x00000001b4798ec8 (    0x14) GCC_except_table12 [NameNList, MangledNameNList, NList] 
                0x00000001b4798edc (    0x10) GCC_except_table18 [NameNList, MangledNameNList, NList] 
                0x00000001b4798eec (    0x14) GCC_except_table24 [NameNList, MangledNameNList, NList] 
                0x00000001b4798f00 (    0x18) GCC_except_table25 [NameNList, MangledNameNList, NList] 
                0x00000001b4798f18 (    0x10) GCC_except_table32 [NameNList, MangledNameNList, NList] 
                0x00000001b4798f28 (    0x74) GCC_except_table41 [NameNList, MangledNameNList, NList] 
                0x00000001b4798f9c (    0x58) GCC_except_table44 [NameNList, MangledNameNList, NList] 
                0x00000001b4798ff4 (    0x2c) GCC_except_table47 [NameNList, MangledNameNList, NList] 
                0x00000001b4799020 (   0x114) GCC_except_table56 [NameNList, MangledNameNList, NList] 
                0x00000001b4799134 (    0x14) GCC_except_table58 [NameNList, MangledNameNList, NList] 
                0x00000001b4799148 (    0x28) GCC_except_table62 [NameNList, MangledNameNList, NList] 
                0x00000001b4799170 (    0x44) GCC_except_table65 [NameNList, MangledNameNList, NList] 
                0x00000001b47991b4 (    0x10) GCC_except_table82 [NameNList, MangledNameNList, NList] 
                0x00000001b47991c4 (    0xdc) GCC_except_table85 [NameNList, MangledNameNList, NList] 
                0x00000001b47992a0 (    0x14) GCC_except_table86 [NameNList, MangledNameNList, NList] 
                0x00000001b47992b4 (    0x1c) GCC_except_table94 [NameNList, MangledNameNList, NList] 
                0x00000001b47992d0 (    0x20) GCC_except_table131 [NameNList, MangledNameNList, NList] 
                0x00000001b47992f0 (    0x10) GCC_except_table143 [NameNList, MangledNameNList, NList] 
                0x00000001b4799300 (    0x24) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x00000001b4799324 (    0x30) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x00000001b4799354 (    0x7c) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x00000001b47993d0 (    0x24) GCC_except_table11 [NameNList, MangledNameNList, NList] 
                0x00000001b47993f4 (    0x50) GCC_except_table12 [NameNList, MangledNameNList, NList] 
                0x00000001b4799444 (    0x28) GCC_except_table13 [NameNList, MangledNameNList, NList] 
                0x00000001b479946c (    0x6c) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x00000001b47994d8 (    0x10) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x00000001b47994e8 (    0x10) GCC_except_table14 [NameNList, MangledNameNList, NList] 
                0x00000001b47994f8 (    0x10) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x00000001b4799508 (    0x78) GCC_except_table19 [NameNList, MangledNameNList, NList] 
                0x00000001b4799580 (    0x38) GCC_except_table22 [NameNList, MangledNameNList, NList] 
                0x00000001b47995b8 (   0x27c) GCC_except_table26 [NameNList, MangledNameNList, NList] 
                0x00000001b4799834 (    0x24) GCC_except_table28 [NameNList, MangledNameNList, NList] 
                0x00000001b4799858 (    0x10) GCC_except_table29 [NameNList, MangledNameNList, NList] 
                0x00000001b4799868 (    0x10) GCC_except_table34 [NameNList, MangledNameNList, NList] 
                0x00000001b4799878 (    0x10) GCC_except_table35 [NameNList, MangledNameNList, NList] 
                0x00000001b4799888 (   0x210) GCC_except_table126 [NameNList, MangledNameNList, NList] 
                0x00000001b4799a98 (    0x24) GCC_except_table139 [NameNList, MangledNameNList, NList] 
                0x00000001b4799abc (    0x48) GCC_except_table140 [NameNList, MangledNameNList, NList] 
                0x00000001b4799b04 (    0x10) GCC_except_table172 [NameNList, MangledNameNList, NList] 
                0x00000001b4799b14 (    0x10) GCC_except_table173 [NameNList, MangledNameNList, NList] 
                0x00000001b4799b24 (    0x10) GCC_except_table188 [NameNList, MangledNameNList, NList] 
                0x00000001b4799b34 (    0x10) GCC_except_table19 [NameNList, MangledNameNList, NList] 
                0x00000001b4799b44 (    0x10) GCC_except_table55 [NameNList, MangledNameNList, NList] 
                0x00000001b4799b54 (   0x174) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001b4799cc8 (    0x10) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x00000001b4799cd8 (    0x14) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x00000001b4799cec (     0xc) GCC_except_table17 [NameNList, MangledNameNList, NList] 
                0x00000001b4799cf8 (     0xc) GCC_except_table18 [NameNList, MangledNameNList, NList] 
                0x00000001b4799d04 (    0x50) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x00000001b4799d54 (    0x10) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001b4799d64 (   0x1a4) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x00000001b4799f08 (    0x14) GCC_except_table10 [NameNList, MangledNameNList, NList] 
                0x00000001b4799f1c (    0x84) GCC_except_table15 [NameNList, MangledNameNList, NList] 
                0x00000001b4799fa0 (    0xe0) GCC_except_table18 [NameNList, MangledNameNList, NList] 
                0x00000001b479a080 (    0x34) GCC_except_table20 [NameNList, MangledNameNList, NList] 
                0x00000001b479a0b4 (    0x74) GCC_except_table21 [NameNList, MangledNameNList, NList] 
                0x00000001b479a128 (    0x68) GCC_except_table22 [NameNList, MangledNameNList, NList] 
                0x00000001b479a190 (    0x1c) GCC_except_table24 [NameNList, MangledNameNList, NList] 
                0x00000001b479a1ac (   0x154) GCC_except_table31 [NameNList, MangledNameNList, NList] 
                0x00000001b479a300 (    0xec) GCC_except_table32 [NameNList, MangledNameNList, NList] 
                0x00000001b479a3ec (    0x38) GCC_except_table33 [NameNList, MangledNameNList, NList] 
                0x00000001b479a424 (    0xac) GCC_except_table36 [NameNList, MangledNameNList, NList] 
                0x00000001b479a4d0 (    0x1c) GCC_except_table40 [NameNList, MangledNameNList, NList] 
                0x00000001b479a4ec (   0x180) GCC_except_table44 [NameNList, MangledNameNList, NList] 
                0x00000001b479a66c (    0x28) GCC_except_table54 [NameNList, MangledNameNList, NList] 
                0x00000001b479a694 (    0x10) GCC_except_table92 [NameNList, MangledNameNList, NList] 
                0x00000001b479a6a4 (     0xc) GCC_except_table93 [NameNList, MangledNameNList, NList] 
                0x00000001b479a6b0 (    0x10) GCC_except_table114 [NameNList, MangledNameNList, NList] 
                0x00000001b479a6c0 (    0x10) GCC_except_table115 [NameNList, MangledNameNList, NList] 
                0x00000001b479a6d0 (    0x10) GCC_except_table139 [NameNList, MangledNameNList, NList] 
                0x00000001b479a6e0 (    0x10) GCC_except_table143 [NameNList, MangledNameNList, NList] 
                0x00000001b479a6f0 (    0x10) GCC_except_table146 [NameNList, MangledNameNList, NList] 
                0x00000001b479a700 (    0x10) GCC_except_table149 [NameNList, MangledNameNList, NList] 
                0x00000001b479a710 (    0x10) GCC_except_table153 [NameNList, MangledNameNList, NList] 
                0x00000001b479a720 (    0x10) GCC_except_table156 [NameNList, MangledNameNList, NList] 
                0x00000001b479a730 (    0x10) GCC_except_table159 [NameNList, MangledNameNList, NList] 
                0x00000001b479a740 (    0x10) GCC_except_table162 [NameNList, MangledNameNList, NList] 
                0x00000001b479a750 (     0xc) GCC_except_table193 [NameNList, MangledNameNList, NList] 
                0x00000001b479a75c (     0xc) GCC_except_table197 [NameNList, MangledNameNList, NList] 
                0x00000001b479a768 (    0x24) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x00000001b479a78c (    0x28) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x00000001b479a7b4 (    0x44) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x00000001b479a7f8 (    0x60) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x00000001b479a858 (    0x44) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x00000001b479a89c (    0x4c) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x00000001b479a8e8 (    0x4c) GCC_except_table10 [NameNList, MangledNameNList, NList] 
                0x00000001b479a934 (    0x58) GCC_except_table11 [NameNList, MangledNameNList, NList] 
                0x00000001b479a98c (    0x90) GCC_except_table17 [NameNList, MangledNameNList, NList] 
                0x00000001b479aa1c (    0x90) GCC_except_table19 [NameNList, MangledNameNList, NList] 
                0x00000001b479aaac (    0x68) GCC_except_table20 [NameNList, MangledNameNList, NList] 
                0x00000001b479ab14 (    0x68) GCC_except_table26 [NameNList, MangledNameNList, NList] 
                0x00000001b479ab7c (    0x10) GCC_except_table36 [NameNList, MangledNameNList, NList] 
                0x00000001b479ab8c (    0x28) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001b479abb4 (    0x6c) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x00000001b479ac20 (    0x28) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x00000001b479ac48 (    0x64) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x00000001b479acac (    0x34) GCC_except_table14 [NameNList, MangledNameNList, NList] 
                0x00000001b479ace0 (    0x10) GCC_except_table16 [NameNList, MangledNameNList, NList] 
                0x00000001b479acf0 (    0x64) GCC_except_table18 [NameNList, MangledNameNList, NList] 
                0x00000001b479ad54 (    0x44) GCC_except_table20 [NameNList, MangledNameNList, NList] 
                0x00000001b479ad98 (    0xc8) GCC_except_table21 [NameNList, MangledNameNList, NList] 
                0x00000001b479ae60 (    0x60) GCC_except_table22 [NameNList, MangledNameNList, NList] 
                0x00000001b479aec0 (    0x14) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001b479aed4 (   0x10c) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x00000001b479afe0 (    0x74) GCC_except_table13 [NameNList, MangledNameNList, NList] 
                0x00000001b479b054 (    0x2c) GCC_except_table10 [NameNList, MangledNameNList, NList] 
                0x00000001b479b080 (    0x10) GCC_except_table12 [NameNList, MangledNameNList, NList] 
                0x00000001b479b090 (    0x8c) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x00000001b479b11c (    0x50) GCC_except_table18 [NameNList, MangledNameNList, NList] 
                0x00000001b479b16c (    0x1c) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x00000001b479b188 (    0xd0) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x00000001b479b258 (   0x14c) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x00000001b479b3a4 (    0x14) GCC_except_table11 [NameNList, MangledNameNList, NList] 
                0x00000001b479b3b8 (    0x10) GCC_except_table14 [NameNList, MangledNameNList, NList] 
                0x00000001b479b3c8 (    0x14) GCC_except_table24 [NameNList, MangledNameNList, NList] 
                0x00000001b479b3dc (    0x10) GCC_except_table31 [NameNList, MangledNameNList, NList] 
                0x00000001b479b3ec (    0x14) GCC_except_table36 [NameNList, MangledNameNList, NList] 
                0x00000001b479b400 (    0x10) GCC_except_table41 [NameNList, MangledNameNList, NList] 
                0x00000001b479b410 (    0x10) GCC_except_table42 [NameNList, MangledNameNList, NList] 
                0x00000001b479b420 (    0x14) GCC_except_table45 [NameNList, MangledNameNList, NList] 
                0x00000001b479b434 (    0x10) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x00000001b479b444 (    0x10) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001b479b454 (    0x28) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x00000001b479b47c (    0x28) GCC_except_table17 [NameNList, MangledNameNList, NList] 
                0x00000001b479b4a4 (    0x1c) GCC_except_table18 [NameNList, MangledNameNList, NList] 
                0x00000001b479b4c0 (    0x28) GCC_except_table20 [NameNList, MangledNameNList, NList] 
                0x00000001b479b4e8 (    0x34) GCC_except_table21 [NameNList, MangledNameNList, NList] 
                0x00000001b479b51c (    0x40) GCC_except_table38 [NameNList, MangledNameNList, NList] 
                0x00000001b479b55c (    0x10) GCC_except_table39 [NameNList, MangledNameNList, NList] 
                0x00000001b479b56c (    0xc0) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001b479b62c (    0x54) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x00000001b479b680 (    0x20) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001b479b6a0 (    0x20) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x00000001b479b6c0 (    0x18) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x00000001b479b6d8 (    0x90) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x00000001b479b768 (    0x48) GCC_except_table18 [NameNList, MangledNameNList, NList] 
                0x00000001b479b7b0 (    0x3c) GCC_except_table19 [NameNList, MangledNameNList, NList] 
                0x00000001b479b7ec (   0x11c) GCC_except_table20 [NameNList, MangledNameNList, NList] 
                0x00000001b479b908 (    0x20) GCC_except_table41 [NameNList, MangledNameNList, NList] 
                0x00000001b479b928 (    0x14) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x00000001b479b93c (    0x10) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001b479b94c (    0xb4) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x00000001b479ba00 (    0x30) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x00000001b479ba30 (    0x10) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x00000001b479ba40 (    0x20) GCC_except_table12 [NameNList, MangledNameNList, NList] 
                0x00000001b479ba60 (    0x18) GCC_except_table22 [NameNList, MangledNameNList, NList] 
                0x00000001b479ba78 (    0x14) GCC_except_table23 [NameNList, MangledNameNList, NList] 
                0x00000001b479ba8c (    0x1c) GCC_except_table21 [NameNList, MangledNameNList, NList] 
                0x00000001b479baa8 (   0x184) GCC_except_table25 [NameNList, MangledNameNList, NList] 
                0x00000001b479bc2c (    0x18) GCC_except_table32 [NameNList, MangledNameNList, NList] 
                0x00000001b479bc44 (    0x14) GCC_except_table52 [NameNList, MangledNameNList, NList] 
                0x00000001b479bc58 (     0xc) GCC_except_table60 [NameNList, MangledNameNList, NList] 
                0x00000001b479bc64 (    0x10) GCC_except_table62 [NameNList, MangledNameNList, NList] 
                0x00000001b479bc74 (    0x10) GCC_except_table63 [NameNList, MangledNameNList, NList] 
                0x00000001b479bc84 (    0x10) GCC_except_table65 [NameNList, MangledNameNList, NList] 
                0x00000001b479bc94 (    0x10) GCC_except_table66 [NameNList, MangledNameNList, NList] 
                0x00000001b479bca4 (    0x18) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x00000001b479bcbc (    0x14) GCC_except_table12 [NameNList, MangledNameNList, NList] 
                0x00000001b479bcd0 (    0x4c) GCC_except_table25 [NameNList, MangledNameNList, NList] 
                0x00000001b479bd1c (    0x18) GCC_except_table30 [NameNList, MangledNameNList, NList] 
                0x00000001b479bd34 (    0x10) GCC_except_table40 [NameNList, MangledNameNList, NList] 
                0x00000001b479bd44 (    0x2c) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x00000001b479bd70 (    0x60) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001b479bdd0 (   0x240) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x00000001b479c010 (    0x10) GCC_except_table11 [NameNList, MangledNameNList, NList] 
                0x00000001b479c020 (    0x14) GCC_except_table18 [NameNList, MangledNameNList, NList] 
                0x00000001b479c034 (    0x14) GCC_except_table19 [NameNList, MangledNameNList, NList] 
                0x00000001b479c048 (    0x18) GCC_except_table30 [NameNList, MangledNameNList, NList] 
                0x00000001b479c060 (    0x1c) GCC_except_table46 [NameNList, MangledNameNList, NList] 
                0x00000001b479c07c (    0x20) GCC_except_table47 [NameNList, MangledNameNList, NList] 
                0x00000001b479c09c (    0x28) GCC_except_table56 [NameNList, MangledNameNList, NList] 
                0x00000001b479c0c4 (    0x14) GCC_except_table58 [NameNList, MangledNameNList, NList] 
                0x00000001b479c0d8 (    0x30) GCC_except_table66 [NameNList, MangledNameNList, NList] 
                0x00000001b479c108 (    0x28) GCC_except_table68 [NameNList, MangledNameNList, NList] 
                0x00000001b479c130 (    0x3c) GCC_except_table69 [NameNList, MangledNameNList, NList] 
                0x00000001b479c16c (    0x28) GCC_except_table70 [NameNList, MangledNameNList, NList] 
                0x00000001b479c194 (    0x18) GCC_except_table71 [NameNList, MangledNameNList, NList] 
                0x00000001b479c1ac (    0x28) GCC_except_table72 [NameNList, MangledNameNList, NList] 
                0x00000001b479c1d4 (   0x144) GCC_except_table74 [NameNList, MangledNameNList, NList] 
                0x00000001b479c318 (    0x10) GCC_except_table78 [NameNList, MangledNameNList, NList] 
                0x00000001b479c328 (    0x1c) GCC_except_table103 [NameNList, MangledNameNList, NList] 
                0x00000001b479c344 (    0x2c) GCC_except_table104 [NameNList, MangledNameNList, NList] 
                0x00000001b479c370 (    0x58) GCC_except_table105 [NameNList, MangledNameNList, NList] 
                0x00000001b479c3c8 (    0x1c) GCC_except_table106 [NameNList, MangledNameNList, NList] 
                0x00000001b479c3e4 (    0x20) GCC_except_table109 [NameNList, MangledNameNList, NList] 
                0x00000001b479c404 (    0x1c) GCC_except_table110 [NameNList, MangledNameNList, NList] 
                0x00000001b479c420 (    0x1c) GCC_except_table111 [NameNList, MangledNameNList, NList] 
                0x00000001b479c43c (    0x1c) GCC_except_table112 [NameNList, MangledNameNList, NList] 
                0x00000001b479c458 (   0x108) GCC_except_table113 [NameNList, MangledNameNList, NList] 
                0x00000001b479c560 (    0x20) GCC_except_table124 [NameNList, MangledNameNList, NList] 
                0x00000001b479c580 (    0x28) GCC_except_table125 [NameNList, MangledNameNList, NList] 
                0x00000001b479c5a8 (    0x14) GCC_except_table126 [NameNList, MangledNameNList, NList] 
                0x00000001b479c5bc (    0x20) GCC_except_table133 [NameNList, MangledNameNList, NList] 
                0x00000001b479c5dc (    0x1c) GCC_except_table135 [NameNList, MangledNameNList, NList] 
                0x00000001b479c5f8 (    0x2c) GCC_except_table136 [NameNList, MangledNameNList, NList] 
                0x00000001b479c624 (    0x20) GCC_except_table141 [NameNList, MangledNameNList, NList] 
                0x00000001b479c644 (    0x64) GCC_except_table153 [NameNList, MangledNameNList, NList] 
                0x00000001b479c6a8 (    0xbc) GCC_except_table154 [NameNList, MangledNameNList, NList] 
                0x00000001b479c764 (    0x14) GCC_except_table156 [NameNList, MangledNameNList, NList] 
                0x00000001b479c778 (    0x1c) GCC_except_table174 [NameNList, MangledNameNList, NList] 
                0x00000001b479c794 (    0x10) GCC_except_table175 [NameNList, MangledNameNList, NList] 
                0x00000001b479c7a4 (    0x10) GCC_except_table176 [NameNList, MangledNameNList, NList] 
                0x00000001b479c7b4 (    0x10) GCC_except_table190 [NameNList, MangledNameNList, NList] 
                0x00000001b479c7c4 (    0x10) GCC_except_table191 [NameNList, MangledNameNList, NList] 
                0x00000001b479c7d4 (    0x10) GCC_except_table194 [NameNList, MangledNameNList, NList] 
                0x00000001b479c7e4 (    0x10) GCC_except_table197 [NameNList, MangledNameNList, NList] 
                0x00000001b479c7f4 (    0x14) GCC_except_table214 [NameNList, MangledNameNList, NList] 
                0x00000001b479c808 (    0x14) GCC_except_table218 [NameNList, MangledNameNList, NList] 
                0x00000001b479c81c (    0x10) GCC_except_table234 [NameNList, MangledNameNList, NList] 
                0x00000001b479c82c (    0x18) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x00000001b479c844 (    0x20) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x00000001b479c864 (    0x20) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x00000001b479c884 (    0x18) GCC_except_table10 [NameNList, MangledNameNList, NList] 
                0x00000001b479c89c (    0x20) GCC_except_table24 [NameNList, MangledNameNList, NList] 
                0x00000001b479c8bc (    0x54) GCC_except_table29 [NameNList, MangledNameNList, NList] 
                0x00000001b479c910 (    0x18) GCC_except_table31 [NameNList, MangledNameNList, NList] 
                0x00000001b479c928 (   0x280) GCC_except_table40 [NameNList, MangledNameNList, NList] 
                0x00000001b479cba8 (    0x1c) GCC_except_table41 [NameNList, MangledNameNList, NList] 
                0x00000001b479cbc4 (    0x2c) GCC_except_table42 [NameNList, MangledNameNList, NList] 
                0x00000001b479cbf0 (    0x2c) GCC_except_table44 [NameNList, MangledNameNList, NList] 
                0x00000001b479cc1c (    0x20) GCC_except_table50 [NameNList, MangledNameNList, NList] 
                0x00000001b479cc3c (    0x48) GCC_except_table61 [NameNList, MangledNameNList, NList] 
                0x00000001b479cc84 (    0x2c) GCC_except_table71 [NameNList, MangledNameNList, NList] 
                0x00000001b479ccb0 (   0x184) GCC_except_table72 [NameNList, MangledNameNList, NList] 
                0x00000001b479ce34 (    0x1c) GCC_except_table74 [NameNList, MangledNameNList, NList] 
                0x00000001b479ce50 (     0xc) GCC_except_table77 [NameNList, MangledNameNList, NList] 
                0x00000001b479ce5c (   0x26c) GCC_except_table84 [NameNList, MangledNameNList, NList] 
                0x00000001b479d0c8 (    0x10) GCC_except_table86 [NameNList, MangledNameNList, NList] 
                0x00000001b479d0d8 (    0x14) GCC_except_table90 [NameNList, MangledNameNList, NList] 
                0x00000001b479d0ec (     0xc) GCC_except_table94 [NameNList, MangledNameNList, NList] 
                0x00000001b479d0f8 (    0x34) GCC_except_table101 [NameNList, MangledNameNList, NList] 
                0x00000001b479d12c (     0xc) GCC_except_table110 [NameNList, MangledNameNList, NList] 
                0x00000001b479d138 (    0x2c) GCC_except_table123 [NameNList, MangledNameNList, NList] 
                0x00000001b479d164 (     0xc) GCC_except_table126 [NameNList, MangledNameNList, NList] 
                0x00000001b479d170 (    0x2c) GCC_except_table139 [NameNList, MangledNameNList, NList] 
                0x00000001b479d19c (     0xc) GCC_except_table148 [NameNList, MangledNameNList, NList] 
                0x00000001b479d1a8 (    0x1c) GCC_except_table150 [NameNList, MangledNameNList, NList] 
                0x00000001b479d1c4 (    0x14) GCC_except_table184 [NameNList, MangledNameNList, NList] 
                0x00000001b479d1d8 (    0x10) GCC_except_table189 [NameNList, MangledNameNList, NList] 
                0x00000001b479d1e8 (    0x10) GCC_except_table192 [NameNList, MangledNameNList, NList] 
                0x00000001b479d1f8 (    0x14) GCC_except_table196 [NameNList, MangledNameNList, NList] 
                0x00000001b479d20c (    0x10) GCC_except_table213 [NameNList, MangledNameNList, NList] 
                0x00000001b479d21c (    0x10) GCC_except_table214 [NameNList, MangledNameNList, NList] 
                0x00000001b479d22c (    0x20) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001b479d24c (    0x10) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x00000001b479d25c (    0x14) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001b479d270 (    0x14) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x00000001b479d284 (    0x14) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x00000001b479d298 (    0x20) GCC_except_table10 [NameNList, MangledNameNList, NList] 
                0x00000001b479d2b8 (    0x14) GCC_except_table12 [NameNList, MangledNameNList, NList] 
                0x00000001b479d2cc (    0x14) GCC_except_table13 [NameNList, MangledNameNList, NList] 
                0x00000001b479d2e0 (    0x14) GCC_except_table14 [NameNList, MangledNameNList, NList] 
                0x00000001b479d2f4 (    0x20) GCC_except_table15 [NameNList, MangledNameNList, NList] 
                0x00000001b479d314 (    0x14) GCC_except_table18 [NameNList, MangledNameNList, NList] 
                0x00000001b479d328 (    0x40) GCC_except_table25 [NameNList, MangledNameNList, NList] 
                0x00000001b479d368 (    0x14) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001b479d37c (    0x84) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x00000001b479d400 (    0x10) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x00000001b479d410 (    0x18) GCC_except_table19 [NameNList, MangledNameNList, NList] 
                0x00000001b479d428 (    0x14) GCC_except_table37 [NameNList, MangledNameNList, NList] 
                0x00000001b479d43c (    0x10) GCC_except_table40 [NameNList, MangledNameNList, NList] 
                0x00000001b479d44c (    0x14) GCC_except_table46 [NameNList, MangledNameNList, NList] 
                0x00000001b479d460 (    0x10) GCC_except_table53 [NameNList, MangledNameNList, NList] 
                0x00000001b479d470 (   0x15c) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x00000001b479d5cc (    0xc8) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x00000001b479d694 (    0x18) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x00000001b479d6ac (    0x2c) GCC_except_table14 [NameNList, MangledNameNList, NList] 
                0x00000001b479d6d8 (   0x268) GCC_except_table29 [NameNList, MangledNameNList, NList] 
                0x00000001b479d940 (    0x2c) GCC_except_table30 [NameNList, MangledNameNList, NList] 
                0x00000001b479d96c (    0x4c) GCC_except_table31 [NameNList, MangledNameNList, NList] 
                0x00000001b479d9b8 (    0xf8) GCC_except_table46 [NameNList, MangledNameNList, NList] 
                0x00000001b479dab0 (   0x104) GCC_except_table48 [NameNList, MangledNameNList, NList] 
                0x00000001b479dbb4 (    0xfc) GCC_except_table49 [NameNList, MangledNameNList, NList] 
                0x00000001b479dcb0 (     0xc) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001b479dcbc (    0x58) GCC_except_table17 [NameNList, MangledNameNList, NList] 
                0x00000001b479dd14 (    0x1c) GCC_except_table20 [NameNList, MangledNameNList, NList] 
                0x00000001b479dd30 (    0x34) GCC_except_table21 [NameNList, MangledNameNList, NList] 
                0x00000001b479dd64 (    0x48) GCC_except_table22 [NameNList, MangledNameNList, NList] 
                0x00000001b479ddac (    0x3c) GCC_except_table23 [NameNList, MangledNameNList, NList] 
                0x00000001b479dde8 (    0x3c) GCC_except_table24 [NameNList, MangledNameNList, NList] 
                0x00000001b479de24 (    0x48) GCC_except_table25 [NameNList, MangledNameNList, NList] 
                0x00000001b479de6c (    0x3c) GCC_except_table26 [NameNList, MangledNameNList, NList] 
                0x00000001b479dea8 (    0x44) GCC_except_table27 [NameNList, MangledNameNList, NList] 
                0x00000001b479deec (    0x44) GCC_except_table28 [NameNList, MangledNameNList, NList] 
                0x00000001b479df30 (    0x44) GCC_except_table29 [NameNList, MangledNameNList, NList] 
                0x00000001b479df74 (    0x44) GCC_except_table30 [NameNList, MangledNameNList, NList] 
                0x00000001b479dfb8 (    0x3c) GCC_except_table31 [NameNList, MangledNameNList, NList] 
                0x00000001b479dff4 (    0x3c) GCC_except_table32 [NameNList, MangledNameNList, NList] 
                0x00000001b479e030 (    0x3c) GCC_except_table33 [NameNList, MangledNameNList, NList] 
                0x00000001b479e06c (    0x3c) GCC_except_table34 [NameNList, MangledNameNList, NList] 
                0x00000001b479e0a8 (    0x3c) GCC_except_table35 [NameNList, MangledNameNList, NList] 
                0x00000001b479e0e4 (    0x4c) GCC_except_table36 [NameNList, MangledNameNList, NList] 
                0x00000001b479e130 (    0x3c) GCC_except_table37 [NameNList, MangledNameNList, NList] 
                0x00000001b479e16c (    0x3c) GCC_except_table38 [NameNList, MangledNameNList, NList] 
                0x00000001b479e1a8 (    0x3c) GCC_except_table39 [NameNList, MangledNameNList, NList] 
                0x00000001b479e1e4 (    0x3c) GCC_except_table40 [NameNList, MangledNameNList, NList] 
                0x00000001b479e220 (    0x3c) GCC_except_table41 [NameNList, MangledNameNList, NList] 
                0x00000001b479e25c (    0x4c) GCC_except_table42 [NameNList, MangledNameNList, NList] 
                0x00000001b479e2a8 (    0x74) GCC_except_table43 [NameNList, MangledNameNList, NList] 
                0x00000001b479e31c (    0x44) GCC_except_table44 [NameNList, MangledNameNList, NList] 
                0x00000001b479e360 (    0x50) GCC_except_table45 [NameNList, MangledNameNList, NList] 
                0x00000001b479e3b0 (    0x54) GCC_except_table46 [NameNList, MangledNameNList, NList] 
                0x00000001b479e404 (    0x40) GCC_except_table47 [NameNList, MangledNameNList, NList] 
                0x00000001b479e444 (    0x3c) GCC_except_table48 [NameNList, MangledNameNList, NList] 
                0x00000001b479e480 (    0x3c) GCC_except_table49 [NameNList, MangledNameNList, NList] 
                0x00000001b479e4bc (    0x3c) GCC_except_table50 [NameNList, MangledNameNList, NList] 
                0x00000001b479e4f8 (    0x3c) GCC_except_table51 [NameNList, MangledNameNList, NList] 
                0x00000001b479e534 (    0x68) GCC_except_table52 [NameNList, MangledNameNList, NList] 
                0x00000001b479e59c (    0x50) GCC_except_table53 [NameNList, MangledNameNList, NList] 
                0x00000001b479e5ec (    0x1c) GCC_except_table55 [NameNList, MangledNameNList, NList] 
                0x00000001b479e608 (   0x354) GCC_except_table56 [NameNList, MangledNameNList, NList] 
                0x00000001b479e95c (    0x28) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x00000001b479e984 (    0x28) GCC_except_table19 [NameNList, MangledNameNList, NList] 
                0x00000001b479e9ac (    0x10) GCC_except_table21 [NameNList, MangledNameNList, NList] 
                0x00000001b479e9bc (    0x1c) GCC_except_table24 [NameNList, MangledNameNList, NList] 
                0x00000001b479e9d8 (    0x60) GCC_except_table38 [NameNList, MangledNameNList, NList] 
                0x00000001b479ea38 (    0x74) GCC_except_table44 [NameNList, MangledNameNList, NList] 
                0x00000001b479eaac (    0x54) GCC_except_table57 [NameNList, MangledNameNList, NList] 
                0x00000001b479eb00 (    0x30) GCC_except_table64 [NameNList, MangledNameNList, NList] 
                0x00000001b479eb30 (    0x14) GCC_except_table67 [NameNList, MangledNameNList, NList] 
                0x00000001b479eb44 (    0x20) GCC_except_table68 [NameNList, MangledNameNList, NList] 
                0x00000001b479eb64 (    0x20) GCC_except_table74 [NameNList, MangledNameNList, NList] 
                0x00000001b479eb84 (    0x14) GCC_except_table82 [NameNList, MangledNameNList, NList] 
                0x00000001b479eb98 (    0x10) GCC_except_table84 [NameNList, MangledNameNList, NList] 
                0x00000001b479eba8 (    0x10) GCC_except_table87 [NameNList, MangledNameNList, NList] 
                0x00000001b479ebb8 (    0x10) GCC_except_table88 [NameNList, MangledNameNList, NList] 
                0x00000001b479ebc8 (    0x10) GCC_except_table92 [NameNList, MangledNameNList, NList] 
                0x00000001b479ebd8 (    0x14) GCC_except_table93 [NameNList, MangledNameNList, NList] 
                0x00000001b479ebec (    0x10) GCC_except_table98 [NameNList, MangledNameNList, NList] 
                0x00000001b479ebfc (    0x10) GCC_except_table99 [NameNList, MangledNameNList, NList] 
                0x00000001b479ec0c (    0x14) GCC_except_table102 [NameNList, MangledNameNList, NList] 
                0x00000001b479ec20 (    0x10) GCC_except_table103 [NameNList, MangledNameNList, NList] 
                0x00000001b479ec30 (    0x14) GCC_except_table108 [NameNList, MangledNameNList, NList] 
                0x00000001b479ec44 (     0xc) GCC_except_table120 [NameNList, MangledNameNList, NList] 
                0x00000001b479ec50 (    0x18) GCC_except_table127 [NameNList, MangledNameNList, NList] 
                0x00000001b479ec68 (    0x10) GCC_except_table132 [NameNList, MangledNameNList, NList] 
                0x00000001b479ec78 (    0x10) GCC_except_table133 [NameNList, MangledNameNList, NList] 
                0x00000001b479ec88 (    0x1c) GCC_except_table139 [NameNList, MangledNameNList, NList] 
                0x00000001b479eca4 (     0xc) GCC_except_table141 [NameNList, MangledNameNList, NList] 
                0x00000001b479ecb0 (    0x18) GCC_except_table148 [NameNList, MangledNameNList, NList] 
                0x00000001b479ecc8 (    0x10) GCC_except_table153 [NameNList, MangledNameNList, NList] 
                0x00000001b479ecd8 (    0x10) GCC_except_table154 [NameNList, MangledNameNList, NList] 
                0x00000001b479ece8 (    0x1c) GCC_except_table161 [NameNList, MangledNameNList, NList] 
                0x00000001b479ed04 (     0xc) GCC_except_table163 [NameNList, MangledNameNList, NList] 
                0x00000001b479ed10 (     0xc) GCC_except_table170 [NameNList, MangledNameNList, NList] 
                0x00000001b479ed1c (     0xc) GCC_except_table178 [NameNList, MangledNameNList, NList] 
                0x00000001b479ed28 (    0x14) GCC_except_table185 [NameNList, MangledNameNList, NList] 
                0x00000001b479ed3c (    0x10) GCC_except_table190 [NameNList, MangledNameNList, NList] 
                0x00000001b479ed4c (    0x10) GCC_except_table191 [NameNList, MangledNameNList, NList] 
                0x00000001b479ed5c (    0x14) GCC_except_table196 [NameNList, MangledNameNList, NList] 
                0x00000001b479ed70 (    0x1c) GCC_except_table199 [NameNList, MangledNameNList, NList] 
                0x00000001b479ed8c (    0x10) GCC_except_table203 [NameNList, MangledNameNList, NList] 
                0x00000001b479ed9c (    0x10) GCC_except_table204 [NameNList, MangledNameNList, NList] 
                0x00000001b479edac (    0x10) GCC_except_table206 [NameNList, MangledNameNList, NList] 
                0x00000001b479edbc (    0x10) GCC_except_table209 [NameNList, MangledNameNList, NList] 
                0x00000001b479edcc (    0x18) GCC_except_table210 [NameNList, MangledNameNList, NList] 
                0x00000001b479ede4 (    0x10) GCC_except_table215 [NameNList, MangledNameNList, NList] 
                0x00000001b479edf4 (    0x10) GCC_except_table216 [NameNList, MangledNameNList, NList] 
                0x00000001b479ee04 (    0x14) GCC_except_table219 [NameNList, MangledNameNList, NList] 
                0x00000001b479ee18 (    0x14) GCC_except_table227 [NameNList, MangledNameNList, NList] 
                0x00000001b479ee2c (    0x10) GCC_except_table239 [NameNList, MangledNameNList, NList] 
                0x00000001b479ee3c (    0x84) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x00000001b479eec0 (    0x34) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x00000001b479eef4 (    0x58) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x00000001b479ef4c (    0x38) GCC_except_table17 [NameNList, MangledNameNList, NList] 
                0x00000001b479ef84 (   0x1d4) GCC_except_table21 [NameNList, MangledNameNList, NList] 
                0x00000001b479f158 (    0x78) GCC_except_table57 [NameNList, MangledNameNList, NList] 
                0x00000001b479f1d0 (    0x10) GCC_except_table66 [NameNList, MangledNameNList, NList] 
                0x00000001b479f1e0 (    0x10) GCC_except_table67 [NameNList, MangledNameNList, NList] 
                0x00000001b479f1f0 (    0x10) GCC_except_table68 [NameNList, MangledNameNList, NList] 
                0x00000001b479f200 (    0x30) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x00000001b479f230 (    0x14) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001b479f244 (    0x18) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x00000001b479f25c (    0xb4) GCC_except_table15 [NameNList, MangledNameNList, NList] 
                0x00000001b479f310 (    0x94) GCC_except_table22 [NameNList, MangledNameNList, NList] 
                0x00000001b479f3a4 (    0x10) GCC_except_table28 [NameNList, MangledNameNList, NList] 
                0x00000001b479f3b4 (    0x2c) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x00000001b479f3e0 (    0x20) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x00000001b479f400 (    0x10) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x00000001b479f410 (    0x30) GCC_except_table10 [NameNList, MangledNameNList, NList] 
                0x00000001b479f440 (    0x30) GCC_except_table11 [NameNList, MangledNameNList, NList] 
                0x00000001b479f470 (    0x18) GCC_except_table12 [NameNList, MangledNameNList, NList] 
                0x00000001b479f488 (    0x40) GCC_except_table15 [NameNList, MangledNameNList, NList] 
                0x00000001b479f4c8 (    0x88) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001b479f550 (    0x2c) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x00000001b479f57c (    0x1c) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x00000001b479f598 (    0x4c) GCC_except_table21 [NameNList, MangledNameNList, NList] 
                0x00000001b479f5e4 (    0x20) GCC_except_table22 [NameNList, MangledNameNList, NList] 
                0x00000001b479f604 (    0x14) GCC_except_table26 [NameNList, MangledNameNList, NList] 
                0x00000001b479f618 (    0x10) GCC_except_table28 [NameNList, MangledNameNList, NList] 
                0x00000001b479f628 (    0x78) GCC_except_table32 [NameNList, MangledNameNList, NList] 
                0x00000001b479f6a0 (    0x20) GCC_except_table36 [NameNList, MangledNameNList, NList] 
                0x00000001b479f6c0 (    0x28) GCC_except_table37 [NameNList, MangledNameNList, NList] 
                0x00000001b479f6e8 (    0x28) GCC_except_table38 [NameNList, MangledNameNList, NList] 
                0x00000001b479f710 (    0x20) GCC_except_table40 [NameNList, MangledNameNList, NList] 
                0x00000001b479f730 (    0x24) GCC_except_table41 [NameNList, MangledNameNList, NList] 
                0x00000001b479f754 (    0x20) GCC_except_table44 [NameNList, MangledNameNList, NList] 
                0x00000001b479f774 (    0x20) GCC_except_table50 [NameNList, MangledNameNList, NList] 
                0x00000001b479f794 (    0x10) GCC_except_table63 [NameNList, MangledNameNList, NList] 
                0x00000001b479f7a4 (    0x18) GCC_except_table73 [NameNList, MangledNameNList, NList] 
                0x00000001b479f7bc (    0x10) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001b479f7cc (    0x50) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x00000001b479f81c (    0x1c) GCC_except_table16 [NameNList, MangledNameNList, NList] 
                0x00000001b479f838 (    0x34) GCC_except_table35 [NameNList, MangledNameNList, NList] 
                0x00000001b479f86c (    0x40) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x00000001b479f8ac (    0x50) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001b479f8fc (    0x40) GCC_except_table13 [NameNList, MangledNameNList, NList] 
                0x00000001b479f93c (    0x40) GCC_except_table14 [NameNList, MangledNameNList, NList] 
                0x00000001b479f97c (    0x44) GCC_except_table15 [NameNList, MangledNameNList, NList] 
                0x00000001b479f9c0 (    0x40) GCC_except_table16 [NameNList, MangledNameNList, NList] 
                0x00000001b479fa00 (    0x50) GCC_except_table17 [NameNList, MangledNameNList, NList] 
                0x00000001b479fa50 (    0x10) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001b479fa60 (    0x10) GCC_except_table14 [NameNList, MangledNameNList, NList] 
                0x00000001b479fa70 (    0x20) GCC_except_table18 [NameNList, MangledNameNList, NList] 
                0x00000001b479fa90 (    0x10) GCC_except_table24 [NameNList, MangledNameNList, NList] 
                0x00000001b479faa0 (    0x10) GCC_except_table31 [NameNList, MangledNameNList, NList] 
                0x00000001b479fab0 (    0x14) GCC_except_table40 [NameNList, MangledNameNList, NList] 
                0x00000001b479fac4 (    0x40) GCC_except_table20 [NameNList, MangledNameNList, NList] 
                0x00000001b479fb04 (    0x18) GCC_except_table23 [NameNList, MangledNameNList, NList] 
                0x00000001b479fb1c (   0x28c) GCC_except_table25 [NameNList, MangledNameNList, NList] 
                0x00000001b479fda8 (    0x10) GCC_except_table62 [NameNList, MangledNameNList, NList] 
                0x00000001b479fdb8 (    0x10) GCC_except_table63 [NameNList, MangledNameNList, NList] 
                0x00000001b479fdc8 (    0x30) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x00000001b479fdf8 (    0x10) GCC_except_table61 [NameNList, MangledNameNList, NList] 
                0x00000001b479fe08 (    0xc4) GCC_except_table75 [NameNList, MangledNameNList, NList] 
                0x00000001b479fecc (    0x18) GCC_except_table17 [NameNList, MangledNameNList, NList] 
                0x00000001b479fee4 (    0x18) GCC_except_table18 [NameNList, MangledNameNList, NList] 
                0x00000001b479fefc (    0x34) GCC_except_table22 [NameNList, MangledNameNList, NList] 
                0x00000001b479ff30 (    0x1c) GCC_except_table41 [NameNList, MangledNameNList, NList] 
                0x00000001b479ff4c (    0x14) GCC_except_table54 [NameNList, MangledNameNList, NList] 
                0x00000001b479ff60 (    0x2c) GCC_except_table55 [NameNList, MangledNameNList, NList] 
                0x00000001b479ff8c (    0x78) GCC_except_table65 [NameNList, MangledNameNList, NList] 
                0x00000001b47a0004 (    0x64) GCC_except_table68 [NameNList, MangledNameNList, NList] 
                0x00000001b47a0068 (    0x4c) GCC_except_table71 [NameNList, MangledNameNList, NList] 
                0x00000001b47a00b4 (    0x14) GCC_except_table78 [NameNList, MangledNameNList, NList] 
                0x00000001b47a00c8 (    0x14) GCC_except_table89 [NameNList, MangledNameNList, NList] 
                0x00000001b47a00dc (    0x1c) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001b47a00f8 (    0x34) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x00000001b47a012c (   0x1a8) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x00000001b47a02d4 (   0x130) GCC_except_table10 [NameNList, MangledNameNList, NList] 
                0x00000001b47a0404 (    0x1c) GCC_except_table11 [NameNList, MangledNameNList, NList] 
                0x00000001b47a0420 (    0x10) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x00000001b47a0430 (    0x68) GCC_except_table19 [NameNList, MangledNameNList, NList] 
                0x00000001b47a0498 (    0x20) GCC_except_table49 [NameNList, MangledNameNList, NList] 
                0x00000001b47a04b8 (    0x10) GCC_except_table59 [NameNList, MangledNameNList, NList] 
                0x00000001b47a04c8 (    0x14) GCC_except_table92 [NameNList, MangledNameNList, NList] 
                0x00000001b47a04dc (    0x10) GCC_except_table100 [NameNList, MangledNameNList, NList] 
                0x00000001b47a04ec (    0x14) GCC_except_table102 [NameNList, MangledNameNList, NList] 
                0x00000001b47a0500 (    0x10) GCC_except_table112 [NameNList, MangledNameNList, NList] 
                0x00000001b47a0510 (    0x10) GCC_except_table113 [NameNList, MangledNameNList, NList] 
                0x00000001b47a0520 (    0x48) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x00000001b47a0568 (    0x38) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x00000001b47a05a0 (    0x38) GCC_except_table14 [NameNList, MangledNameNList, NList] 
                0x00000001b47a05d8 (    0x10) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001b47a05e8 (    0x10) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x00000001b47a05f8 (    0x34) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x00000001b47a062c (    0x20) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x00000001b47a064c (    0x10) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x00000001b47a065c (    0x34) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x00000001b47a0690 (    0x14) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x00000001b47a06a4 (    0x10) GCC_except_table13 [NameNList, MangledNameNList, NList] 
                0x00000001b47a06b4 (    0x20) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x00000001b47a06d4 (    0x14) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x00000001b47a06e8 (    0x3c) GCC_except_table15 [NameNList, MangledNameNList, NList] 
                0x00000001b47a0724 (    0xa0) GCC_except_table23 [NameNList, MangledNameNList, NList] 
                0x00000001b47a07c4 (    0x10) GCC_except_table99 [NameNList, MangledNameNList, NList] 
                0x00000001b47a07d4 (    0x10) GCC_except_table123 [NameNList, MangledNameNList, NList] 
                0x00000001b47a07e4 (    0x24) GCC_except_table135 [NameNList, MangledNameNList, NList] 
                0x00000001b47a0808 (    0x14) GCC_except_table142 [NameNList, MangledNameNList, NList] 
                0x00000001b47a081c (    0x84) GCC_except_table156 [NameNList, MangledNameNList, NList] 
                0x00000001b47a08a0 (    0x10) GCC_except_table221 [NameNList, MangledNameNList, NList] 
                0x00000001b47a08b0 (    0xe0) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x00000001b47a0990 (    0x98) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x00000001b47a0a28 (    0x44) GCC_except_table10 [NameNList, MangledNameNList, NList] 
                0x00000001b47a0a6c (    0x4c) GCC_except_table11 [NameNList, MangledNameNList, NList] 
                0x00000001b47a0ab8 (    0x4c) GCC_except_table13 [NameNList, MangledNameNList, NList] 
                0x00000001b47a0b04 (    0x40) GCC_except_table14 [NameNList, MangledNameNList, NList] 
                0x00000001b47a0b44 (    0x4c) GCC_except_table15 [NameNList, MangledNameNList, NList] 
                0x00000001b47a0b90 (    0x40) GCC_except_table18 [NameNList, MangledNameNList, NList] 
                0x00000001b47a0bd0 (    0x54) GCC_except_table19 [NameNList, MangledNameNList, NList] 
                0x00000001b47a0c24 (    0x10) GCC_except_table28 [NameNList, MangledNameNList, NList] 
                0x00000001b47a0c34 (    0x20) GCC_except_table10 [NameNList, MangledNameNList, NList] 
                0x00000001b47a0c54 (   0x11c) GCC_except_table20 [NameNList, MangledNameNList, NList] 
                0x00000001b47a0d70 (    0x40) GCC_except_table44 [NameNList, MangledNameNList, NList] 
                0x00000001b47a0db0 (    0x3c) GCC_except_table56 [NameNList, MangledNameNList, NList] 
                0x00000001b47a0dec (    0x38) GCC_except_table57 [NameNList, MangledNameNList, NList] 
                0x00000001b47a0e24 (    0x1c) GCC_except_table58 [NameNList, MangledNameNList, NList] 
                0x00000001b47a0e40 (    0x28) GCC_except_table59 [NameNList, MangledNameNList, NList] 
                0x00000001b47a0e68 (    0x24) GCC_except_table70 [NameNList, MangledNameNList, NList] 
                0x00000001b47a0e8c (   0x16c) GCC_except_table78 [NameNList, MangledNameNList, NList] 
                0x00000001b47a0ff8 (    0x44) GCC_except_table90 [NameNList, MangledNameNList, NList] 
                0x00000001b47a103c (    0x38) GCC_except_table97 [NameNList, MangledNameNList, NList] 
                0x00000001b47a1074 (    0x30) GCC_except_table98 [NameNList, MangledNameNList, NList] 
                0x00000001b47a10a4 (    0x20) GCC_except_table109 [NameNList, MangledNameNList, NList] 
                0x00000001b47a10c4 (   0x1a8) GCC_except_table116 [NameNList, MangledNameNList, NList] 
                0x00000001b47a126c (    0x44) GCC_except_table124 [NameNList, MangledNameNList, NList] 
                0x00000001b47a12b0 (    0x50) GCC_except_table129 [NameNList, MangledNameNList, NList] 
                0x00000001b47a1300 (    0x60) GCC_except_table133 [NameNList, MangledNameNList, NList] 
                0x00000001b47a1360 (    0x24) GCC_except_table144 [NameNList, MangledNameNList, NList] 
                0x00000001b47a1384 (    0x10) GCC_except_table146 [NameNList, MangledNameNList, NList] 
                0x00000001b47a1394 (   0x208) GCC_except_table154 [NameNList, MangledNameNList, NList] 
                0x00000001b47a159c (    0x6c) GCC_except_table160 [NameNList, MangledNameNList, NList] 
                0x00000001b47a1608 (   0x288) GCC_except_table161 [NameNList, MangledNameNList, NList] 
                0x00000001b47a1890 (    0x1c) GCC_except_table169 [NameNList, MangledNameNList, NList] 
                0x00000001b47a18ac (    0x18) GCC_except_table172 [NameNList, MangledNameNList, NList] 
                0x00000001b47a18c4 (    0x40) GCC_except_table174 [NameNList, MangledNameNList, NList] 
                0x00000001b47a1904 (    0x4c) GCC_except_table180 [NameNList, MangledNameNList, NList] 
                0x00000001b47a1950 (   0x16c) GCC_except_table181 [NameNList, MangledNameNList, NList] 
                0x00000001b47a1abc (   0x108) GCC_except_table187 [NameNList, MangledNameNList, NList] 
                0x00000001b47a1bc4 (    0x14) GCC_except_table188 [NameNList, MangledNameNList, NList] 
                0x00000001b47a1bd8 (    0x14) GCC_except_table190 [NameNList, MangledNameNList, NList] 
                0x00000001b47a1bec (    0x10) GCC_except_table196 [NameNList, MangledNameNList, NList] 
                0x00000001b47a1bfc (    0x40) GCC_except_table215 [NameNList, MangledNameNList, NList] 
                0x00000001b47a1c3c (    0x38) GCC_except_table216 [NameNList, MangledNameNList, NList] 
                0x00000001b47a1c74 (    0x38) GCC_except_table217 [NameNList, MangledNameNList, NList] 
                0x00000001b47a1cac (    0x38) GCC_except_table218 [NameNList, MangledNameNList, NList] 
                0x00000001b47a1ce4 (    0x48) GCC_except_table220 [NameNList, MangledNameNList, NList] 
                0x00000001b47a1d2c (    0x2c) GCC_except_table307 [NameNList, MangledNameNList, NList] 
                0x00000001b47a1d58 (    0x38) GCC_except_table309 [NameNList, MangledNameNList, NList] 
                0x00000001b47a1d90 (    0x18) GCC_except_table310 [NameNList, MangledNameNList, NList] 
                0x00000001b47a1da8 (    0x28) GCC_except_table311 [NameNList, MangledNameNList, NList] 
                0x00000001b47a1dd0 (    0xb4) GCC_except_table312 [NameNList, MangledNameNList, NList] 
                0x00000001b47a1e84 (    0x48) GCC_except_table313 [NameNList, MangledNameNList, NList] 
                0x00000001b47a1ecc (    0x64) GCC_except_table314 [NameNList, MangledNameNList, NList] 
                0x00000001b47a1f30 (    0x24) GCC_except_table323 [NameNList, MangledNameNList, NList] 
                0x00000001b47a1f54 (    0x20) GCC_except_table335 [NameNList, MangledNameNList, NList] 
                0x00000001b47a1f74 (    0x10) GCC_except_table357 [NameNList, MangledNameNList, NList] 
                0x00000001b47a1f84 (    0x10) GCC_except_table361 [NameNList, MangledNameNList, NList] 
                0x00000001b47a1f94 (    0x14) GCC_except_table385 [NameNList, MangledNameNList, NList] 
                0x00000001b47a1fa8 (    0x10) GCC_except_table388 [NameNList, MangledNameNList, NList] 
                0x00000001b47a1fb8 (    0x10) GCC_except_table399 [NameNList, MangledNameNList, NList] 
                0x00000001b47a1fc8 (    0x14) GCC_except_table411 [NameNList, MangledNameNList, NList] 
                0x00000001b47a1fdc (    0x10) GCC_except_table417 [NameNList, MangledNameNList, NList] 
                0x00000001b47a1fec (    0x10) GCC_except_table419 [NameNList, MangledNameNList, NList] 
                0x00000001b47a1ffc (    0x10) GCC_except_table422 [NameNList, MangledNameNList, NList] 
                0x00000001b47a200c (    0x10) GCC_except_table423 [NameNList, MangledNameNList, NList] 
                0x00000001b47a201c (    0x14) GCC_except_table429 [NameNList, MangledNameNList, NList] 
                0x00000001b47a2030 (    0x10) GCC_except_table434 [NameNList, MangledNameNList, NList] 
                0x00000001b47a2040 (    0x10) GCC_except_table435 [NameNList, MangledNameNList, NList] 
                0x00000001b47a2050 (    0x10) GCC_except_table437 [NameNList, MangledNameNList, NList] 
                0x00000001b47a2060 (    0x14) GCC_except_table440 [NameNList, MangledNameNList, NList] 
                0x00000001b47a2074 (    0x10) GCC_except_table443 [NameNList, MangledNameNList, NList] 
                0x00000001b47a2084 (    0x10) GCC_except_table446 [NameNList, MangledNameNList, NList] 
                0x00000001b47a2094 (    0x14) GCC_except_table448 [NameNList, MangledNameNList, NList] 
                0x00000001b47a20a8 (    0x10) GCC_except_table452 [NameNList, MangledNameNList, NList] 
                0x00000001b47a20b8 (    0x10) GCC_except_table453 [NameNList, MangledNameNList, NList] 
                0x00000001b47a20c8 (    0x14) GCC_except_table455 [NameNList, MangledNameNList, NList] 
                0x00000001b47a20dc (    0x10) GCC_except_table459 [NameNList, MangledNameNList, NList] 
                0x00000001b47a20ec (    0x10) GCC_except_table460 [NameNList, MangledNameNList, NList] 
                0x00000001b47a20fc (    0x14) GCC_except_table462 [NameNList, MangledNameNList, NList] 
                0x00000001b47a2110 (    0x14) GCC_except_table465 [NameNList, MangledNameNList, NList] 
                0x00000001b47a2124 (    0x10) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x00000001b47a2134 (    0x48) GCC_except_table23 [NameNList, MangledNameNList, NList] 
                0x00000001b47a217c (    0x10) GCC_except_table25 [NameNList, MangledNameNList, NList] 
                0x00000001b47a218c (    0x14) GCC_except_table29 [NameNList, MangledNameNList, NList] 
                0x00000001b47a21a0 (   0x2f8) GCC_except_table35 [NameNList, MangledNameNList, NList] 
                0x00000001b47a2498 (    0x34) GCC_except_table53 [NameNList, MangledNameNList, NList] 
                0x00000001b47a24cc (    0x58) GCC_except_table71 [NameNList, MangledNameNList, NList] 
                0x00000001b47a2524 (    0x1c) GCC_except_table73 [NameNList, MangledNameNList, NList] 
                0x00000001b47a2540 (    0xc8) GCC_except_table77 [NameNList, MangledNameNList, NList] 
                0x00000001b47a2608 (   0x16c) GCC_except_table96 [NameNList, MangledNameNList, NList] 
                0x00000001b47a2774 (    0x48) GCC_except_table105 [NameNList, MangledNameNList, NList] 
                0x00000001b47a27bc (     0xc) GCC_except_table116 [NameNList, MangledNameNList, NList] 
                0x00000001b47a27c8 (     0xc) GCC_except_table117 [NameNList, MangledNameNList, NList] 
                0x00000001b47a27d4 (    0x10) GCC_except_table118 [NameNList, MangledNameNList, NList] 
                0x00000001b47a27e4 (    0x10) GCC_except_table119 [NameNList, MangledNameNList, NList] 
                0x00000001b47a27f4 (    0x10) GCC_except_table127 [NameNList, MangledNameNList, NList] 
                0x00000001b47a2804 (    0x10) GCC_except_table150 [NameNList, MangledNameNList, NList] 
                0x00000001b47a2814 (    0x10) GCC_except_table156 [NameNList, MangledNameNList, NList] 
                0x00000001b47a2824 (    0x24) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x00000001b47a2848 (    0x90) GCC_except_table12 [NameNList, MangledNameNList, NList] 
                0x00000001b47a28d8 (    0x14) GCC_except_table14 [NameNList, MangledNameNList, NList] 
                0x00000001b47a28ec (    0x1c) GCC_except_table20 [NameNList, MangledNameNList, NList] 
                0x00000001b47a2908 (    0x14) GCC_except_table33 [NameNList, MangledNameNList, NList] 
                0x00000001b47a291c (    0x24) GCC_except_table38 [NameNList, MangledNameNList, NList] 
                0x00000001b47a2940 (    0x58) GCC_except_table41 [NameNList, MangledNameNList, NList] 
                0x00000001b47a2998 (    0x6c) GCC_except_table47 [NameNList, MangledNameNList, NList] 
                0x00000001b47a2a04 (    0x10) GCC_except_table50 [NameNList, MangledNameNList, NList] 
                0x00000001b47a2a14 (    0x28) GCC_except_table54 [NameNList, MangledNameNList, NList] 
                0x00000001b47a2a3c (    0x24) GCC_except_table67 [NameNList, MangledNameNList, NList] 
                0x00000001b47a2a60 (    0x10) GCC_except_table80 [NameNList, MangledNameNList, NList] 
                0x00000001b47a2a70 (    0x10) GCC_except_table82 [NameNList, MangledNameNList, NList] 
                0x00000001b47a2a80 (    0x10) GCC_except_table86 [NameNList, MangledNameNList, NList] 
                0x00000001b47a2a90 (    0x18) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x00000001b47a2aa8 (    0x10) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001b47a2ab8 (    0x34) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x00000001b47a2aec (    0x18) GCC_except_table11 [NameNList, MangledNameNList, NList] 
                0x00000001b47a2b04 (    0x5c) GCC_except_table15 [NameNList, MangledNameNList, NList] 
                0x00000001b47a2b60 (    0x90) GCC_except_table17 [NameNList, MangledNameNList, NList] 
                0x00000001b47a2bf0 (    0x30) GCC_except_table18 [NameNList, MangledNameNList, NList] 
                0x00000001b47a2c20 (    0x20) GCC_except_table20 [NameNList, MangledNameNList, NList] 
                0x00000001b47a2c40 (    0x44) GCC_except_table21 [NameNList, MangledNameNList, NList] 
                0x00000001b47a2c84 (    0x4c) GCC_except_table23 [NameNList, MangledNameNList, NList] 
                0x00000001b47a2cd0 (    0x18) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x00000001b47a2ce8 (    0x2c) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x00000001b47a2d14 (    0x2c) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x00000001b47a2d40 (    0x24) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x00000001b47a2d64 (    0x18) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x00000001b47a2d7c (    0x28) GCC_except_table37 [NameNList, MangledNameNList, NList] 
                0x00000001b47a2da4 (    0x20) GCC_except_table58 [NameNList, MangledNameNList, NList] 
                0x00000001b47a2dc4 (    0x14) GCC_except_table65 [NameNList, MangledNameNList, NList] 
                0x00000001b47a2dd8 (    0x4c) GCC_except_table88 [NameNList, MangledNameNList, NList] 
                0x00000001b47a2e24 (    0x10) GCC_except_table117 [NameNList, MangledNameNList, NList] 
                0x00000001b47a2e34 (    0x10) GCC_except_table118 [NameNList, MangledNameNList, NList] 
                0x00000001b47a2e44 (    0x10) GCC_except_table119 [NameNList, MangledNameNList, NList] 
                0x00000001b47a2e54 (    0x10) GCC_except_table123 [NameNList, MangledNameNList, NList] 
                0x00000001b47a2e64 (    0x14) GCC_except_table141 [NameNList, MangledNameNList, NList] 
                0x00000001b47a2e78 (    0x10) GCC_except_table149 [NameNList, MangledNameNList, NList] 
                0x00000001b47a2e88 (    0x14) GCC_except_table150 [NameNList, MangledNameNList, NList] 
                0x00000001b47a2e9c (    0x14) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x00000001b47a2eb0 (    0xb4) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001b47a2f64 (    0x24) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x00000001b47a2f88 (   0x164) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x00000001b47a30ec (    0x50) GCC_except_table13 [NameNList, MangledNameNList, NList] 
                0x00000001b47a313c (   0x118) GCC_except_table14 [NameNList, MangledNameNList, NList] 
                0x00000001b47a3254 (    0x30) GCC_except_table16 [NameNList, MangledNameNList, NList] 
                0x00000001b47a3284 (    0x60) GCC_except_table18 [NameNList, MangledNameNList, NList] 
                0x00000001b47a32e4 (     0xc) GCC_except_table53 [NameNList, MangledNameNList, NList] 
                0x00000001b47a32f0 (     0xc) GCC_except_table65 [NameNList, MangledNameNList, NList] 
                0x00000001b47a32fc (    0x1c) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x00000001b47a3318 (    0x10) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001b47a3328 (    0x18) GCC_except_table14 [NameNList, MangledNameNList, NList] 
                0x00000001b47a3340 (    0x10) GCC_except_table17 [NameNList, MangledNameNList, NList] 
                0x00000001b47a3350 (    0x10) GCC_except_table31 [NameNList, MangledNameNList, NList] 
                0x00000001b47a3360 (    0x14) GCC_except_table32 [NameNList, MangledNameNList, NList] 
                0x00000001b47a3374 (    0x68) GCC_except_table42 [NameNList, MangledNameNList, NList] 
                0x00000001b47a33dc (    0x90) GCC_except_table56 [NameNList, MangledNameNList, NList] 
                0x00000001b47a346c (    0x50) GCC_except_table59 [NameNList, MangledNameNList, NList] 
                0x00000001b47a34bc (    0x20) GCC_except_table60 [NameNList, MangledNameNList, NList] 
                0x00000001b47a34dc (   0x20c) GCC_except_table64 [NameNList, MangledNameNList, NList] 
                0x00000001b47a36e8 (    0x2c) GCC_except_table65 [NameNList, MangledNameNList, NList] 
                0x00000001b47a3714 (    0x10) GCC_except_table70 [NameNList, MangledNameNList, NList] 
                0x00000001b47a3724 (    0x10) GCC_except_table74 [NameNList, MangledNameNList, NList] 
                0x00000001b47a3734 (    0x10) GCC_except_table78 [NameNList, MangledNameNList, NList] 
                0x00000001b47a3744 (    0x10) GCC_except_table82 [NameNList, MangledNameNList, NList] 
                0x00000001b47a3754 (    0x10) GCC_except_table86 [NameNList, MangledNameNList, NList] 
                0x00000001b47a3764 (    0x14) GCC_except_table90 [NameNList, MangledNameNList, NList] 
                0x00000001b47a3778 (    0x14) GCC_except_table94 [NameNList, MangledNameNList, NList] 
                0x00000001b47a378c (    0x10) GCC_except_table98 [NameNList, MangledNameNList, NList] 
                0x00000001b47a379c (    0x64) GCC_except_table100 [NameNList, MangledNameNList, NList] 
                0x00000001b47a3800 (    0x3c) GCC_except_table103 [NameNList, MangledNameNList, NList] 
                0x00000001b47a383c (    0x14) GCC_except_table108 [NameNList, MangledNameNList, NList] 
                0x00000001b47a3850 (   0x3f0) GCC_except_table113 [NameNList, MangledNameNList, NList] 
                0x00000001b47a3c40 (    0x14) GCC_except_table114 [NameNList, MangledNameNList, NList] 
                0x00000001b47a3c54 (    0x34) GCC_except_table121 [NameNList, MangledNameNList, NList] 
                0x00000001b47a3c88 (    0x94) GCC_except_table131 [NameNList, MangledNameNList, NList] 
                0x00000001b47a3d1c (    0x54) GCC_except_table136 [NameNList, MangledNameNList, NList] 
                0x00000001b47a3d70 (    0x40) GCC_except_table143 [NameNList, MangledNameNList, NList] 
                0x00000001b47a3db0 (    0x24) GCC_except_table151 [NameNList, MangledNameNList, NList] 
                0x00000001b47a3dd4 (    0x10) GCC_except_table180 [NameNList, MangledNameNList, NList] 
                0x00000001b47a3de4 (    0x10) GCC_except_table211 [NameNList, MangledNameNList, NList] 
                0x00000001b47a3df4 (    0x14) GCC_except_table212 [NameNList, MangledNameNList, NList] 
                0x00000001b47a3e08 (    0x10) GCC_except_table217 [NameNList, MangledNameNList, NList] 
                0x00000001b47a3e18 (    0x10) GCC_except_table227 [NameNList, MangledNameNList, NList] 
                0x00000001b47a3e28 (    0x14) GCC_except_table256 [NameNList, MangledNameNList, NList] 
                0x00000001b47a3e3c (    0x1c) GCC_except_table10 [NameNList, MangledNameNList, NList] 
                0x00000001b47a3e58 (   0x104) GCC_except_table63 [NameNList, MangledNameNList, NList] 
                0x00000001b47a3f5c (    0x28) GCC_except_table69 [NameNList, MangledNameNList, NList] 
                0x00000001b47a3f84 (    0x38) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x00000001b47a3fbc (    0x14) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x00000001b47a3fd0 (    0x20) GCC_except_table26 [NameNList, MangledNameNList, NList] 
                0x00000001b47a3ff0 (    0xb8) GCC_except_table27 [NameNList, MangledNameNList, NList] 
                0x00000001b47a40a8 (    0x40) GCC_except_table28 [NameNList, MangledNameNList, NList] 
                0x00000001b47a40e8 (    0x10) GCC_except_table37 [NameNList, MangledNameNList, NList] 
                0x00000001b47a40f8 (    0x7c) GCC_except_table38 [NameNList, MangledNameNList, NList] 
                0x00000001b47a4174 (    0x10) GCC_except_table46 [NameNList, MangledNameNList, NList] 
                0x00000001b47a4184 (    0x10) GCC_except_table47 [NameNList, MangledNameNList, NList] 
                0x00000001b47a4194 (    0x28) GCC_except_table67 [NameNList, MangledNameNList, NList] 
                0x00000001b47a41bc (    0x2c) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x00000001b47a41e8 (    0x24) GCC_except_table15 [NameNList, MangledNameNList, NList] 
                0x00000001b47a420c (    0xcc) GCC_except_table21 [NameNList, MangledNameNList, NList] 
                0x00000001b47a42d8 (    0x3c) GCC_except_table22 [NameNList, MangledNameNList, NList] 
                0x00000001b47a4314 (    0x58) GCC_except_table23 [NameNList, MangledNameNList, NList] 
                0x00000001b47a436c (    0x74) GCC_except_table24 [NameNList, MangledNameNList, NList] 
                0x00000001b47a43e0 (    0x5c) GCC_except_table27 [NameNList, MangledNameNList, NList] 
                0x00000001b47a443c (    0x28) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x00000001b47a4464 (    0x14) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x00000001b47a4478 (    0x34) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x00000001b47a44ac (    0x10) GCC_except_table13 [NameNList, MangledNameNList, NList] 
                0x00000001b47a44bc (    0x18) GCC_except_table19 [NameNList, MangledNameNList, NList] 
                0x00000001b47a44d4 (    0x58) GCC_except_table27 [NameNList, MangledNameNList, NList] 
                0x00000001b47a452c (    0x10) GCC_except_table62 [NameNList, MangledNameNList, NList] 
                0x00000001b47a453c (    0x28) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x00000001b47a4564 (    0xec) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001b47a4650 (   0x1f0) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x00000001b47a4840 (    0x18) GCC_except_table11 [NameNList, MangledNameNList, NList] 
                0x00000001b47a4858 (    0xe8) GCC_except_table13 [NameNList, MangledNameNList, NList] 
                0x00000001b47a4940 (    0x60) GCC_except_table14 [NameNList, MangledNameNList, NList] 
                0x00000001b47a49a0 (    0x1c) GCC_except_table17 [NameNList, MangledNameNList, NList] 
                0x00000001b47a49bc (    0x40) GCC_except_table18 [NameNList, MangledNameNList, NList] 
                0x00000001b47a49fc (    0x98) GCC_except_table19 [NameNList, MangledNameNList, NList] 
                0x00000001b47a4a94 (   0x294) GCC_except_table20 [NameNList, MangledNameNList, NList] 
                0x00000001b47a4d28 (    0x14) GCC_except_table38 [NameNList, MangledNameNList, NList] 
                0x00000001b47a4d3c (    0x14) GCC_except_table66 [NameNList, MangledNameNList, NList] 
                0x00000001b47a4d50 (    0x44) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x00000001b47a4d94 (    0x44) GCC_except_table15 [NameNList, MangledNameNList, NList] 
                0x00000001b47a4dd8 (    0x14) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x00000001b47a4dec (    0x14) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001b47a4e00 (    0x10) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x00000001b47a4e10 (    0x20) GCC_except_table16 [NameNList, MangledNameNList, NList] 
                0x00000001b47a4e30 (    0x1c) GCC_except_table27 [NameNList, MangledNameNList, NList] 
                0x00000001b47a4e4c (    0x58) GCC_except_table73 [NameNList, MangledNameNList, NList] 
                0x00000001b47a4ea4 (    0x28) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x00000001b47a4ecc (    0x38) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x00000001b47a4f04 (    0x28) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x00000001b47a4f2c (    0xdc) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x00000001b47a5008 (    0x44) GCC_except_table14 [NameNList, MangledNameNList, NList] 
                0x00000001b47a504c (    0xa4) GCC_except_table21 [NameNList, MangledNameNList, NList] 
                0x00000001b47a50f0 (    0x2c) GCC_except_table48 [NameNList, MangledNameNList, NList] 
                0x00000001b47a511c (    0x30) GCC_except_table51 [NameNList, MangledNameNList, NList] 
                0x00000001b47a514c (    0x68) GCC_except_table55 [NameNList, MangledNameNList, NList] 
                0x00000001b47a51b4 (   0x1b8) GCC_except_table59 [NameNList, MangledNameNList, NList] 
                0x00000001b47a536c (    0x8c) GCC_except_table63 [NameNList, MangledNameNList, NList] 
                0x00000001b47a53f8 (    0x10) GCC_except_table64 [NameNList, MangledNameNList, NList] 
                0x00000001b47a5408 (    0x40) GCC_except_table66 [NameNList, MangledNameNList, NList] 
                0x00000001b47a5448 (    0x10) GCC_except_table69 [NameNList, MangledNameNList, NList] 
                0x00000001b47a5458 (    0x24) GCC_except_table70 [NameNList, MangledNameNList, NList] 
                0x00000001b47a547c (    0x18) GCC_except_table71 [NameNList, MangledNameNList, NList] 
                0x00000001b47a5494 (    0x14) GCC_except_table93 [NameNList, MangledNameNList, NList] 
                0x00000001b47a54a8 (    0x14) GCC_except_table94 [NameNList, MangledNameNList, NList] 
                0x00000001b47a54bc (    0x10) GCC_except_table110 [NameNList, MangledNameNList, NList] 
                0x00000001b47a54cc (    0x10) GCC_except_table112 [NameNList, MangledNameNList, NList] 
                0x00000001b47a54dc (    0x14) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x00000001b47a54f0 (    0x10) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x00000001b47a5500 (    0x10) GCC_except_table18 [NameNList, MangledNameNList, NList] 
                0x00000001b47a5510 (    0x10) GCC_except_table51 [NameNList, MangledNameNList, NList] 
                0x00000001b47a5520 (    0x18) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x00000001b47a5538 (    0xb4) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x00000001b47a55ec (    0x24) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x00000001b47a5610 (    0x24) GCC_except_table10 [NameNList, MangledNameNList, NList] 
                0x00000001b47a5634 (    0x5c) GCC_except_table26 [NameNList, MangledNameNList, NList] 
                0x00000001b47a5690 (    0x10) GCC_except_table36 [NameNList, MangledNameNList, NList] 
                0x00000001b47a56a0 (    0x10) GCC_except_table42 [NameNList, MangledNameNList, NList] 
                0x00000001b47a56b0 (    0x38) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001b47a56e8 (    0x64) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x00000001b47a574c (    0x24) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x00000001b47a5770 (    0xe8) GCC_except_table10 [NameNList, MangledNameNList, NList] 
                0x00000001b47a5858 (    0x2c) GCC_except_table12 [NameNList, MangledNameNList, NList] 
                0x00000001b47a5884 (   0x14c) GCC_except_table19 [NameNList, MangledNameNList, NList] 
                0x00000001b47a59d0 (    0xf0) GCC_except_table26 [NameNList, MangledNameNList, NList] 
                0x00000001b47a5ac0 (    0x10) GCC_except_table29 [NameNList, MangledNameNList, NList] 
                0x00000001b47a5ad0 (    0x38) GCC_except_table31 [NameNList, MangledNameNList, NList] 
                0x00000001b47a5b08 (    0xb8) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001b47a5bc0 (    0x54) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x00000001b47a5c14 (    0x20) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001b47a5c34 (    0x18) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x00000001b47a5c4c (    0x48) GCC_except_table16 [NameNList, MangledNameNList, NList] 
                0x00000001b47a5c94 (    0x3c) GCC_except_table17 [NameNList, MangledNameNList, NList] 
                0x00000001b47a5cd0 (   0x11c) GCC_except_table18 [NameNList, MangledNameNList, NList] 
                0x00000001b47a5dec (    0x10) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x00000001b47a5dfc (    0x30) GCC_except_table14 [NameNList, MangledNameNList, NList] 
                0x00000001b47a5e2c (    0x24) GCC_except_table18 [NameNList, MangledNameNList, NList] 
                0x00000001b47a5e50 (    0x1c) GCC_except_table19 [NameNList, MangledNameNList, NList] 
                0x00000001b47a5e6c (   0x394) GCC_except_table20 [NameNList, MangledNameNList, NList] 
                0x00000001b47a6200 (   0x1bc) GCC_except_table27 [NameNList, MangledNameNList, NList] 
                0x00000001b47a63bc (   0x104) GCC_except_table28 [NameNList, MangledNameNList, NList] 
                0x00000001b47a64c0 (    0x14) GCC_except_table30 [NameNList, MangledNameNList, NList] 
                0x00000001b47a64d4 (    0x4c) GCC_except_table33 [NameNList, MangledNameNList, NList] 
                0x00000001b47a6520 (    0x60) GCC_except_table36 [NameNList, MangledNameNList, NList] 
                0x00000001b47a6580 (    0x58) GCC_except_table38 [NameNList, MangledNameNList, NList] 
                0x00000001b47a65d8 (    0x1c) GCC_except_table40 [NameNList, MangledNameNList, NList] 
                0x00000001b47a65f4 (    0x44) GCC_except_table42 [NameNList, MangledNameNList, NList] 
                0x00000001b47a6638 (    0x7c) GCC_except_table43 [NameNList, MangledNameNList, NList] 
                0x00000001b47a66b4 (    0x88) GCC_except_table45 [NameNList, MangledNameNList, NList] 
                0x00000001b47a673c (   0x288) GCC_except_table48 [NameNList, MangledNameNList, NList] 
                0x00000001b47a69c4 (    0x10) GCC_except_table51 [NameNList, MangledNameNList, NList] 
                0x00000001b47a69d4 (    0x40) GCC_except_table61 [NameNList, MangledNameNList, NList] 
                0x00000001b47a6a14 (    0x50) GCC_except_table64 [NameNList, MangledNameNList, NList] 
                0x00000001b47a6a64 (    0x1c) GCC_except_table65 [NameNList, MangledNameNList, NList] 
                0x00000001b47a6a80 (   0x14c) GCC_except_table66 [NameNList, MangledNameNList, NList] 
                0x00000001b47a6bcc (    0x24) GCC_except_table68 [NameNList, MangledNameNList, NList] 
                0x00000001b47a6bf0 (     0xc) GCC_except_table90 [NameNList, MangledNameNList, NList] 
                0x00000001b47a6bfc (     0xc) GCC_except_table91 [NameNList, MangledNameNList, NList] 
                0x00000001b47a6c08 (     0xc) GCC_except_table137 [NameNList, MangledNameNList, NList] 
                0x00000001b47a6c14 (    0x10) GCC_except_table160 [NameNList, MangledNameNList, NList] 
                0x00000001b47a6c24 (    0x10) GCC_except_table167 [NameNList, MangledNameNList, NList] 
                0x00000001b47a6c34 (     0xc) GCC_except_table171 [NameNList, MangledNameNList, NList] 
                0x00000001b47a6c40 (     0xc) GCC_except_table180 [NameNList, MangledNameNList, NList] 
                0x00000001b47a6c4c (    0x10) GCC_except_table189 [NameNList, MangledNameNList, NList] 
                0x00000001b47a6c5c (    0x10) GCC_except_table195 [NameNList, MangledNameNList, NList] 
                0x00000001b47a6c6c (    0x30) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x00000001b47a6c9c (    0x20) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001b47a6cbc (    0x30) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x00000001b47a6cec (    0x1c) GCC_except_table14 [NameNList, MangledNameNList, NList] 
                0x00000001b47a6d08 (    0x64) GCC_except_table21 [NameNList, MangledNameNList, NList] 
                0x00000001b47a6d6c (    0x24) GCC_except_table24 [NameNList, MangledNameNList, NList] 
                0x00000001b47a6d90 (    0x58) GCC_except_table26 [NameNList, MangledNameNList, NList] 
                0x00000001b47a6de8 (    0x20) GCC_except_table29 [NameNList, MangledNameNList, NList] 
                0x00000001b47a6e08 (    0x68) GCC_except_table37 [NameNList, MangledNameNList, NList] 
                0x00000001b47a6e70 (    0x1c) GCC_except_table38 [NameNList, MangledNameNList, NList] 
                0x00000001b47a6e8c (    0xd8) GCC_except_table39 [NameNList, MangledNameNList, NList] 
                0x00000001b47a6f64 (    0x24) GCC_except_table44 [NameNList, MangledNameNList, NList] 
                0x00000001b47a6f88 (    0x10) GCC_except_table86 [NameNList, MangledNameNList, NList] 
                0x00000001b47a6f98 (    0x14) GCC_except_table87 [NameNList, MangledNameNList, NList] 
                0x00000001b47a6fac (    0x70) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x00000001b47a701c (    0x20) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x00000001b47a703c (    0x5c) GCC_except_table12 [NameNList, MangledNameNList, NList] 
                0x00000001b47a7098 (    0x34) GCC_except_table15 [NameNList, MangledNameNList, NList] 
                0x00000001b47a70cc (    0x14) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x00000001b47a70e0 (    0x18) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x00000001b47a70f8 (    0x38) GCC_except_table14 [NameNList, MangledNameNList, NList] 
                0x00000001b47a7130 (    0x1c) GCC_except_table74 [NameNList, MangledNameNList, NList] 
                0x00000001b47a714c (    0x40) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x00000001b47a718c (    0x14) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x00000001b47a71a0 (   0x1e4) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x00000001b47a7384 (    0x28) GCC_except_table26 [NameNList, MangledNameNList, NList] 
                0x00000001b47a73ac (    0x34) GCC_except_table30 [NameNList, MangledNameNList, NList] 
                0x00000001b47a73e0 (    0x50) GCC_except_table34 [NameNList, MangledNameNList, NList] 
                0x00000001b47a7430 (   0x128) GCC_except_table35 [NameNList, MangledNameNList, NList] 
                0x00000001b47a7558 (    0x6c) GCC_except_table36 [NameNList, MangledNameNList, NList] 
                0x00000001b47a75c4 (    0xa0) GCC_except_table42 [NameNList, MangledNameNList, NList] 
                0x00000001b47a7664 (    0x40) GCC_except_table47 [NameNList, MangledNameNList, NList] 
                0x00000001b47a76a4 (    0x14) GCC_except_table49 [NameNList, MangledNameNList, NList] 
                0x00000001b47a76b8 (    0x44) GCC_except_table55 [NameNList, MangledNameNList, NList] 
                0x00000001b47a76fc (    0x14) GCC_except_table71 [NameNList, MangledNameNList, NList] 
                0x00000001b47a7710 (    0x10) GCC_except_table75 [NameNList, MangledNameNList, NList] 
                0x00000001b47a7720 (    0x10) GCC_except_table78 [NameNList, MangledNameNList, NList] 
                0x00000001b47a7730 (    0x14) GCC_except_table84 [NameNList, MangledNameNList, NList] 
                0x00000001b47a7744 (    0x6c) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x00000001b47a77b0 (    0x58) GCC_except_table12 [NameNList, MangledNameNList, NList] 
                0x00000001b47a7808 (    0x48) GCC_except_table13 [NameNList, MangledNameNList, NList] 
                0x00000001b47a7850 (    0x64) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x00000001b47a78b4 (    0x38) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x00000001b47a78ec (    0x10) GCC_except_table57 [NameNList, MangledNameNList, NList] 
                0x00000001b47a78fc (    0x48) GCC_except_table65 [NameNList, MangledNameNList, NList] 
                0x00000001b47a7944 (   0x120) GCC_except_table98 [NameNList, MangledNameNList, NList] 
                0x00000001b47a7a64 (    0xb8) GCC_except_table99 [NameNList, MangledNameNList, NList] 
                0x00000001b47a7b1c (    0x18) GCC_except_table116 [NameNList, MangledNameNList, NList] 
                0x00000001b47a7b34 (    0x24) GCC_except_table117 [NameNList, MangledNameNList, NList] 
                0x00000001b47a7b58 (    0x60) GCC_except_table130 [NameNList, MangledNameNList, NList] 
                0x00000001b47a7bb8 (    0x18) GCC_except_table134 [NameNList, MangledNameNList, NList] 
                0x00000001b47a7bd0 (    0x10) GCC_except_table136 [NameNList, MangledNameNList, NList] 
                0x00000001b47a7be0 (    0x14) GCC_except_table139 [NameNList, MangledNameNList, NList] 
                0x00000001b47a7bf4 (    0x2c) GCC_except_table140 [NameNList, MangledNameNList, NList] 
                0x00000001b47a7c20 (    0x4c) GCC_except_table142 [NameNList, MangledNameNList, NList] 
                0x00000001b47a7c6c (    0x3c) GCC_except_table143 [NameNList, MangledNameNList, NList] 
                0x00000001b47a7ca8 (    0x14) GCC_except_table149 [NameNList, MangledNameNList, NList] 
                0x00000001b47a7cbc (    0x18) GCC_except_table153 [NameNList, MangledNameNList, NList] 
                0x00000001b47a7cd4 (    0x1c) GCC_except_table154 [NameNList, MangledNameNList, NList] 
                0x00000001b47a7cf0 (    0x64) GCC_except_table165 [NameNList, MangledNameNList, NList] 
                0x00000001b47a7d54 (    0x44) GCC_except_table166 [NameNList, MangledNameNList, NList] 
                0x00000001b47a7d98 (    0x10) GCC_except_table188 [NameNList, MangledNameNList, NList] 
                0x00000001b47a7da8 (    0x14) GCC_except_table199 [NameNList, MangledNameNList, NList] 
                0x00000001b47a7dbc (    0x10) GCC_except_table202 [NameNList, MangledNameNList, NList] 
                0x00000001b47a7dcc (    0x14) GCC_except_table223 [NameNList, MangledNameNList, NList] 
                0x00000001b47a7de0 (    0x1c) GCC_except_table238 [NameNList, MangledNameNList, NList] 
                0x00000001b47a7dfc (    0x10) GCC_except_table253 [NameNList, MangledNameNList, NList] 
                0x00000001b47a7e0c (    0x10) GCC_except_table258 [NameNList, MangledNameNList, NList] 
                0x00000001b47a7e1c (    0x10) GCC_except_table264 [NameNList, MangledNameNList, NList] 
                0x00000001b47a7e2c (    0x10) GCC_except_table276 [NameNList, MangledNameNList, NList] 
                0x00000001b47a7e3c (    0x10) GCC_except_table277 [NameNList, MangledNameNList, NList] 
                0x00000001b47a7e4c (    0x14) GCC_except_table279 [NameNList, MangledNameNList, NList] 
                0x00000001b47a7e60 (    0x1c) GCC_except_table297 [NameNList, MangledNameNList, NList] 
                0x00000001b47a7e7c (    0x10) GCC_except_table300 [NameNList, MangledNameNList, NList] 
                0x00000001b47a7e8c (    0x10) GCC_except_table30 [NameNList, MangledNameNList, NList] 
                0x00000001b47a7e9c (    0x10) GCC_except_table53 [NameNList, MangledNameNList, NList] 
                0x00000001b47a7eac (    0x4c) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x00000001b47a7ef8 (    0x14) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x00000001b47a7f0c (    0x10) GCC_except_table33 [NameNList, MangledNameNList, NList] 
                0x00000001b47a7f1c (    0x1c) GCC_except_table39 [NameNList, MangledNameNList, NList] 
                0x00000001b47a7f38 (    0x10) GCC_except_table57 [NameNList, MangledNameNList, NList] 
                0x00000001b47a7f48 (     0xc) GCC_except_table58 [NameNList, MangledNameNList, NList] 
                0x00000001b47a7f54 (    0x30) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x00000001b47a7f84 (    0x1c) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001b47a7fa0 (   0x304) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x00000001b47a82a4 (    0x20) GCC_except_table19 [NameNList, MangledNameNList, NList] 
                0x00000001b47a82c4 (    0x24) GCC_except_table28 [NameNList, MangledNameNList, NList] 
                0x00000001b47a82e8 (    0x1c) GCC_except_table59 [NameNList, MangledNameNList, NList] 
                0x00000001b47a8304 (    0x14) GCC_except_table61 [NameNList, MangledNameNList, NList] 
                0x00000001b47a8318 (    0x14) GCC_except_table63 [NameNList, MangledNameNList, NList] 
                0x00000001b47a832c (    0x14) GCC_except_table64 [NameNList, MangledNameNList, NList] 
                0x00000001b47a8340 (    0x44) GCC_except_table71 [NameNList, MangledNameNList, NList] 
                0x00000001b47a8384 (    0x20) GCC_except_table78 [NameNList, MangledNameNList, NList] 
                0x00000001b47a83a4 (    0x14) GCC_except_table79 [NameNList, MangledNameNList, NList] 
                0x00000001b47a83b8 (    0x20) GCC_except_table86 [NameNList, MangledNameNList, NList] 
                0x00000001b47a83d8 (    0x10) GCC_except_table106 [NameNList, MangledNameNList, NList] 
                0x00000001b47a83e8 (    0x10) GCC_except_table110 [NameNList, MangledNameNList, NList] 
                0x00000001b47a83f8 (    0x2c) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x00000001b47a8424 (    0x2c) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001b47a8450 (    0x24) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x00000001b47a8474 (    0x18) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x00000001b47a848c (    0x58) GCC_except_table10 [NameNList, MangledNameNList, NList] 
                0x00000001b47a84e4 (    0x20) GCC_except_table14 [NameNList, MangledNameNList, NList] 
                0x00000001b47a8504 (    0x14) GCC_except_table16 [NameNList, MangledNameNList, NList] 
                0x00000001b47a8518 (    0x2c) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x00000001b47a8544 (    0x10) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x00000001b47a8554 (    0x14) GCC_except_table10 [NameNList, MangledNameNList, NList] 
                0x00000001b47a8568 (    0x24) GCC_except_table11 [NameNList, MangledNameNList, NList] 
                0x00000001b47a858c (    0x20) GCC_except_table14 [NameNList, MangledNameNList, NList] 
                0x00000001b47a85ac (    0x24) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001b47a85d0 (    0x14) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x00000001b47a85e4 (    0x20) GCC_except_table15 [NameNList, MangledNameNList, NList] 
                0x00000001b47a8604 (    0x14) GCC_except_table27 [NameNList, MangledNameNList, NList] 
                0x00000001b47a8618 (    0x10) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x00000001b47a8628 (    0x54) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x00000001b47a867c (   0x18c) GCC_except_table17 [NameNList, MangledNameNList, NList] 
                0x00000001b47a8808 (    0x10) GCC_except_table47 [NameNList, MangledNameNList, NList] 
                0x00000001b47a8818 (    0x70) GCC_except_table50 [NameNList, MangledNameNList, NList] 
                0x00000001b47a8888 (    0x50) GCC_except_table55 [NameNList, MangledNameNList, NList] 
                0x00000001b47a88d8 (    0x30) GCC_except_table68 [NameNList, MangledNameNList, NList] 
                0x00000001b47a8908 (    0x14) GCC_except_table70 [NameNList, MangledNameNList, NList] 
                0x00000001b47a891c (    0x44) GCC_except_table71 [NameNList, MangledNameNList, NList] 
                0x00000001b47a8960 (    0x18) GCC_except_table76 [NameNList, MangledNameNList, NList] 
                0x00000001b47a8978 (    0x24) GCC_except_table11 [NameNList, MangledNameNList, NList] 
                0x00000001b47a899c (   0x174) GCC_except_table13 [NameNList, MangledNameNList, NList] 
                0x00000001b47a8b10 (    0x10) GCC_except_table60 [NameNList, MangledNameNList, NList] 
                0x00000001b47a8b20 (    0x14) GCC_except_table21 [NameNList, MangledNameNList, NList] 
                0x00000001b47a8b34 (    0x1c) GCC_except_table22 [NameNList, MangledNameNList, NList] 
                0x00000001b47a8b50 (    0x14) GCC_except_table23 [NameNList, MangledNameNList, NList] 
                0x00000001b47a8b64 (    0x14) GCC_except_table25 [NameNList, MangledNameNList, NList] 
                0x00000001b47a8b78 (    0x10) GCC_except_table26 [NameNList, MangledNameNList, NList] 
                0x00000001b47a8b88 (    0x14) GCC_except_table28 [NameNList, MangledNameNList, NList] 
                0x00000001b47a8b9c (    0x14) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x00000001b47a8bb0 (    0x44) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x00000001b47a8bf4 (    0x10) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001b47a8c04 (    0x78) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x00000001b47a8c7c (    0x14) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x00000001b47a8c90 (    0x14) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x00000001b47a8ca4 (    0x10) GCC_except_table51 [NameNList, MangledNameNList, NList] 
                0x00000001b47a8cb4 (    0x10) GCC_except_table91 [NameNList, MangledNameNList, NList] 
                0x00000001b47a8cc4 (    0x10) GCC_except_table108 [NameNList, MangledNameNList, NList] 
                0x00000001b47a8cd4 (   0x19c) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001b47a8e70 (     0xc) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x00000001b47a8e7c (    0x10) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x00000001b47a8e8c (    0x40) GCC_except_table13 [NameNList, MangledNameNList, NList] 
                0x00000001b47a8ecc (    0x20) GCC_except_table25 [NameNList, MangledNameNList, NList] 
                0x00000001b47a8eec (    0x10) GCC_except_table32 [NameNList, MangledNameNList, NList] 
                0x00000001b47a8efc (    0x10) GCC_except_table36 [NameNList, MangledNameNList, NList] 
                0x00000001b47a8f0c (    0x14) GCC_except_table37 [NameNList, MangledNameNList, NList] 
                0x00000001b47a8f20 (    0x28) GCC_except_table41 [NameNList, MangledNameNList, NList] 
                0x00000001b47a8f48 (    0x1c) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x00000001b47a8f64 (    0x3c) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x00000001b47a8fa0 (    0x14) GCC_except_table18 [NameNList, MangledNameNList, NList] 
                0x00000001b47a8fb4 (    0x14) GCC_except_table31 [NameNList, MangledNameNList, NList] 
                0x00000001b47a8fc8 (    0x18) GCC_except_table32 [NameNList, MangledNameNList, NList] 
                0x00000001b47a8fe0 (    0x2c) GCC_except_table34 [NameNList, MangledNameNList, NList] 
                0x00000001b47a900c (    0x14) GCC_except_table44 [NameNList, MangledNameNList, NList] 
                0x00000001b47a9020 (    0x1c) GCC_except_table45 [NameNList, MangledNameNList, NList] 
                0x00000001b47a903c (    0x4c) GCC_except_table77 [NameNList, MangledNameNList, NList] 
                0x00000001b47a9088 (    0x14) GCC_except_table95 [NameNList, MangledNameNList, NList] 
                0x00000001b47a909c (    0x18) GCC_except_table98 [NameNList, MangledNameNList, NList] 
                0x00000001b47a90b4 (    0x10) GCC_except_table104 [NameNList, MangledNameNList, NList] 
                0x00000001b47a90c4 (    0x10) GCC_except_table108 [NameNList, MangledNameNList, NList] 
                0x00000001b47a90d4 (    0x14) GCC_except_table111 [NameNList, MangledNameNList, NList] 
                0x00000001b47a90e8 (    0x3c) GCC_except_table17 [NameNList, MangledNameNList, NList] 
                0x00000001b47a9124 (    0x30) GCC_except_table19 [NameNList, MangledNameNList, NList] 
                0x00000001b47a9154 (    0x60) GCC_except_table25 [NameNList, MangledNameNList, NList] 
                0x00000001b47a91b4 (    0xf8) GCC_except_table26 [NameNList, MangledNameNList, NList] 
                0x00000001b47a92ac (    0xf4) GCC_except_table38 [NameNList, MangledNameNList, NList] 
                0x00000001b47a93a0 (   0x124) GCC_except_table49 [NameNList, MangledNameNList, NList] 
                0x00000001b47a94c4 (    0x10) GCC_except_table51 [NameNList, MangledNameNList, NList] 
                0x00000001b47a94d4 (    0x10) GCC_except_table52 [NameNList, MangledNameNList, NList] 
                0x00000001b47a94e4 (    0x10) GCC_except_table53 [NameNList, MangledNameNList, NList] 
                0x00000001b47a94f4 (    0x10) GCC_except_table69 [NameNList, MangledNameNList, NList] 
                0x00000001b47a9504 (    0x10) GCC_except_table103 [NameNList, MangledNameNList, NList] 
                0x00000001b47a9514 (    0x10) GCC_except_table104 [NameNList, MangledNameNList, NList] 
                0x00000001b47a9524 (    0x14) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x00000001b47a9538 (    0x10) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001b47a9548 (    0xa8) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x00000001b47a95f0 (    0x24) GCC_except_table22 [NameNList, MangledNameNList, NList] 
                0x00000001b47a9614 (    0x1c) GCC_except_table24 [NameNList, MangledNameNList, NList] 
                0x00000001b47a9630 (    0xb8) GCC_except_table25 [NameNList, MangledNameNList, NList] 
                0x00000001b47a96e8 (    0x14) GCC_except_table33 [NameNList, MangledNameNList, NList] 
                0x00000001b47a96fc (    0x14) GCC_except_table35 [NameNList, MangledNameNList, NList] 
                0x00000001b47a9710 (    0x28) GCC_except_table40 [NameNList, MangledNameNList, NList] 
                0x00000001b47a9738 (    0x20) GCC_except_table45 [NameNList, MangledNameNList, NList] 
                0x00000001b47a9758 (    0x10) GCC_except_table49 [NameNList, MangledNameNList, NList] 
                0x00000001b47a9768 (    0x10) GCC_except_table69 [NameNList, MangledNameNList, NList] 
                0x00000001b47a9778 (    0x18) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x00000001b47a9790 (    0x1c) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x00000001b47a97ac (    0x58) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x00000001b47a9804 (    0x68) GCC_except_table12 [NameNList, MangledNameNList, NList] 
                0x00000001b47a986c (     0xc) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x00000001b47a9878 (    0x10) GCC_except_table16 [NameNList, MangledNameNList, NList] 
                0x00000001b47a9888 (    0x10) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x00000001b47a9898 (    0x14) GCC_except_table12 [NameNList, MangledNameNList, NList] 
                0x00000001b47a98ac (    0x2c) GCC_except_table23 [NameNList, MangledNameNList, NList] 
                0x00000001b47a98d8 (    0x14) GCC_except_table41 [NameNList, MangledNameNList, NList] 
                0x00000001b47a98ec (    0x1c) GCC_except_table88 [NameNList, MangledNameNList, NList] 
                0x00000001b47a9908 (    0x18) GCC_except_table89 [NameNList, MangledNameNList, NList] 
                0x00000001b47a9920 (    0x14) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x00000001b47a9934 (    0xb4) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x00000001b47a99e8 (    0x98) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x00000001b47a9a80 (    0x10) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x00000001b47a9a90 (    0x58) GCC_except_table11 [NameNList, MangledNameNList, NList] 
                0x00000001b47a9ae8 (    0x28) GCC_except_table12 [NameNList, MangledNameNList, NList] 
                0x00000001b47a9b10 (    0x28) GCC_except_table13 [NameNList, MangledNameNList, NList] 
                0x00000001b47a9b38 (    0x38) GCC_except_table15 [NameNList, MangledNameNList, NList] 
                0x00000001b47a9b70 (    0x28) GCC_except_table17 [NameNList, MangledNameNList, NList] 
                0x00000001b47a9b98 (    0x2c) GCC_except_table22 [NameNList, MangledNameNList, NList] 
                0x00000001b47a9bc4 (    0x20) GCC_except_table23 [NameNList, MangledNameNList, NList] 
                0x00000001b47a9be4 (    0x20) GCC_except_table29 [NameNList, MangledNameNList, NList] 
                0x00000001b47a9c04 (    0x20) GCC_except_table30 [NameNList, MangledNameNList, NList] 
                0x00000001b47a9c24 (    0x10) GCC_except_table51 [NameNList, MangledNameNList, NList] 
                0x00000001b47a9c34 (    0x58) GCC_except_table54 [NameNList, MangledNameNList, NList] 
                0x00000001b47a9c8c (    0x20) GCC_except_table55 [NameNList, MangledNameNList, NList] 
                0x00000001b47a9cac (    0x24) GCC_except_table66 [NameNList, MangledNameNList, NList] 
                0x00000001b47a9cd0 (    0x10) GCC_except_table68 [NameNList, MangledNameNList, NList] 
                0x00000001b47a9ce0 (    0x10) GCC_except_table75 [NameNList, MangledNameNList, NList] 
                0x00000001b47a9cf0 (    0x10) GCC_except_table77 [NameNList, MangledNameNList, NList] 
                0x00000001b47a9d00 (    0x34) GCC_except_table5 [NameNList, MangledNameNList, NList] 
            0x00000001b47a9d34 (  0xb23c) __TEXT __unwind_info
            0x00000001b47b4f70 (    0x88) __TEXT __eh_frame
        0x00000001d3b50e48 (  0x74f8) __DATA_CONST SEGMENT
            0x00000001d3b50e48 (    0xf0) __DATA_CONST __got
            0x00000001d3b50f38 (  0x7408) __DATA_CONST __const
                0x00000001d3b50f38 (    0xe0) pParameterVersion [NameNList, MangledNameNList, NList] 
                0x00000001d3b51018 (    0xc0) pItnRuleVersion [NameNList, MangledNameNList, NList] 
                0x00000001d3b510d8 (    0x40) pLexUpgradeVersion [NameNList, MangledNameNList, NList] 
                0x00000001d3b51118 (    0x20) pTknRespellVersion [NameNList, MangledNameNList, NList] 
                0x00000001d3b51138 (    0x60) pTknPatternVersion [NameNList, MangledNameNList, NList] 
                0x00000001d3b51198 (    0x40) pTknGrammarVersion [NameNList, MangledNameNList, NList] 
                0x00000001d3b511d8 (    0x80) pWordFlagVersion [NameNList, MangledNameNList, NList] 
                0x00000001d3b51258 (    0x60) pFeatureConfigVersion [NameNList, MangledNameNList, NList] 
                0x00000001d3b512b8 (    0x20) pItnGrammar2Version [NameNList, MangledNameNList, NList] 
                0x00000001d3b512d8 (    0x60) pTknDecompVersion [NameNList, MangledNameNList, NList] 
                0x00000001d3b51338 (    0x40) pTknMungeVersion [NameNList, MangledNameNList, NList] 
                0x00000001d3b51378 (    0x80) pItnGrammarVersion [NameNList, MangledNameNList, NList] 
                0x00000001d3b513f8 (    0x20) pRulesVersion [NameNList, MangledNameNList, NList] 
                0x00000001d3b51418 (    0x20) pCollationVersion [NameNList, MangledNameNList, NList] 
                0x00000001d3b51438 (    0x80) sDiagnosticMatrixComputationEnum [NameNList, MangledNameNList, NList] 
                0x00000001d3b514b8 (   0x2a0) sUserDeltaTyingTypeEnumHistory [NameNList, MangledNameNList, NList] 
                0x00000001d3b51758 (   0x8d8) sStringEncodingTable [NameNList, MangledNameNList, NList] 
                0x00000001d3b52030 (    0x30) sSearchCrossLayerThreshScoreIncrementMatrixStringHistory [NameNList, MangledNameNList, NList] 
                0x00000001d3b52060 (    0x30) sSearchCrossLayerWordEndThreshScoreIncrementMatrixStringHistory [NameNList, MangledNameNList, NList] 
                0x00000001d3b52090 (   0x2a0) sChannelAdaptationMeansReestimationTypeEnumHistory [NameNList, MangledNameNList, NList] 
                0x00000001d3b52330 (   0x2a0) sChannelThreadingTypeEnumHistory [NameNList, MangledNameNList, NList] 
                0x00000001d3b525d0 (    0x70) sFieldNamesAndFormats [NameNList, MangledNameNList, NList] 
                0x00000001d3b52640 (    0x60) MrecTime::setToPreprocessorStyleDateAndTime(char const*, char const*)::ppMonth [NameNList, MangledNameNList, NList] 
                0x00000001d3b526a0 (   0x230) s_szTableCharacterComposition0300to0345 [NameNList, MangledNameNList, NList] 
                0x00000001d3b528d0 (   0x310) s_szTableKatakanaToRomaji [NameNList, MangledNameNList, NList] 
                0x00000001d3b52be0 (    0x30) sSearchConTransAccFactorListStringHistory [NameNList, MangledNameNList, NList] 
                0x00000001d3b52c10 (    0x30) sSearchHierScorerBeamListStringHistory [NameNList, MangledNameNList, NList] 
                0x00000001d3b52c40 (    0x48) sSearchHierScorerCutoffListStringHistory [NameNList, MangledNameNList, NList] 
                0x00000001d3b52c88 (    0x30) sSearchHierScorerCutoffRatioListStringHistory [NameNList, MangledNameNList, NList] 
                0x00000001d3b52cb8 (    0x48) sFstCoreAttilaLatticeOutputFileNamePrefixStringHistory [NameNList, MangledNameNList, NList] 
                0x00000001d3b52d00 (   0x2a0) sSearchDecimationTypeEnumHistory [NameNList, MangledNameNList, NList] 
                0x00000001d3b52fa0 (   0x2a0) sSearchFrameTransformerThreadingTypeEnumHistory [NameNList, MangledNameNList, NList] 
                0x00000001d3b53240 (   0x2a0) sSearchThreadingTypeEnumHistory [NameNList, MangledNameNList, NList] 
                0x00000001d3b534e0 (   0x3f0) sSearchAdjustThreshScoreTypeEnumHistory [NameNList, MangledNameNList, NList] 
                0x00000001d3b538d0 (   0x2a0) sSearchNodeSkippingTypeEnumHistory [NameNList, MangledNameNList, NList] 
                0x00000001d3b53b70 (   0x3f0) sSearchLMLimitEnumHistory [NameNList, MangledNameNList, NList] 
                0x00000001d3b53f60 (   0x540) sFstCoreSearchTypeEnumHistory [NameNList, MangledNameNList, NList] 
                0x00000001d3b544a0 (   0x2a0) sFstCoreLatticeGenerationEnumHistory [NameNList, MangledNameNList, NList] 
                0x00000001d3b54740 (   0x2a0) sSearchPartialIncludePrefiltererResultEnumHistory [NameNList, MangledNameNList, NList] 
                0x00000001d3b549e0 (    0x10) sSDInitCheckSizesInternal [NameNList, MangledNameNList, NList] 
                0x00000001d3b549f0 (   0xb00) sSDInitCheckRecordsInternal [NameNList, MangledNameNList, NList] 
                0x00000001d3b554f0 (     0x8) gMrecCompileDate [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d3b554f8 (    0x50) gMrecCompileTime [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d3b55548 (    0x30) sPrefiltererBuildHierScorerBeamListStringHistory [NameNList, MangledNameNList, NList] 
                0x00000001d3b55578 (    0x48) sPrefiltererBuildHierScorerCutoffListStringHistory [NameNList, MangledNameNList, NList] 
                0x00000001d3b555c0 (    0x30) sPrefiltererBuildHierScorerCutoffRatioListStringHistory [NameNList, MangledNameNList, NList] 
                0x00000001d3b555f0 (   0x2a0) sPrefiltererBuildLookaheadScoringTypeEnumHistory [NameNList, MangledNameNList, NList] 
                0x00000001d3b55890 (   0x2a0) sPrefiltererBuildLookaheadThreadingTypeEnumHistory [NameNList, MangledNameNList, NList] 
                0x00000001d3b55b30 (   0x2a0) sPrefiltererBuildThreadingTypeEnumHistory [NameNList, MangledNameNList, NList] 
                0x00000001d3b55dd0 (   0x3f0) sPrefiltererBuildContextTypeEnumHistory [NameNList, MangledNameNList, NList] 
                0x00000001d3b561c0 (   0x2f0) sPrefiltererBuildWordBoundaryTypeEnumHistory [NameNList, MangledNameNList, NList] 
                0x00000001d3b564b0 (    0x48) sParamTypeNames [NameNList, MangledNameNList, NList] 
                0x00000001d3b564f8 (   0xec8) checkVersionAndSizes(unsigned int, unsigned int, SDInitTypeSize const*)::types [NameNList, MangledNameNList, NList] 
                0x00000001d3b573c0 (    0x60) sDiagnosticSearchRecognitionNetTypeEnum [NameNList, MangledNameNList, NList] 
                0x00000001d3b57420 (   0x2a0) sAdaptationDTMMErrorFunctionEnumHistory [NameNList, MangledNameNList, NList] 
                0x00000001d3b576c0 (   0x1a0) arabicToRoman(unsigned long, TBuffer<wchar_t>&)::pppszRomanTable [NameNList, MangledNameNList, NList] 
                0x00000001d3b57860 (    0x48) TCondition::setEnum(TFileObject const*, unsigned long)::ppszSource [NameNList, MangledNameNList, NList] 
                0x00000001d3b578a8 (    0x38) TCondition::setEnum(TFileObject const*, unsigned long)::ppszTokenPos [NameNList, MangledNameNList, NList] 
                0x00000001d3b578e0 (    0x80) sDiagnosticPackedIntPelScoringEnum [NameNList, MangledNameNList, NList] 
                0x00000001d3b57960 (    0x80) sDiagnosticLinearTransformationEnum [NameNList, MangledNameNList, NList] 
                0x00000001d3b579e0 (    0x30) sPronGuessFragmentSuffixTagStringHistory [NameNList, MangledNameNList, NList] 
                0x00000001d3b57a10 (   0x2a0) sPrefiltererDecimationTypeEnumHistory [NameNList, MangledNameNList, NList] 
                0x00000001d3b57cb0 (   0x3f0) sPrefiltererAdjustThreshScoreTypeEnumHistory [NameNList, MangledNameNList, NList] 
                0x00000001d3b580a0 (   0x2a0) sPrefiltererNodeSkippingTypeEnumHistory [NameNList, MangledNameNList, NList] 
        0x00000001de87b748 (  0xa450) __AUTH_CONST SEGMENT
            0x00000001de87b748 (  0x9d78) __AUTH_CONST __const
                0x00000001de87b748 (    0x20) typeinfo for DgnException* [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87b768 (    0x10) typeinfo for DgnMemoryException [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87b778 (    0x20) typeinfo for DgnMemoryException* [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87b798 (    0x20) typeinfo for DgnFileIOException* [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87b7b8 (    0x38) vtable for BoolGlobalParam [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87b7f0 (    0x18) typeinfo for BoolGlobalParam [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87b808 (    0x38) vtable for EnumGlobalParam [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87b840 (    0x18) typeinfo for EnumGlobalParam [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87b858 (    0x40) vtable for TParam [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87b898 (    0x40) vtable for TIntParam [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87b8d8 (    0x10) typeinfo for TException [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87b8e8 (    0x18) typeinfo for TLogicException [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87b900 (    0x40) vtable for TStringParam [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87b940 (    0x30) vtable for TParamManager [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87b970 (    0x18) typeinfo for TDataException [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87b988 (    0x18) typeinfo for TSemanticException [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87b9a0 (    0x10) typeinfo for TParam [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87b9b0 (    0x18) typeinfo for TIntParam [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87b9c8 (    0x18) typeinfo for TBoolParam [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87b9e0 (    0x18) typeinfo for TStringParam [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87b9f8 (    0x40) vtable for TBoolParam [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87ba38 (    0x40) vtable for TFloatParam [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87ba78 (    0x18) typeinfo for TFloatParam [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87ba90 (    0x10) typeinfo for TRegisterable<TParamManager> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87baa0 (    0x18) typeinfo for TParamManager [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87bab8 (    0x20) vtable for TLogicException [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87bad8 (    0x20) vtable for TException [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87baf8 (    0x50) vtable for std::__1::basic_ostringstream<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87bb48 (    0x20) VTT for std::__1::basic_ostringstream<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87bb68 (    0x50) construction vtable for std::__1::basic_ostream<wchar_t, std::__1::char_traits<wchar_t>>-in-std::__1::basic_ostringstream<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87bbb8 (    0x18) typeinfo for std::__1::basic_ostringstream<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87bbd0 (    0x80) vtable for std::__1::basic_stringbuf<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87bc50 (    0x18) typeinfo for std::__1::basic_stringbuf<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87bc68 (    0x20) vtable for TDataException [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87bc88 (    0x20) vtable for TSemanticException [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87bca8 (    0x20) vtable for TRegisterable<TParamManager> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87bcc8 (    0x28) vtable for TProp<unsigned long> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87bcf0 (    0x10) typeinfo for TProp<unsigned long> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87bd00 (    0x88) vtable for HScorer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87bd88 (    0x18) typeinfo for HScorer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87bda0 (    0x30) vtable for DSMShmOperation [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87bdd0 (    0x10) typeinfo for DSMOperation [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87bde0 (    0x18) typeinfo for DSMShmOperation [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87bdf8 (    0x30) vtable for DSMFileOperation [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87be28 (    0x18) typeinfo for DSMFileOperation [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87be40 (    0x28) vtable for HashKEV<unsigned int, unsigned int, CWIDScope> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87be68 (    0x18) typeinfo for HashKEV<unsigned int, unsigned int, CWIDScope> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87be80 (    0x80) vtable for UserDeltaParamSet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87bf00 (    0x10) typeinfo for ParamSetBase [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87bf10 (    0x18) typeinfo for UserDeltaParamSet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87bf28 (    0x80) vtable for ParamSetBase [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87bfa8 (    0x38) vtable for TGrammarCompiler [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87bfe0 (    0x18) typeinfo for TSyntaxException [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87bff8 (    0x10) typeinfo for TDataMaker [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87c008 (    0x18) typeinfo for TGrammarCompiler [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87c020 (    0x20) vtable for TSyntaxException [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87c040 (    0x90) vtable for TItnRuleManager [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87c0d0 (    0x10) typeinfo for TIFormatterRuleManager [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87c0e0 (    0x18) typeinfo for TItnRuleManager [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87c0f8 (    0x10) typeinfo for RecogGermIterator [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87c108 (    0x30) vtable for RecogGermArrayRecogGermIterator [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87c138 (    0x18) typeinfo for RecogGermArrayRecogGermIterator [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87c150 (    0x28) vtable for Hash<StateSpec, StateSpec, StateSpec, bool> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87c178 (    0x18) typeinfo for Hash<StateSpec, StateSpec, StateSpec, bool> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87c190 (    0x28) vtable for Hash<StateSpec, StateSpec, StateSpec, unsigned int> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87c1b8 (    0x18) typeinfo for Hash<StateSpec, StateSpec, StateSpec, unsigned int> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87c1d0 (    0x28) vtable for TResGraphMaker [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87c1f8 (    0x10) typeinfo for TResultMaker [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87c208 (    0x18) typeinfo for TResGraphMaker [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87c220 (    0x80) vtable for SearchCrossLayerParamSet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87c2a0 (    0x18) typeinfo for SearchCrossLayerParamSet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87c2b8 (    0x28) vtable for Hash<CWIDAtFrame, CWIDAtFrame, CWIDAtFrame, unsigned int> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87c2e0 (    0x18) typeinfo for Hash<CWIDAtFrame, CWIDAtFrame, CWIDAtFrame, unsigned int> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87c2f8 (    0x28) vtable for HashKEV<unsigned int, unsigned int, WordIdScope> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87c320 (    0x18) typeinfo for HashKEV<unsigned int, unsigned int, WordIdScope> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87c338 (    0x30) vtable for TRneParamManager [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87c368 (    0x58) vtable for TRne [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87c3c0 (    0x18) typeinfo for TRne [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87c3d8 (    0x18) typeinfo for TLattProcParamManager [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87c3f0 (    0x18) typeinfo for TRneParamManager [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87c408 (    0x30) vtable for TLattProcParamManager [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87c438 (  0x1860) sUpgradeFunctionTable [NameNList, MangledNameNList, NList] 
                0x00000001de87dc98 (    0x28) vtable for Hash<DgnString, DgnString, DgnStringScope, unsigned int> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87dcc0 (    0x18) typeinfo for Hash<DgnString, DgnString, DgnStringScope, unsigned int> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87dcd8 (    0x80) vtable for ChannelParamSet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87dd58 (    0x18) typeinfo for ChannelParamSet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87dd70 (    0x20) vtable for DgnTextFile [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87dd90 (    0x20) vtable for DgnTextFileParser [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87ddb0 (    0x20) vtable for DgnTextFileWriter [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87ddd0 (    0x10) typeinfo for DgnTextFile [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87dde0 (    0x18) typeinfo for DgnTextFileParser [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87ddf8 (    0x18) typeinfo for DgnTextFileWriter [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87de10 (    0x28) vtable for HashKEV<unsigned int, unsigned int, StateIdScope> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87de38 (    0x18) typeinfo for HashKEV<unsigned int, unsigned int, StateIdScope> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87de50 (    0x18) typeinfo for TApiException [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87de68 (    0x18) typeinfo for TUnexpectedException [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87de80 (    0x18) typeinfo for TReentrancyException [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87de98 (    0x20) vtable for TApiException [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87deb8 (    0x20) vtable for TReentrancyException [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87ded8 (    0x30) vtable for TLexiconParamManager [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87df08 (    0x20) vtable for TLexicon [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87df28 (    0x18) typeinfo for TLexiconParamManager [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87df40 (    0x10) typeinfo for TRegisterable<TLexicon> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87df50 (    0x18) typeinfo for TLexicon [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87df68 (    0x20) vtable for THashBase<std::__1::pair<wchar_t const* const, TWord*>, THashMapCompare<std::__1::pair<wchar_t const* const, TWord*>, TWideCharEqualTo>, THashMapFunction<std::__1::pair<wchar_t const* const, TWord*>, THash<wchar_t const*>>> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87df88 (    0x10) typeinfo for THashBase<std::__1::pair<wchar_t const* const, TWord*>, THashMapCompare<std::__1::pair<wchar_t const* const, TWord*>, TWideCharEqualTo>, THashMapFunction<std::__1::pair<wchar_t const* const, TWord*>, THash<wchar_t const*>>> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87df98 (    0x20) vtable for THashBase<std::__1::pair<wchar_t* const, TWordBlock*>, THashMapCompare<std::__1::pair<wchar_t* const, TWordBlock*>, TWideCharEqualTo>, THashMapFunction<std::__1::pair<wchar_t* const, TWordBlock*>, THash<wchar_t const*>>> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87dfb8 (    0x10) typeinfo for THashBase<std::__1::pair<wchar_t* const, TWordBlock*>, THashMapCompare<std::__1::pair<wchar_t* const, TWordBlock*>, TWideCharEqualTo>, THashMapFunction<std::__1::pair<wchar_t* const, TWordBlock*>, THash<wchar_t const*>>> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87dfc8 (    0x20) vtable for THashBase<std::__1::pair<TDecodeLinkMapWord::THistory const, TDecodeLinkMapWord const*>, THashMapCompare<std::__1::pair<TDecodeLinkMapWord::THistory const, TDecodeLinkMapWord const*>, std::__1::equal_to<TDecodeLinkMapWord::THistory>>, THashMapFunction<std::__1::pair<TDecodeLinkMapWord::THistory const, TDecodeLinkMapWord const*>, THash<TDecodeLinkMapWord::THistory>>> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87dfe8 (    0x10) typeinfo for THashBase<std::__1::pair<TDecodeLinkMapWord::THistory const, TDecodeLinkMapWord const*>, THashMapCompare<std::__1::pair<TDecodeLinkMapWord::THistory const, TDecodeLinkMapWord const*>, std::__1::equal_to<TDecodeLinkMapWord::THistory>>, THashMapFunction<std::__1::pair<TDecodeLinkMapWord::THistory const, TDecodeLinkMapWord const*>, THash<TDecodeLinkMapWord::THistory>>> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87dff8 (    0x20) vtable for TRegisterable<TLexicon> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87e018 (    0x20) vtable for THashMap<wchar_t*, TWordBlock*, THash<wchar_t const*>, TWideCharEqualTo> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87e038 (    0x18) typeinfo for THashMap<wchar_t*, TWordBlock*, THash<wchar_t const*>, TWideCharEqualTo> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87e050 (    0x20) vtable for THashMap<wchar_t const*, TWord*, THash<wchar_t const*>, TWideCharEqualTo> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87e070 (    0x18) typeinfo for THashMap<wchar_t const*, TWord*, THash<wchar_t const*>, TWideCharEqualTo> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87e088 (    0x20) vtable for THashMap<TDecodeLinkMapWord::THistory, TDecodeLinkMapWord const*, THash<TDecodeLinkMapWord::THistory>, std::__1::equal_to<TDecodeLinkMapWord::THistory>> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87e0a8 (    0x18) typeinfo for THashMap<TDecodeLinkMapWord::THistory, TDecodeLinkMapWord const*, THash<TDecodeLinkMapWord::THistory>, std::__1::equal_to<TDecodeLinkMapWord::THistory>> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87e0c0 (    0x28) vtable for HashKEV<ComposeLatticeNode, ComposeLatticeNode, ComposeLatticeNode> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87e0e8 (    0x18) typeinfo for HashKEV<ComposeLatticeNode, ComposeLatticeNode, ComposeLatticeNode> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87e100 (    0x28) vtable for Hash<CwidStatePair, CwidStatePair, CwidStatePair, bool> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87e128 (    0x18) typeinfo for Hash<CwidStatePair, CwidStatePair, CwidStatePair, bool> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87e140 (    0x30) vtable for TTokenizerParamManager [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87e170 (    0x18) typeinfo for TTokenizerParamManager [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87e188 (    0xd0) vtable for SearchItf [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87e258 (    0x10) typeinfo for SearchItf [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87e268 (    0xd0) vtable for FstSearchLateLatticeHashBackoff [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87e338 (    0xd0) vtable for FstSearchLateLatticeHash [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87e408 (    0xd0) vtable for FstSearchLatticeHashBackoff [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87e4d8 (    0xd0) vtable for FstSearchLatticeHash [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87e5a8 (    0xd0) vtable for FstSearchDurationHashBackoff [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87e678 (    0xd0) vtable for FstSearchDurationHash [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87e748 (    0xd0) vtable for FstSearchHashBackoff [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87e818 (    0xd0) vtable for FstSearchHash [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87e8e8 (    0xd0) vtable for FstSearchLeafLatticeDurationBackoff [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87e9b8 (    0xd0) vtable for FstSearchLeafLatticeDuration [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87ea88 (    0xd0) vtable for FstSearchLeafLatticeBackoff [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87eb58 (    0xd0) vtable for FstSearchLeafLattice [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87ec28 (    0xd0) vtable for FstSearchLatticeDurationBackoff [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87ecf8 (    0xd0) vtable for FstSearchLatticeDuration [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87edc8 (    0xd0) vtable for FstSearchLateLatticeBackoff [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87ee98 (    0xd0) vtable for FstSearchLateLattice [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87ef68 (    0xd0) vtable for FstSearchLatticeBackoff [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87f038 (    0xd0) vtable for FstSearchLattice [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87f108 (    0xd0) vtable for FstSearchLeafDurationBackoff [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87f1d8 (    0xd0) vtable for FstSearchLeafDuration [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87f2a8 (    0xd0) vtable for FstSearchDurationBackoff [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87f378 (    0xd0) vtable for FstSearchDuration [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87f448 (    0xd0) vtable for FstSearchLeafBackoff [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87f518 (    0xd0) vtable for FstSearchLeaf [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87f5e8 (    0xd0) vtable for FstSearchBackoff [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87f6b8 (    0xd0) vtable for FstSearch [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87f788 (    0x18) typeinfo for FstSearchLateLatticeHashBackoff [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87f7a0 (    0x18) typeinfo for FstSearchLateLatticeHash [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87f7b8 (    0x18) typeinfo for FstSearchLatticeHashBackoff [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87f7d0 (    0x18) typeinfo for FstSearchLatticeHash [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87f7e8 (    0x18) typeinfo for FstSearchDurationHashBackoff [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87f800 (    0x18) typeinfo for FstSearchDurationHash [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87f818 (    0x18) typeinfo for FstSearchHashBackoff [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87f830 (    0x18) typeinfo for FstSearchHash [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87f848 (    0x18) typeinfo for FstSearchLeafLatticeDurationBackoff [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87f860 (    0x18) typeinfo for FstSearchLeafLatticeDuration [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87f878 (    0x18) typeinfo for FstSearchLeafLatticeBackoff [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87f890 (    0x18) typeinfo for FstSearchLeafLattice [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87f8a8 (    0x18) typeinfo for FstSearchLatticeDurationBackoff [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87f8c0 (    0x18) typeinfo for FstSearchLatticeDuration [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87f8d8 (    0x18) typeinfo for FstSearchLateLatticeBackoff [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87f8f0 (    0x18) typeinfo for FstSearchLateLattice [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87f908 (    0x18) typeinfo for FstSearchLatticeBackoff [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87f920 (    0x18) typeinfo for FstSearchLattice [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87f938 (    0x18) typeinfo for FstSearchLeafDurationBackoff [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87f950 (    0x18) typeinfo for FstSearchLeafDuration [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87f968 (    0x18) typeinfo for FstSearchDurationBackoff [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87f980 (    0x18) typeinfo for FstSearchDuration [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87f998 (    0x18) typeinfo for FstSearchLeafBackoff [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87f9b0 (    0x18) typeinfo for FstSearchLeaf [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87f9c8 (    0x18) typeinfo for FstSearchBackoff [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87f9e0 (    0x18) typeinfo for FstSearch [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87f9f8 (    0x20) vtable for DgnException [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87fa18 (    0x20) vtable for DgnFileIOException [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87fa38 (    0x10) typeinfo for DgnException [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87fa48 (    0x18) typeinfo for DgnFileIOException [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87fa60 (    0x40) vtable for ActiveWord [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87faa0 (    0x40) vtable for ActiveWordNonAcoustic [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87fae0 (    0x40) vtable for ActiveWordSilence [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87fb20 (    0x40) vtable for ActiveWordNoCoart [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87fb60 (    0x48) vtable for ActiveWordCoartBase [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87fba8 (    0x48) vtable for ActiveWordCoart1 [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87fbf0 (    0x48) vtable for ActiveWordCoartN [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87fc38 (    0x40) vtable for ActiveWordEmbeddedFst [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87fc78 (    0x10) typeinfo for ActiveWord [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87fc88 (    0x18) typeinfo for ActiveWordNoCoartBase [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87fca0 (    0x18) typeinfo for ActiveWordNonAcoustic [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87fcb8 (    0x18) typeinfo for ActiveWordSilence [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87fcd0 (    0x18) typeinfo for ActiveWordNoCoart [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87fce8 (    0x18) typeinfo for ActiveWordCoartBase [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87fd00 (    0x18) typeinfo for ActiveWordCoart1 [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87fd18 (    0x18) typeinfo for ActiveWordCoartN [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87fd30 (    0x18) typeinfo for ActiveWordEmbeddedFst [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87fd48 (    0x28) vtable for Hash<CWIDAC, CWIDAC, CWIDAC, ActiveWord*> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87fd70 (    0x18) typeinfo for Hash<CWIDAC, CWIDAC, CWIDAC, ActiveWord*> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87fd88 (    0x28) vtable for HashKEV<CWIDAC, CWIDAC, CWIDAC> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87fdb0 (    0x18) typeinfo for HashKEV<CWIDAC, CWIDAC, CWIDAC> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87fdc8 (    0x80) vtable for ConfidenceParamSet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87fe48 (    0x18) typeinfo for ConfidenceParamSet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87fe60 (    0x20) vtable for TTokenizer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87fe80 (    0x10) typeinfo for TRegisterable<TTokenizer> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87fe90 (    0x18) typeinfo for TTokenizer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87fea8 (    0x20) vtable for THashBase<std::__1::pair<TDecodeLink::THistory const, TDecodeLink const*>, THashMapCompare<std::__1::pair<TDecodeLink::THistory const, TDecodeLink const*>, std::__1::equal_to<TDecodeLink::THistory>>, THashMapFunction<std::__1::pair<TDecodeLink::THistory const, TDecodeLink const*>, THash<TDecodeLink::THistory>>> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87fec8 (    0x10) typeinfo for THashBase<std::__1::pair<TDecodeLink::THistory const, TDecodeLink const*>, THashMapCompare<std::__1::pair<TDecodeLink::THistory const, TDecodeLink const*>, std::__1::equal_to<TDecodeLink::THistory>>, THashMapFunction<std::__1::pair<TDecodeLink::THistory const, TDecodeLink const*>, THash<TDecodeLink::THistory>>> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87fed8 (    0x20) vtable for TRegisterable<TTokenizer> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87fef8 (    0x20) vtable for THashMap<TDecodeLink::THistory, TDecodeLink const*, THash<TDecodeLink::THistory>, std::__1::equal_to<TDecodeLink::THistory>> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87ff18 (    0x18) typeinfo for THashMap<TDecodeLink::THistory, TDecodeLink const*, THash<TDecodeLink::THistory>, std::__1::equal_to<TDecodeLink::THistory>> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87ff30 (    0x30) vtable for TArrayObject [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87ff60 (    0x30) vtable for TDigitObject [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87ff90 (    0x30) vtable for TRomanObject [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87ffc0 (    0x30) vtable for TCountingObject [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de87fff0 (    0x28) vtable for TChartSeeder [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de880018 (    0x10) typeinfo for TPatternObject [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de880028 (    0x18) typeinfo for TDigitObject [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de880040 (    0x18) typeinfo for TRomanObject [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de880058 (    0x18) typeinfo for TCountingObject [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de880070 (    0x10) typeinfo for TTerminalMaker [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de880080 (    0x18) typeinfo for TChartSeeder [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de880098 (    0x18) typeinfo for TArrayObject [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de8800b0 (    0x30) vtable for TPatternObject [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de8800e0 (    0x58) vtable for TLatticeProcessor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de880138 (    0x10) typeinfo for TRegisterable<TLatticeProcessor> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de880148 (    0x18) typeinfo for TLatticeProcessor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de880160 (    0x20) vtable for TRegisterable<TLatticeProcessor> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de880180 (    0x38) vtable for RecogGrammar [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de8801b8 (    0x38) vtable for WordStatesRecogGrammar [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de8801f0 (    0x38) vtable for ContainerRecogGrammar [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de880228 (    0x38) vtable for SequenceRecogGrammar [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de880260 (    0x10) typeinfo for RecogGrammar [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de880270 (    0x18) typeinfo for WordStatesRecogGrammar [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de880288 (    0x18) typeinfo for ContainerRecogGrammar [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de8802a0 (    0x18) typeinfo for SequenceRecogGrammar [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de8802b8 (    0x50) vtable for std::__1::basic_istringstream<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de880308 (    0x20) VTT for std::__1::basic_istringstream<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de880328 (    0x50) construction vtable for std::__1::basic_istream<wchar_t, std::__1::char_traits<wchar_t>>-in-std::__1::basic_istringstream<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de880378 (    0x18) typeinfo for std::__1::basic_istringstream<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t>> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de880390 (    0x28) vtable for Hash<unsigned int, unsigned int, WordIdScope, unsigned int> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de8803b8 (    0x18) typeinfo for Hash<unsigned int, unsigned int, WordIdScope, unsigned int> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de8803d0 (   0x168) vtable for OnePhonemeSyncNet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de880538 (    0x18) typeinfo for OnePhonemeSyncNet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de880550 (    0x38) vtable for IntGlobalParam [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de880588 (    0x18) typeinfo for IntGlobalParam [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de8805a0 (    0x20) vtable for FpuUseMrecDefaults [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de8805c0 (    0x10) typeinfo for FpuSaveRestore [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de8805d0 (    0x18) typeinfo for FpuUseMrecDefaults [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de8805e8 (    0x20) vtable for FpuSaveRestore [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de880608 (    0x80) vtable for LatticeNBestParamSet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de880688 (    0x18) typeinfo for LatticeNBestParamSet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de8806a0 (    0x90) vtable for SimpleFrameTransformer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de880730 (    0x80) vtable for FrameTransformerThreadWorker [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de8807b0 (    0x90) vtable for ThreadedFrameTransformer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de880840 (    0x10) typeinfo for FrameTransformer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de880850 (    0x18) typeinfo for SimpleFrameTransformer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de880868 (    0x38) vtable for FrameTransformerThread [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de8808a0 (    0x18) typeinfo for DgnThread<FrameTransformerThreadWorker> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de8808b8 (    0x18) typeinfo for FrameTransformerThread [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de8808d0 (    0x18) typeinfo for FrameTransformerThreadWorker [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de8808e8 (    0x18) typeinfo for ThreadedFrameTransformer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de880900 (    0x38) vtable for DgnThread<FrameTransformerThreadWorker> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de880938 (    0x50) vtable for TResultManager [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de880988 (    0x10) typeinfo for TIFormatterHintManager [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de880998 (    0x18) typeinfo for TResultManager [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de8809b0 (    0x28) vtable for TRegExpCompiler [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de8809d8 (    0x10) typeinfo for TFsaDataCallBack [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de8809e8 (    0x18) typeinfo for TRegExpCompiler [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de880a00 (    0x58) vtable for TTagManager [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de880a58 (    0x10) typeinfo for TIFormatterTagManager [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de880a68 (    0x18) typeinfo for TTagManager [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de880a80 (    0x20) vtable for THashBase<std::__1::pair<wchar_t const* const, TTag const*>, THashMapCompare<std::__1::pair<wchar_t const* const, TTag const*>, TWideCharEqualTo>, THashMapFunction<std::__1::pair<wchar_t const* const, TTag const*>, THash<wchar_t const*>>> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de880aa0 (    0x10) typeinfo for THashBase<std::__1::pair<wchar_t const* const, TTag const*>, THashMapCompare<std::__1::pair<wchar_t const* const, TTag const*>, TWideCharEqualTo>, THashMapFunction<std::__1::pair<wchar_t const* const, TTag const*>, THash<wchar_t const*>>> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de880ab0 (    0x20) vtable for THashMap<wchar_t const*, TTag const*, THash<wchar_t const*>, TWideCharEqualTo> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de880ad0 (    0x18) typeinfo for THashMap<wchar_t const*, TTag const*, THash<wchar_t const*>, TWideCharEqualTo> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de880ae8 (    0x38) vtable for DgnThreadClient [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de880b20 (    0x80) vtable for DgnThreadWorker [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de880ba0 (    0x10) typeinfo for DgnThreadClient [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de880bb0 (    0x10) typeinfo for AbstractObservation [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de880bc0 (    0x18) typeinfo for AbstractObserver [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de880bd8 (    0x18) typeinfo for DgnThreadWorker [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de880bf0 (    0x30) vtable for NodeNetNode [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de880c20 (    0x38) vtable for TraceNode [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de880c58 (    0x10) typeinfo for BaseNode [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de880c68 (    0x18) typeinfo for Node [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de880c80 (    0x10) typeinfo for PredStruct [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de880c90 (    0x38) typeinfo for NodeNetNode [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de880cc8 (    0x18) typeinfo for TraceNode [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de880ce0 (    0x20) vtable for TLattice [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de880d00 (    0x10) typeinfo for TRegisterable<TLattice> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de880d10 (    0x18) typeinfo for TLattice [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de880d28 (    0x20) vtable for TRegisterable<TLattice> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de880d48 (   0x190) vtable for TFormatter [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de880ed8 (    0x10) typeinfo for TRegisterable<TIFormatter> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de880ee8 (    0x18) typeinfo for TIFormatter [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de880f00 (    0x10) typeinfo for TIFormatterResultManager [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de880f10 (    0x38) typeinfo for TFormatter [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de880f48 (    0x20) vtable for TRegisterable<TIFormatter> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de880f68 (    0x80) vtable for SearchParamSet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de880fe8 (    0x18) typeinfo for SearchParamSet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de881000 (    0x28) vtable for TProp<bool> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de881028 (    0x10) typeinfo for TProp<bool> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de881038 (   0x150) vtable for FstHmmNet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de881188 (    0x18) typeinfo for FstHmmNet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de8811a0 (    0x28) vtable for Hash<Int32Pair, Int32Pair, Int32PairScope, int> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de8811c8 (    0x18) typeinfo for Hash<Int32Pair, Int32Pair, Int32PairScope, int> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de8811e0 (    0x28) vtable for Hash<Int32Triple, Int32Triple, Int32TripleScope, int> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de881208 (    0x18) typeinfo for Hash<Int32Triple, Int32Triple, Int32TripleScope, int> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de881220 (    0x28) vtable for TWideChartSeeder2 [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de881248 (    0x18) typeinfo for TWideChartSeeder2 [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de881260 (    0x28) vtable for TWordVerifier [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de881288 (    0x10) typeinfo for TTerminalChecker [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de881298 (    0x18) typeinfo for TWordVerifier [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de8812b0 (    0x80) vtable for LatticePostProbParamSet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de881330 (    0x18) typeinfo for LatticePostProbParamSet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de881348 (    0x30) vtable for TGlobalParamManager [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de881378 (    0x18) typeinfo for TGlobalParamManager [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de881390 (   0x2d8) vtable for MultiLanguageModel [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de881668 (    0x18) typeinfo for MultiLanguageModel [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de881680 (    0x28) vtable for MultiLMContextData [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de8816a8 (    0x10) typeinfo for LMContextData [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de8816b8 (    0x18) typeinfo for MultiLMContextData [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de8816d0 (    0x80) vtable for PrefiltererBuildParamSet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de881750 (    0x18) typeinfo for PrefiltererBuildParamSet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de881768 (    0x28) vtable for HashNCHV<unsigned int, unsigned int, WordIdScope, unsigned int> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de881790 (    0x18) typeinfo for HashNCHV<unsigned int, unsigned int, WordIdScope, unsigned int> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de8817a8 (   0x2d0) vtable for DummyLanguageModel [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de881a78 (    0x18) typeinfo for DummyLanguageModel [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de881a90 (    0x28) vtable for LMContextData [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de881ab8 (    0x28) vtable for HashNCHV<unsigned int, unsigned int, WordToScoreAndDurationHashHelper, ScoreAndDuration> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de881ae0 (    0x18) typeinfo for HashNCHV<unsigned int, unsigned int, WordToScoreAndDurationHashHelper, ScoreAndDuration> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de881af8 (    0x40) vtable for BackTraceNodeCache [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de881b38 (    0x10) typeinfo for BackTraceNodeCache [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de881b48 (    0x38) vtable for StringGlobalParam [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de881b80 (    0x18) typeinfo for StringGlobalParam [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de881b98 (    0x28) vtable for HashKEV<BackTraceItemHashKey, BackTraceItem, BackTraceItemHashKey> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de881bc0 (    0x18) typeinfo for HashKEV<BackTraceItemHashKey, BackTraceItem, BackTraceItemHashKey> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de881bd8 (    0x40) vtable for BtNodeCacheType<BtTrigramNodeHashKey, BtTrigramNodeHashKey> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de881c18 (    0x18) typeinfo for BtNodeCacheType<BtTrigramNodeHashKey, BtTrigramNodeHashKey> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de881c30 (    0x28) vtable for HashNCHV<BtTrigramNodeHashKey, BtTrigramNodeHashKey, BtTrigramNodeHashKey, unsigned int> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de881c58 (    0x18) typeinfo for HashNCHV<BtTrigramNodeHashKey, BtTrigramNodeHashKey, BtTrigramNodeHashKey, unsigned int> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de881c70 (    0x40) vtable for BtNodeCacheType<BtNodeHashKey, BtNodeKeyGenerator<false, true>> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de881cb0 (    0x18) typeinfo for BtNodeCacheType<BtNodeHashKey, BtNodeKeyGenerator<false, true>> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de881cc8 (    0x28) vtable for HashNCHV<BtNodeHashKey, BtNodeHashKey, BtNodeHashKey, unsigned int> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de881cf0 (    0x18) typeinfo for HashNCHV<BtNodeHashKey, BtNodeHashKey, BtNodeHashKey, unsigned int> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de881d08 (    0x40) vtable for BtNodeCacheType<BtNodeHashKey, BtNodeKeyGenerator<true, false>> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de881d48 (    0x18) typeinfo for BtNodeCacheType<BtNodeHashKey, BtNodeKeyGenerator<true, false>> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de881d60 (    0x40) vtable for BtNodeCacheType<BtNodeHashKey, BtNodeKeyGenerator<true, true>> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de881da0 (    0x18) typeinfo for BtNodeCacheType<BtNodeHashKey, BtNodeKeyGenerator<true, true>> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de881db8 (    0x40) vtable for BtNodeCacheType<BtUnigramNodeHashKey, BtUnigramNodeHashKey> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de881df8 (    0x18) typeinfo for BtNodeCacheType<BtUnigramNodeHashKey, BtUnigramNodeHashKey> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de881e10 (    0x28) vtable for HashNCHV<BtUnigramNodeHashKey, BtUnigramNodeHashKey, BtUnigramNodeHashKey, unsigned int> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de881e38 (    0x18) typeinfo for HashNCHV<BtUnigramNodeHashKey, BtUnigramNodeHashKey, BtUnigramNodeHashKey, unsigned int> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de881e50 (    0x28) vtable for Hash<CWIDACPair, CWIDACPair, CWIDACPair, BigScorePair> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de881e78 (    0x18) typeinfo for Hash<CWIDACPair, CWIDACPair, CWIDACPair, BigScorePair> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de881e90 (    0x28) vtable for Hash<BackTraceLinkPair, BackTraceLinkPair, BackTraceLinkPair, int> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de881eb8 (    0x18) typeinfo for Hash<BackTraceLinkPair, BackTraceLinkPair, BackTraceLinkPair, int> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de881ed0 (   0x150) vtable for EmptyNet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de882020 (    0x10) typeinfo for OneInPort [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de882030 (    0x38) typeinfo for EmptyNet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de882068 (    0x80) vtable for DgnSharedMemStream [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de8820e8 (    0x18) typeinfo for DgnSharedMemStream [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de882100 (    0x80) vtable for PrefiltererThreadWorker [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de882180 (    0xd0) vtable for ThreadedTreePrefilterer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de882250 (    0x38) vtable for PrefiltererThread [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de882288 (    0x18) typeinfo for DgnThread<PrefiltererThreadWorker> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de8822a0 (    0x18) typeinfo for PrefiltererThread [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de8822b8 (    0x18) typeinfo for PrefiltererThreadWorker [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de8822d0 (    0x18) typeinfo for ThreadedTreePrefilterer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de8822e8 (    0x38) vtable for DgnThread<PrefiltererThreadWorker> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de882320 (    0x50) vtable for Lattice<WordLatticeLC> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de882370 (    0x10) typeinfo for Lattice<WordLatticeLC> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de882380 (    0x28) vtable for HashKEV<unsigned int, unsigned int, Uns32Scope> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de8823a8 (    0x18) typeinfo for HashKEV<unsigned int, unsigned int, Uns32Scope> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de8823c0 (    0x80) vtable for DgnStream [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de882440 (    0x10) typeinfo for DgnStream [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de882450 (    0x38) vtable for DoubleGlobalParam [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de882488 (    0x18) typeinfo for DoubleGlobalParam [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de8824a0 (   0x168) vtable for NonCoartSyncNet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de882608 (    0x38) typeinfo for NonCoartSyncNet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de882640 (   0x2d8) vtable for WordLanguageModel [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de882918 (    0x18) typeinfo for WordLanguageModel [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de882930 (    0x28) vtable for WordLMContextData [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de882958 (    0x18) typeinfo for WordLMContextData [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de882970 (    0x28) vtable for Hash<unsigned short, unsigned short, HuffmanSymbol<unsigned short, unsigned int>, HuffmanSymbol<unsigned short, unsigned int>*> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de882998 (    0x18) typeinfo for Hash<unsigned short, unsigned short, HuffmanSymbol<unsigned short, unsigned int>, HuffmanSymbol<unsigned short, unsigned int>*> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de8829b0 (    0x28) vtable for Hash<BuildWordIdNgram, BuildWordIdNgram, BuildWordIdNgram, unsigned int> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de8829d8 (    0x18) typeinfo for Hash<BuildWordIdNgram, BuildWordIdNgram, BuildWordIdNgram, unsigned int> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de8829f0 (    0x28) vtable for Hash<BuildLmIdNgram, BuildLmIdNgram, BuildLmIdNgram, double> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de882a18 (    0x18) typeinfo for Hash<BuildLmIdNgram, BuildLmIdNgram, BuildLmIdNgram, double> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de882a30 (    0x28) vtable for Hash<BuildLmIdNgram, BuildLmIdNgram, BuildLmIdNgram, unsigned int> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de882a58 (    0x18) typeinfo for Hash<BuildLmIdNgram, BuildLmIdNgram, BuildLmIdNgram, unsigned int> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de882a70 (   0x158) vtable for AcousticNet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de882bc8 (    0x18) typeinfo for AcousticNet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de882be0 (    0x20) vtable for Recognizer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de882c00 (    0x30) vtable for GermRecogGermIterator [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de882c30 (    0x18) typeinfo for GermRecogGermIterator [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de882c48 (    0x10) typeinfo for Recognizer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de882c58 (    0x40) vtable for SeedMergedActiveWord [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de882c98 (    0x10) typeinfo for SeedActiveWord [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de882ca8 (    0x18) typeinfo for SeedMergedActiveWord [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de882cc0 (    0x40) vtable for SeedUnmergedActiveWord [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de882d00 (    0x18) typeinfo for SeedUnmergedActiveWord [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de882d18 (    0x58) vtable for SimpleLookaheadScorer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de882d70 (    0x80) vtable for LookaheadScorerThreadWorker [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de882df0 (    0x58) vtable for ThreadedLookaheadScorer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de882e48 (    0x10) typeinfo for LookaheadScorer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de882e58 (    0x18) typeinfo for SimpleLookaheadScorer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de882e70 (    0x38) vtable for LookaheadScorerThread [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de882ea8 (    0x18) typeinfo for DgnThread<LookaheadScorerThreadWorker> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de882ec0 (    0x18) typeinfo for LookaheadScorerThread [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de882ed8 (    0x18) typeinfo for LookaheadScorerThreadWorker [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de882ef0 (    0x18) typeinfo for ThreadedLookaheadScorer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de882f08 (    0x38) vtable for DgnThread<LookaheadScorerThreadWorker> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de882f40 (    0x80) vtable for ListDFileSubFileStream [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de882fc0 (    0x80) vtable for ListDFile [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de883040 (    0x18) typeinfo for ListDFileSubFileStream [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de883058 (    0x18) typeinfo for ListDFile [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de883070 (    0x48) vtable for TEnvManager [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de8830b8 (    0x18) typeinfo for TIOException [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de8830d0 (    0x18) typeinfo for TEnvManager [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de8830e8 (    0x20) vtable for TIOException [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de883108 (    0xd0) vtable for FwdBwd [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de8831d8 (    0x18) typeinfo for FwdBwd [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de8831f0 (    0x28) vtable for Hash<int, int, IntToUintScope, unsigned int> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de883218 (    0x18) typeinfo for Hash<int, int, IntToUintScope, unsigned int> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de883230 (    0x80) vtable for AdapterParamSet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de8832b0 (    0x18) typeinfo for AdapterParamSet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de8832c8 (   0x138) vtable for RecogController [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de883400 (    0x10) typeinfo for RecogControllerBase [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de883410 (    0x18) typeinfo for RecogController [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de883428 (    0x28) vtable for Hash<EmbStateSpec, EmbStateSpec, EmbStateSpecToActiveWordScope, ActiveWord*> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de883450 (    0x18) typeinfo for Hash<EmbStateSpec, EmbStateSpec, EmbStateSpecToActiveWordScope, ActiveWord*> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de883468 (    0x58) vtable for PhonemeLattice [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de8834c0 (    0x10) typeinfo for Lattice<PhonemeLatticeLC> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de8834d0 (    0x18) typeinfo for PhonemeLattice [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de8834e8 (    0x50) vtable for Lattice<PhonemeLatticeLC> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de883538 (    0x30) vtable for TCliticsParamManager [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de883568 (    0x58) vtable for TCliticsProc [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de8835c0 (    0x18) typeinfo for TCliticsProc [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de8835d8 (    0x18) typeinfo for TCliticsParamManager [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de8835f0 (    0x80) vtable for DFile [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de883670 (    0x10) typeinfo for DFile [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de883680 (   0x2d0) vtable for LanguageModel [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de883950 (    0x10) typeinfo for LanguageModel [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de883960 (    0x80) vtable for RealDFileSubFileStream [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de8839e0 (    0x88) vtable for RealDFile [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de883a68 (    0x18) typeinfo for RealDFileSubFileStream [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de883a80 (    0x18) typeinfo for RealDFile [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de883a98 (   0x168) vtable for BaseSyncNet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de883c00 (   0x168) vtable for SyncNet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de883d68 (    0x18) typeinfo for BaseSyncNet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de883d80 (    0x18) typeinfo for SyncNet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de883d98 (    0x28) vtable for TWideChartSeeder [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de883dc0 (    0x18) typeinfo for TWideChartSeeder [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de883dd8 (    0x30) vtable for TCompounderParamManager [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de883e08 (    0x58) vtable for TCompounder [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de883e60 (    0x18) typeinfo for TCompounder [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de883e78 (    0x18) typeinfo for TCompounderParamManager [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de883e90 (    0x10) typeinfo for ParamSpec [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de883ea0 (    0x40) vtable for IntParamSpec [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de883ee0 (    0x40) vtable for EnumParamSpec [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de883f20 (    0x40) vtable for BoolParamSpec [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de883f60 (    0x40) vtable for DoubleParamSpec [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de883fa0 (    0x40) vtable for StringParamSpec [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de883fe0 (    0x18) typeinfo for IntParamSpec [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de883ff8 (    0x18) typeinfo for EnumParamSpec [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de884010 (    0x18) typeinfo for BoolParamSpec [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de884028 (    0x18) typeinfo for DoubleParamSpec [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de884040 (    0x18) typeinfo for StringParamSpec [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de884058 (    0x28) vtable for Hash<WordIdPair, WordIdPair, WordIdPair, unsigned int> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de884080 (    0x18) typeinfo for Hash<WordIdPair, WordIdPair, WordIdPair, unsigned int> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de884098 (    0x20) vtable for WordLatticeLC [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de8840b8 (    0x58) vtable for WordLattice [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de884110 (    0x20) vtable for BaseWordLatticeLC [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de884130 (    0x10) typeinfo for BaseWordLatticeLC [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de884140 (    0x18) typeinfo for WordLatticeLC [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de884158 (    0x20) vtable for InputLatticeLC [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de884178 (    0x18) typeinfo for InputLatticeLC [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de884190 (    0x18) typeinfo for WordLattice [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de8841a8 (    0x28) vtable for Hash<StateIdPair, StateIdPair, StateIdPair, ParseTokenRange> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de8841d0 (    0x18) typeinfo for Hash<StateIdPair, StateIdPair, StateIdPair, ParseTokenRange> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de8841e8 (   0x150) vtable for HmmNet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de884338 (    0x10) typeinfo for HmmNet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de884348 (   0x178) vtable for NodeNet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de8844c0 (   0x178) vtable for TraceNodeNet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de884638 (    0x18) typeinfo for NodeNet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de884650 (    0x18) typeinfo for TraceNodeNet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de884668 (    0x88) vtable for PelScorer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de8846f0 (    0x88) vtable for OnDemandPelScorer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de884778 (    0x10) typeinfo for PelScorer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de884788 (    0x18) typeinfo for OnDemandPelScorer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de8847a0 (    0x48) vtable for TDataManager [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de8847e8 (    0x10) typeinfo for TDataManager [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de8847f8 (   0x180) vtable for BaumWelchNet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de884978 (    0x18) typeinfo for BaumWelchNet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de884990 (   0x180) vtable for BaumWelchReverseNet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de884b10 (    0x18) typeinfo for BaumWelchReverseNet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de884b28 (    0x80) vtable for SausageParamSet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de884ba8 (    0x18) typeinfo for SausageParamSet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de884bc0 (    0x80) vtable for DgnFileStream [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de884c40 (    0x18) typeinfo for DgnFileStream [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de884c58 (    0x30) vtable for TItnParamManager [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de884c88 (    0x18) typeinfo for TItnParamManager [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de884ca0 (    0x28) vtable for HashKEVTLT<unsigned int, History const*, HistoryMgr> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de884cc8 (    0x18) typeinfo for HashKEVTLT<unsigned int, History const*, HistoryMgr> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de884ce0 (    0x30) vtable for CWIDACRecogGermIterator [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de884d10 (    0x18) typeinfo for CWIDACRecogGermIterator [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de884d28 (    0x28) vtable for Hash<CWIDAC, CWIDAC, CWIDAC, unsigned int> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de884d50 (    0x18) typeinfo for Hash<CWIDAC, CWIDAC, CWIDAC, unsigned int> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de884d68 (    0xd0) vtable for TreePrefilterer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de884e38 (    0x18) typeinfo for TreePrefilterer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de884e50 (    0x28) vtable for HashBase [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de884e78 (    0x10) typeinfo for HashBase [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de884e88 (    0x80) vtable for PronGuessParamSet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de884f08 (    0x18) typeinfo for PronGuessParamSet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de884f20 (    0x10) typeinfo for GlobalParam [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de884f30 (    0x38) vtable for IntGlobalParamBase [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de884f68 (    0x38) vtable for EnumGlobalParamBase [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de884fa0 (    0x38) vtable for BoolGlobalParamBase [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de884fd8 (    0x38) vtable for DoubleGlobalParamBase [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de885010 (    0x38) vtable for StringGlobalParamBase [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de885048 (    0x18) typeinfo for IntGlobalParamBase [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de885060 (    0x18) typeinfo for EnumGlobalParamBase [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de885078 (    0x18) typeinfo for BoolGlobalParamBase [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de885090 (    0x18) typeinfo for DoubleGlobalParamBase [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de8850a8 (    0x18) typeinfo for StringGlobalParamBase [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de8850c0 (    0x80) vtable for PrefiltererSearchParamSet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de885140 (    0x18) typeinfo for PrefiltererSearchParamSet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de885158 (   0x138) vtable for ThreadedRecogController [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de885290 (    0x80) vtable for RecogCtlThreadWorker [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de885310 (    0x18) typeinfo for RecogCtlThreadWorker [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de885328 (    0x38) vtable for RecogCtlThread [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de885360 (    0x18) typeinfo for DgnThread<RecogCtlThreadWorker> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de885378 (    0x18) typeinfo for RecogCtlThread [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de885390 (    0x18) typeinfo for ThreadedRecogController [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de8853a8 (    0x38) vtable for DgnThread<RecogCtlThreadWorker> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de8853e0 (    0xd0) vtable for Prefilterer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001de8854b0 (    0x10) typeinfo for Prefilterer [PEXT, NameNList, MangledNameNList, NList] 
            0x00000001de8854c0 (    0x78) __AUTH_CONST __auth_ptr
            0x00000001de885538 (   0x660) __AUTH_CONST __auth_got
        0x00000001d6572e50 ( 0x48ef0) __DATA SEGMENT
            0x00000001d6572e50 (   0x1a0) __DATA __data
                0x00000001d6572e50 (     0x8) TLocaleInfo::getGlobalLocaleInfo()::s_localeInfo [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6572e58 (     0x8) guard variable for TLocaleInfo::getGlobalLocaleInfo()::s_localeInfo [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6572e60 (     0x8) TRegisterable<TParamManager>::getRegistry()::s_registry [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6572e68 (     0x8) guard variable for TRegisterable<TParamManager>::getRegistry()::s_registry [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6572e70 (     0x8) TRegisterable<TLatticeProcessor>::getRegistry()::s_registry [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6572e78 (     0x8) guard variable for TRegisterable<TLatticeProcessor>::getRegistry()::s_registry [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6572e80 (    0x70) spParamSetTypeStringNames [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6572ef0 (    0x38) ParamSetHolderMgr::smParamSetTypeRanked [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6572f28 (     0x8) TReentrancyHandler::getCsIn()::s_csIn [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6572f30 (     0x8) guard variable for TReentrancyHandler::getCsIn()::s_csIn [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6572f38 (     0x8) TRegisterable<TTokenizer>::getRegistry()::s_registry [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6572f40 (     0x8) guard variable for TRegisterable<TTokenizer>::getRegistry()::s_registry [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6572f48 (     0x8) TRegisterable<TLexicon>::getRegistry()::s_registry [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6572f50 (     0x8) guard variable for TRegisterable<TLexicon>::getRegistry()::s_registry [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6572f58 (     0x8) g_bCheckVocCompatibility [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6572f60 (     0x8) s_pLogPartialLine [NameNList, MangledNameNList, NList] 
                0x00000001d6572f68 (     0x8) s_nPartialLineAllocSize [NameNList, MangledNameNList, NList] 
                0x00000001d6572f70 (     0x8) SERIALIZE_NAME [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6572f78 (     0x8) DgnThreadMgr::smTlsID [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6572f80 (     0x8) TRegisterable<TLattice>::getRegistry()::s_registry [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6572f88 (     0x8) guard variable for TRegisterable<TLattice>::getRegistry()::s_registry [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6572f90 (     0x8) TRegisterable<TIFormatter>::getRegistry()::s_registry [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6572f98 (     0x8) guard variable for TRegisterable<TIFormatter>::getRegistry()::s_registry [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6572fa0 (     0x8) gpLogLinePrefix [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6572fa8 (     0x8) gShadowDiagnosticVirtualCalculationInterval [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6572fb0 (     0x8) MemChunkRegion::smpMemChunkRegions [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6572fb8 (     0x8) MemChunkRegion::smTlsID [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6572fc0 (     0x1) gShadowDiagnosticCrashOnAssert [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6572fc1 (     0x1) gShadowDiagnosticAbortOnAssert [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6572fc2 (     0x1) sbHaveTerminatedSuccessfully [NameNList, MangledNameNList, NList] 
                0x00000001d6572fc3 (     0x1) sbDllTerminatedSuccessfullyOrNotInUse [NameNList, MangledNameNList, NList] 
                0x00000001d6572fc4 (     0x4) sbExeTerminatedSuccessfullyOrNotInUse [NameNList, MangledNameNList, NList] 
                0x00000001d6572fc8 (    0x10) TCompounder::ms_classAppend [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6572fd8 (    0x10) TCompounder::ms_tagName [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6572fe8 (     0x8) FILE_EXTENSION [PEXT, NameNList, MangledNameNList, NList] 
            0x00000001d6572ff0 ( 0x446d0) __DATA __common
                0x00000001d6572ff0 (     0x8) gParDebugLatticeProcessing [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6572ff8 (     0x8) gParDebugMatrixDecomposition [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6573000 (     0x8) gParDebugMatrixDecompositionAccuracy [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6573008 (     0x8) gParDiagnosticMatrixComputation [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6573010 (     0x8) gParDebugCorpusFindCorrelatedDocuments [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6573018 (     0x8) gParDebugSimulateRealTime [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6573020 (     0x8) gParDebugShowHierarchicalPelStats [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6573028 (     0x8) UttFileMgr::smpUttFileMgr [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6573030 (     0x8) gParDebugRuleMgr [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6573038 (     0x8) gParDebugShowRuleAndStateInfoOnLoad [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6573040 (     0x8) gParDebugConstraint [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6573048 (     0x8) gParDiagnosticSearchActiveWordBuildAllSuccessorPhonemeContexts [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6573050 (     0x8) gParDebugShowUnreachablePelsOnLoad [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6573058 (     0x8) gParDebugPicMgrBuildLookups [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6573060 (     0x8) gParDebugShowPicMgrStatsOnClose [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6573068 (     0x8) gParDebugPicMgr [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6573070 (     0x8) gParDebugShowPelIdMap [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6573078 (     0x8) gParDiagnosticCheckPelIdMap [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6573080 (     0x8) gParDebugGenoneClassTree [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6573088 (     0x8) gParDebugParamSetUpgrade [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6573090 (     0x8) ParamSetHolderMgr::smpParamSetHolderMgr [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6573098 (     0x8) gParDebugDgnTextFileParser [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65730a0 (     0x8) gParDebugShowActiveParamSetNameAndContents [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65730a8 (     0x8) gParDebugShowActiveParamSetNameAndDeltas [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65730b0 (     0x8) g_bCheckLexicon [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65730b8 (     0x8) gParDebugFstLatticeConstruction [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65730c0 (     0x8) DgnSharedMemMgr::smpDSMMgr [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65730c8 (     0x8) ArcGraphMgr::smpArcGraphMgr [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65730d0 (     0x8) RecogCtlMgr::smpRecogCtlMgr [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65730d8 (     0x8) gParDebugShowSegmentation [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65730e0 (     0x8) gParDebugAdaptationStartup [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65730e8 (     0x8) gParDebugAdaptationAccumulate [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65730f0 (     0x8) gParDebugAdaptationApply [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65730f8 (     0x8) gParDebugFstBestPath [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6573100 (     0x8) gParDebugFstRecognition [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6573108 (     0x8) gParDebugFstSeeding [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6573110 (     0x8) gParDebugFstSeedingMini [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6573118 (     0x8) gParDebugFstScoring [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6573120 (     0x8) gParDebugFstDumpTraces [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6573128 (     0x8) gParDebugActive [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6573130 (     0x8) gParDebugUserDelta [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6573138 (     0x8) gParDiagnosticComputeFullTimingStats [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6573140 (     0x8) gShadowDiagnosticComputeFullTimingStats [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6573148 (    0x38) ClockTimer::smClockTimer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6573180 (     0x8) gParDebugWordFst [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6573188 (     0x8) gParDebugWordFstSelfLoop [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6573190 (     0x8) gParDebugWordFstShowPronlessWords [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6573198 (     0x8) gParDebugTransducerGrammarIO [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65731a0 (     0x8) gParDebugSignalProcessing [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65731a8 (     0x8) gParDebugDgnSharedMemSet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65731b0 (     0x8) DgnPrinterMgr::smpDgnPrinterMgr [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65731b8 (     0x8) gParDebugPronGuesser [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65731c0 (     0x8) gParDebugVocGetPics [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65731c8 (     0x8) TransducerGrammarMgr::smpTransducerGrammarMgr [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65731d0 (     0x8) gParDebugWaveCompression [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65731d8 (     0x8) gParSdapiDiagnosticCheckHeapEveryCall [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65731e0 (     0x8) gShadowSdapiDiagnosticCheckHeapEveryCall [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65731e8 (     0x8) gParSdapiCrashOnSendError [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65731f0 (     0x8) gShadowSdapiCrashOnSendError [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65731f8 (     0x8) gParSdapiAdaptationAccumulationMinCallbackInterval [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6573200 (     0x8) gParSdapiAdaptationApplicationMinCallbackInterval [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6573208 (     0x1) gbShowCalls [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6573209 (     0x1) gbShowCallsWithFileSpecArgs [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d657320a (     0x1) gbShowCallPointerArguments [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d657320b (     0x5) gbShowCallMemDeltas [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6573210 (     0x8) ApiState::smpApiState [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6573218 (     0x8) ApiState::smMemoryErrorHandler [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6573220 (     0x8) ApiState::smMemoryErrorUserData [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6573228 (     0x8) ApiState::smErrorHandler [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6573230 (     0x8) ApiState::smErrorUserData [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6573238 (     0x8) ApiState::smLogHandler [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6573240 (     0x8) ApiState::smLogUserData [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6573248 (  0x24e0) CPUID::smCPUID [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6575728 (     0x8) g_bCrashOnError [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6575730 (     0x8) gParDebugSearchLM [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6575738 (     0x8) gParDebugFmpe [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6575740 (     0x8) gParDiagnosticChecksumMemChunkRegionsOnSyncThread [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6575748 (     0x8) gShadowDiagnosticChecksumMemChunkRegionsOnSyncThread [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6575750 (     0x8) DgnThreadMgr::smpThreadMgr [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6575758 (     0x8) gParDebugVirtMapShowContent [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6575760 (     0x8) gParDebugVirtMapShowStats [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6575768 (     0x8) gParDebugShowPelInfoOnLoad [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6575770 (     0x8) gParDebugAcousticMicPacking [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6575778 (     0x8) gParDebugShowShortListFrameClassification [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6575780 (     0x8) gParDiagnosticPelHierarchyCreationUseReference [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6575788 (     0x8) gParDebugShowShortListSetId [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6575790 (     0x8) gParDiagnosticPelHierarchyUpdate [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6575798 (     0x8) gParDebugExciseUnneededPelsGenonesComps [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65757a0 (     0x8) gParDiagnosticGPUMaxFramesInBatch [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65757a8 (     0x8) gParDebugWavePacketLossDetection [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65757b0 (     0x8) TLocaleHandler::ms_MacLocale [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65757b8 (     0x1) TReentrancyHandler::ms_bIn [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65757b9 (     0x7) g_bInitialized [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65757c0 (     0x8) g_pParamManager [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65757c8 (     0x8) gParDebugWordLMToTransducerGrammar [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65757d0 (     0x8) gParDebugWordLMToTransducerGrammarDetails [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65757d8 (     0x8) gParDebugCUDAHelpers1 [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65757e0 (     0x8) EnvHolderMgr::smpEnvHolderMgr [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65757e8 (     0x8) gParDebugBest [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65757f0 (     0x8) gParDebugTrueBestPelThreshScore [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65757f8 (     0x8) gParDebugShowConfidence [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6575800 (     0x8) gParDebugLMInterpolationWeights [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6575808 (     0x8) gParDebugShowWordListOnLoad [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6575810 (     0x8) gParDebugWordListAddDelete [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6575818 (     0x8) gParDebugWordListSetAllPronsAsClient [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6575820 (     0x8) gParDebugWordListSetAsFactory [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6575828 (     0x8) gParDebugWordListSetPron [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6575830 (     0x8) gParDebugOsFile [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6575838 (     0x8) gParDiagnosticShowTestReadFileInfo [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6575840 (     0x8) gParDiagnosticShowTestReadFileDetails [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6575848 (     0x8) gParDiagnosticOsFileSimulateReadFailure [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6575850 (     0x8) gParDebugShowPrefiltererReturnLists [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6575858 (     0x8) gParDiagnosticPrefiltererReturnListSortByScore [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6575860 (     0x8) UserMgr::smpUserMgr [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6575868 (     0x8) gParDebugLatticeConstruction [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6575870 (     0x8) gParDebugLatticeWatchTheseWords [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6575878 (     0x8) gParDebugUttAddFrame [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6575880 (     0x8) gParDebugShowPrefiltererStats [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6575888 (     0x8) gParDebugPrefiltererProcessing [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6575890 (     0x8) gParDebugShowPrefiltererBestActiveSeqs [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6575898 (     0x8) gParDebugShowPrefiltererEarliestTheory [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65758a0 (     0x8) gParDiagnosticVirtualCalculationInterval [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65758a8 (     0x8) gParShowActualMemoryAndChunkOverheadStats [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65758b0 (     0x8) gShadowShowActualMemoryAndChunkOverheadStats [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65758b8 (     0x8) gParShowMemChunkStatsOnThreadExit [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65758c0 (     0x8) gShadowShowMemChunkStatsOnThreadExit [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65758c8 (     0x8) gParShowMemStatsOnThreadExit [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65758d0 (     0x8) gShadowShowMemStatsOnThreadExit [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65758d8 (     0x8) gParShowVirtualPrivateDetailsOnCalc [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65758e0 (     0x8) gShadowShowVirtualPrivateDetailsOnCalc [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65758e8 ( 0x418b0) gGlobalMemChunkRegion [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7198 (     0x8) ChannelMgr::smpChannelMgr [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b71a0 (     0x8) gParDebugShowNNRunFunctSequence [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b71a8 (     0x8) gParDebugUttDet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b71b0 (     0x8) gParDiagnosticFileSpecBaseDirectoryMask [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b71b8 (     0x8) gParDiagnosticPelScoringServerUseSeparateKernel [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b71c0 (     0x8) gParDiagnosticPelScoringUseFreeTime [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b71c8 (     0x8) gParDebugPelScoringServer1 [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b71d0 (     0x8) gParDebugPelScoringServer2 [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b71d8 (     0x8) gParDebugPelScoringServer3 [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b71e0 (     0x8) gParDebugPelScoringServer4 [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b71e8 (     0x8) gParDebugGPUCheckPelScoreRange [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b71f0 (     0x8) gParDiagnosticGPUInitializePelScores [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b71f8 (     0x8) gParDebugSausageGenerationShowOperationTimes [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7200 (     0x8) gParDebugSausageGenerationInitialize [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7208 (     0x8) gParDebugSausageGenerationMinimize [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7210 (     0x8) gParDebugSausageCombination [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7218 (     0x8) gParDiagnosticSausageGenerationCommand [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7220 (     0x8) gParDebugFastSausageGeneration [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7228 (     0x8) gParDebugShowClonedLmIdsOnLoad [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7230 (     0x8) gParDebugShowLMInfoOnLoad [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7238 (     0x8) gParDebugShowLMOnLoad [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7240 (     0x8) gParDebugShowWordLMDistributionOnLoad [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7248 (     0x8) gParDebugLMScoring [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7250 (     0x8) gParDebugLMAddDelete [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7258 (     0x8) gParDebugCopyLM [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7260 (     0x8) gParDebugWordLMBuild [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7268 (     0x8) gParDebugWordLMStaticization [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7270 (     0x8) gParDebugWordLMBuildShowContextProbs [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7278 (     0x8) gParDebugWordLMDynamicLoad [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7280 (     0x8) gParDebugShowNetNodeStatsPerFrame [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7288 (     0x8) gParDebugShowNetNodeStats [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7290 (     0x8) gParDebugRecognitionWatchTheseWords [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7298 (     0x8) gParDiagnosticFrameSpecificCommand [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b72a0 (     0x8) gParDebugAbortRecognition [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b72a8 (     0x8) gParDebugRecognitionWatchAllActiveWords [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b72b0 (     0x8) gParDebugShowActiveWords [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b72b8 (     0x8) gParDebugShowActiveStats [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b72c0 (     0x8) gParDebugShowFinalActiveStats [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b72c8 (     0x8) gParDebugShowPerFrameRecognitionStats [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b72d0 (     0x8) gParDebugPartialFinalResults [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b72d8 (     0x8) gParDiagnosticSearchRecognitionNetType [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b72e0 (     0x8) gParDebugSeeding [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b72e8 (     0x8) gParDebugPrefiltererDeactivation [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b72f0 (     0x8) gParDebugShowPartialResults [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b72f8 (     0x8) gParDebugPrefiltererLookahead [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7300 (     0x8) gParDebugFwdBwd [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7308 (     0x8) gParFwdBwdUseGPU [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7310 (     0x8) gParFwdBwdUseCPUGetNumOutPortsFromFwdBwdProbs [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7318 (     0x8) gParFwdBwdUseCPUGetNumOutPorts [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7320 (     0x8) gParFwdBwdUseCPUCumulativeSums [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7328 (     0x8) gParFwdBwdUseCPUInitCandidateStates [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7330 (     0x8) gParFwdBwdUseCPUMakeBackwardDecision [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7338 (     0x8) gParFwdBwdUseCPUGetBlockSizes [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7340 (     0x8) gParFwdBwdUseCPUInitCandidateBlocks [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7348 (     0x8) gParFwdBwdUseCPUCopyWithCutoff [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7350 (     0x8) gParFwdBwdUseCPUSortCandidatesByState [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7358 (     0x8) gParFwdBwdUseCPUDoStep [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7360 (     0x8) gParFwdBwdUseCPUSortCandidatesByScore [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7368 (     0x8) gParFwdBwdUseCPUUpdateBackwardLinks [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7370 (     0x8) gParDebugFwdBwdActivePelSelection [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7378 (     0x8) gParDebugShowPerFrameRecognitionTimes [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7380 (     0x8) gParDebugShowRecogWorkTypeStateTransitions [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7388 (     0x8) gParDebugShowParamSetParametersOnLoad [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7390 (     0x8) gParDebugResultProcessing [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7398 (     0x8) gParDebugFstArcGraphIO [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b73a0 (     0x8) gParDebugShowDFileLoadInfo [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b73a8 (     0x8) VocMgr::smpVocMgr [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b73b0 (     0x8) gParDiagnosticShowFloatsAsHex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b73b8 (     0x8) gParDiagnosticCrashOnAssert [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b73c0 (     0x8) gParDiagnosticCrashOnError [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b73c8 (     0x8) gShadowDiagnosticCrashOnError [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b73d0 (     0x8) gParDiagnosticCrashOnWarning [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b73d8 (     0x8) gShadowDiagnosticCrashOnWarning [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b73e0 (     0x8) gParDiagnosticAbortOnAssert [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b73e8 (     0x8) gParDiagnosticSkipTheseAsserts [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b73f0 (     0x8) gbDiagnosticCrashOnErrorDueToProfilingClient [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b73f8 (     0x8) gParDebugDFile [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7400 (     0x8) gParDebugShowDFileStatsOnDestruction [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7408 (     0x8) gShadowDebugShowDFileStatsOnDestruction [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7410 (     0x8) gParDiagnosticDFileSimulateAddBlockFailure [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7418 (     0x8) gParDiagnosticDFileSimulateOpenFailure [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7420 (     0x8) gParDebugShowParamSetRefCounting [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7428 (    0x68) ParamSpecMgr::smpParamSpecMgrArray [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7490 (     0x8) gParDebugShowRecentBufferOnLoad [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7498 (     0x8) gParDebugRecentBufferScoring [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b74a0 (     0x8) gParDebugRecentBufferAddDelete [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b74a8 (     0x8) gParDebugLatticeNBestGeneration [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b74b0 (     0x8) gParDebugLatticeLMRescoring [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b74b8 (     0x8) gParDebugLatticeBestAlignment [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b74c0 (     0x8) gParDebugShowShortListBitVector [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b74c8 (     0x8) gParDiagnosticPackedIntPelScoring [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b74d0 (     0x8) gParDebugAcousticReferencePackedIntScoring [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b74d8 (     0x8) gParDebugAcousticFloatScoring [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b74e0 (     0x8) gParDebugAcousticMicReferenceScoring [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b74e8 (     0x8) gParDebugQuantPerDimPelScoring [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b74f0 (     0x8) gParDebugShowTransformedFeatures [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b74f8 (     0x8) gParDiagnosticAttilaAcousticScoreScale [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7500 (     0x8) gParDebugShowFstGraphDiagnostic [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7508 (     0x8) gParDebugFstGraphConstruction [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7510 (     0x8) gParDebugFstGraphConstruction2 [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7518 (     0x8) gParDebugFstGraphConstruction3 [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7520 (     0x8) gParDebugFstGraphConstruction4 [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7528 (     0x8) gParFstGraphLeftCtxSize [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7530 (     0x8) gParFstGraphRightCtxSize [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7538 (     0x8) gParFstGraphBigEndian [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7540 (     0x8) gParFstGraphFinalMin [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7548 (     0x8) gParFstGraphFullMin [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7550 (     0x8) gParFstGraphRegularizePush [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7558 (     0x8) gParFstGraphInsertSilence [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7560 (     0x8) gParFstGraphSilenceCost [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7568 (     0x8) gParFstGraphAstraFormat [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7570 (     0x8) gParFstGraphSkipArcs [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7578 (     0x8) gParFstGraphWordInsertionCost [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7580 (     0x8) gParFstGraphPush [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7588 (     0x8) gParFstGraphPushForwardCost [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7590 (     0x8) gParFstGraphOutputFormat [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7598 (     0x8) gParDebugSnrEstimation [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b75a0 (     0x8) gParDiagnosticLinearTransformation [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b75a8 (     0x8) gParDiagnosticShowIdealizedObjectSizes [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b75b0 (     0x8) gShadowDiagnosticShowIdealizedObjectSizes [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b75b8 (     0x8) gParDiagnosticTrackObjectPointerAllocation [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b75c0 (     0x8) gShadowDiagnosticTrackObjectPointerAllocation [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b75c8 (     0x8) gParDebugShowLoadVocCalls [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b75d0 (     0x8) gParDebugShowFstCompilationTimes [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b75d8 (     0x8) ModelMgr::smpModelMgr [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b75e0 (     0x8) gParDiagnosticScoreAllPels [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b75e8 (     0x8) gParDebugShowPelStats [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b75f0 (     0x8) gParDebugShowPelsPerGenoneFrameStats [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b75f8 (     0x8) gParDebugShowPelsPerGenoneStats [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7600 (     0x8) gParDebugShowPelScores [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7608 (     0x8) gParDebugPelScoreCache [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7610 (     0x8) gParDebugShowBestPels [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7618 (     0x8) gParDebugActivePels [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7620 (     0x8) gParDebugPelScoringTime [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7628 (     0x8) gParDebugChannel [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7630 (     0x8) g_bLogMemoryLeaks [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7638 (     0x8) gParDebugShowFinalHistoryStats [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7640 (     0x8) gParDebugCrumbBank [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7648 (     0x8) gParDebugShowPrefiltererOperationTimes [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7650 (     0x8) gParDebugPrefiltererBuild [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7658 (     0x8) gParDebugShowPrefiltererBuildShape [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7660 (     0x8) gParDebugPrefiltererWatchTheseWords [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7668 (     0x8) gParDebugShowHashStatsOnDestruction [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7670 (     0x8) gShadowDebugShowHashStatsOnDestruction [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7678 (     0x8) gParDebugProgressCallbacks [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7680 (     0x8) gParDebugShowParameterSettings [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7688 (     0x8) gShadowDebugShowParameterSettings [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7690 (     0x8) gParDebugShowEffectiveParameterSettings [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b7698 (     0x8) gShadowDebugShowEffectiveParameterSettings [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b76a0 (     0x8) gParDebugShowDefaultToDefaultParameterSettings [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b76a8 (     0x8) gShadowDebugShowDefaultToDefaultParameterSettings [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b76b0 (     0x8) gParDebugParCacheGet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d65b76b8 (     0x8) GlobalParamMgr::smpGlobalParamMgr [PEXT, NameNList, MangledNameNList, NList] 
            0x00000001d65b76c0 (  0x4680) __DATA __bss
                0x00000001d65b76c0 (  0x2000) s_pStaticLogPartialLine [NameNList, MangledNameNList, NList] 
                0x00000001d65b96c0 (     0x8) s_bJustPrintedNewLine [NameNList, MangledNameNList, NList] 
                0x00000001d65b96c8 (     0x8) getItnTagVersion()::pItnTagVersion [NameNList, MangledNameNList, NList] 
                0x00000001d65b96d0 (     0x8) guard variable for getItnTagVersion()::pItnTagVersion [NameNList, MangledNameNList, NList] 
                0x00000001d65b96d8 (   0x190) DgnThreadClient::handleMemoryException(unsigned int)::buffer [NameNList, MangledNameNList, NList] 
                0x00000001d65b9868 (   0x190) DgnThreadWorker::reportErrorAsWarning(bool)::buffer [NameNList, MangledNameNList, NList] 
                0x00000001d65b99f8 (     0x8) s_logCallBack [NameNList, MangledNameNList, NList] 
                0x00000001d65b9a00 (     0x8) getPropCheckTokenExistence()::p [NameNList, MangledNameNList, NList] 
                0x00000001d65b9a08 (     0x8) guard variable for getPropCheckTokenExistence()::p [NameNList, MangledNameNList, NList] 
                0x00000001d65b9a10 (     0x4) sNumErrBPCalls [NameNList, MangledNameNList, NList] 
                0x00000001d65b9a14 (     0x4) sNumWarnBPCalls [NameNList, MangledNameNList, NList] 
                0x00000001d65b9a18 (  0x2000) sgLastErrorString [NameNList, MangledNameNList, NList] 
                0x00000001d65bba18 (     0x1) sbSkipErrThrows [NameNList, MangledNameNList, NList] 
                0x00000001d65bba19 (     0x1) sbSkipWarnings [NameNList, MangledNameNList, NList] 
                0x00000001d65bba1a (   0x190) ThrowNewFailure(DgnMemoryException*, unsigned long)::buffer [NameNList, MangledNameNList, NList] 
                0x00000001d65bbbaa (   0x192) ThrowExternalNewFailure(DgnMemoryException*, unsigned long)::buffer [NameNList, MangledNameNList, NList] 
                0x00000001d65bbd3c (     0x4) sLogRefCount [NameNList, MangledNameNList, NList] 
        0x000000023a910000 (0x37bf0000) __LINKEDIT SEGMENT
