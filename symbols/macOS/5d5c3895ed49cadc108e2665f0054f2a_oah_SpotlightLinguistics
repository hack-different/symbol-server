Unable to find file, pid, task or signature matching: -arch=x86_64
WARNING: You currently do not have task_read_for_pid() privileges.
Unable to find file, pid, task or signature matching: -wide
WARNING: You currently do not have task_read_for_pid() privileges.
/System/Library/PrivateFrameworks/SpotlightLinguistics.framework/Versions/A/SpotlightLinguistics [arm64e, 0.119996 seconds]:
    8FBC7D70-53B0-335D-8174-C4D5A7B1706D /System/Library/PrivateFrameworks/SpotlightLinguistics.framework/Versions/A/SpotlightLinguistics [DYLIB, DYLDSHAREDCACHE, FaultedFromDiskDyldSharedCache, MMap64]  
        0x00000001853b2000 ( 0x1bff4) __TEXT SEGMENT
            0x00000001853b2000 (  0x14a8) MACH_HEADER
            0x00000001853b34a8 ( 0x17fb8) __TEXT __text
                0x00000001853b34a8 (    0xf0) SILexiconCacheCreateWithOptions [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b3598 (    0x10) SILexiconCacheRetain [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b35a8 (   0x260) SILexiconCacheLoad [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b3808 (    0x9c) __SILexiconCacheLoad_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b38a4 (   0x288) __SILexiconCacheLoad_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b3b2c (     0x4) __SILexiconCacheLoad_block_invoke_3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b3b30 (   0x320) createLexicon(__CFLocale const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b3e50 (     0x8) __SILexiconCacheLoad_block_invoke_4 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b3e58 (    0x50) __SILexiconCacheLoad_block_invoke_5 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b3ea8 (    0x10) __copy_helper_block_e8_32r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b3eb8 (     0xc) __destroy_helper_block_e8_32r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b3ec4 (    0x64) __SILexiconCacheLoad_block_invoke.14 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b3f28 (    0x50) __copy_helper_block_e8_32b40r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b3f78 (    0x44) __destroy_helper_block_e8_32b40r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b3fbc (    0x60) SILexiconCacheRelease [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b401c (   0x16c) SILexiconCacheContainsTokenIDInString [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b4188 (   0x354) SILexiconCacheContainsTokenID [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b44dc (   0x168) SILexiconCacheSetTokenIDInString [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b4644 (   0x314) SILexiconCacheSetTokenID [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b4958 (    0xc8) SILexiconCacheGetTokenIDInString [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b4a20 (    0x44) SILexiconCacheGetTokenType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b4a64 (    0x88) SILexiconCacheGetTokenTypeInString [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b4aec (    0x84) SILexiconCacheGetTokenID [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b4b70 (    0x2c) invocation function for block in logger() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b4b9c (    0x2c) invocation function for block in getLexiconQueue() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b4bc8 (    0x98) std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::basic_string[abi:v160006](char const*, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b4c60 (    0x18) std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b4c78 (    0x5c) std::__1::__throw_length_error[abi:v160006](char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b4cd4 (    0x34) std::length_error::length_error[abi:v160006](char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b4d08 (    0x28) SITokenInit [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b4d30 (   0x120) SITextTokenizerEnumerateTokensInString [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b4e50 (   0x2e8) __SITextTokenizerEnumerateTokensInString_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b5138 (     0xc) __Block_byref_object_copy_ [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b5144 (     0x4) __Block_byref_object_dispose_ [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b5148 (   0x484) __SITextTokenizerEnumerateTokensInString_block_invoke.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b55cc (   0x484) __SITextTokenizerEnumerateTokensInString_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b5a50 (   0x120) __copy_helper_block_e8_32b40r48r56r64r72r80r88r96r104r112r120r128r136r144r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b5b70 (    0xe0) __destroy_helper_block_e8_32b40r48r56r64r72r80r88r96r104r112r120r128r136r144r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b5c50 (    0xd0) __copy_helper_block_e8_32b40r48r56r64r72r80r88r96r104r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b5d20 (    0xa4) __destroy_helper_block_e8_32b40r48r56r64r72r80r88r96r104r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b5dc4 (    0x2c) invocation function for block in getTaggerQueue() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b5df0 (    0xa0) invocation function for block in getTagger() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b5e90 (   0x104) SIGetResourceRootURLsForLocaleOfType [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b5f94 (   0x118) SIGetResourceURLsForLocaleOfType [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b60ac (   0x2b8) __SIAssetManagerGetResourceRootURLsForLocaleOfType_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b6364 (    0xd4) __SIAssetManagerGetResourceRootURLsForLocaleOfType_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b6438 (    0x10) __copy_helper_block_8_32r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b6448 (     0xc) __destroy_helper_block_8_32r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b6454 (    0xd4) __SIAssetManagerGetResourceRootURLsForLocaleOfType_block_invoke.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b6528 (    0x40) __getAssetResourceRoots_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b6568 (    0x8c) __getAssetResourceManager_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b65f4 (     0xc) __SIAssetResourceManagerCreate_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b6600 (     0xc) __SIAssetResourceManagerCreate_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b660c (   0x2b8) __SIAssetManagerGetResourceURLsForLocaleOfType_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b68c4 (    0xdc) __SIAssetManagerGetResourceURLsForLocaleOfType_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b69a0 (    0xd8) __SIAssetManagerGetResourceURLsForLocaleOfType_block_invoke.26 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b6a78 (    0x40) __getAssetResourcePaths_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b6ab8 (    0x7c) SILocalizationCreateWithOptions [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b6b34 (    0x10) SILocalizationRetain [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b6b44 (   0x260) SILocalizationLoad [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b6da4 (    0x88) __SILocalizationLoad_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b6e2c (   0x67c) __SILocalizationLoad_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b74a8 (   0x24c) update(__CFLocale const*, __CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b76f4 (    0x50) __SILocalizationLoad_block_invoke_3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b7744 (    0x48) __SILocalizationLoad_block_invoke_4 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b778c (    0x10) __copy_helper_block_e8_32b [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b779c (     0xc) __destroy_helper_block_e8_32b [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b77a8 (    0x1c) SILocalizationRelease [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b77c4 (   0x2a0) SILocalizationGetTokenType [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b7a64 (   0x144) SILocalizationGetTokenTypeInString [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b7ba8 (    0x28) invocation function for block in getMainBundle() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b7bd0 (    0x78) invocation function for block in getFallbackBundle() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b7c48 (    0x68) addTerm(unsigned int, __CFString const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b7cb0 (    0x2c) invocation function for block in getLocalizationQueue() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b7cdc (    0x20) traverseCallback(void*, _SITrieCompletion*, bool*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b7cfc (    0xa8) SIGeneralTrieAddKey [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b7da4 (    0x10) SITrieCompletionGetCompletion [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b7db4 (     0xc) SITrieCompletionGetLength [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b7dc0 (     0xc) SITrieCompletionGetPayload [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b7dcc (    0x30) rankedTraverseCallback(void*, _SITrieCompletion*, bool*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b7dfc (    0xb4) SIGeneralTrieAddKeyWithScore [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b7eb0 (    0x14) SITrieCompletionGetScore [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b7ec4 (     0xc) SIGeneralTrieCreateMutable [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b7ed0 (    0x74) SIGeneralTrieCreateMutableWithOptions [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b7f44 (   0x184) SIGeneralTrieCreateFromFileURL [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b80c8 (    0xb0) burstTrieCreateWithBytes(char const*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b8178 (    0x88) SIGeneralTrieRelease [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b8200 (     0x8) SIGeneralTrieCreateWithBytes [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b8208 (     0xc) SIGeneralTrieGetCount [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b8214 (    0xa8) SIGeneralTrieCreateMutableCopy [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b82bc (    0xc0) SIGeneralTrieSearch [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b837c (    0x10) SIGeneralTrieRetain [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b838c (   0x174) addLevel(_SIGeneralTrie*, _TrieLevel*, unsigned char const*, unsigned int, unsigned int, unsigned int, SIGeneralTrieAddCode*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b8500 (   0x13c) SIGeneralTrieAddStringKey [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b863c (   0x208) addLevelRanked(_SIGeneralTrie*, _RankedTrieLevel*, unsigned char const*, unsigned int, unsigned int, unsigned int, double, double*, bool, SIGeneralTrieAddCode*, void*, double (*)(void*, double, double)) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b8844 (   0x164) SIGeneralTrieAddStringKeyWithScore [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b89a8 (    0xb0) SIGeneralTrieSetKeyWithScore [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b8a58 (   0x14c) SIGeneralTrieSetStringKeyWithScore [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b8ba4 (    0x10) SITrieCompletionRetain [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b8bb4 (    0x14) trieCompletionRetain(__CFAllocator const*, void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b8bc8 (    0x10) SITrieCompletionRelease [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b8bd8 (    0x54) trieCompletionRelease(__CFAllocator const*, void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b8c2c (    0x78) SIGeneralTrieContainsKey [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b8ca4 (   0x24c) searchWithContext(_SIGeneralTrie const*, unsigned char const*, unsigned int, bool, _SearchContext*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b8ef0 (   0x138) SIGeneralTrieContainsStringKey [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b9028 (    0x6c) SIGeneralTrieCreateCursorWithBytes [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b9094 (    0xd4) SIGeneralTrieTraverseFromCursor [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b9168 (   0x174) searchCallback(void*, unsigned char const*, unsigned int, unsigned int, double, bool*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b92dc (     0xc) SIGeneralTrieCursorDispose [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b92e8 (   0x14c) SIGeneralTrieSearchString [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b9434 (    0x1c) void enumerateListNode<_ListNode*>(_ListNode*, unsigned char*, unsigned int, bool*, void*, void (*)(void*, unsigned char const*, unsigned int, unsigned int, double, bool*)) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b9450 (   0x510) traverseFromCompactMapCursor(_SIGeneralTrie const*, _CompactMapCursor*, unsigned char*, unsigned int, unsigned int, bool*, void*, void (*)(void*, unsigned char const*, unsigned int, unsigned int, double, bool*)) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b9960 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001853b9970 (   0x1e4) traverseFromCompactMapCursorMappedLevel(_SIGeneralTrie const*, _CompactMapCursor*, unsigned char*, unsigned int, unsigned int, bool*, void*, void (*)(void*, unsigned char const*, unsigned int, unsigned int, double, bool*)) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b9b54 (    0x88) SIGeneralTrieSetCursorWithBytes [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b9bdc (    0xc0) SIGeneralTrieCursorAdvanceWithBytes [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b9c9c (     0x4) void SetMapCursorScore<_TrieLevel*>(MapCursor&, _TrieLevel*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853b9ca0 (   0x500) advanceCompactMapCursor(_SIGeneralTrie const*, _CompactMapCursor*, unsigned char const*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853ba1a0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001853ba1b0 (    0xec) advanceMapCursor(_SIGeneralTrie const*, MapCursor*, unsigned char const*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853ba29c (    0x70) sharedBuffer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853ba30c (   0x390) traverseFromMapCursor(_SIGeneralTrie const*, MapCursor&, unsigned char*, unsigned int, long, bool*, void*, void (*)(void*, unsigned char const*, unsigned int, unsigned int, double, bool*)) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853ba69c (    0x84) SIGeneralTrieCursorCreateCopy [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853ba720 (    0x88) SIGeneralTrieCursorIsEqual [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853ba7a8 (    0x38) SIGeneralTrieCursorGetPayload [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853ba7e0 (    0x70) SITrieCursorQueueCreate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853ba850 (    0x18) TrieCursorRetain(__CFAllocator const*, void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853ba868 (    0x20) TrieCursorRelease(__CFAllocator const*, void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853ba888 (    0x64) TrieCursorCompare(void const*, void const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853ba8ec (    0x70) SITrieCompletionQueueCreate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853ba95c (    0x84) trieCompletionCompareScore(void const*, void const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853ba9e0 (   0x174) SIGeneralTrieRankedSearchWithSelection [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853bab54 (    0x84) trieCompletionInternalCompareScore(void const*, void const*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853babd8 (   0x220) rankSearchDiskLevel(_SIGeneralTrie const*, _RankedDiskTrieLevel*, unsigned char const*, unsigned int, unsigned int, __CFBinaryHeap*, __CFBinaryHeap*, int, _SITrieSelector*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853badf8 (   0x1dc) rankSearchLevel(_SIGeneralTrie const*, _RankedTrieLevel*, unsigned char const*, unsigned int, unsigned int, __CFBinaryHeap*, __CFBinaryHeap*, int, _SITrieSelector*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853bafd4 (    0x1c) SIGeneralTrieRankedSearch [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853baff0 (   0x120) SIGeneralTrieContinueRankedSearch [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853bb110 (   0x204) rankSearchCursors(_SIGeneralTrie const*, __CFBinaryHeap*, __CFBinaryHeap*, int, _SITrieSelector*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853bb314 (   0x1fc) SIGeneralTrieWriteToFileDescriptor [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853bb510 (   0x140) SIGeneralTrieWriteToFileURL [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853bb650 (    0x80) void finishLevel<_RankedTrieLevel*, _RankedListNode*>(_RankedTrieLevel*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853bb6d0 (    0x80) void finishLevel<_TrieLevel*, _ListNode*>(_TrieLevel*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853bb750 (   0x1a8) addListNode(_SIGeneralTrie*, _ListNode**, unsigned char const*, unsigned int, unsigned int, unsigned int, SIGeneralTrieAddCode*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853bb8f8 (   0x180) burstLevel(_SIGeneralTrie*, _ListNode*, SIGeneralTrieAddCode*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853bba78 (    0x48) nodeStringCompare(void const*, void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853bbac0 (   0x238) addListNodeRanked(_SIGeneralTrie*, _RankedListNode**, unsigned char const*, unsigned int, unsigned int, unsigned int, double, double*, bool, SIGeneralTrieAddCode*, void*, double (*)(void*, double, double)) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853bbcf8 (   0x204) burstLevelRanked(_SIGeneralTrie*, _RankedListNode*, double*, bool, SIGeneralTrieAddCode*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853bbefc (    0x48) nodeScoreCompare(void const*, void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853bbf44 (   0x384) searchDiskLevelRanked(_SIGeneralTrie const*, _RankedDiskTrieLevel*, unsigned char*, unsigned int, unsigned int, bool, void*, std::__1::function<void (void*, _SITrieCompletion*, bool, bool*)>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853bc2c8 (    0x7c) containsKey(void*, _SITrieCompletion*, bool, bool*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853bc344 (   0x388) searchDiskLevel(_SIGeneralTrie const*, _DiskTrieLevel*, unsigned char*, unsigned int, unsigned int, bool, void*, std::__1::function<void (void*, _SITrieCompletion*, bool, bool*)>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853bc6cc (   0x2a4) searchLevelRanked(_SIGeneralTrie const*, _RankedTrieLevel*, unsigned char*, unsigned int, unsigned int, bool, void*, std::__1::function<void (void*, _SITrieCompletion*, bool, bool*)>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853bc970 (   0x2a0) searchLevel(_SIGeneralTrie const*, _TrieLevel*, unsigned char*, unsigned int, unsigned int, bool, void*, std::__1::function<void (void*, _SITrieCompletion*, bool, bool*)>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853bcc10 (   0x464) searchCompactDiskLevelRanked(_SIGeneralTrie const*, _RankedCompactDiskTrieLevel*, unsigned char*, unsigned int, unsigned int, bool, void*, std::__1::function<void (void*, _SITrieCompletion*, bool, bool*)>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853bd074 (   0x174) searchDiskPageRanked(_SIGeneralTrie const*, _RankedPage*, unsigned char*, unsigned int, unsigned int, bool, void*, std::__1::function<void (void*, _SITrieCompletion*, bool, bool*)>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853bd1e8 (    0xa4) SITrieCompletionCreate(unsigned char const*, unsigned int, unsigned int, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853bd28c (    0x6c) std::__1::function<void (void*, _SITrieCompletion*, bool, bool*)>::operator()(void*, _SITrieCompletion*, bool, bool*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853bd2f8 (    0x98) std::__1::__function::__value_func<void (void*, _SITrieCompletion*, bool, bool*)>::__value_func[abi:v160006](std::__1::__function::__value_func<void (void*, _SITrieCompletion*, bool, bool*)> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853bd390 (    0x4c) std::__1::__throw_bad_function_call[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853bd3dc (     0x4) std::__1::bad_function_call::~bad_function_call() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853bd3e0 (    0x28) std::__1::bad_function_call::~bad_function_call() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853bd408 (     0x4) std::__1::__function::__func<void (*)(void*, _SITrieCompletion*, bool, bool*), std::__1::allocator<void (*)(void*, _SITrieCompletion*, bool, bool*)>, void (void*, _SITrieCompletion*, bool, bool*)>::~__func() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853bd40c (     0x4) std::__1::__function::__func<void (*)(void*, _SITrieCompletion*, bool, bool*), std::__1::allocator<void (*)(void*, _SITrieCompletion*, bool, bool*)>, void (void*, _SITrieCompletion*, bool, bool*)>::~__func() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853bd410 (    0x48) std::__1::__function::__func<void (*)(void*, _SITrieCompletion*, bool, bool*), std::__1::allocator<void (*)(void*, _SITrieCompletion*, bool, bool*)>, void (void*, _SITrieCompletion*, bool, bool*)>::__clone() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853bd458 (    0x24) std::__1::__function::__func<void (*)(void*, _SITrieCompletion*, bool, bool*), std::__1::allocator<void (*)(void*, _SITrieCompletion*, bool, bool*)>, void (void*, _SITrieCompletion*, bool, bool*)>::__clone(std::__1::__function::__base<void (void*, _SITrieCompletion*, bool, bool*)>*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853bd47c (     0x4) std::__1::__function::__func<void (*)(void*, _SITrieCompletion*, bool, bool*), std::__1::allocator<void (*)(void*, _SITrieCompletion*, bool, bool*)>, void (void*, _SITrieCompletion*, bool, bool*)>::destroy() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853bd480 (     0x4) std::__1::__function::__func<void (*)(void*, _SITrieCompletion*, bool, bool*), std::__1::allocator<void (*)(void*, _SITrieCompletion*, bool, bool*)>, void (void*, _SITrieCompletion*, bool, bool*)>::destroy_deallocate() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853bd484 (    0x18) std::__1::__function::__func<void (*)(void*, _SITrieCompletion*, bool, bool*), std::__1::allocator<void (*)(void*, _SITrieCompletion*, bool, bool*)>, void (void*, _SITrieCompletion*, bool, bool*)>::operator()(void*&&, _SITrieCompletion*&&, bool&&, bool*&&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853bd49c (    0x84) std::__1::__function::__value_func<void (void*, _SITrieCompletion*, bool, bool*)>::~__value_func[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853bd520 (   0x46c) searchCompactDiskLevel(_SIGeneralTrie const*, _CompactDiskTrieLevel*, unsigned char*, unsigned int, unsigned int, bool, void*, std::__1::function<void (void*, _SITrieCompletion*, bool, bool*)>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853bd98c (   0x388) searchDiskPage(_SIGeneralTrie const*, _Page*, unsigned char*, unsigned int, unsigned int, bool, void*, std::__1::function<void (void*, _SITrieCompletion*, bool, bool*)>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853bdd14 (   0x148) searchListRanked(_SIGeneralTrie const*, _RankedListNode*, unsigned char*, unsigned int, unsigned int, bool, void*, std::__1::function<void (void*, _SITrieCompletion*, bool, bool*)>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853bde5c (   0x148) searchList(_SIGeneralTrie const*, _ListNode*, unsigned char*, unsigned int, unsigned int, bool, void*, std::__1::function<void (void*, _SITrieCompletion*, bool, bool*)>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853bdfa4 (    0xbc) advanceCompactMapCursorMappedLevel(_SIGeneralTrie const*, _CompactMapCursor*, unsigned char const*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853be060 (    0xe0) updateCompactMapCursorPointer(_SIGeneralTrie const*, _CompactMapCursor*, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853be140 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001853be150 (   0x2f0) advanceMapCursorTrieList(_SIGeneralTrie const*, MapCursor*, unsigned char const*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853be440 (    0xa0) updateMapCursorPointer(_SIGeneralTrie const*, MapCursor&, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853be4e0 (    0x1c) invocation function for block in sharedBuffer() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853be4fc (   0x328) rankSearchCompactDiskLevel(_SIGeneralTrie const*, _RankedCompactDiskTrieLevel*, unsigned char const*, unsigned int, unsigned int, __CFBinaryHeap*, __CFBinaryHeap*, int, _SITrieSelector*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853be824 (   0x39c) rankSearchDiskPage(_SIGeneralTrie const*, _RankedPage*, unsigned char const*, unsigned int, unsigned int, __CFBinaryHeap*, __CFBinaryHeap*, int, _SITrieSelector*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853bebc0 (   0x290) updateCompletions(_SITrieCompletion*, _SITrieSelector*, __CFBinaryHeap*, __CFBinaryHeap*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853bee50 (   0x140) rankSearchGetCursor(_SIGeneralTrie const*, unsigned long, unsigned char*, unsigned int, __CFBinaryHeap*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853bef90 (   0x130) rankSearchList(_SIGeneralTrie const*, _RankedListNode*, unsigned char const*, unsigned int, unsigned int, __CFBinaryHeap*, __CFBinaryHeap*, int, _SITrieSelector*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853bf0c0 (   0x214) serializeListsRanked(_SIGeneralTrie const*, _RankedTrieLevel*, long long, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853bf2d4 (   0x30c) serializeLists(_SIGeneralTrie const*, _TrieLevel*, long long, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853bf5e0 (   0x2cc) serializeLevelsRanked(_SIGeneralTrie const*, _RankedTrieLevel*, long long, int, bool, bool, unsigned int*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853bf8ac (   0x2b4) serializeLevels(_SIGeneralTrie const*, _TrieLevel*, long long, int, bool, bool, unsigned int*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853bfb60 (    0x14) SILanguageModelShrinkLanguageGuessers [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853bfb74 (    0xdc) SIIsLanguagePreferred [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853bfc50 (   0x130) __SIIsLanguagePreferred_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853bfd80 (   0x620) SILanguageModelCreateWithOptions [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c03a0 (    0xcc) copyAvailableUserLanguages() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c046c (   0x1e0) updateAvailableLanguages(_LanguageModel*, __CFArray const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c064c (   0x7d0) SILanguageResourcesCreate(SILanguageID, long, unsigned int, __CFString const*, __CFURL const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c0e1c (    0x5c) localeChangeCallback(__CFNotificationCenter*, void*, __CFString const*, void const*, __CFDictionary const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c0e78 (    0x10) SILanguageModelRetain [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c0e88 (    0xb0) SILanguageModelRelease [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c0f38 (    0x44) SILanguageModelGetDefaultModel [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c0f7c (    0x28) __SILanguageModelGetDefaultModel_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c0fa4 (    0x90) SILanguageModelGetDefaultModelWithContext [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c1034 (    0x28) __SILanguageModelGetDefaultModelWithContext_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c105c (   0x118) SILanguageModelPreheat [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c1174 (    0xbc) SILanguageModelPurge [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c1230 (    0x14) SILanguageModelReserve [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c1244 (    0x14) SILanguageModelUnreserve [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c1258 (    0xd8) SILanguageModelGetLanguageGuessUsingMontrealInString [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c1330 (    0xd8) getLanguageIdentifier() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c1408 (    0xd0) SILanguageModelGetLanguageGuessUsingMontreal [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c14d8 (   0x4a0) SILanguageModelCopyLocale [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c1978 (    0x44) isValidTokenizedString(_SITokenizedString const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c19bc (   0x42c) GetValidatedLocaleFromTokens(_LanguageModel*, __CFLocale const*, __CFArray const*, _SITokenizedString const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c1de8 (    0xe0) guessedLocaleUsingMontreal(unsigned short const*, long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c1ec8 (   0x144) SILanguageModelCopyLocaleInString [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c200c (    0x54) __SILanguageModelCopyLocaleInString_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c2060 (    0x44) SILanguageModelIsValidPhraseToken [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c20a4 (    0x84) SILanguageModelIsStopWord [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c2128 (    0x74) __SILanguageModelIsStopWord_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c219c (   0x140) SILanguageModelEnumerateKeyPhrasesInString [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c22dc (    0xdc) __SILanguageModelEnumerateKeyPhrasesInString_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c23b8 (   0x298) EnumerateKeyPhrases(_LanguageModel*, __CFLocale const*, _SITokenizedString const*, void (CFRange, unsigned int, double, bool*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c2650 (    0x84) __SILanguageModelEnumerateKeyPhrasesInString_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c26d4 (    0x60) __copy_helper_block_e8_32b40r48r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c2734 (    0x50) __destroy_helper_block_e8_32b40r48r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c2784 (     0x4) SILanguageModelEnumerateKeyPhrases [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c2788 (    0x1c) SILanguageModelGetKeyPhraseAtIndex [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c27a4 (   0x2d0) GetKeyPhraseRangeAtIndex(_LanguageModel*, __CFLocale const*, long, _SITokenizedString const*, CFRange*, double*, unsigned int*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c2a74 (    0x10) SILanguageModelGetPhraseScoreAtIndex [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c2a84 (   0x2e0) GetKeyPhraseScoreAtIndex(_LanguageModel*, __CFLocale const*, long, _SITokenizedString const*, CFRange*, unsigned int*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c2d64 (     0x4) SILanguageModelIsContentTokenAtIndex [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c2d68 (   0x2c0) IsContentToken(_LanguageModel*, __CFLocale const*, _SITokenizedString const*, long, double*, unsigned int*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c3028 (   0x170) SILanguageModelIsContentTokenInString [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c3198 (    0xe0) languageIsPreferred(SILanguageID) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c3278 (    0x88) __SILanguageModelIsContentTokenInString_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c3300 (   0x11c) _SILanguageModelGetCacheCount [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c341c (   0x108) SIRetainLanguageResources(SILanguageID, long, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c3524 (    0x2c) invocation function for block in getAvailableLanguagesQueue() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c3550 (    0x60) invocation function for block in updateAvailableLanguages(_LanguageModel*, __CFArray const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c35b0 (     0x4) invocation function for block in SILanguageResourcesCreate(SILanguageID, long, unsigned int, __CFString const*, __CFURL const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c35b4 (   0x300) getTokenID(_LanguageResources*, unsigned char const*, long, unsigned int*, double*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c38b4 (   0x200) _getTokenID(_LanguageResources*, __CFString const*, unsigned int*, double*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c3ab4 (    0xa4) invocation function for block in _getTokenID(_LanguageResources*, __CFString const*, unsigned int*, double*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c3b58 (    0x50) __copy_helper_block_e8_32r40r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c3ba8 (    0x44) __destroy_helper_block_e8_32r40r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c3bec (    0xb0) SILanguageResourcesRelease(_LanguageResources*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c3c9c (     0x4) std::__1::__function::__func<SIPreheatLanguageResources(SILanguageID, long, unsigned int, long, bool)::$_4, std::__1::allocator<SIPreheatLanguageResources(SILanguageID, long, unsigned int, long, bool)::$_4>, void* ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c3ca0 (     0x4) std::__1::__function::__func<SIPreheatLanguageResources(SILanguageID, long, unsigned int, long, bool)::$_4, std::__1::allocator<SIPreheatLanguageResources(SILanguageID, long, unsigned int, long, bool)::$_4>, void* ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c3ca4 (    0x54) std::__1::__function::__func<SIPreheatLanguageResources(SILanguageID, long, unsigned int, long, bool)::$_4, std::__1::allocator<SIPreheatLanguageResources(SILanguageID, long, unsigned int, long, bool)::$_4>, void* ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c3cf8 (    0x30) std::__1::__function::__func<SIPreheatLanguageResources(SILanguageID, long, unsigned int, long, bool)::$_4, std::__1::allocator<SIPreheatLanguageResources(SILanguageID, long, unsigned int, long, bool)::$_4>, void* ()>::__clone(std::__1::__function::__base<void* ()>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c3d28 (     0x4) std::__1::__function::__func<SIPreheatLanguageResources(SILanguageID, long, unsigned int, long, bool)::$_4, std::__1::allocator<SIPreheatLanguageResources(SILanguageID, long, unsigned int, long, bool)::$_4>, void* ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c3d2c (     0x4) std::__1::__function::__func<SIPreheatLanguageResources(SILanguageID, long, unsigned int, long, bool)::$_4, std::__1::allocator<SIPreheatLanguageResources(SILanguageID, long, unsigned int, long, bool)::$_4>, void* ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c3d30 (    0x1c) std::__1::__function::__func<SIPreheatLanguageResources(SILanguageID, long, unsigned int, long, bool)::$_4, std::__1::allocator<SIPreheatLanguageResources(SILanguageID, long, unsigned int, long, bool)::$_4>, void* ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c3d4c (    0x84) std::__1::__function::__value_func<void* ()>::~__value_func[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c3dd0 (    0x2c) invocation function for block in logger() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c3dfc (    0xc0) invocation function for block in getResourcePools() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c3ebc (     0x4) std::__1::__function::__func<getResourcePools()::'block-literal'::$_2, std::__1::allocator<getResourcePools()::'block-literal'::$_2>, void (void*)>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c3ec0 (     0x4) std::__1::__function::__func<getResourcePools()::'block-literal'::$_2, std::__1::allocator<getResourcePools()::'block-literal'::$_2>, void (void*)>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c3ec4 (    0x38) std::__1::__function::__func<getResourcePools()::'block-literal'::$_2, std::__1::allocator<getResourcePools()::'block-literal'::$_2>, void (void*)>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c3efc (    0x20) std::__1::__function::__func<getResourcePools()::'block-literal'::$_2, std::__1::allocator<getResourcePools()::'block-literal'::$_2>, void (void*)>::__clone(std::__1::__function::__base<void (void*)>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c3f1c (     0x4) std::__1::__function::__func<getResourcePools()::'block-literal'::$_2, std::__1::allocator<getResourcePools()::'block-literal'::$_2>, void (void*)>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c3f20 (     0x4) std::__1::__function::__func<getResourcePools()::'block-literal'::$_2, std::__1::allocator<getResourcePools()::'block-literal'::$_2>, void (void*)>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c3f24 (     0x8) std::__1::__function::__func<getResourcePools()::'block-literal'::$_2, std::__1::allocator<getResourcePools()::'block-literal'::$_2>, void (void*)>::operator()(void*&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c3f2c (    0x84) std::__1::__function::__value_func<void (void*)>::~__value_func[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c3fb0 (    0xc0) invocation function for block in getLanguageIdentifier() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c4070 (     0x4) std::__1::__function::__func<getLanguageIdentifier()::'block-literal'::$_0, std::__1::allocator<getLanguageIdentifier()::'block-literal'::$_0>, void (void*)>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c4074 (     0x4) std::__1::__function::__func<getLanguageIdentifier()::'block-literal'::$_0, std::__1::allocator<getLanguageIdentifier()::'block-literal'::$_0>, void (void*)>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c4078 (    0x38) std::__1::__function::__func<getLanguageIdentifier()::'block-literal'::$_0, std::__1::allocator<getLanguageIdentifier()::'block-literal'::$_0>, void (void*)>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c40b0 (    0x20) std::__1::__function::__func<getLanguageIdentifier()::'block-literal'::$_0, std::__1::allocator<getLanguageIdentifier()::'block-literal'::$_0>, void (void*)>::__clone(std::__1::__function::__base<void (void*)>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c40d0 (     0x4) std::__1::__function::__func<getLanguageIdentifier()::'block-literal'::$_0, std::__1::allocator<getLanguageIdentifier()::'block-literal'::$_0>, void (void*)>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c40d4 (     0x4) std::__1::__function::__func<getLanguageIdentifier()::'block-literal'::$_0, std::__1::allocator<getLanguageIdentifier()::'block-literal'::$_0>, void (void*)>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c40d8 (     0x8) std::__1::__function::__func<getLanguageIdentifier()::'block-literal'::$_0, std::__1::allocator<getLanguageIdentifier()::'block-literal'::$_0>, void (void*)>::operator()(void*&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c40e0 (     0x4) std::__1::__function::__func<getLanguageIdentifier()::$_1, std::__1::allocator<getLanguageIdentifier()::$_1>, void* ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c40e4 (     0x4) std::__1::__function::__func<getLanguageIdentifier()::$_1, std::__1::allocator<getLanguageIdentifier()::$_1>, void* ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c40e8 (    0x38) std::__1::__function::__func<getLanguageIdentifier()::$_1, std::__1::allocator<getLanguageIdentifier()::$_1>, void* ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c4120 (    0x20) std::__1::__function::__func<getLanguageIdentifier()::$_1, std::__1::allocator<getLanguageIdentifier()::$_1>, void* ()>::__clone(std::__1::__function::__base<void* ()>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c4140 (     0x4) std::__1::__function::__func<getLanguageIdentifier()::$_1, std::__1::allocator<getLanguageIdentifier()::$_1>, void* ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c4144 (     0x4) std::__1::__function::__func<getLanguageIdentifier()::$_1, std::__1::allocator<getLanguageIdentifier()::$_1>, void* ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c4148 (     0x4) std::__1::__function::__func<getLanguageIdentifier()::$_1, std::__1::allocator<getLanguageIdentifier()::$_1>, void* ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c414c (    0x3c) invocation function for block in copyAvailableLanguages() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c4188 (   0x134) getValidatedTokenScore(_LanguageResources*, __CFLocale const*, _SITokenizedString const*, _SIToken*, long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c42bc (   0x3c8) updateTokenWithIDAndScoreAtIndex(_LanguageResources*, __CFLocale const*, _SITokenizedString const*, _SIToken*, long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c4684 (   0x380) getKeyPhraseAtIndex(_LanguageResources*, __CFLocale const*, long, bool, _SITokenizedString const*, _SIToken*, CFRange*, double*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c4a04 (    0xb0) lm_getCandidateKeyphrase(_LanguageResources*, _SITokenizedString const*, _SIToken const*, CFRange, CFRange*, double*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c4ab4 (   0x1d8) lex_getCandidateKeyphrase(_LanguageResources*, _SITokenizedString const*, _SIToken const*, CFRange, CFRange*, double*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c4c8c (   0x104) checkIsNonPhraseToken(SILanguageID, _SIToken const*, _SIToken const*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c4d90 (   0x298) extractCandidateKeyphraseRangeFromSequenceRange(_LanguageResources*, _SITokenizedString const*, _SIToken const*, CFRange) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c5028 (   0x148) lm_shouldFilterTokenSequence(_LanguageResources*, _SIToken const*, long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c5170 (   0x334) lm_shouldAcceptKeyphraseCandidate(_LanguageResources*, _SITokenizedString const*, _SIToken const*, CFRange, double*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c54a4 (    0x74) invocation function for block in languageIsPreferred(SILanguageID) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c5518 (     0x4) std::__1::__function::__func<SIRetainLanguageResources(SILanguageID, long, unsigned int)::$_3, std::__1::allocator<SIRetainLanguageResources(SILanguageID, long, unsigned int)::$_3>, void* ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c551c (     0x4) std::__1::__function::__func<SIRetainLanguageResources(SILanguageID, long, unsigned int)::$_3, std::__1::allocator<SIRetainLanguageResources(SILanguageID, long, unsigned int)::$_3>, void* ()>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c5520 (    0x54) std::__1::__function::__func<SIRetainLanguageResources(SILanguageID, long, unsigned int)::$_3, std::__1::allocator<SIRetainLanguageResources(SILanguageID, long, unsigned int)::$_3>, void* ()>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c5574 (    0x30) std::__1::__function::__func<SIRetainLanguageResources(SILanguageID, long, unsigned int)::$_3, std::__1::allocator<SIRetainLanguageResources(SILanguageID, long, unsigned int)::$_3>, void* ()>::__clone(std::__1::__function::__base<void* ()>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c55a4 (     0x4) std::__1::__function::__func<SIRetainLanguageResources(SILanguageID, long, unsigned int)::$_3, std::__1::allocator<SIRetainLanguageResources(SILanguageID, long, unsigned int)::$_3>, void* ()>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c55a8 (     0x4) std::__1::__function::__func<SIRetainLanguageResources(SILanguageID, long, unsigned int)::$_3, std::__1::allocator<SIRetainLanguageResources(SILanguageID, long, unsigned int)::$_3>, void* ()>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c55ac (    0x1c) std::__1::__function::__func<SIRetainLanguageResources(SILanguageID, long, unsigned int)::$_3, std::__1::allocator<SIRetainLanguageResources(SILanguageID, long, unsigned int)::$_3>, void* ()>::operator()() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c55c8 (    0x68) CFStringsAreEqual [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c5630 (    0x9c) CFLocaleCopyNormalizedLocaleIdentifier [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c56cc (    0xb8) copyNormalizedLocaleIdentifier [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c5784 (    0x78) CFLocaleCopyNormalizedLocaleIdentifierForRegion [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c57fc (    0x94) SIResourcePool::~SIResourcePool() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c5890 (     0xc) __clang_call_terminate [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c589c (    0x54) std::__1::function<void (void*)>::operator()(void*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c58f0 (     0x4) SIResourcePool::~SIResourcePool() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c58f4 (   0x3a8) SIResourcePool::acquireResourceLocked(std::__1::unique_lock<std::__1::mutex>*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c5c9c (    0xfc) SIResourcePool::releaseResource(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c5d98 (    0x44) std::__1::unique_lock<std::__1::mutex>::unlock() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c5ddc (    0x48) SIResourcePool::addResourceLocked(void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c5e24 (    0xc4) SIResourcePool::addResourceForTicket(void*, unsigned long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c5ee8 (    0xb0) SIResourcePool::surrenderTicket(unsigned long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c5f98 (    0x58) SIResourcePool::reserveResourceLocked() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c5ff0 (   0x1e0) SIResourcePool::compactLocked() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c61d0 (    0x84) SIResourcePool::shrinkLocked() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c6254 (    0x34) SIResourceLock::~SIResourceLock() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c6288 (     0x4) SIResourceLock::~SIResourceLock() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c628c (    0x1c) SIResourceLock::get() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c62a8 (    0x2c) SIResourcePools::PoolDesc::~PoolDesc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c62d4 (    0x2c) SIResourcePools::PoolDesc::~PoolDesc() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c6300 (   0x16c) SIResourcePools::getOrCreateLocked(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c646c (    0xa8) SIResourcePools::SIResourcePools(unsigned long, unsigned long, unsigned int, std::__1::function<void (void*)> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c6514 (     0x4) SIResourcePools::SIResourcePools(unsigned long, unsigned long, unsigned int, std::__1::function<void (void*)> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c6518 (    0x24) SIResourcePools::decayUsageCountLocked() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c653c (   0x510) SIResourcePools::populateLocked(int, unsigned long, bool, std::__1::function<void* ()> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c6a4c (    0x5c) invocation function for block in SIResourcePools::populateLocked(int, unsigned long, bool, std::__1::function<void* ()> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c6aa8 (    0xe0) invocation function for block in SIResourcePools::populateLocked(int, unsigned long, bool, std::__1::function<void* ()> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c6b88 (     0xc) __copy_helper_block_e8_40c28_ZTSNSt3__18functionIFPvvEEE [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c6b94 (     0x8) __destroy_helper_block_e8_40c28_ZTSNSt3__18functionIFPvvEEE [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c6b9c (     0x8) invocation function for block in SIResourcePools::populateLocked(int, unsigned long, bool, std::__1::function<void* ()> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c6ba4 (    0xb0) SIResourcePools::populate(int, unsigned long, bool, std::__1::function<void* ()> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c6c54 (   0x368) SIResourcePools::acquireResource(int, std::__1::function<void* ()> const&, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c6fbc (    0x98) SIResourcePools::compactAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c7054 (    0x90) SIResourcePools::shrinkAll() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c70e4 (   0x30c) SIResourcePools::getPoolStatsForTesting() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c73f0 (   0x130) std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>& std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>::emplace_back<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c7520 (    0x2c) invocation function for block in logger() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c754c (    0x98) std::__1::__function::__value_func<void (void*)>::__value_func[abi:v160006](std::__1::__function::__value_func<void (void*)> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c75e4 (    0x40) std::__1::unique_ptr<SIResourcePool, std::__1::default_delete<SIResourcePool>>::reset[abi:v160006](SIResourcePool*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c7624 (    0xb4) std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<int, SIResourcePools::PoolDesc>, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<int, SIResourcePools::PoolDesc>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, SIResourcePools::PoolDesc>, std::__1::hash<int>, std::__1::equal_to<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, SIResourcePools::PoolDesc>, std::__1::equal_to<int>, std::__1::hash<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, SIResourcePools::PoolDesc>>>::find<int>(int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c76d8 (    0x94) SIResourcePool::SIResourcePool(int, unsigned long, unsigned int, std::__1::function<void (void*)>, std::__1::mutex*, std::__1::condition_variable*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c776c (    0x9c) std::__1::vector<SIResourcePool::ResourceDesc, std::__1::allocator<SIResourcePool::ResourceDesc>>::vector(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c7808 (    0x54) std::__1::vector<SIResourcePool::ResourceDesc, std::__1::allocator<SIResourcePool::ResourceDesc>>::__vallocate[abi:v160006](unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c785c (    0x18) std::__1::vector<SIResourcePool::ResourceDesc, std::__1::allocator<SIResourcePool::ResourceDesc>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c7874 (    0x48) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<SIResourcePool::ResourceDesc>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<SIResourcePool::ResourceDesc>>(std::__1::allocator<SIResourcePool::ResourceDesc>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c78bc (    0x34) std::__throw_bad_array_new_length[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c78f0 (   0x278) std::__1::pair<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<int, SIResourcePools::PoolDesc>, void*>*>, bool> std::__1::__hash_table<std::__1::__hash_value_type<int, SIResourcePools::PoolDesc>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, SIResourcePools::PoolDesc>, std::__1::hash<int>, std::__1::equal_to<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, SIResourcePools::PoolDesc>, std::__1::equal_to<int>, std::__1::hash<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, SIResourcePools::PoolDesc>>>::__emplace_unique_key_args<int, std::__1::piecewise_construct_t const&, std::__1::tuple<int const&>, std::__1::tuple<SIResourcePools::PoolDesc&&>>(int const&, std::__1::piecewise_construct_t const&, std::__1::tuple<int const&>&&, std::__1::tuple<SIResourcePools::PoolDesc&&>&&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, Funct...
                0x00000001853c7b68 (    0xf0) void std::__1::__hash_table<std::__1::__hash_value_type<int, SIResourcePools::PoolDesc>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, SIResourcePools::PoolDesc>, std::__1::hash<int>, std::__1::equal_to<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, SIResourcePools::PoolDesc>, std::__1::equal_to<int>, std::__1::hash<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, SIResourcePools::PoolDesc>>>::__rehash<true>(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c7c58 (   0x15c) void std::__1::__hash_table<std::__1::__hash_value_type<int, SIResourcePools::PoolDesc>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, SIResourcePools::PoolDesc>, std::__1::hash<int>, std::__1::equal_to<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, SIResourcePools::PoolDesc>, std::__1::equal_to<int>, std::__1::hash<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, SIResourcePools::PoolDesc>>>::__do_rehash<true>(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c7db4 (    0x58) std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, SIResourcePools::PoolDesc>, void*>>>::operator()[abi:v160006](std::__1::__hash_node<std::__1::__hash_value_type<int, SIResourcePools::PoolDesc>, void*>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c7e0c (    0x98) std::__1::__function::__value_func<void* ()>::__value_func[abi:v160006](std::__1::__function::__value_func<void* ()> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c7ea4 (    0x3c) std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>::~vector[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c7ee0 (    0x54) std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>::__destroy_vector::operator()[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c7f34 (    0x58) std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>::__clear[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c7f8c (    0x78) std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>::__swap_out_circular_buffer(std::__1::__split_buffer<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>&>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c8004 (    0x18) std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c801c (    0x48) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>(std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c8064 (    0xa0) std::__1::reverse_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*> std::__1::__uninitialized_allocator_move_if_noexcept[abi:v160006]<std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::reverse_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*>, std::__1::reverse_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*>, std::__1::reverse_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*>>(std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>&, std::__1::reverse_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*>, std::__1::reverse_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1:...
                0x00000001853c8104 (    0x38) std::__1::__exception_guard_exceptions<std::__1::_AllocatorDestroyRangeReverse<std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::reverse_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*>>>::~__exception_guard_exceptions[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c813c (    0x48) std::__1::_AllocatorDestroyRangeReverse<std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::reverse_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*>>::operator()[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c8184 (    0x38) std::__1::__split_buffer<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>&>::~__split_buffer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c81bc (    0x58) std::__1::__split_buffer<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>&>::__destruct_at_end[abi:v160006](std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c8214 (   0x578) void std::__1::__introsort<std::__1::_ClassicAlgPolicy, std::__1::__less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*, std::__1::__less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>&, std::__1::iterator_traits<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*>::difference_type) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c878c (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001853c87a4 (    0x80) std::__1::__less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>::operator()[abi:v160006](std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c8824 (   0x13c) void std::__1::__insertion_sort_3[abi:v160006]<std::__1::_ClassicAlgPolicy, std::__1::__less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*, std::__1::__less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c8960 (   0x14c) unsigned int std::__1::__sort3[abi:v160006]<std::__1::_ClassicAlgPolicy, std::__1::__less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*, std::__1::__less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c8aac (   0x23c) bool std::__1::__insertion_sort_incomplete<std::__1::__less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*, std::__1::__less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c8ce8 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001853c8d00 (   0x108) unsigned int std::__1::__sort4[abi:v160006]<std::__1::_ClassicAlgPolicy, std::__1::__less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*, std::__1::__less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, Fu...
                0x00000001853c8e08 (   0x24c) std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>* std::__1::__partial_sort_impl[abi:v160006]<std::__1::_ClassicAlgPolicy, std::__1::__less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*, std::__1::__less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std:...
                0x00000001853c9054 (   0x198) void std::__1::__sift_down[abi:v160006]<std::__1::_ClassicAlgPolicy, std::__1::__less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*, std::__1::__less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>&, std::__1::iterator_traits<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*>::difference_type, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c91ec (    0xd4) std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>* std::__1::__floyd_sift_down[abi:v160006]<std::__1::_ClassicAlgPolicy, std::__1::__less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*, std::__1::__less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>&, std::__1::iterator_traits<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*>::difference_type) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c92c0 (   0x100) void std::__1::__sift_up[abi:v160006]<std::__1::_ClassicAlgPolicy, std::__1::__less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*, std::__1::__less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>&, std::__1::iterator_traits<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*>::difference_type) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c93c0 (   0x150) unsigned int std::__1::__sort5<std::__1::__less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*, std::__1::__less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>&) [FUNC, PEXT, N...
                0x00000001853c9510 (    0x34) OUTLINED_FUNCTION_0 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c9544 (    0x1c) OUTLINED_FUNCTION_1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c9560 (    0x20) OUTLINED_FUNCTION_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c9580 (    0x18) SISetLogging [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c9598 (    0x5c) _SILogInit [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c95f4 (     0xc) SICreateDictionaryWithContentsOfURL [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c9600 (    0xf8) _createDictionaryWithContentsOfURL(__CFURL const*, bool, __CFError**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c96f8 (     0xc) SICreateMutableDictionaryWithContentsOfURL [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c9704 (    0xe8) _createErrorWithMessageAndURL(__CFString const*, __CFURL const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c97ec (   0x198) SI::encode(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c9984 (   0x460) SI::split(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c9de4 (    0xc8) SI::getUTF8StringFromCFString(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c9eac (    0x4c) SI::createCFStringFromString(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c9ef8 (    0xa0) std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::basic_string[abi:v160006]<std::nullptr_t>(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c9f98 (     0xc) _nlpLoggingSubsystem [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c9fa4 (    0x44) _nlpDefaultLog [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853c9fe8 (    0x30) ___nlpDefaultLog_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853ca018 (    0x44) _nlpSignpostLog [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853ca05c (    0x30) ___nlpSignpostLog_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853ca08c (   0x124) SIStringCacheCreateWithOptions [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853ca1b0 (    0x10) SIStringCacheRetain [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853ca1c0 (    0x9c) SIStringCacheAdd [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853ca25c (   0x1f8) commit(_SIStringCache*, long, double) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853ca454 (    0x10) SIStringCachePrune [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853ca464 (    0xdc) SIStringCacheEnumerateStrings [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853ca540 (    0x68) enumerateStrings(_SIGeneralTrie const*, __CFString const*, void (unsigned char const*, unsigned int, unsigned int, bool*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853ca5a8 (    0x84) __SIStringCacheEnumerateStrings_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853ca62c (    0x84) __SIStringCacheEnumerateStrings_block_invoke.11 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853ca6b0 (    0xb0) SIStringCacheContains [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853ca760 (    0x18) SIStringCacheGetCount [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853ca778 (    0x88) SIStringCacheRelease [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853ca800 (    0x90) mergeKeyCallback(void*, _SITrieCompletion*, bool*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853ca890 (    0x8c) keyCacheCallback(void*, _SITrieCompletion*, bool*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853ca91c (    0xcc) SILanguagesGetLocale [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853ca9e8 (    0x5c) __SILanguagesGetLocale_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853caa44 (    0x24) SILanguagesGetLanguage [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853caa68 (   0x320) SILanguagesGetLanguageID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853cad88 (    0x58) SILanguagesGetLanguageIDForIdentifier [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853cade0 (    0x58) SILanguagesCopyLocaleIdentifier [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853cae38 (    0x8c) SILanguagesGetRegion [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853caec4 (    0x3c) SILanguagesIsCJK [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853caf00 (    0x80) SILanguagesGetRegionID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853caf80 (    0x20) invocation function for block in getRegions() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853cafa0 (    0x2c) traverseFromMapCursor(_SIGeneralTrie const*, MapCursor&, unsigned char*, unsigned int, long, bool*, void*, void (*)(void*, unsigned char const*, unsigned int, unsigned int, double, bool*)) (.cold.1) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853cafcc (    0x2c) addListNode(_SIGeneralTrie*, _ListNode**, unsigned char const*, unsigned int, unsigned int, unsigned int, SIGeneralTrieAddCode*) (.cold.1) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853caff8 (    0x2c) addListNodeRanked(_SIGeneralTrie*, _RankedListNode**, unsigned char const*, unsigned int, unsigned int, unsigned int, double, double*, bool, SIGeneralTrieAddCode*, void*, double (*)(void*, double, double)) (.cold.1) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853cb024 (    0x2c) advanceMapCursorTrieList(_SIGeneralTrie const*, MapCursor*, unsigned char const*, unsigned int) (.cold.1) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853cb050 (    0x2c) serializeLevelsRanked(_SIGeneralTrie const*, _RankedTrieLevel*, long long, int, bool, bool, unsigned int*) (.cold.1) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853cb07c (    0x2c) serializeLevels(_SIGeneralTrie const*, _TrieLevel*, long long, int, bool, bool, unsigned int*) (.cold.1) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853cb0a8 (    0x44) SILanguageModelRelease.cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853cb0ec (    0x44) SILanguageModelPurge.cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853cb130 (    0x78) __SILanguageModelIsStopWord_block_invoke.cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853cb1a8 (    0x78) SILanguageResourcesRelease(_LanguageResources*) (.cold.1) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853cb220 (    0x6c) SIResourcePool::acquireResourceLocked(std::__1::unique_lock<std::__1::mutex>*, bool) (.cold.1) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853cb28c (    0x5c) SIResourcePool::acquireResourceLocked(std::__1::unique_lock<std::__1::mutex>*, bool) (.cold.2) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853cb2e8 (    0x5c) SIResourcePool::releaseResource(unsigned int) (.cold.1) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853cb344 (    0x68) SIResourcePools::populateLocked(int, unsigned long, bool, std::__1::function<void* ()> const&) (.cold.1) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853cb3ac (    0x6c) invocation function for block in SIResourcePools::populateLocked(int, unsigned long, bool, std::__1::function<void* ()> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001853cb418 (    0x48) SIStringCacheRelease.cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
            0x00000001853cb460 (   0xc70) __TEXT __auth_stubs
                0x00000001853cb460 (    0x10) DYLD-STUB$$CFAbsoluteTimeGetCurrent [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb470 (    0x10) DYLD-STUB$$CFArrayAppendValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb480 (    0x10) DYLD-STUB$$CFArrayContainsValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb490 (    0x10) DYLD-STUB$$CFArrayCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb4a0 (    0x10) DYLD-STUB$$CFArrayCreateMutable [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb4b0 (    0x10) DYLD-STUB$$CFArrayGetCount [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb4c0 (    0x10) DYLD-STUB$$CFArrayGetFirstIndexOfValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb4d0 (    0x10) DYLD-STUB$$CFArrayGetValueAtIndex [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb4e0 (    0x10) DYLD-STUB$$CFArrayInsertValueAtIndex [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb4f0 (    0x10) DYLD-STUB$$CFArrayRemoveAllValues [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb500 (    0x10) DYLD-STUB$$CFBinaryHeapAddValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb510 (    0x10) DYLD-STUB$$CFBinaryHeapContainsValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb520 (    0x10) DYLD-STUB$$CFBinaryHeapCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb530 (    0x10) DYLD-STUB$$CFBinaryHeapGetCount [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb540 (    0x10) DYLD-STUB$$CFBinaryHeapGetMinimum [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb550 (    0x10) DYLD-STUB$$CFBinaryHeapRemoveMinimumValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb560 (    0x10) DYLD-STUB$$CFBundleCopyLocalizationForLocalizationInfo [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb570 (    0x10) DYLD-STUB$$CFBundleCopyLocalizedStringTableForLocalization [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb580 (    0x10) DYLD-STUB$$CFBundleCopyResourceURLForLocalization [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb590 (    0x10) DYLD-STUB$$CFBundleCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb5a0 (    0x10) DYLD-STUB$$CFBundleGetBundleWithIdentifier [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb5b0 (    0x10) DYLD-STUB$$CFBundleGetLocalizationInfoForLocalization [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb5c0 (    0x10) DYLD-STUB$$CFCharacterSetGetPredefined [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb5d0 (    0x10) DYLD-STUB$$CFCharacterSetIsCharacterMember [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb5e0 (    0x10) DYLD-STUB$$CFCharacterSetIsLongCharacterMember [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb5f0 (    0x10) DYLD-STUB$$CFDictionaryContainsKey [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb600 (    0x10) DYLD-STUB$$CFDictionaryCreateMutable [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb610 (    0x10) DYLD-STUB$$CFDictionaryGetCount [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb620 (    0x10) DYLD-STUB$$CFDictionaryGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb630 (    0x10) DYLD-STUB$$CFDictionaryGetValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb640 (    0x10) DYLD-STUB$$CFDictionaryGetValueIfPresent [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb650 (    0x10) DYLD-STUB$$CFDictionaryRemoveAllValues [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb660 (    0x10) DYLD-STUB$$CFDictionarySetValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb670 (    0x10) DYLD-STUB$$CFErrorCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb680 (    0x10) DYLD-STUB$$CFErrorCreateWithUserInfoKeysAndValues [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb690 (    0x10) DYLD-STUB$$CFGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb6a0 (    0x10) DYLD-STUB$$CFLocaleCopyCurrent [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb6b0 (    0x10) DYLD-STUB$$CFLocaleCopyISOCountryCodes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb6c0 (    0x10) DYLD-STUB$$CFLocaleCopyPreferredLanguages [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb6d0 (    0x10) DYLD-STUB$$CFLocaleCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb6e0 (    0x10) DYLD-STUB$$CFLocaleCreateCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb6f0 (    0x10) DYLD-STUB$$CFLocaleGetIdentifier [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb700 (    0x10) DYLD-STUB$$CFLocaleGetValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb710 (    0x10) DYLD-STUB$$CFNotificationCenterAddObserver [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb720 (    0x10) DYLD-STUB$$CFNotificationCenterGetLocalCenter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb730 (    0x10) DYLD-STUB$$CFNumberGetValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb740 (    0x10) DYLD-STUB$$CFPropertyListCreateWithStream [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb750 (    0x10) DYLD-STUB$$CFReadStreamClose [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb760 (    0x10) DYLD-STUB$$CFReadStreamCreateWithFile [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb770 (    0x10) DYLD-STUB$$CFReadStreamOpen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb780 (    0x10) DYLD-STUB$$CFRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb790 (    0x10) DYLD-STUB$$CFRetain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb7a0 (    0x10) DYLD-STUB$$CFSetAddValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb7b0 (    0x10) DYLD-STUB$$CFSetContainsValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb7c0 (    0x10) DYLD-STUB$$CFSetCreateMutable [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb7d0 (    0x10) DYLD-STUB$$CFStringAppendFormat [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb7e0 (    0x10) DYLD-STUB$$CFStringCreateArrayBySeparatingStrings [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb7f0 (    0x10) DYLD-STUB$$CFStringCreateCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb800 (    0x10) DYLD-STUB$$CFStringCreateMutable [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb810 (    0x10) DYLD-STUB$$CFStringCreateMutableCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb820 (    0x10) DYLD-STUB$$CFStringCreateWithBytes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb830 (    0x10) DYLD-STUB$$CFStringCreateWithBytesNoCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb840 (    0x10) DYLD-STUB$$CFStringCreateWithCharactersNoCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb850 (    0x10) DYLD-STUB$$CFStringCreateWithFormat [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb860 (    0x10) DYLD-STUB$$CFStringCreateWithSubstring [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb870 (    0x10) DYLD-STUB$$CFStringEncodingUnicodeToBytes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb880 (    0x10) DYLD-STUB$$CFStringFindAndReplace [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb890 (    0x10) DYLD-STUB$$CFStringGetBytes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb8a0 (    0x10) DYLD-STUB$$CFStringGetCString [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb8b0 (    0x10) DYLD-STUB$$CFStringGetCharacterAtIndex [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb8c0 (    0x10) DYLD-STUB$$CFStringGetCharacters [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb8d0 (    0x10) DYLD-STUB$$CFStringGetLength [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb8e0 (    0x10) DYLD-STUB$$CFStringGetMaximumSizeForEncoding [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb8f0 (    0x10) DYLD-STUB$$CFStringHasPrefix [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb900 (    0x10) DYLD-STUB$$CFStringHasSuffix [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb910 (    0x10) DYLD-STUB$$CFStringLowercase [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb920 (    0x10) DYLD-STUB$$CFStringNormalize [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb930 (    0x10) DYLD-STUB$$CFStringReplace [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb940 (    0x10) DYLD-STUB$$CFURLCopyLastPathComponent [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb950 (    0x10) DYLD-STUB$$CFURLCopyPath [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb960 (    0x10) DYLD-STUB$$CFURLCopyResourcePropertiesForKeys [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb970 (    0x10) DYLD-STUB$$CFURLCreateCopyDeletingLastPathComponent [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb980 (    0x10) DYLD-STUB$$CFURLCreateWithString [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb990 (    0x10) DYLD-STUB$$CFURLResourceIsReachable [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb9a0 (    0x10) DYLD-STUB$$LDEnumerateAssetDataItems [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb9b0 (    0x10) DYLD-STUB$$LMLanguageModelCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb9c0 (    0x10) DYLD-STUB$$LMLanguageModelGetTokenIDForString [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb9d0 (    0x10) DYLD-STUB$$LMLanguageModelJointProbability [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb9e0 (    0x10) DYLD-STUB$$LMLanguageModelRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cb9f0 (    0x10) DYLD-STUB$$LMLanguageModelTokenSequenceIsBlocklisted [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cba00 (    0x10) DYLD-STUB$$LXEntryGetCategoryFlags [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cba10 (    0x10) DYLD-STUB$$LXEntryGetMetaFlags [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cba20 (    0x10) DYLD-STUB$$LXEntryGetProbability [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cba30 (    0x10) DYLD-STUB$$LXLexiconAdd [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cba40 (    0x10) DYLD-STUB$$LXLexiconCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cba50 (    0x10) DYLD-STUB$$LXLexiconCreateTransient [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cba60 (    0x10) DYLD-STUB$$LXLexiconEnumerateEntriesForString [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cba70 (    0x10) DYLD-STUB$$LXLexiconGetFirstTokenIDForString [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cba80 (    0x10) DYLD-STUB$$NLLanguageIdentifierConsumeCharacters [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cba90 (    0x10) DYLD-STUB$$NLLanguageIdentifierConsumeString [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbaa0 (    0x10) DYLD-STUB$$NLLanguageIdentifierCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbab0 (    0x10) DYLD-STUB$$NLLanguageIdentifierGetTopHypothesis [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbac0 (    0x10) DYLD-STUB$$NLLanguageIdentifierRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbad0 (    0x10) DYLD-STUB$$NLLanguageIdentifierReset [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbae0 (    0x10) DYLD-STUB$$NLStringTokenizerCopyBestStringLanguage [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbaf0 (    0x10) DYLD-STUB$$NLTaggerCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbb00 (    0x10) DYLD-STUB$$NLTaggerEnumerateTokens [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbb10 (    0x10) DYLD-STUB$$NLTaggerSetLocaleForRange [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbb20 (    0x10) DYLD-STUB$$NLTaggerSetString [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbb30 (    0x10) DYLD-STUB$$_Block_object_assign [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbb40 (    0x10) DYLD-STUB$$_Block_object_dispose [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbb50 (    0x10) DYLD-STUB$$_NLStringTokenizerGetLanguageIDForLocale [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbb60 (    0x10) DYLD-STUB$$_Unwind_Resume [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbb70 (    0x10) DYLD-STUB$$std::logic_error::logic_error(char const*) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbb80 (    0x10) DYLD-STUB$$std::bad_array_new_length::bad_array_new_length() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbb90 (    0x10) DYLD-STUB$$std::__1::__next_prime(unsigned long) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbba0 (    0x10) DYLD-STUB$$std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::append(char const*) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbbb0 (    0x10) DYLD-STUB$$std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::append(char const*, unsigned long) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbbc0 (    0x10) DYLD-STUB$$std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::insert(unsigned long, char const*) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbbd0 (    0x10) DYLD-STUB$$std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::reserve(unsigned long) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbbe0 (    0x10) DYLD-STUB$$std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::basic_string(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbbf0 (    0x10) DYLD-STUB$$std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::basic_string(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, unsigned long, unsigned long, std::__1::allocator<char> const&) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbc00 (    0x10) DYLD-STUB$$std::__1::condition_variable::notify_all() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbc10 (    0x10) DYLD-STUB$$std::__1::condition_variable::__do_timed_wait(std::__1::unique_lock<std::__1::mutex>&, std::__1::chrono::time_point<std::__1::chrono::system_clock, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000000000l>>>) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbc20 (    0x10) DYLD-STUB$$std::__1::condition_variable::wait(std::__1::unique_lock<std::__1::mutex>&) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbc30 (    0x10) DYLD-STUB$$std::__1::condition_variable::~condition_variable() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbc40 (    0x10) DYLD-STUB$$std::__1::__throw_system_error(int, char const*) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbc50 (    0x10) DYLD-STUB$$std::__1::mutex::lock() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbc60 (    0x10) DYLD-STUB$$std::__1::mutex::unlock() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbc70 (    0x10) DYLD-STUB$$std::__1::mutex::~mutex() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbc80 (    0x10) DYLD-STUB$$std::__1::chrono::steady_clock::now() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbc90 (    0x10) DYLD-STUB$$std::__1::chrono::system_clock::now() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbca0 (    0x10) DYLD-STUB$$std::__1::to_string(int) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbcb0 (    0x10) DYLD-STUB$$std::__1::to_string(unsigned int) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbcc0 (    0x10) DYLD-STUB$$std::__1::to_string(unsigned long) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbcd0 (    0x10) DYLD-STUB$$std::exception::~exception() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbce0 (    0x10) DYLD-STUB$$std::terminate() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbcf0 (    0x10) DYLD-STUB$$operator delete[](void*) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbd00 (    0x10) DYLD-STUB$$operator delete(void*) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbd10 (    0x10) DYLD-STUB$$operator new[](unsigned long) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbd20 (    0x10) DYLD-STUB$$operator new(unsigned long) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbd30 (    0x10) DYLD-STUB$$__assert_rtn [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbd40 (    0x10) DYLD-STUB$$__atomic_load [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbd50 (    0x10) DYLD-STUB$$__atomic_store [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbd60 (    0x10) DYLD-STUB$$__cxa_allocate_exception [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbd70 (    0x10) DYLD-STUB$$__cxa_begin_catch [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbd80 (    0x10) DYLD-STUB$$__cxa_free_exception [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbd90 (    0x10) DYLD-STUB$$__cxa_throw [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbda0 (    0x10) DYLD-STUB$$__stack_chk_fail [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbdb0 (    0x10) DYLD-STUB$$_os_log_debug_impl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbdc0 (    0x10) DYLD-STUB$$_os_log_error_impl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbdd0 (    0x10) DYLD-STUB$$_os_log_impl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbde0 (    0x10) DYLD-STUB$$_os_signpost_emit_with_name_impl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbdf0 (    0x10) DYLD-STUB$$bzero [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbe00 (    0x10) DYLD-STUB$$calloc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbe10 (    0x10) DYLD-STUB$$close [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbe20 (    0x10) DYLD-STUB$$dispatch_activate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbe30 (    0x10) DYLD-STUB$$dispatch_async [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbe40 (    0x10) DYLD-STUB$$dispatch_barrier_async [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbe50 (    0x10) DYLD-STUB$$dispatch_get_global_queue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbe60 (    0x10) DYLD-STUB$$dispatch_group_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbe70 (    0x10) DYLD-STUB$$dispatch_group_enter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbe80 (    0x10) DYLD-STUB$$dispatch_group_leave [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbe90 (    0x10) DYLD-STUB$$dispatch_group_notify [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbea0 (    0x10) DYLD-STUB$$dispatch_once [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbeb0 (    0x10) DYLD-STUB$$dispatch_queue_attr_make_initially_inactive [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbec0 (    0x10) DYLD-STUB$$dispatch_queue_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbed0 (    0x10) DYLD-STUB$$dispatch_queue_set_width [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbee0 (    0x10) DYLD-STUB$$dispatch_release [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbef0 (    0x10) DYLD-STUB$$dispatch_sync [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbf00 (    0x10) DYLD-STUB$$free [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbf10 (    0x10) DYLD-STUB$$lseek [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbf20 (    0x10) DYLD-STUB$$malloc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbf30 (    0x10) DYLD-STUB$$memchr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbf40 (    0x10) DYLD-STUB$$memcmp [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbf50 (    0x10) DYLD-STUB$$memcpy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbf60 (    0x10) DYLD-STUB$$memmove [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbf70 (    0x10) DYLD-STUB$$mmap [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbf80 (    0x10) DYLD-STUB$$munmap [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbf90 (    0x10) DYLD-STUB$$notify_register_dispatch [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbfa0 (    0x10) DYLD-STUB$$open [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbfb0 (    0x10) DYLD-STUB$$os_log_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbfc0 (    0x10) DYLD-STUB$$os_log_type_enabled [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbfd0 (    0x10) DYLD-STUB$$os_signpost_enabled [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbfe0 (    0x10) DYLD-STUB$$os_signpost_id_make_with_pointer [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cbff0 (    0x10) DYLD-STUB$$os_unfair_lock_lock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cc000 (    0x10) DYLD-STUB$$os_unfair_lock_unlock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cc010 (    0x10) DYLD-STUB$$pthread_getspecific [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cc020 (    0x10) DYLD-STUB$$pthread_key_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cc030 (    0x10) DYLD-STUB$$pthread_setspecific [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cc040 (    0x10) DYLD-STUB$$pwrite [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cc050 (    0x10) DYLD-STUB$$qsort [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cc060 (    0x10) DYLD-STUB$$realloc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cc070 (    0x10) DYLD-STUB$$snprintf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cc080 (    0x10) DYLD-STUB$$stat [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cc090 (    0x10) DYLD-STUB$$strlen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cc0a0 (    0x10) DYLD-STUB$$strncmp [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cc0b0 (    0x10) DYLD-STUB$$sysconf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001853cc0c0 (    0x10) DYLD-STUB$$write [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
            0x00000001853cc0d0 (   0x1a7) __TEXT __const
                0x00000001853cc0d0 (    0x40) SpotlightLinguisticsVersionString [EXT, NameNList, MangledNameNList, NList] 
                0x00000001853cc110 (    0x20) SpotlightLinguisticsVersionNumber [EXT, NameNList, MangledNameNList, NList] 
                0x00000001853cc130 (    0x11) typeinfo name for std::length_error [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001853cc141 (    0x10) typeinfo name for std::logic_error [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001853cc151 (    0x47) typeinfo name for std::exception [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001853cc198 (    0xb8) typeinfo name for std::__1::bad_function_call [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001853cc250 (    0x19) typeinfo name for std::bad_array_new_length [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001853cc269 (     0xd) typeinfo name for std::bad_alloc [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001853cc276 (     0x1) std::__1::piecewise_construct [NameNList, MangledNameNList, NList] 
            0x00000001853cc278 (   0x724) __TEXT __gcc_except_tab
                0x00000001853cc278 (    0x1c) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x00000001853cc294 (    0x18) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x00000001853cc2ac (    0x44) GCC_except_table16 [NameNList, MangledNameNList, NList] 
                0x00000001853cc2f0 (    0x44) GCC_except_table18 [NameNList, MangledNameNList, NList] 
                0x00000001853cc334 (    0x10) GCC_except_table27 [NameNList, MangledNameNList, NList] 
                0x00000001853cc344 (    0x18) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x00000001853cc35c (    0x18) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x00000001853cc374 (    0x1c) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x00000001853cc390 (    0x28) GCC_except_table29 [NameNList, MangledNameNList, NList] 
                0x00000001853cc3b8 (    0x50) GCC_except_table72 [NameNList, MangledNameNList, NList] 
                0x00000001853cc408 (    0x50) GCC_except_table74 [NameNList, MangledNameNList, NList] 
                0x00000001853cc458 (    0x38) GCC_except_table75 [NameNList, MangledNameNList, NList] 
                0x00000001853cc490 (    0x38) GCC_except_table76 [NameNList, MangledNameNList, NList] 
                0x00000001853cc4c8 (    0x50) GCC_except_table77 [NameNList, MangledNameNList, NList] 
                0x00000001853cc518 (    0x50) GCC_except_table93 [NameNList, MangledNameNList, NList] 
                0x00000001853cc568 (    0x18) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x00000001853cc580 (    0x14) GCC_except_table16 [NameNList, MangledNameNList, NList] 
                0x00000001853cc594 (    0x18) GCC_except_table20 [NameNList, MangledNameNList, NList] 
                0x00000001853cc5ac (    0x10) GCC_except_table21 [NameNList, MangledNameNList, NList] 
                0x00000001853cc5bc (    0x18) GCC_except_table22 [NameNList, MangledNameNList, NList] 
                0x00000001853cc5d4 (    0x38) GCC_except_table25 [NameNList, MangledNameNList, NList] 
                0x00000001853cc60c (    0x18) GCC_except_table26 [NameNList, MangledNameNList, NList] 
                0x00000001853cc624 (    0x14) GCC_except_table27 [NameNList, MangledNameNList, NList] 
                0x00000001853cc638 (    0x14) GCC_except_table32 [NameNList, MangledNameNList, NList] 
                0x00000001853cc64c (    0x18) GCC_except_table34 [NameNList, MangledNameNList, NList] 
                0x00000001853cc664 (    0x28) GCC_except_table42 [NameNList, MangledNameNList, NList] 
                0x00000001853cc68c (    0x28) GCC_except_table44 [NameNList, MangledNameNList, NList] 
                0x00000001853cc6b4 (    0x18) GCC_except_table46 [NameNList, MangledNameNList, NList] 
                0x00000001853cc6cc (    0x14) GCC_except_table47 [NameNList, MangledNameNList, NList] 
                0x00000001853cc6e0 (    0x14) GCC_except_table50 [NameNList, MangledNameNList, NList] 
                0x00000001853cc6f4 (    0x14) GCC_except_table51 [NameNList, MangledNameNList, NList] 
                0x00000001853cc708 (    0x18) GCC_except_table56 [NameNList, MangledNameNList, NList] 
                0x00000001853cc720 (    0x14) GCC_except_table70 [NameNList, MangledNameNList, NList] 
                0x00000001853cc734 (    0x14) GCC_except_table79 [NameNList, MangledNameNList, NList] 
                0x00000001853cc748 (    0x18) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001853cc760 (    0x14) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x00000001853cc774 (    0x14) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x00000001853cc788 (    0x14) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x00000001853cc79c (    0x10) GCC_except_table13 [NameNList, MangledNameNList, NList] 
                0x00000001853cc7ac (    0x20) GCC_except_table18 [NameNList, MangledNameNList, NList] 
                0x00000001853cc7cc (    0x10) GCC_except_table19 [NameNList, MangledNameNList, NList] 
                0x00000001853cc7dc (    0x18) GCC_except_table22 [NameNList, MangledNameNList, NList] 
                0x00000001853cc7f4 (    0x14) GCC_except_table28 [NameNList, MangledNameNList, NList] 
                0x00000001853cc808 (    0x30) GCC_except_table29 [NameNList, MangledNameNList, NList] 
                0x00000001853cc838 (    0x18) GCC_except_table30 [NameNList, MangledNameNList, NList] 
                0x00000001853cc850 (    0x14) GCC_except_table31 [NameNList, MangledNameNList, NList] 
                0x00000001853cc864 (    0x4c) GCC_except_table32 [NameNList, MangledNameNList, NList] 
                0x00000001853cc8b0 (    0x1c) GCC_except_table33 [NameNList, MangledNameNList, NList] 
                0x00000001853cc8cc (    0x10) GCC_except_table42 [NameNList, MangledNameNList, NList] 
                0x00000001853cc8dc (    0x10) GCC_except_table43 [NameNList, MangledNameNList, NList] 
                0x00000001853cc8ec (    0x18) GCC_except_table50 [NameNList, MangledNameNList, NList] 
                0x00000001853cc904 (    0x10) GCC_except_table56 [NameNList, MangledNameNList, NList] 
                0x00000001853cc914 (    0x10) GCC_except_table63 [NameNList, MangledNameNList, NList] 
                0x00000001853cc924 (    0x18) GCC_except_table73 [NameNList, MangledNameNList, NList] 
                0x00000001853cc93c (    0x14) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001853cc950 (    0x38) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x00000001853cc988 (    0x14) GCC_except_table2 [NameNList, MangledNameNList, NList] 
            0x00000001853cc99c (   0xb6c) __TEXT __cstring
            0x00000001853cd508 (   0x354) __TEXT __oslogstring
            0x00000001853cd85c (     0x4) __TEXT __ustring
            0x00000001853cd860 (   0x748) __TEXT __unwind_info
            0x00000001853cdfa8 (    0x4c) __TEXT __eh_frame
        0x00000001d3a2cac0 (   0x7b8) __DATA_CONST SEGMENT
            0x00000001d3a2cac0 (   0x118) __DATA_CONST __got
            0x00000001d3a2cbd8 (   0x6a0) __DATA_CONST __const
                0x00000001d3a2cbd8 (    0x20) __block_descriptor_tmp [NameNList, MangledNameNList, NList] 
                0x00000001d3a2cbf8 (    0x20) __block_descriptor_tmp.9 [NameNList, MangledNameNList, NList] 
                0x00000001d3a2cc18 (    0x20) __block_descriptor_tmp.12 [NameNList, MangledNameNList, NList] 
                0x00000001d3a2cc38 (    0x20) __block_descriptor_tmp.28 [NameNList, MangledNameNList, NList] 
                0x00000001d3a2cc58 (    0x20) __block_descriptor_tmp.32 [NameNList, MangledNameNList, NList] 
                0x00000001d3a2cc78 (    0x20) __block_descriptor_tmp.5 [NameNList, MangledNameNList, NList] 
                0x00000001d3a2cc98 (    0x20) __block_descriptor_tmp.7 [NameNList, MangledNameNList, NList] 
                0x00000001d3a2ccb8 (    0x20) __block_descriptor_tmp.9 [NameNList, MangledNameNList, NList] 
                0x00000001d3a2ccd8 (    0x20) __block_descriptor_tmp.10 [NameNList, MangledNameNList, NList] 
                0x00000001d3a2ccf8 (    0x20) __block_descriptor_tmp.15 [NameNList, MangledNameNList, NList] 
                0x00000001d3a2cd18 (    0x20) __block_descriptor_tmp.18 [NameNList, MangledNameNList, NList] 
                0x00000001d3a2cd38 (    0x20) __block_descriptor_tmp.33 [NameNList, MangledNameNList, NList] 
                0x00000001d3a2cd58 (    0x20) __block_descriptor_tmp [NameNList, MangledNameNList, NList] 
                0x00000001d3a2cd78 (    0x20) __block_descriptor_tmp.11 [NameNList, MangledNameNList, NList] 
                0x00000001d3a2cd98 (    0x20) __block_descriptor_tmp.22 [NameNList, MangledNameNList, NList] 
                0x00000001d3a2cdb8 (    0x20) __block_descriptor_tmp.28 [NameNList, MangledNameNList, NList] 
                0x00000001d3a2cdd8 (    0x80) gSuggestionsAcceptRejectLists [NameNList, MangledNameNList, NList] 
                0x00000001d3a2ce58 (    0x20) __block_descriptor_tmp.106 [NameNList, MangledNameNList, NList] 
                0x00000001d3a2ce78 (    0x20) __block_descriptor_tmp [NameNList, MangledNameNList, NList] 
                0x00000001d3a2ce98 (    0x20) __block_descriptor_tmp.53 [NameNList, MangledNameNList, NList] 
                0x00000001d3a2ceb8 (    0x20) __block_descriptor_tmp.54 [NameNList, MangledNameNList, NList] 
                0x00000001d3a2ced8 (    0x20) __block_descriptor_tmp.63 [NameNList, MangledNameNList, NList] 
                0x00000001d3a2cef8 (    0x20) __block_descriptor_tmp.72 [NameNList, MangledNameNList, NList] 
                0x00000001d3a2cf18 (    0x20) __block_descriptor_tmp.76 [NameNList, MangledNameNList, NList] 
                0x00000001d3a2cf38 (    0x20) __block_descriptor_tmp.89 [NameNList, MangledNameNList, NList] 
                0x00000001d3a2cf58 (    0x20) __block_descriptor_tmp.101 [NameNList, MangledNameNList, NList] 
                0x00000001d3a2cf78 (    0x20) __block_descriptor_tmp.105 [NameNList, MangledNameNList, NList] 
                0x00000001d3a2cf98 (    0x20) __block_descriptor_tmp.113 [NameNList, MangledNameNList, NList] 
                0x00000001d3a2cfb8 (    0x20) __block_descriptor_tmp [NameNList, MangledNameNList, NList] 
                0x00000001d3a2cfd8 (    0x20) __block_descriptor_tmp.4 [NameNList, MangledNameNList, NList] 
                0x00000001d3a2cff8 (    0x20) __block_descriptor_tmp.9 [NameNList, MangledNameNList, NList] 
                0x00000001d3a2d018 (     0x8) gSILogSubsystem [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d3a2d020 (    0x20) __block_descriptor_tmp [NameNList, MangledNameNList, NList] 
                0x00000001d3a2d040 (    0x20) __block_descriptor_tmp.1 [NameNList, MangledNameNList, NList] 
                0x00000001d3a2d060 (    0x20) __block_descriptor_tmp [NameNList, MangledNameNList, NList] 
                0x00000001d3a2d080 (   0x1d8) gLanguageTags [NameNList, MangledNameNList, NList] 
                0x00000001d3a2d258 (    0x20) __block_descriptor_tmp.185 [NameNList, MangledNameNList, NList] 
        0x00000001db1b6b20 (  0x22d8) __AUTH_CONST SEGMENT
            0x00000001db1b6b20 (  0x11e0) __AUTH_CONST __cfstring
            0x00000001db1b7d00 (   0xa90) __AUTH_CONST __const
                0x00000001db1b7d00 (    0x20) __block_literal_global [NameNList, MangledNameNList, NList] 
                0x00000001db1b7d20 (    0x20) __block_literal_global.11 [NameNList, MangledNameNList, NList] 
                0x00000001db1b7d40 (    0x30) __block_descriptor_tmp.13 [NameNList, MangledNameNList, NList] 
                0x00000001db1b7d70 (    0x30) __block_descriptor_tmp.15 [NameNList, MangledNameNList, NList] 
                0x00000001db1b7da0 (    0x30) __block_descriptor_tmp.18 [NameNList, MangledNameNList, NList] 
                0x00000001db1b7dd0 (    0x20) __block_literal_global.30 [NameNList, MangledNameNList, NList] 
                0x00000001db1b7df0 (    0x20) __block_literal_global.34 [NameNList, MangledNameNList, NList] 
                0x00000001db1b7e10 (    0x10) typeinfo for std::exception [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db1b7e20 (    0x18) typeinfo for std::logic_error [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db1b7e38 (    0x18) typeinfo for std::length_error [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db1b7e50 (    0x30) __block_descriptor_tmp [NameNList, MangledNameNList, NList] 
                0x00000001db1b7e80 (    0x30) __block_descriptor_tmp.2 [NameNList, MangledNameNList, NList] 
                0x00000001db1b7eb0 (    0x30) __block_descriptor_tmp.4 [NameNList, MangledNameNList, NList] 
                0x00000001db1b7ee0 (    0x20) __block_literal_global [NameNList, MangledNameNList, NList] 
                0x00000001db1b7f00 (    0x20) __block_literal_global.9 [NameNList, MangledNameNList, NList] 
                0x00000001db1b7f20 (    0x30) __block_descriptor_tmp [NameNList, MangledNameNList, NList] 
                0x00000001db1b7f50 (    0x30) __block_descriptor_tmp.4 [NameNList, MangledNameNList, NList] 
                0x00000001db1b7f80 (    0x30) __block_descriptor_tmp.8 [NameNList, MangledNameNList, NList] 
                0x00000001db1b7fb0 (    0x20) __block_literal_global [NameNList, MangledNameNList, NList] 
                0x00000001db1b7fd0 (    0x20) __block_literal_global.12 [NameNList, MangledNameNList, NList] 
                0x00000001db1b7ff0 (    0x20) __block_literal_global.17 [NameNList, MangledNameNList, NList] 
                0x00000001db1b8010 (    0x20) __block_literal_global.20 [NameNList, MangledNameNList, NList] 
                0x00000001db1b8030 (    0x30) __block_descriptor_tmp.25 [NameNList, MangledNameNList, NList] 
                0x00000001db1b8060 (    0x30) __block_descriptor_tmp.29 [NameNList, MangledNameNList, NList] 
                0x00000001db1b8090 (    0x30) __block_descriptor_tmp.32 [NameNList, MangledNameNList, NList] 
                0x00000001db1b80c0 (    0x20) __block_literal_global.35 [NameNList, MangledNameNList, NList] 
                0x00000001db1b80e0 (    0x20) __block_literal_global [NameNList, MangledNameNList, NList] 
                0x00000001db1b8100 (    0x30) __block_descriptor_tmp.12 [NameNList, MangledNameNList, NList] 
                0x00000001db1b8130 (    0x30) __block_descriptor_tmp.13 [NameNList, MangledNameNList, NList] 
                0x00000001db1b8160 (    0x20) __block_literal_global.24 [NameNList, MangledNameNList, NList] 
                0x00000001db1b8180 (    0x20) __block_literal_global.30 [NameNList, MangledNameNList, NList] 
                0x00000001db1b81a0 (    0x20) __block_literal_global.108 [NameNList, MangledNameNList, NList] 
                0x00000001db1b81c0 (    0x18) typeinfo for std::__1::bad_function_call [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db1b81d8 (    0x28) vtable for std::__1::bad_function_call [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db1b8200 (    0x48) vtable for std::__1::__function::__func<void (*)(void*, _SITrieCompletion*, bool, bool*), std::__1::allocator<void (*)(void*, _SITrieCompletion*, bool, bool*)>, void (void*, _SITrieCompletion*, bool, bool*)> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db1b8248 (    0x20) __block_literal_global [NameNList, MangledNameNList, NList] 
                0x00000001db1b8268 (    0x30) __block_descriptor_tmp [NameNList, MangledNameNList, NList] 
                0x00000001db1b8298 (    0x20) __block_literal_global [NameNList, MangledNameNList, NList] 
                0x00000001db1b82b8 (    0x30) __block_descriptor_tmp.61 [NameNList, MangledNameNList, NList] 
                0x00000001db1b82e8 (    0x20) __block_literal_global.65 [NameNList, MangledNameNList, NList] 
                0x00000001db1b8308 (    0x30) __block_descriptor_tmp.67 [NameNList, MangledNameNList, NList] 
                0x00000001db1b8338 (    0x30) __block_descriptor_tmp.68 [NameNList, MangledNameNList, NList] 
                0x00000001db1b8368 (    0x30) __block_descriptor_tmp.71 [NameNList, MangledNameNList, NList] 
                0x00000001db1b8398 (    0x20) __block_literal_global.74 [NameNList, MangledNameNList, NList] 
                0x00000001db1b83b8 (    0x20) __block_literal_global.91 [NameNList, MangledNameNList, NList] 
                0x00000001db1b83d8 (    0x30) __block_descriptor_tmp.96 [NameNList, MangledNameNList, NList] 
                0x00000001db1b8408 (    0x48) vtable for std::__1::__function::__func<SIPreheatLanguageResources(SILanguageID, long, unsigned int, long, bool)::$_4, std::__1::allocator<SIPreheatLanguageResources(SILanguageID, long, unsigned int, long, bool)::$_4>, void* ()> [NameNList, MangledNameNList, NList] 
                0x00000001db1b8450 (    0x20) __block_literal_global.103 [NameNList, MangledNameNList, NList] 
                0x00000001db1b8470 (    0x20) __block_literal_global.107 [NameNList, MangledNameNList, NList] 
                0x00000001db1b8490 (    0x48) vtable for std::__1::__function::__func<getResourcePools()::'block-literal'::$_2, std::__1::allocator<getResourcePools()::'block-literal'::$_2>, void (void*)> [NameNList, MangledNameNList, NList] 
                0x00000001db1b84d8 (    0x20) __block_literal_global.115 [NameNList, MangledNameNList, NList] 
                0x00000001db1b84f8 (    0x48) vtable for std::__1::__function::__func<getLanguageIdentifier()::'block-literal'::$_0, std::__1::allocator<getLanguageIdentifier()::'block-literal'::$_0>, void (void*)> [NameNList, MangledNameNList, NList] 
                0x00000001db1b8540 (    0x48) vtable for std::__1::__function::__func<getLanguageIdentifier()::$_1, std::__1::allocator<getLanguageIdentifier()::$_1>, void* ()> [NameNList, MangledNameNList, NList] 
                0x00000001db1b8588 (    0x30) __block_descriptor_tmp.118 [NameNList, MangledNameNList, NList] 
                0x00000001db1b85b8 (    0x30) __block_descriptor_tmp.122 [NameNList, MangledNameNList, NList] 
                0x00000001db1b85e8 (    0x48) vtable for std::__1::__function::__func<SIRetainLanguageResources(SILanguageID, long, unsigned int)::$_3, std::__1::allocator<SIRetainLanguageResources(SILanguageID, long, unsigned int)::$_3>, void* ()> [NameNList, MangledNameNList, NList] 
                0x00000001db1b8630 (    0x20) __block_literal_global [NameNList, MangledNameNList, NList] 
                0x00000001db1b8650 (    0x30) __block_descriptor_tmp.2 [NameNList, MangledNameNList, NList] 
                0x00000001db1b8680 (    0x20) __block_literal_global.11 [NameNList, MangledNameNList, NList] 
                0x00000001db1b86a0 (    0x18) typeinfo for std::bad_alloc [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db1b86b8 (    0x18) typeinfo for std::bad_array_new_length [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db1b86d0 (    0x20) __block_literal_global [NameNList, MangledNameNList, NList] 
                0x00000001db1b86f0 (    0x20) __block_literal_global.3 [NameNList, MangledNameNList, NList] 
                0x00000001db1b8710 (    0x30) __block_descriptor_tmp [NameNList, MangledNameNList, NList] 
                0x00000001db1b8740 (    0x30) __block_descriptor_tmp.14 [NameNList, MangledNameNList, NList] 
                0x00000001db1b8770 (    0x20) __block_literal_global [NameNList, MangledNameNList, NList] 
            0x00000001db1b8790 (    0x28) __AUTH_CONST __auth_ptr
            0x00000001db1b87b8 (   0x640) __AUTH_CONST __auth_got
        0x00000001d5c64570 (  0x10a8) __DATA SEGMENT
            0x00000001d5c64570 (   0x278) __DATA __data
                0x00000001d5c64570 (     0x8) kSILanguageModelOptionLocale [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5c64578 (     0x8) kSILanguageModelOptionPreferredLanguages [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5c64580 (     0x8) kSILanguageModelOptionEnableAdaptation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5c64588 (     0x8) kSILanguageModelOptionNormalizeText [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5c64590 (     0x8) kSILanguageModelOptionFilterByLexicon [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5c64598 (     0x8) kSILanguageModelOptionFilterByBlocklist [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5c645a0 (     0x8) kSILanguageModelOptionFilterByAllowlist [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5c645a8 (     0x8) kSILanguageModelOptionThresholdKeyphrases [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5c645b0 (     0x8) kSILanguageModelOptionReducedResources [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5c645b8 (     0x8) kSILanguageModelOptionCacheResults [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5c645c0 (     0x8) kSILanguageModelOptionCacheResourcePaths [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5c645c8 (     0x8) kSILanguageModelOptionBundleIdentifier [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5c645d0 (     0x8) kSILanguageModelOptionEnableLexicon [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5c645d8 (     0x8) kSILanguageModelOptionEnableLanguageModel [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5c645e0 (     0x8) kSILanguageModelOptionEnableTokenizer [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5c645e8 (     0x8) kSILanguageModelOptionNoTimeout [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5c645f0 (    0x40) gSILogLevels [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5c64630 (    0x78) SILogCategoryNames [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5c646a8 (    0x78) SILogCategoryNameStrings [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5c64720 (    0x78) c [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5c64798 (    0x40) SILogLevelNames [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5c647d8 (     0x8) kSIStringCacheOptionMaxCacheSize [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5c647e0 (     0x8) kSIStringCacheOptionCacheGrowthFactor [EXT, NameNList, MangledNameNList, NList] 
            0x00000001d5c647e8 (    0xc8) __DATA __common
                0x00000001d5c647e8 (    0x18) _LexiconCache [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5c64800 (     0x8) Localization [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5c64808 (    0x28) LanguageModel [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5c64830 (    0x78) gSILogArray [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5c648a8 (     0x8) gSILogInitOnce [PEXT, NameNList, MangledNameNList, NList] 
            0x00000001d5c648b0 (   0xd68) __DATA __bss
                0x00000001d5c648b0 (     0x8) SILexiconCacheLoad::onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d5c648b8 (     0x8) sCache [NameNList, MangledNameNList, NList] 
                0x00000001d5c648c0 (     0x8) sTypes [NameNList, MangledNameNList, NList] 
                0x00000001d5c648c8 (   0x1e0) sDynamicLexicons [NameNList, MangledNameNList, NList] 
                0x00000001d5c64aa8 (    0x3c) sLexiconsLoaded [NameNList, MangledNameNList, NList] 
                0x00000001d5c64ae4 (     0x4) sLexiconLock [NameNList, MangledNameNList, NList] 
                0x00000001d5c64ae8 (   0x1e0) sLexiconTokens [NameNList, MangledNameNList, NList] 
                0x00000001d5c64cc8 (     0x8) logger()::log [NameNList, MangledNameNList, NList] 
                0x00000001d5c64cd0 (     0x8) logger()::token [NameNList, MangledNameNList, NList] 
                0x00000001d5c64cd8 (     0x8) getLexiconQueue()::gLexQueue [NameNList, MangledNameNList, NList] 
                0x00000001d5c64ce0 (     0x8) getLexiconQueue()::onceLexQueueToken [NameNList, MangledNameNList, NList] 
                0x00000001d5c64ce8 (     0x8) sCacheLock [NameNList, MangledNameNList, NList] 
                0x00000001d5c64cf0 (     0x8) getTaggerQueue()::gTaggerQueue [NameNList, MangledNameNList, NList] 
                0x00000001d5c64cf8 (     0x8) getTaggerQueue()::onceTaggerQueueToken [NameNList, MangledNameNList, NList] 
                0x00000001d5c64d00 (     0x8) getTagger()::gTagger [NameNList, MangledNameNList, NList] 
                0x00000001d5c64d08 (     0x8) getTagger()::onceTaggerQueueToken [NameNList, MangledNameNList, NList] 
                0x00000001d5c64d10 (     0x8) gHasUpdatedAssetResources [NameNList, MangledNameNList, NList] 
                0x00000001d5c64d18 (     0x8) getAssetResourceRoots.gAssetResourceRoots [NameNList, MangledNameNList, NList] 
                0x00000001d5c64d20 (     0x8) getAssetResourceRoots.resourceRootsOnceToken [NameNList, MangledNameNList, NList] 
                0x00000001d5c64d28 (     0x8) getAssetResourceManager.gResourceManager [NameNList, MangledNameNList, NList] 
                0x00000001d5c64d30 (     0x8) getAssetResourceManager.assetsAvailableOnceToken [NameNList, MangledNameNList, NList] 
                0x00000001d5c64d38 (     0x8) getAssetResourcePaths.gAssetResourcePaths [NameNList, MangledNameNList, NList] 
                0x00000001d5c64d40 (     0x8) getAssetResourcePaths.resourcePathsOnceToken [NameNList, MangledNameNList, NList] 
                0x00000001d5c64d48 (     0x8) SILocalizationLoad::onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d5c64d50 (     0x8) sDynamicCache [NameNList, MangledNameNList, NList] 
                0x00000001d5c64d58 (    0x40) sLocalizationLoaded [NameNList, MangledNameNList, NList] 
                0x00000001d5c64d98 (   0x1e0) sLocalizationFilters [NameNList, MangledNameNList, NList] 
                0x00000001d5c64f78 (     0x8) sLocalizationLock [NameNList, MangledNameNList, NList] 
                0x00000001d5c64f80 (   0x1e0) sLocalizationTokens [NameNList, MangledNameNList, NList] 
                0x00000001d5c65160 (     0x8) sCacheLock [NameNList, MangledNameNList, NList] 
                0x00000001d5c65168 (     0x8) getMainBundle()::gMainBundle [NameNList, MangledNameNList, NList] 
                0x00000001d5c65170 (     0x8) getMainBundle()::onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d5c65178 (     0x8) getFallbackBundle()::gFallbackBundle [NameNList, MangledNameNList, NList] 
                0x00000001d5c65180 (     0x8) getFallbackBundle()::onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d5c65188 (     0x8) getLocalizationQueue()::gLocQueue [NameNList, MangledNameNList, NList] 
                0x00000001d5c65190 (     0x8) getLocalizationQueue()::onceLocQueueToken [NameNList, MangledNameNList, NList] 
                0x00000001d5c65198 (     0x8) sharedBuffer()::once [NameNList, MangledNameNList, NList] 
                0x00000001d5c651a0 (     0x8) sharedBuffer()::key [NameNList, MangledNameNList, NList] 
                0x00000001d5c651a8 (     0x8) sLanguageIdentifierPool [NameNList, MangledNameNList, NList] 
                0x00000001d5c651b0 (     0x8) gAvailableLanguages [NameNList, MangledNameNList, NList] 
                0x00000001d5c651b8 (     0x8) SILanguageModelGetDefaultModel::model [NameNList, MangledNameNList, NList] 
                0x00000001d5c651c0 (     0x8) SILanguageModelGetDefaultModel::onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d5c651c8 (     0x8) SILanguageModelGetDefaultModelWithContext::model [NameNList, MangledNameNList, NList] 
                0x00000001d5c651d0 (     0x8) SILanguageModelGetDefaultModelWithContext::onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d5c651d8 (     0x8) languageReservations [NameNList, MangledNameNList, NList] 
                0x00000001d5c651e0 (     0x8) getAvailableLanguagesQueue()::gAvailableLanguagesQueue [NameNList, MangledNameNList, NList] 
                0x00000001d5c651e8 (     0x8) getAvailableLanguagesQueue()::onceAvailableLanguagesQueueToken [NameNList, MangledNameNList, NList] 
                0x00000001d5c651f0 (     0x8) logger()::log [NameNList, MangledNameNList, NList] 
                0x00000001d5c651f8 (     0x8) logger()::token [NameNList, MangledNameNList, NList] 
                0x00000001d5c65200 (     0x8) getResourcePools()::pools [NameNList, MangledNameNList, NList] 
                0x00000001d5c65208 (     0x8) getResourcePools()::t [NameNList, MangledNameNList, NList] 
                0x00000001d5c65210 (     0x8) getLanguageIdentifier()::onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d5c65218 (     0x8) SIResourcePools::populateLocked(int, unsigned long, bool, std::__1::function<void* ()> const&)::once [NameNList, MangledNameNList, NList] 
                0x00000001d5c65220 (     0x8) SIResourcePools::populateLocked(int, unsigned long, bool, std::__1::function<void* ()> const&)::queue [NameNList, MangledNameNList, NList] 
                0x00000001d5c65228 (     0x8) logger()::log [NameNList, MangledNameNList, NList] 
                0x00000001d5c65230 (     0x8) logger()::token [NameNList, MangledNameNList, NList] 
                0x00000001d5c65238 (     0x8) _nlpDefaultLog::log [NameNList, MangledNameNList, NList] 
                0x00000001d5c65240 (     0x8) _nlpDefaultLog::token [NameNList, MangledNameNList, NList] 
                0x00000001d5c65248 (     0x8) _nlpSignpostLog::log [NameNList, MangledNameNList, NList] 
                0x00000001d5c65250 (     0x8) _nlpSignpostLog::token [NameNList, MangledNameNList, NList] 
                0x00000001d5c65258 (   0x1d8) SILanguagesGetLocale::gLocales [NameNList, MangledNameNList, NList] 
                0x00000001d5c65430 (   0x1d8) SILanguagesGetLocale::onceLocalesToken [NameNList, MangledNameNList, NList] 
                0x00000001d5c65608 (     0x8) getRegions()::gRegions [NameNList, MangledNameNList, NList] 
                0x00000001d5c65610 (     0x8) getRegions()::onceToken [NameNList, MangledNameNList, NList] 
        0x000000023a910000 (0x37bf0000) __LINKEDIT SEGMENT
