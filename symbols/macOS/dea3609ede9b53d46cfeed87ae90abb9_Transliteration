/System/Library/PrivateFrameworks/Transliteration.framework/Versions/A/Transliteration [arm64e, 0.028081 seconds]:
    6FC7DA2C-7DE6-3D18-BBAF-FC1B8C04F1E5 /System/Library/PrivateFrameworks/Transliteration.framework/Versions/A/Transliteration [DYLIB, DYLDSHAREDCACHE, FaultedFromDiskDyldSharedCache, MMap64]  
        0x0000000215ae8000 ( 0x1e000) __TEXT SEGMENT
            0x0000000215ae8000 (  0x14e8) MACH_HEADER
            0x0000000215ae94e8 ( 0x17310) __TEXT __text
                0x0000000215ae94e8 (    0x24) CFStringsAreEqual(__CFString const*, __CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215ae950c (    0x4c) createCFStringFromString(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215ae9558 (    0xc8) getUTF8StringFromCFString(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215ae9620 (    0x80) getFileSystemRepresentationFromCFURL(__CFURL const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215ae96a0 (   0x438) splitWithChar(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, char, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215ae9ad8 (    0xd4) TLCreateStringWithValidatedFormat(__CFString const*, __CFString const*, ...) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215ae9bac (    0xa0) std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::basic_string[abi:v160006]<std::nullptr_t>(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215ae9c4c (    0x18) std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215ae9c64 (    0x5c) std::__1::__throw_length_error[abi:v160006](char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215ae9cc0 (    0x34) std::length_error::length_error[abi:v160006](char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215ae9cf4 (    0x34) std::__throw_bad_array_new_length[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215ae9d28 (     0xc) __clang_call_terminate [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215ae9d34 (    0x78) std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>::__swap_out_circular_buffer(std::__1::__split_buffer<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>&>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215ae9dac (    0x18) std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215ae9dc4 (    0x48) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>(std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215ae9e0c (    0xa0) std::__1::reverse_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*> std::__1::__uninitialized_allocator_move_if_noexcept[abi:v160006]<std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::reverse_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*>, std::__1::reverse_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*>, std::__1::reverse_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*>>(std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>&, std::__1::reverse_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*>, std::__1::reverse_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1:...
                0x0000000215ae9eac (    0x38) std::__1::__exception_guard_exceptions<std::__1::_AllocatorDestroyRangeReverse<std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::reverse_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*>>>::~__exception_guard_exceptions[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215ae9ee4 (    0x48) std::__1::_AllocatorDestroyRangeReverse<std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::reverse_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*>>::operator()[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215ae9f2c (    0x38) std::__1::__split_buffer<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>&>::~__split_buffer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215ae9f64 (    0x58) std::__1::__split_buffer<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>&>::__destruct_at_end[abi:v160006](std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215ae9fbc (    0x90) std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__init_copy_ctor_external(char const*, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aea04c (    0x38) nlp::CFScopedPtr<__CFString const*>::reset(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aea084 (   0x278) -[EMTResult(MetaInfo) score] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aea2fc (    0x10) OUTLINED_FUNCTION_0 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aea30c (    0x98) -[TLTransliterator initWithLocale:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aea3a4 (   0x128) -[TLTransliterator initWithParameters:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aea4cc (   0x408) -[TLTransliterator generateCandidatesForInputWord:candidateContext:maxCandidatesCount:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aea8d4 (     0x4) -[TLTransliterator learnCandidate:candidateContext:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aea8d8 (     0x4) -[TLTransliterator unlearnCandidate:candidateContext:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aea8dc (     0x4) -[TLTransliterator flushDynamicLearningCache] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aea8e0 (     0x4) -[TLTransliterator resetDynamicLearningCache] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aea8e4 (     0xc) -[TLTransliterator .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aea8f0 (     0x8) -[TLTransliterator .cxx_construct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aea8f8 (    0x3c) std::__1::vector<TLCompositeTransliteratorCandidate, std::__1::allocator<TLCompositeTransliteratorCandidate>>::~vector[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aea934 (    0x84) std::__1::vector<TLCompositeTransliteratorCandidate, std::__1::allocator<TLCompositeTransliteratorCandidate>>::__destroy_vector::operator()[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aea9b8 (    0x58) void std::__1::__destroy_at[abi:v160006]<TLCompositeTransliteratorCandidate, 0>(TLCompositeTransliteratorCandidate*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aeaa10 (    0x3c) std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>::~vector[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aeaa4c (    0x54) std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>::__destroy_vector::operator()[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aeaaa0 (    0x58) std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>::__clear[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aeaaf8 (    0x40) std::__1::unique_ptr<TLCompositeTransliterator, std::__1::default_delete<TLCompositeTransliterator>>::reset[abi:v160006](TLCompositeTransliterator*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aeab38 (   0xa0c) TLDevanagariOrthographyChecker::TLDevanagariOrthographyChecker() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aeb544 (     0x4) TLDevanagariOrthographyChecker::TLDevanagariOrthographyChecker() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aeb548 (    0x94) TLDevanagariOrthographyChecker::~TLDevanagariOrthographyChecker() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aeb5dc (     0x4) TLDevanagariOrthographyChecker::~TLDevanagariOrthographyChecker() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aeb5e0 (    0x28) TLDevanagariOrthographyChecker::~TLDevanagariOrthographyChecker() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aeb608 (   0x17c) TLDevanagariOrthographyChecker::isVowelSign(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aeb784 (    0x74) TLDevanagariOrthographyChecker::canCandrabinduFollowVowelSign(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aeb7f8 (    0x98) TLDevanagariOrthographyChecker::canNuktaFollowLetter(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aeb890 (    0x64) TLDevanagariOrthographyChecker::canViramaFollowLetter(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aeb8f4 (    0x6c) TLDevanagariOrthographyChecker::canViramaPrecedeLetter(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aeb960 (    0x2c) TLDevanagariOrthographyChecker::canZWJFollowSequence(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aeb98c (   0x3b4) TLDevanagariOrthographyChecker::stringByCorrectingIllegalVowelLetters(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aebd40 (   0xb24) TLDevanagariOrthographyChecker::checkSpelling(__CFString const*, __CFString const**, __CFString const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aec864 (    0x54) std::__1::__tree<std::__1::__value_type<__CFString const*, __CFString const*>, std::__1::__map_value_compare<__CFString const*, std::__1::__value_type<__CFString const*, __CFString const*>, std::__1::less<__CFString const*>, true>, std::__1::allocator<std::__1::__value_type<__CFString const*, __CFString const*>>>::destroy(std::__1::__tree_node<std::__1::__value_type<__CFString const*, __CFString const*>, void*>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aec8b8 (    0xc0) std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<__CFString const*, __CFString const*>, std::__1::__tree_node<std::__1::__value_type<__CFString const*, __CFString const*>, void*>*, long>, bool> std::__1::__tree<std::__1::__value_type<__CFString const*, __CFString const*>, std::__1::__map_value_compare<__CFString const*, std::__1::__value_type<__CFString const*, __CFString const*>, std::__1::less<__CFString const*>, true>, std::__1::allocator<std::__1::__value_type<__CFString const*, __CFString const*>>>::__emplace_unique_key_args<__CFString const*, std::__1::piecewise_construct_t const&, std::__1::tuple<__CFString const*&&>, std::__1::tuple<>>(__CFString const* const&, std::__1::piecewise_construct_t const&, std::__1::tuple<__CFString const*&&>&&, std::__1::tuple<>&&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aec978 (    0x58) std::__1::__tree<std::__1::__value_type<__CFString const*, __CFString const*>, std::__1::__map_value_compare<__CFString const*, std::__1::__value_type<__CFString const*, __CFString const*>, std::__1::less<__CFString const*>, true>, std::__1::allocator<std::__1::__value_type<__CFString const*, __CFString const*>>>::__insert_node_at(std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*, std::__1::__tree_node_base<void*>*&, std::__1::__tree_node_base<void*>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aec9d0 (   0x198) void std::__1::__tree_balance_after_insert[abi:v160006]<std::__1::__tree_node_base<void*>*>(std::__1::__tree_node_base<void*>*, std::__1::__tree_node_base<void*>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aecb68 (    0x58) TLLanguageModelStr::TLLanguageModelStr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aecbc0 (    0x58) TLLanguageModelStr::TLLanguageModelStr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aecc18 (   0x304) TLLanguageModelStr::load(TLLanguageModelCreateOptions const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aecf1c (    0x44) std::__1::variant<bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>& std::__1::variant<bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>::operator=[abi:v160006]<bool, 0, bool, 0ul, 0>(bool&&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aecf60 (    0x7c) TLLanguageModelStr::~TLLanguageModelStr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aecfdc (     0x4) TLLanguageModelStr::~TLLanguageModelStr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aecfe0 (    0x28) TLLanguageModelStr::~TLLanguageModelStr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aed008 (   0x1e4) TLLanguageModelStr::logProbability(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>> const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aed1ec (    0x48) std::__1::__optional_destruct_base<LM::TrialParameters, false>::~__optional_destruct_base[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aed234 (    0x5c) std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>>::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_...
                0x0000000215aed290 (    0x58) void std::__1::__destroy_at[abi:v160006]<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, 0>(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aed2e8 (    0x4c) std::__1::basic_string_view<char, std::__1::char_traits<char>>::compare(std::__1::basic_string_view<char, std::__1::char_traits<char>>) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aed334 (    0x40) std::__1::unique_ptr<language_modeling::v1::LanguageModel, std::__1::default_delete<language_modeling::v1::LanguageModel>>::reset[abi:v160006](language_modeling::v1::LanguageModel*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aed374 (    0x40) std::__1::unique_ptr<language_modeling::v1::LanguageModelSession, std::__1::default_delete<language_modeling::v1::LanguageModelSession>>::reset[abi:v160006](language_modeling::v1::LanguageModelSession*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aed3b4 (    0x5c) std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::variant<bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::variant<bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::variant<bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>>>::destroy(std::__1::__tr...
                0x0000000215aed410 (    0x50) void std::__1::__destroy_at[abi:v160006]<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const, std::__1::variant<bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>, 0>(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const, std::__1::variant<bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aed460 (    0x5c) std::__1::__variant_detail::__dtor<std::__1::__variant_detail::__traits<bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, (std::__1::__variant_detail::_Trait)1>::~__dtor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aed4bc (     0x4) decltype(auto) std::__1::__variant_detail::__visitation::__base::__dispatcher<0ul>::__dispatch[abi:v160006]<std::__1::__variant_detail::__dtor<std::__1::__variant_detail::__traits<bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, (std::__1::__variant_detail::_Trait)1>::__destroy[abi:v160006]()::'lambda'(auto&)&&, std::__1::__variant_detail::__base<(std::__1::__variant_detail::_Trait)1, bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>&>(auto, std::__1::__variant_detail::__base<(std::__1::__variant_detail::_Trait)1, bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aed4c0 (    0x14) decltype(auto) std::__1::__variant_detail::__visitation::__base::__dispatcher<1ul>::__dispatch[abi:v160006]<std::__1::__variant_detail::__dtor<std::__1::__variant_detail::__traits<bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, (std::__1::__variant_detail::_Trait)1>::__destroy[abi:v160006]()::'lambda'(auto&)&&, std::__1::__variant_detail::__base<(std::__1::__variant_detail::_Trait)1, bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>&>(auto, std::__1::__variant_detail::__base<(std::__1::__variant_detail::_Trait)1, bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aed4d4 (    0xc0) std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::variant<bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::variant<bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>, void*>*, long>, bool> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::variant<bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_t...
                0x0000000215aed594 (    0x94) std::__1::__tree_node_base<void*>*& std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::variant<bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::variant<bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::variant<bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocato...
                0x0000000215aed628 (    0x58) std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::variant<bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::variant<bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::variant<bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>>>::__insert_node_at(std::...
                0x0000000215aed680 (    0x68) _ZNSt3__1ssB7v160006IcNS_11char_traitsIcEENS_9allocatorIcEEEEDaRKNS_12basic_stringIT_T0_T1_EESC_ [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aed6e8 (    0x58) std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::variant<bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::variant<bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>, void*>>>>::reset[abi:v160006](std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::variant<bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>, void*>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aed740 (    0x58) void std::__1::__variant_detail::__assignment<std::__1::__variant_detail::__traits<bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>::__assign_alt[abi:v160006]<1ul, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&>(std::__1::__variant_detail::__alt<1ul, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aed798 (    0x88) void std::__1::__variant_detail::__assignment<std::__1::__variant_detail::__traits<bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>::__assign_alt[abi:v160006]<1ul, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&>(std::__1::__variant_detail::__alt<1ul, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)::'unnamed'::operator()(std::__1::integral_constant<bool, false>) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aed820 (    0x80) auto& std::__1::__variant_detail::__assignment<std::__1::__variant_detail::__traits<bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>::__emplace[abi:v160006]<1ul, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>&&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aed8a0 (    0x64) auto& std::__1::__variant_detail::__assignment<std::__1::__variant_detail::__traits<bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>::__emplace[abi:v160006]<0ul, bool>(bool&&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aed904 (    0x78) void std::__1::__variant_detail::__assignment<std::__1::__variant_detail::__traits<bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>::__assign_alt[abi:v160006]<1ul, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, char const*&>(std::__1::__variant_detail::__alt<1ul, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>&, char const*&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aed97c (    0x6c) void std::__1::__variant_detail::__assignment<std::__1::__variant_detail::__traits<bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>::__assign_alt[abi:v160006]<1ul, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, char const*&>(std::__1::__variant_detail::__alt<1ul, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>&, char const*&)::'unnamed'::operator()(std::__1::integral_constant<bool, false>) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aed9e8 (    0xb4) std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__assign_external(char const*, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aeda9c (    0x7c) -[TLTransliteratorCandidateContext initWithCandidates:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aedb18 (    0x58) -[TLTransliteratorCandidateContext description] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aedb70 (     0xc) -[TLTransliteratorCandidateContext candidates] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aedb7c (     0xc) -[TLTransliteratorCandidateContext .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aedb88 (     0x8) TL::SharedCFType::Wrapper::Wrapper(void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aedb90 (     0x8) TL::SharedCFType::Wrapper::Wrapper(void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aedb98 (    0x34) TL::SharedCFType::Wrapper::~Wrapper() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aedbcc (     0x4) TL::SharedCFType::Wrapper::~Wrapper() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aedbd0 (     0x8) TL::SharedCFType::Wrapper::get() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aedbd8 (    0x48) TL::SharedCFType::SharedCFType(void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aedc20 (    0x48) TL::SharedCFType::SharedCFType(void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aedc68 (    0x1c) TL::SharedCFType::SharedCFType(TL::SharedCFType const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aedc84 (    0x1c) TL::SharedCFType::SharedCFType(TL::SharedCFType const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aedca0 (     0xc) TL::SharedCFType::get() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aedcac (    0x74) std::__1::shared_ptr<TL::SharedCFType::Wrapper>::shared_ptr<TL::SharedCFType::Wrapper, void>(TL::SharedCFType::Wrapper*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aedd20 (     0x4) std::__1::__shared_ptr_pointer<TL::SharedCFType::Wrapper*, std::__1::shared_ptr<TL::SharedCFType::Wrapper>::__shared_ptr_default_delete<TL::SharedCFType::Wrapper, TL::SharedCFType::Wrapper>, std::__1::allocator<TL::SharedCFType::Wrapper>>::~__shared_ptr_pointer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aedd24 (    0x28) std::__1::__shared_ptr_pointer<TL::SharedCFType::Wrapper*, std::__1::shared_ptr<TL::SharedCFType::Wrapper>::__shared_ptr_default_delete<TL::SharedCFType::Wrapper, TL::SharedCFType::Wrapper>, std::__1::allocator<TL::SharedCFType::Wrapper>>::~__shared_ptr_pointer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aedd4c (    0x38) std::__1::__shared_ptr_pointer<TL::SharedCFType::Wrapper*, std::__1::shared_ptr<TL::SharedCFType::Wrapper>::__shared_ptr_default_delete<TL::SharedCFType::Wrapper, TL::SharedCFType::Wrapper>, std::__1::allocator<TL::SharedCFType::Wrapper>>::__on_zero_shared() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aedd84 (    0x40) std::__1::__shared_ptr_pointer<TL::SharedCFType::Wrapper*, std::__1::shared_ptr<TL::SharedCFType::Wrapper>::__shared_ptr_default_delete<TL::SharedCFType::Wrapper, TL::SharedCFType::Wrapper>, std::__1::allocator<TL::SharedCFType::Wrapper>>::__get_deleter(std::type_info const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aeddc4 (     0x4) std::__1::__shared_ptr_pointer<TL::SharedCFType::Wrapper*, std::__1::shared_ptr<TL::SharedCFType::Wrapper>::__shared_ptr_default_delete<TL::SharedCFType::Wrapper, TL::SharedCFType::Wrapper>, std::__1::allocator<TL::SharedCFType::Wrapper>>::__on_zero_shared_weak() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aeddc8 (    0x4c) std::type_info::operator==[abi:v160006](std::type_info const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aede14 (    0x50) TLCompositeTransliteratorException::TLCompositeTransliteratorException(__CFLocale const*, __CFURL const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aede64 (    0x40) std::__1::unique_ptr<TL::StringMap, std::__1::default_delete<TL::StringMap>>::reset[abi:v160006](TL::StringMap*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aedea4 (   0x4b0) TLCompositeTransliteratorException::loadExceptionList(__CFLocale const*, __CFURL const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aee354 (     0x4) TLCompositeTransliteratorException::TLCompositeTransliteratorException(__CFLocale const*, __CFURL const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aee358 (    0x2c) TLCompositeTransliteratorException::~TLCompositeTransliteratorException() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aee384 (    0x2c) TLCompositeTransliteratorException::~TLCompositeTransliteratorException() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aee3b0 (    0x10) __Block_byref_object_copy_ [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aee3c0 (     0xc) __Block_byref_object_dispose_ [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aee3cc (    0xa4) invocation function for block in TLCompositeTransliteratorException::loadExceptionList(__CFLocale const*, __CFURL const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aee470 (    0x10) __copy_helper_block_ea8_32r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aee480 (     0xc) __destroy_helper_block_ea8_32r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aee48c (    0x9c) std::__1::conditional<converts_to_string<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>::value, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::decay<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>::type>::type applesauce::CF::convert_or<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>(void const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>&&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aee528 (   0x194) TLCompositeTransliteratorException::exceptionCandidatesForInput(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aee6bc (    0xc4) TLOSSignPostexceptionCandidatesForInput::TLOSSignPostexceptionCandidatesForInput() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aee780 (   0x1b4) void std::__1::vector<TLCompositeTransliteratorCandidate, std::__1::allocator<TLCompositeTransliteratorCandidate>>::__emplace_back_slow_path<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, float, float, TLTransliteratorCandidateType, bool>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, float&&, float&&, TLTransliteratorCandidateType&&, bool&&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aee934 (    0x18) std::__1::vector<TLCompositeTransliteratorCandidate, std::__1::allocator<TLCompositeTransliteratorCandidate>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aee94c (    0x48) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<TLCompositeTransliteratorCandidate>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<TLCompositeTransliteratorCandidate>>(std::__1::allocator<TLCompositeTransliteratorCandidate>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aee994 (    0x50) std::__1::__split_buffer<TLCompositeTransliteratorCandidate, std::__1::allocator<TLCompositeTransliteratorCandidate>&>::~__split_buffer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aee9e4 (    0xa0) TLOSSignPostexceptionCandidatesForInput::~TLOSSignPostexceptionCandidatesForInput() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aeea84 (    0x38) nlp::CFScopedPtr<__CFString*>::reset(__CFString*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aeeabc (    0x38) nlp::CFScopedPtr<__CFURL const*>::reset(__CFURL const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aeeaf4 (    0x84) std::__1::optional<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>> applesauce::CF::convert_as<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, 0>(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aeeb78 (    0xe0) std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> applesauce::CF::details::CFString_get_value<false>(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aeec58 (    0x9c) std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::basic_string[abi:v160006](unsigned long, char) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aeecf4 (    0x68) TLTransliterationCandidateTypeAsString [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aeed5c (   0x21c) +[TLTransliteratorCandidate createWithCompositeTransliteratorCandidate:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aeef78 (    0x34) applesauce::CF::StringRef::~StringRef() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aeefac (   0x120) -[TLTransliteratorCandidate initWithInputWord:transliteratedWord:lmScore:seq2seqScore:totalScore:isExtensionCandidate:type:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aef0cc (   0x144) -[TLTransliteratorCandidate hash] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aef210 (   0x224) -[TLTransliteratorCandidate isEqual:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aef434 (     0x4) -[TLTransliteratorCandidate copyWithZone:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aef438 (   0x23c) -[TLTransliteratorCandidate description] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aef674 (     0xc) -[TLTransliteratorCandidate inputWord] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aef680 (     0xc) -[TLTransliteratorCandidate transliteratedWord] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aef68c (     0x8) -[TLTransliteratorCandidate lmScore] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aef694 (     0x8) -[TLTransliteratorCandidate seq2seqScore] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aef69c (     0x8) -[TLTransliteratorCandidate totalScore] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aef6a4 (     0xc) -[TLTransliteratorCandidate isExtensionCandidate] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aef6b0 (     0x8) -[TLTransliteratorCandidate type] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aef6b8 (    0x44) -[TLTransliteratorCandidate .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aef6fc (    0x7c) -[TLTransliteratorInitParameters initWithLocale:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aef778 (    0x90) -[TLTransliteratorInitParameters copyWithZone:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aef808 (    0x90) -[TLTransliteratorInitParameters mutableCopyWithZone:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aef898 (   0x1b0) -[TLTransliteratorInitParameters isEqual:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aefa48 (    0x70) -[TLTransliteratorInitParameters hash] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aefab8 (     0xc) -[TLTransliteratorInitParameters locale] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aefac4 (     0xc) -[TLTransliteratorInitParameters modelURL] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aefad0 (     0x8) -[TLTransliteratorInitParameters setModelURL:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aefad8 (    0x44) -[TLTransliteratorInitParameters .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aefb1c (   0x4f8) TLBengaliOrthographyChecker::TLBengaliOrthographyChecker() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af0014 (     0x4) TLBengaliOrthographyChecker::TLBengaliOrthographyChecker() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af0018 (    0x64) TLBengaliOrthographyChecker::~TLBengaliOrthographyChecker() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af007c (     0x4) TLBengaliOrthographyChecker::~TLBengaliOrthographyChecker() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af0080 (    0x28) TLBengaliOrthographyChecker::~TLBengaliOrthographyChecker() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af00a8 (   0x13c) TLBengaliOrthographyChecker::isVowelSign(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af01e4 (     0x4) TLBengaliOrthographyChecker::canCandrabinduFollowVowelSign(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af01e8 (    0x98) TLBengaliOrthographyChecker::canNuktaFollowLetter(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af0280 (    0x94) TLBengaliOrthographyChecker::canViramaFollowLetter(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af0314 (    0x6c) TLBengaliOrthographyChecker::canViramaPrecedeLetter(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af0380 (   0x4d0) TLBengaliOrthographyChecker::checkSpelling(__CFString const*, __CFString const**, __CFString const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af0850 (    0x44) TL::StringMap::StringMap() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af0894 (    0x44) TL::StringMap::StringMap() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af08d8 (    0x5c) TL::StringMap::StringMap(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af0934 (     0x4) TL::StringMap::StringMap(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af0938 (    0x78) TL::StringMap::createWithFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af09b0 (    0x50) TL::StringMap::~StringMap() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af0a00 (     0x4) TL::StringMap::~StringMap() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af0a04 (    0x54) TL::StringMap::add(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af0a58 (    0x18) TL::StringMap::get(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af0a70 (    0x9c) StringMapBuilder::get(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af0b0c (    0x78) StringMapFile::get(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af0b84 (    0x10) TL::StringMap::write(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af0b94 (   0x23c) StringMapBuilder::write(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af0dd0 (   0x198) StringMapFile::StringMapFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af0f68 (   0x1d8) TL::ReadOnlyFile<char>::open(char const*, char const*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af1140 (     0x4) TL::ResourceCreationException::~ResourceCreationException() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af1144 (    0x1c) __Block_byref_object_copy_ [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af1160 (    0x14) __Block_byref_object_dispose_ [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af1174 (   0x104) nlp::SingletonResourceManager<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, TL::ReadOnlyFile<char>>::getResource(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, TL::ReadOnlyFile<char>* () block_pointer) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af1278 (    0xcc) invocation function for block in TL::ReadOnlyFile<char>::open(char const*, char const*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af1344 (    0x48) std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::operator=[abi:v160006](char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af138c (    0x10) __copy_helper_block_e8_32r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af139c (     0xc) __destroy_helper_block_e8_32r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af13a8 (    0x10) __Block_byref_object_copy_.4 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af13b8 (    0x10) __Block_byref_object_dispose_.5 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af13c8 (    0xb8) nlp::SingletonResourceManager<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, TL::ReadOnlyFile<char>>::getQueue() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af1480 (   0x120) invocation function for block in nlp::SingletonResourceManager<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, TL::ReadOnlyFile<char>>::getResource(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, TL::ReadOnlyFile<char>* () block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af15a0 (    0x64) nlp::SingletonResourceManager<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, TL::ReadOnlyFile<char>>::getCache() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af1604 (    0x48) void std::__1::shared_ptr<TL::ReadOnlyFile<char>>::reset[abi:v160006]<TL::ReadOnlyFile<char>, void>(TL::ReadOnlyFile<char>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af164c (    0x50) __copy_helper_block_e8_32b40r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af169c (    0x44) __destroy_helper_block_e8_32b40r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af16e0 (   0x104) std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::weak_ptr<TL::ReadOnlyFile<char>>>, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::weak_ptr<TL::ReadOnlyFile<char>>>, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::weak_ptr<TL::ReadOnlyFile<char>>>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, true>, std::__1::__unordered_map_equal<std::__1::basic_string<cha...
                0x0000000215af17e4 (    0x40) std::__1::__string_hash<char, std::__1::allocator<char>>::operator()(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af1824 (   0x208) std::__1::__murmur2_or_cityhash<unsigned long, 64ul>::operator()(void const*, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af1a2c (    0xf8) std::__1::__murmur2_or_cityhash<unsigned long, 64ul>::__hash_len_0_to_16(char const*, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af1b24 (    0xac) std::__1::__murmur2_or_cityhash<unsigned long, 64ul>::__hash_len_17_to_32(char const*, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af1bd0 (   0x110) std::__1::__murmur2_or_cityhash<unsigned long, 64ul>::__hash_len_33_to_64(char const*, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af1ce0 (    0xb4) std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>::operator()[abi:v160006](std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af1d94 (    0x74) std::__1::shared_ptr<TL::ReadOnlyFile<char>>::shared_ptr<TL::ReadOnlyFile<char>, void>(TL::ReadOnlyFile<char>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af1e08 (     0x4) std::__1::__shared_ptr_pointer<TL::ReadOnlyFile<char>*, std::__1::shared_ptr<TL::ReadOnlyFile<char>>::__shared_ptr_default_delete<TL::ReadOnlyFile<char>, TL::ReadOnlyFile<char>>, std::__1::allocator<TL::ReadOnlyFile<char>>>::~__shared_ptr_pointer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af1e0c (    0x28) std::__1::__shared_ptr_pointer<TL::ReadOnlyFile<char>*, std::__1::shared_ptr<TL::ReadOnlyFile<char>>::__shared_ptr_default_delete<TL::ReadOnlyFile<char>, TL::ReadOnlyFile<char>>, std::__1::allocator<TL::ReadOnlyFile<char>>>::~__shared_ptr_pointer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af1e34 (    0x38) std::__1::__shared_ptr_pointer<TL::ReadOnlyFile<char>*, std::__1::shared_ptr<TL::ReadOnlyFile<char>>::__shared_ptr_default_delete<TL::ReadOnlyFile<char>, TL::ReadOnlyFile<char>>, std::__1::allocator<TL::ReadOnlyFile<char>>>::__on_zero_shared() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af1e6c (    0x40) std::__1::__shared_ptr_pointer<TL::ReadOnlyFile<char>*, std::__1::shared_ptr<TL::ReadOnlyFile<char>>::__shared_ptr_default_delete<TL::ReadOnlyFile<char>, TL::ReadOnlyFile<char>>, std::__1::allocator<TL::ReadOnlyFile<char>>>::__get_deleter(std::type_info const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af1eac (     0x4) std::__1::__shared_ptr_pointer<TL::ReadOnlyFile<char>*, std::__1::shared_ptr<TL::ReadOnlyFile<char>>::__shared_ptr_default_delete<TL::ReadOnlyFile<char>, TL::ReadOnlyFile<char>>, std::__1::allocator<TL::ReadOnlyFile<char>>>::__on_zero_shared_weak() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af1eb0 (    0xb0) TL::ReadOnlyFile<char>::~ReadOnlyFile() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af1f60 (   0x290) std::__1::pair<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::weak_ptr<TL::ReadOnlyFile<char>>>, void*>*>, bool> std::__1::__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::weak_ptr<TL::ReadOnlyFile<char>>>, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::weak_ptr<TL::ReadOnlyFile<char>>>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, true>, std::__1::__unordered_map_equal<std:...
                0x0000000215af21f0 (    0xa4) std::__1::unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::weak_ptr<TL::ReadOnlyFile<char>>>, void*>, std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::weak_ptr<TL::ReadOnlyFile<char>>>, void*>>>> std::__1::__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::weak_ptr<TL::ReadOnlyFile<char>>>, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::weak_ptr<TL::ReadOnlyFile<char>>>, std::__1::hash<std::__1::basic_stri...
                0x0000000215af2294 (    0xf0) void std::__1::__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::weak_ptr<TL::ReadOnlyFile<char>>>, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::weak_ptr<TL::ReadOnlyFile<char>>>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::weak_ptr<TL::ReadOnlyFile<c...
                0x0000000215af2384 (   0x15c) void std::__1::__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::weak_ptr<TL::ReadOnlyFile<char>>>, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::weak_ptr<TL::ReadOnlyFile<char>>>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::weak_ptr<TL::ReadOnlyFile<c...
                0x0000000215af24e0 (    0x58) std::__1::unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::weak_ptr<TL::ReadOnlyFile<char>>>, void*>, std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::weak_ptr<TL::ReadOnlyFile<char>>>, void*>>>>::reset[abi:v160006](std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::weak_ptr<TL::ReadOnlyFile<char>>>, void*>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af2538 (    0x54) void std::__1::__destroy_at[abi:v160006]<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const, std::__1::weak_ptr<TL::ReadOnlyFile<char>>>, 0>(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const, std::__1::weak_ptr<TL::ReadOnlyFile<char>>>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af258c (   0x2a8) TL::ReadOnlyFile<char>::ReadOnlyFile(char const*, char const*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af2834 (     0x4) TL::ReadOnlyFileCreationException::~ReadOnlyFileCreationException() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af2838 (    0xb0) TL::ReadOnlyFileCreationException::ReadOnlyFileCreationException(TL::FileExceptionType, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af28e8 (    0x7c) TL::ResourceCreationException::ResourceCreationException(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af2964 (    0x28) TL::ReadOnlyFileCreationException::~ReadOnlyFileCreationException() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af298c (    0x1c) TL::ResourceCreationException::what() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af29a8 (    0x28) TL::ResourceCreationException::~ResourceCreationException() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af29d0 (    0x60) TL::ResourceCreationException::~ResourceCreationException() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af2a30 (    0x74) std::__1::__shared_weak_count::__release_shared[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af2aa4 (    0x40) StringMapFile::~StringMapFile() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af2ae4 (    0xac) std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, void*>*, long>, bool> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::...
                0x0000000215af2b90 (    0x94) std::__1::__tree_node_base<void*>*& std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>>::__find_equal<std::__1::basic_string<char, std::__1::char_trai...
                0x0000000215af2c24 (    0x98) std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, void*>>>> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::a...
                0x0000000215af2cbc (    0x58) std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>>::__insert_node_at(std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*, std::__1::__tree...
                0x0000000215af2d14 (    0x58) std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, void*>>>>::reset[abi:v160006](std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, void*>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af2d6c (    0x80) std::__1::__tree_const_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, void*>*, long> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits...
                0x0000000215af2dec (    0x18) std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af2e04 (    0x80) std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, unsigned int>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, unsigned int>, void*>*, long> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, unsigned int>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, unsigned int>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, unsigned int>>>::fi...
                0x0000000215af2e84 (    0x68) std::__1::pair<char const*, std::__1::back_insert_iterator<std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>>> std::__1::__copy_loop<std::__1::_ClassicAlgPolicy>::operator()[abi:v160006]<char const*, char const*, std::__1::back_insert_iterator<std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>>>(char const*, char const*, std::__1::back_insert_iterator<std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>>) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af2eec (   0x104) std::__1::back_insert_iterator<std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>>::operator=[abi:v160006](unsigned char&&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af2ff0 (    0x64) std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, unsigned int>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, unsigned int>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, unsigned int>>>::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, unsigned int>, void*>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af3054 (   0x150) TLCompositeTransliteratorSeq2Seq::TLCompositeTransliteratorSeq2Seq(__CFLocale const*, __CFURL const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af31a4 (    0x38) nlp::CFScopedPtr<__CFLocale const*>::reset(__CFLocale const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af31dc (   0x5cc) TLCompositeTransliteratorSeq2Seq::loadSeq2SeqModel(__CFLocale const*, __CFURL const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af37a8 (     0x4) TLCompositeTransliteratorSeq2Seq::TLCompositeTransliteratorSeq2Seq(__CFLocale const*, __CFURL const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af37ac (    0x10) __Block_byref_object_copy_ [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af37bc (     0xc) __Block_byref_object_dispose_ [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af37c8 (    0xa4) invocation function for block in TLCompositeTransliteratorSeq2Seq::loadSeq2SeqModel(__CFLocale const*, __CFURL const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af386c (   0x618) TLCompositeTransliteratorSeq2Seq::seq2SeqCandidatesForInput(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af3e84 (    0x70) invocation function for block in TLCompositeTransliteratorSeq2Seq::seq2SeqCandidatesForInput(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af3ef4 (     0x8) __copy_helper_block_ea8_32s [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af3efc (     0x8) __destroy_helper_block_ea8_32s [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af3f04 (    0x10) __Block_byref_object_copy_.24 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af3f14 (     0x8) __Block_byref_object_dispose_.25 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af3f1c (    0x78) invocation function for block in TLCompositeTransliteratorSeq2Seq::seq2SeqCandidatesForInput(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af3f94 (    0x48) __copy_helper_block_ea8_32s40r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af3fdc (    0x40) __destroy_helper_block_ea8_32s40r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af401c (    0xc4) TLOSSignPostseq2SeqCandidatesForInput::TLOSSignPostseq2SeqCandidatesForInput() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af40e0 (   0x1b4) void std::__1::vector<TLCompositeTransliteratorCandidate, std::__1::allocator<TLCompositeTransliteratorCandidate>>::__emplace_back_slow_path<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, char const*, double, double, TLTransliteratorCandidateType, bool>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, char const*&&, double&&, double&&, TLTransliteratorCandidateType&&, bool&&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af4294 (    0xa8) TLCompositeTransliteratorCandidate* std::__1::construct_at[abi:v160006]<TLCompositeTransliteratorCandidate, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, char const*, double, double, TLTransliteratorCandidateType, bool, TLCompositeTransliteratorCandidate*>(TLCompositeTransliteratorCandidate*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, char const*&&, double&&, double&&, TLTransliteratorCandidateType&&, bool&&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af433c (    0xa0) TLOSSignPostseq2SeqCandidatesForInput::~TLOSSignPostseq2SeqCandidatesForInput() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af43dc (   0x634) TLTamilOrthographyChecker::TLTamilOrthographyChecker() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af4a10 (    0x38) nlp::CFScopedPtr<__CFCharacterSet const*>::reset(__CFCharacterSet const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af4a48 (     0x4) TLTamilOrthographyChecker::TLTamilOrthographyChecker() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af4a4c (    0x80) TLTamilOrthographyChecker::~TLTamilOrthographyChecker() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af4acc (     0x4) TLTamilOrthographyChecker::~TLTamilOrthographyChecker() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af4ad0 (    0x28) TLTamilOrthographyChecker::~TLTamilOrthographyChecker() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af4af8 (    0x50) TLTamilOrthographyChecker::isVowelSign(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af4b48 (    0x40) TLTamilOrthographyChecker::canViramaFollowLetter(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af4b88 (    0x80) TLTamilOrthographyChecker::canViramaPrecedeLetter(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af4c08 (   0x278) TLTamilOrthographyChecker::isInvalidConsecutiveDiacritics(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af4e80 (   0x1a0) TLTamilOrthographyChecker::isInvalidViramaFollowingConsonantOrNothing(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af5020 (   0x100) TLTamilOrthographyChecker::isInvalidDiacriticAfterVowelLetter(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af5120 (    0x50) TLTamilOrthographyChecker::isInvalidTamilLetter(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af5170 (    0x80) TLTamilOrthographyChecker::checkSpelling(__CFString const*, __CFString const**, __CFString const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af51f0 (   0x210) operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char>>&, TLCompositeTransliteratorCandidate const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af5400 (    0x58) TLCompositeTransliteratorCandidate::getTotalScore() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af5458 (    0xc4) TLCompositeTransliteratorCandidate::TLCompositeTransliteratorCandidate(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, double, double, TLTransliteratorCandidateType, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af551c (     0x4) TLCompositeTransliteratorCandidate::TLCompositeTransliteratorCandidate(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, double, double, TLTransliteratorCandidateType, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af5520 (   0x2cc) invocation function for block in TLCompositeTransliteratorCandidate::getTotalScore() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af57ec (   0x1a4) std::__1::basic_ostream<char, std::__1::char_traits<char>>& std::__1::__put_character_sequence[abi:v160006]<char, std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>>&, char const*, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af5990 (   0x188) std::__1::ostreambuf_iterator<char, std::__1::char_traits<char>> std::__1::__pad_and_output[abi:v160006]<char, std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char, std::__1::char_traits<char>>, char const*, char const*, char const*, std::__1::ios_base&, char) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af5b18 (    0x20) OUTLINED_FUNCTION_0 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af5b38 (    0x84) TLCompositeTransliteratorLexicon::TLCompositeTransliteratorLexicon(__CFLocale const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af5bbc (    0x38) nlp::CFScopedPtr<_LXLexicon const*>::reset(_LXLexicon const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af5bf4 (   0x260) TLCompositeTransliteratorLexicon::loadLatinToIDMap(__CFLocale const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af5e54 (   0x1cc) TLCompositeTransliteratorLexicon::loadIDToNativeMap(__CFLocale const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af6020 (     0x4) TLCompositeTransliteratorLexicon::TLCompositeTransliteratorLexicon(__CFLocale const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af6024 (    0x3c) TLCompositeTransliteratorLexicon::~TLCompositeTransliteratorLexicon() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af6060 (    0x3c) TLCompositeTransliteratorLexicon::~TLCompositeTransliteratorLexicon() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af609c (    0x9c) TLCompositeTransliteratorLexicon::getTokenIDForString(_LXLexicon const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af6138 (    0xe0) TLCompositeTransliteratorLexicon::getStringForTokenID(_LXLexicon const*, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af6218 (   0x168) TLCompositeTransliteratorLexicon::lexiconCandidatesForInput(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af6380 (    0x28) TLCompositeTransliteratorLexicon::isMemberOfTheNativeLexicon(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af63a8 (    0xc4) TLOSSignPostlexiconCandidatesForInput::TLOSSignPostlexiconCandidatesForInput() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af646c (   0x1b0) void std::__1::vector<TLCompositeTransliteratorCandidate, std::__1::allocator<TLCompositeTransliteratorCandidate>>::__emplace_back_slow_path<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>&, double, float, TLTransliteratorCandidateType, bool>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>&, double&&, float&&, TLTransliteratorCandidateType&&, bool&&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af661c (    0xa0) TLOSSignPostlexiconCandidatesForInput::~TLOSSignPostlexiconCandidatesForInput() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af66bc (    0x38) nlp::CFScopedPtr<__CFDictionary*>::reset(__CFDictionary*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af66f4 (    0x38) nlp::CFScopedPtr<_LXEntry const*>::reset(_LXEntry const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af672c (   0x694) TLGurmukhiOrthographyChecker::TLGurmukhiOrthographyChecker() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af6dc0 (     0x4) TLGurmukhiOrthographyChecker::TLGurmukhiOrthographyChecker() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af6dc4 (    0x80) TLGurmukhiOrthographyChecker::~TLGurmukhiOrthographyChecker() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af6e44 (     0x4) TLGurmukhiOrthographyChecker::~TLGurmukhiOrthographyChecker() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af6e48 (    0x28) TLGurmukhiOrthographyChecker::~TLGurmukhiOrthographyChecker() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af6e70 (    0x50) TLGurmukhiOrthographyChecker::isVowelSign(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af6ec0 (    0x64) TLGurmukhiOrthographyChecker::canViramaFollowLetter(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af6f24 (    0x8c) TLGurmukhiOrthographyChecker::canViramaPrecedeLetter(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af6fb0 (   0x1b0) TLGurmukhiOrthographyChecker::canTippiFollowCharacter(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af7160 (    0x40) TLGurmukhiOrthographyChecker::canAddakPrecedeLetter(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af71a0 (    0x8c) TLGurmukhiOrthographyChecker::canNuktaFollowLetter(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af722c (   0x238) TLGurmukhiOrthographyChecker::isInvalidConsecutiveDiacritics(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af7464 (   0x18c) TLGurmukhiOrthographyChecker::isInvalidViramaFollowingConsonantOrNothing(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af75f0 (   0x200) TLGurmukhiOrthographyChecker::isInvalidDiacriticAfterVowelLetter(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af77f0 (   0x130) TLGurmukhiOrthographyChecker::isInvalidAddakFollowingConsonant(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af7920 (    0xf4) TLGurmukhiOrthographyChecker::isInvalidNuktaAfterConsonant(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af7a14 (    0x50) TLGurmukhiOrthographyChecker::isInvalidGurmukhiLetter(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af7a64 (    0xa0) TLGurmukhiOrthographyChecker::checkSpelling(__CFString const*, __CFString const**, __CFString const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af7b04 (   0x784) TLTeluguOrthographyChecker::TLTeluguOrthographyChecker() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af8288 (     0x4) TLTeluguOrthographyChecker::TLTeluguOrthographyChecker() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af828c (    0x80) TLTeluguOrthographyChecker::~TLTeluguOrthographyChecker() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af830c (     0x4) TLTeluguOrthographyChecker::~TLTeluguOrthographyChecker() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af8310 (    0x28) TLTeluguOrthographyChecker::~TLTeluguOrthographyChecker() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af8338 (    0x50) TLTeluguOrthographyChecker::isVowelSign(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af8388 (    0x50) TLTeluguOrthographyChecker::canCandrabinduFollowVowelSign(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af83d8 (    0x64) TLTeluguOrthographyChecker::canViramaFollowLetter(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af843c (    0x6c) TLTeluguOrthographyChecker::canViramaPrecedeLetter(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af84a8 (   0x280) TLTeluguOrthographyChecker::isInvalidConsecutiveDiacritics(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af8728 (   0x190) TLTeluguOrthographyChecker::isInvalidViramaFollowingConsonantOrNothing(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af88b8 (   0x100) TLTeluguOrthographyChecker::isInvalidDiacriticAfterVowelLetter(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af89b8 (    0x50) TLTeluguOrthographyChecker::isInvalidTeluguLetter(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af8a08 (    0x80) TLTeluguOrthographyChecker::checkSpelling(__CFString const*, __CFString const**, __CFString const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af8a88 (   0x750) TLGujaratiOrthographyChecker::TLGujaratiOrthographyChecker() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af91d8 (     0x4) TLGujaratiOrthographyChecker::TLGujaratiOrthographyChecker() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af91dc (    0x80) TLGujaratiOrthographyChecker::~TLGujaratiOrthographyChecker() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af925c (     0x4) TLGujaratiOrthographyChecker::~TLGujaratiOrthographyChecker() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af9260 (    0x28) TLGujaratiOrthographyChecker::~TLGujaratiOrthographyChecker() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af9288 (    0x50) TLGujaratiOrthographyChecker::isVowelSign(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af92d8 (    0x50) TLGujaratiOrthographyChecker::canCandrabinduFollowVowelSign(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af9328 (    0x64) TLGujaratiOrthographyChecker::canViramaFollowLetter(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af938c (    0x6c) TLGujaratiOrthographyChecker::canViramaPrecedeLetter(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af93f8 (   0x280) TLGujaratiOrthographyChecker::isInvalidConsecutiveDiacritics(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af9678 (   0x190) TLGujaratiOrthographyChecker::isInvalidViramaFollowingConsonantOrNothing(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af9808 (   0x100) TLGujaratiOrthographyChecker::isInvalidDiacriticAfterVowelLetter(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af9908 (    0x50) TLGujaratiOrthographyChecker::isInvalidGujaratiLetter(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af9958 (    0x80) TLGujaratiOrthographyChecker::checkSpelling(__CFString const*, __CFString const**, __CFString const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af99d8 (   0x4b0) TLUrduOrthographyChecker::TLUrduOrthographyChecker() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af9e88 (     0x4) TLUrduOrthographyChecker::TLUrduOrthographyChecker() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af9e8c (    0x48) TLUrduOrthographyChecker::~TLUrduOrthographyChecker() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af9ed4 (    0x48) TLUrduOrthographyChecker::~TLUrduOrthographyChecker() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af9f1c (    0x58) TLUrduOrthographyChecker::~TLUrduOrthographyChecker() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af9f74 (    0x50) TLUrduOrthographyChecker::allValidUrduLetters(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215af9fc4 (    0x50) TLUrduOrthographyChecker::checkSpelling(__CFString const*, __CFString const**, __CFString const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215afa014 (     0xc) _nlpLoggingSubsystem [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215afa020 (    0x44) _nlpDefaultLog [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215afa064 (    0x30) ___nlpDefaultLog_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215afa094 (    0x44) _nlpSignpostLog [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215afa0d8 (    0x30) ___nlpSignpostLog_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215afa108 (   0x7d8) TLMalayalamOrthographyChecker::TLMalayalamOrthographyChecker() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215afa8e0 (     0x4) TLMalayalamOrthographyChecker::TLMalayalamOrthographyChecker() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215afa8e4 (    0x80) TLMalayalamOrthographyChecker::~TLMalayalamOrthographyChecker() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215afa964 (     0x4) TLMalayalamOrthographyChecker::~TLMalayalamOrthographyChecker() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215afa968 (    0x28) TLMalayalamOrthographyChecker::~TLMalayalamOrthographyChecker() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215afa990 (    0x50) TLMalayalamOrthographyChecker::isVowelSign(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215afa9e0 (    0x50) TLMalayalamOrthographyChecker::canCandrabinduFollowVowelSign(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215afaa30 (    0x40) TLMalayalamOrthographyChecker::canViramaFollowLetter(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215afaa70 (    0x6c) TLMalayalamOrthographyChecker::canViramaPrecedeLetter(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215afaadc (   0x250) TLMalayalamOrthographyChecker::isInvalidConsecutiveDiacritics(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215afad2c (   0x1a0) TLMalayalamOrthographyChecker::isInvalidViramaFollowingConsonantOrNothing(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215afaecc (   0x100) TLMalayalamOrthographyChecker::isInvalidDiacriticAfterVowelLetter(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215afafcc (    0x50) TLMalayalamOrthographyChecker::isInvalidMalayalamLetter(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215afb01c (    0x80) TLMalayalamOrthographyChecker::checkSpelling(__CFString const*, __CFString const**, __CFString const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215afb09c (   0x774) TLKannadaOrthographyChecker::TLKannadaOrthographyChecker() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215afb810 (     0x4) TLKannadaOrthographyChecker::TLKannadaOrthographyChecker() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215afb814 (    0x80) TLKannadaOrthographyChecker::~TLKannadaOrthographyChecker() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215afb894 (     0x4) TLKannadaOrthographyChecker::~TLKannadaOrthographyChecker() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215afb898 (    0x28) TLKannadaOrthographyChecker::~TLKannadaOrthographyChecker() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215afb8c0 (    0x50) TLKannadaOrthographyChecker::isVowelSign(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215afb910 (    0x50) TLKannadaOrthographyChecker::canCandrabinduFollowVowelSign(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215afb960 (    0x64) TLKannadaOrthographyChecker::canViramaFollowLetter(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215afb9c4 (    0x6c) TLKannadaOrthographyChecker::canViramaPrecedeLetter(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215afba30 (   0x280) TLKannadaOrthographyChecker::isInvalidConsecutiveDiacritics(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215afbcb0 (   0x190) TLKannadaOrthographyChecker::isInvalidViramaFollowingConsonantOrNothing(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215afbe40 (   0x100) TLKannadaOrthographyChecker::isInvalidDiacriticAfterVowelLetter(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215afbf40 (    0x50) TLKannadaOrthographyChecker::isInvalidKannadaLetter(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215afbf90 (    0x80) TLKannadaOrthographyChecker::checkSpelling(__CFString const*, __CFString const**, __CFString const**) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215afc010 (    0xdc) TLLanguageModel::create(TLLanguageModelCreateOptions const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215afc0ec (   0x520) TLCompositeTransliterator::TLCompositeTransliterator(__CFLocale const*, __CFURL const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215afc60c (    0x40) std::__1::unique_ptr<TLCompositeTransliteratorException, std::__1::default_delete<TLCompositeTransliteratorException>>::reset[abi:v160006](TLCompositeTransliteratorException*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215afc64c (    0x40) std::__1::unique_ptr<TLCompositeTransliteratorLexicon, std::__1::default_delete<TLCompositeTransliteratorLexicon>>::reset[abi:v160006](TLCompositeTransliteratorLexicon*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215afc68c (    0x44) TLLanguageModelCreateOptions::~TLLanguageModelCreateOptions() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215afc6d0 (     0x4) TLCompositeTransliterator::TLCompositeTransliterator(__CFLocale const*, __CFURL const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215afc6d4 (    0xbc) TLCompositeTransliterator::~TLCompositeTransliterator() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215afc790 (     0x4) TLCompositeTransliterator::~TLCompositeTransliterator() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215afc794 (    0xbc) TLCompositeTransliterator::isTransliteratedWordInLexiconForCandidate(TLCompositeTransliteratorCandidate const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215afc850 (   0x3f8) TLCompositeTransliterator::updateCandidatesWithEmojiCandidates(std::__1::vector<TLCompositeTransliteratorCandidate, std::__1::allocator<TLCompositeTransliteratorCandidate>>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215afcc48 (   0x214) std::__1::__wrap_iter<TLCompositeTransliteratorCandidate*> std::__1::vector<TLCompositeTransliteratorCandidate, std::__1::allocator<TLCompositeTransliteratorCandidate>>::insert<std::__1::__wrap_iter<TLCompositeTransliteratorCandidate*>, 0>(std::__1::__wrap_iter<TLCompositeTransliteratorCandidate const*>, std::__1::__wrap_iter<TLCompositeTransliteratorCandidate*>, std::__1::__wrap_iter<TLCompositeTransliteratorCandidate*>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215afce5c (   0x114) TLCompositeTransliterator::performOrthographyCheck(std::__1::vector<TLCompositeTransliteratorCandidate, std::__1::allocator<TLCompositeTransliteratorCandidate>>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215afcf70 (   0x130) TLCompositeTransliterator::assignLanguageModelScoreToCandidates(std::__1::vector<TLCompositeTransliteratorCandidate, std::__1::allocator<TLCompositeTransliteratorCandidate>>&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>> const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215afd0a0 (   0x668) TLCompositeTransliterator::getTransliterationCandidates(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, unsigned long) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215afd708 (    0xd8) candidateSurfaceFormPresentInVector(TLCompositeTransliteratorCandidate const&, std::__1::vector<TLCompositeTransliteratorCandidate, std::__1::allocator<TLCompositeTransliteratorCandidate>> const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215afd7e0 (    0x98) std::__1::vector<TLCompositeTransliteratorCandidate, std::__1::allocator<TLCompositeTransliteratorCandidate>>::resize(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215afd878 (    0xb8) applesauce::CF::StringRef::StringRef(__CFString const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215afd930 (   0x118) void std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>::__push_back_slow_path<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215afda48 (   0x1ac) void std::__1::vector<TLCompositeTransliteratorCandidate, std::__1::allocator<TLCompositeTransliteratorCandidate>>::__emplace_back_slow_path<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>&, double, double, TLTransliteratorCandidateType, bool&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>&, double&&, double&&, TLTransliteratorCandidateType&&, bool&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215afdbf4 (    0x44) TLCompositeTransliteratorCandidate::~TLCompositeTransliteratorCandidate() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215afdc38 (    0xa0) std::__1::vector<TLCompositeTransliteratorCandidate, std::__1::allocator<TLCompositeTransliteratorCandidate>>::__move_range(TLCompositeTransliteratorCandidate*, TLCompositeTransliteratorCandidate*, TLCompositeTransliteratorCandidate*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215afdcd8 (   0x11c) std::__1::vector<TLCompositeTransliteratorCandidate, std::__1::allocator<TLCompositeTransliteratorCandidate>>::__swap_out_circular_buffer(std::__1::__split_buffer<TLCompositeTransliteratorCandidate, std::__1::allocator<TLCompositeTransliteratorCandidate>&>&, TLCompositeTransliteratorCandidate*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215afddf4 (    0x84) TLCompositeTransliteratorCandidate* std::__1::__uninitialized_allocator_copy[abi:v160006]<std::__1::allocator<TLCompositeTransliteratorCandidate>, std::__1::__wrap_iter<TLCompositeTransliteratorCandidate*>, std::__1::__wrap_iter<TLCompositeTransliteratorCandidate*>, TLCompositeTransliteratorCandidate*>(std::__1::allocator<TLCompositeTransliteratorCandidate>&, std::__1::__wrap_iter<TLCompositeTransliteratorCandidate*>, std::__1::__wrap_iter<TLCompositeTransliteratorCandidate*>, TLCompositeTransliteratorCandidate*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215afde78 (    0xa8) TLCompositeTransliteratorCandidate* std::__1::construct_at[abi:v160006]<TLCompositeTransliteratorCandidate, TLCompositeTransliteratorCandidate&, TLCompositeTransliteratorCandidate*>(TLCompositeTransliteratorCandidate*, TLCompositeTransliteratorCandidate&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215afdf20 (    0xe4) std::__1::pair<TLCompositeTransliteratorCandidate*, TLCompositeTransliteratorCandidate*> std::__1::__move_backward_loop<std::__1::_ClassicAlgPolicy>::operator()[abi:v160006]<TLCompositeTransliteratorCandidate*, TLCompositeTransliteratorCandidate*, TLCompositeTransliteratorCandidate*>(TLCompositeTransliteratorCandidate*, TLCompositeTransliteratorCandidate*, TLCompositeTransliteratorCandidate*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215afe004 (    0x80) std::__1::pair<TLCompositeTransliteratorCandidate*, TLCompositeTransliteratorCandidate*> std::__1::__copy_loop<std::__1::_ClassicAlgPolicy>::operator()[abi:v160006]<TLCompositeTransliteratorCandidate*, TLCompositeTransliteratorCandidate*, TLCompositeTransliteratorCandidate*>(TLCompositeTransliteratorCandidate*, TLCompositeTransliteratorCandidate*, TLCompositeTransliteratorCandidate*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215afe084 (    0xb8) std::__1::pair<TLCompositeTransliteratorCandidate*, TLCompositeTransliteratorCandidate*> std::__1::__move_loop<std::__1::_ClassicAlgPolicy>::operator()[abi:v160006]<TLCompositeTransliteratorCandidate*, TLCompositeTransliteratorCandidate*, TLCompositeTransliteratorCandidate*>(TLCompositeTransliteratorCandidate*, TLCompositeTransliteratorCandidate*, TLCompositeTransliteratorCandidate*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215afe13c (    0xc4) TLOSSignPostgetTransliterationCandidates::TLOSSignPostgetTransliterationCandidates() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215afe200 (   0x17c) void std::__1::vector<TLCompositeTransliteratorCandidate, std::__1::allocator<TLCompositeTransliteratorCandidate>>::assign<TLCompositeTransliteratorCandidate*, 0>(TLCompositeTransliteratorCandidate*, TLCompositeTransliteratorCandidate*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215afe37c (    0x68) std::__1::vector<TLCompositeTransliteratorCandidate, std::__1::allocator<TLCompositeTransliteratorCandidate>>::__vdeallocate() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215afe3e4 (    0x54) std::__1::vector<TLCompositeTransliteratorCandidate, std::__1::allocator<TLCompositeTransliteratorCandidate>>::__vallocate[abi:v160006](unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215afe438 (    0x84) TLCompositeTransliteratorCandidate* std::__1::__uninitialized_allocator_copy[abi:v160006]<std::__1::allocator<TLCompositeTransliteratorCandidate>, TLCompositeTransliteratorCandidate*, TLCompositeTransliteratorCandidate*, TLCompositeTransliteratorCandidate*>(std::__1::allocator<TLCompositeTransliteratorCandidate>&, TLCompositeTransliteratorCandidate*, TLCompositeTransliteratorCandidate*, TLCompositeTransliteratorCandidate*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215afe4bc (   0x174) void std::__1::vector<TLCompositeTransliteratorCandidate, std::__1::allocator<TLCompositeTransliteratorCandidate>>::__push_back_slow_path<TLCompositeTransliteratorCandidate const&>(TLCompositeTransliteratorCandidate const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215afe630 (    0xa8) TLCompositeTransliteratorCandidate* std::__1::construct_at[abi:v160006]<TLCompositeTransliteratorCandidate, TLCompositeTransliteratorCandidate const&, TLCompositeTransliteratorCandidate*>(TLCompositeTransliteratorCandidate*, TLCompositeTransliteratorCandidate const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215afe6d8 (   0x188) std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char>>::basic_ostringstream[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215afe860 (    0xf4) std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char>>::~basic_ostringstream() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215afe954 (   0x1d0) std::__1::vector<TLCompositeTransliteratorCandidate, std::__1::allocator<TLCompositeTransliteratorCandidate>>::__append(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215afeb24 (    0xa0) TLOSSignPostgetTransliterationCandidates::~TLOSSignPostgetTransliterationCandidates() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215afebc4 (    0x38) nlp::CFScopedPtr<__EmojiLocaleDataWrapper const*>::reset(__EmojiLocaleDataWrapper const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215afebfc (    0x5c) std::__1::default_delete<TLCompositeTransliteratorSeq2Seq>::operator()[abi:v160006](TLCompositeTransliteratorSeq2Seq*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215afec58 (    0x38) nlp::CFScopedPtr<__CFArray const*>::reset(__CFArray const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215afec90 (    0x6c) std::__1::pair<TLCompositeTransliteratorCandidate*, long> std::__1::get_temporary_buffer[abi:v160006]<TLCompositeTransliteratorCandidate>(long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215afecfc (   0x5ac) void std::__1::__stable_sort<std::__1::_ClassicAlgPolicy, TLCompositeTransliterator::assignLanguageModelScoreToCandidates(std::__1::vector<TLCompositeTransliteratorCandidate, std::__1::allocator<TLCompositeTransliteratorCandidate>>&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>> const&) const::$_3&, std::__1::__wrap_iter<TLCompositeTransliteratorCandidate*>>(std::__1::__wrap_iter<TLCompositeTransliteratorCandidate*>, std::__1::__wrap_iter<TLCompositeTransliteratorCandidate*>, TLCompositeTransliterator::assignLanguageModelScoreToCandidates(std::__1::vector<TLCompositeTransliteratorCandidate, std::__1::allocator<TLCompositeTransliteratorCandidate>>&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::...
                0x0000000215aff2a8 (   0x174) void std::__1::_IterOps<std::__1::_ClassicAlgPolicy>::iter_swap[abi:v160006]<std::__1::__wrap_iter<TLCompositeTransliteratorCandidate*>&, std::__1::__wrap_iter<TLCompositeTransliteratorCandidate*>&>(std::__1::__wrap_iter<TLCompositeTransliteratorCandidate*>&, std::__1::__wrap_iter<TLCompositeTransliteratorCandidate*>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215aff41c (   0x660) void std::__1::__stable_sort_move<std::__1::_ClassicAlgPolicy, TLCompositeTransliterator::assignLanguageModelScoreToCandidates(std::__1::vector<TLCompositeTransliteratorCandidate, std::__1::allocator<TLCompositeTransliteratorCandidate>>&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>> const&) const::$_3&, std::__1::__wrap_iter<TLCompositeTransliteratorCandidate*>>(std::__1::__wrap_iter<TLCompositeTransliteratorCandidate*>, std::__1::__wrap_iter<TLCompositeTransliteratorCandidate*>, TLCompositeTransliterator::assignLanguageModelScoreToCandidates(std::__1::vector<TLCompositeTransliteratorCandidate, std::__1::allocator<TLCompositeTransliteratorCandidate>>&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<...
                0x0000000215affa7c (   0x684) void std::__1::__inplace_merge<std::__1::_ClassicAlgPolicy, TLCompositeTransliterator::assignLanguageModelScoreToCandidates(std::__1::vector<TLCompositeTransliteratorCandidate, std::__1::allocator<TLCompositeTransliteratorCandidate>>&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>> const&) const::$_3&, std::__1::__wrap_iter<TLCompositeTransliteratorCandidate*>>(std::__1::__wrap_iter<TLCompositeTransliteratorCandidate*>, std::__1::__wrap_iter<TLCompositeTransliteratorCandidate*>, std::__1::__wrap_iter<TLCompositeTransliteratorCandidate*>, TLCompositeTransliterator::assignLanguageModelScoreToCandidates(std::__1::vector<TLCompositeTransliteratorCandidate, std::__1::allocator<TLCompositeTransliteratorCandidate>>&, std::__1::vector<std::__1::basic_string<char, std::__1::char_trait...
                0x0000000215b00100 (    0x6c) void std::__1::__destruct_n::__process[abi:v160006]<TLCompositeTransliteratorCandidate>(TLCompositeTransliteratorCandidate*, std::__1::integral_constant<bool, false>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215b0016c (    0xcc) std::__1::pair<std::__1::__unconstrained_reverse_iterator<TLCompositeTransliteratorCandidate*>, std::__1::__unconstrained_reverse_iterator<std::__1::__wrap_iter<TLCompositeTransliteratorCandidate*>>> std::__1::__move_loop<std::__1::_ClassicAlgPolicy>::operator()[abi:v160006]<std::__1::__unconstrained_reverse_iterator<TLCompositeTransliteratorCandidate*>, std::__1::__unconstrained_reverse_iterator<TLCompositeTransliteratorCandidate*>, std::__1::__unconstrained_reverse_iterator<std::__1::__wrap_iter<TLCompositeTransliteratorCandidate*>>>(std::__1::__unconstrained_reverse_iterator<TLCompositeTransliteratorCandidate*>, std::__1::__unconstrained_reverse_iterator<TLCompositeTransliteratorCandidate*>, std::__1::__unconstrained_reverse_iterator<std::__1::__wrap_iter<TLCompositeTransliteratorCandidate*>>) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215b00238 (    0xb4) std::__1::__wrap_iter<TLCompositeTransliteratorCandidate*> std::__1::__rotate_forward[abi:v160006]<std::__1::_ClassicAlgPolicy, std::__1::__wrap_iter<TLCompositeTransliteratorCandidate*>>(std::__1::__wrap_iter<TLCompositeTransliteratorCandidate*>, std::__1::__wrap_iter<TLCompositeTransliteratorCandidate*>, std::__1::__wrap_iter<TLCompositeTransliteratorCandidate*>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215b002ec (    0x48) +[TLBundle mainBundle] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215b00334 (    0x88) TLCreateStringWithValidatedFormat(__CFString const*, __CFString const*, ...) (.cold.1) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215b003bc (    0x44) -[EMTResult(MetaInfo) score].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215b00400 (    0x80) -[EMTResult(MetaInfo) score].cold.2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215b00480 (    0x70) -[EMTResult(MetaInfo) score].cold.3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215b004f0 (    0x70) -[EMTResult(MetaInfo) score].cold.4 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215b00560 (    0x8c) TLCompositeTransliteratorSeq2Seq::seq2SeqCandidatesForInput(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) const (.cold.1) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215b005ec (    0x9c) invocation function for block in TLCompositeTransliteratorCandidate::getTotalScore() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215b00688 (    0x74) invocation function for block in TLCompositeTransliteratorCandidate::getTotalScore() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215b006fc (    0x74) invocation function for block in TLCompositeTransliteratorCandidate::getTotalScore() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000215b00770 (    0x88) TLCompositeTransliterator::getTransliterationCandidates(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, unsigned long) const (.cold.1) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
            0x0000000215b007f8 (   0xab0) __TEXT __auth_stubs
                0x0000000215b007f8 (    0x10) DYLD-STUB$$CEMEmojiLocaleDataCreateEmojiTokensForString [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00808 (    0x10) DYLD-STUB$$CEMEmojiTokenGetString [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00818 (    0x10) DYLD-STUB$$CFArrayAppendValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00828 (    0x10) DYLD-STUB$$CFArrayCreateMutable [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00838 (    0x10) DYLD-STUB$$CFArrayGetCount [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00848 (    0x10) DYLD-STUB$$CFArrayGetValueAtIndex [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00858 (    0x10) DYLD-STUB$$CFBurstTrieAddUTF8String [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00868 (    0x10) DYLD-STUB$$CFBurstTrieCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00878 (    0x10) DYLD-STUB$$CFBurstTrieCreateFromMapBytes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00888 (    0x10) DYLD-STUB$$CFBurstTrieFindUTF8String [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00898 (    0x10) DYLD-STUB$$CFBurstTrieRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b008a8 (    0x10) DYLD-STUB$$CFBurstTrieSerializeWithFileDescriptor [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b008b8 (    0x10) DYLD-STUB$$CFCharacterSetCreateCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b008c8 (    0x10) DYLD-STUB$$CFCharacterSetCreateInvertedSet [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b008d8 (    0x10) DYLD-STUB$$CFCharacterSetCreateMutableCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b008e8 (    0x10) DYLD-STUB$$CFCharacterSetCreateWithCharactersInString [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b008f8 (    0x10) DYLD-STUB$$CFCharacterSetIsCharacterMember [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00908 (    0x10) DYLD-STUB$$CFCharacterSetUnion [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00918 (    0x10) DYLD-STUB$$CFDictionaryAddValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00928 (    0x10) DYLD-STUB$$CFDictionaryCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00938 (    0x10) DYLD-STUB$$CFDictionaryCreateMutable [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00948 (    0x10) DYLD-STUB$$CFDictionaryGetValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00958 (    0x10) DYLD-STUB$$CFErrorCopyDescription [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00968 (    0x10) DYLD-STUB$$CFGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00978 (    0x10) DYLD-STUB$$CFLocaleCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00988 (    0x10) DYLD-STUB$$CFLocaleGetValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00998 (    0x10) DYLD-STUB$$CFNumberCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b009a8 (    0x10) DYLD-STUB$$CFNumberGetValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b009b8 (    0x10) DYLD-STUB$$CFRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b009c8 (    0x10) DYLD-STUB$$CFStringAppend [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b009d8 (    0x10) DYLD-STUB$$CFStringCompare [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b009e8 (    0x10) DYLD-STUB$$CFStringCreateMutable [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b009f8 (    0x10) DYLD-STUB$$CFStringCreateMutableCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00a08 (    0x10) DYLD-STUB$$CFStringCreateStringWithValidatedFormatAndArguments [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00a18 (    0x10) DYLD-STUB$$CFStringCreateWithBytes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00a28 (    0x10) DYLD-STUB$$CFStringCreateWithCString [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00a38 (    0x10) DYLD-STUB$$CFStringCreateWithCharacters [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00a48 (    0x10) DYLD-STUB$$CFStringCreateWithFormat [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00a58 (    0x10) DYLD-STUB$$CFStringCreateWithSubstring [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00a68 (    0x10) DYLD-STUB$$CFStringFind [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00a78 (    0x10) DYLD-STUB$$CFStringFindCharacterFromSet [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00a88 (    0x10) DYLD-STUB$$CFStringFindWithOptions [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00a98 (    0x10) DYLD-STUB$$CFStringGetBytes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00aa8 (    0x10) DYLD-STUB$$CFStringGetCString [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00ab8 (    0x10) DYLD-STUB$$CFStringGetCStringPtr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00ac8 (    0x10) DYLD-STUB$$CFStringGetCharacterAtIndex [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00ad8 (    0x10) DYLD-STUB$$CFStringGetLength [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00ae8 (    0x10) DYLD-STUB$$CFStringGetMaximumSizeForEncoding [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00af8 (    0x10) DYLD-STUB$$CFStringGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00b08 (    0x10) DYLD-STUB$$CFStringHasSuffix [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00b18 (    0x10) DYLD-STUB$$CFStringReplace [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00b28 (    0x10) DYLD-STUB$$CFStringTrimWhitespace [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00b38 (    0x10) DYLD-STUB$$CFURLCopyLastPathComponent [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00b48 (    0x10) DYLD-STUB$$CFURLCopyPath [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00b58 (    0x10) DYLD-STUB$$CFURLCreateCopyAppendingPathComponent [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00b68 (    0x10) DYLD-STUB$$CFURLGetFileSystemRepresentation [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00b78 (    0x10) DYLD-STUB$$LMEnumerateAssetDataItems [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00b88 (    0x10) DYLD-STUB$$LXEntryCopyString [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00b98 (    0x10) DYLD-STUB$$LXLexiconCopyEntryForTokenID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00ba8 (    0x10) DYLD-STUB$$LXLexiconCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00bb8 (    0x10) DYLD-STUB$$LXLexiconGetFirstTokenIDForString [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00bc8 (    0x10) DYLD-STUB$$_Block_object_assign [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00bd8 (    0x10) DYLD-STUB$$_Block_object_dispose [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00be8 (    0x10) DYLD-STUB$$_Unwind_Resume [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00bf8 (    0x10) DYLD-STUB$$language_modeling::v1::Probability::~Probability() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00c08 (    0x10) DYLD-STUB$$language_modeling::v1::LanguageModel::wireMemory() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00c18 (    0x10) DYLD-STUB$$language_modeling::v1::LanguageModel::unwireMemory() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00c28 (    0x10) DYLD-STUB$$language_modeling::v1::LanguageModel::init(std::__1::map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::variant<bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const, std::__1::variant<bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>>> const&, std::__1::optional<LM::TrialParameters> const&) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00c38 (    0x10) DYLD-STUB$$language_modeling::v1::LanguageModel::LanguageModel() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00c48 (    0x10) DYLD-STUB$$language_modeling::v1::LanguageModel::~LanguageModel() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00c58 (    0x10) DYLD-STUB$$language_modeling::v1::LinguisticContext::push_back(language_modeling::v1::Token const&) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00c68 (    0x10) DYLD-STUB$$language_modeling::v1::LinguisticContext::LinguisticContext() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00c78 (    0x10) DYLD-STUB$$language_modeling::v1::LinguisticContext::~LinguisticContext() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00c88 (    0x10) DYLD-STUB$$language_modeling::v1::LanguageModelSession::supportsFragmentsBasedConditionalProbability() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00c98 (    0x10) DYLD-STUB$$language_modeling::v1::LanguageModelSession::~LanguageModelSession() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00ca8 (    0x10) DYLD-STUB$$language_modeling::v1::Probability::probability(language_modeling::v1::Probability::Source) const [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00cb8 (    0x10) DYLD-STUB$$language_modeling::v1::LanguageModel::makeDefaultSession() const [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00cc8 (    0x10) DYLD-STUB$$language_modeling::v1::LanguageModelSession::canReasonAbout(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) const [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00cd8 (    0x10) DYLD-STUB$$language_modeling::v1::LanguageModelSession::detailedConditionalProbability(language_modeling::v1::Token const&, language_modeling::v1::LinguisticContext const&) const [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00ce8 (    0x10) DYLD-STUB$$std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char>>::str() const [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00cf8 (    0x10) DYLD-STUB$$std::__1::locale::use_facet(std::__1::locale::id&) const [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00d08 (    0x10) DYLD-STUB$$std::__1::ios_base::getloc() const [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00d18 (    0x10) DYLD-STUB$$std::logic_error::logic_error(char const*) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00d28 (    0x10) DYLD-STUB$$std::runtime_error::runtime_error(char const*) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00d38 (    0x10) DYLD-STUB$$std::bad_array_new_length::bad_array_new_length() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00d48 (    0x10) DYLD-STUB$$std::__1::__next_prime(unsigned long) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00d58 (    0x10) DYLD-STUB$$std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__grow_by_and_replace(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, char const*) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00d68 (    0x10) DYLD-STUB$$std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::push_back(char) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00d78 (    0x10) DYLD-STUB$$std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::operator=(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00d88 (    0x10) DYLD-STUB$$std::__1::basic_ostream<char, std::__1::char_traits<char>>::put(char) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00d98 (    0x10) DYLD-STUB$$std::__1::basic_ostream<char, std::__1::char_traits<char>>::flush() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00da8 (    0x10) DYLD-STUB$$std::__1::basic_ostream<char, std::__1::char_traits<char>>::sentry::sentry(std::__1::basic_ostream<char, std::__1::char_traits<char>>&) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00db8 (    0x10) DYLD-STUB$$std::__1::basic_ostream<char, std::__1::char_traits<char>>::sentry::~sentry() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00dc8 (    0x10) DYLD-STUB$$std::__1::basic_ostream<char, std::__1::char_traits<char>>::~basic_ostream() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00dd8 (    0x10) DYLD-STUB$$std::__1::basic_ostream<char, std::__1::char_traits<char>>::operator<<(double) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00de8 (    0x10) DYLD-STUB$$std::__1::basic_streambuf<char, std::__1::char_traits<char>>::basic_streambuf() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00df8 (    0x10) DYLD-STUB$$std::__1::basic_streambuf<char, std::__1::char_traits<char>>::~basic_streambuf() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00e08 (    0x10) DYLD-STUB$$std::__1::__shared_weak_count::__release_weak() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00e18 (    0x10) DYLD-STUB$$std::__1::__shared_weak_count::lock() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00e28 (    0x10) DYLD-STUB$$std::__1::__shared_weak_count::~__shared_weak_count() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00e38 (    0x10) DYLD-STUB$$std::__1::locale::~locale() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00e48 (    0x10) DYLD-STUB$$std::__1::ios_base::__set_badbit_and_consider_rethrow() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00e58 (    0x10) DYLD-STUB$$std::__1::ios_base::init(void*) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00e68 (    0x10) DYLD-STUB$$std::__1::ios_base::clear(unsigned int) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00e78 (    0x10) DYLD-STUB$$std::__1::basic_ios<char, std::__1::char_traits<char>>::~basic_ios() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00e88 (    0x10) DYLD-STUB$$std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> std::__1::operator+<char, std::__1::char_traits<char>, std::__1::allocator<char>>(char const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00e98 (    0x10) DYLD-STUB$$std::exception::~exception() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00ea8 (    0x10) DYLD-STUB$$std::terminate() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00eb8 (    0x10) DYLD-STUB$$operator delete[](void*) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00ec8 (    0x10) DYLD-STUB$$operator delete(void*) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00ed8 (    0x10) DYLD-STUB$$operator new[](unsigned long) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00ee8 (    0x10) DYLD-STUB$$operator new(unsigned long) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00ef8 (    0x10) DYLD-STUB$$operator new(unsigned long, std::nothrow_t const&) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00f08 (    0x10) DYLD-STUB$$__cxa_allocate_exception [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00f18 (    0x10) DYLD-STUB$$__cxa_begin_catch [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00f28 (    0x10) DYLD-STUB$$__cxa_end_catch [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00f38 (    0x10) DYLD-STUB$$__cxa_free_exception [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00f48 (    0x10) DYLD-STUB$$__cxa_guard_acquire [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00f58 (    0x10) DYLD-STUB$$__cxa_guard_release [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00f68 (    0x10) DYLD-STUB$$__cxa_throw [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00f78 (    0x10) DYLD-STUB$$__maskrune [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00f88 (    0x10) DYLD-STUB$$__stack_chk_fail [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00f98 (    0x10) DYLD-STUB$$__tolower [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00fa8 (    0x10) DYLD-STUB$$_os_log_debug_impl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00fb8 (    0x10) DYLD-STUB$$_os_log_error_impl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00fc8 (    0x10) DYLD-STUB$$_os_log_impl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00fd8 (    0x10) DYLD-STUB$$_os_signpost_emit_with_name_impl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00fe8 (    0x10) DYLD-STUB$$bzero [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b00ff8 (    0x10) DYLD-STUB$$close [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b01008 (    0x10) DYLD-STUB$$dispatch_once [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b01018 (    0x10) DYLD-STUB$$dispatch_queue_attr_make_with_qos_class [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b01028 (    0x10) DYLD-STUB$$dispatch_queue_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b01038 (    0x10) DYLD-STUB$$dispatch_semaphore_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b01048 (    0x10) DYLD-STUB$$dispatch_semaphore_signal [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b01058 (    0x10) DYLD-STUB$$dispatch_semaphore_wait [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b01068 (    0x10) DYLD-STUB$$dispatch_sync [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b01078 (    0x10) DYLD-STUB$$dispatch_time [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b01088 (    0x10) DYLD-STUB$$fclose [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b01098 (    0x10) DYLD-STUB$$fcntl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b010a8 (    0x10) DYLD-STUB$$fileno [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b010b8 (    0x10) DYLD-STUB$$fopen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b010c8 (    0x10) DYLD-STUB$$fstat [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b010d8 (    0x10) DYLD-STUB$$lseek [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b010e8 (    0x10) DYLD-STUB$$memcmp [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b010f8 (    0x10) DYLD-STUB$$memmove [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b01108 (    0x10) DYLD-STUB$$memset [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b01118 (    0x10) DYLD-STUB$$mmap [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b01128 (    0x10) DYLD-STUB$$munmap [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b01138 (    0x10) DYLD-STUB$$objc_alloc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b01148 (    0x10) DYLD-STUB$$objc_autoreleaseReturnValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b01158 (    0x10) DYLD-STUB$$objc_enumerationMutation [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b01168 (    0x10) DYLD-STUB$$objc_getProperty [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b01178 (    0x10) DYLD-STUB$$objc_msgSendSuper2 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b01188 (    0x10) DYLD-STUB$$objc_opt_class [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b01198 (    0x10) DYLD-STUB$$objc_opt_isKindOfClass [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b011a8 (    0x10) DYLD-STUB$$objc_release [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b011b8 (    0x10) DYLD-STUB$$objc_retain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b011c8 (    0x10) DYLD-STUB$$objc_retainAutorelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b011d8 (    0x10) DYLD-STUB$$objc_retainAutoreleasedReturnValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b011e8 (    0x10) DYLD-STUB$$objc_setProperty_atomic_copy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b011f8 (    0x10) DYLD-STUB$$objc_storeStrong [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b01208 (    0x10) DYLD-STUB$$open [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b01218 (    0x10) DYLD-STUB$$os_log_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b01228 (    0x10) DYLD-STUB$$os_log_type_enabled [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b01238 (    0x10) DYLD-STUB$$os_signpost_enabled [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b01248 (    0x10) DYLD-STUB$$os_signpost_id_make_with_pointer [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b01258 (    0x10) DYLD-STUB$$pwrite [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b01268 (    0x10) DYLD-STUB$$read [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b01278 (    0x10) DYLD-STUB$$strcmp [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b01288 (    0x10) DYLD-STUB$$strlen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000215b01298 (    0x10) DYLD-STUB$$write [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
            0x0000000215b012a8 (   0x214) __TEXT __objc_methlist
                0x0000000215b012a8 (    0x18) _OBJC_$_INSTANCE_METHODS_EMTResult(MetaInfo) [NameNList, MangledNameNList, NList] 
                0x0000000215b012c0 (    0x78) _OBJC_$_INSTANCE_METHODS_TLTransliterator [NameNList, MangledNameNList, NList] 
                0x0000000215b01338 (    0x38) _OBJC_$_INSTANCE_METHODS_TLTransliteratorCandidateContext [NameNList, MangledNameNList, NList] 
                0x0000000215b01370 (    0x18) _OBJC_$_CLASS_METHODS_TLTransliteratorCandidate [NameNList, MangledNameNList, NList] 
                0x0000000215b01388 (    0xa8) _OBJC_$_INSTANCE_METHODS_TLTransliteratorCandidate [NameNList, MangledNameNList, NList] 
                0x0000000215b01430 (    0x78) _OBJC_$_INSTANCE_METHODS_TLTransliteratorInitParameters [NameNList, MangledNameNList, NList] 
                0x0000000215b014a8 (    0x14) _OBJC_$_CLASS_METHODS_TLBundle [NameNList, MangledNameNList, NList] 
            0x0000000215b014c0 (   0x4a8) __TEXT __const
                0x0000000215b014c0 (    0x38) TransliterationVersionString [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000215b014f8 (    0x38) TransliterationVersionNumber [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000215b01530 (    0x21) typeinfo name for TLDevanagariOrthographyChecker [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000215b01551 (    0x17) typeinfo name for TLOrthographyChecker [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000215b01568 (     0x1) std::__1::piecewise_construct [NameNList, MangledNameNList, NList] 
                0x0000000215b01569 (    0x15) typeinfo name for TLLanguageModelStr [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000215b0157e (    0x12) typeinfo name for TLLanguageModel [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000215b01590 (     0x1) std::__1::piecewise_construct [NameNList, MangledNameNList, NList] 
                0x0000000215b01591 (    0x8a) typeinfo name for std::__1::__shared_ptr_pointer<TL::SharedCFType::Wrapper*, std::__1::shared_ptr<TL::SharedCFType::Wrapper>::__shared_ptr_default_delete<TL::SharedCFType::Wrapper, TL::SharedCFType::Wrapper>, std::__1::allocator<TL::SharedCFType::Wrapper>> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000215b0161b (    0x57) typeinfo name for std::__1::shared_ptr<TL::SharedCFType::Wrapper>::__shared_ptr_default_delete<TL::SharedCFType::Wrapper, TL::SharedCFType::Wrapper> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000215b01672 (    0x46) typeinfo name for std::__1::default_delete<TL::SharedCFType::Wrapper> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000215b016b8 (    0x88) typeinfo name for TLBengaliOrthographyChecker [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000215b01740 (    0x21) typeinfo name for TL::ResourceCreationException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000215b01761 (    0x25) typeinfo name for TL::ReadOnlyFileCreationException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000215b01786 (    0x85) typeinfo name for std::__1::__shared_ptr_pointer<TL::ReadOnlyFile<char>*, std::__1::shared_ptr<TL::ReadOnlyFile<char>>::__shared_ptr_default_delete<TL::ReadOnlyFile<char>, TL::ReadOnlyFile<char>>, std::__1::allocator<TL::ReadOnlyFile<char>>> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000215b0180b (    0x52) typeinfo name for std::__1::shared_ptr<TL::ReadOnlyFile<char>>::__shared_ptr_default_delete<TL::ReadOnlyFile<char>, TL::ReadOnlyFile<char>> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000215b0185d (    0x31) typeinfo name for std::__1::default_delete<TL::ReadOnlyFile<char>> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000215b0188e (     0xa) std::__1::piecewise_construct [NameNList, MangledNameNList, NList] 
                0x0000000215b01898 (    0x1c) typeinfo name for TLTamilOrthographyChecker [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000215b018b4 (    0x1f) typeinfo name for TLGurmukhiOrthographyChecker [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000215b018d3 (    0x1d) typeinfo name for TLTeluguOrthographyChecker [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000215b018f0 (    0x1f) typeinfo name for TLGujaratiOrthographyChecker [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000215b0190f (    0x1b) typeinfo name for TLUrduOrthographyChecker [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000215b0192a (    0x20) typeinfo name for TLMalayalamOrthographyChecker [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000215b0194a (    0x1e) typeinfo name for TLKannadaOrthographyChecker [PEXT, NameNList, MangledNameNList, NList] 
            0x0000000215b01968 (  0x17b4) __TEXT __gcc_except_tab
                0x0000000215b01968 (    0x14) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x0000000215b0197c (    0x10) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x0000000215b0198c (    0x5c) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x0000000215b019e8 (    0x24) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x0000000215b01a0c (    0x10) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x0000000215b01a1c (    0x10) GCC_except_table16 [NameNList, MangledNameNList, NList] 
                0x0000000215b01a2c (    0x10) GCC_except_table21 [NameNList, MangledNameNList, NList] 
                0x0000000215b01a3c (    0x5c) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x0000000215b01a98 (    0x14) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x0000000215b01aac (    0x28) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x0000000215b01ad4 (    0x78) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x0000000215b01b4c (    0x10) GCC_except_table23 [NameNList, MangledNameNList, NList] 
                0x0000000215b01b5c (    0x10) GCC_except_table26 [NameNList, MangledNameNList, NList] 
                0x0000000215b01b6c (    0x10) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x0000000215b01b7c (    0x5c) GCC_except_table12 [NameNList, MangledNameNList, NList] 
                0x0000000215b01bd8 (    0x48) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x0000000215b01c20 (    0x10) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x0000000215b01c30 (    0x18) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x0000000215b01c48 (    0x10) GCC_except_table22 [NameNList, MangledNameNList, NList] 
                0x0000000215b01c58 (    0x10) GCC_except_table32 [NameNList, MangledNameNList, NList] 
                0x0000000215b01c68 (    0x10) GCC_except_table33 [NameNList, MangledNameNList, NList] 
                0x0000000215b01c78 (    0x10) GCC_except_table34 [NameNList, MangledNameNList, NList] 
                0x0000000215b01c88 (    0x10) GCC_except_table36 [NameNList, MangledNameNList, NList] 
                0x0000000215b01c98 (    0x10) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x0000000215b01ca8 (     0xc) GCC_except_table11 [NameNList, MangledNameNList, NList] 
                0x0000000215b01cb4 (     0xc) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x0000000215b01cc0 (    0x88) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x0000000215b01d48 (    0x20) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x0000000215b01d68 (    0x10) GCC_except_table12 [NameNList, MangledNameNList, NList] 
                0x0000000215b01d78 (    0x28) GCC_except_table13 [NameNList, MangledNameNList, NList] 
                0x0000000215b01da0 (    0x18) GCC_except_table21 [NameNList, MangledNameNList, NList] 
                0x0000000215b01db8 (    0x14) GCC_except_table31 [NameNList, MangledNameNList, NList] 
                0x0000000215b01dcc (    0x10) GCC_except_table32 [NameNList, MangledNameNList, NList] 
                0x0000000215b01ddc (    0x10) GCC_except_table33 [NameNList, MangledNameNList, NList] 
                0x0000000215b01dec (    0x10) GCC_except_table34 [NameNList, MangledNameNList, NList] 
                0x0000000215b01dfc (    0x14) GCC_except_table35 [NameNList, MangledNameNList, NList] 
                0x0000000215b01e10 (    0x58) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x0000000215b01e68 (    0x10) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x0000000215b01e78 (    0x20) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x0000000215b01e98 (    0x3c) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x0000000215b01ed4 (    0x40) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x0000000215b01f14 (    0x38) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x0000000215b01f4c (    0x10) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x0000000215b01f5c (    0x10) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x0000000215b01f6c (    0x1c) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x0000000215b01f88 (    0x38) GCC_except_table12 [NameNList, MangledNameNList, NList] 
                0x0000000215b01fc0 (    0x34) GCC_except_table14 [NameNList, MangledNameNList, NList] 
                0x0000000215b01ff4 (    0x28) GCC_except_table15 [NameNList, MangledNameNList, NList] 
                0x0000000215b0201c (    0x38) GCC_except_table20 [NameNList, MangledNameNList, NList] 
                0x0000000215b02054 (    0x14) GCC_except_table27 [NameNList, MangledNameNList, NList] 
                0x0000000215b02068 (    0x10) GCC_except_table33 [NameNList, MangledNameNList, NList] 
                0x0000000215b02078 (     0xc) GCC_except_table39 [NameNList, MangledNameNList, NList] 
                0x0000000215b02084 (    0x10) GCC_except_table45 [NameNList, MangledNameNList, NList] 
                0x0000000215b02094 (    0x18) GCC_except_table47 [NameNList, MangledNameNList, NList] 
                0x0000000215b020ac (    0x14) GCC_except_table48 [NameNList, MangledNameNList, NList] 
                0x0000000215b020c0 (    0x7c) GCC_except_table58 [NameNList, MangledNameNList, NList] 
                0x0000000215b0213c (    0x14) GCC_except_table60 [NameNList, MangledNameNList, NList] 
                0x0000000215b02150 (     0xc) GCC_except_table61 [NameNList, MangledNameNList, NList] 
                0x0000000215b0215c (    0x10) GCC_except_table71 [NameNList, MangledNameNList, NList] 
                0x0000000215b0216c (    0x14) GCC_except_table74 [NameNList, MangledNameNList, NList] 
                0x0000000215b02180 (    0x30) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x0000000215b021b0 (    0x10) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x0000000215b021c0 (    0xac) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x0000000215b0226c (    0x20) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x0000000215b0228c (    0xb4) GCC_except_table11 [NameNList, MangledNameNList, NList] 
                0x0000000215b02340 (    0x10) GCC_except_table12 [NameNList, MangledNameNList, NList] 
                0x0000000215b02350 (    0x10) GCC_except_table17 [NameNList, MangledNameNList, NList] 
                0x0000000215b02360 (    0x18) GCC_except_table27 [NameNList, MangledNameNList, NList] 
                0x0000000215b02378 (    0x14) GCC_except_table28 [NameNList, MangledNameNList, NList] 
                0x0000000215b0238c (    0x14) GCC_except_table35 [NameNList, MangledNameNList, NList] 
                0x0000000215b023a0 (    0x80) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x0000000215b02420 (    0x10) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x0000000215b02430 (    0x48) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x0000000215b02478 (    0x28) GCC_except_table10 [NameNList, MangledNameNList, NList] 
                0x0000000215b024a0 (    0x24) GCC_except_table12 [NameNList, MangledNameNList, NList] 
                0x0000000215b024c4 (    0x20) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x0000000215b024e4 (    0x14) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x0000000215b024f8 (    0x68) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x0000000215b02560 (    0x44) GCC_except_table11 [NameNList, MangledNameNList, NList] 
                0x0000000215b025a4 (    0x18) GCC_except_table12 [NameNList, MangledNameNList, NList] 
                0x0000000215b025bc (     0xc) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x0000000215b025c8 (    0x10) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x0000000215b025d8 (    0x4c) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x0000000215b02624 (    0x38) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x0000000215b0265c (    0x20) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x0000000215b0267c (    0x38) GCC_except_table10 [NameNList, MangledNameNList, NList] 
                0x0000000215b026b4 (    0x24) GCC_except_table11 [NameNList, MangledNameNList, NList] 
                0x0000000215b026d8 (    0x18) GCC_except_table22 [NameNList, MangledNameNList, NList] 
                0x0000000215b026f0 (    0x14) GCC_except_table29 [NameNList, MangledNameNList, NList] 
                0x0000000215b02704 (    0x10) GCC_except_table31 [NameNList, MangledNameNList, NList] 
                0x0000000215b02714 (    0x10) GCC_except_table35 [NameNList, MangledNameNList, NList] 
                0x0000000215b02724 (    0x80) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x0000000215b027a4 (    0x1c) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x0000000215b027c0 (    0x34) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x0000000215b027f4 (    0x1c) GCC_except_table11 [NameNList, MangledNameNList, NList] 
                0x0000000215b02810 (    0x30) GCC_except_table12 [NameNList, MangledNameNList, NList] 
                0x0000000215b02840 (    0x28) GCC_except_table13 [NameNList, MangledNameNList, NList] 
                0x0000000215b02868 (    0x4c) GCC_except_table15 [NameNList, MangledNameNList, NList] 
                0x0000000215b028b4 (    0x24) GCC_except_table16 [NameNList, MangledNameNList, NList] 
                0x0000000215b028d8 (    0x24) GCC_except_table17 [NameNList, MangledNameNList, NList] 
                0x0000000215b028fc (    0x80) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x0000000215b0297c (    0x30) GCC_except_table10 [NameNList, MangledNameNList, NList] 
                0x0000000215b029ac (    0x28) GCC_except_table11 [NameNList, MangledNameNList, NList] 
                0x0000000215b029d4 (    0x24) GCC_except_table13 [NameNList, MangledNameNList, NList] 
                0x0000000215b029f8 (    0x80) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x0000000215b02a78 (    0x30) GCC_except_table10 [NameNList, MangledNameNList, NList] 
                0x0000000215b02aa8 (    0x28) GCC_except_table11 [NameNList, MangledNameNList, NList] 
                0x0000000215b02ad0 (    0x24) GCC_except_table13 [NameNList, MangledNameNList, NList] 
                0x0000000215b02af4 (    0x34) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x0000000215b02b28 (    0x80) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x0000000215b02ba8 (    0x30) GCC_except_table10 [NameNList, MangledNameNList, NList] 
                0x0000000215b02bd8 (    0x28) GCC_except_table11 [NameNList, MangledNameNList, NList] 
                0x0000000215b02c00 (    0x24) GCC_except_table13 [NameNList, MangledNameNList, NList] 
                0x0000000215b02c24 (    0x80) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x0000000215b02ca4 (    0x30) GCC_except_table10 [NameNList, MangledNameNList, NList] 
                0x0000000215b02cd4 (    0x28) GCC_except_table11 [NameNList, MangledNameNList, NList] 
                0x0000000215b02cfc (    0x24) GCC_except_table13 [NameNList, MangledNameNList, NList] 
                0x0000000215b02d20 (    0x18) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x0000000215b02d38 (    0xd0) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x0000000215b02e08 (    0x14) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x0000000215b02e1c (    0x64) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x0000000215b02e80 (    0x28) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x0000000215b02ea8 (    0x28) GCC_except_table10 [NameNList, MangledNameNList, NList] 
                0x0000000215b02ed0 (    0x14) GCC_except_table11 [NameNList, MangledNameNList, NList] 
                0x0000000215b02ee4 (    0xa0) GCC_except_table12 [NameNList, MangledNameNList, NList] 
                0x0000000215b02f84 (    0x34) GCC_except_table23 [NameNList, MangledNameNList, NList] 
                0x0000000215b02fb8 (    0x14) GCC_except_table25 [NameNList, MangledNameNList, NList] 
                0x0000000215b02fcc (    0x18) GCC_except_table34 [NameNList, MangledNameNList, NList] 
                0x0000000215b02fe4 (     0xc) GCC_except_table42 [NameNList, MangledNameNList, NList] 
                0x0000000215b02ff0 (    0x14) GCC_except_table43 [NameNList, MangledNameNList, NList] 
                0x0000000215b03004 (    0x20) GCC_except_table53 [NameNList, MangledNameNList, NList] 
                0x0000000215b03024 (     0xc) GCC_except_table56 [NameNList, MangledNameNList, NList] 
                0x0000000215b03030 (    0x18) GCC_except_table57 [NameNList, MangledNameNList, NList] 
                0x0000000215b03048 (    0x14) GCC_except_table58 [NameNList, MangledNameNList, NList] 
                0x0000000215b0305c (    0x18) GCC_except_table59 [NameNList, MangledNameNList, NList] 
                0x0000000215b03074 (    0x14) GCC_except_table64 [NameNList, MangledNameNList, NList] 
                0x0000000215b03088 (    0x10) GCC_except_table65 [NameNList, MangledNameNList, NList] 
                0x0000000215b03098 (    0x10) GCC_except_table69 [NameNList, MangledNameNList, NList] 
                0x0000000215b030a8 (    0x24) GCC_except_table71 [NameNList, MangledNameNList, NList] 
                0x0000000215b030cc (    0x28) GCC_except_table73 [NameNList, MangledNameNList, NList] 
                0x0000000215b030f4 (    0x28) GCC_except_table74 [NameNList, MangledNameNList, NList] 
            0x0000000215b0311c (   0x4ea) __TEXT __cstring
            0x0000000215b03606 (   0x3dc) __TEXT __oslogstring
            0x0000000215b039e2 (   0xa28) __TEXT __ustring
            0x0000000215b0440c (   0xa5c) __TEXT __unwind_info
            0x0000000215b04e68 (   0x1b4) __TEXT __eh_frame
            0x0000000215b0501c (    0xc5) __TEXT __objc_classname
            0x0000000215b050e2 (   0x6a7) __TEXT __objc_methname
            0x0000000215b05789 (   0x1c9) __TEXT __objc_methtype
            0x0000000215b05960 (   0x6a0) __TEXT __objc_stubs
                0x0000000215b05960 (    0x20) objc_msgSend$JSONObjectWithData:options:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000215b05980 (    0x20) objc_msgSend$URLForResource:withExtension: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000215b059a0 (    0x20) objc_msgSend$UTF8String [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000215b059c0 (    0x20) objc_msgSend$addObject: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000215b059e0 (    0x20) objc_msgSend$allocWithZone: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000215b05a00 (    0x20) objc_msgSend$appendString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000215b05a20 (    0x20) objc_msgSend$array [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000215b05a40 (    0x20) objc_msgSend$arrayWithObjects:count: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000215b05a60 (    0x20) objc_msgSend$bundleForClass: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000215b05a80 (    0x20) objc_msgSend$candidates [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000215b05aa0 (    0x20) objc_msgSend$componentsJoinedByString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000215b05ac0 (    0x20) objc_msgSend$copy [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000215b05ae0 (    0x20) objc_msgSend$count [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000215b05b00 (    0x20) objc_msgSend$countByEnumeratingWithState:objects:count: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000215b05b20 (    0x20) objc_msgSend$createWithCompositeTransliteratorCandidate: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000215b05b40 (    0x20) objc_msgSend$dataUsingEncoding: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000215b05b60 (    0x20) objc_msgSend$description [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000215b05b80 (    0x20) objc_msgSend$dictionaryWithContentsOfURL:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000215b05ba0 (    0x20) objc_msgSend$dictionaryWithObjects:forKeys:count: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000215b05bc0 (    0x20) objc_msgSend$doubleValue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000215b05be0 (    0x20) objc_msgSend$enumerateSubstringsInRange:options:usingBlock: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000215b05c00 (    0x20) objc_msgSend$hash [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000215b05c20 (    0x20) objc_msgSend$initWithInputWord:transliteratedWord:lmScore:seq2seqScore:totalScore:isExtensionCandidate:type: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000215b05c40 (    0x20) objc_msgSend$initWithLocale: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000215b05c60 (    0x20) objc_msgSend$initWithModelURLs:task:skipNonFinalToCatchup: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000215b05c80 (    0x20) objc_msgSend$initWithParameters: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000215b05ca0 (    0x20) objc_msgSend$initWithString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000215b05cc0 (    0x20) objc_msgSend$inputWord [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000215b05ce0 (    0x20) objc_msgSend$isEqual: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000215b05d00 (    0x20) objc_msgSend$isEqualToString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000215b05d20 (    0x20) objc_msgSend$isExtensionCandidate [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000215b05d40 (    0x20) objc_msgSend$length [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000215b05d60 (    0x20) objc_msgSend$lmScore [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000215b05d80 (    0x20) objc_msgSend$locale [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000215b05da0 (    0x20) objc_msgSend$mainBundle [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000215b05dc0 (    0x20) objc_msgSend$metaInfo [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000215b05de0 (    0x20) objc_msgSend$modelURL [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000215b05e00 (    0x20) objc_msgSend$numberWithDouble: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000215b05e20 (    0x20) objc_msgSend$objectAtIndexedSubscript: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000215b05e40 (    0x20) objc_msgSend$objectForKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000215b05e60 (    0x20) objc_msgSend$score [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000215b05e80 (    0x20) objc_msgSend$seq2seqScore [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000215b05ea0 (    0x20) objc_msgSend$setCallbackQueue: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000215b05ec0 (    0x20) objc_msgSend$setModelURL: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000215b05ee0 (    0x20) objc_msgSend$string [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000215b05f00 (    0x20) objc_msgSend$stringWithFormat: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000215b05f20 (    0x20) objc_msgSend$stringWithUTF8String: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000215b05f40 (    0x20) objc_msgSend$text [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000215b05f60 (    0x20) objc_msgSend$tokens [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000215b05f80 (    0x20) objc_msgSend$totalScore [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000215b05fa0 (    0x20) objc_msgSend$translateString:from:to:completion: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000215b05fc0 (    0x20) objc_msgSend$transliteratedWord [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x0000000215b05fe0 (    0x20) objc_msgSend$type [FUNC, PEXT, NameNList, MangledNameNList, NList] 
        0x0000000237f958d8 (   0x8c8) __DATA_CONST SEGMENT
            0x0000000237f958d8 (    0xf0) __DATA_CONST __got
            0x0000000237f959c8 (    0xc0) __DATA_CONST __const
                0x0000000237f95a28 (    0x20) __block_descriptor_32_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237f95a48 (    0x20) __block_descriptor_tmp [NameNList, MangledNameNList, NList] 
                0x0000000237f95a68 (    0x20) __block_descriptor_tmp.1 [NameNList, MangledNameNList, NList] 
            0x0000000237f95a88 (    0x30) __DATA_CONST __objc_classlist
            0x0000000237f95ab8 (     0x8) __DATA_CONST __objc_catlist
            0x0000000237f95ac0 (    0x10) __DATA_CONST __objc_protolist
                0x0000000237f95ac0 (     0x8) _OBJC_LABEL_PROTOCOL_$_NSCopying [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237f95ac8 (     0x8) _OBJC_LABEL_PROTOCOL_$_NSMutableCopying [PEXT, NameNList, MangledNameNList, NList] 
            0x0000000237f95ad0 (     0x8) __DATA_CONST __objc_imageinfo
            0x0000000237f95ad8 (   0x4c8) __DATA_CONST __objc_const
                0x0000000237f95af0 (    0x48) _OBJC_METACLASS_RO_$_TLTransliterator [NameNList, MangledNameNList, NList] 
                0x0000000237f95b38 (    0x28) _OBJC_$_INSTANCE_VARIABLES_TLTransliterator [NameNList, MangledNameNList, NList] 
                0x0000000237f95b60 (    0x48) _OBJC_METACLASS_RO_$_TLTransliteratorCandidateContext [NameNList, MangledNameNList, NList] 
                0x0000000237f95ba8 (    0x28) _OBJC_$_INSTANCE_VARIABLES_TLTransliteratorCandidateContext [NameNList, MangledNameNList, NList] 
                0x0000000237f95bd0 (    0x18) _OBJC_$_PROP_LIST_TLTransliteratorCandidateContext [NameNList, MangledNameNList, NList] 
                0x0000000237f95be8 (    0x20) _OBJC_$_PROTOCOL_INSTANCE_METHODS_NSCopying [NameNList, MangledNameNList, NList] 
                0x0000000237f95c08 (     0x8) _OBJC_$_PROTOCOL_METHOD_TYPES_NSCopying [NameNList, MangledNameNList, NList] 
                0x0000000237f95c10 (    0x18) _OBJC_CLASS_PROTOCOLS_$_TLTransliteratorCandidate [NameNList, MangledNameNList, NList] 
                0x0000000237f95c28 (    0xe8) _OBJC_$_INSTANCE_VARIABLES_TLTransliteratorCandidate [NameNList, MangledNameNList, NList] 
                0x0000000237f95d10 (    0x78) _OBJC_$_PROP_LIST_TLTransliteratorCandidate [NameNList, MangledNameNList, NList] 
                0x0000000237f95d88 (    0x20) _OBJC_$_PROTOCOL_INSTANCE_METHODS_NSMutableCopying [NameNList, MangledNameNList, NList] 
                0x0000000237f95da8 (     0x8) _OBJC_$_PROTOCOL_METHOD_TYPES_NSMutableCopying [NameNList, MangledNameNList, NList] 
                0x0000000237f95db0 (    0x20) _OBJC_$_PROTOCOL_INSTANCE_METHODS_NSCopying [NameNList, MangledNameNList, NList] 
                0x0000000237f95dd0 (     0x8) _OBJC_$_PROTOCOL_METHOD_TYPES_NSCopying [NameNList, MangledNameNList, NList] 
                0x0000000237f95dd8 (    0x20) _OBJC_CLASS_PROTOCOLS_$_TLTransliteratorInitParameters [NameNList, MangledNameNList, NList] 
                0x0000000237f95df8 (    0x48) _OBJC_METACLASS_RO_$_TLTransliteratorInitParameters [NameNList, MangledNameNList, NList] 
                0x0000000237f95e40 (    0x48) _OBJC_$_INSTANCE_VARIABLES_TLTransliteratorInitParameters [NameNList, MangledNameNList, NList] 
                0x0000000237f95e88 (    0x28) _OBJC_$_PROP_LIST_TLTransliteratorInitParameters [NameNList, MangledNameNList, NList] 
                0x0000000237f95eb0 (    0x48) _OBJC_METACLASS_RO_$_TLMutableTransliteratorInitParameters [NameNList, MangledNameNList, NList] 
                0x0000000237f95ef8 (    0x18) _OBJC_$_PROP_LIST_TLMutableTransliteratorInitParameters [NameNList, MangledNameNList, NList] 
                0x0000000237f95f10 (    0x48) _OBJC_CLASS_RO_$_TLMutableTransliteratorInitParameters [NameNList, MangledNameNList, NList] 
                0x0000000237f95f58 (    0x48) _OBJC_CLASS_RO_$_TLBundle [NameNList, MangledNameNList, NList] 
            0x0000000237f95fa0 (   0x200) __DATA_CONST __objc_selrefs
        0x0000000237f961a0 (  0x60a8) __AUTH_CONST SEGMENT
            0x0000000237f961a0 (  0x53e0) __AUTH_CONST __cfstring
            0x0000000237f9b580 (   0x1f0) __AUTH_CONST __objc_const
                0x0000000237f9b580 (    0x40) _OBJC_$_CATEGORY_EMTResult_$_MetaInfo [NameNList, MangledNameNList, NList] 
                0x0000000237f9b5c0 (    0x48) _OBJC_CLASS_RO_$_TLTransliterator [NameNList, MangledNameNList, NList] 
                0x0000000237f9b608 (    0x48) _OBJC_CLASS_RO_$_TLTransliteratorCandidateContext [NameNList, MangledNameNList, NList] 
                0x0000000237f9b650 (    0x48) _OBJC_METACLASS_RO_$_TLTransliteratorCandidate [NameNList, MangledNameNList, NList] 
                0x0000000237f9b698 (    0x48) _OBJC_CLASS_RO_$_TLTransliteratorCandidate [NameNList, MangledNameNList, NList] 
                0x0000000237f9b6e0 (    0x48) _OBJC_CLASS_RO_$_TLTransliteratorInitParameters [NameNList, MangledNameNList, NList] 
                0x0000000237f9b728 (    0x48) _OBJC_METACLASS_RO_$_TLBundle [NameNList, MangledNameNList, NList] 
            0x0000000237f9b770 (   0x570) __AUTH_CONST __const
                0x0000000237f9b770 (    0x28) vtable for TLDevanagariOrthographyChecker [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237f9b798 (    0x10) typeinfo for TLOrthographyChecker [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237f9b7a8 (    0x18) typeinfo for TLDevanagariOrthographyChecker [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237f9b7c0 (    0x28) vtable for TLLanguageModelStr [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237f9b7e8 (    0x10) typeinfo for TLLanguageModel [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237f9b7f8 (    0x28) typeinfo for TLLanguageModelStr [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237f9b820 (    0x38) vtable for std::__1::__shared_ptr_pointer<TL::SharedCFType::Wrapper*, std::__1::shared_ptr<TL::SharedCFType::Wrapper>::__shared_ptr_default_delete<TL::SharedCFType::Wrapper, TL::SharedCFType::Wrapper>, std::__1::allocator<TL::SharedCFType::Wrapper>> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237f9b858 (    0x18) typeinfo for std::__1::__shared_ptr_pointer<TL::SharedCFType::Wrapper*, std::__1::shared_ptr<TL::SharedCFType::Wrapper>::__shared_ptr_default_delete<TL::SharedCFType::Wrapper, TL::SharedCFType::Wrapper>, std::__1::allocator<TL::SharedCFType::Wrapper>> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237f9b870 (    0x10) typeinfo for std::__1::default_delete<TL::SharedCFType::Wrapper> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237f9b880 (    0x18) typeinfo for std::__1::shared_ptr<TL::SharedCFType::Wrapper>::__shared_ptr_default_delete<TL::SharedCFType::Wrapper, TL::SharedCFType::Wrapper> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237f9b898 (    0x30) __block_descriptor_40_ea8_32r_e57_v44?0^{__CFURL=}8i16^{__CFLocale=}20^{__CFString=}28^B36l [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237f9b8c8 (    0x28) vtable for TLBengaliOrthographyChecker [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237f9b8f0 (    0x18) typeinfo for TLBengaliOrthographyChecker [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237f9b908 (    0x18) typeinfo for TL::ResourceCreationException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237f9b920 (    0x18) typeinfo for TL::ReadOnlyFileCreationException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237f9b938 (    0x30) __block_descriptor_tmp [NameNList, MangledNameNList, NList] 
                0x0000000237f9b968 (    0x30) __block_descriptor_tmp.7 [NameNList, MangledNameNList, NList] 
                0x0000000237f9b998 (    0x38) vtable for std::__1::__shared_ptr_pointer<TL::ReadOnlyFile<char>*, std::__1::shared_ptr<TL::ReadOnlyFile<char>>::__shared_ptr_default_delete<TL::ReadOnlyFile<char>, TL::ReadOnlyFile<char>>, std::__1::allocator<TL::ReadOnlyFile<char>>> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237f9b9d0 (    0x18) typeinfo for std::__1::__shared_ptr_pointer<TL::ReadOnlyFile<char>*, std::__1::shared_ptr<TL::ReadOnlyFile<char>>::__shared_ptr_default_delete<TL::ReadOnlyFile<char>, TL::ReadOnlyFile<char>>, std::__1::allocator<TL::ReadOnlyFile<char>>> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237f9b9e8 (    0x10) typeinfo for std::__1::default_delete<TL::ReadOnlyFile<char>> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237f9b9f8 (    0x18) typeinfo for std::__1::shared_ptr<TL::ReadOnlyFile<char>>::__shared_ptr_default_delete<TL::ReadOnlyFile<char>, TL::ReadOnlyFile<char>> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237f9ba10 (    0x28) vtable for TL::ReadOnlyFileCreationException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237f9ba38 (    0x28) vtable for TL::ResourceCreationException [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237f9ba60 (    0x30) __block_descriptor_40_ea8_32s_e52_v56?0"NSString"8{_NSRange=QQ}16{_NSRange=QQ}32^B48l [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237f9ba90 (    0x30) __block_descriptor_48_ea8_32s40r_e17_v16?0"NSArray"8l [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237f9bac0 (    0x28) vtable for TLTamilOrthographyChecker [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237f9bae8 (    0x18) typeinfo for TLTamilOrthographyChecker [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237f9bb00 (    0x20) __block_literal_global [NameNList, MangledNameNList, NList] 
                0x0000000237f9bb20 (    0x28) vtable for TLGurmukhiOrthographyChecker [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237f9bb48 (    0x18) typeinfo for TLGurmukhiOrthographyChecker [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237f9bb60 (    0x28) vtable for TLTeluguOrthographyChecker [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237f9bb88 (    0x18) typeinfo for TLTeluguOrthographyChecker [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237f9bba0 (    0x28) vtable for TLGujaratiOrthographyChecker [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237f9bbc8 (    0x18) typeinfo for TLGujaratiOrthographyChecker [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237f9bbe0 (    0x28) vtable for TLUrduOrthographyChecker [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237f9bc08 (    0x18) typeinfo for TLUrduOrthographyChecker [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237f9bc20 (    0x20) __block_literal_global [NameNList, MangledNameNList, NList] 
                0x0000000237f9bc40 (    0x20) __block_literal_global.3 [NameNList, MangledNameNList, NList] 
                0x0000000237f9bc60 (    0x28) vtable for TLMalayalamOrthographyChecker [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237f9bc88 (    0x18) typeinfo for TLMalayalamOrthographyChecker [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237f9bca0 (    0x28) vtable for TLKannadaOrthographyChecker [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000237f9bcc8 (    0x18) typeinfo for TLKannadaOrthographyChecker [PEXT, NameNList, MangledNameNList, NList] 
            0x0000000237f9bce0 (   0x568) __AUTH_CONST __auth_got
        0x0000000232ef2c58 (   0x1e0) __AUTH SEGMENT
            0x0000000232ef2c58 (   0x1e0) __AUTH __objc_data
                0x0000000232ef2c58 (    0x28) OBJC_CLASS_$_TLTransliterator [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232ef2c80 (    0x28) OBJC_METACLASS_$_TLTransliterator [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232ef2ca8 (    0x28) OBJC_CLASS_$_TLTransliteratorCandidateContext [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232ef2cd0 (    0x28) OBJC_METACLASS_$_TLTransliteratorCandidateContext [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232ef2cf8 (    0x28) OBJC_CLASS_$_TLTransliteratorCandidate [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232ef2d20 (    0x28) OBJC_METACLASS_$_TLTransliteratorCandidate [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232ef2d48 (    0x28) OBJC_CLASS_$_TLTransliteratorInitParameters [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232ef2d70 (    0x28) OBJC_CLASS_$_TLMutableTransliteratorInitParameters [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232ef2d98 (    0x28) OBJC_METACLASS_$_TLTransliteratorInitParameters [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232ef2dc0 (    0x28) OBJC_METACLASS_$_TLMutableTransliteratorInitParameters [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232ef2de8 (    0x28) OBJC_CLASS_$_TLBundle [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232ef2e10 (    0x28) OBJC_METACLASS_$_TLBundle [PEXT, NameNList, MangledNameNList, NList] 
        0x00000002318b5c68 (   0x200) __DATA SEGMENT
            0x00000002318b5c68 (    0x70) __DATA __objc_classrefs
            0x00000002318b5cd8 (    0x20) __DATA __objc_superrefs
            0x00000002318b5cf8 (    0x2c) __DATA __objc_ivar
                0x00000002318b5cf8 (     0x4) OBJC_IVAR_$_TLTransliterator._compositeTransliterator [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002318b5cfc (     0x4) OBJC_IVAR_$_TLTransliteratorCandidateContext._candidates [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002318b5d00 (     0x4) OBJC_IVAR_$_TLTransliteratorCandidate._isExtensionCandidate [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002318b5d04 (     0x4) OBJC_IVAR_$_TLTransliteratorCandidate._inputWord [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002318b5d08 (     0x4) OBJC_IVAR_$_TLTransliteratorCandidate._transliteratedWord [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002318b5d0c (     0x4) OBJC_IVAR_$_TLTransliteratorCandidate._lmScore [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002318b5d10 (     0x4) OBJC_IVAR_$_TLTransliteratorCandidate._seq2seqScore [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002318b5d14 (     0x4) OBJC_IVAR_$_TLTransliteratorCandidate._totalScore [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002318b5d18 (     0x4) OBJC_IVAR_$_TLTransliteratorCandidate._type [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002318b5d1c (     0x4) OBJC_IVAR_$_TLTransliteratorInitParameters._locale [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002318b5d20 (     0x4) OBJC_IVAR_$_TLTransliteratorInitParameters._modelURL [PEXT, NameNList, MangledNameNList, NList] 
            0x00000002318b5d28 (   0x118) __DATA __data
                0x00000002318b5d28 (    0x60) _OBJC_PROTOCOL_$_NSCopying [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002318b5d88 (    0x60) _OBJC_PROTOCOL_$_NSMutableCopying [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002318b5de8 (     0x8) nlp::SingletonResourceManager<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, TL::ReadOnlyFile<char>>::getQueue()::attributes [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002318b5df0 (     0x8) guard variable for nlp::SingletonResourceManager<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, TL::ReadOnlyFile<char>>::getQueue()::attributes [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002318b5df8 (     0x8) nlp::SingletonResourceManager<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, TL::ReadOnlyFile<char>>::getQueue()::queue [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002318b5e00 (     0x8) guard variable for nlp::SingletonResourceManager<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, TL::ReadOnlyFile<char>>::getQueue()::queue [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002318b5e08 (    0x28) nlp::SingletonResourceManager<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, TL::ReadOnlyFile<char>>::getCache()::cache [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002318b5e30 (     0x8) guard variable for nlp::SingletonResourceManager<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, TL::ReadOnlyFile<char>>::getCache()::cache [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002318b5e38 (     0x8) TLCompositeTransliteratorCandidate::getTotalScore() const::lmDistributionModulatingFactor [NameNList, MangledNameNList, NList] 
            0x00000002318b5e40 (    0x28) __DATA __bss
                0x00000002318b5e40 (     0x8) TLCompositeTransliteratorCandidate::getTotalScore() const::once [NameNList, MangledNameNList, NList] 
                0x00000002318b5e48 (     0x8) _nlpDefaultLog::log [NameNList, MangledNameNList, NList] 
                0x00000002318b5e50 (     0x8) _nlpDefaultLog::token [NameNList, MangledNameNList, NList] 
                0x00000002318b5e58 (     0x8) _nlpSignpostLog::log [NameNList, MangledNameNList, NList] 
                0x00000002318b5e60 (     0x8) _nlpSignpostLog::token [NameNList, MangledNameNList, NList] 
        0x000000023a910000 (0x37bf0000) __LINKEDIT SEGMENT
