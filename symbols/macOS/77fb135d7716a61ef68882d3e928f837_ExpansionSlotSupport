/System/Library/PrivateFrameworks/ExpansionSlotSupport.framework/Versions/A/ExpansionSlotSupport [arm64e, 0.204647 seconds]:
    795CEF05-7CEA-3B62-89A7-39D5733FB150 /System/Library/PrivateFrameworks/ExpansionSlotSupport.framework/Versions/A/ExpansionSlotSupport [DYLIB, DYLDSHAREDCACHE, FaultedFromDiskDyldSharedCache, MMap64]  
        0x00000001fae90000 (  0xfffc) __TEXT SEGMENT
            0x00000001fae90000 (  0x4510) MACH_HEADER
            0x00000001fae94510 (  0x9fc0) __TEXT __text
                0x00000001fae94510 (    0x24) ClearSwitchCache [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae94534 (   0x290) iterateThroughIOPCIDevices [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae947c4 (    0x88) doesStringMatchSlotDesignator [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae9484c (    0xe0) isDeviceASlot [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae9492c (   0x140) getPoolConfigMappingFromNvram [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae94a6c (   0x1d4) isPoolArrayValid [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae94c40 (    0xb4) findAppleGpuParent [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae94cf4 (   0x164) __findAppleGpuParent_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae94e58 (    0x10) __copy_helper_block_8_32r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae94e68 (     0xc) __destroy_helper_block_8_32r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae94e74 (    0x28) isAppleGpuPresent [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae94e9c (    0x78) isPromiseSPCIeDevicePresent [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae94f14 (   0x1bc) __isPromiseSPCIeDevicePresent_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae950d0 (    0xa8) getTBTDevicesInUse [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae95178 (   0x1a4) __getTBTDevicesInUse_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae9531c (    0xa8) getTBTDSportMask [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae953c4 (    0xc8) __getTBTDSportMask_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae9548c (    0x40) getPoolBPath [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae954cc (   0x114) getSlotPoolPath [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae955e0 (    0x70) isTbtDeviceinSlot [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae95650 (   0x10c) __isTbtDeviceinSlot_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae9575c (   0x40c) getCardInfo [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae95b68 (   0x260) getPathToSlotFromIOService [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae95dc8 (   0x270) getAssignedDevicePoolForSlot [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae96038 (   0x1c4) getSwitchData [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae961fc (   0x11c) __getSlotPoolPath_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae96318 (    0xcc) __getPathToSlotFromIOService_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae963e4 (    0x50) __copy_helper_block_8_32r40r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae96434 (    0x44) __destroy_helper_block_8_32r40r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae96478 (    0x9c) getNVRAMVariable [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae96514 (   0x12c) formatNVRAMDataAsString [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae96640 (   0x17c) getDefaultSwitchData [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae967bc (   0x120) setNvramVar [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae968dc (    0x8c) deleteNvramVar [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae96968 (     0xc) OpenUserClient [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae96974 (     0xc) CloseUserClient [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae96980 (     0xc) callFunction [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae9698c (    0xec) printIOReturn [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae96a78 (    0x3c) (null) [FUNC, FunctionStarts] 
                0x00000001fae96ab4 (   0xa18) SocketNonInterleave [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae974cc (   0xd9c) SocketInterleave [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae98268 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001fae98280 (   0x130) PopulateMemorySizeFields [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae983b0 (    0xfc) DisplayMADInfo [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae984ac (   0x110) PrintSize [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae985bc (   0x248) InterleaveMemory [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae98804 (    0x3c) deviceAppeared [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae98840 (    0x3c) usbDeviceDisappeared [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae9887c (    0x14) RemoveTypeCChangeDetect [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae98890 (   0x170) DetectTypeCChanges [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae98a00 (    0xec) IsConfigurationDefault [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae98aec (   0x118) FetchCardInfoDict [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae98c04 (    0x88) IsConfigurationAllowed [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae98c8c (   0x1f4) CreateAllowedConfiguration [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae98e80 (    0x7c) isSlotBehindSwitch [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae98efc (     0x8) ReadCurrentPCIELaneConfig [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae98f04 (   0x420) GetSystemPoolUsage [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae99324 (   0x100) getSlotDsPortNumber [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae99424 (   0x444) WriteSwitchData [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae99868 (    0xb4) __getSlotDsPortNumber_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae9991c (     0x8) GetPathToSlot [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae99924 (    0x48) GetBridgeForSlot [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae9996c (    0x48) GetDeviceForSlot [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae999b4 (   0x108) FindChildWithLowestFunctionNumber [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae99abc (   0x208) GetDefaultPoolAllocation [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae99cc4 (    0xb8) ReleaseCardInfoDict [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae99d7c (    0xc4) FetchCardInfo [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae99e40 (    0x5c) ReleaseCardInfo [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae99e9c (    0x9c) GetSlotRecommendations [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae99f38 (   0x10c) GetSwitchDataAsString [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae9a044 (    0x30) crc32 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae9a074 (    0x24) get_enum_name_for_port [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae9a098 (    0x24) get_slot_index_for_port [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae9a0bc (    0x98) generate_pool_bitfield_and_mask [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae9a154 (    0x38) generate_pool_bitfield [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae9a18c (    0x28) calculate_fom [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae9a1b4 (    0x2c) calculate_fom_fitness [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae9a1e0 (   0x22c) generate_best_config [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae9a40c (   0x518) generate_slot_recommendation [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae9a924 (    0xd0) print_recommendation [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae9a9f4 (   0x114) GetBridgeForPort [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae9ab08 (   0x260) capture_pci_link_and_capabilities [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae9ad68 (    0xfc) get_pool_config_mapping_from_bitfield_and_mappings [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae9ae64 (   0x564) GenerateSlotRecommendations [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae9b3c8 (    0x28) (null) [FUNC, FunctionStarts] 
                0x00000001fae9b3f0 (   0x14c) GetDefaultPoolConfigMapping [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae9b53c (   0x234) GetCurrentPoolConfigMapping [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae9b770 (    0xb8) GetPoolConfigMappingFromBitfield [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae9b828 (   0x1a4) generate_switch_data_from_pool_config_and_mappings [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae9b9cc (    0x84) GenerateSwitchDataFromPoolConfigMapping [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae9ba50 (   0x1fc) GetPoolConfigMappingFromPoolArray [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae9bc4c (   0x190) __GetPathToNonSlotPortFromIOService_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae9bddc (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001fae9bdf4 (     0x8) heap_retain [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae9bdfc (     0x8) heap_release [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae9be04 (    0xac) underutilization_heap_compare [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae9beb0 (   0x10c) overutilization_heap_compare [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae9bfbc (   0x10c) MatchPlatformName [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae9c0c8 (   0x26c) FetchPlatformInfo [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae9c334 (    0x54) PlatformSupportsPCIELaneConfig [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae9c388 (     0x8) PlatformUsesIoRegPath [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae9c390 (    0x54) PlatformSupportsMemorySlotUtility [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae9c3e4 (    0x4c) platformOnInternalBuild [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae9c430 (    0xd8) FormatOptimalConfig [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae9c508 (    0x6c) PrintArray [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae9c574 (    0x24) getSimpleSize [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae9c598 (    0xe0) Combinatorics_main [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae9c678 (   0x134) InitializeDIMMS [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae9c7ac (    0x7c) configInExceptionList [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae9c828 (   0x6f4) start [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae9cf1c (    0xa4) swapDimmSlots [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae9cfc0 (   0x140) j160ComputeOptimalConfig [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae9d100 (     0x8) heap_retain [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae9d108 (     0x8) heap_release [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae9d110 (    0x40) dimm_heap_compare [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae9d150 (   0x4ac) GetMemoryConfigs [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae9d5fc (     0x4) GetMemoryType [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae9d600 (    0xb4) next_comb [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae9d6b4 (   0x348) Permutation2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae9d9fc (   0x1f8) Permutation1Node [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae9dbf4 (   0x108) searchForCombination [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae9dcfc (   0x354) InterleaveDimms [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae9e050 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001fae9e060 (    0x78) MYCFStringCopyUTF8String [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae9e0d8 (    0x34) BG_DI_InitializeIOUtils [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae9e10c (     0xc) BG_DI_ReleaseIOUtils [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae9e118 (    0x60) BG_DI_GetNumberOfDIMMs [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae9e178 (    0xb4) BG_DI_GetMemoryProperty [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae9e22c (    0x58) BG_DI_GetDIMMType [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae9e284 (    0xb8) BG_DI_GetNumberOfDIMMsPopulated [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae9e33c (    0xdc) BG_DI_GetSizeOfDIMMs [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001fae9e418 (    0xb8) lookForProperty [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
            0x00000001fae9e4d0 (   0x5a0) __TEXT __auth_stubs
                0x00000001fae9e4d0 (    0x10) DYLD-STUB$$CFArrayAppendValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9e4e0 (    0x10) DYLD-STUB$$CFArrayCreateCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9e4f0 (    0x10) DYLD-STUB$$CFArrayCreateMutable [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9e500 (    0x10) DYLD-STUB$$CFArrayGetCount [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9e510 (    0x10) DYLD-STUB$$CFArrayGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9e520 (    0x10) DYLD-STUB$$CFArrayGetValueAtIndex [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9e530 (    0x10) DYLD-STUB$$CFArraySetValueAtIndex [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9e540 (    0x10) DYLD-STUB$$CFBinaryHeapAddValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9e550 (    0x10) DYLD-STUB$$CFBinaryHeapCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9e560 (    0x10) DYLD-STUB$$CFBinaryHeapGetMinimum [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9e570 (    0x10) DYLD-STUB$$CFBinaryHeapRemoveMinimumValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9e580 (    0x10) DYLD-STUB$$CFBooleanGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9e590 (    0x10) DYLD-STUB$$CFBooleanGetValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9e5a0 (    0x10) DYLD-STUB$$CFDataCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9e5b0 (    0x10) DYLD-STUB$$CFDataGetBytePtr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9e5c0 (    0x10) DYLD-STUB$$CFDataGetBytes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9e5d0 (    0x10) DYLD-STUB$$CFDataGetLength [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9e5e0 (    0x10) DYLD-STUB$$CFDataGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9e5f0 (    0x10) DYLD-STUB$$CFDictionaryAddValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9e600 (    0x10) DYLD-STUB$$CFDictionaryApplyFunction [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9e610 (    0x10) DYLD-STUB$$CFDictionaryCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9e620 (    0x10) DYLD-STUB$$CFDictionaryCreateMutable [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9e630 (    0x10) DYLD-STUB$$CFDictionaryGetCount [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9e640 (    0x10) DYLD-STUB$$CFDictionaryGetKeysAndValues [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9e650 (    0x10) DYLD-STUB$$CFDictionaryGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9e660 (    0x10) DYLD-STUB$$CFDictionaryGetValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9e670 (    0x10) DYLD-STUB$$CFGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9e680 (    0x10) DYLD-STUB$$CFNotificationCenterGetLocalCenter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9e690 (    0x10) DYLD-STUB$$CFNotificationCenterPostNotification [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9e6a0 (    0x10) DYLD-STUB$$CFNumberCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9e6b0 (    0x10) DYLD-STUB$$CFNumberGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9e6c0 (    0x10) DYLD-STUB$$CFNumberGetValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9e6d0 (    0x10) DYLD-STUB$$CFRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9e6e0 (    0x10) DYLD-STUB$$CFRetain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9e6f0 (    0x10) DYLD-STUB$$CFRunLoopAddSource [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9e700 (    0x10) DYLD-STUB$$CFRunLoopGetCurrent [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9e710 (    0x10) DYLD-STUB$$CFStringCompare [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9e720 (    0x10) DYLD-STUB$$CFStringCreateCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9e730 (    0x10) DYLD-STUB$$CFStringCreateWithCString [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9e740 (    0x10) DYLD-STUB$$CFStringGetCString [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9e750 (    0x10) DYLD-STUB$$CFStringGetLength [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9e760 (    0x10) DYLD-STUB$$CFStringGetMaximumSizeForEncoding [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9e770 (    0x10) DYLD-STUB$$CFStringGetSystemEncoding [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9e780 (    0x10) DYLD-STUB$$CFStringGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9e790 (    0x10) DYLD-STUB$$IOIteratorIsValid [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9e7a0 (    0x10) DYLD-STUB$$IOIteratorNext [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9e7b0 (    0x10) DYLD-STUB$$IONotificationPortCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9e7c0 (    0x10) DYLD-STUB$$IONotificationPortDestroy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9e7d0 (    0x10) DYLD-STUB$$IONotificationPortGetRunLoopSource [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9e7e0 (    0x10) DYLD-STUB$$IOObjectRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9e7f0 (    0x10) DYLD-STUB$$IOObjectRetain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9e800 (    0x10) DYLD-STUB$$IORegistryEntryCreateCFProperties [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9e810 (    0x10) DYLD-STUB$$IORegistryEntryCreateCFProperty [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9e820 (    0x10) DYLD-STUB$$IORegistryEntryFromPath [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9e830 (    0x10) DYLD-STUB$$IORegistryEntryGetChildIterator [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9e840 (    0x10) DYLD-STUB$$IORegistryEntryGetParentEntry [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9e850 (    0x10) DYLD-STUB$$IORegistryEntryGetPath [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9e860 (    0x10) DYLD-STUB$$IORegistryEntrySearchCFProperty [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9e870 (    0x10) DYLD-STUB$$IORegistryEntrySetCFProperty [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9e880 (    0x10) DYLD-STUB$$IORegistryGetRootEntry [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9e890 (    0x10) DYLD-STUB$$IOServiceAddMatchingNotification [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9e8a0 (    0x10) DYLD-STUB$$IOServiceGetMatchingService [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9e8b0 (    0x10) DYLD-STUB$$IOServiceGetMatchingServices [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9e8c0 (    0x10) DYLD-STUB$$IOServiceMatching [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9e8d0 (    0x10) DYLD-STUB$$_Block_object_assign [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9e8e0 (    0x10) DYLD-STUB$$_Block_object_dispose [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9e8f0 (    0x10) DYLD-STUB$$__memcpy_chk [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9e900 (    0x10) DYLD-STUB$$__stack_chk_fail [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9e910 (    0x10) DYLD-STUB$$__strncat_chk [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9e920 (    0x10) DYLD-STUB$$bzero [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9e930 (    0x10) DYLD-STUB$$calloc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9e940 (    0x10) DYLD-STUB$$difftime [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9e950 (    0x10) DYLD-STUB$$exit [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9e960 (    0x10) DYLD-STUB$$free [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9e970 (    0x10) DYLD-STUB$$malloc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9e980 (    0x10) DYLD-STUB$$memcmp [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9e990 (    0x10) DYLD-STUB$$memcpy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9e9a0 (    0x10) DYLD-STUB$$os_variant_has_internal_content [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9e9b0 (    0x10) DYLD-STUB$$printf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9e9c0 (    0x10) DYLD-STUB$$putchar [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9e9d0 (    0x10) DYLD-STUB$$puts [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9e9e0 (    0x10) DYLD-STUB$$snprintf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9e9f0 (    0x10) DYLD-STUB$$strcmp [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9ea00 (    0x10) DYLD-STUB$$strlen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9ea10 (    0x10) DYLD-STUB$$strncmp [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9ea20 (    0x10) DYLD-STUB$$strncpy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9ea30 (    0x10) DYLD-STUB$$strnlen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9ea40 (    0x10) DYLD-STUB$$strstr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9ea50 (    0x10) DYLD-STUB$$strtol [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001fae9ea60 (    0x10) DYLD-STUB$$time [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
            0x00000001fae9ea70 (   0x52e) __TEXT __const
                0x00000001fae9ead0 (   0x448) crc32_tab [NameNList, MangledNameNList, NList] 
                0x00000001fae9ef18 (     0x2) j160twoDimm [NameNList, MangledNameNList, NList] 
                0x00000001fae9ef1a (     0x3) j160threeDimm [NameNList, MangledNameNList, NList] 
                0x00000001fae9ef1d (     0x4) j160fourDimm [NameNList, MangledNameNList, NList] 
                0x00000001fae9ef21 (     0x5) j160fiveDimm [NameNList, MangledNameNList, NList] 
                0x00000001fae9ef26 (     0x6) j160sixDimm [NameNList, MangledNameNList, NList] 
                0x00000001fae9ef2c (     0x7) j160sevenDimm [NameNList, MangledNameNList, NList] 
                0x00000001fae9ef33 (     0x8) j160eightDimm [NameNList, MangledNameNList, NList] 
                0x00000001fae9ef3b (     0x9) j160nineDimm [NameNList, MangledNameNList, NList] 
                0x00000001fae9ef44 (     0xa) j160tenDimm [NameNList, MangledNameNList, NList] 
                0x00000001fae9ef4e (     0xb) j160elevenDimm [NameNList, MangledNameNList, NList] 
                0x00000001fae9ef59 (     0xc) j160twelveDimm [NameNList, MangledNameNList, NList] 
                0x00000001fae9ef65 (    0x39) SpecialConfigs [NameNList, MangledNameNList, NList] 
            0x00000001fae9ef9e (   0xe4b) __TEXT __cstring
                0x00000001fae9fce1 (   0x108) j160oneDimm [NameNList, MangledNameNList, NList] 
            0x00000001fae9fdec (   0x210) __TEXT __unwind_info
        0x000000022e130fc8 (   0x148) __DATA_CONST SEGMENT
            0x000000022e130fc8 (    0x48) __DATA_CONST __got
            0x000000022e131010 (   0x100) __DATA_CONST __const
                0x000000022e131010 (    0x20) __block_descriptor_tmp.36 [NameNList, MangledNameNList, NList] 
                0x000000022e131030 (    0xe0) __block_descriptor_tmp.46 [NameNList, MangledNameNList, NList] 
        0x00000002370288f8 (   0x908) __AUTH_CONST SEGMENT
            0x00000002370288f8 (   0x4e0) __AUTH_CONST __cfstring
            0x0000000237028dd8 (   0x150) __AUTH_CONST __const
                0x0000000237028dd8 (    0x30) __block_descriptor_tmp [NameNList, MangledNameNList, NList] 
                0x0000000237028e08 (    0x30) __block_descriptor_tmp.41 [NameNList, MangledNameNList, NList] 
                0x0000000237028e38 (    0x30) __block_descriptor_tmp.44 [NameNList, MangledNameNList, NList] 
                0x0000000237028e68 (    0x30) __block_descriptor_tmp.74 [NameNList, MangledNameNList, NList] 
                0x0000000237028e98 (    0x30) __block_descriptor_tmp.77 [NameNList, MangledNameNList, NList] 
                0x0000000237028ec8 (    0x30) __block_descriptor_tmp [NameNList, MangledNameNList, NList] 
                0x0000000237028ef8 (    0x30) __block_descriptor_tmp [NameNList, MangledNameNList, NList] 
            0x0000000237028f28 (     0x8) __AUTH_CONST __auth_ptr
            0x0000000237028f30 (   0x2d0) __AUTH_CONST __auth_got
        0x0000000230fe4740 (   0x2e8) __DATA SEGMENT
            0x0000000230fe4740 (   0x1e0) __DATA __data
                0x0000000230fe4740 (   0x1d4) j180_pool_mapping [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230fe4914 (     0xc) j160SwapMap [NameNList, MangledNameNList, NList] 
            0x0000000230fe4920 (    0x8c) __DATA __common
                0x0000000230fe4920 (    0x14) switchDefaultData [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230fe4934 (    0x14) switchUserData [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230fe4948 (    0x20) physicallyBlocked [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230fe4968 (     0x8) ioKitNotificationPort [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230fe4970 (     0x8) gCardInfoList [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230fe4978 (     0x8) gPlatformInformationIsValid [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230fe4980 (     0x8) gCachedPlatformName [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230fe4988 (     0x4) gInternalPlatformStatus [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230fe498c (    0x20) gPlatformInformation [PEXT, NameNList, MangledNameNList, NList] 
            0x0000000230fe49b0 (    0x78) __DATA __bss
                0x0000000230fe49b0 (     0x8) setNvramVar.gOptionsRef [NameNList, MangledNameNList, NList] 
                0x0000000230fe49b8 (     0x8) start_t [NameNList, MangledNameNList, NList] 
                0x0000000230fe49c0 (     0x8) DIMM_VALUES [NameNList, MangledNameNList, NList] 
                0x0000000230fe49c8 (     0x2) gNumOfDimmSlots [NameNList, MangledNameNList, NList] 
                0x0000000230fe49ca (     0xc) BEST_DIMM_CONFIG [NameNList, MangledNameNList, NList] 
                0x0000000230fe49d6 (     0x2) SYSTEM_TYPE [NameNList, MangledNameNList, NList] 
                0x0000000230fe49d8 (     0x8) count [NameNList, MangledNameNList, NList] 
                0x0000000230fe49e0 (     0x8) bestBandwidth [NameNList, MangledNameNList, NList] 
                0x0000000230fe49e8 (     0x8) gUniqueCombsPerSocket [NameNList, MangledNameNList, NList] 
                0x0000000230fe49f0 (     0x8) SOCKET1BANK [NameNList, MangledNameNList, NList] 
                0x0000000230fe49f8 (     0x8) SOCKET2BANK [NameNList, MangledNameNList, NList] 
                0x0000000230fe4a00 (    0x10) SOCKET1COMB [NameNList, MangledNameNList, NList] 
                0x0000000230fe4a10 (     0xd) SOCKET2COMB [NameNList, MangledNameNList, NList] 
                0x0000000230fe4a1d (     0x7) ZERO_ARRAY [NameNList, MangledNameNList, NList] 
                0x0000000230fe4a24 (     0x4) gIORegistry_Root [NameNList, MangledNameNList, NList] 
        0x000000023a910000 (0x37bf0000) __LINKEDIT SEGMENT
