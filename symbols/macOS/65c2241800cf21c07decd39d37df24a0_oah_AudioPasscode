Unable to find file, pid, task or signature matching: -arch=x86_64
WARNING: You currently do not have task_read_for_pid() privileges.
Unable to find file, pid, task or signature matching: -wide
WARNING: You currently do not have task_read_for_pid() privileges.
/System/Library/PrivateFrameworks/AudioPasscode.framework/Versions/A/AudioPasscode [arm64e, 0.025097 seconds]:
    28244D22-E382-36B8-A74D-BD0811DF5D5A /System/Library/PrivateFrameworks/AudioPasscode.framework/Versions/A/AudioPasscode [DYLIB, DYLDSHAREDCACHE, FaultedFromDiskDyldSharedCache, MMap64]  
        0x00000001f4f4b000 ( 0x2e000) __TEXT SEGMENT
            0x00000001f4f4b000 (  0x1d04) MACH_HEADER
            0x00000001f4f4cd04 ( 0x1ce9c) __TEXT __text
                0x00000001f4f4cd04 (   0x4ec) +[APCCodecFactory createDecoderWithConfig:apcConfig:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f4d1f0 (   0x6e0) +[APCCodecFactory createEncoderWithConfig:apcConfig:payloadData:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f4d8d0 (   0xe28) +[APCCodecFactory evaluateCarrierWithConfig:carrier:embeddingResult:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f4e6f8 (   0x1b8) +[APCCodecFactory createBestConfigForCapability:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f4e8b0 (     0xc) __clang_call_terminate [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f4e8bc (    0x38) std::__1::any::reset[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f4e8f4 (   0x12c) std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>::__append(unsigned long, unsigned char const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f4ea20 (    0x18) std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f4ea38 (    0x5c) std::__1::__throw_length_error[abi:v160006](char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f4ea94 (    0x34) std::length_error::length_error[abi:v160006](char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f4eac8 (    0xe0) EchoCodeDecoder::~EchoCodeDecoder() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f4eba8 (    0x78) std::__1::default_delete<EchoDetector>::operator()[abi:v160006](EchoDetector*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f4ec20 (    0x2c) std::__1::unique_ptr<OpaqueFFTSetup, applesauce::raii::v1::detail::opaque_deletion_functor<OpaqueFFTSetup*, &vDSP_destroy_fftsetup>>::reset[abi:v160006](OpaqueFFTSetup*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f4ec4c (    0x5c) std::__1::unique_ptr<ShapingFilter, std::__1::default_delete<ShapingFilter>>::reset[abi:v160006](ShapingFilter*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f4eca8 (    0x2c) std::__1::unique_ptr<vDSP_biquad_SetupStruct, applesauce::raii::v1::detail::opaque_deletion_functor<vDSP_biquad_SetupStruct*, &vDSP_biquad_DestroySetup>>::reset[abi:v160006](vDSP_biquad_SetupStruct*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f4ecd4 (    0x3c) std::__1::vector<std::__1::vector<float, std::__1::allocator<float>>, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float>>>>::~vector[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f4ed10 (    0x54) std::__1::vector<std::__1::vector<float, std::__1::allocator<float>>, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float>>>>::__destroy_vector::operator()[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f4ed64 (    0x58) std::__1::vector<std::__1::vector<float, std::__1::allocator<float>>, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float>>>>::__clear[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f4edbc (    0xcc) std::__1::__any_imp::_SmallHandler<unsigned int>::__handle[abi:v160006](std::__1::__any_imp::_Action, std::__1::any const*, std::__1::any*, std::type_info const*, void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f4ee88 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001f4f4ee9c (    0x4c) std::type_info::operator==[abi:v160006](std::type_info const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f4eee8 (    0xcc) std::__1::__any_imp::_SmallHandler<float>::__handle[abi:v160006](std::__1::__any_imp::_Action, std::__1::any const*, std::__1::any*, std::type_info const*, void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f4efb4 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001f4f4efc8 (    0xe8) std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<unsigned int, std::__1::any>, std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::any>, void*>*, long>, bool> std::__1::__tree<std::__1::__value_type<unsigned int, std::__1::any>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::any>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::any>>>::__emplace_unique_key_args<unsigned int, std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned int&&>, std::__1::tuple<>>(unsigned int const&, std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned int&&>&&, std::__1::tuple<>&&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f4f0b0 (    0x58) std::__1::__tree<std::__1::__value_type<unsigned int, std::__1::any>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::any>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::any>>>::__insert_node_at(std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*, std::__1::__tree_node_base<void*>*&, std::__1::__tree_node_base<void*>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f4f108 (   0x198) void std::__1::__tree_balance_after_insert[abi:v160006]<std::__1::__tree_node_base<void*>*>(std::__1::__tree_node_base<void*>*, std::__1::__tree_node_base<void*>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f4f2a0 (    0x58) std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::any>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::any>, void*>>>>::reset[abi:v160006](std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::any>, void*>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f4f2f8 (    0xe0) std::__1::default_delete<EchoCodeEncoder>::operator()[abi:v160006](EchoCodeEncoder*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f4f3d8 (    0xcc) std::__1::__any_imp::_SmallHandler<bool>::__handle[abi:v160006](std::__1::__any_imp::_Action, std::__1::any const*, std::__1::any*, std::type_info const*, void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f4f4a4 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001f4f4f4b8 (    0x5c) std::__1::__tree<std::__1::__value_type<unsigned int, std::__1::any>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::any>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::any>>>::destroy(std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::any>, void*>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f4f514 (    0x4c) std::__1::__add_pointer_impl<unsigned int, __libcpp_is_referenceable<unsigned int>::value || is_void<unsigned int>::value>::type std::__1::any_cast[abi:v160006]<unsigned int>(std::__1::any*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f4f560 (    0x38) std::__1::__throw_bad_any_cast[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f4f598 (    0x34) std::bad_any_cast::bad_any_cast() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f4f5cc (     0x4) std::bad_any_cast::~bad_any_cast() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f4f5d0 (     0x8) +[EchoCodecCapability supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f4f5d8 (   0x1b4) -[EchoCodecCapability init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f4f78c (   0x254) -[EchoCodecCapability initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f4f9e0 (   0x15c) -[EchoCodecCapability encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f4fb3c (    0x80) -[EchoCodecCapability isEqual:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f4fbbc (   0x17c) -[EchoCodecCapability isEqualToEchoCodecCapability:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f4fd38 (    0x14) -[EchoCodecCapability frameSizeRange] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f4fd4c (    0x14) -[EchoCodecCapability numFrameRepeatRange] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f4fd60 (    0x10) -[EchoCodecCapability algorithmVersionNumbers] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f4fd70 (    0x14) -[EchoCodecCapability hpfCutOffFreqRange] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f4fd84 (    0x14) -[EchoCodecCapability .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f4fd98 (   0x1f8) -[EchoCodecConfiguration initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f4ff90 (   0x18c) -[EchoCodecConfiguration encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5011c (     0x8) +[EchoCodecConfiguration supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f50124 (    0xac) -[EchoCodecConfiguration init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f501d0 (   0x11c) -[EchoCodecConfiguration setDefaultValues] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f502ec (   0x3d8) -[EchoCodecConfiguration commandLineOptions] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f506c4 (   0x14c) -[EchoCodecConfiguration initWithCapabilityData:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f50810 (   0x7ac) -[EchoCodecConfiguration initWithCommandLineArgs:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f50fbc (   0x1ac) -[EchoCodecConfiguration copyWithZone:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f51168 (    0x10) -[EchoCodecConfiguration frameSize] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f51178 (    0x10) -[EchoCodecConfiguration setFrameSize:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f51188 (    0x10) -[EchoCodecConfiguration numFrameRepeat] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f51198 (    0x10) -[EchoCodecConfiguration setNumFrameRepeat:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f511a8 (    0x10) -[EchoCodecConfiguration delayForBit0] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f511b8 (    0x10) -[EchoCodecConfiguration setDelayForBit0:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f511c8 (    0x10) -[EchoCodecConfiguration delayForBit1] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f511d8 (    0x10) -[EchoCodecConfiguration setDelayForBit1:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f511e8 (    0x10) -[EchoCodecConfiguration syncDetectThreshold] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f511f8 (    0x10) -[EchoCodecConfiguration setSyncDetectThreshold:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f51208 (    0x10) -[EchoCodecConfiguration randomSeed] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f51218 (    0x10) -[EchoCodecConfiguration setRandomSeed:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f51228 (    0x10) -[EchoCodecConfiguration echoGainDB] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f51238 (    0x10) -[EchoCodecConfiguration setEchoGainDB:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f51248 (    0x10) -[EchoCodecConfiguration noiseGainDB] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f51258 (    0x10) -[EchoCodecConfiguration setNoiseGainDB:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f51268 (    0x10) -[EchoCodecConfiguration hpfCutOffFreq] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f51278 (    0x10) -[EchoCodecConfiguration setHpfCutOffFreq:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f51288 (    0x10) -[EchoCodecConfiguration hfNoiseFillingFlag] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f51298 (    0x10) -[EchoCodecConfiguration setHfNoiseFillingFlag:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f512a8 (    0x10) -[EchoCodecConfiguration algorithmVersionNumber] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f512b8 (    0x10) -[EchoCodecConfiguration setAlgorithmVersionNumber:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f512c8 (   0x228) EchoCodeDecoder::EchoCodeDecoder() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f514f0 (     0x4) EchoCodeDecoder::EchoCodeDecoder() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f514f4 (   0x454) EchoCodeDecoder::initialize(std::__1::map<unsigned int, std::__1::any, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, std::__1::any>>> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f51948 (   0x410) EchoCodeDecoder::loadAPCConfig(std::__1::map<unsigned int, std::__1::any, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, std::__1::any>>> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f51d58 (    0x2c) std::__1::vector<float, std::__1::allocator<float>>::resize(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f51d84 (    0x2c) std::__1::vector<float, std::__1::allocator<float>>::resize(unsigned long, float const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f51db0 (    0xbc) std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>::reserve(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f51e6c (     0x8) non-virtual thunk to EchoCodeDecoder::initialize(std::__1::map<unsigned int, std::__1::any, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, std::__1::any>>> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f51e74 (    0x74) EchoCodeDecoder::reset() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f51ee8 (    0x20) non-virtual thunk to EchoCodeDecoder::reset() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f51f08 (    0xac) EchoCodeDecoder::decode(float const*, unsigned int&, unsigned char&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f51fb4 (   0x274) EchoCodeDecoder::decodeWithSyncSeq(float const*, unsigned int, unsigned char&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f52228 (   0x4ac) EchoCodeDecoder::decodeWithSyncEcho(float const*, unsigned int&, unsigned char&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f526d4 (     0x8) non-virtual thunk to EchoCodeDecoder::decode(float const*, unsigned int&, unsigned char&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f526dc (    0x2c) EchoCodeDecoder::detectEchoSection(float const*, unsigned int, int&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f52708 (   0x3a0) EchoCodeDecoder::Process(float const*, int, void*, int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f52aa8 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001f4f52abc (    0x28) EchoCodeDecoder::convertBitsToByte(unsigned char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f52ae4 (    0x10) EchoCodeDecoder::isInitialized() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f52af4 (    0x10) non-virtual thunk to EchoCodeDecoder::isInitialized() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f52b04 (   0x140) EchoCodeDecoder::setParams(int, std::__1::any) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f52c44 (    0x38) (null) [FUNC, FunctionStarts] 
                0x00000001f4f52c7c (   0x130) std::__1::any::operator=[abi:v160006](std::__1::any const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f52dac (     0x8) non-virtual thunk to EchoCodeDecoder::setParams(int, std::__1::any) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f52db4 (     0x4) EchoCodeDecoder::~EchoCodeDecoder() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f52db8 (    0x28) EchoCodeDecoder::~EchoCodeDecoder() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f52de0 (     0x8) non-virtual thunk to EchoCodeDecoder::~EchoCodeDecoder() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f52de8 (    0x2c) non-virtual thunk to EchoCodeDecoder::~EchoCodeDecoder() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f52e14 (   0x134) std::__1::vector<float, std::__1::allocator<float>>::__append(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f52f48 (    0x18) std::__1::vector<float, std::__1::allocator<float>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f52f60 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<float>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<float>>(std::__1::allocator<float>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f52f98 (    0x34) std::__throw_bad_array_new_length[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f52fcc (   0x124) std::__1::vector<float, std::__1::allocator<float>>::__append(unsigned long, float const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f530f0 (    0x18) std::__1::vector<APCConfigReader::paramData, std::__1::allocator<APCConfigReader::paramData>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f53108 (    0x48) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<APCConfigReader::paramData>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<APCConfigReader::paramData>>(std::__1::allocator<APCConfigReader::paramData>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f53150 (   0x11c) SyncEchoDetector::SyncEchoDetector() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5326c (    0x4c) _ZNSt3__18any_castB7v160006IjEEu13__add_pointerIT_EPNS_3anyE [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f532b8 (    0x4c) _ZNSt3__18any_castB7v160006IfEEu13__add_pointerIT_EPNS_3anyE [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f53304 (    0x20) APCNullEncoder::APCNullEncoder(NullCodecConfiguration*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f53324 (    0x20) APCNullEncoder::APCNullEncoder(NullCodecConfiguration*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f53344 (     0xc) APCNullEncoder::Process(float const*, float*, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f53350 (     0x4) APCNullEncoder::Reset() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f53354 (     0x8) APCNullEncoder::Status() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5335c (    0xc4) APCNullDecoder::APCNullDecoder(NullCodecConfiguration*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f53420 (     0x4) APCNullDecoder::APCNullDecoder(NullCodecConfiguration*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f53424 (    0x88) APCNullDecoder::Process(float const*, int, void*, int*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f534ac (    0x34) APCNullDecoder::~APCNullDecoder() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f534e0 (    0x44) APCNullDecoder::~APCNullDecoder() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f53524 (     0x4) APCNullEncoder::~APCNullEncoder() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f53528 (     0x4) APCNullEncoder::~APCNullEncoder() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5352c (    0x80) std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>::vector(unsigned long, unsigned char const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f535ac (    0x44) std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>::__vallocate[abi:v160006](unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f535f0 (    0x40) -[NullCodecCapability init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f53630 (     0x8) +[NullCodecCapability supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f53638 (    0x40) -[NullCodecCapability initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f53678 (     0x4) -[NullCodecCapability encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5367c (    0x40) -[NullCodecConfiguration init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f536bc (    0x84) -[NullCodecConfiguration initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f53740 (    0x74) -[NullCodecConfiguration encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f537b4 (    0x3c) -[NullCodecConfiguration setDefaultValues] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f537f0 (   0x110) -[NullCodecConfiguration commandLineOptions] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f53900 (   0x17c) -[NullCodecConfiguration initWithCommandLineArgs:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f53a7c (     0x8) +[NullCodecConfiguration supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f53a84 (    0x10) -[NullCodecConfiguration retrievalCallbackInterval] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f53a94 (    0x10) -[NullCodecConfiguration setRetrievalCallbackInterval:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f53aa4 (    0x40) -[APCListenerResultData initWithPasscodeDurationNSec:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f53ae4 (    0x10) -[APCListenerResultData isValid] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f53af4 (     0x8) -[APCListenerResultData reset] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f53afc (     0x8) -[APCListenerResultData completionTime] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f53b04 (     0x8) -[APCListenerResultData setCompletionTime:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f53b0c (    0x6c) -[APCPlayerEmbedInfo initWithPasscodeDurationNSec:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f53b78 (    0x10) -[APCPlayerEmbedInfo isValid] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f53b88 (     0x8) -[APCPlayerEmbedInfo estPasscodeDuration] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f53b90 (     0x8) -[APCPlayerEmbedInfo measPasscodeDuration] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f53b98 (     0x8) -[APCPlayerEmbedInfo setMeasPasscodeDuration:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f53ba0 (   0x314) -[APCPlayerEngine createAU:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f53eb4 (    0x10) __Block_byref_object_copy_ [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f53ec4 (     0x8) __Block_byref_object_dispose_ [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f53ecc (    0xb8) __28-[APCPlayerEngine createAU:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f53f84 (    0x60) __copy_helper_block_ea8_32r40r48r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f53fe4 (    0x50) __destroy_helper_block_ea8_32r40r48r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f54034 (    0xc8) +[APCPlayerEngine playerWithAssetURL:codecConfig:payload:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f540fc (   0x714) -[APCPlayerEngine initWithAssetURL:codecConfig:payload:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f54810 (    0xf0) __62-[APCPlayerEngine initWithAssetURL:codecConfig:payload:error:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f54900 (     0xc) __copy_helper_block_ea8_32w [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5490c (     0x8) __destroy_helper_block_ea8_32w [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f54914 (     0x4) -[APCPlayerEngine setupAudioSession] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f54918 (    0x5c) -[APCPlayerEngine createEngineAndAttachNodes] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f54974 (    0xb8) -[APCPlayerEngine makeEngineConnections] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f54a2c (   0x238) -[APCPlayerEngine evaluateAsset] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f54c64 (     0xc) -[APCPlayerEngine startEngine] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f54c70 (     0x8) -[APCPlayerEngine startEngineAtTime:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f54c78 (     0xc) -[APCPlayerEngine startEngineAtTime:withBeginning:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f54c84 (   0x538) -[APCPlayerEngine startEngineAtTime:withBeginning:callbackTime:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f551bc (    0x14) __64-[APCPlayerEngine startEngineAtTime:withBeginning:callbackTime:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f551d0 (     0x8) __copy_helper_block_ea8_32s [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f551d8 (     0x8) __destroy_helper_block_ea8_32s [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f551e0 (   0x12c) -[APCPlayerEngine _playbackBufferLoopCompletionHdlr] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5530c (    0x14) __52-[APCPlayerEngine _playbackBufferLoopCompletionHdlr]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f55320 (     0x8) -[APCPlayerEngine startAPCPlayLoop] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f55328 (    0xc0) -[APCPlayerEngine startAPCPlayLoopAtTime:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f553e8 (    0xec) __42-[APCPlayerEngine startAPCPlayLoopAtTime:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f554d4 (     0x8) __42-[APCPlayerEngine startAPCPlayLoopAtTime:]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f554dc (    0x4c) -[APCPlayerEngine _stopAudioEngineAndSession] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f55528 (    0x50) -[APCPlayerEngine endPasscodeEmbedding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f55578 (    0xa0) -[APCPlayerEngine stopEngine:withCompletion:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f55618 (   0x148) -[APCPlayerEngine stopEngineWithFadeOut:completion:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f55760 (    0x14) __52-[APCPlayerEngine stopEngineWithFadeOut:completion:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f55774 (   0x134) -[APCPlayerEngine stopEngineAfterMinimumLoops:withCompletion:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f558a8 (    0x14) __62-[APCPlayerEngine stopEngineAfterMinimumLoops:withCompletion:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f558bc (    0x7c) -[APCPlayerEngine setDispatchQueue:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f55938 (   0x124) -[APCPlayerEngine embeddingInfo] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f55a5c (     0x8) -[APCPlayerEngine dispatchQueue] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f55a64 (     0xc) -[APCPlayerEngine setEmbeddingInfo:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f55a70 (     0x8) -[APCPlayerEngine beginningCallback] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f55a78 (     0x8) -[APCPlayerEngine setBeginningCallback:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f55a80 (     0x8) -[APCPlayerEngine stopEngineCompletion] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f55a88 (     0x8) -[APCPlayerEngine setStopEngineCompletion:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f55a90 (    0xb0) -[APCPlayerEngine .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f55b40 (    0x80) APCLogObject() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f55bc0 (     0x8) +[MLSCodecCapability supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f55bc8 (    0x40) -[MLSCodecCapability init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f55c08 (    0x38) -[MLSCodecCapability initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f55c40 (     0x4) -[MLSCodecCapability encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f55c44 (     0x8) +[MLSCodecConfiguration supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f55c4c (    0x38) -[MLSCodecConfiguration init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f55c84 (    0x54) +[APCDefaults sharedDefaults] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f55cd8 (    0x4c) __29+[APCDefaults sharedDefaults]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f55d24 (   0x108) +[APCDefaults boolForDefault:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f55e2c (   0x100) +[APCDefaults integerForDefault:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f55f2c (   0x108) +[APCDefaults floatForDefault:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f56034 (   0x1f8) EchoCodeEncoder::EchoCodeEncoder() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5622c (     0x4) EchoCodeEncoder::EchoCodeEncoder() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f56230 (   0x4d8) EchoCodeEncoder::initialize(std::__1::map<unsigned int, std::__1::any, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, std::__1::any>>> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f56708 (   0x714) EchoCodeEncoder::loadAPCConfig(std::__1::map<unsigned int, std::__1::any, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, std::__1::any>>> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f56e1c (     0x8) non-virtual thunk to EchoCodeEncoder::initialize(std::__1::map<unsigned int, std::__1::any, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, std::__1::any>>> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f56e24 (   0x1b0) EchoCodeEncoder::encode(float const*, float*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f56fd4 (     0x8) non-virtual thunk to EchoCodeEncoder::encode(float const*, float*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f56fdc (    0x7c) EchoCodeEncoder::Process(float const*, float*, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f57058 (  0x19a0) EchoCodeEncoder::evaluateCarrier(float const*, unsigned int, std::__1::map<unsigned int, std::__1::any, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, std::__1::any>>>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f589f8 (     0x4) non-virtual thunk to EchoCodeEncoder::evaluateCarrier(float const*, unsigned int, std::__1::map<unsigned int, std::__1::any, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, std::__1::any>>>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f589fc (    0x64) EchoCodeEncoder::reset() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f58a60 (     0x8) non-virtual thunk to EchoCodeEncoder::reset() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f58a68 (    0x24) EchoCodeEncoder::Status() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f58a8c (     0x4) EchoCodeEncoder::Reset() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f58a90 (   0x13c) EchoCodeEncoder::setPasscode(unsigned char const*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f58bcc (     0x8) non-virtual thunk to EchoCodeEncoder::setPasscode(unsigned char const*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f58bd4 (   0x1c8) EchoCodeEncoder::setParams(int, std::__1::any) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f58d9c (    0x38) (null) [FUNC, FunctionStarts] 
                0x00000001f4f58dd4 (    0x10) EchoCodeEncoder::isInitialized() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f58de4 (    0x24) float std::__1::any_cast[abi:v160006]<float>(std::__1::any&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f58e08 (     0x8) non-virtual thunk to EchoCodeEncoder::setParams(int, std::__1::any) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f58e10 (    0x10) non-virtual thunk to EchoCodeEncoder::isInitialized() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f58e20 (    0xc8) EchoCodeEncoder::~EchoCodeEncoder() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f58ee8 (    0xd8) EchoCodeEncoder::~EchoCodeEncoder() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f58fc0 (    0xc4) non-virtual thunk to EchoCodeEncoder::~EchoCodeEncoder() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f59084 (     0x8) non-virtual thunk to EchoCodeEncoder::~EchoCodeEncoder() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5908c (    0x74) std::__1::vector<float, std::__1::allocator<float>>::vector(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f59100 (    0x44) std::__1::vector<float, std::__1::allocator<float>>::__vallocate[abi:v160006](unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f59144 (    0xb4) EchoEmbedder::EchoEmbedder() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f591f8 (     0x4) std::__1::__function::__func<EchoCodeEncoder::encode(float const*, float*, unsigned int)::$_0, std::__1::allocator<EchoCodeEncoder::encode(float const*, float*, unsigned int)::$_0>, void (float*, unsigned int)>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f591fc (     0x4) std::__1::__function::__func<EchoCodeEncoder::encode(float const*, float*, unsigned int)::$_0, std::__1::allocator<EchoCodeEncoder::encode(float const*, float*, unsigned int)::$_0>, void (float*, unsigned int)>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f59200 (    0x48) std::__1::__function::__func<EchoCodeEncoder::encode(float const*, float*, unsigned int)::$_0, std::__1::allocator<EchoCodeEncoder::encode(float const*, float*, unsigned int)::$_0>, void (float*, unsigned int)>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f59248 (    0x24) std::__1::__function::__func<EchoCodeEncoder::encode(float const*, float*, unsigned int)::$_0, std::__1::allocator<EchoCodeEncoder::encode(float const*, float*, unsigned int)::$_0>, void (float*, unsigned int)>::__clone(std::__1::__function::__base<void (float*, unsigned int)>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5926c (     0x4) std::__1::__function::__func<EchoCodeEncoder::encode(float const*, float*, unsigned int)::$_0, std::__1::allocator<EchoCodeEncoder::encode(float const*, float*, unsigned int)::$_0>, void (float*, unsigned int)>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f59270 (     0x4) std::__1::__function::__func<EchoCodeEncoder::encode(float const*, float*, unsigned int)::$_0, std::__1::allocator<EchoCodeEncoder::encode(float const*, float*, unsigned int)::$_0>, void (float*, unsigned int)>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f59274 (    0x74) std::__1::__function::__func<EchoCodeEncoder::encode(float const*, float*, unsigned int)::$_0, std::__1::allocator<EchoCodeEncoder::encode(float const*, float*, unsigned int)::$_0>, void (float*, unsigned int)>::operator()(float*&&, unsigned int&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f592e8 (    0x40) std::__1::__function::__func<EchoCodeEncoder::encode(float const*, float*, unsigned int)::$_0, std::__1::allocator<EchoCodeEncoder::encode(float const*, float*, unsigned int)::$_0>, void (float*, unsigned int)>::target(std::type_info const&) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f59328 (     0xc) std::__1::__function::__func<EchoCodeEncoder::encode(float const*, float*, unsigned int)::$_0, std::__1::allocator<EchoCodeEncoder::encode(float const*, float*, unsigned int)::$_0>, void (float*, unsigned int)>::target_type() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f59334 (    0x84) std::__1::__function::__value_func<void (float*, unsigned int)>::~__value_func[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f593b8 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001f4f593cc (     0x4) std::__1::__function::__func<EchoCodeEncoder::evaluateCarrier(float const*, unsigned int, std::__1::map<unsigned int, std::__1::any, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, std::__1::any>>>&) const::$_1, std::__1::allocator<EchoCodeEncoder::evaluateCarrier(float const*, unsigned int, std::__1::map<unsigned int, std::__1::any, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, std::__1::any>>>&) const::$_1>, void (float*, unsigned int)>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f593d0 (     0x4) std::__1::__function::__func<EchoCodeEncoder::evaluateCarrier(float const*, unsigned int, std::__1::map<unsigned int, std::__1::any, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, std::__1::any>>>&) const::$_1, std::__1::allocator<EchoCodeEncoder::evaluateCarrier(float const*, unsigned int, std::__1::map<unsigned int, std::__1::any, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, std::__1::any>>>&) const::$_1>, void (float*, unsigned int)>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f593d4 (    0x54) std::__1::__function::__func<EchoCodeEncoder::evaluateCarrier(float const*, unsigned int, std::__1::map<unsigned int, std::__1::any, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, std::__1::any>>>&) const::$_1, std::__1::allocator<EchoCodeEncoder::evaluateCarrier(float const*, unsigned int, std::__1::map<unsigned int, std::__1::any, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, std::__1::any>>>&) const::$_1>, void (float*, unsigned int)>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f59428 (    0x30) std::__1::__function::__func<EchoCodeEncoder::evaluateCarrier(float const*, unsigned int, std::__1::map<unsigned int, std::__1::any, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, std::__1::any>>>&) const::$_1, std::__1::allocator<EchoCodeEncoder::evaluateCarrier(float const*, unsigned int, std::__1::map<unsigned int, std::__1::any, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, std::__1::any>>>&) const::$_1>, void (float*, unsigned int)>::__clone(std::__1::__function::__base<void (float*, unsigned int)>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f59458 (     0x4) std::__1::__function::__func<EchoCodeEncoder::evaluateCarrier(float const*, unsigned int, std::__1::map<unsigned int, std::__1::any, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, std::__1::any>>>&) const::$_1, std::__1::allocator<EchoCodeEncoder::evaluateCarrier(float const*, unsigned int, std::__1::map<unsigned int, std::__1::any, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, std::__1::any>>>&) const::$_1>, void (float*, unsigned int)>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5945c (     0x4) std::__1::__function::__func<EchoCodeEncoder::evaluateCarrier(float const*, unsigned int, std::__1::map<unsigned int, std::__1::any, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, std::__1::any>>>&) const::$_1, std::__1::allocator<EchoCodeEncoder::evaluateCarrier(float const*, unsigned int, std::__1::map<unsigned int, std::__1::any, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, std::__1::any>>>&) const::$_1>, void (float*, unsigned int)>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f59460 (    0x78) std::__1::__function::__func<EchoCodeEncoder::evaluateCarrier(float const*, unsigned int, std::__1::map<unsigned int, std::__1::any, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, std::__1::any>>>&) const::$_1, std::__1::allocator<EchoCodeEncoder::evaluateCarrier(float const*, unsigned int, std::__1::map<unsigned int, std::__1::any, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, std::__1::any>>>&) const::$_1>, void (float*, unsigned int)>::operator()(float*&&, unsigned int&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f594d8 (    0x40) std::__1::__function::__func<EchoCodeEncoder::evaluateCarrier(float const*, unsigned int, std::__1::map<unsigned int, std::__1::any, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, std::__1::any>>>&) const::$_1, std::__1::allocator<EchoCodeEncoder::evaluateCarrier(float const*, unsigned int, std::__1::map<unsigned int, std::__1::any, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, std::__1::any>>>&) const::$_1>, void (float*, unsigned int)>::target(std::type_info const&) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f59518 (     0xc) std::__1::__function::__func<EchoCodeEncoder::evaluateCarrier(float const*, unsigned int, std::__1::map<unsigned int, std::__1::any, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, std::__1::any>>>&) const::$_1, std::__1::allocator<EchoCodeEncoder::evaluateCarrier(float const*, unsigned int, std::__1::map<unsigned int, std::__1::any, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, std::__1::any>>>&) const::$_1>, void (float*, unsigned int)>::target_type() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f59524 (    0x4c) std::__1::__add_pointer_impl<float, __libcpp_is_referenceable<float>::value || is_void<float>::value>::type std::__1::any_cast[abi:v160006]<float>(std::__1::any*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f59570 (    0x4c) std::__1::__add_pointer_impl<bool, __libcpp_is_referenceable<bool>::value || is_void<bool>::value>::type std::__1::any_cast[abi:v160006]<bool>(std::__1::any*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f595bc (    0xfc) mlsCodec::getSequence(std::__1::vector<float, std::__1::allocator<float>>&, float, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f596b8 (    0x34) SimpleMLS<20u>::Reset() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f596ec (    0xc0) void std::__1::__fill_n_true[abi:v160006]<std::__1::__bitset<1ul, 20ul>>(std::__1::__bit_iterator<std::__1::__bitset<1ul, 20ul>, false, 0>, std::__1::__bitset<1ul, 20ul>::size_type) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f597ac (    0xbc) void std::__1::__fill_n_false[abi:v160006]<std::__1::__bitset<1ul, 20ul>>(std::__1::__bit_iterator<std::__1::__bitset<1ul, 20ul>, false, 0>, std::__1::__bitset<1ul, 20ul>::size_type) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f59868 (    0xbc) std::__1::bitset<20ul>::operator>>=[abi:v160006](unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f59924 (   0x158) std::__1::__bit_iterator<std::__1::__bitset<1ul, 20ul>, false, 0> std::__1::__copy_aligned[abi:v160006]<std::__1::__bitset<1ul, 20ul>, false>(std::__1::__bit_iterator<std::__1::__bitset<1ul, 20ul>, false, 0>, std::__1::__bit_iterator<std::__1::__bitset<1ul, 20ul>, false, 0>, std::__1::__bit_iterator<std::__1::__bitset<1ul, 20ul>, false, 0>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f59a7c (   0x234) std::__1::__bit_iterator<std::__1::__bitset<1ul, 20ul>, false, 0> std::__1::__copy_unaligned[abi:v160006]<std::__1::__bitset<1ul, 20ul>, false>(std::__1::__bit_iterator<std::__1::__bitset<1ul, 20ul>, false, 0>, std::__1::__bit_iterator<std::__1::__bitset<1ul, 20ul>, false, 0>, std::__1::__bit_iterator<std::__1::__bitset<1ul, 20ul>, false, 0>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f59cb0 (    0xe4) +[APCCodecInfo supportedDecoders] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f59d94 (    0xe4) +[APCCodecInfo supportedEncoders] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f59e78 (    0x9c) +[APCCodecInfo supportedConfigurationClasses] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f59f14 (   0x214) +[APCCodecInfo configurationClassForName:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5a128 (    0xac) +[APCCodecInfo isSupportedCodecCapability:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5a1d4 (    0xac) +[APCCodecInfo isSupportedCodecConfiguration:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5a280 (    0x84) +[AUPasscodeCodecCommandLineOption optionWithSyntax:description:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5a304 (    0xa8) -[AUPasscodeCodecCommandLineOption initWithSyntax:description:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5a3ac (     0x8) -[AUPasscodeCodecCommandLineOption optionSyntax] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5a3b4 (     0x8) -[AUPasscodeCodecCommandLineOption optionDescription] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5a3bc (    0x44) -[AUPasscodeCodecCommandLineOption .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5a400 (    0x84) -[AUPasscodeCodecConfiguration initWithAlgorithmName:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5a484 (     0x8) +[AUPasscodeCodecConfiguration supportsSecureCoding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5a48c (    0xd8) -[AUPasscodeCodecConfiguration initWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5a564 (    0x98) -[AUPasscodeCodecConfiguration encodeWithCoder:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5a5fc (    0x18) -[AUPasscodeCodecConfiguration __setDefaultValues] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5a614 (   0x120) -[AUPasscodeCodecConfiguration commandLineOptions] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5a734 (   0x2f8) -[AUPasscodeCodecConfiguration initWithCommandLineArgs:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5aa2c (    0xb4) -[AUPasscodeCodecConfiguration copyWithZone:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5aae0 (     0x8) -[AUPasscodeCodecConfiguration payloadLengthBytes] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5aae8 (     0x8) -[AUPasscodeCodecConfiguration setPayloadLengthBytes:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5aaf0 (     0x8) -[AUPasscodeCodecConfiguration sampleRate] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5aaf8 (     0x8) -[AUPasscodeCodecConfiguration setSampleRate:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5ab00 (     0x8) -[AUPasscodeCodecConfiguration numChannels] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5ab08 (     0x8) -[AUPasscodeCodecConfiguration setNumChannels:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5ab10 (     0x8) -[AUPasscodeCodecConfiguration algorithmName] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5ab18 (     0x8) -[AUPasscodeCodecConfiguration setAlgorithmName:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5ab20 (     0xc) -[AUPasscodeCodecConfiguration .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5ab2c (     0xc) -[AUPasscodeCodecCapability init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5ab38 (   0x104) -[AUPasscodeCodecCapability initWithAlgorithmName:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5ac3c (    0x6c) -[AUPasscodeCodecCapability isEqual:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5aca8 (   0x114) -[AUPasscodeCodecCapability isEqualToPasscodeCodecCapability:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5adbc (     0x8) -[AUPasscodeCodecCapability algorithmName] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5adc4 (     0x8) -[AUPasscodeCodecCapability supportedSampleRates] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5adcc (     0xc) -[AUPasscodeCodecCapability numChannelRange] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5add8 (    0x44) -[AUPasscodeCodecCapability .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5ae1c (   0x314) -[APCListenerEngine createAU:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5b130 (    0x10) __Block_byref_object_copy_ [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5b140 (     0x8) __Block_byref_object_dispose_ [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5b148 (    0xb8) __30-[APCListenerEngine createAU:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5b200 (    0xcc) +[APCListenerEngine listenerWithCodecConfig:queue:dataReceivedHandler:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5b2cc (    0xf4) +[APCListenerEngine listenerWithCodecConfig:queue:dataReceivedHandler:resultData:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5b3c0 (   0x4b4) -[APCListenerEngine initWithCodecConfig:queue:dataReceivedHandler:resultData:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5b874 (     0x4) -[APCListenerEngine setupAudioSession] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5b878 (    0x50) -[APCListenerEngine createEngineAndAttachNodes] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5b8c8 (    0x74) -[APCListenerEngine validateInputNodeWithFormat:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5b93c (   0x14c) -[APCListenerEngine makeEngineConnectionsWithError:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5ba88 (     0x4) __52-[APCListenerEngine makeEngineConnectionsWithError:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5ba8c (   0x1b0) -[APCListenerEngine startEngineWithError:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5bc3c (     0x8) -[APCListenerEngine stopEngine] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5bc44 (    0x68) -[APCListenerEngine .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5bcac (    0x20) echoCodec::getFsIndex(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5bccc (    0x20) echoCodec::getSRCFreeFrameSize(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5bcec (     0xc) echoCodec::getSyncType(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5bcf8 (   0x15c) ShapingFilter::initialize(ShapingFilter::filterType, unsigned int, unsigned int, float, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5be54 (    0x44) ShapingFilter::getCutOffFreqIndex(float) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5be98 (    0xa8) std::__1::vector<std::__1::vector<float, std::__1::allocator<float>>, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float>>>>::resize(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5bf40 (    0x40) ShapingFilter::reset() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5bf80 (    0xb4) ShapingFilter::filter(float const*, float*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5c034 (    0x34) ShapingFilter::filter(float const*, float*, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5c068 (   0x1fc) APCConfigReader::loadParams(std::__1::vector<APCConfigReader::paramData, std::__1::allocator<APCConfigReader::paramData>> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5c264 (    0x6c) APCConfigReader::getParameter(int, std::__1::any&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5c2d0 (    0x64) BitCounter::initialize(unsigned int, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5c334 (    0x3c) BitCounter::reset(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5c370 (    0x54) BitCounter::decodeBit() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5c3c4 (    0x64) BitCounter::count(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5c428 (    0x44) BitCounter::count() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5c46c (    0xd4) PayloadQueue::set(unsigned char const*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5c540 (    0x88) std::__1::deque<unsigned char, std::__1::allocator<unsigned char>>::push_front(unsigned char&&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5c5c8 (    0xbc) PayloadQueue::insertBit(unsigned int, unsigned char) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5c684 (   0x434) std::__1::deque<unsigned char, std::__1::allocator<unsigned char>>::insert(std::__1::__deque_iterator<unsigned char, unsigned char const*, unsigned char const&, unsigned char const* const*, long, 4096l>, unsigned char const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5cab8 (    0x7c) Random::Random() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5cb34 (    0x7c) Random::Random() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5cbb0 (    0x38) Random::setSeed(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5cbe8 (    0x2c) Random::reset() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5cc14 (    0x54) Random::getSamples(float*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5cc68 (    0x7c) Random::instance() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5cce4 (   0x364) EchoEmbedder::initialize(unsigned int, unsigned int, std::__1::map<unsigned int, std::__1::any, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, std::__1::any>>> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5d048 (    0x2c) std::__1::vector<unsigned int, std::__1::allocator<unsigned int>>::resize(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5d074 (    0x38) EchoEmbedder::reset() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5d0ac (   0x238) EchoEmbedder::encodeEcho(float*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5d2e4 (   0x21c) SyncedEchoEmbedder::initialize(unsigned int, unsigned int, std::__1::map<unsigned int, std::__1::any, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, std::__1::any>>> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5d500 (    0x88) SyncedEchoEmbedder::setPayload(unsigned char const*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5d588 (     0x8) EchoEmbedder::setPayload(unsigned char const*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5d590 (    0x74) EchoDetector::EchoDetector() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5d604 (     0x4) EchoDetector::EchoDetector() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5d608 (    0xcc) EchoDetector::initialize(unsigned int, unsigned int, float const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5d6d4 (   0x1f8) EchoDetector::decodeEcho(float const*, unsigned int, unsigned int&, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5d8cc (   0x154) EchoDetector::autoCepstrum(float const*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5da20 (    0x88) AdaptiveThreshold::initialize(unsigned int, float) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5daa8 (    0x44) AdaptiveThreshold::reset() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5daec (    0xfc) AdaptiveThreshold::updateThreshold(float) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5dbe8 (     0x8) AdaptiveThreshold::minInitDelayInFrames() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5dbf0 (    0x94) SyncSequence::initialize(unsigned int, float, unsigned int, float) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5dc84 (    0x6c) SyncSeqEmbedder::initialize(unsigned int, unsigned int, unsigned int, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5dcf0 (    0xa0) SyncSeqEmbedder::initialize(unsigned int, unsigned int, unsigned int, unsigned int, float, float) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5dd90 (   0x174) SyncSeqEmbedder::setConfig(std::__1::map<unsigned int, std::__1::any, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, std::__1::any>>> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5df04 (    0x94) SyncSeqEmbedder::getFrameStartOffset(std::__1::vector<float, std::__1::allocator<float>>&, unsigned int, std::__1::function<void (float*, unsigned int)> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5df98 (   0x1b0) SyncSeqEmbedder::embedSyncFrame(std::__1::vector<float, std::__1::allocator<float>>&, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5e148 (    0x5c) std::__1::function<void (float*, unsigned int)>::operator()(float*, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5e1a4 (    0x14) SyncSeqEmbedder::reset() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5e1b8 (    0x2c) SyncSeqEmbedder::searchSyncPosition(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5e1e4 (    0x2c) SyncSeqDetector::initialize(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5e210 (   0x168) SyncSeqDetector::initialize(unsigned int, unsigned int, float, unsigned int, unsigned int, float, float) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5e378 (   0x1b0) SyncSeqDetector::setConfig(std::__1::map<unsigned int, std::__1::any, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, std::__1::any>>> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5e528 (    0x6c) SyncSeqDetector::getFrameStartOffset(float const*, unsigned int, int&, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5e594 (     0x8) SyncSeqDetector::status() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5e59c (   0x394) SyncSeqDetector::detectSyncFrame(float const*, unsigned int, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5e930 (    0x2c) std::__1::vector<SyncSeqDetector::peakInfo, std::__1::allocator<SyncSeqDetector::peakInfo>>::resize(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5e95c (    0x94) SyncSeqDetector::reset() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5e9f0 (    0x14) SyncSeqDetector::minimumOffset() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5ea04 (    0x14) PasscodePositioner::initialize(unsigned int, unsigned int, unsigned int, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5ea18 (    0x10) PasscodePositioner::reset() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5ea28 (     0x4) PasscodePositioner::setConfig(std::__1::map<unsigned int, std::__1::any, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, std::__1::any>>> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5ea2c (    0x68) PasscodePositioner::getFrameStartOffset(std::__1::vector<float, std::__1::allocator<float>>&, unsigned int, std::__1::function<void (float*, unsigned int)> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5ea94 (   0x244) SyncEchoDetector::initialize(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5ecd8 (    0x2c) std::__1::vector<int, std::__1::allocator<int>>::resize(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5ed04 (    0x18) SyncEchoDetector::reset() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5ed1c (   0x158) SyncEchoDetector::setConfig(std::__1::map<unsigned int, std::__1::any, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, std::__1::any>>> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5ee74 (    0x90) SyncEchoDetector::getFrameStartOffset(float const*, unsigned int, int&, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5ef04 (     0x8) SyncEchoDetector::status() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5ef0c (   0x3e0) SyncEchoDetector::detectSyncEcho(float const*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5f2ec (    0xfc) SyncEchoDetector::estimateFrameStart() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5f3e8 (     0xc) SyncEchoDetector::maxSearchLength() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5f3f4 (     0x4) PasscodePositioner::~PasscodePositioner() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5f3f8 (     0x4) PasscodePositioner::~PasscodePositioner() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5f3fc (     0x8) PasscodePositioner::syncFrameSizeSamples() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5f404 (     0x4) EchoEmbedder::~EchoEmbedder() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5f408 (    0x28) EchoEmbedder::~EchoEmbedder() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5f430 (     0x4) SyncedEchoEmbedder::~SyncedEchoEmbedder() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5f434 (    0x28) SyncedEchoEmbedder::~SyncedEchoEmbedder() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5f45c (    0x58) SyncSeqEmbedder::~SyncSeqEmbedder() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5f4b4 (    0x68) SyncSeqEmbedder::~SyncSeqEmbedder() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5f51c (     0xc) SyncSeqEmbedder::syncFrameSizeSamples() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5f528 (     0x4) SyncSeqDetector::~SyncSeqDetector() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5f52c (    0x28) SyncSeqDetector::~SyncSeqDetector() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5f554 (     0x8) SyncSeqDetector::maxSearchLength() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5f55c (     0x8) SyncSeqDetector::useSyncFrameFlag() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5f564 (     0x4) SyncEchoDetector::~SyncEchoDetector() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5f568 (    0x28) SyncEchoDetector::~SyncEchoDetector() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5f590 (     0x8) SyncEchoDetector::minimumOffset() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5f598 (     0x8) SyncEchoDetector::useSyncFrameFlag() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5f5a0 (   0x174) std::__1::vector<std::__1::vector<float, std::__1::allocator<float>>, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float>>>>::__append(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5f714 (    0x78) std::__1::vector<std::__1::vector<float, std::__1::allocator<float>>, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float>>>>::__swap_out_circular_buffer(std::__1::__split_buffer<std::__1::vector<float, std::__1::allocator<float>>, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float>>>&>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5f78c (    0x18) std::__1::vector<std::__1::vector<float, std::__1::allocator<float>>, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float>>>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5f7a4 (    0x48) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<std::__1::vector<float, std::__1::allocator<float>>>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<std::__1::vector<float, std::__1::allocator<float>>>>(std::__1::allocator<std::__1::vector<float, std::__1::allocator<float>>>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5f7ec (    0xac) std::__1::reverse_iterator<std::__1::vector<float, std::__1::allocator<float>>*> std::__1::__uninitialized_allocator_move_if_noexcept[abi:v160006]<std::__1::allocator<std::__1::vector<float, std::__1::allocator<float>>>, std::__1::reverse_iterator<std::__1::vector<float, std::__1::allocator<float>>*>, std::__1::reverse_iterator<std::__1::vector<float, std::__1::allocator<float>>*>, std::__1::reverse_iterator<std::__1::vector<float, std::__1::allocator<float>>*>>(std::__1::allocator<std::__1::vector<float, std::__1::allocator<float>>>&, std::__1::reverse_iterator<std::__1::vector<float, std::__1::allocator<float>>*>, std::__1::reverse_iterator<std::__1::vector<float, std::__1::allocator<float>>*>, std::__1::reverse_iterator<std::__1::vector<float, std::__1::allocator<float>>*>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5f898 (    0x38) std::__1::__exception_guard_exceptions<std::__1::_AllocatorDestroyRangeReverse<std::__1::allocator<std::__1::vector<float, std::__1::allocator<float>>>, std::__1::reverse_iterator<std::__1::vector<float, std::__1::allocator<float>>*>>>::~__exception_guard_exceptions[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5f8d0 (    0x48) std::__1::_AllocatorDestroyRangeReverse<std::__1::allocator<std::__1::vector<float, std::__1::allocator<float>>>, std::__1::reverse_iterator<std::__1::vector<float, std::__1::allocator<float>>*>>::operator()[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5f918 (    0x38) std::__1::__split_buffer<std::__1::vector<float, std::__1::allocator<float>>, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float>>>&>::~__split_buffer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5f950 (    0x5c) std::__1::__split_buffer<std::__1::vector<float, std::__1::allocator<float>>, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float>>>&>::__destruct_at_end[abi:v160006](std::__1::vector<float, std::__1::allocator<float>>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5f9ac (   0x13c) std::__1::vector<signed char, std::__1::allocator<signed char>>::__append(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5fae8 (    0x18) std::__1::vector<signed char, std::__1::allocator<signed char>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5fb00 (   0x134) std::__1::vector<unsigned int, std::__1::allocator<unsigned int>>::__append(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5fc34 (    0x18) std::__1::vector<unsigned int, std::__1::allocator<unsigned int>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5fc4c (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<unsigned int>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<unsigned int>>(std::__1::allocator<unsigned int>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5fc84 (    0x84) std::__1::vector<float, std::__1::allocator<float>>::vector(unsigned long, float const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5fd08 (   0x130) std::__1::vector<SyncSeqDetector::peakInfo, std::__1::allocator<SyncSeqDetector::peakInfo>>::__append(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5fe38 (    0x18) std::__1::vector<SyncSeqDetector::peakInfo, std::__1::allocator<SyncSeqDetector::peakInfo>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5fe50 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<SyncSeqDetector::peakInfo>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<SyncSeqDetector::peakInfo>>(std::__1::allocator<SyncSeqDetector::peakInfo>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5fe88 (   0x134) std::__1::vector<int, std::__1::allocator<int>>::__append(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5ffbc (    0x18) std::__1::vector<int, std::__1::allocator<int>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f5ffd4 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<int>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<int>>(std::__1::allocator<int>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f6000c (    0x74) EchoEmbedder::~EchoEmbedder() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f60080 (    0xa8) std::__1::deque<unsigned char, std::__1::allocator<unsigned char>>::~deque[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f60128 (    0x50) std::__1::__split_buffer<unsigned char*, std::__1::allocator<unsigned char*>>::~__split_buffer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f60178 (    0xa0) SyncSeqDetector::~SyncSeqDetector() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f60218 (    0xd4) SyncEchoDetector::~SyncEchoDetector() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f602ec (   0x124) float std::__1::normal_distribution<float>::operator()<std::__1::linear_congruential_engine<unsigned int, 48271u, 0u, 2147483647u>>(std::__1::linear_congruential_engine<unsigned int, 48271u, 0u, 2147483647u>&, std::__1::normal_distribution<float>::param_type const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f60410 (    0x4c) _ZNSt3__18any_castB7v160006IbEEu13__add_pointerIT_EPNS_3anyE [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f6045c (   0x304) std::__1::deque<unsigned char, std::__1::allocator<unsigned char>>::__add_front_capacity() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f60760 (   0x120) std::__1::__split_buffer<unsigned char*, std::__1::allocator<unsigned char*>>::push_front(unsigned char* const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f60880 (   0x120) std::__1::__split_buffer<unsigned char*, std::__1::allocator<unsigned char*>>::push_front(unsigned char*&&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f609a0 (   0x108) std::__1::__split_buffer<unsigned char*, std::__1::allocator<unsigned char*>>::push_back(unsigned char*&&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f60aa8 (   0x108) std::__1::__split_buffer<unsigned char*, std::__1::allocator<unsigned char*>&>::push_back(unsigned char*&&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f60bb0 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<unsigned char*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<unsigned char*>>(std::__1::allocator<unsigned char*>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f60be8 (   0x224) std::__1::deque<unsigned char, std::__1::allocator<unsigned char>>::__move_and_check(std::__1::__deque_iterator<unsigned char, unsigned char*, unsigned char&, unsigned char**, long, 4096l>, std::__1::__deque_iterator<unsigned char, unsigned char*, unsigned char&, unsigned char**, long, 4096l>, std::__1::__deque_iterator<unsigned char, unsigned char*, unsigned char&, unsigned char**, long, 4096l>, unsigned char const*&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f60e0c (    0x6c) std::__1::__deque_iterator<unsigned char, unsigned char*, unsigned char&, unsigned char**, long, 4096l>::operator+[abi:v160006](long) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f60e78 (   0x36c) std::__1::deque<unsigned char, std::__1::allocator<unsigned char>>::__add_back_capacity() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f611e4 (   0x1b4) std::__1::deque<unsigned char, std::__1::allocator<unsigned char>>::__move_backward_and_check(std::__1::__deque_iterator<unsigned char, unsigned char*, unsigned char&, unsigned char**, long, 4096l>, std::__1::__deque_iterator<unsigned char, unsigned char*, unsigned char&, unsigned char**, long, 4096l>, std::__1::__deque_iterator<unsigned char, unsigned char*, unsigned char&, unsigned char**, long, 4096l>, unsigned char const*&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f61398 (    0x6c) std::__1::__deque_iterator<unsigned char, unsigned char*, unsigned char&, unsigned char**, long, 4096l>::operator-[abi:v160006](long) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f61404 (   0x11c) std::__1::__split_buffer<unsigned char*, std::__1::allocator<unsigned char*>&>::push_front(unsigned char* const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f61520 (    0xd8) std::__1::pair<unsigned char*, std::__1::__deque_iterator<unsigned char, unsigned char*, unsigned char&, unsigned char**, long, 4096l>> std::__1::__move_backward_loop<std::__1::_ClassicAlgPolicy>::operator()[abi:v160006]<unsigned char*, std::__1::__deque_iterator<unsigned char, unsigned char*, unsigned char&, unsigned char**, long, 4096l>, 0>(unsigned char*, unsigned char*, std::__1::__deque_iterator<unsigned char, unsigned char*, unsigned char&, unsigned char**, long, 4096l>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f615f8 (    0x4c) _ZNSt3__18any_castB7v160006IKfEEu13__add_pointerIT_EPNS_3anyE [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f61644 (    0x4c) _ZNSt3__18any_castB7v160006IKjEEu13__add_pointerIT_EPNS_3anyE [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f61690 (    0x4c) _ZNSt3__18any_castB7v160006IKbEEu13__add_pointerIT_EPNS_3anyE [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f616dc (    0x4c) std::__1::__throw_bad_function_call[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f61728 (     0x4) std::__1::bad_function_call::~bad_function_call() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f6172c (    0x28) std::__1::bad_function_call::~bad_function_call() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f61754 (    0x14) +[AUPasscodeDecoder getAUDesc] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f61768 (    0x28) +[AUPasscodeDecoder registerAU] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f61790 (    0x6c) __31+[AUPasscodeDecoder registerAU]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f617fc (     0xc) +[AUPasscodeDecoder supportedDecoders] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f61808 (   0x604) -[AUPasscodeDecoder initWithComponentDescription:options:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f61e0c (    0xa8) BufferedAudioBus::init(AVAudioFormat*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f61eb4 (    0x10) -[AUPasscodeDecoder inputBusses] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f61ec4 (    0x10) -[AUPasscodeDecoder outputBusses] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f61ed4 (   0x90c) -[AUPasscodeDecoder allocateRenderResourcesAndReturnError:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f627e0 (    0xa4) BufferedAudioBus::allocateRenderResources(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f62884 (    0x60) std::__1::__unique_if<caulk::concurrent::messenger>::__unique_single std::__1::make_unique[abi:v160006]<caulk::concurrent::messenger, caulk::concurrent::messenger::thread_strategy, caulk::thread::attributes const&>(caulk::concurrent::messenger::thread_strategy&&, caulk::thread::attributes const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f628e4 (    0x44) -[AUPasscodeDecoder setRenderingOffline:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f62928 (    0x60) -[AUPasscodeDecoder deallocateRenderResources] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f62988 (   0x130) -[AUPasscodeDecoder internalRenderBlock] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f62ab8 (   0x220) __40-[AUPasscodeDecoder internalRenderBlock]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f62cd8 (    0xa8) BufferedInputBus::pullInput(unsigned int*, AudioTimeStamp const*, unsigned int, long, int (unsigned int*, AudioTimeStamp const*, unsigned int, long, AudioBufferList*) block_pointer) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f62d80 (    0x10) __copy_helper_block_ea8_32b [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f62d90 (   0x160) -[AUPasscodeDecoder handleDecodedData:ofLength:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f62ef0 (    0x6c) __48-[AUPasscodeDecoder handleDecodedData:ofLength:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f62f5c (    0x3c) __copy_helper_block_ea8_32s40s [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f62f98 (    0x3c) __destroy_helper_block_ea8_32s40s [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f62fd4 (    0x10) -[AUPasscodeDecoder dispatchQueue] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f62fe4 (    0x14) -[AUPasscodeDecoder setDispatchQueue:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f62ff8 (    0x10) -[AUPasscodeDecoder dataHandler] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f63008 (     0xc) -[AUPasscodeDecoder setDataHandler:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f63014 (    0x10) -[AUPasscodeDecoder codecConfig] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f63024 (    0x14) -[AUPasscodeDecoder setCodecConfig:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f63038 (    0x10) -[AUPasscodeDecoder resultData] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f63048 (    0x14) -[AUPasscodeDecoder setResultData:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f6305c (   0x1ac) -[AUPasscodeDecoder .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f63208 (    0xac) -[AUPasscodeDecoder .cxx_construct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f632b4 (   0x13c) std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>::__append(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f633f0 (    0xa0) std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::basic_string[abi:v160006]<std::nullptr_t>(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f63490 (    0x18) std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f634a8 (    0x4c) std::__1::__throw_bad_optional_access[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f634f4 (    0x90) std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__init_copy_ctor_external(char const*, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f63584 (    0x44) BufferedInputBus::prepareInputBufferList() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f635c8 (    0xa0) DecodedDataMessage::DecodedDataMessage(AUPasscodeDecoder*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f63668 (    0x4c) DecodedDataMessage::~DecodedDataMessage() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f636b4 (    0x50) DecodedDataMessage::~DecodedDataMessage() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f63704 (    0x14) DecodedDataMessage::perform() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f63718 (    0x74) std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>::vector(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f6378c (    0x58) std::__1::default_delete<DecodedDataMessage>::operator()[abi:v160006](DecodedDataMessage*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f637e4 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001f4f637f8 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001f4f6380c (    0x40) std::__1::unique_ptr<caulk::concurrent::messenger, std::__1::default_delete<caulk::concurrent::messenger>>::reset[abi:v160006](caulk::concurrent::messenger*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f6384c (   0x59c) -[APCEncoderProcessor initWithAssetURL:codecConfig:payload:outputURL:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f63de8 (   0x444) -[APCEncoderProcessor evaluateAsset:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f6422c (     0x8) -[APCEncoderProcessor run] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f64234 (    0x3c) -[APCEncoderProcessor getEmbeddingInfo:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f64270 (    0x50) -[APCEncoderProcessor .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f642c0 (     0xc) -[APCDecoderProcessor initWithInputURL:codecConfig:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f642cc (   0x570) -[APCDecoderProcessor initWithInputURL:codecConfig:resultData:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f6483c (    0x80) __69-[APCDecoderProcessor initWithInputURL:codecConfig:resultData:error:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f648bc (    0x3c) -[APCDecoderProcessor run] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f648f8 (    0xc4) -[APCDecoderProcessor getResultData:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f649bc (    0x50) -[APCDecoderProcessor .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f64a0c (   0x18c) +[APCListener capabilityData] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f64b98 (    0x74) -[APCListener init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f64c0c (   0x274) -[APCListener initWithConfigurationData:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f64e80 (   0x180) -[APCListener initWithCodecConfiguration:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f65000 (     0x8) -[APCListener startListening] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f65008 (   0x2a4) -[APCListener startListeningWithError:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f652ac (    0xb8) __39-[APCListener startListeningWithError:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f65364 (    0xa8) -[APCListener stopListening] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f6540c (    0x4c) -[APCListener getResultData:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f65458 (     0x8) -[APCListener retrievedDataHandler] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f65460 (     0x8) -[APCListener setRetrievedDataHandler:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f65468 (     0x8) -[APCListener invalidationHandler] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f65470 (     0x8) -[APCListener setInvalidationHandler:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f65478 (     0x8) -[APCListener dispatchQueue] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f65480 (     0xc) -[APCListener setDispatchQueue:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f6548c (    0x74) -[APCListener .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f65500 (    0x78) -[APCPlayer init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f65578 (   0x1b8) -[APCPlayer createCompatibleConfigForCapabilites:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f65730 (     0x8) -[APCPlayer initWithListenerCapabilityData:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f65738 (   0x420) -[APCPlayer initWithListenerCapabilityData:payloadLength:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f65b58 (   0x1c4) -[APCPlayer initWithCodecConfiguration:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f65d1c (    0x7c) -[APCPlayer setDispatchQueue:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f65d98 (    0x14) -[APCPlayer setCallbackTimingMSec:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f65dac (   0x1b4) +[APCPlayer urlForCarrierAsset:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f65f60 (    0x24) +[APCPlayer fileNameForCarrierAsset:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f65f84 (   0x158) +[APCPlayer carrierAssetIdentifiers] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f660dc (    0xc4) +[APCPlayer assetIDFromIdentifier:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f661a0 (   0x1ec) -[APCPlayer preparePayload:usingCarrierAsset:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f6638c (   0x1c4) -[APCPlayer preparePayload:usingCarrierAtURL:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f66550 (     0xc) -[APCPlayer startSend] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f6655c (    0x84) -[APCPlayer startSendAtTime:withBeginning:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f665e0 (     0x8) -[APCPlayer endPasscodeEmbedding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f665e8 (    0xcc) -[APCPlayer stopSend:withCompletion:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f666b4 (    0x18) __37-[APCPlayer stopSend:withCompletion:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f666cc (    0x48) __copy_helper_block_ea8_32s40b [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f66714 (    0xcc) -[APCPlayer stopSendAfterMinimumLoops:withCompletion:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f667e0 (    0x18) __54-[APCPlayer stopSendAfterMinimumLoops:withCompletion:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f667f8 (    0xcc) -[APCPlayer stopSendWithFadeOut:completion:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f668c4 (    0x18) __44-[APCPlayer stopSendWithFadeOut:completion:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f668dc (    0x38) -[APCPlayer embeddingInfo] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f66914 (     0x8) -[APCPlayer payload] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f6691c (     0x8) -[APCPlayer configurationData] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f66924 (     0x8) -[APCPlayer dispatchQueue] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f6692c (     0xc) -[APCPlayer isPlaying] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f66938 (     0x8) -[APCPlayer callbackTimingMSec] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f66940 (    0x80) -[APCPlayer .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f669c0 (     0xc) +[AUPasscodeEncoder supportedEncoders] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f669cc (    0x14) +[AUPasscodeEncoder getAUDesc] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f669e0 (    0x28) +[AUPasscodeEncoder registerAU] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f66a08 (    0x6c) __31+[AUPasscodeEncoder registerAU]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f66a74 (   0x73c) -[AUPasscodeEncoder initWithComponentDescription:options:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f671b0 (    0x38) -[AUPasscodeEncoder dealloc] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f671e8 (    0xf4) -[AUPasscodeEncoder handleEOFReachedForAsset] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f672dc (    0x1c) __45-[AUPasscodeEncoder handleEOFReachedForAsset]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f672f8 (    0x10) -[AUPasscodeEncoder inputBusses] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f67308 (    0x10) -[AUPasscodeEncoder outputBusses] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f67318 (   0xaf8) -[AUPasscodeEncoder allocateRenderResourcesAndReturnError:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f67e10 (    0x60) -[AUPasscodeEncoder deallocateRenderResources] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f67e70 (    0x9c) -[AUPasscodeEncoder reset] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f67f0c (   0x1f4) -[AUPasscodeEncoder internalRenderBlock] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f68100 (   0x4c4) __40-[AUPasscodeEncoder internalRenderBlock]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f685c4 (    0x10) __copy_helper_block_ea8_32r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f685d4 (     0xc) __destroy_helper_block_ea8_32r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f685e0 (     0x8) -[AUPasscodeEncoder canProcessInPlace] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f685e8 (    0x10) -[AUPasscodeEncoder payload] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f685f8 (     0xc) -[AUPasscodeEncoder setPayload:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f68604 (    0x10) -[AUPasscodeEncoder codecConfig] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f68614 (    0x14) -[AUPasscodeEncoder setCodecConfig:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f68628 (    0x10) -[AUPasscodeEncoder assetLength] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f68638 (    0x10) -[AUPasscodeEncoder setAssetLength:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f68648 (    0x10) -[AUPasscodeEncoder silenceOutputOnNextAssetEnding] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f68658 (    0x10) -[AUPasscodeEncoder setSilenceOutputOnNextAssetEnding:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f68668 (    0x10) -[AUPasscodeEncoder numLoopsToStopAfter] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f68678 (    0x10) -[AUPasscodeEncoder setNumLoopsToStopAfter:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f68688 (    0x10) -[AUPasscodeEncoder fadeOutTimeSeconds] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f68698 (    0x10) -[AUPasscodeEncoder setFadeOutTimeSeconds:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f686a8 (    0x10) -[AUPasscodeEncoder triggerFadeOut] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f686b8 (    0x10) -[AUPasscodeEncoder setTriggerFadeOut:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f686c8 (    0x10) -[AUPasscodeEncoder embedPasscode] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f686d8 (    0x10) -[AUPasscodeEncoder setEmbedPasscode:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f686e8 (    0x10) -[AUPasscodeEncoder dispatchQueue] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f686f8 (    0x14) -[AUPasscodeEncoder setDispatchQueue:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f6870c (    0x10) -[AUPasscodeEncoder assetEndedAndSilencedHandler] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f6871c (     0xc) -[AUPasscodeEncoder setAssetEndedAndSilencedHandler:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f68728 (    0x10) -[AUPasscodeEncoder passcodeEmbedInfo] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f68738 (    0x14) -[AUPasscodeEncoder setPasscodeEmbedInfo:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f6874c (   0x168) -[AUPasscodeEncoder .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f688b4 (    0x60) -[AUPasscodeEncoder .cxx_construct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f68914 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001f4f68928 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001f4f6893c (    0x3c) EOFReachedMessage::~EOFReachedMessage() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f68978 (    0x40) EOFReachedMessage::~EOFReachedMessage() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f689b8 (     0x8) EOFReachedMessage::perform() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f689c0 (    0x54) std::__1::unique_ptr<EOFReachedMessage, std::__1::default_delete<EOFReachedMessage>>::reset[abi:v160006](EOFReachedMessage*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f68a14 (   0x8ac) -[AUAudioUnitOfflineProcessor initWithAudioUnit:inputFileURL:outputFileURL:ioSampleRate:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f692c0 (    0x2c) std::__1::unique_ptr<OpaqueExtAudioFile, applesauce::raii::v1::detail::opaque_deletion_functor<OpaqueExtAudioFile*, &ExtAudioFileDispose>>::reset[abi:v160006](OpaqueExtAudioFile*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f692ec (   0x1f0) __89-[AUAudioUnitOfflineProcessor initWithAudioUnit:inputFileURL:outputFileURL:ioSampleRate:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f694dc (    0xfc) auto -[AUAudioUnitOfflineProcessor initWithAudioUnit:inputFileURL:outputFileURL:ioSampleRate:]::$_0::operator()<CA::StreamDescription, std::__1::vector<float, std::__1::allocator<float>>>(CA::StreamDescription const&, std::__1::vector<float, std::__1::allocator<float>>&) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f695d8 (   0x250) -[AUAudioUnitOfflineProcessor run] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f69828 (     0x8) -[AUAudioUnitOfflineProcessor assetLength] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f69830 (    0xa8) -[AUAudioUnitOfflineProcessor .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f698d8 (    0x78) -[AUAudioUnitOfflineProcessor .cxx_construct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f69950 (   0x118) std::__1::vector<float, std::__1::allocator<float>>::assign(unsigned long, float const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f69a68 (    0x80) std::__1::vector<char, std::__1::allocator<char>>::vector(unsigned long, char const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f69ae8 (    0x44) std::__1::vector<char, std::__1::allocator<char>>::__vallocate[abi:v160006](unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f69b2c (    0x18) std::__1::vector<char, std::__1::allocator<char>>::__throw_length_error[abi:v160006]() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001f4f69b44 (    0x5c) EchoEmbedder::EchoEmbedder() (.cold.1) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
            0x00000001f4f69ba0 (   0x620) __TEXT __auth_stubs
                0x00000001f4f69ba0 (    0x10) DYLD-STUB$$ExtAudioFileCreateWithURL [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f69bb0 (    0x10) DYLD-STUB$$ExtAudioFileDispose [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f69bc0 (    0x10) DYLD-STUB$$ExtAudioFileGetProperty [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f69bd0 (    0x10) DYLD-STUB$$ExtAudioFileOpenURL [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f69be0 (    0x10) DYLD-STUB$$ExtAudioFileRead [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f69bf0 (    0x10) DYLD-STUB$$ExtAudioFileSeek [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f69c00 (    0x10) DYLD-STUB$$ExtAudioFileSetProperty [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f69c10 (    0x10) DYLD-STUB$$ExtAudioFileTell [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f69c20 (    0x10) DYLD-STUB$$ExtAudioFileWrite [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f69c30 (    0x10) DYLD-STUB$$NSStringFromClass [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f69c40 (    0x10) DYLD-STUB$$_Block_object_assign [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f69c50 (    0x10) DYLD-STUB$$_Block_object_dispose [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f69c60 (    0x10) DYLD-STUB$$_Unwind_Resume [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f69c70 (    0x10) DYLD-STUB$$caulk::concurrent::message::~message() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f69c80 (    0x10) DYLD-STUB$$caulk::concurrent::messenger::shared_logging_priority() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f69c90 (    0x10) DYLD-STUB$$caulk::concurrent::messenger::enqueue(caulk::concurrent::message&) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f69ca0 (    0x10) DYLD-STUB$$caulk::concurrent::messenger::messenger(caulk::concurrent::messenger::thread_strategy, caulk::thread::attributes const&) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f69cb0 (    0x10) DYLD-STUB$$caulk::concurrent::messenger::~messenger() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f69cc0 (    0x10) DYLD-STUB$$std::logic_error::logic_error(char const*) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f69cd0 (    0x10) DYLD-STUB$$std::bad_array_new_length::bad_array_new_length() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f69ce0 (    0x10) DYLD-STUB$$std::__1::mutex::lock() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f69cf0 (    0x10) DYLD-STUB$$std::__1::mutex::unlock() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f69d00 (    0x10) DYLD-STUB$$std::__1::mutex::~mutex() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f69d10 (    0x10) DYLD-STUB$$std::__1::chrono::system_clock::now() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f69d20 (    0x10) DYLD-STUB$$std::bad_cast::bad_cast() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f69d30 (    0x10) DYLD-STUB$$std::bad_cast::~bad_cast() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f69d40 (    0x10) DYLD-STUB$$std::exception::~exception() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f69d50 (    0x10) DYLD-STUB$$std::terminate() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f69d60 (    0x10) DYLD-STUB$$operator delete(void*) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f69d70 (    0x10) DYLD-STUB$$operator new(unsigned long) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f69d80 (    0x10) DYLD-STUB$$__cxa_allocate_exception [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f69d90 (    0x10) DYLD-STUB$$__cxa_begin_catch [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f69da0 (    0x10) DYLD-STUB$$__cxa_free_exception [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f69db0 (    0x10) DYLD-STUB$$__cxa_guard_abort [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f69dc0 (    0x10) DYLD-STUB$$__cxa_guard_acquire [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f69dd0 (    0x10) DYLD-STUB$$__cxa_guard_release [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f69de0 (    0x10) DYLD-STUB$$__cxa_throw [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f69df0 (    0x10) DYLD-STUB$$__exp10f [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f69e00 (    0x10) DYLD-STUB$$__stack_chk_fail [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f69e10 (    0x10) DYLD-STUB$$__udivti3 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f69e20 (    0x10) DYLD-STUB$$_os_log_impl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f69e30 (    0x10) DYLD-STUB$$bzero [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f69e40 (    0x10) DYLD-STUB$$dispatch_async [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f69e50 (    0x10) DYLD-STUB$$dispatch_get_global_queue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f69e60 (    0x10) DYLD-STUB$$dispatch_once [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f69e70 (    0x10) DYLD-STUB$$dispatch_resume [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f69e80 (    0x10) DYLD-STUB$$dispatch_semaphore_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f69e90 (    0x10) DYLD-STUB$$dispatch_semaphore_signal [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f69ea0 (    0x10) DYLD-STUB$$dispatch_semaphore_wait [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f69eb0 (    0x10) DYLD-STUB$$dispatch_source_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f69ec0 (    0x10) DYLD-STUB$$dispatch_source_set_event_handler [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f69ed0 (    0x10) DYLD-STUB$$dispatch_source_set_timer [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f69ee0 (    0x10) DYLD-STUB$$dispatch_suspend [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f69ef0 (    0x10) DYLD-STUB$$dispatch_time [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f69f00 (    0x10) DYLD-STUB$$expf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f69f10 (    0x10) DYLD-STUB$$log [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f69f20 (    0x10) DYLD-STUB$$log10f [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f69f30 (    0x10) DYLD-STUB$$logf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f69f40 (    0x10) DYLD-STUB$$mach_absolute_time [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f69f50 (    0x10) DYLD-STUB$$memcpy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f69f60 (    0x10) DYLD-STUB$$memmove [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f69f70 (    0x10) DYLD-STUB$$memset [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f69f80 (    0x10) DYLD-STUB$$objc_alloc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f69f90 (    0x10) DYLD-STUB$$objc_alloc_init [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f69fa0 (    0x10) DYLD-STUB$$objc_autorelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f69fb0 (    0x10) DYLD-STUB$$objc_autoreleaseReturnValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f69fc0 (    0x10) DYLD-STUB$$objc_copyWeak [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f69fd0 (    0x10) DYLD-STUB$$objc_destroyWeak [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f69fe0 (    0x10) DYLD-STUB$$objc_enumerationMutation [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f69ff0 (    0x10) DYLD-STUB$$objc_initWeak [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f6a000 (    0x10) DYLD-STUB$$objc_loadWeakRetained [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f6a010 (    0x10) DYLD-STUB$$objc_msgSendSuper2 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f6a020 (    0x10) DYLD-STUB$$objc_opt_class [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f6a030 (    0x10) DYLD-STUB$$objc_opt_isKindOfClass [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f6a040 (    0x10) DYLD-STUB$$objc_release [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f6a050 (    0x10) DYLD-STUB$$objc_retain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f6a060 (    0x10) DYLD-STUB$$objc_retainAutorelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f6a070 (    0x10) DYLD-STUB$$objc_retainAutoreleaseReturnValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f6a080 (    0x10) DYLD-STUB$$objc_retainAutoreleasedReturnValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f6a090 (    0x10) DYLD-STUB$$objc_retainBlock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f6a0a0 (    0x10) DYLD-STUB$$objc_setProperty_nonatomic_copy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f6a0b0 (    0x10) DYLD-STUB$$objc_storeStrong [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f6a0c0 (    0x10) DYLD-STUB$$os_log_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f6a0d0 (    0x10) DYLD-STUB$$os_log_type_enabled [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f6a0e0 (    0x10) DYLD-STUB$$strcmp [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f6a0f0 (    0x10) DYLD-STUB$$strlen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f6a100 (    0x10) DYLD-STUB$$vDSP_biquad [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f6a110 (    0x10) DYLD-STUB$$vDSP_biquad_CreateSetup [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f6a120 (    0x10) DYLD-STUB$$vDSP_biquad_DestroySetup [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f6a130 (    0x10) DYLD-STUB$$vDSP_conv [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f6a140 (    0x10) DYLD-STUB$$vDSP_create_fftsetup [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f6a150 (    0x10) DYLD-STUB$$vDSP_destroy_fftsetup [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f6a160 (    0x10) DYLD-STUB$$vDSP_fft_zip [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f6a170 (    0x10) DYLD-STUB$$vDSP_normalize [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f6a180 (    0x10) DYLD-STUB$$vDSP_vadd [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f6a190 (    0x10) DYLD-STUB$$vDSP_vclr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f6a1a0 (    0x10) DYLD-STUB$$vDSP_vsma [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001f4f6a1b0 (    0x10) DYLD-STUB$$vDSP_vsmul [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
            0x00000001f4f6a1c0 (   0xe0c) __TEXT __objc_methlist
                0x00000001f4f6a1c0 (    0x38) _OBJC_$_CLASS_METHODS_APCCodecFactory [NameNList, MangledNameNList, NList] 
                0x00000001f4f6a1f8 (    0x18) _OBJC_$_CLASS_METHODS_EchoCodecCapability [NameNList, MangledNameNList, NList] 
                0x00000001f4f6a210 (    0x18) _OBJC_$_CLASS_METHODS_EchoCodecConfiguration [NameNList, MangledNameNList, NList] 
                0x00000001f4f6a228 (    0x80) _OBJC_$_INSTANCE_METHODS_EchoCodecCapability [NameNList, MangledNameNList, NList] 
                0x00000001f4f6a2a8 (   0x170) _OBJC_$_INSTANCE_METHODS_EchoCodecConfiguration [NameNList, MangledNameNList, NList] 
                0x00000001f4f6a418 (    0x18) _OBJC_$_CLASS_METHODS_NullCodecCapability [NameNList, MangledNameNList, NList] 
                0x00000001f4f6a430 (    0x18) _OBJC_$_CLASS_METHODS_NullCodecConfiguration [NameNList, MangledNameNList, NList] 
                0x00000001f4f6a448 (    0x30) _OBJC_$_INSTANCE_METHODS_NullCodecCapability [NameNList, MangledNameNList, NList] 
                0x00000001f4f6a478 (    0x68) _OBJC_$_INSTANCE_METHODS_NullCodecConfiguration [NameNList, MangledNameNList, NList] 
                0x00000001f4f6a4e0 (    0x48) _OBJC_$_INSTANCE_METHODS_APCListenerResultData [NameNList, MangledNameNList, NList] 
                0x00000001f4f6a528 (    0x48) _OBJC_$_INSTANCE_METHODS_APCPlayerEmbedInfo [NameNList, MangledNameNList, NList] 
                0x00000001f4f6a570 (    0x18) _OBJC_$_CLASS_METHODS_APCPlayerEngine [NameNList, MangledNameNList, NList] 
                0x00000001f4f6a588 (   0x150) _OBJC_$_INSTANCE_METHODS_APCPlayerEngine [NameNList, MangledNameNList, NList] 
                0x00000001f4f6a6d8 (    0x18) _OBJC_$_CLASS_METHODS_MLSCodecCapability [NameNList, MangledNameNList, NList] 
                0x00000001f4f6a6f0 (    0x18) _OBJC_$_CLASS_METHODS_MLSCodecConfiguration [NameNList, MangledNameNList, NList] 
                0x00000001f4f6a708 (    0x30) _OBJC_$_INSTANCE_METHODS_MLSCodecCapability [NameNList, MangledNameNList, NList] 
                0x00000001f4f6a738 (    0x18) _OBJC_$_INSTANCE_METHODS_MLSCodecConfiguration [NameNList, MangledNameNList, NList] 
                0x00000001f4f6a750 (    0x38) _OBJC_$_CLASS_METHODS_APCDefaults [NameNList, MangledNameNList, NList] 
                0x00000001f4f6a788 (    0x50) _OBJC_$_CLASS_METHODS_APCCodecInfo [NameNList, MangledNameNList, NList] 
                0x00000001f4f6a7d8 (    0x18) _OBJC_$_CLASS_METHODS_AUPasscodeCodecCommandLineOption [NameNList, MangledNameNList, NList] 
                0x00000001f4f6a7f0 (    0x18) _OBJC_$_CLASS_METHODS_AUPasscodeCodecConfiguration [NameNList, MangledNameNList, NList] 
                0x00000001f4f6a808 (    0x68) _OBJC_$_INSTANCE_METHODS_AUPasscodeCodecCapability [NameNList, MangledNameNList, NList] 
                0x00000001f4f6a870 (    0x38) _OBJC_$_INSTANCE_METHODS_AUPasscodeCodecCommandLineOption [NameNList, MangledNameNList, NList] 
                0x00000001f4f6a8a8 (    0xc8) _OBJC_$_INSTANCE_METHODS_AUPasscodeCodecConfiguration [NameNList, MangledNameNList, NList] 
                0x00000001f4f6a970 (    0x20) _OBJC_$_CLASS_METHODS_APCListenerEngine [NameNList, MangledNameNList, NList] 
                0x00000001f4f6a990 (    0x78) _OBJC_$_INSTANCE_METHODS_APCListenerEngine [NameNList, MangledNameNList, NList] 
                0x00000001f4f6aa08 (    0x30) _OBJC_$_CLASS_METHODS_AUPasscodeDecoder [NameNList, MangledNameNList, NList] 
                0x00000001f4f6aa38 (    0xe0) _OBJC_$_INSTANCE_METHODS_AUPasscodeDecoder [NameNList, MangledNameNList, NList] 
                0x00000001f4f6ab18 (    0x48) _OBJC_$_INSTANCE_METHODS_APCDecoderProcessor [NameNList, MangledNameNList, NList] 
                0x00000001f4f6ab60 (    0x48) _OBJC_$_INSTANCE_METHODS_APCEncoderProcessor [NameNList, MangledNameNList, NList] 
                0x00000001f4f6aba8 (    0x18) _OBJC_$_CLASS_METHODS_APCListener [NameNList, MangledNameNList, NList] 
                0x00000001f4f6abc0 (    0xb0) _OBJC_$_INSTANCE_METHODS_APCListener [NameNList, MangledNameNList, NList] 
                0x00000001f4f6ac70 (    0x38) _OBJC_$_CLASS_METHODS_APCPlayer [NameNList, MangledNameNList, NList] 
                0x00000001f4f6aca8 (   0x110) _OBJC_$_INSTANCE_METHODS_APCPlayer [NameNList, MangledNameNList, NList] 
                0x00000001f4f6adb8 (    0x30) _OBJC_$_CLASS_METHODS_AUPasscodeEncoder [NameNList, MangledNameNList, NList] 
                0x00000001f4f6ade8 (   0x1a0) _OBJC_$_INSTANCE_METHODS_AUPasscodeEncoder [NameNList, MangledNameNList, NList] 
                0x00000001f4f6af88 (    0x44) _OBJC_$_INSTANCE_METHODS_AUAudioUnitOfflineProcessor [NameNList, MangledNameNList, NList] 
            0x00000001f4f6afd0 (  0x4f68) __TEXT __const
                0x00000001f4f6afd0 (    0x38) AudioPasscodeVersionString [EXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f6b008 (     0xc) AudioPasscodeVersionNumber [EXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f6b014 (     0x4) std::__1::piecewise_construct [NameNList, MangledNameNList, NList] 
                0x00000001f4f6b018 (    0x38) std::__1::__any_imp::__unique_typeinfo<bool>::__id [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f6b050 (     0x8) kSupportedAlgorithmVersions [NameNList, MangledNameNList, NList] 
                0x00000001f4f6b058 (    0x12) typeinfo name for EchoCodeDecoder [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f6b06a (    0x11) typeinfo name for APCDecoderBase [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f6b07b (    0x19) typeinfo name for IAudioPasscodeDecoder [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f6b094 (     0x1) std::__1::piecewise_construct [NameNList, MangledNameNList, NList] 
                0x00000001f4f6b095 (    0x11) typeinfo name for APCNullDecoder [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f6b0a6 (    0x32) typeinfo name for APCNullEncoder [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f6b0d8 (    0x12) typeinfo name for EchoCodeEncoder [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f6b0ea (    0x11) typeinfo name for APCEncoderBase [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f6b0fb (    0x18) typeinfo name for IAudioPasscodeEncoder [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f6b113 (    0x5e) typeinfo name for std::__1::__function::__func<EchoCodeEncoder::encode(float const*, float*, unsigned int)::$_0, std::__1::allocator<EchoCodeEncoder::encode(float const*, float*, unsigned int)::$_0>, void (float*, unsigned int)> [NameNList, MangledNameNList, NList] 
                0x00000001f4f6b171 (    0x24) typeinfo name for std::__1::__function::__base<void (float*, unsigned int)> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f6b195 (     0x1) std::__1::piecewise_construct [NameNList, MangledNameNList, NList] 
                0x00000001f4f6b196 (    0x2a) typeinfo name for EchoCodeEncoder::encode(float const*, float*, unsigned int)::$_0 [NameNList, MangledNameNList, NList] 
                0x00000001f4f6b1c0 (    0x9d) typeinfo name for std::__1::__function::__func<EchoCodeEncoder::evaluateCarrier(float const*, unsigned int, std::__1::map<unsigned int, std::__1::any, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, std::__1::any>>>&) const::$_1, std::__1::allocator<EchoCodeEncoder::evaluateCarrier(float const*, unsigned int, std::__1::map<unsigned int, std::__1::any, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, std::__1::any>>>&) const::$_1>, void (float*, unsigned int)> [NameNList, MangledNameNList, NList] 
                0x00000001f4f6b25d (    0x7b) typeinfo name for EchoCodeEncoder::evaluateCarrier(float const*, unsigned int, std::__1::map<unsigned int, std::__1::any, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, std::__1::any>>>&) const::$_1 [NameNList, MangledNameNList, NList] 
                0x00000001f4f6b2d8 (    0xe8) mlsCodec::kGaussianPulse [NameNList, MangledNameNList, NList] 
                0x00000001f4f6b3c0 (   0x4b0) ShapingFilter::mLPFCoef [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f6b870 (   0x4b0) ShapingFilter::mHPFCoef [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f6bd20 (     0x8) AdaptiveThreshold::mkUpdateFactor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f6bd28 (    0xa0) SyncSeqDetector::mBPFCoef [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f6bdc8 (     0x4) BitCounter::kValidBitThreshold [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f6bdcc (     0x8) kSyncEchoBitData [NameNList, MangledNameNList, NList] 
                0x00000001f4f6bdd4 (    0x15) typeinfo name for PasscodePositioner [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f6bde9 (    0x13) typeinfo name for IFramePositioner [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f6bdfc (     0xf) typeinfo name for EchoEmbedder [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f6be0b (    0x15) typeinfo name for SyncedEchoEmbedder [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f6be20 (    0x12) typeinfo name for SyncSeqEmbedder [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f6be32 (    0x12) typeinfo name for SyncSeqDetector [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f6be44 (    0x10) typeinfo name for IFrameLocater [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f6be54 (    0x14) typeinfo name for SyncEchoDetector [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f6be68 (  0x4000) echoCodec::kSyncNoiseSequence [NameNList, MangledNameNList, NList] 
                0x00000001f4f6fe68 (     0x8) std::__1::__any_imp::__unique_typeinfo<unsigned int>::__id [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f6fe70 (     0x4) std::__1::__any_imp::__unique_typeinfo<float>::__id [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f6fe74 (    0x34) typeinfo name for std::__1::bad_function_call [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f6fea8 (    0x15) typeinfo name for DecodedDataMessage [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f6febd (    0x33) std::__1::piecewise_construct [NameNList, MangledNameNList, NList] 
                0x00000001f4f6fef0 (     0x4) std::__1::piecewise_construct [NameNList, MangledNameNList, NList] 
                0x00000001f4f6fef4 (    0x44) typeinfo name for EOFReachedMessage [PEXT, NameNList, MangledNameNList, NList] 
            0x00000001f4f6ff38 (  0x1bf0) __TEXT __gcc_except_tab
                0x00000001f4f6ff38 (    0xa0) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001f4f6ffd8 (    0xe4) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x00000001f4f700bc (   0x148) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x00000001f4f70204 (    0x30) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001f4f70234 (    0x10) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x00000001f4f70244 (    0x10) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x00000001f4f70254 (    0x10) GCC_except_table12 [NameNList, MangledNameNList, NList] 
                0x00000001f4f70264 (    0x10) GCC_except_table14 [NameNList, MangledNameNList, NList] 
                0x00000001f4f70274 (    0x10) GCC_except_table15 [NameNList, MangledNameNList, NList] 
                0x00000001f4f70284 (    0x10) GCC_except_table28 [NameNList, MangledNameNList, NList] 
                0x00000001f4f70294 (    0x38) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x00000001f4f702cc (    0x4c) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x00000001f4f70318 (    0x40) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001f4f70358 (    0x10) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x00000001f4f70368 (    0x20) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x00000001f4f70388 (    0x14) GCC_except_table11 [NameNList, MangledNameNList, NList] 
                0x00000001f4f7039c (    0x14) GCC_except_table12 [NameNList, MangledNameNList, NList] 
                0x00000001f4f703b0 (    0x1c) GCC_except_table14 [NameNList, MangledNameNList, NList] 
                0x00000001f4f703cc (    0x14) GCC_except_table15 [NameNList, MangledNameNList, NList] 
                0x00000001f4f703e0 (    0x60) GCC_except_table16 [NameNList, MangledNameNList, NList] 
                0x00000001f4f70440 (    0x34) GCC_except_table17 [NameNList, MangledNameNList, NList] 
                0x00000001f4f70474 (   0x114) GCC_except_table18 [NameNList, MangledNameNList, NList] 
                0x00000001f4f70588 (    0x28) GCC_except_table19 [NameNList, MangledNameNList, NList] 
                0x00000001f4f705b0 (    0x1c) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001f4f705cc (    0x18) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x00000001f4f705e4 (    0x38) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001f4f7061c (    0x1c) GCC_except_table20 [NameNList, MangledNameNList, NList] 
                0x00000001f4f70638 (    0x10) GCC_except_table47 [NameNList, MangledNameNList, NList] 
                0x00000001f4f70648 (    0x10) GCC_except_table48 [NameNList, MangledNameNList, NList] 
                0x00000001f4f70658 (    0x10) GCC_except_table52 [NameNList, MangledNameNList, NList] 
                0x00000001f4f70668 (    0x18) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x00000001f4f70680 (     0xc) GCC_except_table12 [NameNList, MangledNameNList, NList] 
                0x00000001f4f7068c (    0x24) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001f4f706b0 (    0x14) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x00000001f4f706c4 (    0xe0) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x00000001f4f707a4 (    0x2c) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x00000001f4f707d0 (    0x18) GCC_except_table13 [NameNList, MangledNameNList, NList] 
                0x00000001f4f707e8 (    0x68) GCC_except_table14 [NameNList, MangledNameNList, NList] 
                0x00000001f4f70850 (    0x88) GCC_except_table18 [NameNList, MangledNameNList, NList] 
                0x00000001f4f708d8 (    0x14) GCC_except_table22 [NameNList, MangledNameNList, NList] 
                0x00000001f4f708ec (    0x14) GCC_except_table25 [NameNList, MangledNameNList, NList] 
                0x00000001f4f70900 (    0x14) GCC_except_table26 [NameNList, MangledNameNList, NList] 
                0x00000001f4f70914 (    0x14) GCC_except_table30 [NameNList, MangledNameNList, NList] 
                0x00000001f4f70928 (    0x18) GCC_except_table31 [NameNList, MangledNameNList, NList] 
                0x00000001f4f70940 (    0x14) GCC_except_table33 [NameNList, MangledNameNList, NList] 
                0x00000001f4f70954 (    0x10) GCC_except_table35 [NameNList, MangledNameNList, NList] 
                0x00000001f4f70964 (    0x2c) GCC_except_table36 [NameNList, MangledNameNList, NList] 
                0x00000001f4f70990 (    0x28) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x00000001f4f709b8 (    0x28) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001f4f709e0 (    0x28) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x00000001f4f70a08 (    0x18) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001f4f70a20 (    0x24) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x00000001f4f70a44 (    0x5c) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001f4f70aa0 (    0x18) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x00000001f4f70ab8 (   0x190) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x00000001f4f70c48 (     0xc) GCC_except_table36 [NameNList, MangledNameNList, NList] 
                0x00000001f4f70c54 (    0x10) GCC_except_table48 [NameNList, MangledNameNList, NList] 
                0x00000001f4f70c64 (    0x10) GCC_except_table79 [NameNList, MangledNameNList, NList] 
                0x00000001f4f70c74 (    0x10) GCC_except_table80 [NameNList, MangledNameNList, NList] 
                0x00000001f4f70c84 (    0x10) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x00000001f4f70c94 (    0x10) GCC_except_table12 [NameNList, MangledNameNList, NList] 
                0x00000001f4f70ca4 (    0x18) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001f4f70cbc (    0x18) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x00000001f4f70cd4 (    0x14) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x00000001f4f70ce8 (    0x48) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001f4f70d30 (    0x14) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x00000001f4f70d44 (    0x14) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x00000001f4f70d58 (    0x24) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001f4f70d7c (    0x14) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x00000001f4f70d90 (    0x14) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x00000001f4f70da4 (    0xb4) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x00000001f4f70e58 (    0x10) GCC_except_table11 [NameNList, MangledNameNList, NList] 
                0x00000001f4f70e68 (    0x2c) GCC_except_table12 [NameNList, MangledNameNList, NList] 
                0x00000001f4f70e94 (    0x20) GCC_except_table14 [NameNList, MangledNameNList, NList] 
                0x00000001f4f70eb4 (    0x34) GCC_except_table11 [NameNList, MangledNameNList, NList] 
                0x00000001f4f70ee8 (     0xc) GCC_except_table28 [NameNList, MangledNameNList, NList] 
                0x00000001f4f70ef4 (     0xc) GCC_except_table36 [NameNList, MangledNameNList, NList] 
                0x00000001f4f70f00 (    0x14) GCC_except_table96 [NameNList, MangledNameNList, NList] 
                0x00000001f4f70f14 (    0x10) GCC_except_table105 [NameNList, MangledNameNList, NList] 
                0x00000001f4f70f24 (     0xc) GCC_except_table118 [NameNList, MangledNameNList, NList] 
                0x00000001f4f70f30 (    0x10) GCC_except_table141 [NameNList, MangledNameNList, NList] 
                0x00000001f4f70f40 (    0x28) GCC_except_table143 [NameNList, MangledNameNList, NList] 
                0x00000001f4f70f68 (    0x24) GCC_except_table151 [NameNList, MangledNameNList, NList] 
                0x00000001f4f70f8c (    0x10) GCC_except_table156 [NameNList, MangledNameNList, NList] 
                0x00000001f4f70f9c (    0x10) GCC_except_table157 [NameNList, MangledNameNList, NList] 
                0x00000001f4f70fac (    0x10) GCC_except_table158 [NameNList, MangledNameNList, NList] 
                0x00000001f4f70fbc (    0x98) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x00000001f4f71054 (    0x1c) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x00000001f4f71070 (    0xe8) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x00000001f4f71158 (    0x14) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x00000001f4f7116c (    0x10) GCC_except_table10 [NameNList, MangledNameNList, NList] 
                0x00000001f4f7117c (    0x3c) GCC_except_table14 [NameNList, MangledNameNList, NList] 
                0x00000001f4f711b8 (    0x14) GCC_except_table15 [NameNList, MangledNameNList, NList] 
                0x00000001f4f711cc (    0x20) GCC_except_table18 [NameNList, MangledNameNList, NList] 
                0x00000001f4f711ec (    0x10) GCC_except_table19 [NameNList, MangledNameNList, NList] 
                0x00000001f4f711fc (    0x10) GCC_except_table42 [NameNList, MangledNameNList, NList] 
                0x00000001f4f7120c (     0xc) GCC_except_table46 [NameNList, MangledNameNList, NList] 
                0x00000001f4f71218 (    0xb0) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001f4f712c8 (    0xa8) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x00000001f4f71370 (    0xb4) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x00000001f4f71424 (    0x10) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x00000001f4f71434 (    0x18) GCC_except_table11 [NameNList, MangledNameNList, NList] 
                0x00000001f4f7144c (    0x2c) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001f4f71478 (    0x10) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x00000001f4f71488 (    0x48) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x00000001f4f714d0 (    0x30) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001f4f71500 (    0x3c) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x00000001f4f7153c (    0x20) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x00000001f4f7155c (    0x10) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001f4f7156c (    0x30) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x00000001f4f7159c (    0x6c) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001f4f71608 (    0x30) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x00000001f4f71638 (    0x10) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x00000001f4f71648 (    0x34) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x00000001f4f7167c (    0x20) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x00000001f4f7169c (    0x1c) GCC_except_table10 [NameNList, MangledNameNList, NList] 
                0x00000001f4f716b8 (    0x38) GCC_except_table11 [NameNList, MangledNameNList, NList] 
                0x00000001f4f716f0 (    0x2c) GCC_except_table12 [NameNList, MangledNameNList, NList] 
                0x00000001f4f7171c (    0x10) GCC_except_table14 [NameNList, MangledNameNList, NList] 
                0x00000001f4f7172c (    0x14) GCC_except_table16 [NameNList, MangledNameNList, NList] 
                0x00000001f4f71740 (    0x14) GCC_except_table20 [NameNList, MangledNameNList, NList] 
                0x00000001f4f71754 (    0x14) GCC_except_table22 [NameNList, MangledNameNList, NList] 
                0x00000001f4f71768 (    0xac) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x00000001f4f71814 (    0x14) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x00000001f4f71828 (   0x128) GCC_except_table13 [NameNList, MangledNameNList, NList] 
                0x00000001f4f71950 (    0x14) GCC_except_table17 [NameNList, MangledNameNList, NList] 
                0x00000001f4f71964 (    0x44) GCC_except_table18 [NameNList, MangledNameNList, NList] 
                0x00000001f4f719a8 (    0xe0) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001f4f71a88 (    0x10) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x00000001f4f71a98 (    0x34) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x00000001f4f71acc (    0x14) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x00000001f4f71ae0 (    0x3c) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x00000001f4f71b1c (     0xc) GCC_except_table12 [NameNList, MangledNameNList, NList] 
            0x00000001f4f71b28 (   0x984) __TEXT __oslogstring
            0x00000001f4f724ac (   0xa68) __TEXT __cstring
            0x00000001f4f72f14 (   0xbb4) __TEXT __unwind_info
            0x00000001f4f73ac8 (    0xc4) __TEXT __eh_frame
            0x00000001f4f73b8c (   0x209) __TEXT __objc_classname
            0x00000001f4f73d96 (  0x2495) __TEXT __objc_methname
            0x00000001f4f7622b (  0x1175) __TEXT __objc_methtype
            0x00000001f4f773a0 (  0x1c60) __TEXT __objc_stubs
                0x00000001f4f773a0 (    0x20) objc_msgSend$AUAudioUnit [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f773c0 (    0x20) objc_msgSend$URLForResource:withExtension: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f773e0 (    0x20) objc_msgSend$UTF8String [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f77400 (    0x20) objc_msgSend$__setDefaultValues [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f77420 (    0x20) objc_msgSend$_playbackBufferLoopCompletionHdlr [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f77440 (    0x20) objc_msgSend$_stopAudioEngineAndSession [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f77460 (    0x20) objc_msgSend$absoluteString [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f77480 (    0x20) objc_msgSend$addObject: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f774a0 (    0x20) objc_msgSend$algorithmName [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f774c0 (    0x20) objc_msgSend$algorithmVersionNumber [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f774e0 (    0x20) objc_msgSend$algorithmVersionNumbers [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f77500 (    0x20) objc_msgSend$allKeys [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f77520 (    0x20) objc_msgSend$allocWithZone: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f77540 (    0x20) objc_msgSend$allocateRenderResourcesAndReturnError: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f77560 (    0x20) objc_msgSend$appendBytes:length: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f77580 (    0x20) objc_msgSend$archivedDataWithRootObject:requiringSecureCoding:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f775a0 (    0x20) objc_msgSend$array [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f775c0 (    0x20) objc_msgSend$arrayByAddingObjectsFromArray: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f775e0 (    0x20) objc_msgSend$arrayWithArray: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f77600 (    0x20) objc_msgSend$arrayWithObjects: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f77620 (    0x20) objc_msgSend$arrayWithObjects:count: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f77640 (    0x20) objc_msgSend$assetLength [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f77660 (    0x20) objc_msgSend$attachNode: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f77680 (    0x20) objc_msgSend$audioBufferList [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f776a0 (    0x20) objc_msgSend$boolForKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f776c0 (    0x20) objc_msgSend$bundleForClass: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f776e0 (    0x20) objc_msgSend$carrierAssetIdentifiers [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f77700 (    0x20) objc_msgSend$channelCount [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f77720 (    0x20) objc_msgSend$code [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f77740 (    0x20) objc_msgSend$codecConfig [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f77760 (    0x20) objc_msgSend$connect:to:format: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f77780 (    0x20) objc_msgSend$containsObject: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f777a0 (    0x20) objc_msgSend$copy [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f777c0 (    0x20) objc_msgSend$count [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f777e0 (    0x20) objc_msgSend$countByEnumeratingWithState:objects:count: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f77800 (    0x20) objc_msgSend$createAU: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f77820 (    0x20) objc_msgSend$createBestConfigForCapability: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f77840 (    0x20) objc_msgSend$createCompatibleConfigForCapabilites: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f77860 (    0x20) objc_msgSend$createDecoderWithConfig:apcConfig:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f77880 (    0x20) objc_msgSend$createEncoderWithConfig:apcConfig:payloadData: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f778a0 (    0x20) objc_msgSend$createEngineAndAttachNodes [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f778c0 (    0x20) objc_msgSend$dataHandler [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f778e0 (    0x20) objc_msgSend$dataWithBytes:length: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f77900 (    0x20) objc_msgSend$dataWithData: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f77920 (    0x20) objc_msgSend$decodeFloatForKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f77940 (    0x20) objc_msgSend$decodeIntegerForKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f77960 (    0x20) objc_msgSend$decodeObjectOfClass:forKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f77980 (    0x20) objc_msgSend$decodeObjectOfClasses:forKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f779a0 (    0x20) objc_msgSend$delayForBit0 [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f779c0 (    0x20) objc_msgSend$delayForBit1 [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f779e0 (    0x20) objc_msgSend$dictionaryWithObjects:forKeys:count: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f77a00 (    0x20) objc_msgSend$dispatchQueue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f77a20 (    0x20) objc_msgSend$echoGainDB [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f77a40 (    0x20) objc_msgSend$embeddingInfo [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f77a60 (    0x20) objc_msgSend$encodeFloat:forKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f77a80 (    0x20) objc_msgSend$encodeInteger:forKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f77aa0 (    0x20) objc_msgSend$encodeObject:forKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f77ac0 (    0x20) objc_msgSend$endPasscodeEmbedding [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f77ae0 (    0x20) objc_msgSend$errorWithDomain:code:userInfo: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f77b00 (    0x20) objc_msgSend$evaluateAsset [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f77b20 (    0x20) objc_msgSend$evaluateAsset: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f77b40 (    0x20) objc_msgSend$evaluateCarrierWithConfig:carrier:embeddingResult: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f77b60 (    0x20) objc_msgSend$fileNameForCarrierAsset: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f77b80 (    0x20) objc_msgSend$floatChannelData [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f77ba0 (    0x20) objc_msgSend$floatForKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f77bc0 (    0x20) objc_msgSend$floatValue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f77be0 (    0x20) objc_msgSend$format [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f77c00 (    0x20) objc_msgSend$frameLength [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f77c20 (    0x20) objc_msgSend$frameSize [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f77c40 (    0x20) objc_msgSend$frameSizeRange [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f77c60 (    0x20) objc_msgSend$getAUDesc [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f77c80 (    0x20) objc_msgSend$getBytes:length: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f77ca0 (    0x20) objc_msgSend$handleDecodedData:ofLength: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f77cc0 (    0x20) objc_msgSend$handleEOFReachedForAsset [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f77ce0 (    0x20) objc_msgSend$hfNoiseFillingFlag [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f77d00 (    0x20) objc_msgSend$hpfCutOffFreq [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f77d20 (    0x20) objc_msgSend$hpfCutOffFreqRange [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f77d40 (    0x20) objc_msgSend$init [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f77d60 (    0x20) objc_msgSend$initForReading:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f77d80 (    0x20) objc_msgSend$initStandardFormatWithSampleRate:channels: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f77da0 (    0x20) objc_msgSend$initWithAlgorithmName: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f77dc0 (    0x20) objc_msgSend$initWithAssetURL:codecConfig:payload:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f77de0 (    0x20) objc_msgSend$initWithAudioUnit:busType:busses: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f77e00 (    0x20) objc_msgSend$initWithAudioUnit:inputFileURL:outputFileURL:ioSampleRate: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f77e20 (    0x20) objc_msgSend$initWithCapabilityData: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f77e40 (    0x20) objc_msgSend$initWithCodecConfig:queue:dataReceivedHandler:resultData:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f77e60 (    0x20) objc_msgSend$initWithComponentDescription:options:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f77e80 (    0x20) objc_msgSend$initWithConfigurationData: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f77ea0 (    0x20) objc_msgSend$initWithData: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f77ec0 (    0x20) objc_msgSend$initWithFormat:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f77ee0 (    0x20) objc_msgSend$initWithHostTime: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f77f00 (    0x20) objc_msgSend$initWithInputURL:codecConfig:resultData:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f77f20 (    0x20) objc_msgSend$initWithListenerCapabilityData:payloadLength: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f77f40 (    0x20) objc_msgSend$initWithPCMFormat:frameCapacity: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f77f60 (    0x20) objc_msgSend$initWithPasscodeDurationNSec: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f77f80 (    0x20) objc_msgSend$initWithStreamDescription: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f77fa0 (    0x20) objc_msgSend$initWithSuiteName: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f77fc0 (    0x20) objc_msgSend$initWithSyntax:description: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f77fe0 (    0x20) objc_msgSend$inputBusses [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78000 (    0x20) objc_msgSend$inputFormatForBus: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78020 (    0x20) objc_msgSend$inputNode [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78040 (    0x20) objc_msgSend$installTapOnBus:bufferSize:format:block: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78060 (    0x20) objc_msgSend$instantiateWithComponentDescription:options:completionHandler: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78080 (    0x20) objc_msgSend$intValue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f780a0 (    0x20) objc_msgSend$integerForKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f780c0 (    0x20) objc_msgSend$integerValue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f780e0 (    0x20) objc_msgSend$isEqual: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78100 (    0x20) objc_msgSend$isEqualToEchoCodecCapability: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78120 (    0x20) objc_msgSend$isEqualToPasscodeCodecCapability: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78140 (    0x20) objc_msgSend$isEqualToString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78160 (    0x20) objc_msgSend$isInterleaved [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78180 (    0x20) objc_msgSend$isRunning [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f781a0 (    0x20) objc_msgSend$isStandard [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f781c0 (    0x20) objc_msgSend$isValid [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f781e0 (    0x20) objc_msgSend$length [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78200 (    0x20) objc_msgSend$listenerWithCodecConfig:queue:dataReceivedHandler:resultData:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78220 (    0x20) objc_msgSend$localizedDescription [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78240 (    0x20) objc_msgSend$makeEngineConnections [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78260 (    0x20) objc_msgSend$makeEngineConnectionsWithError: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78280 (    0x20) objc_msgSend$maximumFramesToRender [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f782a0 (    0x20) objc_msgSend$mutableAudioBufferList [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f782c0 (    0x20) objc_msgSend$noiseGainDB [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f782e0 (    0x20) objc_msgSend$numChannelRange [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78300 (    0x20) objc_msgSend$numChannels [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78320 (    0x20) objc_msgSend$numFrameRepeat [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78340 (    0x20) objc_msgSend$numFrameRepeatRange [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78360 (    0x20) objc_msgSend$numberFromString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78380 (    0x20) objc_msgSend$numberWithInt: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f783a0 (    0x20) objc_msgSend$numberWithInteger: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f783c0 (    0x20) objc_msgSend$numberWithUnsignedInteger: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f783e0 (    0x20) objc_msgSend$objectAtIndex: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78400 (    0x20) objc_msgSend$objectAtIndexedSubscript: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78420 (    0x20) objc_msgSend$objectForKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78440 (    0x20) objc_msgSend$objectForKeyedSubscript: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78460 (    0x20) objc_msgSend$optionWithSyntax:description: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78480 (    0x20) objc_msgSend$outputBusses [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f784a0 (    0x20) objc_msgSend$outputNode [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f784c0 (    0x20) objc_msgSend$passcodeEmbedInfo [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f784e0 (    0x20) objc_msgSend$pause [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78500 (    0x20) objc_msgSend$payload [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78520 (    0x20) objc_msgSend$payloadLengthBytes [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78540 (    0x20) objc_msgSend$play [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78560 (    0x20) objc_msgSend$playerWithAssetURL:codecConfig:payload:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78580 (    0x20) objc_msgSend$processingFormat [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f785a0 (    0x20) objc_msgSend$randomSeed [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f785c0 (    0x20) objc_msgSend$readIntoBuffer:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f785e0 (    0x20) objc_msgSend$registerAU [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78600 (    0x20) objc_msgSend$registerSubclass:asComponentDescription:name:version: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78620 (    0x20) objc_msgSend$removeTapOnBus: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78640 (    0x20) objc_msgSend$renderBlock [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78660 (    0x20) objc_msgSend$renderResourcesAllocated [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78680 (    0x20) objc_msgSend$reset [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f786a0 (    0x20) objc_msgSend$resultData [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f786c0 (    0x20) objc_msgSend$retrievalCallbackInterval [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f786e0 (    0x20) objc_msgSend$retrievedDataHandler [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78700 (    0x20) objc_msgSend$run [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78720 (    0x20) objc_msgSend$sampleRate [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78740 (    0x20) objc_msgSend$scheduleBuffer:atTime:options:completionHandler: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78760 (    0x20) objc_msgSend$setAlgorithmName: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78780 (    0x20) objc_msgSend$setAlgorithmVersionNumber: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f787a0 (    0x20) objc_msgSend$setAssetEndedAndSilencedHandler: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f787c0 (    0x20) objc_msgSend$setAssetLength: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f787e0 (    0x20) objc_msgSend$setCodecConfig: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78800 (    0x20) objc_msgSend$setCompletionTime: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78820 (    0x20) objc_msgSend$setDataHandler: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78840 (    0x20) objc_msgSend$setDefaultValues [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78860 (    0x20) objc_msgSend$setDelayForBit0: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78880 (    0x20) objc_msgSend$setDelayForBit1: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f788a0 (    0x20) objc_msgSend$setDispatchQueue: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f788c0 (    0x20) objc_msgSend$setEchoGainDB: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f788e0 (    0x20) objc_msgSend$setEmbedPasscode: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78900 (    0x20) objc_msgSend$setFadeOutTimeSeconds: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78920 (    0x20) objc_msgSend$setFormat:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78940 (    0x20) objc_msgSend$setFrameSize: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78960 (    0x20) objc_msgSend$setHfNoiseFillingFlag: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78980 (    0x20) objc_msgSend$setHpfCutOffFreq: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f789a0 (    0x20) objc_msgSend$setLength: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f789c0 (    0x20) objc_msgSend$setMaximumChannelCount: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f789e0 (    0x20) objc_msgSend$setMeasPasscodeDuration: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78a00 (    0x20) objc_msgSend$setNoiseGainDB: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78a20 (    0x20) objc_msgSend$setNumChannels: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78a40 (    0x20) objc_msgSend$setNumFrameRepeat: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78a60 (    0x20) objc_msgSend$setNumLoopsToStopAfter: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78a80 (    0x20) objc_msgSend$setNumberStyle: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78aa0 (    0x20) objc_msgSend$setObject:forKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78ac0 (    0x20) objc_msgSend$setPasscodeEmbedInfo: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78ae0 (    0x20) objc_msgSend$setPayload: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78b00 (    0x20) objc_msgSend$setPayloadLengthBytes: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78b20 (    0x20) objc_msgSend$setRandomSeed: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78b40 (    0x20) objc_msgSend$setRenderResourcesAllocated: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78b60 (    0x20) objc_msgSend$setRenderingOffline: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78b80 (    0x20) objc_msgSend$setResultData: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78ba0 (    0x20) objc_msgSend$setSampleRate: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78bc0 (    0x20) objc_msgSend$setSilenceOutputOnNextAssetEnding: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78be0 (    0x20) objc_msgSend$setSyncDetectThreshold: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78c00 (    0x20) objc_msgSend$setTriggerFadeOut: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78c20 (    0x20) objc_msgSend$setWithArray: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78c40 (    0x20) objc_msgSend$setWithObjects: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78c60 (    0x20) objc_msgSend$setupAudioSession [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78c80 (    0x20) objc_msgSend$sharedDefaults [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78ca0 (    0x20) objc_msgSend$startAPCPlayLoop [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78cc0 (    0x20) objc_msgSend$startAPCPlayLoopAtTime: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78ce0 (    0x20) objc_msgSend$startAndReturnError: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78d00 (    0x20) objc_msgSend$startEngineAtTime:withBeginning: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78d20 (    0x20) objc_msgSend$startEngineAtTime:withBeginning:callbackTime: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78d40 (    0x20) objc_msgSend$startEngineWithError: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78d60 (    0x20) objc_msgSend$startListeningWithError: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78d80 (    0x20) objc_msgSend$startSendAtTime:withBeginning: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78da0 (    0x20) objc_msgSend$stop [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78dc0 (    0x20) objc_msgSend$stopEngine [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78de0 (    0x20) objc_msgSend$stopEngine:withCompletion: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78e00 (    0x20) objc_msgSend$stopEngineAfterMinimumLoops:withCompletion: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78e20 (    0x20) objc_msgSend$stopEngineCompletion [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78e40 (    0x20) objc_msgSend$stopEngineWithFadeOut:completion: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78e60 (    0x20) objc_msgSend$stringWithUTF8String: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78e80 (    0x20) objc_msgSend$supportedConfigurationClasses [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78ea0 (    0x20) objc_msgSend$supportedDecoders [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78ec0 (    0x20) objc_msgSend$supportedEncoders [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78ee0 (    0x20) objc_msgSend$supportedSampleRates [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78f00 (    0x20) objc_msgSend$syncDetectThreshold [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78f20 (    0x20) objc_msgSend$unarchivedObjectOfClass:fromData:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78f40 (    0x20) objc_msgSend$unarchivedObjectOfClasses:fromData:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78f60 (    0x20) objc_msgSend$unsignedIntegerValue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78f80 (    0x20) objc_msgSend$unsignedLongValue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78fa0 (    0x20) objc_msgSend$urlForCarrierAsset: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78fc0 (    0x20) objc_msgSend$validateInputNodeWithFormat: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001f4f78fe0 (    0x20) objc_msgSend$valueForKeyPath: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
        0x0000000236a80be0 (  0x24f0) __DATA_CONST SEGMENT
            0x0000000236a80be0 (    0xb0) __DATA_CONST __got
            0x0000000236a80c90 (    0x60) __DATA_CONST __const
                0x0000000236a80c90 (     0x8) kAPCErrorDomain [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000236a80c98 (    0x20) __block_descriptor_32_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000236a80cb8 (    0x38) __block_descriptor_32_e42_v24?0"AVAudioPCMBuffer"8"AVAudioTime"16l [PEXT, NameNList, MangledNameNList, NList] 
            0x0000000236a80cf0 (    0xb8) __DATA_CONST __objc_classlist
            0x0000000236a80da8 (    0x18) __DATA_CONST __objc_protolist
                0x0000000236a80da8 (     0x8) _OBJC_LABEL_PROTOCOL_$_NSCoding [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000236a80db0 (     0x8) _OBJC_LABEL_PROTOCOL_$_NSSecureCoding [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000236a80db8 (     0x8) _OBJC_LABEL_PROTOCOL_$_NSCopying [PEXT, NameNList, MangledNameNList, NList] 
            0x0000000236a80dc0 (     0x8) __DATA_CONST __objc_imageinfo
            0x0000000236a80dc8 (  0x1a10) __DATA_CONST __objc_const
                0x0000000236a80dc8 (    0x48) _OBJC_CLASS_RO_$_APCCodecFactory [NameNList, MangledNameNList, NList] 
                0x0000000236a80e10 (    0x38) _OBJC_$_PROTOCOL_INSTANCE_METHODS_NSCoding [NameNList, MangledNameNList, NList] 
                0x0000000236a80e48 (    0x10) _OBJC_$_PROTOCOL_METHOD_TYPES_NSCoding [NameNList, MangledNameNList, NList] 
                0x0000000236a80e58 (    0x18) _OBJC_$_PROTOCOL_REFS_NSSecureCoding [NameNList, MangledNameNList, NList] 
                0x0000000236a80e70 (    0x20) _OBJC_$_PROTOCOL_CLASS_METHODS_NSSecureCoding [NameNList, MangledNameNList, NList] 
                0x0000000236a80e90 (     0x8) _OBJC_$_PROTOCOL_METHOD_TYPES_NSSecureCoding [NameNList, MangledNameNList, NList] 
                0x0000000236a80e98 (    0x18) _OBJC_$_CLASS_PROP_LIST_NSSecureCoding [NameNList, MangledNameNList, NList] 
                0x0000000236a80eb0 (    0x18) _OBJC_CLASS_PROTOCOLS_$_EchoCodecCapability [NameNList, MangledNameNList, NList] 
                0x0000000236a80ec8 (    0x18) _OBJC_$_CLASS_PROP_LIST_EchoCodecCapability [NameNList, MangledNameNList, NList] 
                0x0000000236a80ee0 (    0x88) _OBJC_$_INSTANCE_VARIABLES_EchoCodecCapability [NameNList, MangledNameNList, NList] 
                0x0000000236a80f68 (    0x48) _OBJC_$_PROP_LIST_EchoCodecCapability [NameNList, MangledNameNList, NList] 
                0x0000000236a80fb0 (    0x20) _OBJC_$_PROTOCOL_INSTANCE_METHODS_NSCopying [NameNList, MangledNameNList, NList] 
                0x0000000236a80fd0 (     0x8) _OBJC_$_PROTOCOL_METHOD_TYPES_NSCopying [NameNList, MangledNameNList, NList] 
                0x0000000236a80fd8 (    0x18) _OBJC_CLASS_PROTOCOLS_$_EchoCodecConfiguration [NameNList, MangledNameNList, NList] 
                0x0000000236a80ff0 (   0x168) _OBJC_$_INSTANCE_VARIABLES_EchoCodecConfiguration [NameNList, MangledNameNList, NList] 
                0x0000000236a81158 (    0xb8) _OBJC_$_PROP_LIST_EchoCodecConfiguration [NameNList, MangledNameNList, NList] 
                0x0000000236a81210 (    0x38) _OBJC_$_PROTOCOL_INSTANCE_METHODS_NSCoding [NameNList, MangledNameNList, NList] 
                0x0000000236a81248 (    0x10) _OBJC_$_PROTOCOL_METHOD_TYPES_NSCoding [NameNList, MangledNameNList, NList] 
                0x0000000236a81258 (    0x18) _OBJC_$_PROTOCOL_REFS_NSSecureCoding [NameNList, MangledNameNList, NList] 
                0x0000000236a81270 (    0x20) _OBJC_$_PROTOCOL_CLASS_METHODS_NSSecureCoding [NameNList, MangledNameNList, NList] 
                0x0000000236a81290 (     0x8) _OBJC_$_PROTOCOL_METHOD_TYPES_NSSecureCoding [NameNList, MangledNameNList, NList] 
                0x0000000236a81298 (    0x18) _OBJC_$_CLASS_PROP_LIST_NSSecureCoding [NameNList, MangledNameNList, NList] 
                0x0000000236a812b0 (    0x18) _OBJC_CLASS_PROTOCOLS_$_NullCodecCapability [NameNList, MangledNameNList, NList] 
                0x0000000236a812c8 (    0x18) _OBJC_$_CLASS_PROP_LIST_NullCodecCapability [NameNList, MangledNameNList, NList] 
                0x0000000236a812e0 (    0x18) _OBJC_CLASS_PROTOCOLS_$_NullCodecConfiguration [NameNList, MangledNameNList, NList] 
                0x0000000236a812f8 (    0x18) _OBJC_$_CLASS_PROP_LIST_NullCodecConfiguration [NameNList, MangledNameNList, NList] 
                0x0000000236a81310 (    0x28) _OBJC_$_INSTANCE_VARIABLES_NullCodecConfiguration [NameNList, MangledNameNList, NList] 
                0x0000000236a81338 (    0x18) _OBJC_$_PROP_LIST_NullCodecConfiguration [NameNList, MangledNameNList, NList] 
                0x0000000236a81350 (    0x48) _OBJC_METACLASS_RO_$_APCListenerResultData [NameNList, MangledNameNList, NList] 
                0x0000000236a81398 (    0x28) _OBJC_$_INSTANCE_VARIABLES_APCListenerResultData [NameNList, MangledNameNList, NList] 
                0x0000000236a813c0 (    0x18) _OBJC_$_PROP_LIST_APCListenerResultData [NameNList, MangledNameNList, NList] 
                0x0000000236a813d8 (    0x48) _OBJC_METACLASS_RO_$_APCPlayerEmbedInfo [NameNList, MangledNameNList, NList] 
                0x0000000236a81420 (    0x48) _OBJC_$_INSTANCE_VARIABLES_APCPlayerEmbedInfo [NameNList, MangledNameNList, NList] 
                0x0000000236a81468 (    0x28) _OBJC_$_PROP_LIST_APCPlayerEmbedInfo [NameNList, MangledNameNList, NList] 
                0x0000000236a81490 (   0x1c8) _OBJC_$_INSTANCE_VARIABLES_APCPlayerEngine [NameNList, MangledNameNList, NList] 
                0x0000000236a81658 (    0x48) _OBJC_$_PROP_LIST_APCPlayerEngine [NameNList, MangledNameNList, NList] 
                0x0000000236a816a0 (    0x38) _OBJC_$_PROTOCOL_INSTANCE_METHODS_NSCoding [NameNList, MangledNameNList, NList] 
                0x0000000236a816d8 (    0x10) _OBJC_$_PROTOCOL_METHOD_TYPES_NSCoding [NameNList, MangledNameNList, NList] 
                0x0000000236a816e8 (    0x18) _OBJC_$_PROTOCOL_REFS_NSSecureCoding [NameNList, MangledNameNList, NList] 
                0x0000000236a81700 (    0x20) _OBJC_$_PROTOCOL_CLASS_METHODS_NSSecureCoding [NameNList, MangledNameNList, NList] 
                0x0000000236a81720 (     0x8) _OBJC_$_PROTOCOL_METHOD_TYPES_NSSecureCoding [NameNList, MangledNameNList, NList] 
                0x0000000236a81728 (    0x18) _OBJC_$_CLASS_PROP_LIST_NSSecureCoding [NameNList, MangledNameNList, NList] 
                0x0000000236a81740 (    0x18) _OBJC_CLASS_PROTOCOLS_$_MLSCodecCapability [NameNList, MangledNameNList, NList] 
                0x0000000236a81758 (    0x18) _OBJC_$_CLASS_PROP_LIST_MLSCodecCapability [NameNList, MangledNameNList, NList] 
                0x0000000236a81770 (    0x48) _OBJC_CLASS_RO_$_APCDefaults [NameNList, MangledNameNList, NList] 
                0x0000000236a817b8 (    0x48) _OBJC_CLASS_RO_$_APCCodecInfo [NameNList, MangledNameNList, NList] 
                0x0000000236a81800 (    0x48) _OBJC_$_INSTANCE_VARIABLES_AUPasscodeCodecCommandLineOption [NameNList, MangledNameNList, NList] 
                0x0000000236a81848 (    0x28) _OBJC_$_PROP_LIST_AUPasscodeCodecCommandLineOption [NameNList, MangledNameNList, NList] 
                0x0000000236a81870 (    0x20) _OBJC_$_PROTOCOL_INSTANCE_METHODS_NSCopying [NameNList, MangledNameNList, NList] 
                0x0000000236a81890 (     0x8) _OBJC_$_PROTOCOL_METHOD_TYPES_NSCopying [NameNList, MangledNameNList, NList] 
                0x0000000236a81898 (    0x38) _OBJC_$_PROTOCOL_INSTANCE_METHODS_NSCoding [NameNList, MangledNameNList, NList] 
                0x0000000236a818d0 (    0x10) _OBJC_$_PROTOCOL_METHOD_TYPES_NSCoding [NameNList, MangledNameNList, NList] 
                0x0000000236a818e0 (    0x18) _OBJC_$_PROTOCOL_REFS_NSSecureCoding [NameNList, MangledNameNList, NList] 
                0x0000000236a818f8 (    0x20) _OBJC_$_PROTOCOL_CLASS_METHODS_NSSecureCoding [NameNList, MangledNameNList, NList] 
                0x0000000236a81918 (     0x8) _OBJC_$_PROTOCOL_METHOD_TYPES_NSSecureCoding [NameNList, MangledNameNList, NList] 
                0x0000000236a81920 (    0x18) _OBJC_$_CLASS_PROP_LIST_NSSecureCoding [NameNList, MangledNameNList, NList] 
                0x0000000236a81938 (    0x20) _OBJC_CLASS_PROTOCOLS_$_AUPasscodeCodecConfiguration [NameNList, MangledNameNList, NList] 
                0x0000000236a81958 (    0x18) _OBJC_$_CLASS_PROP_LIST_AUPasscodeCodecConfiguration [NameNList, MangledNameNList, NList] 
                0x0000000236a81970 (    0x88) _OBJC_$_INSTANCE_VARIABLES_AUPasscodeCodecConfiguration [NameNList, MangledNameNList, NList] 
                0x0000000236a819f8 (    0x48) _OBJC_$_PROP_LIST_AUPasscodeCodecConfiguration [NameNList, MangledNameNList, NList] 
                0x0000000236a81a40 (    0x48) _OBJC_METACLASS_RO_$_AUPasscodeCodecCapability [NameNList, MangledNameNList, NList] 
                0x0000000236a81a88 (    0x68) _OBJC_$_INSTANCE_VARIABLES_AUPasscodeCodecCapability [NameNList, MangledNameNList, NList] 
                0x0000000236a81af0 (    0x38) _OBJC_$_PROP_LIST_AUPasscodeCodecCapability [NameNList, MangledNameNList, NList] 
                0x0000000236a81b28 (    0xa8) _OBJC_$_INSTANCE_VARIABLES_APCListenerEngine [NameNList, MangledNameNList, NList] 
                0x0000000236a81bd0 (   0x248) _OBJC_$_INSTANCE_VARIABLES_AUPasscodeDecoder [NameNList, MangledNameNList, NList] 
                0x0000000236a81e18 (    0x48) _OBJC_$_PROP_LIST_AUPasscodeDecoder [NameNList, MangledNameNList, NList] 
                0x0000000236a81e60 (    0x48) _OBJC_METACLASS_RO_$_APCEncoderProcessor [NameNList, MangledNameNList, NList] 
                0x0000000236a81ea8 (    0x68) _OBJC_$_INSTANCE_VARIABLES_APCEncoderProcessor [NameNList, MangledNameNList, NList] 
                0x0000000236a81f10 (    0x48) _OBJC_METACLASS_RO_$_APCDecoderProcessor [NameNList, MangledNameNList, NList] 
                0x0000000236a81f58 (    0x68) _OBJC_$_INSTANCE_VARIABLES_APCDecoderProcessor [NameNList, MangledNameNList, NList] 
                0x0000000236a81fc0 (    0xc8) _OBJC_$_INSTANCE_VARIABLES_APCListener [NameNList, MangledNameNList, NList] 
                0x0000000236a82088 (    0x38) _OBJC_$_PROP_LIST_APCListener [NameNList, MangledNameNList, NList] 
                0x0000000236a820c0 (   0x128) _OBJC_$_INSTANCE_VARIABLES_APCPlayer [NameNList, MangledNameNList, NList] 
                0x0000000236a821e8 (    0x68) _OBJC_$_PROP_LIST_APCPlayer [NameNList, MangledNameNList, NList] 
                0x0000000236a82250 (   0x328) _OBJC_$_INSTANCE_VARIABLES_AUPasscodeEncoder [NameNList, MangledNameNList, NList] 
                0x0000000236a82578 (    0xb8) _OBJC_$_PROP_LIST_AUPasscodeEncoder [NameNList, MangledNameNList, NList] 
                0x0000000236a82630 (    0x48) _OBJC_METACLASS_RO_$_AUAudioUnitOfflineProcessor [NameNList, MangledNameNList, NList] 
                0x0000000236a82678 (   0x148) _OBJC_$_INSTANCE_VARIABLES_AUAudioUnitOfflineProcessor [NameNList, MangledNameNList, NList] 
                0x0000000236a827c0 (    0x18) _OBJC_$_PROP_LIST_AUAudioUnitOfflineProcessor [NameNList, MangledNameNList, NList] 
            0x0000000236a827d8 (   0x8f8) __DATA_CONST __objc_selrefs
        0x0000000236a830d0 (  0x21f0) __AUTH_CONST SEGMENT
            0x0000000236a830d0 (   0xa68) __AUTH_CONST __objc_const
                0x0000000236a830d0 (    0x48) _OBJC_METACLASS_RO_$_APCCodecFactory [NameNList, MangledNameNList, NList] 
                0x0000000236a83118 (    0x48) _OBJC_METACLASS_RO_$_EchoCodecCapability [NameNList, MangledNameNList, NList] 
                0x0000000236a83160 (    0x48) _OBJC_CLASS_RO_$_EchoCodecCapability [NameNList, MangledNameNList, NList] 
                0x0000000236a831a8 (    0x48) _OBJC_METACLASS_RO_$_EchoCodecConfiguration [NameNList, MangledNameNList, NList] 
                0x0000000236a831f0 (    0x48) _OBJC_CLASS_RO_$_EchoCodecConfiguration [NameNList, MangledNameNList, NList] 
                0x0000000236a83238 (    0x48) _OBJC_METACLASS_RO_$_NullCodecCapability [NameNList, MangledNameNList, NList] 
                0x0000000236a83280 (    0x48) _OBJC_CLASS_RO_$_NullCodecCapability [NameNList, MangledNameNList, NList] 
                0x0000000236a832c8 (    0x48) _OBJC_METACLASS_RO_$_NullCodecConfiguration [NameNList, MangledNameNList, NList] 
                0x0000000236a83310 (    0x48) _OBJC_CLASS_RO_$_NullCodecConfiguration [NameNList, MangledNameNList, NList] 
                0x0000000236a83358 (    0x48) _OBJC_CLASS_RO_$_APCListenerResultData [NameNList, MangledNameNList, NList] 
                0x0000000236a833a0 (    0x48) _OBJC_CLASS_RO_$_APCPlayerEmbedInfo [NameNList, MangledNameNList, NList] 
                0x0000000236a833e8 (    0x48) _OBJC_METACLASS_RO_$_APCPlayerEngine [NameNList, MangledNameNList, NList] 
                0x0000000236a83430 (    0x48) _OBJC_CLASS_RO_$_APCPlayerEngine [NameNList, MangledNameNList, NList] 
                0x0000000236a83478 (    0x48) _OBJC_METACLASS_RO_$_MLSCodecCapability [NameNList, MangledNameNList, NList] 
                0x0000000236a834c0 (    0x48) _OBJC_CLASS_RO_$_MLSCodecCapability [NameNList, MangledNameNList, NList] 
                0x0000000236a83508 (    0x48) _OBJC_METACLASS_RO_$_MLSCodecConfiguration [NameNList, MangledNameNList, NList] 
                0x0000000236a83550 (    0x48) _OBJC_CLASS_RO_$_MLSCodecConfiguration [NameNList, MangledNameNList, NList] 
                0x0000000236a83598 (    0x48) _OBJC_METACLASS_RO_$_APCDefaults [NameNList, MangledNameNList, NList] 
                0x0000000236a835e0 (    0x48) _OBJC_METACLASS_RO_$_APCCodecInfo [NameNList, MangledNameNList, NList] 
                0x0000000236a83628 (    0x48) _OBJC_METACLASS_RO_$_AUPasscodeCodecCommandLineOption [NameNList, MangledNameNList, NList] 
                0x0000000236a83670 (    0x48) _OBJC_CLASS_RO_$_AUPasscodeCodecCommandLineOption [NameNList, MangledNameNList, NList] 
                0x0000000236a836b8 (    0x48) _OBJC_METACLASS_RO_$_AUPasscodeCodecConfiguration [NameNList, MangledNameNList, NList] 
                0x0000000236a83700 (    0x48) _OBJC_CLASS_RO_$_AUPasscodeCodecConfiguration [NameNList, MangledNameNList, NList] 
                0x0000000236a83748 (    0x48) _OBJC_CLASS_RO_$_AUPasscodeCodecCapability [NameNList, MangledNameNList, NList] 
                0x0000000236a83790 (    0x48) _OBJC_METACLASS_RO_$_APCListenerEngine [NameNList, MangledNameNList, NList] 
                0x0000000236a837d8 (    0x48) _OBJC_CLASS_RO_$_APCListenerEngine [NameNList, MangledNameNList, NList] 
                0x0000000236a83820 (    0x48) _OBJC_METACLASS_RO_$_AUPasscodeDecoder [NameNList, MangledNameNList, NList] 
                0x0000000236a83868 (    0x48) _OBJC_CLASS_RO_$_AUPasscodeDecoder [NameNList, MangledNameNList, NList] 
                0x0000000236a838b0 (    0x48) _OBJC_CLASS_RO_$_APCEncoderProcessor [NameNList, MangledNameNList, NList] 
                0x0000000236a838f8 (    0x48) _OBJC_CLASS_RO_$_APCDecoderProcessor [NameNList, MangledNameNList, NList] 
                0x0000000236a83940 (    0x48) _OBJC_METACLASS_RO_$_APCListener [NameNList, MangledNameNList, NList] 
                0x0000000236a83988 (    0x48) _OBJC_CLASS_RO_$_APCListener [NameNList, MangledNameNList, NList] 
                0x0000000236a839d0 (    0x48) _OBJC_METACLASS_RO_$_APCPlayer [NameNList, MangledNameNList, NList] 
                0x0000000236a83a18 (    0x48) _OBJC_CLASS_RO_$_APCPlayer [NameNList, MangledNameNList, NList] 
                0x0000000236a83a60 (    0x48) _OBJC_METACLASS_RO_$_AUPasscodeEncoder [NameNList, MangledNameNList, NList] 
                0x0000000236a83aa8 (    0x48) _OBJC_CLASS_RO_$_AUPasscodeEncoder [NameNList, MangledNameNList, NList] 
                0x0000000236a83af0 (    0x48) _OBJC_CLASS_RO_$_AUAudioUnitOfflineProcessor [NameNList, MangledNameNList, NList] 
            0x0000000236a83b38 (   0xb40) __AUTH_CONST __cfstring
            0x0000000236a84678 (   0x928) __AUTH_CONST __const
                0x0000000236a84678 (    0x98) vtable for EchoCodeDecoder [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000236a84710 (    0x10) typeinfo for APCDecoderBase [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000236a84720 (    0x10) typeinfo for IAudioPasscodeDecoder [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000236a84730 (    0x38) typeinfo for EchoCodeDecoder [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000236a84768 (    0x38) vtable for APCNullEncoder [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000236a847a0 (    0x28) vtable for APCNullDecoder [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000236a847c8 (    0x18) typeinfo for APCNullDecoder [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000236a847e0 (    0x10) typeinfo for APCEncoderBase [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000236a847f0 (    0x18) typeinfo for APCNullEncoder [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000236a84808 (    0x30) __block_descriptor_56_ea8_32r40r48r_e33_v24?0"AVAudioUnit"8"NSError"16l [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000236a84838 (    0x30) __block_descriptor_40_ea8_32w_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000236a84868 (    0x30) __block_descriptor_40_ea8_32s_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000236a84898 (    0x20) __block_literal_global [NameNList, MangledNameNList, NList] 
                0x0000000236a848b8 (    0xc8) vtable for EchoCodeEncoder [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000236a84980 (    0x10) typeinfo for IAudioPasscodeEncoder [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000236a84990 (    0x38) typeinfo for EchoCodeEncoder [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000236a849c8 (    0x58) vtable for std::__1::__function::__func<EchoCodeEncoder::encode(float const*, float*, unsigned int)::$_0, std::__1::allocator<EchoCodeEncoder::encode(float const*, float*, unsigned int)::$_0>, void (float*, unsigned int)> [NameNList, MangledNameNList, NList] 
                0x0000000236a84a20 (    0x10) typeinfo for std::__1::__function::__base<void (float*, unsigned int)> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000236a84a30 (    0x18) typeinfo for std::__1::__function::__func<EchoCodeEncoder::encode(float const*, float*, unsigned int)::$_0, std::__1::allocator<EchoCodeEncoder::encode(float const*, float*, unsigned int)::$_0>, void (float*, unsigned int)> [NameNList, MangledNameNList, NList] 
                0x0000000236a84a48 (    0x10) typeinfo for EchoCodeEncoder::encode(float const*, float*, unsigned int)::$_0 [NameNList, MangledNameNList, NList] 
                0x0000000236a84a58 (    0x58) vtable for std::__1::__function::__func<EchoCodeEncoder::evaluateCarrier(float const*, unsigned int, std::__1::map<unsigned int, std::__1::any, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, std::__1::any>>>&) const::$_1, std::__1::allocator<EchoCodeEncoder::evaluateCarrier(float const*, unsigned int, std::__1::map<unsigned int, std::__1::any, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, std::__1::any>>>&) const::$_1>, void (float*, unsigned int)> [NameNList, MangledNameNList, NList] 
                0x0000000236a84ab0 (    0x18) typeinfo for std::__1::__function::__func<EchoCodeEncoder::evaluateCarrier(float const*, unsigned int, std::__1::map<unsigned int, std::__1::any, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, std::__1::any>>>&) const::$_1, std::__1::allocator<EchoCodeEncoder::evaluateCarrier(float const*, unsigned int, std::__1::map<unsigned int, std::__1::any, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, std::__1::any>>>&) const::$_1>, void (float*, unsigned int)> [NameNList, MangledNameNList, NList] 
                0x0000000236a84ac8 (    0x10) typeinfo for EchoCodeEncoder::evaluateCarrier(float const*, unsigned int, std::__1::map<unsigned int, std::__1::any, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, std::__1::any>>>&) const::$_1 [NameNList, MangledNameNList, NList] 
                0x0000000236a84ad8 (    0x20) __block_literal_global [NameNList, MangledNameNList, NList] 
                0x0000000236a84af8 (    0x48) vtable for PasscodePositioner [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000236a84b40 (    0x10) typeinfo for IFramePositioner [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000236a84b50 (    0x18) typeinfo for PasscodePositioner [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000236a84b68 (    0x30) vtable for EchoEmbedder [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000236a84b98 (    0x10) typeinfo for EchoEmbedder [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000236a84ba8 (    0x30) vtable for SyncedEchoEmbedder [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000236a84bd8 (    0x18) typeinfo for SyncedEchoEmbedder [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000236a84bf0 (    0x48) vtable for SyncSeqEmbedder [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000236a84c38 (    0x18) typeinfo for SyncSeqEmbedder [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000236a84c50 (    0x60) vtable for SyncSeqDetector [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000236a84cb0 (    0x10) typeinfo for IFrameLocater [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000236a84cc0 (    0x18) typeinfo for SyncSeqDetector [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000236a84cd8 (    0x60) vtable for SyncEchoDetector [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000236a84d38 (    0x18) typeinfo for SyncEchoDetector [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000236a84d50 (    0x18) typeinfo for std::__1::bad_function_call [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000236a84d68 (    0x28) vtable for std::__1::bad_function_call [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000236a84d90 (    0x20) __block_literal_global [NameNList, MangledNameNList, NList] 
                0x0000000236a84db0 (    0x30) __block_descriptor_104_ea8_32bs_e433_i60?0^I8r^{AudioTimeStamp=dQdQ{SMPTETime=ssIIIssss}II}16I24q28^{AudioBufferList=I[1{AudioBuffer=II^v}]}36r^(AURenderEvent={AURenderEventHeader=^(AURenderEvent)qCC}{AUParameterEvent=^(AURenderEvent)qC[3C]IQf}{AUMIDIEvent=^(AURenderEvent)qCCSC[3C]}{AUMIDIEventList=^(AURenderEvent)qCCC{MIDIEventList=iI[1{MIDIEventPacket=QI[64I]}]}})44?<i?^I^{AudioTimeStamp=dQdQ{SMPTETime=ssIIIssss}II}Iq^{AudioBufferList=I[1{AudioBuffer=II^v}]}>52l [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000236a84de0 (    0x30) __block_descriptor_48_ea8_32s40s_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000236a84e10 (    0x28) vtable for DecodedDataMessage [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000236a84e38 (    0x18) typeinfo for DecodedDataMessage [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000236a84e50 (    0x30) __block_descriptor_40_ea8_32w_e16_v16?0"NSData"8l [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000236a84e80 (    0x30) __block_descriptor_40_ea8_32s_e16_v16?0"NSData"8l [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000236a84eb0 (    0x30) __block_descriptor_48_ea8_32s40bs_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000236a84ee0 (    0x20) __block_literal_global [NameNList, MangledNameNList, NList] 
                0x0000000236a84f00 (    0x30) __block_descriptor_176_ea8_32r_e433_i60?0^I8r^{AudioTimeStamp=dQdQ{SMPTETime=ssIIIssss}II}16I24q28^{AudioBufferList=I[1{AudioBuffer=II^v}]}36r^(AURenderEvent={AURenderEventHeader=^(AURenderEvent)qCC}{AUParameterEvent=^(AURenderEvent)qC[3C]IQf}{AUMIDIEvent=^(AURenderEvent)qCCSC[3C]}{AUMIDIEventList=^(AURenderEvent)qCCC{MIDIEventList=iI[1{MIDIEventPacket=QI[64I]}]}})44?<i?^I^{AudioTimeStamp=dQdQ{SMPTETime=ssIIIssss}II}Iq^{AudioBufferList=I[1{AudioBuffer=II^v}]}>52l [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000236a84f30 (    0x28) vtable for EOFReachedMessage [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000236a84f58 (    0x18) typeinfo for EOFReachedMessage [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000236a84f70 (    0x30) __block_descriptor_40_ea8_32w_e106_i44?0^I8r^{AudioTimeStamp=dQdQ{SMPTETime=ssIIIssss}II}16I24q28^{AudioBufferList=I[1{AudioBuffer=II^v}]}36l [PEXT, NameNList, MangledNameNList, NList] 
            0x0000000236a84fa0 (   0x320) __AUTH_CONST __auth_got
        0x0000000232438800 (   0x730) __AUTH SEGMENT
            0x0000000232438800 (   0x730) __AUTH __objc_data
                0x0000000232438800 (    0x28) OBJC_METACLASS_$_APCCodecFactory [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232438828 (    0x28) OBJC_CLASS_$_APCCodecFactory [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232438850 (    0x28) OBJC_CLASS_$_EchoCodecCapability [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232438878 (    0x28) OBJC_METACLASS_$_EchoCodecCapability [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002324388a0 (    0x28) OBJC_CLASS_$_EchoCodecConfiguration [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002324388c8 (    0x28) OBJC_METACLASS_$_EchoCodecConfiguration [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002324388f0 (    0x28) OBJC_CLASS_$_NullCodecCapability [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232438918 (    0x28) OBJC_METACLASS_$_NullCodecCapability [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232438940 (    0x28) OBJC_CLASS_$_NullCodecConfiguration [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232438968 (    0x28) OBJC_METACLASS_$_NullCodecConfiguration [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232438990 (    0x28) OBJC_CLASS_$_APCListenerResultData [EXT, NameNList, MangledNameNList, NList] 
                0x00000002324389b8 (    0x28) OBJC_METACLASS_$_APCListenerResultData [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002324389e0 (    0x28) OBJC_CLASS_$_APCPlayerEmbedInfo [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232438a08 (    0x28) OBJC_METACLASS_$_APCPlayerEmbedInfo [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232438a30 (    0x28) OBJC_CLASS_$_APCPlayerEngine [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232438a58 (    0x28) OBJC_METACLASS_$_APCPlayerEngine [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232438a80 (    0x28) OBJC_CLASS_$_MLSCodecCapability [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232438aa8 (    0x28) OBJC_METACLASS_$_MLSCodecCapability [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232438ad0 (    0x28) OBJC_CLASS_$_MLSCodecConfiguration [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232438af8 (    0x28) OBJC_METACLASS_$_MLSCodecConfiguration [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232438b20 (    0x28) OBJC_METACLASS_$_APCDefaults [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232438b48 (    0x28) OBJC_CLASS_$_APCDefaults [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232438b70 (    0x28) OBJC_CLASS_$_APCCodecInfo [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232438b98 (    0x28) OBJC_METACLASS_$_APCCodecInfo [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232438bc0 (    0x28) OBJC_CLASS_$_AUPasscodeCodecCommandLineOption [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232438be8 (    0x28) OBJC_METACLASS_$_AUPasscodeCodecCommandLineOption [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232438c10 (    0x28) OBJC_CLASS_$_AUPasscodeCodecConfiguration [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232438c38 (    0x28) OBJC_CLASS_$_AUPasscodeCodecCapability [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232438c60 (    0x28) OBJC_METACLASS_$_AUPasscodeCodecConfiguration [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232438c88 (    0x28) OBJC_METACLASS_$_AUPasscodeCodecCapability [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232438cb0 (    0x28) OBJC_CLASS_$_APCListenerEngine [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232438cd8 (    0x28) OBJC_METACLASS_$_APCListenerEngine [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232438d00 (    0x28) OBJC_CLASS_$_AUPasscodeDecoder [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232438d28 (    0x28) OBJC_METACLASS_$_AUPasscodeDecoder [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232438d50 (    0x28) OBJC_CLASS_$_APCEncoderProcessor [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232438d78 (    0x28) OBJC_METACLASS_$_APCEncoderProcessor [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232438da0 (    0x28) OBJC_CLASS_$_APCDecoderProcessor [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232438dc8 (    0x28) OBJC_METACLASS_$_APCDecoderProcessor [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232438df0 (    0x28) OBJC_CLASS_$_APCListener [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232438e18 (    0x28) OBJC_METACLASS_$_APCListener [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232438e40 (    0x28) OBJC_CLASS_$_APCPlayer [EXT, NameNList, MangledNameNList, NList] 
                0x0000000232438e68 (    0x28) OBJC_METACLASS_$_APCPlayer [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232438e90 (    0x28) OBJC_CLASS_$_AUPasscodeEncoder [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232438eb8 (    0x28) OBJC_METACLASS_$_AUPasscodeEncoder [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232438ee0 (    0x28) OBJC_CLASS_$_AUAudioUnitOfflineProcessor [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000232438f08 (    0x28) OBJC_METACLASS_$_AUAudioUnitOfflineProcessor [PEXT, NameNList, MangledNameNList, NList] 
        0x0000000230f3b120 (   0x558) __DATA SEGMENT
            0x0000000230f3b120 (   0x160) __DATA __objc_classrefs
            0x0000000230f3b280 (    0xa0) __DATA __objc_superrefs
            0x0000000230f3b320 (   0x1e4) __DATA __objc_ivar
                0x0000000230f3b320 (     0x4) OBJC_IVAR_$_EchoCodecCapability._frameSizeRange [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b324 (     0x4) OBJC_IVAR_$_EchoCodecCapability._numFrameRepeatRange [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b328 (     0x4) OBJC_IVAR_$_EchoCodecCapability._hpfCutOffFreqRange [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b32c (     0x4) OBJC_IVAR_$_EchoCodecCapability._algorithmVersionNumbers [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b330 (     0x4) OBJC_IVAR_$_EchoCodecConfiguration._delayForBit0 [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b334 (     0x4) OBJC_IVAR_$_EchoCodecConfiguration._delayForBit1 [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b338 (     0x4) OBJC_IVAR_$_EchoCodecConfiguration._frameSize [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b33c (     0x4) OBJC_IVAR_$_EchoCodecConfiguration._numFrameRepeat [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b340 (     0x4) OBJC_IVAR_$_EchoCodecConfiguration._syncDetectThreshold [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b344 (     0x4) OBJC_IVAR_$_EchoCodecConfiguration._randomSeed [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b348 (     0x4) OBJC_IVAR_$_EchoCodecConfiguration._echoGainDB [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b34c (     0x4) OBJC_IVAR_$_EchoCodecConfiguration._noiseGainDB [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b350 (     0x4) OBJC_IVAR_$_EchoCodecConfiguration._hpfCutOffFreq [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b354 (     0x4) OBJC_IVAR_$_EchoCodecConfiguration._hfNoiseFillingFlag [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b358 (     0x4) OBJC_IVAR_$_EchoCodecConfiguration._algorithmVersionNumber [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b35c (     0x4) OBJC_IVAR_$_NullCodecConfiguration._retrievalCallbackInterval [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b360 (     0x4) OBJC_IVAR_$_APCListenerResultData._completionTime [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b364 (     0x4) OBJC_IVAR_$_APCPlayerEmbedInfo._estPasscodeDuration [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b368 (     0x4) OBJC_IVAR_$_APCPlayerEmbedInfo._measPasscodeDuration [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b36c (     0x4) OBJC_IVAR_$_APCPlayerEngine._session [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b370 (     0x4) OBJC_IVAR_$_APCPlayerEngine._engine [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b374 (     0x4) OBJC_IVAR_$_APCPlayerEngine._encoderAUNode [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b378 (     0x4) OBJC_IVAR_$_APCPlayerEngine._encoderAU [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b37c (     0x4) OBJC_IVAR_$_APCPlayerEngine._player [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b380 (     0x4) OBJC_IVAR_$_APCPlayerEngine._assetBuffer [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b384 (     0x4) OBJC_IVAR_$_APCPlayerEngine._isRunning [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b388 (     0x4) OBJC_IVAR_$_APCPlayerEngine._prePlayVolume [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b38c (     0x4) OBJC_IVAR_$_APCPlayerEngine._requestingStop [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b390 (     0x4) OBJC_IVAR_$_APCPlayerEngine._callbackDispatchSrc [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b394 (     0x4) OBJC_IVAR_$_APCPlayerEngine._dispatchQueue [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b398 (     0x4) OBJC_IVAR_$_APCPlayerEngine._embeddingInfo [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b39c (     0x4) OBJC_IVAR_$_APCPlayerEngine._beginningCallback [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b3a0 (     0x4) OBJC_IVAR_$_APCPlayerEngine._stopEngineCompletion [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b3a4 (     0x4) OBJC_IVAR_$_AUPasscodeCodecCommandLineOption._optionSyntax [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b3a8 (     0x4) OBJC_IVAR_$_AUPasscodeCodecCommandLineOption._optionDescription [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b3ac (     0x4) OBJC_IVAR_$_AUPasscodeCodecConfiguration._payloadLengthBytes [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b3b0 (     0x4) OBJC_IVAR_$_AUPasscodeCodecConfiguration._sampleRate [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b3b4 (     0x4) OBJC_IVAR_$_AUPasscodeCodecConfiguration._numChannels [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b3b8 (     0x4) OBJC_IVAR_$_AUPasscodeCodecConfiguration._algorithmName [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b3bc (     0x4) OBJC_IVAR_$_AUPasscodeCodecCapability._algorithmName [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b3c0 (     0x4) OBJC_IVAR_$_AUPasscodeCodecCapability._supportedSampleRates [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b3c4 (     0x4) OBJC_IVAR_$_AUPasscodeCodecCapability._numChannelRange [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b3c8 (     0x4) OBJC_IVAR_$_APCListenerEngine._session [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b3cc (     0x4) OBJC_IVAR_$_APCListenerEngine._engine [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b3d0 (     0x4) OBJC_IVAR_$_APCListenerEngine._decoderAUNode [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b3d4 (     0x4) OBJC_IVAR_$_APCListenerEngine._decoderAU [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b3d8 (     0x4) OBJC_IVAR_$_APCListenerEngine._codecConfig [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b3dc (     0x4) OBJC_IVAR_$_AUPasscodeDecoder._inputBus [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b3e0 (     0x4) OBJC_IVAR_$_AUPasscodeDecoder._outputBus [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b3e4 (     0x4) OBJC_IVAR_$_AUPasscodeDecoder._inputBusArray [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b3e8 (     0x4) OBJC_IVAR_$_AUPasscodeDecoder._outputBusArray [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b3ec (     0x4) OBJC_IVAR_$_AUPasscodeDecoder._rxDataBuffer [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b3f0 (     0x4) OBJC_IVAR_$_AUPasscodeDecoder._messagePool [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b3f4 (     0x4) OBJC_IVAR_$_AUPasscodeDecoder._apcDecoderConfig [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b3f8 (     0x4) OBJC_IVAR_$_AUPasscodeDecoder._incomingPayload [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b3fc (     0x4) OBJC_IVAR_$_AUPasscodeDecoder._deliverDataSerially [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b400 (     0x4) OBJC_IVAR_$_AUPasscodeDecoder._codecConfig [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b404 (     0x4) OBJC_IVAR_$_AUPasscodeDecoder._desiredChannelCount [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b408 (     0x4) OBJC_IVAR_$_AUPasscodeDecoder._actualChannelCount [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b40c (     0x4) OBJC_IVAR_$_AUPasscodeDecoder._kernel [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b410 (     0x4) OBJC_IVAR_$_AUPasscodeDecoder._rtMessenger [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b414 (     0x4) OBJC_IVAR_$_AUPasscodeDecoder._resultData [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b418 (     0x4) OBJC_IVAR_$_AUPasscodeDecoder._ctMutex [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b41c (     0x4) OBJC_IVAR_$_AUPasscodeDecoder._dispatchQueue [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b420 (     0x4) OBJC_IVAR_$_AUPasscodeDecoder._dataHandler [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b424 (     0x4) OBJC_IVAR_$_APCEncoderProcessor._encoderAU [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b428 (     0x4) OBJC_IVAR_$_APCEncoderProcessor._processor [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b42c (     0x4) OBJC_IVAR_$_APCEncoderProcessor._passcodeEmbedInfo [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b430 (     0x4) OBJC_IVAR_$_APCDecoderProcessor._decoderAU [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b434 (     0x4) OBJC_IVAR_$_APCDecoderProcessor._processor [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b438 (     0x4) OBJC_IVAR_$_APCDecoderProcessor._payloadsReceived [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b43c (     0x4) OBJC_IVAR_$_APCListener._codecConfig [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b440 (     0x4) OBJC_IVAR_$_APCListener._listenerEngine [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b444 (     0x4) OBJC_IVAR_$_APCListener._resultData [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b448 (     0x4) OBJC_IVAR_$_APCListener._retrievedDataHandler [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b44c (     0x4) OBJC_IVAR_$_APCListener._invalidationHandler [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b450 (     0x4) OBJC_IVAR_$_APCListener._dispatchQueue [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b454 (     0x4) OBJC_IVAR_$_APCPlayer._player [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b458 (     0x4) OBJC_IVAR_$_APCPlayer._encodeProcessor [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b45c (     0x4) OBJC_IVAR_$_APCPlayer._playerEngine [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b460 (     0x4) OBJC_IVAR_$_APCPlayer._codecConfig [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b464 (     0x4) OBJC_IVAR_$_APCPlayer._isPlaying [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b468 (     0x4) OBJC_IVAR_$_APCPlayer._payload [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b46c (     0x4) OBJC_IVAR_$_APCPlayer._configurationData [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b470 (     0x4) OBJC_IVAR_$_APCPlayer._dispatchQueue [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b474 (     0x4) OBJC_IVAR_$_APCPlayer._callbackTimingMSec [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b478 (     0x4) OBJC_IVAR_$_AUPasscodeEncoder._inputBus [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b47c (     0x4) OBJC_IVAR_$_AUPasscodeEncoder._outputBus [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b480 (     0x4) OBJC_IVAR_$_AUPasscodeEncoder._inputBusArray [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b484 (     0x4) OBJC_IVAR_$_AUPasscodeEncoder._outputBusArray [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b488 (     0x4) OBJC_IVAR_$_AUPasscodeEncoder._apcEncoderConfig [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b48c (     0x4) OBJC_IVAR_$_AUPasscodeEncoder._assetLength [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b490 (     0x4) OBJC_IVAR_$_AUPasscodeEncoder._silenceOutputOnNextAssetEnding [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b494 (     0x4) OBJC_IVAR_$_AUPasscodeEncoder._fadeOutTimeSeconds [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b498 (     0x4) OBJC_IVAR_$_AUPasscodeEncoder._triggerFadeOut [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b49c (     0x4) OBJC_IVAR_$_AUPasscodeEncoder._outputIsSilenced [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b4a0 (     0x4) OBJC_IVAR_$_AUPasscodeEncoder._fadeOutNumSamples [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b4a4 (     0x4) OBJC_IVAR_$_AUPasscodeEncoder._fadeOutSampleIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b4a8 (     0x4) OBJC_IVAR_$_AUPasscodeEncoder._embedPasscode [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b4ac (     0x4) OBJC_IVAR_$_AUPasscodeEncoder._numLoopsToStopAfter [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b4b0 (     0x4) OBJC_IVAR_$_AUPasscodeEncoder._loopNumber [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b4b4 (     0x4) OBJC_IVAR_$_AUPasscodeEncoder._beginningTime [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b4b8 (     0x4) OBJC_IVAR_$_AUPasscodeEncoder._rtMessenger [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b4bc (     0x4) OBJC_IVAR_$_AUPasscodeEncoder._eofMessage [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b4c0 (     0x4) OBJC_IVAR_$_AUPasscodeEncoder._assetEndedAndSilencedHandler [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b4c4 (     0x4) OBJC_IVAR_$_AUPasscodeEncoder._passcodeEmbedInfo [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b4c8 (     0x4) OBJC_IVAR_$_AUPasscodeEncoder._kernel [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b4cc (     0x4) OBJC_IVAR_$_AUPasscodeEncoder._assetSampleCount [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b4d0 (     0x4) OBJC_IVAR_$_AUPasscodeEncoder._payload [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b4d4 (     0x4) OBJC_IVAR_$_AUPasscodeEncoder._codecConfig [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b4d8 (     0x4) OBJC_IVAR_$_AUPasscodeEncoder._dispatchQueue [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b4dc (     0x4) OBJC_IVAR_$_AUAudioUnitOfflineProcessor._srcFile [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b4e0 (     0x4) OBJC_IVAR_$_AUAudioUnitOfflineProcessor._destFile [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b4e4 (     0x4) OBJC_IVAR_$_AUAudioUnitOfflineProcessor._audioUnit [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b4e8 (     0x4) OBJC_IVAR_$_AUAudioUnitOfflineProcessor._renderBlock [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b4ec (     0x4) OBJC_IVAR_$_AUAudioUnitOfflineProcessor._srcBufferList [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b4f0 (     0x4) OBJC_IVAR_$_AUAudioUnitOfflineProcessor._destBufferList [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b4f4 (     0x4) OBJC_IVAR_$_AUAudioUnitOfflineProcessor._srcAudioStorage [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b4f8 (     0x4) OBJC_IVAR_$_AUAudioUnitOfflineProcessor._destAudioStorage [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b4fc (     0x4) OBJC_IVAR_$_AUAudioUnitOfflineProcessor._pullInputBlock [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b500 (     0x4) OBJC_IVAR_$_AUAudioUnitOfflineProcessor._assetLength [PEXT, NameNList, MangledNameNList, NList] 
            0x0000000230f3b508 (   0x120) __DATA __data
                0x0000000230f3b508 (    0x60) _OBJC_PROTOCOL_$_NSCoding [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b568 (    0x60) _OBJC_PROTOCOL_$_NSSecureCoding [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000230f3b5c8 (    0x60) _OBJC_PROTOCOL_$_NSCopying [PEXT, NameNList, MangledNameNList, NList] 
            0x0000000230f3b628 (    0x48) __DATA __bss
                0x0000000230f3b628 (     0x8) EchoCodeDecoder::decodeWithSyncEcho(float const*, unsigned int&, unsigned char&)::count [NameNList, MangledNameNList, NList] 
                0x0000000230f3b630 (     0x8) APCLogObject()::sLogObject [NameNList, MangledNameNList, NList] 
                0x0000000230f3b638 (     0x8) guard variable for APCLogObject()::sLogObject [NameNList, MangledNameNList, NList] 
                0x0000000230f3b640 (     0x8) +[APCDefaults sharedDefaults]::onceToken [NameNList, MangledNameNList, NList] 
                0x0000000230f3b648 (     0x8) Random::instance()::sInstance [NameNList, MangledNameNList, NList] 
                0x0000000230f3b650 (     0x8) guard variable for Random::instance()::sInstance [NameNList, MangledNameNList, NList] 
                0x0000000230f3b658 (     0x8) SyncEchoDetector::detectSyncEcho(float const*, unsigned int)::count [NameNList, MangledNameNList, NList] 
                0x0000000230f3b660 (     0x8) +[AUPasscodeDecoder registerAU]::gOnce [NameNList, MangledNameNList, NList] 
                0x0000000230f3b668 (     0x8) +[AUPasscodeEncoder registerAU]::gOnce [NameNList, MangledNameNList, NList] 
            0x0000000230f3b670 (     0x8) __DATA __common
                0x0000000230f3b670 (     0x8) _defaults [PEXT, NameNList, MangledNameNList, NList] 
        0x000000023a910000 (0x37bf0000) __LINKEDIT SEGMENT
