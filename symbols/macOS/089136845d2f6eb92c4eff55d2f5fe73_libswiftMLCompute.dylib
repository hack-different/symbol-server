/usr/lib/swift/libswiftMLCompute.dylib [arm64e, 0.312448 seconds]:
    076A7967-AC96-35F3-B547-8E2EE863F425 /usr/lib/swift/libswiftMLCompute.dylib [DYLIB, DYLDSHAREDCACHE, FaultedFromDiskDyldSharedCache, MMap64]  
        0x000000022154a000 (  0x6ff5) __TEXT SEGMENT
            0x000000022154a000 (  0x1348) MACH_HEADER
            0x000000022154b348 (  0x49f8) __TEXT __text
                0x000000022154b348 (     0xc) MLCEmbeddingDescriptor.embeddingCount.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154b354 (     0xc) MLCEmbeddingDescriptor.embeddingDimension.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154b360 (    0x5c) MLCEmbeddingDescriptor.embeddingCount.getter [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154b3bc (    0x6c) MLCEmbeddingDescriptor.paddingIndex.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154b428 (     0xc) MLCEmbeddingDescriptor.maximumNorm.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154b434 (     0xc) MLCEmbeddingDescriptor.pNorm.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154b440 (    0x74) MLCEmbeddingDescriptor.maximumNorm.getter [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154b4b4 (    0x88) MLCEmbeddingDescriptor.init(embeddingCount:embeddingDimension:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154b53c (   0x110) MLCEmbeddingDescriptor.init(embeddingCount:embeddingDimension:paddingIndex:maximumNorm:pNorm:scalesGradientByFrequency:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154b64c (     0xc) MLCPaddingLayer.init(reflectionPadding:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154b658 (    0xc8) specialized _arrayForceCast<A, B>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154b720 (    0x40) type metadata accessor for NSNumber [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154b760 (     0xc) MLCPaddingLayer.init(symmetricPadding:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154b76c (     0xc) MLCPaddingLayer.init(zeroPadding:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154b778 (    0x9c) MLCPaddingLayer.init(reflectionPadding:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154b814 (    0xa4) MLCPaddingLayer.init(constantPadding:constantValue:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154b8b8 (   0x1a8) MLCLayerNormalizationLayer.normalizedShape.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154ba60 (    0xcc) MLCLayerNormalizationLayer.init(normalizedShape:beta:gamma:varianceEpsilon:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154bb2c (    0xcc) MLCLayerNormalizationLayer.init(normalizedShape:beta:gamma:varianceEpsilon:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154bbf8 (    0x20) specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154bc18 (    0x20) specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154bc38 (   0x130) specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154bd68 (   0x100) specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154be68 (   0x1e0) specialized _ArrayBuffer._getElementSlowPath(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154c048 (    0x44) __swift_instantiateConcreteTypeFromMangledName [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154c08c (     0x4) _swift_stdlib_malloc_size [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154c090 (    0x2c) MLCInferenceGraph.execute(inputsData:lossLabelsData:lossLabelWeightsData:outputsData:batchSize:options:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154c0bc (    0xdc) MLCInferenceGraph.execute(inputsData:lossLabelsData:lossLabelWeightsData:outputsData:batchSize:options:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154c198 (   0x148) MLCInferenceGraph.execute(inputsData:lossLabelsData:lossLabelWeightsData:outputsData:batchSize:options:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154c2e0 (   0x1d4) closure #1 in MLCInferenceGraph.execute(inputsData:lossLabelsData:lossLabelWeightsData:outputsData:batchSize:options:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154c4b4 (    0x40) type metadata accessor for MLCTensorData [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154c4f4 (    0xc0) closure #1 in closure #1 in MLCInferenceGraph.execute(inputsData:lossLabelsData:lossLabelWeightsData:outputsData:batchSize:options:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154c5b4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022154c5c4 (     0x8) partial apply for closure #1 in closure #1 in MLCInferenceGraph.execute(inputsData:lossLabelsData:lossLabelWeightsData:outputsData:batchSize:options:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154c5cc (    0x10) block_copy_helper [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154c5dc (     0x8) block_destroy_helper [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154c5e4 (    0xa0) thunk for @escaping @callee_guaranteed (@guaranteed MLCTensor?, @guaranteed Error?, @unowned Double) -> () [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154c684 (    0x24) MLCTrainingGraph.executeForward(batchSize:options:outputsData:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154c6a8 (   0x1a0) MLCTrainingGraph.executeForward(batchSize:options:outputsData:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154c848 (   0x148) MLCTrainingGraph.executeForward(batchSize:options:outputsData:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154c990 (    0xc0) closure #1 in closure #1 in MLCTrainingGraph.executeForward(batchSize:options:outputsData:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154ca50 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022154ca60 (     0x8) partial apply for closure #1 in closure #1 in MLCTrainingGraph.executeForward(batchSize:options:outputsData:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154ca68 (    0x10) block_copy_helper [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154ca78 (     0x8) block_destroy_helper [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154ca80 (    0x24) MLCTrainingGraph.executeGradient(batchSize:options:outputsData:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154caa4 (   0x1a0) MLCTrainingGraph.executeGradient(batchSize:options:outputsData:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154cc44 (   0x110) MLCTrainingGraph.executeGradient(batchSize:options:outputsData:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154cd54 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022154cd64 (    0x1c) partial apply for closure #1 in closure #1 in MLCTrainingGraph.executeGradient(batchSize:options:outputsData:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154cd80 (    0x20) MLCTrainingGraph.executeOptimizerUpdate(options:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154cda0 (   0x154) MLCTrainingGraph.executeOptimizerUpdate(options:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154cef4 (   0x110) MLCTrainingGraph.executeOptimizerUpdate(options:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154d004 (    0xb8) closure #1 in closure #1 in MLCTrainingGraph.executeGradient(batchSize:options:outputsData:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154d0bc (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000022154d0cc (     0x4) block_copy_helper.5 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154d0d0 (     0x4) block_copy_helper.12 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154d0d4 (     0x4) partial apply for closure #1 in closure #1 in MLCTrainingGraph.executeOptimizerUpdate(options:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154d0d8 (     0x4) block_destroy_helper.6 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154d0dc (     0x4) block_destroy_helper.13 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154d0e0 (   0x1ac) MLCSplitLayer.splitSectionLengths.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154d28c (    0xa4) MLCSplitLayer.init(splitSectionLengths:dimension:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154d330 (   0x1a8) MLCUpsampleLayer.shape.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154d4d8 (    0x94) MLCUpsampleLayer.init(shape:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154d56c (    0xac) MLCUpsampleLayer.init(shape:sampleMode:alignsCorners:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154d618 (     0xc) MLCSliceLayer.start.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154d624 (     0xc) MLCSliceLayer.end.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154d630 (   0x1a4) MLCSliceLayer.start.getter [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154d7d4 (   0x1ac) MLCSliceLayer.stride.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154d980 (   0x12c) MLCSliceLayer.init(start:end:stride:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154daac (    0x14) MLCConvolutionDescriptor.kernelSizes.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154dac0 (    0x14) MLCConvolutionDescriptor.strides.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154dad4 (    0x14) MLCConvolutionDescriptor.dilationRates.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154dae8 (    0x4c) MLCConvolutionDescriptor.kernelSizes.getter [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154db34 (    0xec) MLCConvolutionDescriptor.paddingPolicy.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154dc20 (   0x228) MLCConvolutionDescriptor.init(type:kernelSizes:inputFeatureChannelCount:outputFeatureChannelCount:groupCount:strides:dilationRates:paddingPolicy:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154de48 (   0x1a8) MLCReductionLayer.dimensions.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154dff0 (    0xa4) MLCReductionLayer.init(reductionType:dimensions:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154e094 (   0x1a8) MLCTransposeLayer.dimensions.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154e23c (    0x94) MLCTransposeLayer.init(dimensions:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154e2d0 (    0x28) MLCPaddingPolicy.objcPolicy.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154e2f8 (    0x7c) MLCPaddingPolicy.objcSizes.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154e374 (   0x15c) MLCPaddingPolicy.debugDescription.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154e4d0 (    0x14) __swift_memcpy17_8 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154e4e4 (     0x4) __swift_noop_void_return [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154e4e8 (    0x20) getEnumTagSinglePayload for MLCPaddingPolicy [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154e508 (    0x30) storeEnumTagSinglePayload for MLCPaddingPolicy [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154e538 (    0x1c) getEnumTag for MLCPaddingPolicy [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154e554 (     0x4) destructiveProjectEnumData for MLCPaddingPolicy [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154e558 (    0x20) destructiveInjectEnumTag for MLCPaddingPolicy [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154e578 (    0x10) type metadata accessor for MLCPaddingPolicy [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154e588 (    0x94) MLCTensor.init(shape:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154e61c (     0xc) MLCTensor.init(shape:randomInitializerType:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154e628 (     0xc) MLCTensor.init(shape:dataType:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154e634 (    0xa4) MLCTensor.init(shape:randomInitializerType:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154e6d8 (    0x20) MLCTensor.init(shape:data:dataType:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154e6f8 (    0x20) MLCTensor.init(shape:fillWithData:dataType:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154e718 (    0xc4) MLCTensor.init(shape:data:dataType:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154e7dc (    0xc4) MLCTensor.init(sequenceLengths:sortedSequences:featureChannelCount:batchSize:randomInitializerType:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154e8a0 (    0xcc) MLCTensor.init(sequenceLengths:sortedSequences:featureChannelCount:batchSize:data:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154e96c (    0xe0) MLCGraph.split(source:splitSectionLengths:dimension:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154ea4c (    0x3c) type metadata accessor for NSNumber [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154ea88 (     0xc) MLCGraph.reshape(shape:source:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154ea94 (     0xc) MLCGraph.transpose(dimensions:source:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154eaa0 (    0x98) MLCGraph.reshape(shape:source:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154eb38 (    0x94) MLCReshapeLayer.init(shape:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154ebcc (   0x1a8) MLCReshapeLayer.shape.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154ed74 (     0xc) MLCTensorDescriptor.shape.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154ed80 (     0xc) MLCTensorDescriptor.stride.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154ed8c (   0x1a4) MLCTensorDescriptor.shape.getter [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154ef30 (     0xc) MLCTensorDescriptor.sequenceLengths.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154ef3c (     0xc) MLCTensorDescriptor.batchSizePerSequenceStep.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154ef48 (   0x1a8) MLCTensorDescriptor.sequenceLengths.getter [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154f0f0 (    0xa4) MLCTensorDescriptor.init(shape:dataType:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154f194 (    0xf4) MLCTensorDescriptor.init(shape:sequenceLengths:sortedSequences:dataType:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154f288 (    0x1c) MLCPoolingType.objcPoolingType.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154f2a4 (   0x13c) MLCPoolingType.debugDescription.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154f3e0 (    0xc4) MLCPoolingDescriptor.poolingType.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154f4a4 (    0x14) MLCPoolingDescriptor.kernelSizes.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154f4b8 (    0x14) MLCPoolingDescriptor.strides.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154f4cc (    0x14) MLCPoolingDescriptor.dilationRates.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154f4e0 (    0x4c) MLCPoolingDescriptor.kernelSizes.getter [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154f52c (    0xec) MLCPoolingDescriptor.paddingPolicy.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154f618 (   0x514) MLCPoolingDescriptor.init(type:kernelSizes:strides:dilationRates:paddingPolicy:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154fb2c (     0xc) __swift_memcpy1_1 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154fb38 (    0xb0) getEnumTagSinglePayload for MLCPoolingType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154fbe8 (    0x14) (null) [FUNC, FunctionStarts] 
                0x000000022154fbfc (    0xd4) storeEnumTagSinglePayload for MLCPoolingType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154fcd0 (    0x14) (null) [FUNC, FunctionStarts] 
                0x000000022154fce4 (    0x14) (null) [FUNC, FunctionStarts] 
                0x000000022154fcf8 (    0x1c) getEnumTag for MLCPoolingType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154fd14 (     0x4) destructiveProjectEnumData for MLCPoolingType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154fd18 (    0x18) destructiveInjectEnumTag for MLCPoolingType [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000022154fd30 (    0x10) type metadata accessor for MLCPoolingType [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
            0x000000022154fd40 (   0x320) __TEXT __auth_stubs
                0x000000022154fd40 (    0x10) DYLD-STUB$$Dictionary._bridgeToObjectiveC() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022154fd50 (    0x10) DYLD-STUB$$static String._unconditionallyBridgeFromObjectiveC(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022154fd60 (    0x10) DYLD-STUB$$String.append(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022154fd70 (    0x10) DYLD-STUB$$Array._bridgeToObjectiveC() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022154fd80 (    0x10) DYLD-STUB$$static Array._unconditionallyBridgeFromObjectiveC(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022154fd90 (    0x10) DYLD-STUB$$Float._bridgeToObjectiveC() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022154fda0 (    0x10) DYLD-STUB$$Float.init(exactly:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022154fdb0 (    0x10) DYLD-STUB$$Int._bridgeToObjectiveC() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022154fdc0 (    0x10) DYLD-STUB$$Int.init(exactly:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022154fdd0 (    0x10) DYLD-STUB$$_StringGuts.grow(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022154fde0 (    0x10) DYLD-STUB$$_assertionFailure(_:_:file:line:flags:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022154fdf0 (    0x10) DYLD-STUB$$_assertionFailure(_:_:flags:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022154fe00 (    0x10) DYLD-STUB$$_CocoaArrayWrapper.endIndex.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022154fe10 (    0x10) DYLD-STUB$$_CocoaArrayWrapper.subscript.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022154fe20 (    0x10) DYLD-STUB$$dispatch thunk of CustomStringConvertible.description.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022154fe30 (    0x10) DYLD-STUB$$_typeName(_:qualified:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022154fe40 (    0x10) DYLD-STUB$$MLCPaddingPolicyDebugDescription [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022154fe50 (    0x10) DYLD-STUB$$MLCPoolingTypeDebugDescription [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022154fe60 (    0x10) DYLD-STUB$$_Block_copy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022154fe70 (    0x10) DYLD-STUB$$_Block_release [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022154fe80 (    0x10) DYLD-STUB$$malloc_size [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022154fe90 (    0x10) DYLD-STUB$$memcpy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022154fea0 (    0x10) DYLD-STUB$$memmove [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022154feb0 (    0x10) DYLD-STUB$$objc_msgSend [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022154fec0 (    0x10) DYLD-STUB$$objc_opt_self [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022154fed0 (    0x10) DYLD-STUB$$objc_release [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022154fee0 (    0x10) DYLD-STUB$$objc_retain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022154fef0 (    0x10) DYLD-STUB$$objc_retainAutoreleasedReturnValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022154ff00 (    0x10) DYLD-STUB$$swift_allocError [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022154ff10 (    0x10) DYLD-STUB$$swift_allocObject [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022154ff20 (    0x10) DYLD-STUB$$swift_arrayInitWithCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022154ff30 (    0x10) DYLD-STUB$$swift_bridgeObjectRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022154ff40 (    0x10) DYLD-STUB$$swift_bridgeObjectRetain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022154ff50 (    0x10) DYLD-STUB$$swift_continuation_await [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022154ff60 (    0x10) DYLD-STUB$$swift_continuation_init [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022154ff70 (    0x10) DYLD-STUB$$swift_continuation_throwingResume [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022154ff80 (    0x10) DYLD-STUB$$swift_continuation_throwingResumeWithError [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022154ff90 (    0x10) DYLD-STUB$$swift_deallocObject [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022154ffa0 (    0x10) DYLD-STUB$$swift_dynamicCastObjCClass [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022154ffb0 (    0x10) DYLD-STUB$$swift_errorRetain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022154ffc0 (    0x10) DYLD-STUB$$swift_getObjCClassFromMetadata [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022154ffd0 (    0x10) DYLD-STUB$$swift_getObjCClassMetadata [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022154ffe0 (    0x10) DYLD-STUB$$swift_getObjectType [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000022154fff0 (    0x10) DYLD-STUB$$swift_getTypeByMangledNameInContext2 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000221550000 (    0x10) DYLD-STUB$$swift_release [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000221550010 (    0x10) DYLD-STUB$$swift_retain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000221550020 (    0x10) DYLD-STUB$$swift_task_switch [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000221550030 (    0x10) DYLD-STUB$$swift_unknownObjectRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000221550040 (    0x10) DYLD-STUB$$swift_unknownObjectRetain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x0000000221550050 (    0x10) DYLD-STUB$$swift_willThrow [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
            0x0000000221550060 (    0xb8) __TEXT __const
                0x0000000221550060 (     0x4) property descriptor for MLCEmbeddingDescriptor.maximumNorm [EXT, NameNList, MangledNameNList, NList] 
                0x0000000221550060 (     0x4) property descriptor for MLCEmbeddingDescriptor.paddingIndex [EXT, ALIAS, NameNList, MangledNameNList, NList] 
                0x0000000221550060 (     0x4) property descriptor for MLCEmbeddingDescriptor.embeddingCount [EXT, ALIAS, NameNList, MangledNameNList, NList] 
                0x0000000221550060 (     0x4) property descriptor for MLCEmbeddingDescriptor.embeddingDimension [EXT, ALIAS, NameNList, MangledNameNList, NList] 
                0x0000000221550060 (     0x4) property descriptor for MLCEmbeddingDescriptor.pNorm [EXT, ALIAS, NameNList, MangledNameNList, NList] 
                0x0000000221550064 (     0xc) property descriptor for MLCLayerNormalizationLayer.normalizedShape [EXT, NameNList, MangledNameNList, NList] 
                0x0000000221550070 (     0x4) property descriptor for MLCSplitLayer.splitSectionLengths [EXT, NameNList, MangledNameNList, NList] 
                0x0000000221550074 (     0x4) property descriptor for MLCUpsampleLayer.shape [EXT, NameNList, MangledNameNList, NList] 
                0x0000000221550078 (    0x28) property descriptor for MLCSliceLayer.end [EXT, NameNList, MangledNameNList, NList] 
                0x0000000221550078 (    0x28) property descriptor for MLCSliceLayer.start [EXT, ALIAS, NameNList, MangledNameNList, NList] 
                0x0000000221550078 (    0x28) property descriptor for MLCSliceLayer.stride [EXT, ALIAS, NameNList, MangledNameNList, NList] 
                0x00000002215500a0 (     0x4) property descriptor for MLCConvolutionDescriptor.kernelSizes [EXT, NameNList, MangledNameNList, NList] 
                0x00000002215500a0 (     0x4) property descriptor for MLCConvolutionDescriptor.dilationRates [EXT, ALIAS, NameNList, MangledNameNList, NList] 
                0x00000002215500a0 (     0x4) property descriptor for MLCConvolutionDescriptor.paddingPolicy [EXT, ALIAS, NameNList, MangledNameNList, NList] 
                0x00000002215500a0 (     0x4) property descriptor for MLCConvolutionDescriptor.strides [EXT, ALIAS, NameNList, MangledNameNList, NList] 
                0x00000002215500a4 (     0x4) property descriptor for MLCReductionLayer.dimensions [EXT, NameNList, MangledNameNList, NList] 
                0x00000002215500a8 (     0x8) property descriptor for MLCTransposeLayer.dimensions [EXT, NameNList, MangledNameNList, NList] 
                0x00000002215500b0 (    0x24) property descriptor for MLCPaddingPolicy.objcPolicy [EXT, NameNList, MangledNameNList, NList] 
                0x00000002215500b0 (    0x24) property descriptor for MLCPaddingPolicy.debugDescription [EXT, ALIAS, NameNList, MangledNameNList, NList] 
                0x00000002215500b0 (    0x24) property descriptor for MLCPaddingPolicy.objcSizes [EXT, ALIAS, NameNList, MangledNameNList, NList] 
                0x00000002215500d4 (     0x4) enum case for MLCPaddingPolicy.sized(_:) [EXT, NameNList, MangledNameNList, NList] 
                0x00000002215500d8 (     0x4) enum case for MLCPaddingPolicy.same(_:) [EXT, NameNList, MangledNameNList, NList] 
                0x00000002215500dc (     0x4) enum case for MLCPaddingPolicy.valid(_:) [EXT, NameNList, MangledNameNList, NList] 
                0x00000002215500e0 (     0x4) __swift_reflection_version [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002215500e4 (     0x4) property descriptor for MLCReshapeLayer.shape [EXT, NameNList, MangledNameNList, NList] 
                0x00000002215500e8 (     0x4) property descriptor for MLCTensorDescriptor.sequenceLengths [EXT, NameNList, MangledNameNList, NList] 
                0x00000002215500e8 (     0x4) property descriptor for MLCTensorDescriptor.batchSizePerSequenceStep [EXT, ALIAS, NameNList, MangledNameNList, NList] 
                0x00000002215500e8 (     0x4) property descriptor for MLCTensorDescriptor.shape [EXT, ALIAS, NameNList, MangledNameNList, NList] 
                0x00000002215500e8 (     0x4) property descriptor for MLCTensorDescriptor.stride [EXT, ALIAS, NameNList, MangledNameNList, NList] 
                0x00000002215500ec (    0x20) property descriptor for MLCPoolingType.objcPoolingType [EXT, NameNList, MangledNameNList, NList] 
                0x00000002215500ec (    0x20) property descriptor for MLCPoolingType.debugDescription [EXT, ALIAS, NameNList, MangledNameNList, NList] 
                0x00000002215500ec (    0x20) property descriptor for MLCPoolingDescriptor.kernelSizes [EXT, ALIAS, NameNList, MangledNameNList, NList] 
                0x00000002215500ec (    0x20) property descriptor for MLCPoolingDescriptor.poolingType [EXT, ALIAS, NameNList, MangledNameNList, NList] 
                0x00000002215500ec (    0x20) property descriptor for MLCPoolingDescriptor.dilationRates [EXT, ALIAS, NameNList, MangledNameNList, NList] 
                0x00000002215500ec (    0x20) property descriptor for MLCPoolingDescriptor.paddingPolicy [EXT, ALIAS, NameNList, MangledNameNList, NList] 
                0x00000002215500ec (    0x20) property descriptor for MLCPoolingDescriptor.strides [EXT, ALIAS, NameNList, MangledNameNList, NList] 
                0x000000022155010c (     0x4) enum case for MLCPoolingType.average(_:) [EXT, NameNList, MangledNameNList, NList] 
                0x0000000221550110 (     0x4) enum case for MLCPoolingType.max(_:) [EXT, NameNList, MangledNameNList, NList] 
                0x0000000221550114 (     0x4) enum case for MLCPoolingType.l2Norm(_:) [EXT, NameNList, MangledNameNList, NList] 
            0x0000000221550120 (   0x18a) __TEXT __cstring
            0x00000002215502aa (    0x97) __TEXT __swift5_typeref
                0x00000002215502aa (     0xa) symbolic _____ySiG s23_ContiguousArrayStorageC [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002215502b4 (     0xc) symbolic _____yyXlG s23_ContiguousArrayStorageC [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002215502c0 (    0x36) symbolic SccySo9MLCTensorCSg6result_Sd13executionTimet______pG s5ErrorP [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002215502f6 (     0x8) symbolic ______p s5ErrorP [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002215502fe (    0x10) symbolic SccySd______pG s5ErrorP [PEXT, NameNList, MangledNameNList, NList] 
                0x000000022155030e (     0x6) symbolic _____ 9MLCompute16MLCPaddingPolicyO [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000221550314 (     0xc) symbolic Si1y_Si1xt [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000221550320 (     0x6) symbolic _____ 9MLCompute14MLCPoolingTypeO [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000221550326 (    0x1b) symbolic Sb20countIncludesPadding_t [PEXT, NameNList, MangledNameNList, NList] 
            0x0000000221550344 (    0x40) __TEXT __swift5_capture
            0x0000000221550384 (    0x44) __TEXT __constg_swiftt
                0x0000000221550384 (     0xc) module descriptor  [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000221550390 (    0x1c) nominal type descriptor for MLCPaddingPolicy [EXT, NameNList, MangledNameNList, NList] 
                0x00000002215503ac (    0x1c) nominal type descriptor for MLCPoolingType [EXT, NameNList, MangledNameNList, NList] 
            0x00000002215503c8 (    0x24) __TEXT __swift5_reflstr
            0x00000002215503ec (    0x68) __TEXT __swift5_fieldmd
                0x00000002215503ec (    0x34) reflection metadata field descriptor MLCPaddingPolicy [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000221550420 (    0x34) reflection metadata field descriptor MLCPoolingType [PEXT, NameNList, MangledNameNList, NList] 
            0x0000000221550454 (     0x8) __TEXT __swift5_types
            0x000000022155045c (   0x1e4) __TEXT __unwind_info
            0x0000000221550640 (   0x190) __TEXT __eh_frame
            0x00000002215507d0 (   0x825) __TEXT __objc_methname
        0x000000022e844970 (   0x258) __DATA_CONST SEGMENT
            0x000000022e844970 (    0x40) __DATA_CONST __got
            0x000000022e8449b0 (    0x40) __DATA_CONST __const
                0x000000022e8449b0 (     0x8) _swift_FORCE_LOAD_$_swiftFoundation_$_MLCompute [PEXT, NameNList, MangledNameNList, NList] 
                0x000000022e8449b8 (     0x8) _swift_FORCE_LOAD_$_swiftObjectiveC_$_MLCompute [PEXT, NameNList, MangledNameNList, NList] 
                0x000000022e8449c0 (     0x8) _swift_FORCE_LOAD_$_swiftDarwin_$_MLCompute [PEXT, NameNList, MangledNameNList, NList] 
                0x000000022e8449c8 (     0x8) _swift_FORCE_LOAD_$_swiftCoreFoundation_$_MLCompute [PEXT, NameNList, MangledNameNList, NList] 
                0x000000022e8449d0 (     0x8) _swift_FORCE_LOAD_$_swiftDispatch_$_MLCompute [PEXT, NameNList, MangledNameNList, NList] 
                0x000000022e8449d8 (     0x8) _swift_FORCE_LOAD_$_swiftXPC_$_MLCompute [PEXT, NameNList, MangledNameNList, NList] 
                0x000000022e8449e0 (     0x8) _swift_FORCE_LOAD_$_swiftIOKit_$_MLCompute [PEXT, NameNList, MangledNameNList, NList] 
                0x000000022e8449e8 (     0x8) _swift_FORCE_LOAD_$_swiftMetal_$_MLCompute [PEXT, NameNList, MangledNameNList, NList] 
            0x000000022e8449f0 (     0x8) __DATA_CONST __objc_imageinfo
            0x000000022e8449f8 (   0x1d0) __DATA_CONST __objc_selrefs
        0x0000000238319ea8 (   0x420) __AUTH_CONST SEGMENT
            0x0000000238319ea8 (   0x290) __AUTH_CONST __const
                0x0000000238319ee0 (    0x58) block_descriptor [NameNList, MangledNameNList, NList] 
                0x0000000238319f38 (    0x50) block_descriptor [NameNList, MangledNameNList, NList] 
                0x0000000238319f88 (    0x50) block_descriptor.7 [NameNList, MangledNameNList, NList] 
                0x0000000238319fd8 (    0x38) block_descriptor.14 [NameNList, MangledNameNList, NList] 
                0x000000023831a010 (    0x70) value witness table for MLCPaddingPolicy [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023831a080 (    0x10) full type metadata for MLCPaddingPolicy [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023831a090 (    0x18) type metadata for MLCPaddingPolicy [EXT, NameNList, MangledNameNList, NList] 
                0x000000023831a0a8 (    0x70) value witness table for MLCPoolingType [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023831a118 (    0x10) full type metadata for MLCPoolingType [PEXT, NameNList, MangledNameNList, NList] 
                0x000000023831a128 (    0x10) type metadata for MLCPoolingType [EXT, NameNList, MangledNameNList, NList] 
            0x000000023831a138 (   0x190) __AUTH_CONST __auth_got
        0x0000000231b65e88 (    0x69) __DATA SEGMENT
            0x0000000231b65e88 (    0x18) __DATA __objc_classrefs
            0x0000000231b65ea0 (    0x50) __DATA __data
                0x0000000231b65ea0 (     0x8) lazy cache variable for type metadata for NSNumber [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b65ea8 (     0x8) demangling cache variable for type metadata for _ContiguousArrayStorage<Int> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b65eb0 (     0x8) demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject> [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b65eb8 (     0x8) async function pointer to MLCInferenceGraph.execute(inputsData:lossLabelsData:lossLabelWeightsData:outputsData:batchSize:options:) [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b65ec0 (     0x8) lazy cache variable for type metadata for MLCTensorData [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b65ec8 (     0x8) demangling cache variable for type metadata for Error [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231b65ed0 (     0x8) async function pointer to MLCTrainingGraph.executeForward(batchSize:options:outputsData:) [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b65ed8 (     0x8) async function pointer to MLCTrainingGraph.executeGradient(batchSize:options:outputsData:) [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b65ee0 (     0x8) async function pointer to MLCTrainingGraph.executeOptimizerUpdate(options:) [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231b65ee8 (     0x8) lazy cache variable for type metadata for MLCTensor [PEXT, NameNList, MangledNameNList, NList] 
            0x0000000231b65ef0 (     0x1) __DATA __common
                0x0000000231b65ef0 (     0x1) _swift_FORCE_LOAD_$_swiftMLCompute [EXT, NameNList, MangledNameNList, NList] 
        0x000000023a910000 (0x37bf0000) __LINKEDIT SEGMENT
