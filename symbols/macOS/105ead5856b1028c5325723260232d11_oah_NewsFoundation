Unable to find file, pid, task or signature matching: -arch=x86_64
WARNING: You currently do not have task_read_for_pid() privileges.
Unable to find file, pid, task or signature matching: -wide
WARNING: You currently do not have task_read_for_pid() privileges.
/System/Library/PrivateFrameworks/NewsFoundation.framework/Versions/A/NewsFoundation [arm64e, 0.551813 seconds]:
    A279EDAE-BBDE-3A91-ACEC-6C0086D75B72 /System/Library/PrivateFrameworks/NewsFoundation.framework/Versions/A/NewsFoundation [DYLIB, DYLDSHAREDCACHE, FaultedFromDiskDyldSharedCache, MMap64]  
        0x00000001ca3a8000 (  0xf000) __TEXT SEGMENT
            0x00000001ca3a8000 (  0x10e4) MACH_HEADER
            0x00000001ca3a90e4 (  0x8e64) __TEXT __text
                0x00000001ca3a90e4 (    0x44) NFInternalBuild [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3a9128 (    0x28) __NFInternalBuild_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3a9150 (     0x8) NFSeedBuild [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3a9158 (    0x44) NFStoreDemoMode [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3a919c (    0x50) __NFStoreDemoMode_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3a91ec (    0x5c) -[NFUnfairLock initWithOptions:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3a9248 (     0x8) -[NFUnfairLock init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3a9250 (    0x60) -[NFUnfairLock performWithLockSync:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3a92b0 (    0x10) -[NFUnfairLock lock] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3a92c0 (     0x8) -[NFUnfairLock unlock] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3a92c8 (     0x8) -[NFUnfairLock assertLocked] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3a92d0 (     0x8) -[NFUnfairLock assertNotLocked] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3a92d8 (   0x124) -[NFStateMachineTransition initWithStateMachine:event:fromState:toState:context:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3a93fc (    0xe8) -[NFStateMachineTransition description] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3a94e4 (     0x8) -[NFStateMachineTransition stateMachine] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3a94ec (     0xc) -[NFStateMachineTransition setStateMachine:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3a94f8 (     0x8) -[NFStateMachineTransition event] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3a9500 (     0xc) -[NFStateMachineTransition setEvent:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3a950c (     0x8) -[NFStateMachineTransition fromState] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3a9514 (     0xc) -[NFStateMachineTransition setFromState:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3a9520 (     0x8) -[NFStateMachineTransition toState] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3a9528 (     0xc) -[NFStateMachineTransition setToState:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3a9534 (     0x8) -[NFStateMachineTransition context] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3a953c (     0xc) -[NFStateMachineTransition setContext:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3a9548 (    0x68) -[NFStateMachineTransition .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3a95b0 (    0xdc) -[NFPendingPromise init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3a968c (    0x84) __24-[NFPendingPromise init]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3a9710 (     0x8) __copy_helper_block_e8_32s [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3a9718 (     0x8) __destroy_helper_block_e8_32s [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3a9720 (     0x8) -[NFPendingPromise promise] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3a9728 (     0xc) -[NFPendingPromise setPromise:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3a9734 (     0x8) -[NFPendingPromise resolve] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3a973c (     0x8) -[NFPendingPromise setResolve:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3a9744 (     0x8) -[NFPendingPromise reject] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3a974c (     0x8) -[NFPendingPromise setReject:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3a9754 (    0x50) -[NFPendingPromise .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3a97a4 (    0x84) -[NFEventManager init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3a9828 (    0x9c) -[NFEventManager fireEvent:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3a98c4 (   0x150) -[NFEventManager triggerOnceWhenAllEventsHaveOccurred:block:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3a9a14 (   0x150) -[NFEventManager triggerAlwaysWhenAllEventsHaveOccurred:block:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3a9b64 (   0x150) -[NFEventManager triggerOnceWhenAnyEventHasOccurred:block:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3a9cb4 (    0xbc) -[NFEventManager triggerOnEvent:block:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3a9d70 (   0x154) -[NFEventManager triggerOnAnyEvent:block:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3a9ec4 (   0x160) -[NFEventManager attemptTriggersForCurrentEvent:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3aa024 (   0x208) -[NFEventManager handleOnceTrigger:event:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3aa22c (   0x1c4) -[NFEventManager handleAlwaysTrigger:event:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3aa3f0 (     0x8) -[NFEventManager events] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3aa3f8 (     0x8) -[NFEventManager triggers] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3aa400 (    0x44) -[NFEventManager .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3aa444 (    0xf0) -[NFEventTrigger initWithKey:fireOnce:fireOnAny:events:block:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3aa534 (     0x8) -[NFEventTrigger key] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3aa53c (     0x8) -[NFEventTrigger events] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3aa544 (     0x8) -[NFEventTrigger block] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3aa54c (     0x8) -[NFEventTrigger fireOnce] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3aa554 (     0x8) -[NFEventTrigger fireOnAny] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3aa55c (    0x50) -[NFEventTrigger .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3aa5ac (    0x14) OUTLINED_FUNCTION_0 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3aa5c0 (    0x14) OUTLINED_FUNCTION_1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3aa5d4 (    0x1c) OUTLINED_FUNCTION_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3aa5f0 (    0x10) OUTLINED_FUNCTION_3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3aa600 (    0x10) OUTLINED_FUNCTION_4 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3aa610 (   0x170) -[NFArchiver archiveDirectory:toLocation:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3aa780 (    0xa4) NFArchiverCopyFileFinishedHandler [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3aa824 (   0x170) -[NFArchiver unarchive:toLocation:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3aa994 (    0x78) +[NSError(NFStateMachine) fc_createStateMachineErrorForCode:userInfo:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3aaa0c (    0x70) -[NSError(NFStateMachine) fc_isStateMachineError:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3aaa7c (   0x138) -[NFStateMachine initWithState:withOwner:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3aabb4 (    0x9c) -[NFStateMachine description] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3aac50 (    0xec) -[NFStateMachine debugDescription] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3aad3c (    0x70) -[NFStateMachine activate] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3aadac (    0x5c) -[NFStateMachine activateIfNeeded] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3aae08 (    0x74) -[NFStateMachine deactivate] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3aae7c (    0x5c) -[NFStateMachine deactivateIfNeeded] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3aaed8 (   0x10c) -[NFStateMachine addState:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3aafe4 (   0x10c) -[NFStateMachine addEvent:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3ab0f0 (   0x77c) -[NFStateMachine fireEventWithName:withContext:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3ab86c (    0x78) __48-[NFStateMachine fireEventWithName:withContext:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3ab8e4 (    0x78) __48-[NFStateMachine fireEventWithName:withContext:]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3ab95c (    0x10) __48-[NFStateMachine fireEventWithName:withContext:]_block_invoke_3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3ab96c (    0x44) __copy_helper_block_e8_32s40s48s [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3ab9b0 (    0x44) __destroy_helper_block_e8_32s40s48s [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3ab9f4 (    0x10) __48-[NFStateMachine fireEventWithName:withContext:]_block_invoke.47 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3aba04 (    0x30) __48-[NFStateMachine fireEventWithName:withContext:]_block_invoke.51 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3aba34 (    0x48) __48-[NFStateMachine fireEventWithName:withContext:]_block_invoke.58 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3aba7c (    0x10) __48-[NFStateMachine fireEventWithName:withContext:]_block_invoke.60 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3aba8c (     0x8) -[NFStateMachine status] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3aba94 (     0x8) -[NFStateMachine setStatus:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3aba9c (     0x8) -[NFStateMachine state] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3abaa4 (     0xc) -[NFStateMachine setState:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3abab0 (    0x2c) -[NFStateMachine owner] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3abadc (     0xc) -[NFStateMachine setOwner:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3abae8 (     0x8) -[NFStateMachine states] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3abaf0 (     0xc) -[NFStateMachine setStates:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3abafc (     0x8) -[NFStateMachine events] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3abb04 (     0xc) -[NFStateMachine setEvents:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3abb10 (     0x8) -[NFStateMachine lock] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3abb18 (     0xc) -[NFStateMachine setLock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3abb24 (     0x8) -[NFStateMachine statusToken] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3abb2c (     0x8) -[NFStateMachine setStatusToken:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3abb34 (    0x64) -[NFStateMachine .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3abb98 (    0x14) OUTLINED_FUNCTION_0 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3abbac (    0x14) OUTLINED_FUNCTION_1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3abbc0 (    0x1c) OUTLINED_FUNCTION_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3abbdc (    0x10) OUTLINED_FUNCTION_3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3abbec (    0x10) OUTLINED_FUNCTION_4 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3abbfc (    0xa8) -[NSUserDefaults(NFAdditions) nf_migrateObjectForKey:toKey:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3abca4 (    0xa0) -[NFLazy initWithConstructor:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3abd44 (    0xb8) -[NFLazy value] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3abdfc (    0x74) -[NFLazy reset] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3abe70 (     0x8) -[NFLazy constructor] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3abe78 (     0x8) -[NFLazy lock] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3abe80 (    0x50) -[NFLazy .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3abed0 (    0x90) +[NSKeyedUnarchiver(FRAdditions) nf_securelyUnarchiveObjectOfClass:withData:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3abf60 (    0x84) +[NSKeyedUnarchiver(FRAdditions) nf_securelyUnarchiveObjectOfClass:withFile:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3abfe4 (    0x10) -[NSKeyedUnarchiver(FRAdditions) nf_securelyUnarchiveObjectOfClass:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3abff4 (    0xb0) +[NSKeyedUnarchiver(FRAdditions) nf_securelyUnarchiveObjectOfClasses:withData:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3ac0a4 (    0x9c) +[NSKeyedUnarchiver(FRAdditions) nf_securelyUnarchiveObjectOfClasses:withFile:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3ac140 (    0x54) zalgo [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3ac194 (    0x6c) __zalgo_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3ac200 (    0x54) zalgoIfMain [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3ac254 (    0x6c) __zalgoIfMain_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3ac2c0 (   0x130) -[NFPromise init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3ac3f0 (   0x144) -[NFPromise initWithResolver:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3ac534 (    0x64) __30-[NFPromise initWithResolver:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3ac598 (    0x64) __30-[NFPromise initWithResolver:]_block_invoke.16 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3ac5fc (    0x88) -[NFPromise initWithValue:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3ac684 (    0x2c) +[NFPromise new] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3ac6b0 (    0x88) -[NFPromise initWithError:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3ac738 (    0x4c) -[NFPromise dealloc] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3ac784 (    0x10) -[NFPromise then:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3ac794 (    0x10) -[NFPromise error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3ac7a4 (    0x10) -[NFPromise always:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3ac7b4 (   0x104) -[NFPromise thenOn:then:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3ac8b8 (   0x12c) __25-[NFPromise thenOn:then:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3ac9e4 (   0x214) __25-[NFPromise thenOn:then:]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3acbf8 (    0x54) __25-[NFPromise thenOn:then:]_block_invoke_3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3acc4c (    0x60) __copy_helper_block_e8_32s40s48b56b [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3accac (    0x4c) __destroy_helper_block_e8_32s40s48s56s [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3accf8 (    0x68) __copy_helper_block_e8_32s40b48b56b [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3acd60 (    0x50) __copy_helper_block_e8_32s40s48b [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3acdb0 (    0x88) -[NFPromise errorOn:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3ace38 (     0x4) __27-[NFPromise errorOn:error:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3ace3c (    0x80) -[NFPromise alwaysOn:always:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3acebc (    0x7c) -[NFPromise then] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3acf38 (     0xc) __17-[NFPromise then]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3acf44 (    0x7c) -[NFPromise thenOn] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3acfc0 (    0x10) __19-[NFPromise thenOn]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3acfd0 (    0x7c) -[NFPromise pipe] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3ad04c (    0xc0) __17-[NFPromise pipe]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3ad10c (     0x8) __17-[NFPromise pipe]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3ad114 (    0x7c) -[NFPromise pipeOn] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3ad190 (    0xd0) __19-[NFPromise pipeOn]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3ad260 (     0x8) __19-[NFPromise pipeOn]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3ad268 (    0x7c) -[NFPromise error] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3ad2e4 (    0x84) __18-[NFPromise error]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3ad368 (    0x7c) -[NFPromise errorOn] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3ad3e4 (    0x10) __20-[NFPromise errorOn]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3ad3f4 (    0x7c) -[NFPromise resolve] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3ad470 (    0xc0) __20-[NFPromise resolve]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3ad530 (    0xe4) __20-[NFPromise resolve]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3ad614 (    0x1c) __20-[NFPromise resolve]_block_invoke_3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3ad630 (    0x48) __copy_helper_block_e8_32s40b [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3ad678 (    0x3c) __destroy_helper_block_e8_32s40s [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3ad6b4 (    0x10) __copy_helper_block_e8_32b [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3ad6c4 (    0x7c) -[NFPromise resolveOn] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3ad740 (    0xd0) __22-[NFPromise resolveOn]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3ad810 (    0xe4) __22-[NFPromise resolveOn]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3ad8f4 (    0x1c) __22-[NFPromise resolveOn]_block_invoke_3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3ad910 (    0x7c) -[NFPromise delay] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3ad98c (    0x88) __18-[NFPromise delay]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3ada14 (    0x18) __18-[NFPromise delay]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3ada2c (    0x7c) -[NFPromise delayOn] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3adaa8 (    0xd4) __20-[NFPromise delayOn]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3adb7c (    0x1c) __20-[NFPromise delayOn]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3adb98 (     0x8) -[NFPromise seal] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3adba0 (     0xc) -[NFPromise setSeal:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3adbac (     0xc) -[NFPromise .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3adbb8 (    0x10) +[NFPromise(Firstly) firstly:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3adbc8 (    0x30) -[NFVoid copyWithZone:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3adbf8 (    0x68) +[NFPromise(Void) asVoid] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3adc60 (    0x60) +[NFPromise(Void) asVoid:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3adcc0 (    0x18) +[NFPromise(Delay) asDelay:withValue:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3adcd8 (    0x18) +[NFPromise(Delay) asDelay:withError:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3adcf0 (   0x10c) +[NFPromise(Delay) asDelay:onQueue:withValue:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3addfc (    0xe4) __46+[NFPromise(Delay) asDelay:onQueue:withValue:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3adee0 (    0x14) __46+[NFPromise(Delay) asDelay:onQueue:withValue:]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3adef4 (    0x3c) __copy_helper_block_e8_32s40s [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3adf30 (   0x10c) +[NFPromise(Delay) asDelay:onQueue:withError:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3ae03c (    0xe4) __46+[NFPromise(Delay) asDelay:onQueue:withError:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3ae120 (    0x14) __46+[NFPromise(Delay) asDelay:onQueue:withError:]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3ae134 (    0x90) +[NSObject(NFAdditions) nf_object:isEqualToObject:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3ae1c4 (    0x8c) +[NSObject(NFAdditions) nf_compareObject:toObject:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3ae250 (   0x100) -[NSString(NFAdditions) nf_sha1] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3ae350 (    0xd4) -[NSString(NFAdditions) nf_stringByReversingString] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3ae424 (    0xcc) NFPromiseInvokeOnQueue [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3ae4f0 (    0x88) -[NFPromiseSeal init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3ae578 (    0x84) -[NFPromiseSeal initWithValue:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3ae5fc (    0x84) -[NFPromiseSeal initWithError:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3ae680 (    0xd4) -[NFPromiseSeal dealloc] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3ae754 (     0xc) -[NFPromiseSeal resolve:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3ae760 (    0x10) -[NFPromiseSeal reject:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3ae770 (   0x108) -[NFPromiseSeal resolveOn:reject:resolve:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3ae878 (   0x164) __42-[NFPromiseSeal resolveOn:reject:resolve:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3ae9dc (    0x14) __42-[NFPromiseSeal resolveOn:reject:resolve:]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3ae9f0 (    0x14) __42-[NFPromiseSeal resolveOn:reject:resolve:]_block_invoke.11 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3aea04 (    0x58) __copy_helper_block_e8_32s40b48b [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3aea5c (    0xd0) -[NFPromiseSeal alwaysOn:always:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3aeb2c (    0x88) __33-[NFPromiseSeal alwaysOn:always:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3aebb4 (    0x10) __33-[NFPromiseSeal alwaysOn:always:]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3aebc4 (   0x144) -[NFPromiseSeal registerHandler:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3aed08 (   0x24c) -[NFPromiseSeal seal:error:resolution:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3aef54 (     0x8) -[NFPromiseSeal value] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3aef5c (     0xc) -[NFPromiseSeal setValue:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3aef68 (     0x8) -[NFPromiseSeal error] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3aef70 (     0xc) -[NFPromiseSeal setError:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3aef7c (     0x8) -[NFPromiseSeal state] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3aef84 (     0x8) -[NFPromiseSeal setState:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3aef8c (     0x8) -[NFPromiseSeal handlers] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3aef94 (     0xc) -[NFPromiseSeal setHandlers:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3aefa0 (     0x8) -[NFPromiseSeal lock] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3aefa8 (    0x5c) -[NFPromiseSeal .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3af004 (    0x14) OUTLINED_FUNCTION_0 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3af018 (    0x14) OUTLINED_FUNCTION_1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3af02c (    0x1c) OUTLINED_FUNCTION_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3af048 (    0x10) OUTLINED_FUNCTION_3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3af058 (    0x10) OUTLINED_FUNCTION_4 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3af068 (    0x70) NFLockSync [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3af0d8 (    0x54) +[NFReachability sharedInstance] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3af12c (    0x44) __32+[NFReachability sharedInstance]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3af170 (   0x140) -[NFReachability init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3af2b0 (    0x5c) __22-[NFReachability init]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3af30c (     0xc) __copy_helper_block_e8_32w [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3af318 (     0x8) __destroy_helper_block_e8_32w [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3af320 (    0x4c) -[NFReachability dealloc] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3af36c (    0xb0) -[NFReachability _updateCurrentNetworkPath:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3af41c (    0x58) __44-[NFReachability _updateCurrentNetworkPath:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3af474 (    0xc8) -[NFReachability _statusFromNetworkPath:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3af53c (     0x8) -[NFReachability currentReachabilityStatus] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3af544 (     0x8) -[NFReachability setCurrentReachabilityStatus:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3af54c (     0x8) -[NFReachability observationQueue] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3af554 (     0xc) -[NFReachability setObservationQueue:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3af560 (     0x8) -[NFReachability networkPathMonitor] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3af568 (     0xc) -[NFReachability setNetworkPathMonitor:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3af574 (     0x8) -[NFReachability currentNetworkPath] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3af57c (     0xc) -[NFReachability setCurrentNetworkPath:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3af588 (    0x50) -[NFReachability .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3af5d8 (     0x8) -[NFMutexLock init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3af5e0 (    0xa0) -[NFMutexLock initWithOptions:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3af680 (    0x4c) -[NFMutexLock dealloc] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3af6cc (    0x64) -[NFMutexLock performWithLockSync:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3af730 (     0x8) -[NFMutexLock lock] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3af738 (     0x8) -[NFMutexLock unlock] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3af740 (    0xd4) -[NFStateMachineEvent initWithName:transitionFromStates:toState:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3af814 (    0x40) -[NFStateMachineEvent hash] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3af854 (    0xd8) -[NFStateMachineEvent isEqual:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3af92c (    0xc8) -[NFStateMachineEvent description] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3af9f4 (    0x28) -[NFStateMachineEvent onFire:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3afa1c (    0xdc) -[NFStateMachineEvent fired:withOwner:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3afaf8 (     0x8) -[NFStateMachineEvent name] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3afb00 (     0x8) -[NFStateMachineEvent setName:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3afb08 (     0x8) -[NFStateMachineEvent states] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3afb10 (     0xc) -[NFStateMachineEvent setStates:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3afb1c (     0x8) -[NFStateMachineEvent destinationState] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3afb24 (     0xc) -[NFStateMachineEvent setDestinationState:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3afb30 (     0x8) -[NFStateMachineEvent fireBlock] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3afb38 (     0x8) -[NFStateMachineEvent setFireBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3afb40 (    0x5c) -[NFStateMachineEvent .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3afb9c (    0x74) -[NFPromise(Timeout) timeoutAfter:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3afc10 (    0xe4) -[NFPromise(Timeout) timeoutAfter:on:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3afcf4 (   0x378) __38-[NFPromise(Timeout) timeoutAfter:on:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3b006c (    0xa0) __38-[NFPromise(Timeout) timeoutAfter:on:]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3b010c (    0x50) __38-[NFPromise(Timeout) timeoutAfter:on:]_block_invoke_3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3b015c (    0x50) __copy_helper_block_e8_32b40r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3b01ac (    0x40) __destroy_helper_block_e8_32s40r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3b01ec (    0x48) __copy_helper_block_e8_32s40r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3b0234 (    0xdc) __38-[NFPromise(Timeout) timeoutAfter:on:]_block_invoke.4 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3b0310 (    0x14) __38-[NFPromise(Timeout) timeoutAfter:on:]_block_invoke_2.5 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3b0324 (    0x50) __copy_helper_block_e8_32b40b [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3b0374 (    0xcc) __38-[NFPromise(Timeout) timeoutAfter:on:]_block_invoke.8 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3b0440 (    0x14) __38-[NFPromise(Timeout) timeoutAfter:on:]_block_invoke_2.9 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3b0454 (    0x90) __38-[NFPromise(Timeout) timeoutAfter:on:]_block_invoke.13 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3b04e4 (    0x7c) __38-[NFPromise(Timeout) timeoutAfter:on:]_block_invoke_2.14 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3b0560 (    0x7c) -[NFStateMachineState initWithName:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3b05dc (    0x40) -[NFStateMachineState hash] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3b061c (    0xd8) -[NFStateMachineState isEqual:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3b06f4 (    0x84) -[NFStateMachineState description] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3b0778 (    0x28) -[NFStateMachineState onCanTry:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3b07a0 (    0x28) -[NFStateMachineState onWillExit:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3b07c8 (    0x28) -[NFStateMachineState onDidExit:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3b07f0 (    0x28) -[NFStateMachineState onWillEnter:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3b0818 (    0x28) -[NFStateMachineState onDidEnter:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3b0840 (     0x8) -[NFStateMachineState name] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3b0848 (     0x8) -[NFStateMachineState setName:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3b0850 (     0x8) -[NFStateMachineState canTryBlock] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3b0858 (     0x8) -[NFStateMachineState setCanTryBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3b0860 (     0x8) -[NFStateMachineState willExitBlock] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3b0868 (     0x8) -[NFStateMachineState setWillExitBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3b0870 (     0x8) -[NFStateMachineState willEnterBlock] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3b0878 (     0x8) -[NFStateMachineState setWillEnterBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3b0880 (     0x8) -[NFStateMachineState didExitBlock] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3b0888 (     0x8) -[NFStateMachineState setDidExitBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3b0890 (     0x8) -[NFStateMachineState didEnterBlock] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3b0898 (     0x8) -[NFStateMachineState setDidEnterBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3b08a0 (    0x74) -[NFStateMachineState .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3b0914 (    0xb0) -[NFStateMachineState(Private) canTry:withOwner:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3b09c4 (    0xac) -[NFStateMachineState(Private) willExit:withOwner:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3b0a70 (    0xac) -[NFStateMachineState(Private) willEnter:withOwner:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3b0b1c (    0xdc) -[NFStateMachineState(Private) didExit:withOwner:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3b0bf8 (    0xdc) -[NFStateMachineState(Private) didEnter:withOwner:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3b0cd4 (    0xc4) -[NFMultiDelegate initWithDelegate:delegateProtocol:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3b0d98 (     0x4) -[NFMultiDelegate delegate] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3b0d9c (    0x6c) -[NFMultiDelegate addDelegate:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3b0e08 (    0x6c) -[NFMultiDelegate removeDelegate:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3b0e74 (    0x70) -[NFMultiDelegate replaceDelegate:withDelegate:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3b0ee4 (    0x94) -[NFMultiDelegate conformsToProtocol:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3b0f78 (   0x144) -[NFMultiDelegate respondsToSelector:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3b10bc (   0x16c) -[NFMultiDelegate methodSignatureForSelector:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3b1228 (   0x13c) -[NFMultiDelegate forwardInvocation:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3b1364 (     0x8) -[NFMultiDelegate children] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3b136c (     0x8) -[NFMultiDelegate delegateProtocol] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3b1374 (    0x44) -[NFMultiDelegate .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3b13b8 (    0x34) _UIValueCGRectValue [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3b13ec (    0xcc) _getNSValueBytes [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3b14b8 (    0x54) +[NSValue(NFAdditions) nf_valueWithCGRect:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3b150c (    0x34) -[NSValue(NFAdditions) nf_CGRectValue] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3b1540 (     0x8) NFDeviceIsA7 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3b1548 (     0x8) NFDeviceIsA8 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3b1550 (    0x54) NFDevicePlatform [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3b15a4 (    0x9c) __NFDevicePlatform_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3b1640 (     0xc) NFGeneralDeviceString [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3b164c (    0x34) NFDeviceOSVersion [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3b1680 (    0x34) NFDeviceModelString [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3b16b4 (    0x44) NFDeviceHasExtendedColorDisplay [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3b16f8 (    0x10) __NFDeviceHasExtendedColorDisplay_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3b1708 (    0xb0) -[NFEventManager fireEvent:].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3b17b8 (    0xb0) -[NFEventManager triggerOnceWhenAllEventsHaveOccurred:block:].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3b1868 (    0xb0) -[NFEventManager triggerAlwaysWhenAllEventsHaveOccurred:block:].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3b1918 (    0xb0) -[NFEventManager triggerOnceWhenAnyEventHasOccurred:block:].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3b19c8 (    0xb0) -[NFEventManager triggerOnEvent:block:].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3b1a78 (    0xb0) -[NFEventManager triggerOnAnyEvent:block:].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3b1b28 (    0xb0) -[NFStateMachine addState:].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3b1bd8 (    0xb0) -[NFStateMachine addEvent:].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3b1c88 (    0xb0) __48-[NFStateMachine fireEventWithName:withContext:]_block_invoke.51.cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3b1d38 (    0xb0) -[NFPromiseSeal dealloc].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3b1de8 (    0xb0) -[NFPromiseSeal dealloc].cold.2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001ca3b1e98 (    0xb0) -[NFPromiseSeal seal:error:resolution:].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
            0x00000001ca3b1f48 (   0x4d0) __TEXT __auth_stubs
                0x00000001ca3b1f48 (    0x10) DYLD-STUB$$BOMCopierCopyWithOptions [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001ca3b1f58 (    0x10) DYLD-STUB$$BOMCopierFree [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001ca3b1f68 (    0x10) DYLD-STUB$$BOMCopierNew [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001ca3b1f78 (    0x10) DYLD-STUB$$BOMCopierSetCopyFileFinishedHandler [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001ca3b1f88 (    0x10) DYLD-STUB$$BOMCopierSetUserData [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001ca3b1f98 (    0x10) DYLD-STUB$$BOMCopierUserData [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001ca3b1fa8 (    0x10) DYLD-STUB$$CC_SHA1 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001ca3b1fb8 (    0x10) DYLD-STUB$$CFPreferencesGetAppBooleanValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001ca3b1fc8 (    0x10) DYLD-STUB$$MGCopyAnswer [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001ca3b1fd8 (    0x10) DYLD-STUB$$NSGetSizeAndAlignment [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001ca3b1fe8 (    0x10) DYLD-STUB$$_Block_object_assign [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001ca3b1ff8 (    0x10) DYLD-STUB$$_Block_object_dispose [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001ca3b2008 (    0x10) DYLD-STUB$$_Unwind_Resume [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001ca3b2018 (    0x10) DYLD-STUB$$__stack_chk_fail [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001ca3b2028 (    0x10) DYLD-STUB$$_os_log_error_impl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001ca3b2038 (    0x10) DYLD-STUB$$dispatch_after [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001ca3b2048 (    0x10) DYLD-STUB$$dispatch_async [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001ca3b2058 (    0x10) DYLD-STUB$$dispatch_get_global_queue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001ca3b2068 (    0x10) DYLD-STUB$$dispatch_once [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001ca3b2078 (    0x10) DYLD-STUB$$dispatch_queue_attr_make_with_autorelease_frequency [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001ca3b2088 (    0x10) DYLD-STUB$$dispatch_queue_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001ca3b2098 (    0x10) DYLD-STUB$$dispatch_time [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001ca3b20a8 (    0x10) DYLD-STUB$$free [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001ca3b20b8 (    0x10) DYLD-STUB$$malloc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001ca3b20c8 (    0x10) DYLD-STUB$$nw_path_get_status [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001ca3b20d8 (    0x10) DYLD-STUB$$nw_path_is_constrained [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001ca3b20e8 (    0x10) DYLD-STUB$$nw_path_is_equal [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001ca3b20f8 (    0x10) DYLD-STUB$$nw_path_is_expensive [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001ca3b2108 (    0x10) DYLD-STUB$$nw_path_monitor_cancel [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001ca3b2118 (    0x10) DYLD-STUB$$nw_path_monitor_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001ca3b2128 (    0x10) DYLD-STUB$$nw_path_monitor_set_queue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001ca3b2138 (    0x10) DYLD-STUB$$nw_path_monitor_set_update_handler [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001ca3b2148 (    0x10) DYLD-STUB$$nw_path_monitor_start [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001ca3b2158 (    0x10) DYLD-STUB$$nw_path_uses_interface_type [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001ca3b2168 (    0x10) DYLD-STUB$$objc_alloc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001ca3b2178 (    0x10) DYLD-STUB$$objc_alloc_init [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001ca3b2188 (    0x10) DYLD-STUB$$objc_autorelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001ca3b2198 (    0x10) DYLD-STUB$$objc_autoreleaseReturnValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001ca3b21a8 (    0x10) DYLD-STUB$$objc_begin_catch [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001ca3b21b8 (    0x10) DYLD-STUB$$objc_copyWeak [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001ca3b21c8 (    0x10) DYLD-STUB$$objc_destroyWeak [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001ca3b21d8 (    0x10) DYLD-STUB$$objc_end_catch [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001ca3b21e8 (    0x10) DYLD-STUB$$objc_enumerationMutation [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001ca3b21f8 (    0x10) DYLD-STUB$$objc_exception_throw [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001ca3b2208 (    0x10) DYLD-STUB$$objc_initWeak [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001ca3b2218 (    0x10) DYLD-STUB$$objc_loadWeakRetained [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001ca3b2228 (    0x10) DYLD-STUB$$objc_msgSendSuper2 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001ca3b2238 (    0x10) DYLD-STUB$$objc_opt_class [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001ca3b2248 (    0x10) DYLD-STUB$$objc_opt_isKindOfClass [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001ca3b2258 (    0x10) DYLD-STUB$$objc_opt_new [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001ca3b2268 (    0x10) DYLD-STUB$$objc_opt_respondsToSelector [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001ca3b2278 (    0x10) DYLD-STUB$$objc_release [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001ca3b2288 (    0x10) DYLD-STUB$$objc_retain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001ca3b2298 (    0x10) DYLD-STUB$$objc_retainAutorelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001ca3b22a8 (    0x10) DYLD-STUB$$objc_retainAutoreleaseReturnValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001ca3b22b8 (    0x10) DYLD-STUB$$objc_retainAutoreleasedReturnValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001ca3b22c8 (    0x10) DYLD-STUB$$objc_retainBlock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001ca3b22d8 (    0x10) DYLD-STUB$$objc_setProperty_nonatomic_copy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001ca3b22e8 (    0x10) DYLD-STUB$$objc_storeStrong [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001ca3b22f8 (    0x10) DYLD-STUB$$objc_storeWeak [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001ca3b2308 (    0x10) DYLD-STUB$$objc_terminate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001ca3b2318 (    0x10) DYLD-STUB$$objc_unsafeClaimAutoreleasedReturnValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001ca3b2328 (    0x10) DYLD-STUB$$os_log_type_enabled [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001ca3b2338 (    0x10) DYLD-STUB$$os_unfair_lock_assert_not_owner [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001ca3b2348 (    0x10) DYLD-STUB$$os_unfair_lock_assert_owner [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001ca3b2358 (    0x10) DYLD-STUB$$os_unfair_lock_lock_with_options [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001ca3b2368 (    0x10) DYLD-STUB$$os_unfair_lock_unlock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001ca3b2378 (    0x10) DYLD-STUB$$os_variant_has_internal_content [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001ca3b2388 (    0x10) DYLD-STUB$$pthread_mutex_destroy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001ca3b2398 (    0x10) DYLD-STUB$$pthread_mutex_init [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001ca3b23a8 (    0x10) DYLD-STUB$$pthread_mutex_lock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001ca3b23b8 (    0x10) DYLD-STUB$$pthread_mutex_unlock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001ca3b23c8 (    0x10) DYLD-STUB$$pthread_mutexattr_init [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001ca3b23d8 (    0x10) DYLD-STUB$$pthread_mutexattr_settype [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001ca3b23e8 (    0x10) DYLD-STUB$$qos_class_self [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001ca3b23f8 (    0x10) DYLD-STUB$$strlen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001ca3b2408 (    0x10) DYLD-STUB$$sysctlbyname [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
            0x00000001ca3b2418 (   0xb94) __TEXT __objc_methlist
                0x00000001ca3b2418 (    0x60) _OBJC_$_INSTANCE_METHODS_NFUnfairLock [NameNList, MangledNameNList, NList] 
                0x00000001ca3b2478 (    0xa8) _OBJC_$_INSTANCE_METHODS_NFStateMachineTransition [NameNList, MangledNameNList, NList] 
                0x00000001ca3b2520 (    0x68) _OBJC_$_INSTANCE_METHODS_NFPendingPromise [NameNList, MangledNameNList, NList] 
                0x00000001ca3b2588 (    0xa8) _OBJC_$_INSTANCE_METHODS_NFEventManager [NameNList, MangledNameNList, NList] 
                0x00000001ca3b2630 (    0x60) _OBJC_$_INSTANCE_METHODS_NFEventTrigger [NameNList, MangledNameNList, NList] 
                0x00000001ca3b2690 (    0x20) _OBJC_$_INSTANCE_METHODS_NFArchiver [NameNList, MangledNameNList, NList] 
                0x00000001ca3b26b0 (    0x18) _OBJC_$_CLASS_METHODS_NSError(NFStateMachine) [NameNList, MangledNameNList, NList] 
                0x00000001ca3b26c8 (    0x18) _OBJC_$_INSTANCE_METHODS_NSError(NFStateMachine) [NameNList, MangledNameNList, NList] 
                0x00000001ca3b26e0 (   0x138) _OBJC_$_INSTANCE_METHODS_NFStateMachine [NameNList, MangledNameNList, NList] 
                0x00000001ca3b2818 (    0x18) _OBJC_$_INSTANCE_METHODS_NSUserDefaults(NFAdditions) [NameNList, MangledNameNList, NList] 
                0x00000001ca3b2830 (    0x50) _OBJC_$_INSTANCE_METHODS_NFLazy [NameNList, MangledNameNList, NList] 
                0x00000001ca3b2880 (    0x38) _OBJC_$_CLASS_METHODS_NSKeyedUnarchiver(FRAdditions) [NameNList, MangledNameNList, NList] 
                0x00000001ca3b28b8 (    0x18) _OBJC_$_INSTANCE_METHODS_NSKeyedUnarchiver(FRAdditions) [NameNList, MangledNameNList, NList] 
                0x00000001ca3b28d0 (    0x68) _OBJC_$_CLASS_METHODS_NFPromise(Firstly|Void|Delay|Timeout) [NameNList, MangledNameNList, NList] 
                0x00000001ca3b2938 (   0x140) _OBJC_$_INSTANCE_METHODS_NFPromise(Firstly|Void|Delay|Timeout) [NameNList, MangledNameNList, NList] 
                0x00000001ca3b2a78 (    0x18) _OBJC_$_INSTANCE_METHODS_NFVoid [NameNList, MangledNameNList, NList] 
                0x00000001ca3b2a90 (    0x20) _OBJC_$_CLASS_METHODS_NSObject(NFAdditions) [NameNList, MangledNameNList, NList] 
                0x00000001ca3b2ab0 (    0x20) _OBJC_$_INSTANCE_METHODS_NSString(NFAdditions) [NameNList, MangledNameNList, NList] 
                0x00000001ca3b2ad0 (    0xf8) _OBJC_$_INSTANCE_METHODS_NFPromiseSeal [NameNList, MangledNameNList, NList] 
                0x00000001ca3b2bc8 (    0x18) _OBJC_$_CLASS_METHODS_NFReachability [NameNList, MangledNameNList, NList] 
                0x00000001ca3b2be0 (    0xa8) _OBJC_$_INSTANCE_METHODS_NFReachability [NameNList, MangledNameNList, NList] 
                0x00000001ca3b2c88 (    0x50) _OBJC_$_INSTANCE_METHODS_NFMutexLock [NameNList, MangledNameNList, NList] 
                0x00000001ca3b2cd8 (    0xc0) _OBJC_$_INSTANCE_METHODS_NFStateMachineEvent [NameNList, MangledNameNList, NList] 
                0x00000001ca3b2d98 (   0x150) _OBJC_$_INSTANCE_METHODS_NFStateMachineState(Private) [NameNList, MangledNameNList, NList] 
                0x00000001ca3b2ee8 (    0x98) _OBJC_$_INSTANCE_METHODS_NFMultiDelegate [NameNList, MangledNameNList, NList] 
                0x00000001ca3b2f80 (    0x18) _OBJC_$_CLASS_METHODS_NSValue(NFAdditions) [NameNList, MangledNameNList, NList] 
                0x00000001ca3b2f98 (    0x14) _OBJC_$_INSTANCE_METHODS_NSValue(NFAdditions) [NameNList, MangledNameNList, NList] 
            0x00000001ca3b2fb0 (    0x68) __TEXT __const
                0x00000001ca3b2fb0 (    0x40) NewsFoundationVersionString [EXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b2ff0 (    0x28) NewsFoundationVersionNumber [EXT, NameNList, MangledNameNList, NList] 
            0x00000001ca3b3018 (   0xc0e) __TEXT __cstring
            0x00000001ca3b3c26 (    0x44) __TEXT __oslogstring
            0x00000001ca3b3c6c (    0xb8) __TEXT __gcc_except_tab
                0x00000001ca3b3c6c (    0x5c) GCC_except_table19 [NameNList, MangledNameNList, NList] 
                0x00000001ca3b3cc8 (    0x1c) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x00000001ca3b3ce4 (    0x40) GCC_except_table2 [NameNList, MangledNameNList, NList] 
            0x00000001ca3b3d24 (   0x370) __TEXT __unwind_info
            0x00000001ca3b4094 (   0x161) __TEXT __objc_classname
            0x00000001ca3b41f6 (  0x172e) __TEXT __objc_methname
            0x00000001ca3b5924 (   0x496) __TEXT __objc_methtype
            0x00000001ca3b5dc0 (  0x1240) __TEXT __objc_stubs
                0x00000001ca3b5dc0 (    0x20) objc_msgSend$UUID [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b5de0 (    0x20) objc_msgSend$UUIDString [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b5e00 (    0x20) objc_msgSend$_statusFromNetworkPath: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b5e20 (    0x20) objc_msgSend$_updateCurrentNetworkPath: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b5e40 (    0x20) objc_msgSend$activate [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b5e60 (    0x20) objc_msgSend$addDelegate: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b5e80 (    0x20) objc_msgSend$addObject: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b5ea0 (    0x20) objc_msgSend$allValues [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b5ec0 (    0x20) objc_msgSend$alwaysOn:always: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b5ee0 (    0x20) objc_msgSend$appendFormat: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b5f00 (    0x20) objc_msgSend$appendString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b5f20 (    0x20) objc_msgSend$array [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b5f40 (    0x20) objc_msgSend$asDelay:onQueue:withError: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b5f60 (    0x20) objc_msgSend$asDelay:onQueue:withValue: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b5f80 (    0x20) objc_msgSend$asDelay:withValue: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b5fa0 (    0x20) objc_msgSend$asVoid [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b5fc0 (    0x20) objc_msgSend$asVoid: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b5fe0 (    0x20) objc_msgSend$attemptTriggersForCurrentEvent: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6000 (    0x20) objc_msgSend$block [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6020 (    0x20) objc_msgSend$bytes [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6040 (    0x20) objc_msgSend$canTry:withOwner: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6060 (    0x20) objc_msgSend$canTryBlock [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6080 (    0x20) objc_msgSend$characterAtIndex: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b60a0 (    0x20) objc_msgSend$children [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b60c0 (    0x20) objc_msgSend$code [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b60e0 (    0x20) objc_msgSend$compare: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6100 (    0x20) objc_msgSend$constructor [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6120 (    0x20) objc_msgSend$containsObject: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6140 (    0x20) objc_msgSend$context [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6160 (    0x20) objc_msgSend$copy [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6180 (    0x20) objc_msgSend$count [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b61a0 (    0x20) objc_msgSend$countByEnumeratingWithState:objects:count: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b61c0 (    0x20) objc_msgSend$currentNetworkPath [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b61e0 (    0x20) objc_msgSend$dataUsingEncoding: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6200 (    0x20) objc_msgSend$dataWithContentsOfFile: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6220 (    0x20) objc_msgSend$deactivate [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6240 (    0x20) objc_msgSend$decodeObjectOfClass:forKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6260 (    0x20) objc_msgSend$decodeObjectOfClasses:forKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6280 (    0x20) objc_msgSend$defaultCenter [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b62a0 (    0x20) objc_msgSend$defaultManager [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b62c0 (    0x20) objc_msgSend$delegateProtocol [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b62e0 (    0x20) objc_msgSend$destinationState [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6300 (    0x20) objc_msgSend$dictionaryWithObject:forKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6320 (    0x20) objc_msgSend$dictionaryWithObjects:forKeys:count: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6340 (    0x20) objc_msgSend$didEnter:withOwner: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6360 (    0x20) objc_msgSend$didEnterBlock [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6380 (    0x20) objc_msgSend$didExit:withOwner: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b63a0 (    0x20) objc_msgSend$didExitBlock [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b63c0 (    0x20) objc_msgSend$domain [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b63e0 (    0x20) objc_msgSend$error [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6400 (    0x20) objc_msgSend$errorOn:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6420 (    0x20) objc_msgSend$errorWithDomain:code:userInfo: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6440 (    0x20) objc_msgSend$event [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6460 (    0x20) objc_msgSend$events [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6480 (    0x20) objc_msgSend$exceptionWithName:reason:userInfo: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b64a0 (    0x20) objc_msgSend$fc_createStateMachineErrorForCode:userInfo: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b64c0 (    0x20) objc_msgSend$fileSystemRepresentation [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b64e0 (    0x20) objc_msgSend$fireBlock [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6500 (    0x20) objc_msgSend$fireOnAny [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6520 (    0x20) objc_msgSend$fireOnce [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6540 (    0x20) objc_msgSend$fired:withOwner: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6560 (    0x20) objc_msgSend$firstly: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6580 (    0x20) objc_msgSend$fromState [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b65a0 (    0x20) objc_msgSend$getValue: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b65c0 (    0x20) objc_msgSend$handleAlwaysTrigger:event: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b65e0 (    0x20) objc_msgSend$handleOnceTrigger:event: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6600 (    0x20) objc_msgSend$handlers [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6620 (    0x20) objc_msgSend$hash [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6640 (    0x20) objc_msgSend$hashTableWithOptions: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6660 (    0x20) objc_msgSend$init [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6680 (    0x20) objc_msgSend$initForReadingFromData:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b66a0 (    0x20) objc_msgSend$initWithDomain:code:userInfo: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b66c0 (    0x20) objc_msgSend$initWithError: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b66e0 (    0x20) objc_msgSend$initWithFormat: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6700 (    0x20) objc_msgSend$initWithKey:fireOnce:fireOnAny:events:block: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6720 (    0x20) objc_msgSend$initWithOptions: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6740 (    0x20) objc_msgSend$initWithResolver: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6760 (    0x20) objc_msgSend$initWithStateMachine:event:fromState:toState:context: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6780 (    0x20) objc_msgSend$initWithUTF8String: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b67a0 (    0x20) objc_msgSend$initWithValue: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b67c0 (    0x20) objc_msgSend$invokeWithTarget: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b67e0 (    0x20) objc_msgSend$isEqual: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6800 (    0x20) objc_msgSend$isEqualToString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6820 (    0x20) objc_msgSend$isMainThread [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6840 (    0x20) objc_msgSend$key [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6860 (    0x20) objc_msgSend$length [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6880 (    0x20) objc_msgSend$lock [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b68a0 (    0x20) objc_msgSend$methodSignatureForSelector: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b68c0 (    0x20) objc_msgSend$name [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b68e0 (    0x20) objc_msgSend$nf_securelyUnarchiveObjectOfClass: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6900 (    0x20) objc_msgSend$nf_securelyUnarchiveObjectOfClass:withData: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6920 (    0x20) objc_msgSend$nf_securelyUnarchiveObjectOfClasses:withData: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6940 (    0x20) objc_msgSend$numberWithInteger: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6960 (    0x20) objc_msgSend$numberWithUnsignedInteger: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6980 (    0x20) objc_msgSend$objCType [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b69a0 (    0x20) objc_msgSend$objectForKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b69c0 (    0x20) objc_msgSend$owner [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b69e0 (    0x20) objc_msgSend$performWithLockSync: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6a00 (    0x20) objc_msgSend$postNotificationName:object: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6a20 (    0x20) objc_msgSend$registerHandler: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6a40 (    0x20) objc_msgSend$reject: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6a60 (    0x20) objc_msgSend$removeAllObjects [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6a80 (    0x20) objc_msgSend$removeDelegate: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6aa0 (    0x20) objc_msgSend$removeObject: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6ac0 (    0x20) objc_msgSend$removeObjectForKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6ae0 (    0x20) objc_msgSend$resolve: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6b00 (    0x20) objc_msgSend$resolveOn:reject:resolve: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6b20 (    0x20) objc_msgSend$seal [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6b40 (    0x20) objc_msgSend$seal:error:resolution: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6b60 (    0x20) objc_msgSend$selector [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6b80 (    0x20) objc_msgSend$setCanTryBlock: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6ba0 (    0x20) objc_msgSend$setCurrentNetworkPath: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6bc0 (    0x20) objc_msgSend$setCurrentReachabilityStatus: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6be0 (    0x20) objc_msgSend$setDidEnterBlock: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6c00 (    0x20) objc_msgSend$setDidExitBlock: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6c20 (    0x20) objc_msgSend$setError: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6c40 (    0x20) objc_msgSend$setFireBlock: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6c60 (    0x20) objc_msgSend$setObject:forKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6c80 (    0x20) objc_msgSend$setSeal: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6ca0 (    0x20) objc_msgSend$setState: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6cc0 (    0x20) objc_msgSend$setStatus: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6ce0 (    0x20) objc_msgSend$setStatusToken: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6d00 (    0x20) objc_msgSend$setValue: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6d20 (    0x20) objc_msgSend$setWillEnterBlock: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6d40 (    0x20) objc_msgSend$setWillExitBlock: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6d60 (    0x20) objc_msgSend$setWithObject: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6d80 (    0x20) objc_msgSend$state [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6da0 (    0x20) objc_msgSend$states [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6dc0 (    0x20) objc_msgSend$status [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6de0 (    0x20) objc_msgSend$statusToken [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6e00 (    0x20) objc_msgSend$stringWithCapacity: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6e20 (    0x20) objc_msgSend$stringWithFileSystemRepresentation:length: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6e40 (    0x20) objc_msgSend$stringWithFormat: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6e60 (    0x20) objc_msgSend$then: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6e80 (    0x20) objc_msgSend$thenOn:then: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6ea0 (    0x20) objc_msgSend$timeoutAfter:on: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6ec0 (    0x20) objc_msgSend$toState [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6ee0 (    0x20) objc_msgSend$triggerOnAnyEvent:block: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6f00 (    0x20) objc_msgSend$triggers [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6f20 (    0x20) objc_msgSend$unlock [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6f40 (    0x20) objc_msgSend$value [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6f60 (    0x20) objc_msgSend$valueWithBytes:objCType: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6f80 (    0x20) objc_msgSend$willEnter:withOwner: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6fa0 (    0x20) objc_msgSend$willEnterBlock [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6fc0 (    0x20) objc_msgSend$willExit:withOwner: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001ca3b6fe0 (    0x20) objc_msgSend$willExitBlock [FUNC, PEXT, NameNList, MangledNameNList, NList] 
        0x00000001dfa755a8 (  0x1bf8) __DATA_CONST SEGMENT
            0x00000001dfa755a8 (    0x50) __DATA_CONST __got
            0x00000001dfa755f8 (    0x90) __DATA_CONST __const
                0x00000001dfa755f8 (    0x20) __block_descriptor_32_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dfa75618 (     0x8) NFStateMachineErrorDomain [EXT, NameNList, MangledNameNList, NList] 
                0x00000001dfa75620 (    0x20) __block_descriptor_32_e17_v16?0"NSError"8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dfa75640 (    0x20) __block_descriptor_32_e8_v16?08l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dfa75660 (    0x20) __block_descriptor_40_e8_16?08l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dfa75680 (     0x8) kNFReachabilityChangedNotification [EXT, NameNList, MangledNameNList, NList] 
            0x00000001dfa75688 (    0x80) __DATA_CONST __objc_classlist
            0x00000001dfa75708 (    0x30) __DATA_CONST __objc_catlist
            0x00000001dfa75738 (    0x28) __DATA_CONST __objc_protolist
                0x00000001dfa75738 (     0x8) _OBJC_LABEL_PROTOCOL_$_NSLocking [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dfa75740 (     0x8) _OBJC_LABEL_PROTOCOL_$_NFLocking [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dfa75748 (     0x8) _OBJC_LABEL_PROTOCOL_$_NSObject [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dfa75750 (     0x8) _OBJC_LABEL_PROTOCOL_$_NFArchiver [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dfa75758 (     0x8) _OBJC_LABEL_PROTOCOL_$_NSCopying [PEXT, NameNList, MangledNameNList, NList] 
            0x00000001dfa75760 (     0x8) __DATA_CONST __objc_imageinfo
            0x00000001dfa75768 (  0x1308) __DATA_CONST __objc_const
                0x00000001dfa75768 (    0x38) _OBJC_$_PROTOCOL_INSTANCE_METHODS_NSLocking [NameNList, MangledNameNList, NList] 
                0x00000001dfa757a0 (    0x10) _OBJC_$_PROTOCOL_METHOD_TYPES_NSLocking [NameNList, MangledNameNList, NList] 
                0x00000001dfa757b0 (    0x18) _OBJC_$_PROTOCOL_REFS_NFLocking [NameNList, MangledNameNList, NList] 
                0x00000001dfa757c8 (    0x18) _OBJC_CLASS_PROTOCOLS_$_NFUnfairLock [NameNList, MangledNameNList, NList] 
                0x00000001dfa757e0 (    0x48) _OBJC_METACLASS_RO_$_NFUnfairLock [NameNList, MangledNameNList, NList] 
                0x00000001dfa75828 (    0x48) _OBJC_$_INSTANCE_VARIABLES_NFUnfairLock [NameNList, MangledNameNList, NList] 
                0x00000001dfa75870 (    0x48) _OBJC_METACLASS_RO_$_NFStateMachineTransition [NameNList, MangledNameNList, NList] 
                0x00000001dfa758b8 (    0xa8) _OBJC_$_INSTANCE_VARIABLES_NFStateMachineTransition [NameNList, MangledNameNList, NList] 
                0x00000001dfa75960 (    0x58) _OBJC_$_PROP_LIST_NFStateMachineTransition [NameNList, MangledNameNList, NList] 
                0x00000001dfa759b8 (    0x48) _OBJC_METACLASS_RO_$_NFPendingPromise [NameNList, MangledNameNList, NList] 
                0x00000001dfa75a00 (    0x68) _OBJC_$_INSTANCE_VARIABLES_NFPendingPromise [NameNList, MangledNameNList, NList] 
                0x00000001dfa75a68 (    0x38) _OBJC_$_PROP_LIST_NFPendingPromise [NameNList, MangledNameNList, NList] 
                0x00000001dfa75aa0 (    0x48) _OBJC_METACLASS_RO_$_NFEventManager [NameNList, MangledNameNList, NList] 
                0x00000001dfa75ae8 (    0x48) _OBJC_$_INSTANCE_VARIABLES_NFEventManager [NameNList, MangledNameNList, NList] 
                0x00000001dfa75b30 (    0x28) _OBJC_$_PROP_LIST_NFEventManager [NameNList, MangledNameNList, NList] 
                0x00000001dfa75b58 (    0x48) _OBJC_METACLASS_RO_$_NFEventTrigger [NameNList, MangledNameNList, NList] 
                0x00000001dfa75ba0 (    0xa8) _OBJC_$_INSTANCE_VARIABLES_NFEventTrigger [NameNList, MangledNameNList, NList] 
                0x00000001dfa75c48 (    0x58) _OBJC_$_PROP_LIST_NFEventTrigger [NameNList, MangledNameNList, NList] 
                0x00000001dfa75ca0 (   0x1d0) _OBJC_$_PROTOCOL_INSTANCE_METHODS_NSObject [NameNList, MangledNameNList, NList] 
                0x00000001dfa75e70 (    0x20) _OBJC_$_PROTOCOL_INSTANCE_METHODS_OPT_NSObject [NameNList, MangledNameNList, NList] 
                0x00000001dfa75e90 (    0x48) _OBJC_$_PROP_LIST_NSObject [NameNList, MangledNameNList, NList] 
                0x00000001dfa75ed8 (    0xa0) _OBJC_$_PROTOCOL_METHOD_TYPES_NSObject [NameNList, MangledNameNList, NList] 
                0x00000001dfa75f78 (    0x18) _OBJC_$_PROTOCOL_REFS_NFArchiver [NameNList, MangledNameNList, NList] 
                0x00000001dfa75f90 (    0x38) _OBJC_$_PROTOCOL_INSTANCE_METHODS_NFArchiver [NameNList, MangledNameNList, NList] 
                0x00000001dfa75fc8 (    0x10) _OBJC_$_PROTOCOL_METHOD_TYPES_NFArchiver [NameNList, MangledNameNList, NList] 
                0x00000001dfa75fd8 (    0x18) _OBJC_CLASS_PROTOCOLS_$_NFArchiver [NameNList, MangledNameNList, NList] 
                0x00000001dfa75ff0 (    0x48) _OBJC_METACLASS_RO_$_NFArchiver [NameNList, MangledNameNList, NList] 
                0x00000001dfa76038 (    0x48) _OBJC_$_PROP_LIST_NFArchiver [NameNList, MangledNameNList, NList] 
                0x00000001dfa76080 (    0x48) _OBJC_METACLASS_RO_$_NFStateMachine [NameNList, MangledNameNList, NList] 
                0x00000001dfa760c8 (    0xe8) _OBJC_$_INSTANCE_VARIABLES_NFStateMachine [NameNList, MangledNameNList, NList] 
                0x00000001dfa761b0 (    0x78) _OBJC_$_PROP_LIST_NFStateMachine [NameNList, MangledNameNList, NList] 
                0x00000001dfa76228 (    0x48) _OBJC_METACLASS_RO_$_NFLazy [NameNList, MangledNameNList, NList] 
                0x00000001dfa76270 (    0x68) _OBJC_$_INSTANCE_VARIABLES_NFLazy [NameNList, MangledNameNList, NList] 
                0x00000001dfa762d8 (    0x38) _OBJC_$_PROP_LIST_NFLazy [NameNList, MangledNameNList, NList] 
                0x00000001dfa76310 (    0x28) _OBJC_$_INSTANCE_VARIABLES_NFPromise [NameNList, MangledNameNList, NList] 
                0x00000001dfa76338 (    0xb8) _OBJC_$_PROP_LIST_NFPromise [NameNList, MangledNameNList, NList] 
                0x00000001dfa763f0 (    0x20) _OBJC_$_PROTOCOL_INSTANCE_METHODS_NSCopying [NameNList, MangledNameNList, NList] 
                0x00000001dfa76410 (     0x8) _OBJC_$_PROTOCOL_METHOD_TYPES_NSCopying [NameNList, MangledNameNList, NList] 
                0x00000001dfa76418 (    0x18) _OBJC_CLASS_PROTOCOLS_$_NFVoid [NameNList, MangledNameNList, NList] 
                0x00000001dfa76430 (    0x48) _OBJC_METACLASS_RO_$_NFVoid [NameNList, MangledNameNList, NList] 
                0x00000001dfa76478 (    0x48) _OBJC_METACLASS_RO_$_NFPromiseSeal [NameNList, MangledNameNList, NList] 
                0x00000001dfa764c0 (    0xa8) _OBJC_$_INSTANCE_VARIABLES_NFPromiseSeal [NameNList, MangledNameNList, NList] 
                0x00000001dfa76568 (    0x58) _OBJC_$_PROP_LIST_NFPromiseSeal [NameNList, MangledNameNList, NList] 
                0x00000001dfa765c0 (    0x88) _OBJC_$_INSTANCE_VARIABLES_NFReachability [NameNList, MangledNameNList, NList] 
                0x00000001dfa76648 (    0x48) _OBJC_$_PROP_LIST_NFReachability [NameNList, MangledNameNList, NList] 
                0x00000001dfa76690 (    0x18) _OBJC_CLASS_PROTOCOLS_$_NFMutexLock [NameNList, MangledNameNList, NList] 
                0x00000001dfa766a8 (    0x48) _OBJC_METACLASS_RO_$_NFMutexLock [NameNList, MangledNameNList, NList] 
                0x00000001dfa766f0 (    0x28) _OBJC_$_INSTANCE_VARIABLES_NFMutexLock [NameNList, MangledNameNList, NList] 
                0x00000001dfa76718 (    0x48) _OBJC_METACLASS_RO_$_NFStateMachineEvent [NameNList, MangledNameNList, NList] 
                0x00000001dfa76760 (    0x88) _OBJC_$_INSTANCE_VARIABLES_NFStateMachineEvent [NameNList, MangledNameNList, NList] 
                0x00000001dfa767e8 (    0x48) _OBJC_$_PROP_LIST_NFStateMachineEvent [NameNList, MangledNameNList, NList] 
                0x00000001dfa76830 (    0x48) _OBJC_METACLASS_RO_$_NFStateMachineState [NameNList, MangledNameNList, NList] 
                0x00000001dfa76878 (    0xc8) _OBJC_$_INSTANCE_VARIABLES_NFStateMachineState [NameNList, MangledNameNList, NList] 
                0x00000001dfa76940 (    0x68) _OBJC_$_PROP_LIST_NFStateMachineState [NameNList, MangledNameNList, NList] 
                0x00000001dfa769a8 (    0x48) _OBJC_METACLASS_RO_$_NFMultiDelegate [NameNList, MangledNameNList, NList] 
                0x00000001dfa769f0 (    0x48) _OBJC_$_INSTANCE_VARIABLES_NFMultiDelegate [NameNList, MangledNameNList, NList] 
                0x00000001dfa76a38 (    0x38) _OBJC_$_PROP_LIST_NFMultiDelegate [NameNList, MangledNameNList, NList] 
            0x00000001dfa76a70 (   0x730) __DATA_CONST __objc_selrefs
        0x00000001dfa771a0 (  0x1530) __AUTH_CONST SEGMENT
            0x00000001dfa771a0 (   0x7a0) __AUTH_CONST __const
                0x00000001dfa771a0 (    0x20) __block_literal_global [NameNList, MangledNameNList, NList] 
                0x00000001dfa771c0 (    0x20) __block_literal_global.3 [NameNList, MangledNameNList, NList] 
                0x00000001dfa771e0 (    0x30) __block_descriptor_40_e8_32s_e34_v24?0?<v?>8?<v?"NSError">16l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dfa77210 (    0x30) __block_descriptor_56_e8_32s40s48s_e16_"NFPromise"8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dfa77240 (    0x30) __block_descriptor_56_e8_32s40s48s_e8_16?08l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dfa77270 (    0x20) __block_literal_global.54 [NameNList, MangledNameNList, NList] 
                0x00000001dfa77290 (    0x30) __block_descriptor_40_e8_32s_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dfa772c0 (    0x20) __block_literal_global [NameNList, MangledNameNList, NList] 
                0x00000001dfa772e0 (    0x20) __block_literal_global.4 [NameNList, MangledNameNList, NList] 
                0x00000001dfa77300 (    0x30) __block_descriptor_40_e8_32s_e8_v16?08l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dfa77330 (    0x30) __block_descriptor_40_e8_32s_e17_v16?0"NSError"8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dfa77360 (    0x30) __block_descriptor_64_e8_32s40s48bs56bs_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dfa77390 (    0x30) __block_descriptor_64_e8_32s40bs48bs56bs_e8_v16?08l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dfa773c0 (    0x30) __block_descriptor_56_e8_32s40s48bs_e34_v24?0?<v?>8?<v?"NSError">16l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dfa773f0 (    0x20) __block_literal_global.28 [NameNList, MangledNameNList, NList] 
                0x00000001dfa77410 (    0x30) __block_descriptor_40_e8_32s_e26_"NFPromise"16?0?<?>8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dfa77440 (    0x30) __block_descriptor_40_e8_32s_e58_"NFPromise"24?0"NSObject<OS_dispatch_queue>"8?<?>16l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dfa77470 (    0x30) __block_descriptor_40_e8_32s_e8_16?08l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dfa774a0 (    0x30) __block_descriptor_40_e8_32s_e19_"NFPromise"16?08l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dfa774d0 (    0x30) __block_descriptor_40_e8_32s_e51_"NFPromise"24?0"NSObject<OS_dispatch_queue>"816l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dfa77500 (    0x30) __block_descriptor_40_e8_32s_e26_"NFPromise"16?0?<v?>8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dfa77530 (    0x30) __block_descriptor_40_e8_32s_e58_"NFPromise"24?0"NSObject<OS_dispatch_queue>"8?<v?>16l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dfa77560 (    0x30) __block_descriptor_48_e8_32s40bs_e34_v24?0?<v?>8?<v?"NSError">16l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dfa77590 (    0x30) __block_descriptor_40_e8_32bs_e8_16?08l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dfa775c0 (    0x30) __block_descriptor_40_e8_32s_e51_"NFPromise"16?0?<v??<v?>?<v?"NSError">>8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dfa775f0 (    0x30) __block_descriptor_40_e8_32s_e83_"NFPromise"24?0"NSObject<OS_dispatch_queue>"8?<v??<v?>?<v?"NSError">>16l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dfa77620 (    0x30) __block_descriptor_40_e8_32s_e19_"NFPromise"16?0d8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dfa77650 (    0x30) __block_descriptor_48_e8_32s_e8_16?08l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dfa77680 (    0x30) __block_descriptor_40_e8_32s_e51_"NFPromise"24?0"NSObject<OS_dispatch_queue>"8d16l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dfa776b0 (    0x30) __block_descriptor_48_e8_32s40bs_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dfa776e0 (    0x30) __block_descriptor_56_e8_32s40s_e34_v24?0?<v?>8?<v?"NSError">16l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dfa77710 (    0x30) __block_descriptor_56_e8_32s40bs48bs_e23_v32?0Q816"NSError"24l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dfa77740 (    0x30) __block_descriptor_40_e8_32bs_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dfa77770 (    0x30) __block_descriptor_48_e8_32s40bs_e23_v32?0Q816"NSError"24l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dfa777a0 (    0x20) __block_literal_global [NameNList, MangledNameNList, NList] 
                0x00000001dfa777c0 (    0x30) __block_descriptor_40_e8_32w_e30_v16?0"NSObject<OS_nw_path>"8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dfa777f0 (    0x20) __block_literal_global.7 [NameNList, MangledNameNList, NList] 
                0x00000001dfa77810 (    0x30) __block_descriptor_48_e8_32bs40r_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dfa77840 (    0x30) __block_descriptor_48_e8_32s40r_e14_v16?0?<v?>8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dfa77870 (    0x30) __block_descriptor_48_e8_32bs40bs_e8_16?08l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dfa778a0 (    0x30) __block_descriptor_48_e8_32bs40bs_e17_v16?0"NSError"8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dfa778d0 (    0x30) __block_descriptor_48_e8_32bs40bs_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001dfa77900 (    0x20) __block_literal_global [NameNList, MangledNameNList, NList] 
                0x00000001dfa77920 (    0x20) __block_literal_global.10 [NameNList, MangledNameNList, NList] 
            0x00000001dfa77940 (   0x480) __AUTH_CONST __cfstring
            0x00000001dfa77dc0 (   0x690) __AUTH_CONST __objc_const
                0x00000001dfa77dc0 (    0x48) _OBJC_CLASS_RO_$_NFUnfairLock [NameNList, MangledNameNList, NList] 
                0x00000001dfa77e08 (    0x48) _OBJC_CLASS_RO_$_NFStateMachineTransition [NameNList, MangledNameNList, NList] 
                0x00000001dfa77e50 (    0x48) _OBJC_CLASS_RO_$_NFPendingPromise [NameNList, MangledNameNList, NList] 
                0x00000001dfa77e98 (    0x48) _OBJC_CLASS_RO_$_NFEventManager [NameNList, MangledNameNList, NList] 
                0x00000001dfa77ee0 (    0x48) _OBJC_CLASS_RO_$_NFEventTrigger [NameNList, MangledNameNList, NList] 
                0x00000001dfa77f28 (    0x48) _OBJC_CLASS_RO_$_NFArchiver [NameNList, MangledNameNList, NList] 
                0x00000001dfa77f70 (    0x40) _OBJC_$_CATEGORY_NSError_$_NFStateMachine [NameNList, MangledNameNList, NList] 
                0x00000001dfa77fb0 (    0x48) _OBJC_CLASS_RO_$_NFStateMachine [NameNList, MangledNameNList, NList] 
                0x00000001dfa77ff8 (    0x40) _OBJC_$_CATEGORY_NSUserDefaults_$_NFAdditions [NameNList, MangledNameNList, NList] 
                0x00000001dfa78038 (    0x48) _OBJC_CLASS_RO_$_NFLazy [NameNList, MangledNameNList, NList] 
                0x00000001dfa78080 (    0x40) _OBJC_$_CATEGORY_NSKeyedUnarchiver_$_FRAdditions [NameNList, MangledNameNList, NList] 
                0x00000001dfa780c0 (    0x48) _OBJC_METACLASS_RO_$_NFPromise [NameNList, MangledNameNList, NList] 
                0x00000001dfa78108 (    0x48) _OBJC_CLASS_RO_$_NFPromise [NameNList, MangledNameNList, NList] 
                0x00000001dfa78150 (    0x48) _OBJC_CLASS_RO_$_NFVoid [NameNList, MangledNameNList, NList] 
                0x00000001dfa78198 (    0x40) _OBJC_$_CATEGORY_NSObject_$_NFAdditions [NameNList, MangledNameNList, NList] 
                0x00000001dfa781d8 (    0x40) _OBJC_$_CATEGORY_NSString_$_NFAdditions [NameNList, MangledNameNList, NList] 
                0x00000001dfa78218 (    0x48) _OBJC_CLASS_RO_$_NFPromiseSeal [NameNList, MangledNameNList, NList] 
                0x00000001dfa78260 (    0x48) _OBJC_METACLASS_RO_$_NFReachability [NameNList, MangledNameNList, NList] 
                0x00000001dfa782a8 (    0x48) _OBJC_CLASS_RO_$_NFReachability [NameNList, MangledNameNList, NList] 
                0x00000001dfa782f0 (    0x48) _OBJC_CLASS_RO_$_NFMutexLock [NameNList, MangledNameNList, NList] 
                0x00000001dfa78338 (    0x48) _OBJC_CLASS_RO_$_NFStateMachineEvent [NameNList, MangledNameNList, NList] 
                0x00000001dfa78380 (    0x48) _OBJC_CLASS_RO_$_NFStateMachineState [NameNList, MangledNameNList, NList] 
                0x00000001dfa783c8 (    0x48) _OBJC_CLASS_RO_$_NFMultiDelegate [NameNList, MangledNameNList, NList] 
                0x00000001dfa78410 (    0x40) _OBJC_$_CATEGORY_NSValue_$_NFAdditions [NameNList, MangledNameNList, NList] 
            0x00000001dfa78450 (     0x8) __AUTH_CONST __auth_ptr
            0x00000001dfa78458 (   0x278) __AUTH_CONST __auth_got
        0x00000001d7ebf6e8 (   0x1e0) __AUTH SEGMENT
            0x00000001d7ebf6e8 (   0x1e0) __AUTH __objc_data
                0x00000001d7ebf6e8 (    0x28) OBJC_CLASS_$_NFStateMachineTransition [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7ebf710 (    0x28) OBJC_METACLASS_$_NFStateMachineTransition [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7ebf738 (    0x28) OBJC_CLASS_$_NFPendingPromise [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7ebf760 (    0x28) OBJC_METACLASS_$_NFPendingPromise [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7ebf788 (    0x28) OBJC_METACLASS_$_NFArchiver [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7ebf7b0 (    0x28) OBJC_CLASS_$_NFArchiver [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7ebf7d8 (    0x28) OBJC_CLASS_$_NFStateMachine [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7ebf800 (    0x28) OBJC_METACLASS_$_NFStateMachine [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7ebf828 (    0x28) OBJC_CLASS_$_NFStateMachineEvent [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7ebf850 (    0x28) OBJC_METACLASS_$_NFStateMachineEvent [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7ebf878 (    0x28) OBJC_CLASS_$_NFStateMachineState [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7ebf8a0 (    0x28) OBJC_METACLASS_$_NFStateMachineState [EXT, NameNList, MangledNameNList, NList] 
        0x00000001d69cc968 (   0x430) __DATA SEGMENT
            0x00000001d69cc968 (    0xe8) __DATA __objc_classrefs
            0x00000001d69cca50 (    0x70) __DATA __objc_superrefs
            0x00000001d69ccac0 (    0xc8) __DATA __objc_ivar
                0x00000001d69ccac0 (     0x4) OBJC_IVAR_$_NFUnfairLock._unfairLock [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d69ccac4 (     0x4) OBJC_IVAR_$_NFUnfairLock._unfairLockOptions [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d69ccac8 (     0x4) OBJC_IVAR_$_NFStateMachineTransition._stateMachine [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d69ccacc (     0x4) OBJC_IVAR_$_NFStateMachineTransition._event [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d69ccad0 (     0x4) OBJC_IVAR_$_NFStateMachineTransition._fromState [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d69ccad4 (     0x4) OBJC_IVAR_$_NFStateMachineTransition._toState [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d69ccad8 (     0x4) OBJC_IVAR_$_NFStateMachineTransition._context [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d69ccadc (     0x4) OBJC_IVAR_$_NFPendingPromise._promise [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d69ccae0 (     0x4) OBJC_IVAR_$_NFPendingPromise._resolve [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d69ccae4 (     0x4) OBJC_IVAR_$_NFPendingPromise._reject [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d69ccae8 (     0x4) OBJC_IVAR_$_NFEventManager._events [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d69ccaec (     0x4) OBJC_IVAR_$_NFEventManager._triggers [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d69ccaf0 (     0x4) OBJC_IVAR_$_NFEventTrigger._fireOnce [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d69ccaf4 (     0x4) OBJC_IVAR_$_NFEventTrigger._fireOnAny [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d69ccaf8 (     0x4) OBJC_IVAR_$_NFEventTrigger._key [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d69ccafc (     0x4) OBJC_IVAR_$_NFEventTrigger._events [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d69ccb00 (     0x4) OBJC_IVAR_$_NFEventTrigger._block [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d69ccb04 (     0x4) OBJC_IVAR_$_NFStateMachine._status [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d69ccb08 (     0x4) OBJC_IVAR_$_NFStateMachine._state [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d69ccb0c (     0x4) OBJC_IVAR_$_NFStateMachine._owner [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d69ccb10 (     0x4) OBJC_IVAR_$_NFStateMachine._states [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d69ccb14 (     0x4) OBJC_IVAR_$_NFStateMachine._events [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d69ccb18 (     0x4) OBJC_IVAR_$_NFStateMachine._lock [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d69ccb1c (     0x4) OBJC_IVAR_$_NFStateMachine._statusToken [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d69ccb20 (     0x4) OBJC_IVAR_$_NFLazy._value [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d69ccb24 (     0x4) OBJC_IVAR_$_NFLazy._constructor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d69ccb28 (     0x4) OBJC_IVAR_$_NFLazy._lock [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d69ccb2c (     0x4) OBJC_IVAR_$_NFPromise._seal [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d69ccb30 (     0x4) OBJC_IVAR_$_NFPromiseSeal._value [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d69ccb34 (     0x4) OBJC_IVAR_$_NFPromiseSeal._error [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d69ccb38 (     0x4) OBJC_IVAR_$_NFPromiseSeal._state [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d69ccb3c (     0x4) OBJC_IVAR_$_NFPromiseSeal._handlers [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d69ccb40 (     0x4) OBJC_IVAR_$_NFPromiseSeal._lock [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d69ccb44 (     0x4) OBJC_IVAR_$_NFReachability._currentReachabilityStatus [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d69ccb48 (     0x4) OBJC_IVAR_$_NFReachability._observationQueue [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d69ccb4c (     0x4) OBJC_IVAR_$_NFReachability._networkPathMonitor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d69ccb50 (     0x4) OBJC_IVAR_$_NFReachability._currentNetworkPath [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d69ccb54 (     0x4) OBJC_IVAR_$_NFMutexLock._lock [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d69ccb58 (     0x4) OBJC_IVAR_$_NFStateMachineEvent._name [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d69ccb5c (     0x4) OBJC_IVAR_$_NFStateMachineEvent._states [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d69ccb60 (     0x4) OBJC_IVAR_$_NFStateMachineEvent._destinationState [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d69ccb64 (     0x4) OBJC_IVAR_$_NFStateMachineEvent._fireBlock [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d69ccb68 (     0x4) OBJC_IVAR_$_NFStateMachineState._name [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d69ccb6c (     0x4) OBJC_IVAR_$_NFStateMachineState._canTryBlock [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d69ccb70 (     0x4) OBJC_IVAR_$_NFStateMachineState._willExitBlock [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d69ccb74 (     0x4) OBJC_IVAR_$_NFStateMachineState._willEnterBlock [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d69ccb78 (     0x4) OBJC_IVAR_$_NFStateMachineState._didExitBlock [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d69ccb7c (     0x4) OBJC_IVAR_$_NFStateMachineState._didEnterBlock [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d69ccb80 (     0x4) OBJC_IVAR_$_NFMultiDelegate._children [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d69ccb84 (     0x4) OBJC_IVAR_$_NFMultiDelegate._delegateProtocol [PEXT, NameNList, MangledNameNList, NList] 
            0x00000001d69ccb88 (   0x1f8) __DATA __data
                0x00000001d69ccb88 (    0x60) _OBJC_PROTOCOL_$_NSLocking [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d69ccbe8 (    0x60) _OBJC_PROTOCOL_$_NFLocking [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d69ccc48 (    0x60) _OBJC_PROTOCOL_$_NSObject [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d69ccca8 (    0x60) _OBJC_PROTOCOL_$_NFArchiver [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d69ccd08 (     0x8) kNFPromiseSealingErrorCode [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d69ccd10 (     0x8) kNFPromiseTimeoutErrorCode [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d69ccd18 (     0x8) kNFPromiseErrorDomain [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d69ccd20 (    0x60) _OBJC_PROTOCOL_$_NSCopying [PEXT, NameNList, MangledNameNList, NList] 
            0x00000001d69ccd80 (    0x18) __DATA __bss
                0x00000001d69ccd80 (     0x1) NFInternalBuild.internalBuild [NameNList, MangledNameNList, NList] 
                0x00000001d69ccd81 (     0x7) NFStoreDemoMode.storeDemoMode [NameNList, MangledNameNList, NList] 
                0x00000001d69ccd88 (     0x8) NFDeviceHasExtendedColorDisplay.hasExtendedColorDisplay [NameNList, MangledNameNList, NList] 
                0x00000001d69ccd90 (     0x8) NFDeviceHasExtendedColorDisplay.onceToken [NameNList, MangledNameNList, NList] 
        0x00000001d713f358 (   0x370) __DATA_DIRTY SEGMENT
            0x00000001d713f358 (   0x320) __DATA_DIRTY __objc_data
                0x00000001d713f358 (    0x28) OBJC_CLASS_$_NFUnfairLock [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d713f380 (    0x28) OBJC_METACLASS_$_NFUnfairLock [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d713f3a8 (    0x28) OBJC_CLASS_$_NFEventManager [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d713f3d0 (    0x28) OBJC_CLASS_$_NFEventTrigger [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d713f3f8 (    0x28) OBJC_METACLASS_$_NFEventManager [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d713f420 (    0x28) OBJC_METACLASS_$_NFEventTrigger [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d713f448 (    0x28) OBJC_CLASS_$_NFLazy [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d713f470 (    0x28) OBJC_METACLASS_$_NFLazy [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d713f498 (    0x28) OBJC_CLASS_$_NFPromise [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d713f4c0 (    0x28) OBJC_METACLASS_$_NFPromise [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d713f4e8 (    0x28) OBJC_METACLASS_$_NFVoid [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d713f510 (    0x28) OBJC_CLASS_$_NFVoid [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d713f538 (    0x28) OBJC_CLASS_$_NFPromiseSeal [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d713f560 (    0x28) OBJC_METACLASS_$_NFPromiseSeal [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d713f588 (    0x28) OBJC_CLASS_$_NFReachability [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d713f5b0 (    0x28) OBJC_METACLASS_$_NFReachability [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d713f5d8 (    0x28) OBJC_CLASS_$_NFMutexLock [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d713f600 (    0x28) OBJC_METACLASS_$_NFMutexLock [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d713f628 (    0x28) OBJC_CLASS_$_NFMultiDelegate [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d713f650 (    0x28) OBJC_METACLASS_$_NFMultiDelegate [EXT, NameNList, MangledNameNList, NList] 
            0x00000001d713f678 (    0x50) __DATA_DIRTY __bss
                0x00000001d713f678 (     0x8) NFInternalBuild.onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d713f680 (     0x8) NFStoreDemoMode.onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d713f688 (     0x8) zalgo.token [NameNList, MangledNameNList, NList] 
                0x00000001d713f690 (     0x8) zalgo.queue [NameNList, MangledNameNList, NList] 
                0x00000001d713f698 (     0x8) zalgoIfMain.token [NameNList, MangledNameNList, NList] 
                0x00000001d713f6a0 (     0x8) zalgoIfMain.queue [NameNList, MangledNameNList, NList] 
                0x00000001d713f6a8 (     0x8) sharedInstance.s_reachability [NameNList, MangledNameNList, NList] 
                0x00000001d713f6b0 (     0x8) sharedInstance.onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d713f6b8 (     0x8) NFDevicePlatform.s_platformString [NameNList, MangledNameNList, NList] 
                0x00000001d713f6c0 (     0x8) NFDevicePlatform.onceToken [NameNList, MangledNameNList, NList] 
        0x000000023a910000 (0x37bf0000) __LINKEDIT SEGMENT
