/System/Library/Extensions/AppleMultitouchDriver.kext/Contents/PlugIns/MultitouchHID.plugin/Contents/MacOS/MultitouchHID [arm64e, 0.144506 seconds]:
    727ED36B-494E-3BE0-B920-2C2A54AC6CAE /System/Library/Extensions/AppleMultitouchDriver.kext/Contents/PlugIns/MultitouchHID.plugin/Contents/MacOS/MultitouchHID [DYLIB, DYLDSHAREDCACHE, FaultedFromDiskDyldSharedCache, MMap64]  
        0x00000001e6f08000 ( 0x5c000) __TEXT SEGMENT
            0x00000001e6f08000 (  0x40bc) MACH_HEADER
            0x00000001e6f0c0bc ( 0x4b994) __TEXT __text
                0x00000001e6f0c0bc (    0x48) MTForceConfigGetTypeID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0c104 (    0x28) (null) [FUNC, FunctionStarts] 
                0x00000001e6f0c12c (    0x9c) MTForceConfigCreate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0c1c8 (   0x11c) _MTForceConfigGenerateDefaultParams [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0c2e4 (    0x44) (null) [FUNC, FunctionStarts] 
                0x00000001e6f0c328 (     0x8) MTForceConfigGetBehavior [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0c330 (     0x8) MTForceConfigGetNumStages [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0c338 (     0x8) MTForceConfigIsContinuous [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0c340 (     0x8) MTForceConfigSetIsContinuous [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0c348 (    0x20) MTForceConfigSetActuationsForStage [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0c368 (     0xc) MTForceConfigGetActuationsForStage [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0c374 (     0xc) MTForceConfigShouldSkipActivationForStage [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0c380 (     0xc) MTForceConfigShouldSkipReleaseForStage [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0c38c (     0xc) MTForceConfigGetThresholdsForStage [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0c398 (    0x20) (null) [FUNC, FunctionStarts] 
                0x00000001e6f0c3b8 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001e6f0c3bc (    0x28) MultitouchHIDClass::_probe(void*, __CFDictionary const*, unsigned int, int*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0c3e4 (    0x28) MultitouchHIDClass::_start(void*, __CFDictionary const*, unsigned int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0c40c (    0x28) MultitouchHIDClass::_stop(void*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0c434 (    0x28) MultitouchHIDClass::_open(void*, unsigned int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0c45c (    0x28) MultitouchHIDClass::_close(void*, unsigned int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0c484 (    0x28) MultitouchHIDClass::_copyProperty(void*, __CFString const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0c4ac (    0x28) MultitouchHIDClass::_setProperty(void*, __CFString const*, void const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0c4d4 (    0x28) MultitouchHIDClass::_setEventCallback(void*, void (*)(void*, void*, void*, __IOHIDEvent*, unsigned int), void*, void*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0c4fc (    0x28) MultitouchHIDClass::_scheduleWithDispatchQueue(void*, dispatch_queue_s*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0c524 (    0x28) MultitouchHIDClass::_unscheduleFromDispatchQueue(void*, dispatch_queue_s*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0c54c (    0x28) MultitouchHIDClass::_copyEvent(void*, unsigned int, __IOHIDEvent*, unsigned int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0c574 (    0x28) MultitouchHIDClass::_setOutputEvent(void*, __IOHIDEvent*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0c59c (    0x58) MultitouchHIDClass::MultitouchHIDClass() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0c5f4 (    0x58) MultitouchHIDClass::MultitouchHIDClass() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0c64c (    0x58) MultitouchHIDClass::~MultitouchHIDClass() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0c6a4 (     0xc) (null) [FUNC, FunctionStarts] 
                0x00000001e6f0c6b0 (     0x4) MultitouchHIDClass::~MultitouchHIDClass() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0c6b4 (    0x28) MultitouchHIDClass::~MultitouchHIDClass() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0c6dc (     0x8) MultitouchHIDClass::getHIDService() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0c6e4 (    0x84) MultitouchHIDClass::alloc() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0c768 (   0x194) MultitouchHIDClass::queryInterface(CFUUIDBytes, void**) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0c8fc (    0x14) MultitouchHIDClass::probe(__CFDictionary const*, unsigned int, int*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0c910 (   0x234) MultitouchHIDClass::start(__CFDictionary const*, unsigned int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0cb44 (    0xa0) MultitouchHIDClass::stop() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0cbe4 (    0x48) MultitouchHIDClass::open(unsigned int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0cc2c (    0x38) MultitouchHIDClass::close(unsigned int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0cc64 (    0x38) MultitouchHIDClass::copyProperty(__CFString const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0cc9c (    0x48) MultitouchHIDClass::setProperty(__CFString const*, void const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0cce4 (    0x10) MultitouchHIDClass::setEventCallback(void (*)(void*, void*, void*, __IOHIDEvent*, unsigned int), void*, void*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0ccf4 (    0xa0) MultitouchHIDClass::scheduleWithDispatchQueue(dispatch_queue_s*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0cd94 (    0x70) MultitouchHIDClass::unscheduleFromDispatchQueue(dispatch_queue_s*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0ce04 (    0x38) MultitouchHIDClass::copyEvent(unsigned int, __IOHIDEvent*, unsigned int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0ce3c (    0x40) MultitouchHIDClass::setOutputEvent(__IOHIDEvent*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0ce7c (   0x290) IOHIDPlugInFactory [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0d10c (    0x8c) MultitouchIOHIDIUnknown::factoryAddRef() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0d198 (    0x98) MultitouchIOHIDIUnknown::factoryRelease() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0d230 (    0x50) MultitouchIOHIDIUnknown::MultitouchIOHIDIUnknown(void*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0d280 (    0x48) MultitouchIOHIDIUnknown::~MultitouchIOHIDIUnknown() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0d2c8 (     0x4) MultitouchIOHIDIUnknown::~MultitouchIOHIDIUnknown() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0d2cc (     0x4) MultitouchIOHIDIUnknown::~MultitouchIOHIDIUnknown() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0d2d0 (    0x14) MultitouchIOHIDIUnknown::addRef() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0d2e4 (    0x5c) MultitouchIOHIDIUnknown::release() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0d340 (    0x28) MultitouchIOHIDIUnknown::genericQueryInterface(void*, CFUUIDBytes, void**) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0d368 (    0x28) MultitouchIOHIDIUnknown::genericAddRef(void*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0d390 (    0x28) MultitouchIOHIDIUnknown::genericRelease(void*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0d3b8 (    0x20) (null) [FUNC, FunctionStarts] 
                0x00000001e6f0d3d8 (     0x4) mt_PrintHIDEvent [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0d3dc (    0xd0) invertRadiusSmoothing(float, float, float) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0d4ac (   0x2d8) mthm_ComputeFingerEllipseTipOffset_mm(MTHMFingerTipOffsetParameters const&, MTSurfaceDimensions const&, MTContact const&, MTContact const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0d784 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001e6f0d798 (    0x64) mthm_ComputeFingerEllipseTipOffsetFromPressure_mm(MTHMFingerTipOffsetParameters const&, MTSurfaceDimensions const&, MTContact const&, MTContact const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0d7fc (    0xbc) MTSimpleEmbeddedStylusHIDManager::createManager(MultitouchHIDClass*, __MTDevice*, MTParserType, MTParserOptions) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0d8b8 (     0x4) MTSimpleEmbeddedStylusHIDManager::initialize(MultitouchHIDClass*, __MTDevice*, MTParserType, MTParserOptions) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0d8bc (    0x4c) MTSimpleEmbeddedStylusHIDManager::wasScheduledOnDispatchQueue(dispatch_queue_s*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0d908 (    0x48) MTSimpleEmbeddedStylusHIDManager::wasUnscheduledFromDispatchQueue(dispatch_queue_s*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0d950 (   0x2a4) MTSimpleEmbeddedStylusHIDManager::setDeviceUsages() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0dbf4 (   0x104) MTSimpleEmbeddedStylusHIDManager::setPluginDefaultProperties() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0dcf8 (     0xc) MTSimpleEmbeddedStylusHIDManager::getName() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0dd04 (    0x94) MTSimpleEmbeddedStylusHIDManager::createEventDispatcher() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0dd98 (     0x8) MTSimpleEmbeddedStylusHIDManager::setInputDetectionModeForOrientation(unsigned short, unsigned short) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0dda0 (    0x60) MTSimpleEmbeddedStylusHIDManager::setTouchMode(unsigned short, unsigned short) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0de00 (     0x4) MTSimpleEmbeddedStylusHIDManager::handleNotificationEvent(__MTDevice*, MTNotificationEvent, void*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0de04 (   0x180) MTSimpleEmbeddedStylusHIDManager::sendHighNoiseEnvironmentDetection(bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0df84 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001e6f0df88 (    0x28) (null) [FUNC, FunctionStarts] 
                0x00000001e6f0dfb0 (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001e6f0dfb8 (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001e6f0dfc0 (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001e6f0dfc8 (    0xac) MTHandMotion::MTHandMotion(MTSurfaceDimensions const&, MTParserType, MTParserOptions, MTHandIdentity, char const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0e074 (     0x8) MTHandMotion::clear() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0e07c (     0x4) MTHandMotion::MTHandMotion(MTSurfaceDimensions const&, MTParserType, MTParserOptions, MTHandIdentity, char const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0e080 (     0x4) MTHandMotion::~MTHandMotion() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0e084 (     0x4) MTHandMotion::~MTHandMotion() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0e088 (    0x28) MTHandMotion::~MTHandMotion() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0e0b0 (   0x12c) MTHandMotion::printExtractedMotion(int, int, MTContact*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0e1dc (    0xa0) MTHandMotion::clearHandMotion(bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0e27c (    0x74) MTHandMotion::outermostFingersAreWidelySeparated(bool) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0e2f0 (    0x18) MTHandMotion::scalingFromDotProduct(MTPoint, MTPoint, MTPoint) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0e308 (    0x20) MTHandMotion::rotationFromVectorProduct(MTPoint, MTPoint, MTPoint) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0e328 (    0x54) MTHandMotion::computeSeparation_mm(MTContact const&, MTContact const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0e37c (    0x5c) MTHandMotion::computeSeparationVector(MTContact const&, MTContact const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0e3d8 (    0xac) MTHandMotion::computeInnerOuterSpeedSymmetry(MTParserPath const&, MTParserPath const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0e484 (   0x430) MTHandMotion::extractHandMotion(MTPathStates const&, MTParserPath const&, MTParserPath const&, bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0e8b4 (   0x1a4) MTHandMotion::combineCentralFingerScaleRotate(MTPathStates const&, MTParserPath const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0ea58 (   0x13c) MTHandMotion::extractFastestFingerTranslation(MTPathStates const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0eb94 (    0xa0) MTHandMotion::getSpeedSymmetry(float, unsigned int) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0ec34 (    0x1c) (null) [FUNC, FunctionStarts] 
                0x00000001e6f0ec50 (    0xc0) MTHandMotion::fastest1FingerMask(MTPathStates const&, float&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0ed10 (   0x124) MTHandMotion::fastest2FpairMask(MTPathStates const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0ee34 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001e6f0ee44 (   0x144) MTHandMotion::computeSpeedSymmetry(MTPathStates const&, unsigned short, float, float) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0ef88 (    0xe8) MTHandMotion::computeSpeedSymmetries(MTPathStates const&, unsigned short) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0f070 (    0x2c) MTHandMotion::computeThreeFingerWithThumbSpeedSymmetry(MTPathStates const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0f09c (   0x178) MTHandMotion::computeTrackpadDominanceWeights(float&, float&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0f214 (    0x4c) MTHandMotion::computeMouseDominanceWeights(float&, float&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0f260 (   0x3c8) MTHandMotion::clipMotionToDominantAxes(double, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0f628 (    0x6c) MTHandMotion::convertPixelDeltasTo_mm_s(double) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0f694 (    0x60) MTHandMotion::convertPixelVelocitiesTo_mm_s() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0f6f4 (    0xe8) MTHandMotion::updateFastestFingerSpeed(MTPathStates const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0f7dc (    0xbc) MTHandMotion::makeCollectionEventMask(MTPathStates const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0f898 (   0x220) MTHandMotion::processHandMotion(MTPathStates const&, int, int, int, float, int, unsigned short) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0fab8 (     0x8) MTHandMotion::storeFeedbackFromMouse(MTPoint) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0fac0 (    0x50) MTHandMotion::getMouseMotionFeedback(int) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0fb10 (     0x8) MTHandMotion::storeFeedbackFromButton(float) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0fb18 (     0x8) MTHandMotion::getButtonMotionFeedback() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0fb20 (    0x54) MTHandStatistics::MTHandStatistics(MTHandIdentity, char*, MTParserType, MTParserOptions) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0fb74 (   0x134) MTHandStatistics::clear(bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0fca8 (    0x54) MTHandStatistics::MTHandStatistics(MTHandIdentity, char*, MTParserType, MTParserOptions) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0fcfc (    0x48) MTHandStatistics::~MTHandStatistics() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0fd44 (    0x48) MTHandStatistics::~MTHandStatistics() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0fd8c (    0x58) MTHandStatistics::~MTHandStatistics() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0fde4 (     0xc) MTHandStatistics::clearConsecutiveCounts() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0fdf0 (    0x10) MTHandStatistics::rollBackSubsetBoundary() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0fe00 (   0x110) MTHandStatistics::updateCumulativeMaxStats() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0ff10 (    0xc8) MTHandStatistics::updateStatsWithPath(MTParserPath const&, bool, bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f0ffd8 (   0x1c4) MTHandStatistics::updateStatsWithFingerPath(int, MTContactIdentity, MTPoint, MTPathStageTimestamps const&, bool, bool, bool, bool, float, bool, bool, bool, bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1019c (   0x184) MTHandStatistics::updateSubsetStatsWithFingerPath(int, MTContactIdentity, MTPathStageTimestamps const&, bool, bool, bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f10320 (    0x7c) MTHandStatistics::updateStatsWithNonFingerPath(MTParserPath const&, bool, bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1039c (   0x3a0) MTHandStatistics::processHandState(MTPathStates&, bool, bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1073c (   0x11c) MTHandStatistics::makeCollectionEventMask(bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f10858 (   0x218) MTParser::MTParser(__MTDevice*, MTParserType, MTParserOptions, MTSurfaceDimensions*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f10a70 (   0x108) MTParser::clear(__IOHIDEvent**, __IOHIDEvent**) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f10b78 (     0x4) MTParser::MTParser(__MTDevice*, MTParserType, MTParserOptions, MTSurfaceDimensions*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f10b7c (   0x3f0) MTParser::handleContactFrame(MTContact*, int, double, unsigned long long, __IOHIDEvent**, __IOHIDEvent**, double*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f10f6c (   0x164) MTParser::~MTParser() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f110d0 (     0x4) MTParser::~MTParser() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f110d4 (    0x28) MTParser::~MTParser() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f110fc (    0x2c) MTParser::retain() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f11128 (    0x6c) MTParser::release() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f11194 (   0x1f0) MTParser::createParserForMTDevice(__MTDevice*, MTParserType, MTParserOptions) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f11384 (   0x1c0) MTParser::createMotionAxisChildEvents(__IOHIDEvent*, MTHandMotion const&, unsigned long long) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f11544 (   0x574) MTParser::createDigitizerChildEventForPath(__IOHIDEvent*, MTParserPath const&, unsigned long long, unsigned int, bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f11ab8 (   0x1cc) MTParser::createDigitizerPathChildEvents(__IOHIDEvent*, MTPathStates const&, unsigned int, MTHandMotion const&, unsigned long long, unsigned int*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f11c84 (   0x2ac) MTParser::createHIDCollectionEventsForHand(MTPathStates const&, MTHandStatistics const&, MTHandMotion const&, unsigned int, double) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f11f30 (   0x168) MTParser::handleForceHIDEvents(__IOHIDEvent**, bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f12098 (    0x54) (null) [FUNC, FunctionStarts] 
                0x00000001e6f120ec (    0x68) MTParser::createEmptyHIDCollectionEvent() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f12154 (   0x11c) MTParser::autoReleaseTapAndAHalfDrag(double, __IOHIDEvent**) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f12270 (    0xa0) MTParser::updateSurfaceDimensions() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f12310 (    0x34) MTParser::getNonRestingFingerCount(bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f12344 (     0x4) MTParser::handleFrameHeader(MTBinaryFrameHeader*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f12348 (    0x3c) MTParser::systemForceResponseEnabledChanged() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f12384 (    0x18) MTParser::setHostClickControlEnabled(bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1239c (    0x28) MTParser::getHostClickControlEnabled() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f123c4 (    0x58) MTParser::alwaysGenerateNotificationCenterGestures(bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1241c (    0x54) MTParser::alwaysGenerateNotificationCenterAltGestures(bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f12470 (    0x54) MTParser::updatePixelResolution_mm(float) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f124c4 (    0x40) MTParser::feedbackMomentumTimerStatus(MTMomentumSubType, bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f12504 (     0x4) MTParser::deviceWillReset() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f12508 (    0x8c) (null) [FUNC, FunctionStarts] 
                0x00000001e6f12594 (    0x3c) (null) [FUNC, FunctionStarts] 
                0x00000001e6f125d0 (    0xc0) (null) [FUNC, FunctionStarts] 
                0x00000001e6f12690 (    0x3c) (null) [FUNC, FunctionStarts] 
                0x00000001e6f126cc (    0x84) (null) [FUNC, FunctionStarts] 
                0x00000001e6f12750 (    0x3c) (null) [FUNC, FunctionStarts] 
                0x00000001e6f1278c (    0x98) (null) [FUNC, FunctionStarts] 
                0x00000001e6f12824 (    0x88) (null) [FUNC, FunctionStarts] 
                0x00000001e6f128ac (    0xe0) MTPathStates::MTPathStates(MTSurfaceDimensions const&, MTParserType, MTParserOptions, bool, unsigned int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1298c (    0xf0) MTPathStates::updateSurfaceDimensions() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f12a7c (     0x4) MTPathStates::MTPathStates(MTSurfaceDimensions const&, MTParserType, MTParserOptions, bool, unsigned int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f12a80 (    0x5c) MTPathStates::~MTPathStates() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f12adc (    0x5c) MTPathStates::~MTPathStates() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f12b38 (    0x60) MTPathStates::~MTPathStates() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f12b98 (    0x70) MTPathStates::clear() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f12c08 (    0x44) MTPathStates::initializeParams() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f12c4c (    0x10) MTPathStates::updateResolutionDependentParams() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f12c5c (    0x28) MTPathStates::setDivingButtonState(bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f12c84 (     0x8) MTPathStates::getThumbRestingZoneAdaptiveBase() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f12c8c (    0x28) MTPathStates::getThumbRestingOrPolarZoneHeight() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f12cb4 (    0x24) MTPathStates::getMaxThumbRestingHeight() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f12cd8 (    0x28) MTPathStates::restingTranslationCertainty() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f12d00 (    0xd4) MTPathStates::isContactOnDivingButton(MTContact const&, double) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f12dd4 (   0x364) MTPathStates::countFingersOnDivingButton() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f13138 (    0x8c) MTPathStates::updateDivingBoardDisplacements() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f131c4 (   0x308) MTPathStates::checkForRestingThumb() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f134cc (   0x254) MTPathStates::fixupCurledUnderThumbIdentity() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f13720 (    0x3c) MTPathStates::checkForFingersInZones() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1375c (   0x154) MTPathStates::forwardFirmwareDistributedForces(float) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f138b0 (    0xa4) MTPathStates::hasFastestLowpassPeakFingerSpeed(int) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f13954 (    0x84) MTPathStates::sumOfLowpassPeakFingerSpeeds() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f139d8 (   0x180) MTPathStates::getPrePixelatedPositionFromPostPixelatedPosition(int) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f13b58 (    0x2c) MTPathStates::getMaxDisplacement_mm() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f13b84 (    0xa4) MTPathStates::updateDragDisplacements_mm(bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f13c28 (     0x4) MTPathStates::tasksPreContactCopy(MTContact*, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f13c2c (    0x80) MTPathStates::tasksPrePixelatedPositions() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f13cac (   0x488) MTPathStates::checkForRestingThumbFromPalmRestingHand() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f14134 (    0x50) MTPathStates::checkForLonelyHighRestingThumb() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f14184 (   0x138) MTPathStates::tasksFilterAndPixelatePositions(MTContact*, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f142bc (    0xd0) MTPathStates::assignLonelyHighRestingThumb(int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1438c (    0x80) MTPathStates::setRestingThumbFromPalmRestingHand(int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1440c (   0x138) MTPathStates::tasksPostPixelatedPositions() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f14544 (    0x4c) MTPathStates::updateHRTDiscountedDisplacement_mm() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f14590 (    0x50) MTPathStates::breakOutOfRestingThumbForLargeDiscountedDisplacement() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f145e0 (    0xc4) MTPathStates::updateSpeedSymmetriesOfAllPaths() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f146a4 (    0x7c) MTPathStates::breakOutOfRestingThumbBasedOnSymmetry() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f14720 (   0x534) MTPathStates::computePathAndFingerSpeedSymmetries(int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f14c54 (    0x48) MTPathStates::getHighRestingThumbDisplacement() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f14c9c (   0x22c) (null) [FUNC, FunctionStarts] 
                0x00000001e6f14ec8 (   0x1a4) MTPathStates::getCosineThetas(std::__1::vector<MTPoint, std::__1::allocator<MTPoint>>) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1506c (    0x54) MTPathStates::compute_2F_path_speed_symmetry(std::__1::vector<float, std::__1::allocator<float>>, std::__1::vector<float, std::__1::allocator<float>>, float) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f150c0 (    0xa0) MTPathStates::compute_3F_path_speed_symmetry(std::__1::vector<float, std::__1::allocator<float>>, std::__1::vector<float, std::__1::allocator<float>>, float) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f15160 (    0xa0) MTPathStates::get_3F_IncludingThumbSpeedSymmetry() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f15200 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001e6f15218 (    0x5c) (null) [FUNC, FunctionStarts] 
                0x00000001e6f15274 (    0x34) (null) [FUNC, FunctionStarts] 
                0x00000001e6f152a8 (    0x38) (null) [FUNC, FunctionStarts] 
                0x00000001e6f152e0 (    0x34) (null) [FUNC, FunctionStarts] 
                0x00000001e6f15314 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001e6f1532c (    0x38) (null) [FUNC, FunctionStarts] 
                0x00000001e6f15364 (   0x48c) (null) [FUNC, FunctionStarts] 
                0x00000001e6f157f0 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001e6f15808 (    0xa8) (null) [FUNC, FunctionStarts] 
                0x00000001e6f158b0 (    0x88) (null) [FUNC, FunctionStarts] 
                0x00000001e6f15938 (   0x298) (null) [FUNC, FunctionStarts] 
                0x00000001e6f15bd0 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001e6f15be8 (   0x1e0) (null) [FUNC, FunctionStarts] 
                0x00000001e6f15dc8 (    0xc0) (null) [FUNC, FunctionStarts] 
                0x00000001e6f15e88 (    0xc4) (null) [FUNC, FunctionStarts] 
                0x00000001e6f15f4c (    0x98) (null) [FUNC, FunctionStarts] 
                0x00000001e6f15fe4 (   0x4c8) (null) [FUNC, FunctionStarts] 
                0x00000001e6f164ac (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001e6f164c4 (    0xd8) (null) [FUNC, FunctionStarts] 
                0x00000001e6f1659c (    0xe4) (null) [FUNC, FunctionStarts] 
                0x00000001e6f16680 (   0x1c0) (null) [FUNC, FunctionStarts] 
                0x00000001e6f16840 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001e6f16858 (    0xec) (null) [FUNC, FunctionStarts] 
                0x00000001e6f16944 (   0x170) (null) [FUNC, FunctionStarts] 
                0x00000001e6f16ab4 (   0x120) (null) [FUNC, FunctionStarts] 
                0x00000001e6f16bd4 (    0x80) (null) [FUNC, FunctionStarts] 
                0x00000001e6f16c54 (    0x78) (null) [FUNC, FunctionStarts] 
                0x00000001e6f16ccc (   0x134) (null) [FUNC, FunctionStarts] 
                0x00000001e6f16e00 (    0x84) (null) [FUNC, FunctionStarts] 
                0x00000001e6f16e84 (    0x44) (null) [FUNC, FunctionStarts] 
                0x00000001e6f16ec8 (    0x84) (null) [FUNC, FunctionStarts] 
                0x00000001e6f16f4c (    0x44) (null) [FUNC, FunctionStarts] 
                0x00000001e6f16f90 (    0xf0) MTParserPath::MTParserPath(MTParserType, MTParserOptions, MTSLGLogger*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f17080 (    0xdc) MTParserPath::clear() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1715c (     0x4) MTParserPath::MTParserPath(MTParserType, MTParserOptions, MTSLGLogger*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f17160 (    0x48) MTParserPath::~MTParserPath() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f171a8 (    0x48) MTParserPath::~MTParserPath() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f171f0 (    0x58) MTParserPath::~MTParserPath() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f17248 (    0x14) MTParserPath::clearTimestamps(MTPathStageTimestamps&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1725c (   0x11c) MTParserPath::updateCurPrevContactsWith(MTContact&, double, MTSurfaceDimensions const&, MTTouchZoneParameters const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f17378 (    0x34) MTParserPath::rejectRestingThumbFromRestingHand() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f173ac (    0xa8) MTParserPath::updatePathStageTimestamps(double) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f17454 (   0x134) MTParserPath::updateZonesAndEdges(double, MTSurfaceDimensions const&, MTTouchZoneParameters const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f17588 (   0x284) MTParserPath::computeZonesAndEdgesMask(MTPoint, MTPoint, MTTouchZoneParameters const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1780c (    0x4c) MTParserPath::getAverageVelocity_mm_s() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f17858 (    0x14) MTParserPath::getDisplacement_mm() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1786c (    0xdc) MTParserPath::updateHysteresisDragCenter_mm(MTPathFilterParameters) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f17948 (    0x60) MTParserPath::applyMinimumIncrementHysteresis(float, float&, float, float) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f179a8 (    0x14) MTParserPath::wasFingerOrRestingContact() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f179bc (    0x1c) MTParserPath::getQuantizedMinorRadius_mm() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f179d8 (    0x1c) MTParserPath::getQuantizedMajorRadius_mm() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f179f4 (     0x8) MTParserPath::getQuantizedRadiusAccuracy_mm() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f179fc (    0x24) MTParserPath::wasFingerContact() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f17a20 (    0x28) MTParserPath::isFingerOrRestingContact() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f17a48 (    0x24) MTParserPath::isThumbAlongEdgeContact() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f17a6c (     0xc) MTParserPath::isStylusContact() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f17a78 (     0xc) MTParserPath::wasStylusContact() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f17a84 (    0x24) MTParserPath::isThumbContact() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f17aa8 (    0x38) MTParserPath::isFingerContact() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f17ae0 (    0x28) MTParserPath::isPalmContact() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f17b08 (    0x28) MTParserPath::isPalmHeelContact() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f17b30 (    0x28) MTParserPath::isEdgeContact() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f17b58 (    0x24) MTParserPath::isEdgeContactTyping() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f17b7c (    0x10) MTParserPath::isBottomOrTopContact() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f17b8c (    0x10) MTParserPath::isSideContact() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f17b9c (     0xc) MTParserPath::isBottomContact() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f17ba8 (    0x24) MTParserPath::isUnidentifiedContact() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f17bcc (    0x14) MTParserPath::isValidForceSource(int) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f17be0 (    0x60) MTParserPath::isValidEdgeStraddleClick() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f17c40 (    0x5c) MTParserPath::isValidClickSource() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f17c9c (    0xc0) MTParserPath::fingerLiftoffNearEdge(MTSurfaceDimensions const&, double) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f17d5c (    0x84) MTParserPath::flushLiftoffAt(double) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f17de0 (   0x1ec) MTParserPath::constructPathChangeEventMask() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f17fcc (    0xd4) MTParserPath::detectSustainedHoverAtEdge(MTPathFilterParameters const&, MTSurfaceDimensions const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f180a0 (    0xf8) MTParserPath::computeDebounceTimeInstability(MTPathFilterParameters const&, double) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f18198 (   0x57c) MTParserPath::computeZSignalInstability(MTPathStates const&, MTPathFilterParameters const&, bool, double) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f18714 (    0x30) MTParserPath::bypassUpToHysteresisOfMotion(float, float&, float) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f18744 (    0x68) MTParserPath::pullHysteresisCenterHidingUnstablePixelDeltasXY(MTPathFilterParameters const&, MTPoint, MTPoint&, float, float) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f187ac (   0x218) MTParserPath::pullHysteresisCenterCancelingEllipseTipMotion(MTHMFingerTipOffsetParameters const&, MTPoint, MTPoint&, MTPoint, MTPoint, MTSurfaceDimensions) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f189c4 (    0xa8) MTParserPath::pullHysteresisCenterCancelingEllipseTipMotionFromPressure(MTHMFingerTipOffsetParameters const&, MTPoint, MTPoint&, MTPoint, MTPoint, MTSurfaceDimensions) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f18a6c (    0xbc) MTParserPath::applyAbsolutePixelHysteresis(MTPoint, MTPoint&, MTPoint, float) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f18b28 (    0x98) MTParserPath::applyAbsoluteForceHysteresis(float, float&, float, MTPathFilterParameters const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f18bc0 (    0xdc) MTParserPath::updateAngularHysteresisCenter(float*, float, float) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f18c9c (    0x1c) MTParserPath::weakenDampedVelocity(float) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f18cb8 (   0x10c) MTParserPath::updateDampedVelocity(MTPathStates const&, MTPathFilterParameters const&, float) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f18dc4 (   0x10c) MTParserPath::computeDivingButtonChangeInstability(MTPathStates const&, MTPathFilterParameters const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f18ed0 (   0x1bc) MTParserPath::isStuckOnDivingRegion(MTPathStates const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1908c (    0x40) MTParserPath::setPathSpeedSymmetries(float, float) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f190cc (    0x14) MTParserPath::clearPathSpeedSymmetries() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f190e0 (   0x500) MTParserPath::measureInstability(MTPathStates const&, MTPathFilterParameters const&, float*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f195e0 (   0x9b8) MTParserPath::filterContactForScreenUI(MTPathStates const&, MTSurfaceDimensions const&, MTPathFilterParameters const&, MTHMFingerTipOffsetParameters const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f19f98 (    0xe8) MTParserPath::correctAndQuantizeRadius(MTPathFilterParameters const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1a080 (    0xac) (null) [FUNC, FunctionStarts] 
                0x00000001e6f1a12c (    0x44) MTParserPath::stableAndMoved() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1a170 (    0x64) MTParserPath::generateFlagsEventMaskBits(MTContact const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1a1d4 (    0x18) MTChordTable::areChordFingersContiguous(int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1a1ec (    0xd8) MTChordTable::MTChordTable(MTHandIdentity, char*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1a2c4 (    0xa8) MTChordTable::clearAllChordsInTable() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1a36c (     0x4) MTChordTable::MTChordTable(MTHandIdentity, char*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1a370 (    0x58) MTChordTable::~MTChordTable() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1a3c8 (    0x58) MTChordTable::~MTChordTable() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1a420 (    0x68) MTChordTable::~MTChordTable() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1a488 (     0x4) MTChordTable::clearChordCyclingState() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1a48c (    0x28) MTChordTable::getFingerMaskForLookup(MTHandStatistics&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1a4b4 (    0x40) MTChordTable::fingerComboToChordSpecifier(unsigned int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1a4f4 (    0xf8) MTChordTable::getChordVectForCombo(unsigned int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1a5ec (    0x98) MTChordTable::hasTwoFingerOrientationEvents() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1a684 (    0xc0) MTChordTable::getMinThumbSpecificFingerCount() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1a744 (    0xc4) MTChordTable::findMatchingChord(unsigned int, bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1a808 (    0x84) MTChordTable::copyChordIntoTable(MTChordGestureSet&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1a88c (    0x3c) (null) [FUNC, FunctionStarts] 
                0x00000001e6f1a8c8 (    0x98) (null) [FUNC, FunctionStarts] 
                0x00000001e6f1a960 (    0x90) (null) [FUNC, FunctionStarts] 
                0x00000001e6f1a9f0 (    0x3c) (null) [FUNC, FunctionStarts] 
                0x00000001e6f1aa2c (    0x54) (null) [FUNC, FunctionStarts] 
                0x00000001e6f1aa80 (    0x58) (null) [FUNC, FunctionStarts] 
                0x00000001e6f1aad8 (   0x104) (null) [FUNC, FunctionStarts] 
                0x00000001e6f1abdc (    0x78) (null) [FUNC, FunctionStarts] 
                0x00000001e6f1ac54 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001e6f1ac6c (    0x48) (null) [FUNC, FunctionStarts] 
                0x00000001e6f1acb4 (    0xc0) (null) [FUNC, FunctionStarts] 
                0x00000001e6f1ad74 (    0x38) (null) [FUNC, FunctionStarts] 
                0x00000001e6f1adac (    0x54) (null) [FUNC, FunctionStarts] 
                0x00000001e6f1ae00 (    0x34) (null) [FUNC, FunctionStarts] 
                0x00000001e6f1ae34 (    0x48) (null) [FUNC, FunctionStarts] 
                0x00000001e6f1ae7c (    0x28) MTChordCycling::slideGestureOngoing(double) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1aea4 (    0x94) MTGestureConfig::slideOrDragOngoing(double, unsigned int) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1af38 (    0x20) MTGestureConfig::copyChordIntoHandTable(MTHandIdentity, MTChordGestureSet&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1af58 (    0x18) MTGestureConfig::getChordTableForHand(MTHandIdentity) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1af70 (    0xc8) MTGestureConfig::~MTGestureConfig() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1b038 (    0x10) MTGestureConfig::clearAllChords() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1b048 (     0x4) MTGestureConfig::~MTGestureConfig() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1b04c (    0x28) MTGestureConfig::~MTGestureConfig() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1b074 (   0x168) MTGestureConfig::MTGestureConfig(MTParserType, MTParserOptions, bool, MTDragManagerEventQueue&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1b1dc (     0x4) MTGestureConfig::MTGestureConfig(MTParserType, MTParserOptions, bool, MTDragManagerEventQueue&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1b1e0 (    0x64) (null) [FUNC, FunctionStarts] 
                0x00000001e6f1b244 (    0x60) (null) [FUNC, FunctionStarts] 
                0x00000001e6f1b2a4 (    0x58) (null) [FUNC, FunctionStarts] 
                0x00000001e6f1b2fc (   0x818) mtgp_InitUSBKeyNames [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1bb14 (    0x44) MTAppendGestureStartedToCollectionEvent [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1bb58 (    0x44) MTAppendGestureEndedToCollectionEvent [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1bb9c (    0x28) MTAppendChordMotionCodeToCollectionEvent [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1bbc4 (     0x8) MTAppendAbsoluteMouseEvent [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1bbcc (    0x90) MTAppendRelativeMouseEvent [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1bc5c (    0x74) MTAppendMouseButtonEvent [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1bcd0 (    0x80) MTAppendVelocityEvent [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1bd50 (    0xf0) MTAppendTranslationEvent [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1be40 (   0x2d0) MTAppendFluidSwipeEvent [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1c110 (    0x20) (null) [FUNC, FunctionStarts] 
                0x00000001e6f1c130 (    0x90) MTAppendSwipeEvent [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1c1c0 (   0x110) MTAppendForceGestureEvent [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1c2d0 (    0x80) MTAppendKeyboardEvent [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1c350 (    0x40) MTAppendKeystrokeEvent [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1c390 (    0x94) MTAppendModifierKeyEvent [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1c424 (    0x68) MTAppendZoomToggleEvent [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1c48c (    0x74) MTAppendShowDefinitionEvent [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1c500 (    0xa8) MTAppendBoundaryScrollEvent [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1c5a8 (    0xf4) MTAppendScrollEvent [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1c69c (    0x90) MTAppendMomentumEnableEvent [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1c72c (   0x104) MTAppendOrientationEvent [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1c830 (     0xc) MTHIDGetFullScalePixelDistance [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1c83c (   0x128) MTAppendOrientationEventWithTranslation [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1c964 (   0x2fc) MTAppendZoomRotateTranslateEvent [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1cc60 (    0xbc) MTSimpleEmbeddedHIDManagerV2::createManager(MultitouchHIDClass*, __MTDevice*, MTParserType, MTParserOptions) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1cd1c (   0x14c) MTSimpleEmbeddedHIDManagerV2::setDeviceDefaultProperties() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1ce68 (     0x8) MTSimpleEmbeddedHIDManagerV2::setPowerState(MTPowerState, bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1ce70 (     0x8) MTSimpleEmbeddedHIDManagerV2::setInputDetectionModeForOrientation(unsigned short, unsigned short) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1ce78 (     0x8) MTSimpleEmbeddedHIDManagerV2::setTouchMode(unsigned short, unsigned short) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1ce80 (     0x8) MTSimpleEmbeddedHIDManagerV2::setOrientation(unsigned short) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1ce88 (     0xc) MTSimpleEmbeddedHIDManagerV2::getName() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1ce94 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001e6f1ce98 (    0x28) (null) [FUNC, FunctionStarts] 
                0x00000001e6f1cec0 (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001e6f1cec8 (     0x8) MTActionEvent::MTActionEvent() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1ced0 (     0x8) MTActionEvent::MTActionEvent() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1ced8 (    0x10) MTActionEvent::MTActionEvent(unsigned short, unsigned int, unsigned short) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1cee8 (    0x10) MTActionEvent::MTActionEvent(unsigned short, unsigned int, unsigned short) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1cef8 (    0x14) MTActionEvent::MTActionEvent(MTActionEvent const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1cf0c (    0x14) MTActionEvent::MTActionEvent(MTActionEvent const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1cf20 (    0x1c) MTActionEvent::operator=(MTActionEvent const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1cf3c (    0x1c) MTActionEvent::getModifierMaskFromKeyCode() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1cf58 (    0x18) MTActionEvent::deriveGestureStartedType() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1cf70 (    0x18) MTActionEvent::deriveGestureEndedType() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1cf88 (    0x34) MTActionEvent::deriveFluidIOHIDEventType() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1cfbc (    0x3c) MTActionEvent::deriveFlavorForFluidIOHIDEventType() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1cff8 (    0x3c) MTDragManagerEventQueue::MTDragManagerEventQueue() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1d034 (    0x3c) MTDragManagerEventQueue::MTDragManagerEventQueue() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1d070 (    0xb4) MTDragManagerEventQueue::dispatchModifierUpdates(__IOHIDEvent*, unsigned int, bool, int, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1d124 (   0x168) MTDragManagerEventQueue::autoInsertModifierEvents(__IOHIDEvent*, MTActionEvent const*, unsigned int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1d28c (   0x130) MTDragManagerEventQueue::dispatchFluid(MTActionEvent const&, __IOHIDEvent*, MTGesturePhase, float, float, int, MT2DPlaneMotion const&, MTMotionAxesSpecifier) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1d3bc (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001e6f1d3cc (   0x53c) MTDragManagerEventQueue::dispatch(MTActionEvent const&, __IOHIDEvent*, MTGesturePhase, MTEventMickeys const*, MT2DPlaneMotion const&, MTMotionAxesSpecifier, MTChordSpecifier, double) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1d908 (    0x30) (null) [FUNC, FunctionStarts] 
                0x00000001e6f1d938 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001e6f1d948 (    0xe0) MTGesture::dispatchEvents(MTDragManagerEventQueue&, __IOHIDEvent*, MTGesturePhase, MTEventMickeys const*, MT2DPlaneMotion const&, MTMotionAxesSpecifier, MTChordSpecifier, double) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1da28 (    0x18) MTDragManagerEventQueue::enableAutoReleaseOfMultiFingerDrag() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1da40 (    0x9c) MTDragManagerEventQueue::forceButtonChange(__IOHIDEvent*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1dadc (    0x5c) MTDragManagerEventQueue::ready2autoReleaseModifiers(MTGestureConfig const&, double, unsigned int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1db38 (    0xe4) MTDragManagerEventQueue::serviceEventQueue(__IOHIDEvent*, MTGestureConfig&, double, unsigned int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1dc1c (    0x1c) MTDragManagerEventQueue::startMomentum(MTChordCycling&, __IOHIDEvent*, MTMomentumSubType) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1dc38 (    0x18) MTDragManagerEventQueue::stopMomentum(MTChordCycling&, __IOHIDEvent*, MTMomentumSubType) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1dc50 (     0xc) (null) [FUNC, FunctionStarts] 
                0x00000001e6f1dc5c (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001e6f1dc64 (    0xdc) MTTrackpadEmbeddedHIDManager::createManager(MultitouchHIDClass*, __MTDevice*, MTParserType, MTParserOptions) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1dd40 (    0x10) MTTrackpadEmbeddedHIDManager::initialize(MultitouchHIDClass*, __MTDevice*, MTParserType, MTParserOptions) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1dd50 (    0x44) MTTrackpadEmbeddedHIDManager::finalize() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1dd94 (    0x94) MTTrackpadEmbeddedHIDManager::createEventDispatcher() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1de28 (    0x8c) MTTrackpadEmbeddedHIDManager::setDeviceAccelerationData(__CFDictionary*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1deb4 (   0x13c) MTTrackpadEmbeddedHIDManager::setPluginDefaultProperties() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1dff0 (    0x14) MTTrackpadEmbeddedHIDManager::getUserPrefs(mt_UserPreference const**) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1e004 (    0xa8) MTTrackpadEmbeddedHIDManager::setDeviceDefaultProperties() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1e0ac (    0xd8) MTTrackpadEmbeddedHIDManager::copyProperty(__CFString const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1e184 (    0xb0) MTTrackpadEmbeddedHIDManager::renameUserFacingKeys(__CFString const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1e234 (    0x44) MTTrackpadEmbeddedHIDManager::setProperty(__CFString const*, void const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1e278 (   0x45c) MTTrackpadEmbeddedHIDManager::setPropertyInternal(_MTHIDPropertyType, void const*, bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1e6d4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001e6f1e6e4 (   0x214) MTTrackpadEmbeddedHIDManager::setHostState() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1e8f8 (    0xcc) MTTrackpadEmbeddedHIDManager::setOrientation(unsigned short) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1e9c4 (    0xcc) MTTrackpadEmbeddedHIDManager::setPowerState(MTPowerState, bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1ea90 (    0xcc) MTTrackpadEmbeddedHIDManager::setPowerStateWithReset(MTPowerState, bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1eb5c (    0x4c) MTTrackpadEmbeddedHIDManager::wasScheduledOnDispatchQueue(dispatch_queue_s*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1eba8 (    0x50) MTTrackpadEmbeddedHIDManager::wasUnscheduledFromDispatchQueue(dispatch_queue_s*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1ebf8 (    0xac) MTTrackpadEmbeddedHIDManager::handleContactFrame(__MTDevice*, MTContact*, int, double, unsigned long long, void*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1eca4 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001e6f1eca8 (    0x28) (null) [FUNC, FunctionStarts] 
                0x00000001e6f1ecd0 (    0x40) MTSlideGesture::MTSlideGesture() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1ed10 (    0x20) MTSlideGesture::clearIntegrationState() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1ed30 (    0x40) MTSlideGesture::MTSlideGesture() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1ed70 (    0xe0) MTSlideGesture::MTSlideGesture(flags4slide_t, unsigned int, float, float, MTGestureMotionParams&, std::__1::vector<MTActionEvent, std::__1::allocator<MTActionEvent>>&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1ee50 (     0x8) MTSlideGesture::MTSlideGesture(flags4slide_t, unsigned int, float, float, MTGestureMotionParams&, std::__1::vector<MTActionEvent, std::__1::allocator<MTActionEvent>>&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1ee58 (    0xc0) MTSlideGesture::MTSlideGesture(MTSlideGesture const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1ef18 (     0x4) MTSlideGesture::MTSlideGesture(MTSlideGesture const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1ef1c (    0x94) MTSlideGesture::operator=(MTSlideGesture const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1efb0 (    0x50) (null) [FUNC, FunctionStarts] 
                0x00000001e6f1f000 (    0x74) MTSlideGesture::getDegreesOfFreedomMask() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1f074 (    0x4c) MTSlideGesture::relativeSensitivity(int) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1f0c0 (   0x1cc) MTSlideGesture::sendSlideKeys(MTHandStatistics const&, MTHandMotion const&, MTDragManagerEventQueue&, __IOHIDEvent*, MTChordIntegrating&, short, double) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1f28c (    0xbc) MTSlideGesture::sendSlideMickeys(MTHandStatistics const&, MTHandMotion const&, MTDragManagerEventQueue&, __IOHIDEvent*, MTChordIntegrating&, MTEventMickeys const&, double) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1f348 (    0x74) MTSlideGesture::cumulativeMotionMagnitude() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1f3bc (    0x84) MTSlideGesture::decayAxisIntegrator(MTChordIntegrating const&, double, float&, float) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1f440 (    0x28) MTSlideGesture::inactivityExtraCommitMultiplier(double, double&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1f468 (    0x44) MTSlideGesture::squelchCommitMultiplierForDirectionReversals(int, float&, float&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1f4ac (   0x1c0) MTSlideGesture::integrateAxisMotion(MTHandStatistics const&, MTHandMotion const&, MTDragManagerEventQueue const&, MTChordIntegrating const&, double, int, float) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1f66c (    0x50) MTSlideGesture::decayRecentDisplacement(MTHandStatistics const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1f6bc (    0x14) MTSlideGesture::recordCommittedDisplacement(float) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1f6d0 (    0x3c) MTSlideGesture::thresholdAxisMotion(MTHandStatistics const&, MTHandMotion const&, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1f70c (    0x8c) MTSlideGesture::suppressVelocityFromMouseFeeback(int, MTHandMotion const&, float) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1f798 (   0x180) MTSlideGesture::accelerateAxisMotion(int, MTHandStatistics const&, MTHandMotion const&, float, bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1f918 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001e6f1f928 (    0x78) MTSlideGesture::increasingSigmoidFromTdiff(double, double, int) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1f9a0 (    0x90) MTSlideGesture::canOverrideLockOn(MTSlideGesture const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1fa30 (   0x100) MTSlideGesture::canPunishSomeMoving(MTHandStatistics const&, MTChordIntegrating&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1fb30 (   0x1a0) MTSlideGesture::someMovingMultiplier(MTHandStatistics const&, MTHandMotion const&, MTChordIntegrating&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1fcd0 (   0x130) MTSlideGesture::integrateManipulativeGesture(MTHandStatistics const&, MTHandMotion const&, MTDragManagerEventQueue const&, MTChordIntegrating&, double, float) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1fe00 (   0x134) MTSlideGesture::fireManipulativeGesture(MTHandStatistics const&, MTHandMotion const&, MTDragManagerEventQueue&, __IOHIDEvent*, MTChordIntegrating&, double) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f1ff34 (   0x298) MTSlideGesture::integrateFluidGesture(MTHandStatistics const&, MTHandMotion const&, MTChordIntegrating&, float) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f201cc (   0x1f8) MTSlideGesture::integrateMotionWithinArc(MTHandStatistics const&, MTHandMotion const&, float, bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f203c4 (    0x28) MTSlideGesture::updateFluidPeak() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f203ec (    0x64) MTSlideGesture::updateFluidMomentum(MTHandStatistics const&, MTChordIntegrating&, float) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f20450 (    0xb0) MTSlideGesture::cumulativeSwipeToDiscreteDelta() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f20500 (    0x10) MTSlideGesture::peakSwipePercentage() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f20510 (    0x10) MTSlideGesture::fluidSwipePercentage() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f20520 (    0x10) MTSlideGesture::fluidMomentumPercentage_s(bool) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f20530 (    0xfc) MTSlideGesture::hasSufficientFluidMomentum(MTHandStatistics const&, bool) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f2062c (    0x20) MTSlideGesture::fluidDOFPercentageDeltas() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f2064c (   0x174) MTSlideGesture::fireFluidGesture(MTHandStatistics const&, MTHandMotion const&, MTDragManagerEventQueue&, __IOHIDEvent*, MTChordIntegrating&, double) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f207c0 (   0x154) MTSlideGesture::integrateCommandGesture(MTHandStatistics const&, MTHandMotion const&, MTChordIntegrating&, float) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f20914 (   0x134) MTSlideGesture::fireCommandGesture(MTHandStatistics const&, MTHandMotion const&, MTDragManagerEventQueue&, __IOHIDEvent*, MTChordIntegrating&, double) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f20a48 (    0xf4) MTSlideGesture::isLockedOutByTriggeredSlide(MTHandStatistics const&, MTChordIntegrating const&, bool) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f20b3c (    0xb4) MTSlideGesture::isActiveEdgeSlide(MTHandStatistics const&, MTChordIntegrating const&, bool) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f20bf0 (   0x240) MTSlideGesture::isBlocked(MTHandStatistics const&, MTHandMotion const&, MTChordIntegrating&, bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f20e30 (   0x158) MTSlideGesture::integrateGesture(MTHandStatistics const&, MTHandMotion const&, MTDragManagerEventQueue const&, MTChordIntegrating&, double) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f20f88 (    0x38) MTSlideGesture::fireGesture(MTHandStatistics const&, MTHandMotion const&, MTDragManagerEventQueue&, __IOHIDEvent*, MTChordIntegrating&, double) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f20fc0 (    0xbc) (null) [FUNC, FunctionStarts] 
                0x00000001e6f2107c (    0x44) (null) [FUNC, FunctionStarts] 
                0x00000001e6f210c0 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001e6f210d8 (    0x38) (null) [FUNC, FunctionStarts] 
                0x00000001e6f21110 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001e6f21128 (    0x5c) (null) [FUNC, FunctionStarts] 
                0x00000001e6f21184 (    0x34) (null) [FUNC, FunctionStarts] 
                0x00000001e6f211b8 (   0x16c) (null) [FUNC, FunctionStarts] 
                0x00000001e6f21324 (    0x48) MTSurfaceDimensions::MTSurfaceDimensions(MTRect, MTSize) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f2136c (    0x24) MTSurfaceDimensions::deriveScreenPixelsFromResolution(MTSize) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f21390 (    0x48) MTSurfaceDimensions::MTSurfaceDimensions(MTRect, MTSize) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f213d8 (     0x4) MTSurfaceDimensions::~MTSurfaceDimensions() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f213dc (     0x4) MTSurfaceDimensions::~MTSurfaceDimensions() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f213e0 (     0x4) MTSurfaceDimensions::~MTSurfaceDimensions() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f213e4 (    0x28) MTSurfaceDimensions::updatePixelResolution_mm(MTSize) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f2140c (    0x30) MTSurfaceDimensions::updateScreenBounds_mm(MTRect) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f2143c (    0x8c) MTSurfaceDimensions::minDistanceToEdge_mm(MTPoint, bool, bool) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f214c8 (    0x10) MTSurfaceDimensions::convertPixelsToSurfaceFraction(MTPoint) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f214d8 (    0x28) MTSurfaceDimensions::distanceToTopEdge_mm(MTPoint) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f21500 (    0x14) MTSurfaceDimensions::distanceToBottomEdge_mm(MTPoint) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f21514 (    0x28) MTSurfaceDimensions::distanceToRightEdge_mm(MTPoint) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f2153c (    0x14) MTSurfaceDimensions::distanceToLeftEdge_mm(MTPoint) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f21550 (    0x1c) MTSurfaceDimensions::convertPixelDeltaToMillimeters(float, bool) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f2156c (    0x18) MTSurfaceDimensions::convertPixelVelocityToMillimetersPerSecond(float) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f21584 (   0x10c) MTSurfaceDimensions::convertPixelDeltaToMillimetersPerSecond(float, double) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f21690 (   0x118) MTSurfaceDimensions::convertPixelDeltasToMillimetersPerSecond(MTPoint, double) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f217a8 (    0x18) MTSurfaceDimensions::convertPixelsToMillimeters(MTPoint) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f217c0 (    0x20) MTSurfaceDimensions::convertMillimetersToPixels(MTPoint) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f217e0 (    0x10) MTSurfaceDimensions::convertMillimetersToSurfaceFraction(MTPoint) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f217f0 (    0x10) MTSurfaceDimensions::convertSurfaceFractionToPixels(MTPoint) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f21800 (    0x20) MTSurfaceDimensions::convertSurfaceFractionToMillimeters(MTPoint, bool) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f21820 (    0x14) MTSurfaceDimensions::convertSurfaceFractionVelocityToPixelsPerSecond(MTPoint) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f21834 (    0xd4) MTMouseEmbeddedHIDManager::createManager(MultitouchHIDClass*, __MTDevice*, MTParserType, MTParserOptions) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f21908 (    0x94) MTMouseEmbeddedHIDManager::createEventDispatcher() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f2199c (     0xc) MTMouseEmbeddedHIDManager::getUserPrefs(mt_UserPreference const**) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f219a8 (    0xa8) MTMouseEmbeddedHIDManager::setDeviceDefaultProperties() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f21a50 (    0x8c) MTMouseEmbeddedHIDManager::setDeviceAccelerationData(__CFDictionary*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f21adc (   0x268) MTMouseEmbeddedHIDManager::setPropertyInternal(_MTHIDPropertyType, void const*, bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f21d44 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001e6f21d48 (    0x28) (null) [FUNC, FunctionStarts] 
                0x00000001e6f21d70 (    0x14) MTSLGLogger::MTSLGLogger() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f21d84 (    0x14) MTSLGLogger::MTSLGLogger() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f21d98 (    0x38) MTSLGLogger::~MTSLGLogger() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f21dd0 (    0x4c) MTSLGLogger::unregisterControlInterface() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f21e1c (     0x4) MTSLGLogger::~MTSLGLogger() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f21e20 (     0x8) MTSLGLogger::createLogger() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f21e28 (   0x144) MTSLGLogger::registerControlInterface(dispatch_queue_s*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f21f6c (   0x15c) (null) [FUNC, FunctionStarts] 
                0x00000001e6f220c8 (    0x48) MTSLGLogger::removeControlService() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f22110 (   0x168) MTSLGLogger::addControlService(unsigned int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f22278 (    0x5c) (null) [FUNC, FunctionStarts] 
                0x00000001e6f222d4 (    0x60) MTSLGLogger::isSLGEnabled() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f22334 (    0x94) MTSLGLogger::logString(__CFString const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f223c8 (    0xd4) MTSLGLogger::logPaths(MTContact*, unsigned int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f2249c (   0x38c) MTSLGLogger::createPathsDescriptor(MTContact*, unsigned int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f22828 (    0xcc) MTSLGLogger::logImages(short*, MTImageDescriptor*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f228f4 (   0x1e0) MTSLGLogger::createImageDictionary(short*, MTImageDescriptor*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f22ad4 (    0xc0) MTSLGLogger::prepare() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f22b94 (    0x28) (null) [FUNC, FunctionStarts] 
                0x00000001e6f22bbc (    0x1c) (null) [FUNC, FunctionStarts] 
                0x00000001e6f22bd8 (     0xc) (null) [FUNC, FunctionStarts] 
                0x00000001e6f22be4 (    0x40) MTPListGestureConfig::MTPListGestureConfig(MTParserType, MTParserOptions, bool, MTDragManagerEventQueue&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f22c24 (    0x40) MTPListGestureConfig::MTPListGestureConfig(MTParserType, MTParserOptions, bool, MTDragManagerEventQueue&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f22c64 (    0xa4) MTPListGestureConfig::~MTPListGestureConfig() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f22d08 (     0x4) MTPListGestureConfig::~MTPListGestureConfig() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f22d0c (    0x28) MTPListGestureConfig::~MTPListGestureConfig() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f22d34 (    0x64) MTPListGestureConfig::setParseErrorString(__CFString const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f22d98 (   0x34c) MTPListGestureConfig::eventTypeCFStringToCode(__CFString const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f230e4 (    0x60) MTPListGestureConfig::keyCodeCFStringToCode(__CFString const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f23144 (   0x1b0) MTPListGestureConfig::modifiersCFStringToMask(__CFString const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f232f4 (   0x2ac) MTPListGestureConfig::parseCreateActionEvent(__CFDictionary const*, std::__1::vector<MTActionEvent, std::__1::allocator<MTActionEvent>>&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f235a0 (   0x134) MTPListGestureConfig::lookupOrParseActionEvents(__CFDictionary const*, std::__1::vector<MTActionEvent, std::__1::allocator<MTActionEvent>>&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f236d4 (   0x40c) MTPListGestureConfig::parseGestureMotionCode(__CFDictionary const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f23ae0 (    0xd0) MTPListGestureConfig::parseFloatValue(__CFDictionary const*, __CFString const*, float*, __CFString const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f23bb0 (   0x280) MTPListGestureConfig::parseMotionSensitivity(__CFDictionary const*, MTGestureMotionParams&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f23e30 (   0x11c) MTPListGestureConfig::extractMotionSensitivity(__CFDictionary const*, MTGestureMotionParams&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f23f4c (   0x198) MTPListGestureConfig::extractGestureCategory(__CFDictionary const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f240e4 (   0x954) MTPListGestureConfig::parseGesture(__CFDictionary const*, MTChordGestureSet&, MTGestureMotionParams&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f24a38 (    0x20) (null) [FUNC, FunctionStarts] 
                0x00000001e6f24a58 (   0x1f0) MTPListGestureConfig::extractChordTransitions(__CFDictionary const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f24c48 (   0x1a0) MTPListGestureConfig::parseGestureSet(__CFString const*, __CFDictionary const*, MTChordGestureSet&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f24de8 (   0x1a0) MTPListGestureConfig::parseChordSpecifier(__CFString const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f24f88 (     0x8) MTPListGestureConfig::parseHandIdentity(__CFString const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f24f90 (   0x318) MTPListGestureConfig::parseChordGestureSetAndCopyIntoTable(__CFDictionary const*, __CFString const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f252a8 (    0x7c) (null) [FUNC, FunctionStarts] 
                0x00000001e6f25324 (   0x26c) MTPListGestureConfig::parseChordMappingsForHand(__CFString const*, __CFDictionary const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f25590 (    0xe0) MTPListGestureConfig::parseChordMappingPreferences(__CFDictionary const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f25670 (    0x64) MTPListGestureConfig::setChordMappingsDictionary(__CFDictionary const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f256d4 (    0x64) MTPListGestureConfig::setGestureSetsDictionary(__CFDictionary const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f25738 (    0x64) MTPListGestureConfig::setMotionSensitivitiesDictionary(__CFDictionary const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f2579c (    0x64) MTPListGestureConfig::setActionEventsDictionary(__CFDictionary const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f25800 (   0x148) MTPListGestureConfig::parseCreateGestureConfig(__CFString const**) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f25948 (    0x60) MTPListGestureConfig::releaseParsedDictionaries() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f259a8 (   0x104) MTPListGestureConfig::addActionEventToDictionary(__CFDictionary*, __CFString const*, __CFString const*, __CFString const*, __CFString const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f25aac (   0x128) MTPListGestureConfig::addGestureToArray(__CFArray*, __CFString const*, __CFString const*, __CFString const*, __CFString const*, __CFString const*, __CFString const*, void const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f25bd4 (    0x9c) MTPListGestureConfig::addChordMappingToArray(__CFArray*, __CFString const*, __CFString const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f25c70 (   0x12c) (null) [FUNC, FunctionStarts] 
                0x00000001e6f25d9c (    0x88) (null) [FUNC, FunctionStarts] 
                0x00000001e6f25e24 (   0x104) (null) [FUNC, FunctionStarts] 
                0x00000001e6f25f28 (    0x78) (null) [FUNC, FunctionStarts] 
                0x00000001e6f25fa0 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001e6f25fb8 (    0x48) (null) [FUNC, FunctionStarts] 
                0x00000001e6f26000 (    0xc0) (null) [FUNC, FunctionStarts] 
                0x00000001e6f260c0 (    0x38) (null) [FUNC, FunctionStarts] 
                0x00000001e6f260f8 (    0x48) (null) [FUNC, FunctionStarts] 
                0x00000001e6f26140 (    0x38) (null) [FUNC, FunctionStarts] 
                0x00000001e6f26178 (    0x5c) (null) [FUNC, FunctionStarts] 
                0x00000001e6f261d4 (    0x38) MTChordGestureSet::MTChordGestureSet() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f2620c (    0x38) MTChordGestureSet::MTChordGestureSet() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f26244 (    0xc0) MTChordGestureSet::MTChordGestureSet(MTChordSpecifier, unsigned short, unsigned int, char const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f26304 (     0x4) MTChordGestureSet::MTChordGestureSet(MTChordSpecifier, unsigned short, unsigned int, char const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f26308 (   0x1b8) MTChordGestureSet::MTChordGestureSet(MTChordGestureSet const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f264c0 (     0x4) MTChordGestureSet::MTChordGestureSet(MTChordGestureSet const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f264c4 (    0xb8) MTChordGestureSet::operator=(MTChordGestureSet const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f2657c (    0x94) MTChordGestureSet::chordGestureSetEquals(MTChordGestureSet const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f26610 (    0xc0) (null) [FUNC, FunctionStarts] 
                0x00000001e6f266d0 (    0xa4) MTChordGestureSet::chordSlidesEqual(MTChordGestureSet const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f26774 (    0xe4) (null) [FUNC, FunctionStarts] 
                0x00000001e6f26858 (    0xc4) MTChordGestureSet::isEmpty() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f2691c (    0x7c) MTChordGestureSet::hasEnabledOrientationEvents(MTChordTable const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f26998 (    0x7c) MTChordGestureSet::hasEnabledFluidNavigation(MTChordTable const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f26a14 (    0x7c) MTChordGestureSet::hasEnabledFluidDock(MTChordTable const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f26a90 (   0x188) MTChordGestureSet::hasActiveEdgeSlide(MTHandStatistics const&, MTChordCycling const&, bool) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f26c18 (    0x7c) (null) [FUNC, FunctionStarts] 
                0x00000001e6f26c94 (    0x38) MTChordGestureSet::chk4MinChordMotion(MTHandMotion const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f26ccc (    0x50) MTChordGestureSet::chk4ChordPause(MTHandStatistics const&, MTHandMotion const&, double) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f26d1c (    0xb4) MTChordGestureSet::chk4ChordTimein(MTHandStatistics const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f26dd0 (    0x54) MTChordGestureSet::isChordReadyToIntegrate(MTHandStatistics const&, MTHandMotion const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f26e24 (   0x184) (null) [FUNC, FunctionStarts] 
                0x00000001e6f26fa8 (    0x3c) (null) [FUNC, FunctionStarts] 
                0x00000001e6f26fe4 (    0x54) (null) [FUNC, FunctionStarts] 
                0x00000001e6f27038 (    0x60) (null) [FUNC, FunctionStarts] 
                0x00000001e6f27098 (    0xa8) (null) [FUNC, FunctionStarts] 
                0x00000001e6f27140 (    0x38) (null) [FUNC, FunctionStarts] 
                0x00000001e6f27178 (    0x50) (null) [FUNC, FunctionStarts] 
                0x00000001e6f271c8 (    0x40) MTChordIntegrating::MTChordIntegrating() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f27208 (    0xc4) MTChordIntegrating::clearIntegrationState() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f272cc (    0x7c) (null) [FUNC, FunctionStarts] 
                0x00000001e6f27348 (     0x4) MTChordIntegrating::MTChordIntegrating() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f2734c (    0x40) MTChordIntegrating::MTChordIntegrating(MTChordGestureSet const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f2738c (     0x4) MTChordIntegrating::MTChordIntegrating(MTChordGestureSet const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f27390 (    0x3c) MTChordIntegrating::operator=(MTChordGestureSet const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f273cc (    0xf0) MTChordIntegrating::nullify() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f274bc (    0xac) MTChordIntegrating::hasChordStabilized(MTHandStatistics const&, MTHandMotion const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f27568 (    0xcc) MTChordIntegrating::getActiveDegreesOfFreedomMask(MTHandStatistics const&, MTChordCycling const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f27634 (    0x30) MTChordIntegrating::beginChordIntegration(MTHandStatistics const&, MTHandMotion const&, __IOHIDEvent*, MTChordCycling&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f27664 (    0xd4) MTChordIntegrating::endChordIntegration(MTHandStatistics const&, MTHandMotion const&, __IOHIDEvent*, MTChordCycling&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f27738 (   0x2fc) MTChordIntegrating::sendLiftSlideEvents(MTHandStatistics const&, MTHandMotion const&, MT2DPlaneMotion const&, __IOHIDEvent*, MTChordCycling&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f27a34 (   0x17c) MTChordIntegrating::possiblyStartFluidMomentum(MTHandStatistics const&, __IOHIDEvent*, MTChordCycling&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f27bb0 (   0x270) MTChordIntegrating::commit2Chord(MTHandStatistics const&, MTHandMotion const&, MTDragManagerEventQueue&, __IOHIDEvent*, unsigned int, double) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f27e20 (   0x2e4) MTChordIntegrating::sendSlidePreamble(MTHandStatistics const&, MTHandMotion const&, MTDragManagerEventQueue&, __IOHIDEvent*, MTSlideGesture*, unsigned int, double) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f28104 (    0x1c) MTChordIntegrating::clearMomentumFilters() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f28120 (    0x58) MTChordIntegrating::resetMostIntegrators(MTSlideGesture*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f28178 (    0x2c) MTChordIntegrating::momentumHistoryTimedOut(double) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f281a4 (    0xb4) MTChordIntegrating::momentumFilterAlpha(MTHandStatistics const&, bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f28258 (    0x14) MTChordIntegrating::filteredMomentumSquared() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f2826c (    0x44) MTChordIntegrating::decayMomentumFilters(MTHandStatistics const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f282b0 (   0x1c4) MTChordIntegrating::updateMomentumMickeys(MTEventMickeys const&, MTHandStatistics const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f28474 (    0x20) MTChordIntegrating::significantMomentumMickeys(float) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f28494 (    0x58) MTChordIntegrating::switchingVerticalToHorizontal(float, bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f284ec (    0x50) MTChordIntegrating::markMomentumPause(MTHandStatistics const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f2853c (    0xe4) MTChordIntegrating::markMomentumPause(MTHandStatistics const&, float, double&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f28620 (    0x40) MTChordIntegrating::recentMomentumPause(MTHandStatistics const&, bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f28660 (   0x288) MTChordIntegrating::possiblyStartMomentum(MTHandStatistics const&, __IOHIDEvent*, MTChordCycling&, double) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f288e8 (    0x40) MTChordIntegrating::clearMickeysSinceLastTouchdown() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f28928 (    0x60) MTChordIntegrating::waitForFastShotVerification(MTHandStatistics const&, MTHandMotion const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f28988 (   0x5e8) MTChordIntegrating::continueChordIntegration(MTHandStatistics const&, MTHandMotion const&, __IOHIDEvent*, MTChordCycling&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f28f70 (    0x2c) MTSimpleEventDispatcher::MTSimpleEventDispatcher() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f28f9c (    0x2c) MTSimpleEventDispatcher::MTSimpleEventDispatcher() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f28fc8 (    0x70) MTSimpleEventDispatcher::createDispatcher(MTSimpleHIDManager*, __MTDevice*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f29038 (   0x108) MTSimpleEventDispatcher::initialize(MTSimpleHIDManager*, __MTDevice*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f29140 (     0x8) MTSimpleEventDispatcher::getMTDevice() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f29148 (     0x8) MTSimpleEventDispatcher::getOwner() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f29150 (     0x4) MTSimpleEventDispatcher::~MTSimpleEventDispatcher() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f29154 (     0x4) MTSimpleEventDispatcher::~MTSimpleEventDispatcher() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f29158 (     0x4) MTSimpleEventDispatcher::~MTSimpleEventDispatcher() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f2915c (    0x78) MTSimpleEventDispatcher::finalize() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f291d4 (    0x2c) MTSimpleEventDispatcher::retain() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f29200 (    0xa4) MTSimpleEventDispatcher::release() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f292a4 (     0x8) MTSimpleEventDispatcher::setDispatchAllHIDEvents(bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f292ac (     0x8) MTSimpleEventDispatcher::shouldDispatchAllHIDEvents() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f292b4 (    0x40) MTSimpleEventDispatcher::setHIDDispatchQueue(dispatch_queue_s*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f292f4 (     0x8) MTSimpleEventDispatcher::getHIDDispatchQueue() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f292fc (     0xc) MTSimpleEventDispatcher::setEventCallback(void (*)(void*, void*, void*, __IOHIDEvent*, unsigned int), void*, void*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f29308 (    0x74) MTSimpleEventDispatcher::sendAttachNotification() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f2937c (    0xdc) MTSimpleEventDispatcher::sendDetachNotification() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f29458 (    0x98) MTSimpleEventDispatcher::appendDeviceInfoToCollection(__IOHIDEvent*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f294f0 (    0xc4) MTSimpleEventDispatcher::handleEvent(__IOHIDEvent*, unsigned int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f295b4 (     0x8) MTSimpleEventDispatcher::shouldDispatchEvent(__IOHIDEvent*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f295bc (   0x2d8) MTSimpleEventDispatcher::dispatchEvent(__IOHIDEvent*, unsigned int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f29894 (    0xd8) MTSimpleEventDispatcher::recordHIDEvent(__IOHIDEvent*, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f2996c (   0x108) MTSimpleEventDispatcher::copyDebugData() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f29a74 (    0x1c) MTSimpleEmbeddedEventDispatcher::markEventDispatchAllMode(__IOHIDEvent*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f29a90 (    0xc4) MTSimpleEmbeddedEventDispatcher::createDispatcher(MTSimpleEmbeddedHIDManager*, __MTDevice*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f29b54 (    0xf4) MTSimpleEmbeddedEventDispatcher::shouldDispatchEvent(__IOHIDEvent*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f29c48 (    0xc4) MTSimpleEmbeddedStylusEventDispatcher::createDispatcher(MTSimpleEmbeddedStylusHIDManager*, __MTDevice*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f29d0c (     0x8) MTSimpleEmbeddedStylusEventDispatcher::shouldDispatchEvent(__IOHIDEvent*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f29d14 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001e6f29d18 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001e6f29d1c (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001e6f29d20 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001e6f29d24 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001e6f29d28 (    0xdc) MTPreferencesGetAppIntegerValue(__CFString const*, __CFString const*, unsigned char*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f29e04 (   0x178) MTPreferencesGetAppBooleanValue(__CFString const*, __CFString const*, unsigned char*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f29f7c (    0xa8) MTTrackpadEventDispatcher::createDispatcher(MTTrackpadHIDManager*, __MTDevice*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f2a024 (   0x10c) MTTrackpadEventDispatcher::initialize(MTSimpleHIDManager*, __MTDevice*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f2a130 (    0x70) MTGestureStats::create(__MTDevice*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f2a1a0 (   0x12c) (null) [FUNC, FunctionStarts] 
                0x00000001e6f2a2cc (    0x64) MTTrackpadEventDispatcher::finalize() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f2a330 (    0x84) MTGestureStats::release() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f2a3b4 (   0x6bc) MTTrackpadEventDispatcher::handleEvent(__IOHIDEvent*, unsigned int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f2aa70 (   0x2c4) MTTrackpadEventDispatcher::checkForMomentumCancellation(__IOHIDEvent*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f2ad34 (    0xc4) MTTrackpadEventDispatcher::checkForMomentumInitiation(__IOHIDEvent*, float&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f2adf8 (    0x10) MTTrackpadEventDispatcher::isStdScrollInProgress(unsigned int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f2ae08 (    0xac) MTGestureStats::updateWithEvent(__IOHIDEvent*, MTTapDragCycleState, bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f2aeb4 (    0xb0) MTGestureStats::logForceEvent(__IOHIDEvent*, int, float, float) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f2af64 (    0xbc) MTGestureStats::logForceThreshold(__IOHIDEvent*, int, int, float, float) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f2b020 (    0xa4) MTGestureStats::logGestureEventWithForce(__IOHIDEvent*, float) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f2b0c4 (   0x114) MTTrackpadEventDispatcher::handleParserDisabled() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f2b1d8 (   0x38c) MTTrackpadEventDispatcher::updateFingerStats() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f2b564 (    0xc0) MTTrackpadEventDispatcher::updateClickState(bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f2b624 (    0x20) MTTrackpadEventDispatcher::getHIDPhaseFromScrollPhase(unsigned int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f2b644 (    0x24) MTTrackpadEventDispatcher::getNextScrollPhase(unsigned int, bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f2b668 (   0x11c) MTTrackpadEventDispatcher::setScrollMomentumDispatchRate(float) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f2b784 (    0x44) MTTrackpadEventDispatcher::dispatchMomentumScrollStartStopEvent(bool, bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f2b7c8 (    0xf4) MTTrackpadEventDispatcher::dispatchPointingEvent(int, int, unsigned int, unsigned long long, bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f2b8bc (   0x280) MTTrackpadEventDispatcher::dispatchScrollEvent(int, int, int, bool, float, bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f2bb3c (   0x2e8) MTTrackpadEventDispatcher::recordHIDEvent(__IOHIDEvent*, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f2be24 (    0x18) MTTrackpadEventDispatcher::shouldRecordAsGesture(unsigned int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f2be3c (    0x1c) MTTrackpadEventDispatcher::shouldRecord(unsigned int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f2be58 (   0x2f8) MTTrackpadEventDispatcher::copyDebugData() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f2c150 (   0x1f4) MTTrackpadEventDispatcher::momentumDecayRateAlpha(float, float, float, MTMomentumSubType) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f2c344 (   0x53c) MTTrackpadEventDispatcher::startMomentumTimerForEvent(__IOHIDEvent*, MTMomentumSubType, float&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f2c880 (   0x16c) MTTrackpadEventDispatcher::cancelOutstandingMomentumTimer(bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f2c9ec (    0xf4) MTTrackpadEventDispatcher::generateMomentumDeltas(MTTrackpadEventDispatcher::MomentumParams*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f2cae0 (     0xc) (null) [FUNC, FunctionStarts] 
                0x00000001e6f2caec (   0x2e8) MTTrackpadEventDispatcher::momentumCallbackFunction(dispatch_source_s*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f2cdd4 (     0x8) MTTrackpadEventDispatcher::wasUnscheduledFromDispatchQueue(dispatch_queue_s*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f2cddc (   0x314) MTTrackpadEventDispatcher::generateFrameIntervalMomentumDeltas(MTTrackpadEventDispatcher::MomentumParams*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f2d0f0 (    0x8c) MTTrackpadEventDispatcher::smoothBody(MTTrackpadEventDispatcher::MomentumCurveWalker*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f2d17c (    0x5c) MTTrackpadEventDispatcher::smoothTails(MTTrackpadEventDispatcher::MomentumCurveWalker*, MTTrackpadEventDispatcher::MomentumCurveWalker*, unsigned int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f2d1d8 (   0x14c) MTTrackpadEventDispatcher::forceCurveTailToMonotonicallyDecrease(MTTrackpadEventDispatcher::MomentumCurveWalker*, unsigned int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f2d324 (    0x84) MTTrackpadEventDispatcher::equalizeCurveLengths(MTTrackpadEventDispatcher::MomentumCurveWalker*, MTTrackpadEventDispatcher::MomentumCurveWalker*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f2d3a8 (   0x1f8) (null) [FUNC, FunctionStarts] 
                0x00000001e6f2d5a0 (   0x204) (null) [FUNC, FunctionStarts] 
                0x00000001e6f2d7a4 (   0x204) MTTrackpadEventDispatcher::interpolateFrameIntervalMomentumDeltas(MTTrackpadEventDispatcher::MomentumCurveWalker const*, MTTrackpadEventDispatcher::MomentumCurveWalker*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f2d9a8 (    0xbc) (null) [FUNC, FunctionStarts] 
                0x00000001e6f2da64 (   0x168) MTGestureStats::MTGestureStats() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f2dbcc (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001e6f2dbd4 (    0x7c) MTGestureStats::reportStats() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f2dc50 (     0x4) MTGestureStats::MTGestureStats() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f2dc54 (     0x4) MTGestureStats::~MTGestureStats() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f2dc58 (     0x4) MTGestureStats::~MTGestureStats() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f2dc5c (     0x4) MTGestureStats::~MTGestureStats() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f2dc60 (    0x60) MTGestureStats::initialize(__MTDevice*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f2dcc0 (    0x7c) MTGestureStats::finalize() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f2dd3c (    0x2c) MTGestureStats::retain() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f2dd68 (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001e6f2dd70 (    0xc0) MTGestureStats::_reportGestureCounts() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f2de30 (    0x48) (null) [FUNC, FunctionStarts] 
                0x00000001e6f2de78 (   0x428) MTGestureStats::_updateGestureCountsWithEvent(__IOHIDEvent*, MTTapDragCycleState, bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f2e2a0 (    0x84) MTGestureStats::updateWithButtonStates(unsigned int, unsigned int, unsigned int, bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f2e324 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001e6f2e33c (    0x88) MTGestureStats::_updateGestureCountsWithButtonStates(unsigned int, unsigned int, unsigned int, bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f2e3c4 (   0x228) (null) [FUNC, FunctionStarts] 
                0x00000001e6f2e5ec (    0x24) MTGestureStats::forceTypeFromBehaviorType(int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f2e610 (    0x2c) MTGestureStats::forceTypeString(MTGestureStats::ForceType) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f2e63c (    0x2c) MTGestureStats::gestureTypeString(MTGestureStats::GestureType) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f2e668 (    0x48) (null) [FUNC, FunctionStarts] 
                0x00000001e6f2e6b0 (    0xdc) MTGestureStats::_logForceThreshold(__IOHIDEvent*, int, int, float, float) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f2e78c (   0x14c) (null) [FUNC, FunctionStarts] 
                0x00000001e6f2e8d8 (    0x48) (null) [FUNC, FunctionStarts] 
                0x00000001e6f2e920 (    0xe4) MTGestureStats::_logForceBehaviorEvent(__IOHIDEvent*, int, float, float) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f2ea04 (   0x138) (null) [FUNC, FunctionStarts] 
                0x00000001e6f2eb3c (    0x44) (null) [FUNC, FunctionStarts] 
                0x00000001e6f2eb80 (   0x19c) MTGestureStats::_logGestureEventWithForce(__IOHIDEvent*, float) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f2ed1c (   0x100) MTGestureStats::_handleGestureEventWithForce(MTGestureStats::GestureType, float, bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f2ee1c (   0x118) (null) [FUNC, FunctionStarts] 
                0x00000001e6f2ef34 (    0x64) (null) [FUNC, FunctionStarts] 
                0x00000001e6f2ef98 (    0x68) (null) [FUNC, FunctionStarts] 
                0x00000001e6f2f000 (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001e6f2f008 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001e6f2f018 (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001e6f2f020 (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001e6f2f028 (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001e6f2f030 (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001e6f2f038 (    0x64) (null) [FUNC, FunctionStarts] 
                0x00000001e6f2f09c (    0x5c) (null) [FUNC, FunctionStarts] 
                0x00000001e6f2f0f8 (    0xf8) (null) [FUNC, FunctionStarts] 
                0x00000001e6f2f1f0 (    0x58) (null) [FUNC, FunctionStarts] 
                0x00000001e6f2f248 (   0x198) (null) [FUNC, FunctionStarts] 
                0x00000001e6f2f3e0 (    0x58) (null) [FUNC, FunctionStarts] 
                0x00000001e6f2f438 (    0x9c) (null) [FUNC, FunctionStarts] 
                0x00000001e6f2f4d4 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001e6f2f4ec (    0x38) (null) [FUNC, FunctionStarts] 
                0x00000001e6f2f524 (   0x48c) (null) [FUNC, FunctionStarts] 
                0x00000001e6f2f9b0 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001e6f2f9c8 (    0xa8) (null) [FUNC, FunctionStarts] 
                0x00000001e6f2fa70 (    0x88) (null) [FUNC, FunctionStarts] 
                0x00000001e6f2faf8 (   0x298) (null) [FUNC, FunctionStarts] 
                0x00000001e6f2fd90 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001e6f2fda8 (   0x1e4) (null) [FUNC, FunctionStarts] 
                0x00000001e6f2ff8c (    0xc8) (null) [FUNC, FunctionStarts] 
                0x00000001e6f30054 (    0xc4) (null) [FUNC, FunctionStarts] 
                0x00000001e6f30118 (    0x98) (null) [FUNC, FunctionStarts] 
                0x00000001e6f301b0 (   0x48c) (null) [FUNC, FunctionStarts] 
                0x00000001e6f3063c (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001e6f30654 (    0xa8) (null) [FUNC, FunctionStarts] 
                0x00000001e6f306fc (    0x88) (null) [FUNC, FunctionStarts] 
                0x00000001e6f30784 (   0x298) (null) [FUNC, FunctionStarts] 
                0x00000001e6f30a1c (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001e6f30a34 (   0x1e4) (null) [FUNC, FunctionStarts] 
                0x00000001e6f30c18 (    0xc8) (null) [FUNC, FunctionStarts] 
                0x00000001e6f30ce0 (    0xc4) (null) [FUNC, FunctionStarts] 
                0x00000001e6f30da4 (    0x98) (null) [FUNC, FunctionStarts] 
                0x00000001e6f30e3c (    0xfc) (null) [FUNC, FunctionStarts] 
                0x00000001e6f30f38 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001e6f30f50 (    0xa0) (null) [FUNC, FunctionStarts] 
                0x00000001e6f30ff0 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001e6f31008 (    0xa8) MTMouseEventDispatcher::createDispatcher(MTMouseHIDManager*, __MTDevice*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f310b0 (    0xe4) MTMouseEventDispatcher::shouldDispatchEvent(__IOHIDEvent*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f31194 (   0x12c) MTMouseEventDispatcher::dispatchEvent(__IOHIDEvent*, unsigned int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f312c0 (    0x64) (null) [FUNC, FunctionStarts] 
                0x00000001e6f31324 (    0x68) (null) [FUNC, FunctionStarts] 
                0x00000001e6f3138c (    0x4c) MTSimpleHIDManager::MTSimpleHIDManager() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f313d8 (   0x224) MTSimpleHIDManager::initialize(MultitouchHIDClass*, __MTDevice*, MTParserType, MTParserOptions) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f315fc (   0x190) MTSimpleHIDManager::start() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f3178c (     0x4) MTSimpleHIDManager::~MTSimpleHIDManager() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f31790 (     0x4) MTSimpleHIDManager::~MTSimpleHIDManager() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f31794 (     0x4) MTSimpleHIDManager::~MTSimpleHIDManager() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f31798 (   0x118) MTSimpleHIDManager::stop() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f318b0 (    0xe8) MTSimpleHIDManager::finalize() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f31998 (    0x3c) MTSimpleHIDManager::openManager() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f319d4 (    0x84) MTSimpleHIDManager::closeManager() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f31a58 (    0x2c) MTSimpleHIDManager::retain() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f31a84 (    0xa4) MTSimpleHIDManager::release() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f31b28 (    0xb4) MTSimpleHIDManager::wasScheduledOnDispatchQueue(dispatch_queue_s*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f31bdc (    0xf8) MTSimpleHIDManager::wasUnscheduledFromDispatchQueue(dispatch_queue_s*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f31cd4 (     0x8) MTSimpleHIDManager::getHIDDispatchQueue() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f31cdc (    0x68) MTSimpleHIDManager::registerDeviceNotifications() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f31d44 (    0x34) MTSimpleHIDManager::forwardNotificationEvent(__MTDevice*, MTNotificationEvent, void*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f31d78 (    0x58) MTSimpleHIDManager::unregisterDeviceNotifications() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f31dd0 (    0x68) MTSimpleHIDManager::registerExternalMessages() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f31e38 (    0x44) MTSimpleHIDManager::forwardExternalMessage(__MTDevice*, unsigned char*, unsigned short, unsigned int, void*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f31e7c (    0x68) MTSimpleHIDManager::unregisterExternalMessages() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f31ee4 (   0x174) MTSimpleHIDManager::registerDeviceDataCallbacks() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f32058 (    0x3c) MTSimpleHIDManager::forwardContactFrame(__MTDevice*, MTContact*, int, double, unsigned long long, void*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f32094 (    0x3c) MTSimpleHIDManager::forwardInputDetectionState(__MTDevice*, unsigned int, short, short, void*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f320d0 (    0x3c) MTSimpleHIDManager::forwardFrameHeader(__MTDevice*, MTBinaryFrameHeader, void*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f3210c (    0x40) MTSimpleHIDManager::forwardImageEntry(__MTDevice*, short*, MTImageDescriptor*, void*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f3214c (   0x138) MTSimpleHIDManager::unregisterDeviceDataCallbacks() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f32284 (    0x40) MTSimpleHIDManager::forwardFullFrame(__MTDevice*, unsigned char*, unsigned int, void*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f322c4 (     0x8) MTSimpleHIDManager::getMTDevice() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f322cc (    0xd8) MTSimpleHIDManager::registerSystemCallbacks() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f323a4 (    0x30) MTSimpleHIDManager::autoRecordingEnableChanged(__CFNotificationCenter*, void*, __CFString const*, void const*, __CFDictionary const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f323d4 (    0x34) MTSimpleHIDManager::fieldOnNotificationCenterCallback(__CFNotificationCenter*, void*, __CFString const*, void const*, __CFDictionary const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f32408 (    0x34) MTSimpleHIDManager::fieldOffNotificationCenterCallback(__CFNotificationCenter*, void*, __CFString const*, void const*, __CFDictionary const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f3243c (    0x90) MTSimpleHIDManager::unregisterSystemCallbacks() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f324cc (   0x10c) MTSimpleHIDManager::beginAutoRecording() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f325d8 (    0x30) MTSimpleHIDManager::flushRecording(__CFNotificationCenter*, void*, __CFString const*, void const*, __CFDictionary const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f32608 (    0x80) MTSimpleHIDManager::annotateRecording(__CFNotificationCenter*, void*, __CFString const*, void const*, __CFDictionary const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f32688 (    0xa4) MTSimpleHIDManager::endAutoRecording() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f3272c (   0x16c) MTSimpleHIDManager::flushRecording() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f32898 (    0xd8) MTSimpleHIDManager::annotateRecording(__CFString const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f32970 (    0xdc) MTSimpleHIDManager::autoRecordingEnableChanged() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f32a4c (    0x94) MTSimpleHIDManager::createEventDispatcher() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f32ae0 (    0x28) MTSimpleHIDManager::destroyEventDispatcher() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f32b08 (     0x8) MTSimpleHIDManager::getEventDispatcher() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f32b10 (    0x60) MTSimpleHIDManager::setEventDispatcher(MTSimpleEventDispatcher*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f32b70 (   0x160) MTSimpleHIDManager::dispatchEvent(__IOHIDEvent*, unsigned int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f32cd0 (   0xa80) MTSimpleHIDManager::propertyTypeFromString(__CFString const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f33750 (   0x328) MTSimpleHIDManager::deviceDidBootload() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f33a78 (    0xf8) MTSimpleHIDManager::issueWakeEvent() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f33b70 (     0x4) MTSimpleHIDManager::createGestureParser() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f33b74 (    0x30) MTSimpleHIDManager::initializeGestureParser() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f33ba4 (     0x4) MTSimpleHIDManager::destroyGestureParser() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f33ba8 (   0x100) MTSimpleHIDManager::setPluginDefaultProperties() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f33ca8 (     0x4) MTSimpleHIDManager::setParserDefaultProperties() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f33cac (    0x60) MTSimpleHIDManager::setDeviceDefaultProperties() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f33d0c (   0x110) MTSimpleHIDManager::devicePropertiesBecameAvailable() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f33e1c (    0x38) MTSimpleHIDManager::restoreDevicePropertiesToDevice() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f33e54 (   0x710) MTSimpleHIDManager::setDeviceUsages() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f34564 (    0x8c) MTSimpleHIDManager::enableReportingOfAllInputs() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f345f0 (    0x6c) (null) [FUNC, FunctionStarts] 
                0x00000001e6f3465c (   0x1f4) MTSimpleHIDManager::_enableReportingOfAllInputs() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f34850 (    0x94) MTSimpleHIDManager::setFieldDetectionStatus() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f348e4 (    0x6c) (null) [FUNC, FunctionStarts] 
                0x00000001e6f34950 (    0x84) MTSimpleHIDManager::_setFieldDetectionStatus() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f349d4 (     0x8) MTSimpleHIDManager::deviceIsReady() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f349dc (    0x54) MTSimpleHIDManager::setDeviceIsReady(bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f34a30 (    0xbc) MTSimpleHIDManager::checkForParserDisabled() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f34aec (    0x20) MTSimpleHIDManager::propertyIsPublishedOnDriver(_MTHIDPropertyType) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f34b0c (   0x4d4) MTSimpleHIDManager::copyProperty(__CFString const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f34fe0 (   0x1ac) MTSimpleHIDManager::setProperty(__CFString const*, void const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f3518c (   0x25c) MTSimpleHIDManager::setProperty(__CFString const*, void const*, bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f353e8 (    0x68) MTSimpleHIDManager::translateInputDetectionMode(MTHIDInputDetectionMode) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f35450 (  0x119c) MTSimpleHIDManager::setPropertyInternal(_MTHIDPropertyType, void const*, bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f365ec (   0x154) (null) [FUNC, FunctionStarts] 
                0x00000001e6f36740 (    0x24) MTSimpleHIDManager::touchPowered() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f36764 (     0xc) MTSimpleHIDManager::resetDevice() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f36770 (    0x24) MTSimpleHIDManager::powerStateToStr(MTPowerState) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f36794 (   0x1f4) MTSimpleHIDManager::setPowerState(MTPowerState, bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f36988 (   0x480) MTSimpleHIDManager::setPowerStateWithReset(MTPowerState, bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f36e08 (   0x1e8) MTSimpleHIDManager::setupBootloadPowerAssertion(unsigned int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f36ff0 (   0x138) MTSimpleHIDManager::cleanupBootloadPowerAssertion() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f37128 (   0x188) MTSimpleHIDManager::takeBootloadPowerAssertion() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f372b0 (    0xfc) MTSimpleHIDManager::releaseBootloadPowerAssertion() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f373ac (   0x194) MTSimpleHIDManager::startBootloadPowerAssertionTimer(unsigned int, unsigned long long) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f37540 (   0x15c) (null) [FUNC, FunctionStarts] 
                0x00000001e6f3769c (    0xe4) MTSimpleHIDManager::cancelBootloadPowerAssertionTimer() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f37780 (    0x40) MTSimpleHIDManager::updateFieldDetectStatus(MTFieldDetectionStatus) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f377c0 (    0x58) MTSimpleHIDManager::setOrientation(unsigned short) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f37818 (     0x8) MTSimpleHIDManager::setWristState(unsigned char) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f37820 (    0x60) MTSimpleHIDManager::setInputDetectionModeForOrientation(unsigned short, unsigned short) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f37880 (   0x164) MTSimpleHIDManager::setTouchMode(unsigned short, unsigned short) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f379e4 (     0xc) MTSimpleHIDManager::getName() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f379f0 (     0x8) MTSimpleHIDManager::getHIDService() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f379f8 (    0x10) MTSimpleHIDManager::setEventCallback(void (*)(void*, void*, void*, __IOHIDEvent*, unsigned int), void*, void*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f37a08 (    0xd4) MTSimpleHIDManager::getSurfacePixelDimensions() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f37adc (    0x9c) MTSimpleHIDManager::getSurfaceBounds_mm() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f37b78 (     0x4) MTSimpleHIDManager::handleImageEntry(__MTDevice*, short*, MTImageDescriptor*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f37b7c (    0x1c) MTSimpleHIDManager::handleFullFrame(__MTDevice*, unsigned char*, unsigned int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f37b98 (    0xb8) MTSimpleHIDManager::handleContactFrameEntry(__MTDevice*, MTContact*, int, double, unsigned long long, void*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f37c50 (   0x184) MTSimpleHIDManager::handleInputDetectionState(__MTDevice*, unsigned int, short, short, void*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f37dd4 (   0x97c) MTSimpleHIDManager::handleNotificationEvent(__MTDevice*, MTNotificationEvent, void*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f38750 (    0x1c) (null) [FUNC, FunctionStarts] 
                0x00000001e6f3876c (    0x30) (null) [FUNC, FunctionStarts] 
                0x00000001e6f3879c (   0x164) MTSimpleHIDManager::handleExternalMessage(__MTDevice*, unsigned char*, unsigned short, unsigned int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f38900 (    0xf4) (null) [FUNC, FunctionStarts] 
                0x00000001e6f389f4 (     0x8) MTSimpleHIDManager::handleFrameHeader(__MTDevice*, MTBinaryFrameHeader*, void*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f389fc (    0x34) MTSimpleHIDManager::fieldSuspendedNotificationCenterCallback(__CFNotificationCenter*, void*, __CFString const*, void const*, __CFDictionary const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f38a30 (    0x40) MTSimpleHIDManager::setOutputEvent(__IOHIDEvent*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f38a70 (   0x174) MTSimpleHIDManager::copyEvent(unsigned int, __IOHIDEvent*, unsigned int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f38be4 (    0x28) MTSimpleHIDManager::touchFramesAllowed() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f38c0c (    0x24) (null) [FUNC, FunctionStarts] 
                0x00000001e6f38c30 (    0xcc) MTTrackpadHIDManager::createManager(MultitouchHIDClass*, __MTDevice*, MTParserType, MTParserOptions) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f38cfc (    0xf8) MTTrackpadHIDManager::initialize(MultitouchHIDClass*, __MTDevice*, MTParserType, MTParserOptions) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f38df4 (    0x60) MTTrackpadHIDManager::start() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f38e54 (     0x4) MTTrackpadHIDManager::finalize() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f38e58 (    0xe8) MTTrackpadHIDManager::setDeviceUsages() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f38f40 (    0xfc) (null) [FUNC, FunctionStarts] 
                0x00000001e6f3903c (    0x7c) MTTrackpadHIDManager::stop() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f390b8 (    0x60) MTTrackpadHIDManager::unregisterForPowerNotifications() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f39118 (    0xb0) MTTrackpadHIDManager::dispatchRelativePointerEvent(__MTDevice*, int, int, unsigned int, unsigned long long, void*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f391c8 (    0x48) MTTrackpadHIDManager::forwardRelativePointerData(__MTDevice*, int, int, unsigned int, unsigned long long, void*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f39210 (    0xb0) MTTrackpadHIDManager::registerDeviceDataCallbacks() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f392c0 (    0x40) MTTrackpadHIDManager::forwardButtonState(__MTDevice*, unsigned int, unsigned int, void*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f39300 (    0x6c) MTTrackpadHIDManager::unregisterDeviceDataCallbacks() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f3936c (    0x88) MTTrackpadHIDManager::registerSystemCallbacks() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f393f4 (    0x44) MTTrackpadHIDManager::forwardScreenSaverLaunchedNotification(__CFNotificationCenter*, void*, __CFString const*, void const*, __CFDictionary const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f39438 (    0x44) MTTrackpadHIDManager::forwardSurfaceOrientationChangedNotification(__CFNotificationCenter*, void*, __CFString const*, void const*, __CFDictionary const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f3947c (    0x64) MTTrackpadHIDManager::unregisterSystemCallbacks() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f394e0 (    0x94) MTTrackpadHIDManager::createEventDispatcher() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f39574 (    0x50) MTTrackpadHIDManager::createGestureParser() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f395c4 (    0x98) MTTrackpadHIDManager::initializeGestureParser() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f3965c (    0x64) MTTrackpadHIDManager::destroyGestureParser() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f396c0 (    0x50) MTTrackpadHIDManager::cancelOutstandingTapAndAHalfCallbackTimer() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f39710 (     0x8) MTTrackpadHIDManager::getGestureParser() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f39718 (    0x24) MTTrackpadHIDManager::copyTipOffsetParameters() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f3973c (    0x24) MTTrackpadHIDManager::setTipOffsetParameters(MTHMFingerTipOffsetParameters const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f39760 (   0x124) MTTrackpadHIDManager::resetGestureParser(bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f39884 (    0x5c) MTTrackpadHIDManager::cancelCurrentTapAndAHalfDrag() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f398e0 (   0x1a8) MTTrackpadHIDManager::startNotificationCenterMonitoring(int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f39a88 (    0xf8) (null) [FUNC, FunctionStarts] 
                0x00000001e6f39b80 (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001e6f39b88 (   0x1a8) MTTrackpadHIDManager::startNotificationCenterAltMonitoring(int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f39d30 (    0xf8) (null) [FUNC, FunctionStarts] 
                0x00000001e6f39e28 (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001e6f39e30 (    0xd0) MTTrackpadHIDManager::stopNotificationCenterMonitoring() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f39f00 (    0xd0) MTTrackpadHIDManager::stopNotificationCenterAltMonitoring() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f39fd0 (    0x38) MTTrackpadHIDManager::cancelNotificationCenterSource() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f3a008 (    0x38) MTTrackpadHIDManager::cancelNotificationCenterAltSource() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f3a040 (    0x94) MTTrackpadHIDManager::getForceSourceForBehavior(int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f3a0d4 (    0x14) MTTrackpadHIDManager::getUserPrefs(mt_UserPreference const**) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f3a0e8 (   0x110) MTTrackpadHIDManager::isUserPref(__CFString const*, bool*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f3a1f8 (    0x44) MTTrackpadHIDManager::shouldRecordProperty(__CFString const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f3a23c (     0x4) MTTrackpadHIDManager::setProperty(__CFString const*, void const*, bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f3a240 (   0x110) MTTrackpadHIDManager::setProperty(__CFString const*, void const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f3a350 (   0xcbc) MTTrackpadHIDManager::setPropertyInternal(_MTHIDPropertyType, void const*, bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f3b00c (    0x24) (null) [FUNC, FunctionStarts] 
                0x00000001e6f3b030 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001e6f3b040 (    0x68) (null) [FUNC, FunctionStarts] 
                0x00000001e6f3b0a8 (    0x64) (null) [FUNC, FunctionStarts] 
                0x00000001e6f3b10c (    0x68) (null) [FUNC, FunctionStarts] 
                0x00000001e6f3b174 (    0x64) (null) [FUNC, FunctionStarts] 
                0x00000001e6f3b1d8 (   0x128) (null) [FUNC, FunctionStarts] 
                0x00000001e6f3b300 (    0x74) (null) [FUNC, FunctionStarts] 
                0x00000001e6f3b374 (     0xc) MTTrackpadHIDManager::getName() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f3b380 (   0x1f0) MTTrackpadHIDManager::handleContactFrame(__MTDevice*, MTContact*, int, double, unsigned long long, void*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f3b570 (   0x118) MTTrackpadHIDManager::scheduleTapAndAHalfCallbackTimer(double, double) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f3b688 (     0x8) MTTrackpadHIDManager::handleInputDetectionState(__MTDevice*, unsigned int, short, short, void*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f3b690 (   0x4f0) MTTrackpadHIDManager::handleNotificationEvent(__MTDevice*, MTNotificationEvent, void*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f3bb80 (    0x68) (null) [FUNC, FunctionStarts] 
                0x00000001e6f3bbe8 (   0x1d4) (null) [FUNC, FunctionStarts] 
                0x00000001e6f3bdbc (    0x80) MTTrackpadHIDManager::wasScheduledOnDispatchQueue(dispatch_queue_s*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f3be3c (    0xa4) MTTrackpadHIDManager::registerForPowerNotifications() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f3bee0 (    0x8c) MTTrackpadHIDManager::wasUnscheduledFromDispatchQueue(dispatch_queue_s*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f3bf6c (   0x150) MTTrackpadHIDManager::handlePowerNotification(void*, unsigned int, unsigned int, void*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f3c0bc (     0xc) (null) [FUNC, FunctionStarts] 
                0x00000001e6f3c0c8 (    0xb8) MTTrackpadHIDManager::_tapAndAHalfTimerCallbackFunction(dispatch_source_s*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f3c180 (   0x1e4) MTTrackpadHIDManager::checkForDisablers() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f3c364 (    0x9c) mthid_CFGetBoolValueWithDefault(void const*, bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f3c400 (    0x70) mthid_CFGetUInt32ValueWithDefault(void const*, unsigned int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f3c470 (     0x8) mthid_CFDictionaryGetBoolValue(__CFDictionary const*, __CFString const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f3c478 (    0x50) mthid_CFDictionaryGetBoolValueWithDefault(__CFDictionary const*, __CFString const*, bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f3c4c8 (     0x8) mthid_CFDictionaryGetInt32Property(__CFDictionary const*, __CFString const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f3c4d0 (    0x50) mthid_CFDictionaryGetInt32PropertyWithDefault(__CFDictionary const*, __CFString const*, unsigned int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f3c520 (    0xa0) MTTrackpadHIDManager::handlePendingConfigUpdate() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f3c5c0 (    0x6c) MTTrackpadHIDManager::shouldUpdateHIDManagerConfig() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f3c62c (   0x2ac) MTTrackpadHIDManager::updateHIDManagerConfig() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f3c8d8 (   0x2e0) MTTrackpadHIDManager::determineSurfaceOrientationSettings() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f3cbb8 (   0x14c) MTTrackpadHIDManager::setPreferenceDefaults(__MTDevice*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f3cd04 (    0x18) MTTrackpadHIDManager::updatePreferences(__CFString const*, void const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f3cd1c (   0x6a4) MTTrackpadHIDManager::determineHIDManagerSettings() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f3d3c0 (   0x290) MTTrackpadHIDManager::createPointClickTapDragCombo(__CFDictionary*, __CFString const*, bool, bool, bool, bool, bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f3d650 (   0x580) MTTrackpadHIDManager::createScrollZoomCombo(__CFDictionary*, __CFString const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f3dbd0 (   0x60c) MTTrackpadHIDManager::createRestingSwipeOrDockCombo(__CFDictionary*, __CFString const*, MTRelaxingTransitionType, bool, bool, bool, bool, bool, bool, bool, bool, bool, bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f3e1dc (   0xccc) MTTrackpadHIDManager::activateHIDManagerSettings() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f3eea8 (   0x2d0) MTTrackpadHIDManager::updateEventDispatcherSettings() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f3f178 (    0xb8) MTTrackpadHIDManager::hwSupports3FDrag() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f3f230 (    0xb8) MTTrackpadHIDManager::hwSupportsSecondaryClickCorners() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f3f2e8 (     0x8) MTTrackpadHIDManager::getTrackpadSettings() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f3f2f0 (    0x88) MTTrackpadHIDManager::initDefaultTrackpadSettings(__MTDevice*, mt_StandardTrackpadSettings*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f3f378 (   0x248) MTTrackpadHIDManager::updateDeviceScanRate() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f3f5c0 (   0x108) MTTrackpadHIDManager::setPluginDefaultProperties() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f3f6c8 (   0x378) MTTrackpadHIDManager::setDeviceAccelerationData(__CFDictionary*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f3fa40 (    0x60) MTTrackpadHIDManager::setDeviceDefaultProperties() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f3faa0 (    0x60) MTTrackpadHIDManager::restoreDevicePropertiesToDevice() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f3fb00 (   0x17c) MTTrackpadHIDManager::activateDeviceSurfaceOrientation() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f3fc7c (    0x80) (null) [FUNC, FunctionStarts] 
                0x00000001e6f3fcfc (    0x50) (null) [FUNC, FunctionStarts] 
                0x00000001e6f3fd4c (    0x44) (null) [FUNC, FunctionStarts] 
                0x00000001e6f3fd90 (   0x1e8) MTTrackpadHIDManager::_activateDeviceSurfaceOrientation(MTSurfaceOrientation, MTSurfaceOrientationMode) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f3ff78 (    0x38) MTTrackpadHIDManager::handleButtonState(__MTDevice*, unsigned int, unsigned int, void*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f3ffb0 (    0x60) MTTrackpadHIDManager::handleScreenSaverLaunchedNotification(__CFNotificationCenter*, void*, __CFString const*, void const*, __CFDictionary const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f40010 (    0xbc) MTTrackpadHIDManager::handleSurfaceOrientationChangedNotification(__CFNotificationCenter*, void*, __CFString const*, void const*, __CFDictionary const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f400cc (   0xbac) MTTrackpadHIDManager::createDefaultMotionSensitivitiesDictionary() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f40c78 (   0x2dc) MTTrackpadHIDManager::copyProperty(__CFString const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f40f54 (   0x2e4) MTTrackpadHIDManager::createDefaultActionEventsDictionary() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f41238 (   0xae4) MTTrackpadHIDManager::createDefaultGestureSetsDictionary() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f41d1c (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001e6f41d20 (    0x28) (null) [FUNC, FunctionStarts] 
                0x00000001e6f41d48 (    0xfc) (null) [FUNC, FunctionStarts] 
                0x00000001e6f41e44 (    0xfc) (null) [FUNC, FunctionStarts] 
                0x00000001e6f41f40 (    0xa8) MTMouseEmbeddedEventDispatcher::createDispatcher(MTMouseEmbeddedHIDManager*, __MTDevice*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f41fe8 (   0x1bc) MTMouseEmbeddedEventDispatcher::dispatchPointingEvent(int, int, unsigned int, unsigned long long, bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f421a4 (   0x22c) MTMouseEmbeddedEventDispatcher::shouldDispatchPointerEvent(__IOHIDEvent*, __IOHIDEvent*, __IOHIDEvent*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f423d0 (   0x57c) MTMouseEmbeddedEventDispatcher::handleEvent(__IOHIDEvent*, unsigned int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4294c (    0x64) (null) [FUNC, FunctionStarts] 
                0x00000001e6f429b0 (    0x68) (null) [FUNC, FunctionStarts] 
                0x00000001e6f42a18 (     0xc) MTMouseHIDManager::getName() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f42a24 (    0xd4) MTMouseHIDManager::createManager(MultitouchHIDClass*, __MTDevice*, MTParserType, MTParserOptions) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f42af8 (   0x100) MTMouseHIDManager::initialize(MultitouchHIDClass*, __MTDevice*, MTParserType, MTParserOptions) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f42bf8 (    0xb0) MTMouseHIDManager::registerDeviceDataCallbacks() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f42ca8 (    0x44) MTMouseHIDManager::forwardTrackingDataForMotionFilter(__MTDevice*, int, int, unsigned int, void*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f42cec (    0x44) MTMouseHIDManager::forwardFrameProcessingEntryExit(__MTDevice*, unsigned long long, unsigned int, bool, void*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f42d30 (    0xa8) MTMouseHIDManager::unregisterDeviceDataCallbacks() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f42dd8 (    0x94) MTMouseHIDManager::createEventDispatcher() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f42e6c (   0x168) MTMouseHIDManager::setDeviceUsages() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f42fd4 (    0x14) MTMouseHIDManager::getUserPrefs(mt_UserPreference const**) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f42fe8 (   0x1f8) MTMouseHIDManager::determineHIDManagerSettings() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f431e0 (   0x564) MTMouseHIDManager::activateHIDManagerSettings() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f43744 (   0x150) MTMouseHIDManager::updateEventDispatcherSettings() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f43894 (    0xb4) MTMouseHIDManager::getTrackpadSettings() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f43948 (     0x8) MTMouseHIDManager::getMouseSettings() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f43950 (    0x70) MTMouseHIDManager::initDefaultMouseSettings(__MTDevice*, mt_StandardMouseSettings*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f439c0 (   0x4fc) MTMouseHIDManager::createDefaultMotionSensitivitiesDictionary() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f43ebc (   0x1dc) MTMouseHIDManager::createDefaultActionEventsDictionary() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f44098 (   0x2bc) MTMouseHIDManager::createMouseScrollSwipeTapCombo(__CFDictionary*, __CFString const*, bool, bool, bool, bool, bool, bool, bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f44354 (    0x24) MTMouseHIDManager::createDefaultGestureSetsDictionary() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f44378 (   0x1b0) MTMouseHIDManager::updateMouseMotionFilter(float, float, bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f44528 (    0x4c) MTMouseHIDManager::tickleMouseMotionFilter() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f44574 (   0x12c) MTMouseHIDManager::updateButtonMotionFilter(float, bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f446a0 (    0x88) MTMouseHIDManager::handleTrackingDataForMotionFilter(__MTDevice*, int, int, unsigned int, void*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f44728 (    0x58) MTMouseHIDManager::handleButtonState(__MTDevice*, unsigned int, unsigned int, void*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f44780 (    0x4c) MTMouseHIDManager::handleFrameProcessingEntryExit(__MTDevice*, unsigned long long, unsigned int, bool, void*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f447cc (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001e6f447d0 (    0x28) (null) [FUNC, FunctionStarts] 
                0x00000001e6f447f8 (   0x148) MTParameterFactory::initFingerTipOffsetParams(MTHMFingerTipOffsetParameters&, MTParserType, MTParserOptions, bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f44940 (    0x10) MTParameterFactory::initForceFilterParams(MTForceFilterParameters&, MTParserType, MTParserOptions, bool, MTSurfaceDimensions const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f44950 (    0x78) MTParameterFactory::initForceThresholdQualifiers(MTForceThresholdQualifiers&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f449c8 (    0x2c) MTParameterFactory::initForceActuationQualifiers(MTForceActuationQualifiers&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f449f4 (    0x28) MTParameterFactory::initBasicForceActuationQualifiers(MTForceActuationQualifiers&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f44a1c (   0x330) MTParameterFactory::initPathFilterParams(MTPathFilterParameters&, MTParserType, MTParserOptions, bool, MTSurfaceDimensions const&, unsigned int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f44d4c (    0x5c) MTParameterFactory::updatePathFilterParamsWithNewSurfaceDimensions(MTPathFilterParameters&, MTSurfaceDimensions const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f44da8 (    0x2c) MTParameterFactory::initRestZoneBalanceParameters(MTRestZoneBalanceParameters&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f44dd4 (    0x18) MTParameterFactory::initMotionExtractionParams(MTMotionExtractionParameters&, MTParserType, MTParserOptions) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f44dec (    0x34) MTParameterFactory::initChordCyclingParams(MTChordCyclingParameters&, MTParserType) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f44e20 (     0x4) MTParameterFactory::initGestureTimingParams(MTGestureTimingParameters&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f44e24 (    0x58) MTParameterFactory::initTouchZoneParams(MTTouchZoneParameters&, MTParserType, MTParserOptions, bool, MTSurfaceDimensions const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f44e7c (    0xb4) MTTrackpadEmbeddedEventDispatcher::createDispatcher(MTTrackpadEmbeddedHIDManager*, __MTDevice*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f44f30 (    0x58) MTTrackpadEmbeddedEventDispatcher::initialize(MTSimpleHIDManager*, __MTDevice*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f44f88 (    0x50) MTTrackpadEmbeddedEventDispatcher::finalize() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f44fd8 (    0xc4) MTTrackpadEmbeddedEventDispatcher::dispatchScrollEvent(int, int, int, bool, float, bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4509c (   0x390) MTTrackpadEmbeddedEventDispatcher::dispatchPointingEvent(int, int, unsigned int, unsigned long long, bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4542c (   0x3e4) MTTrackpadEmbeddedEventDispatcher::shouldDispatchPointerEvent(__IOHIDEvent*, __IOHIDEvent*, __IOHIDEvent*, __IOHIDEvent*, __IOHIDEvent*, __IOHIDEvent*, __IOHIDEvent*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f45810 (   0x4ac) MTTrackpadEmbeddedEventDispatcher::sanityCheck(__IOHIDEvent*, __IOHIDEvent*, __IOHIDEvent*, __IOHIDEvent*, __IOHIDEvent*, bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f45cbc (   0x198) MTTrackpadEmbeddedEventDispatcher::dispatchEvent(__IOHIDEvent*, unsigned int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f45e54 (  0x1108) MTTrackpadEmbeddedEventDispatcher::handleEvent(__IOHIDEvent*, unsigned int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f46f5c (    0x64) (null) [FUNC, FunctionStarts] 
                0x00000001e6f46fc0 (    0x68) (null) [FUNC, FunctionStarts] 
                0x00000001e6f47028 (    0x3c) MTModeSwitcher::createModeSwitcher(MTSimpleHIDManager&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f47064 (    0x30) MTModeSwitcher::MTModeSwitcher(MTSimpleHIDManager&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f47094 (     0x4) MTModeSwitcher::~MTModeSwitcher() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f47098 (     0x4) MTModeSwitcher::~MTModeSwitcher() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4709c (     0x4) MTModeSwitcher::~MTModeSwitcher() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f470a0 (   0x2d8) MTModeSwitcher::transitionGraphicsOrientationTo(MTHIDDeviceGraphicsOrientation) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f47378 (    0x28) MTModeSwitcher::getMTDevice() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f473a0 (    0x24) MTModeSwitcher::orientationToText(MTHIDDeviceGraphicsOrientation) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f473c4 (   0x214) MTModeSwitcher::setGraphicsOrientation(MTHIDDeviceGraphicsOrientation) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f475d8 (   0x254) MTModeSwitcher::setTouchDetectionMode(MTHIDTouchDetectionMode, MTHIDDeviceGraphicsOrientation) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4782c (   0x2c4) MTModeSwitcher::deviceDidBootload() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f47af0 (   0x204) MTModeSwitcher::setDevicePowerState(MTPowerState) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f47cf4 (    0xa8) MTModeSwitcher::modeToText(MTHIDTouchDetectionMode) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f47d9c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001e6f47dac (   0x134) MTModeSwitcher::bootloadTimerExpired() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f47ee0 (   0x178) MTModeSwitcher::resetFirmware(MTHIDTouchDetectionMode) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f48058 (    0x30) MTModeSwitcher::setupBootloadPowerAssertion(unsigned int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f48088 (    0x30) MTModeSwitcher::resetDevice() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f480b8 (   0x17c) MTModeSwitcher::bootFirmware(MTHIDTouchDetectionMode) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f48234 (    0x24) MTModeSwitcher::powerStateToText(MTPowerState) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f48258 (    0x30) MTNoOpModeSwitcher::MTNoOpModeSwitcher(MTSimpleHIDManager&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f48288 (    0x30) MTNoOpModeSwitcher::MTNoOpModeSwitcher(MTSimpleHIDManager&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f482b8 (     0x8) MTNoOpModeSwitcher::transitionTouchDetectionModeTo(MTHIDTouchDetectionMode, bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f482c0 (     0x8) MTNoOpModeSwitcher::transitionGraphicsOrientationTo(MTHIDDeviceGraphicsOrientation) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f482c8 (     0x8) MTNoOpModeSwitcher::deviceDidBootload() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f482d0 (     0x8) MTNoOpModeSwitcher::bootloadTimerExpired() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f482d8 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001e6f482dc (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001e6f482e0 (    0x34) MTChordCyclingTrackpad::MTChordCyclingTrackpad(MTHandIdentity, char*, MTDragManagerEventQueue&, bool, MTParserType) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f48314 (    0x34) MTChordCyclingTrackpad::MTChordCyclingTrackpad(MTHandIdentity, char*, MTDragManagerEventQueue&, bool, MTParserType) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f48348 (   0x138) MTChordCyclingTrackpad::chk4newTapChord(MTHandStatistics&, MTHandMotion const&, MTChordGestureSet*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f48480 (   0x398) MTChordCyclingTrackpad::handleChordTaps(MTHandStatistics const&, MTHandMotion const&, __IOHIDEvent*, bool, bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f48818 (    0x64) MTChordCyclingTrackpad::possiblyStopChordMomentum(MTHandStatistics const&, MTHandMotion const&, __IOHIDEvent*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4887c (   0x9b4) MTChordCyclingTrackpad::chk4chordCycling(MTHandStatistics&, MTHandMotion const&, __IOHIDEvent*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f49230 (    0x48) (null) [FUNC, FunctionStarts] 
                0x00000001e6f49278 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001e6f4927c (    0x28) (null) [FUNC, FunctionStarts] 
                0x00000001e6f492a4 (    0x70) (null) [FUNC, FunctionStarts] 
                0x00000001e6f49314 (   0x100) (null) [FUNC, FunctionStarts] 
                0x00000001e6f49414 (    0xe8) MTChordCycling::MTChordCycling(MTHandIdentity, char*, MTDragManagerEventQueue&, bool, MTParserType) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f494fc (     0x4) MTChordCycling::MTChordCycling(MTHandIdentity, char*, MTDragManagerEventQueue&, bool, MTParserType) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f49500 (    0x5c) MTChordCycling::clearChordCyclingState() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4955c (    0x18) MTChordCycling::getCommittedFingerCount() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f49574 (    0x34) MTChordCycling::hasTriggeredFluidDock() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f495a8 (    0x88) MTChordCycling::selectSlideChord(MTHandStatistics const&, MTHandMotion const&, __IOHIDEvent*, MTChordGestureSet*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f49630 (    0x48) MTChordCycling::selectTapChord(MTHandStatistics const&, MTHandMotion const&, MTChordGestureSet*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f49678 (   0x110) MTChordCycling::handleChordLiftoff(MTHandStatistics&, MTHandMotion const&, __IOHIDEvent*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f49788 (    0x44) MTChordCycling::touchdownSinceTapOrExcessMotion(MTHandStatistics const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f497cc (    0x44) MTChordCycling::subsetSinceTapOrExcessMotion(MTHandStatistics const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f49810 (    0xa4) MTChordCycling::chk4excessTapMotion(MTHandStatistics const&, MTHandMotion const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f498b4 (   0x118) MTChordCycling::chk4newTapChord(MTHandStatistics&, MTHandMotion const&, MTChordGestureSet*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f499cc (   0x158) MTChordCycling::tapHasValidTimingAndStrength(MTHandStatistics const&, MTHandMotion const&, bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f49b24 (   0x154) MTChordCycling::processDoubleTap(MTHandStatistics const&, MT2DPlaneMotion const&, __IOHIDEvent*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f49c78 (   0x15c) MTChordCycling::processMultiFingerDoubleTap(MTHandStatistics const&, MT2DPlaneMotion const&, __IOHIDEvent*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f49dd4 (   0x2b8) MTChordCycling::handleChordTaps(MTHandStatistics const&, MTHandMotion const&, __IOHIDEvent*, bool, bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4a08c (    0x3c) MTChordCycling::possiblyStartChordMomentum(MTHandStatistics const&, __IOHIDEvent*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4a0c8 (    0x58) MTChordCycling::possiblyStopChordMomentum(MTHandStatistics const&, MTHandMotion const&, __IOHIDEvent*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4a120 (   0x33c) MTChordCycling::chk4chordCycling(MTHandStatistics&, MTHandMotion const&, __IOHIDEvent*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4a45c (    0xb0) MTChordCycling::parseHandGesturesCreateHIDEvents(MTHandStatistics&, MTHandMotion const&, __IOHIDEvent*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4a50c (    0xd4) MTChordCycling::shouldBlockClicks(MTHandStatistics const&, MTHandMotion const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4a5e0 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001e6f4a5e4 (    0x28) (null) [FUNC, FunctionStarts] 
                0x00000001e6f4a60c (    0x44) MTTapDragManager::MTTapDragManager() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4a650 (    0x24) MTTapDragManager::clearState() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4a674 (     0x8) MTTapDragManager::setCycleState(MTTapDragCycleState) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4a67c (    0x1c) MTTapDragManager::clearCycle() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4a698 (    0x8c) MTTapDragManager::dragHandModifiers() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4a724 (    0x44) MTTapDragManager::shouldReleaseTapDragDueToPause(double) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4a768 (    0x9c) MTTapDragManager::halfTapDragTimedOut(double) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4a804 (    0xd0) MTTapDragManager::shouldSustainDrag(double, unsigned int) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4a8d4 (   0x1b8) MTTapDragManager::sendWaitingClickAtHalfTimeout(__IOHIDEvent*, double, unsigned int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4aa8c (   0x168) MTTapDragManager::sendPendingMultiFingerTap(__IOHIDEvent*, MTHandStatistics const&, MTHandMotion const&, double, bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4abf4 (    0x2c) MTTapDragManager::queueTapWaitingForHalf(MTHandStatistics const&, MT2DPlaneMotion const&, __IOHIDEvent*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4ac20 (    0x34) MTTapDragManager::queueMultiFingerTapWaitingForDouble(MTHandStatistics const&, MT2DPlaneMotion const&, __IOHIDEvent*, unsigned int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4ac54 (    0xb8) MTTapDragManager::queueButtonClickEvent(MTHandStatistics const&, MT2DPlaneMotion const&, __IOHIDEvent*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4ad0c (    0xb0) MTTapDragManager::queueButtonPressEvent(MTHandStatistics const&, MT2DPlaneMotion const&, __IOHIDEvent*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4adbc (    0xb8) MTTapDragManager::queueButtonReleaseEvent(MTHandStatistics const&, MT2DPlaneMotion const&, __IOHIDEvent*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4ae74 (    0xdc) MTTapDragManager::handleTapsForDrag(MTHandStatistics const&, MTHandMotion const&, __IOHIDEvent*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4af50 (    0x8c) MTTapDragManager::handleImmediateTapDragRelease(MTHandStatistics const&, MTHandMotion const&, __IOHIDEvent*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4afdc (   0x194) MTTapDragManager::chk4dragCycling(MTHandStatistics const&, MTHandMotion const&, __IOHIDEvent*, double) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4b170 (    0x74) MTTapDragManager::sustainMultiFingerDrag(MTHandStatistics const&, MTHandMotion const&, __IOHIDEvent*, MTChordIntegrating const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4b1e4 (    0x18) MTTapDragManager::handleTapsForMultiFingerDrag(MTHandStatistics const&, MTHandMotion const&, __IOHIDEvent*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4b1fc (    0xbc) MTSimpleEmbeddedHIDManager::createManager(MultitouchHIDClass*, __MTDevice*, MTParserType, MTParserOptions) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4b2b8 (   0x33c) MTSimpleEmbeddedHIDManager::initialize(MultitouchHIDClass*, __MTDevice*, MTParserType, MTParserOptions) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4b5f4 (    0x7c) MTSimpleEmbeddedHIDManager::start() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4b670 (    0x40) MTSimpleEmbeddedHIDManager::stop() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4b6b0 (     0x4) MTSimpleEmbeddedHIDManager::closeManager() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4b6b4 (    0x60) MTSimpleEmbeddedHIDManager::finalize() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4b714 (    0x94) MTSimpleEmbeddedHIDManager::createEventDispatcher() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4b7a8 (    0x50) MTSimpleEmbeddedHIDManager::createGestureParser() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4b7f8 (    0x30) MTSimpleEmbeddedHIDManager::initializeGestureParser() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4b828 (    0x30) MTSimpleEmbeddedHIDManager::destroyGestureParser() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4b858 (    0x68) MTSimpleEmbeddedHIDManager::devicePropertiesBecameAvailable() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4b8c0 (   0x2a4) MTSimpleEmbeddedHIDManager::setPluginDefaultProperties() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4bb64 (     0x8) MTSimpleEmbeddedHIDManager::getGestureParser() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4bb6c (    0x44) MTSimpleEmbeddedHIDManager::createInterferenceMonitor() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4bbb0 (    0x24) MTSimpleEmbeddedHIDManager::copyTipOffsetParameters() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4bbd4 (    0x24) MTSimpleEmbeddedHIDManager::setTipOffsetParameters(MTHMFingerTipOffsetParameters const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4bbf8 (    0xf0) MTSimpleEmbeddedHIDManager::resetGestureParser(bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4bce8 (    0x90) MTSimpleEmbeddedHIDManager::copyProperty(__CFString const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4bd78 (   0x164) MTSimpleEmbeddedHIDManager::setPropertyInternal(_MTHIDPropertyType, void const*, bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4bedc (    0x70) createVendorDefinedTouchFrameEvent(unsigned char*, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4bf4c (     0xc) MTSimpleEmbeddedHIDManager::getName() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4bf58 (    0x48) MTSimpleEmbeddedHIDManager::deviceDidBootload() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4bfa0 (   0x20c) MTSimpleEmbeddedHIDManager::resetDevice() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4c1ac (   0x390) MTSimpleEmbeddedHIDManager::handleContactFrame(__MTDevice*, MTContact*, int, double, unsigned long long, void*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4c53c (    0x18) MTSimpleEmbeddedHIDManager::handleImageEntry(__MTDevice*, short*, MTImageDescriptor*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4c554 (    0x28) MTSimpleEmbeddedHIDManager::handleFrameHeader(__MTDevice*, MTBinaryFrameHeader*, void*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4c57c (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001e6f4c580 (    0x28) (null) [FUNC, FunctionStarts] 
                0x00000001e6f4c5a8 (     0x8) MTRestZoneIntegrator::clear() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4c5b0 (    0x74) MTRestZoneIntegrator::clearMotion(bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4c624 (    0x8c) MTRestZoneIntegrator::MTRestZoneIntegrator(MTSurfaceDimensions const&, MTParserType, MTParserOptions) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4c6b0 (     0x4) MTRestZoneIntegrator::MTRestZoneIntegrator(MTSurfaceDimensions const&, MTParserType, MTParserOptions) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4c6b4 (     0x4) MTRestZoneIntegrator::~MTRestZoneIntegrator() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4c6b8 (     0x4) MTRestZoneIntegrator::~MTRestZoneIntegrator() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4c6bc (    0x28) MTRestZoneIntegrator::~MTRestZoneIntegrator() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4c6e4 (    0xe4) MTRestZoneIntegrator::printExtractedMotion(int, int, MTContact*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4c7c8 (    0x60) MTRestZoneIntegrator::clearThumbFingerEnvelope() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4c828 (    0x64) MTRestZoneIntegrator::calcResidualBalance() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4c88c (    0x80) MTRestZoneIntegrator::translationSimilarityDotProduct(MTPoint, MTPoint) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4c90c (    0x18) MTRestZoneIntegrator::scalingFromDotProduct(MTPoint, MTPoint, MTPoint) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4c924 (    0x20) MTRestZoneIntegrator::rotationFromVectorProduct(MTPoint, MTPoint, MTPoint) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4c944 (    0x5c) MTRestZoneIntegrator::computeSeparationVector(MTContact const&, MTContact const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4c9a0 (   0x260) MTRestZoneIntegrator::extractMotionDeltas(MTPathStates const&, MTParserPath const&, MTParserPath const&, bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4cc00 (   0x138) MTRestZoneIntegrator::combineCentralFingerScaleRotate(MTPathStates const&, MTParserPath const&, MTPoint const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4cd38 (    0xb8) MTRestZoneIntegrator::computeSpeedSimilarity(MTPathStates const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4cdf0 (    0xec) MTRestZoneIntegrator::decayMotionEnvelope(MT2DPlaneMotion&, MTPoint&, float&, float&, float&, float) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4cedc (   0x13c) MTRestZoneIntegrator::accumulateMotionEnvelope(MT2DPlaneMotion&, MTPoint&, float&, float&, float&, float) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4d018 (    0x2c) MTRestZoneIntegrator::polarTranslationBalance() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4d044 (    0xc4) MTRestZoneIntegrator::adaptivePolarBalance() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4d108 (    0x88) MTRestZoneIntegrator::isLockedOnTranslate() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4d190 (    0x88) MTRestZoneIntegrator::isLockedOnPolarSymmetric() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4d218 (    0x34) MTRestZoneIntegrator::shouldDoBiPolarIntegration(bool) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4d24c (    0x94) MTRestZoneIntegrator::translationDominance(bool) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4d2e0 (   0x154) MTRestZoneIntegrator::weighDominantMotions(double) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4d434 (    0x70) MTRestZoneIntegrator::convertPixelDeltasTo_mm_s(double) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4d4a4 (   0x118) MTRestZoneIntegrator::integrateRestingZoneMotion(MTPathStates const&, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4d5bc (    0x38) MTForceFilter::MTForceFilter() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4d5f4 (    0x1c) MTForceFilter::clear() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4d610 (    0x38) MTForceFilter::MTForceFilter() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4d648 (     0x4) MTForceFilter::~MTForceFilter() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4d64c (     0x4) MTForceFilter::~MTForceFilter() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4d650 (     0x4) MTForceFilter::~MTForceFilter() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4d654 (     0x8) MTForceFilter::resetSliderFilter() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4d65c (    0x38) MTForceFilter::updateSliderFilter(float, float) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4d694 (    0x3c) MTForceFilter::forceVelocityFilterAlpha(float) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4d6d0 (    0x50) MTForceFilter::sigmoidOneSided(float, float, float) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4d720 (    0x6c) MTForceFilter::surgeToActuationStrength(MTForceActuationQualifiers const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4d78c (     0x8) MTForceFilter::surge_g_s() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4d794 (   0x128) MTForceFilter::updateForceFilter(float, float, double, MTForceFilterParameters const&, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4d8bc (    0x74) MTForceFilter::updateHystereticForce(float, MTForceFilterParameters const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4d930 (    0x40) MTForceFilter::geometricSigmoid(float) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4d970 (    0x28) MTForceFilter::sigmoid(float) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4d998 (    0x14) MTForceFilter::sigmoidSquare(float, float) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4d9ac (    0xb4) MTForceThresholding::MTForceThresholding() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4da60 (    0x44) MTForceThresholding::clear() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4daa4 (     0x4) MTForceThresholding::MTForceThresholding() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4daa8 (    0xa8) MTForceThresholding::~MTForceThresholding() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4db50 (     0x4) MTForceThresholding::~MTForceThresholding() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4db54 (    0x28) MTForceThresholding::~MTForceThresholding() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4db7c (    0xe0) MTForceThresholding::MTForceThresholding(MTForceThresholdQualifiers const&, MTForceActuationQualifiers const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4dc5c (     0x4) MTForceThresholding::MTForceThresholding(MTForceThresholdQualifiers const&, MTForceActuationQualifiers const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4dc60 (    0x10) MTForceThresholding::clearPeakAndStage() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4dc70 (    0x2c) (null) [FUNC, FunctionStarts] 
                0x00000001e6f4dc9c (    0x44) MTForceThresholding::setForceBehavior(MTForceBehavior const&, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4dce0 (    0x70) MTForceThresholding::updateForceBehavior(MTForceBehavior const&, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4dd50 (    0x3c) MTForceThresholding::actuationWaveformID() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4dd8c (    0x18) MTForceThresholding::activationLevelAbove(MTForceLevel) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4dda4 (    0x10) MTForceThresholding::activationLevelForHold(MTForceLevel) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4ddb4 (    0x14) MTForceThresholding::activationLevelBelowHold(MTForceLevel) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4ddc8 (    0x18) MTForceThresholding::activationLevelToStage(MTForceLevel) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4dde0 (     0xc) MTForceThresholding::stageToActivationLevel(MTForceStage) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4ddec (    0x40) MTForceThresholding::setForceThresholdQualifiers(MTForceThresholdQualifiers const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4de2c (     0xc) MTForceThresholding::setForceActuationQualifiers(MTForceActuationQualifiers const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4de38 (    0x1c) MTForceThresholding::getClickThresholdMultiplier(MTClickStrength) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4de54 (    0x6c) MTForceThresholding::basicThresholdForLevel(MTForceLevel) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4dec0 (   0x330) MTForceThresholding::adaptiveThresholdForLevel(MTForceLevel, MTForceFilter const&, MTParserPath const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4e1f0 (    0x88) MTForceThresholding::thresholdForNextRelease(MTForceFilter const&, MTParserPath const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4e278 (    0x80) (null) [FUNC, FunctionStarts] 
                0x00000001e6f4e2f8 (    0x9c) MTForceThresholding::thresholdForNextActivation(MTForceFilter const&, MTParserPath const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4e394 (    0x80) (null) [FUNC, FunctionStarts] 
                0x00000001e6f4e414 (    0x58) MTForceThresholding::preReleaseProgress(MTForceFilter const&, MTParserPath const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4e46c (    0x7c) MTForceThresholding::preActivationProgress(MTForceFilter const&, MTParserPath const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4e4e8 (   0x15c) MTForceThresholding::postActivationProgress(MTForceFilter const&, MTParserPath const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4e644 (    0xf4) MTForceThresholding::rescaleForceAsLadderProgress(MTPathStates const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4e738 (    0x78) MTForceThresholding::classifyForceLevel(MTForceFilter const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4e7b0 (    0x90) MTForceThresholding::classifyForceLevelAdaptively(MTForceFilter const&, MTParserPath const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4e840 (    0x94) MTForceThresholding::fingersMatchBehavior(MTPathStates const&, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4e8d4 (   0x220) MTForceThresholding::updateAccidentalClickPreventionOffsets(MTForceLevel, MTForceFilter const&, MTParserPath const&, MTPathStates const&, double, float, float) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4eaf4 (    0xc0) MTForceThresholding::updateAdaptiveThresholdingParameters(MTForceLevel, MTPathStates const&, MTParserPath const&, double) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4ebb4 (   0x340) MTForceThresholding::analyzeForceAndStage(MTPathStates const&, int, MTForceBehavior const&, double, double, bool, float, float) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4eef4 (    0x48) MTForceThresholding::globalForceBlocksRelease(MTPathStates const&, MTForceFilter const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4ef3c (    0x28) MTForceThresholding::blocksReleaseWhileTouching() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4ef64 (   0x1f4) MTForceThresholding::updateStage(MTForceStage, MTForceFilter const&, MTParserPath const&, float, double) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4f158 (     0x4) MTForceThresholding::dumpForceAndStage(MTForceFilter const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4f15c (    0x84) (null) [FUNC, FunctionStarts] 
                0x00000001e6f4f1e0 (    0x44) (null) [FUNC, FunctionStarts] 
                0x00000001e6f4f224 (   0x11c) (null) [FUNC, FunctionStarts] 
                0x00000001e6f4f340 (   0x1e0) MTPowerLogger::MTPowerLogger(char const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4f520 (     0x4) MTPowerLogger::MTPowerLogger(char const*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4f524 (    0x5c) MTPowerLogger::~MTPowerLogger() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4f580 (     0x4) MTPowerLogger::~MTPowerLogger() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4f584 (    0x28) MTPowerLogger::~MTPowerLogger() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4f5ac (    0x2c) MTPowerLogger::retain() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4f5d8 (    0x6c) MTPowerLogger::release() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4f644 (   0x204) MTPowerLogger::scheduleOnDispatchQueue(dispatch_queue_s*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4f848 (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001e6f4f850 (   0x168) MTPowerLogger::logPower() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4f9b8 (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001e6f4f9c0 (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001e6f4f9c8 (    0xc0) MTPowerLogger::unscheduleFromDispatchQueue(dispatch_queue_s*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4fa88 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001e6f4fa8c (    0x54) MTPowerLogger::transitionTo(MTPowerLoggerState) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4fae0 (    0xec) MTPowerLogger::logState() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4fbcc (    0xd8) MTPowerLogger::transitionToDelayed(MTPowerLoggerState, long long) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4fca4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001e6f4fcb4 (   0x14c) MTPathStatesBasic::MTPathStatesBasic(MTSurfaceDimensions const&, MTParserType, MTParserOptions, bool, unsigned int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4fe00 (    0xc0) (null) [FUNC, FunctionStarts] 
                0x00000001e6f4fec0 (    0x5c) MTPathStatesBasic::~MTPathStatesBasic() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4ff1c (     0x4) MTPathStatesBasic::~MTPathStatesBasic() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4ff20 (     0x4) MTPathStatesBasic::~MTPathStatesBasic() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4ff24 (    0x50) MTPathStatesBasic::clear() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4ff74 (    0x68) MTPathStatesBasic::initializeParams() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4ffdc (    0x10) MTPathStatesBasic::updateResolutionDependentParams() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f4ffec (    0x44) MTPathStatesBasic::checkForFingersInZones() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f50030 (   0x14c) MTPathStatesBasic::updateFastestFingerSpeed() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f5017c (    0x84) MTPathStatesBasic::flushStuckContacts() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f50200 (    0xd4) MTPathStatesBasic::forceFingerUniquenessAcrossHands() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f502d4 (     0x4) MTPathStatesBasic::tasksPreContactCopy(MTContact*, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f502d8 (    0x24) MTPathStatesBasic::tasksPrePixelatedPositions() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f502fc (     0x4) MTPathStatesBasic::tasksPostPixelatedPositions() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f50300 (   0x304) MTPathStatesBasic::expandAndFilterPackedContacts(MTContact*, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f50604 (    0x60) MTPathStatesBasic::clearExistingPathLiftoffsAndMasks() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f50664 (    0x64) MTPathStatesBasic::unpackContactFrame(MTContact*, int, double) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f506c8 (   0x12c) MTPathStatesBasic::calculateCentroidOfPaths(MTPoint*) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f507f4 (    0x58) MTPathStatesBasic::numFingerSlidWhileEngaged() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f5084c (    0x3c) (null) [FUNC, FunctionStarts] 
                0x00000001e6f50888 (    0xc0) (null) [FUNC, FunctionStarts] 
                0x00000001e6f50948 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001e6f50960 (   0x18c) (null) [FUNC, FunctionStarts] 
                0x00000001e6f50aec (    0x4c) (null) [FUNC, FunctionStarts] 
                0x00000001e6f50b38 (    0x70) (null) [FUNC, FunctionStarts] 
                0x00000001e6f50ba8 (   0x134) (null) [FUNC, FunctionStarts] 
                0x00000001e6f50cdc (    0x44) MTFingerToPathMap::MTFingerToPathMap(bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f50d20 (    0x24) MTFingerToPathMap::clearFingerPathMappings() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f50d44 (    0x44) MTFingerToPathMap::MTFingerToPathMap(bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f50d88 (     0x4) MTFingerToPathMap::~MTFingerToPathMap() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f50d8c (     0x4) MTFingerToPathMap::~MTFingerToPathMap() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f50d90 (     0x4) MTFingerToPathMap::~MTFingerToPathMap() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f50d94 (    0x2c) MTFingerToPathMap::getInnermostTouchingPath(MTPathStates const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f50dc0 (    0x2c) MTFingerToPathMap::getNextInnermostTouchingPath(MTPathStates const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f50dec (    0x2c) MTFingerToPathMap::getOutermostTouchingPath(MTPathStates const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f50e18 (    0x2c) MTFingerToPathMap::getInnermostInRangePath(MTPathStates const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f50e44 (    0x2c) MTFingerToPathMap::getOutermostInRangePath(MTPathStates const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f50e70 (    0x28) MTFingerToPathMap::getParserPathForFingerID(int, MTPathStates const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f50e98 (    0x28) MTFingerToPathMap::getMutablePathForFingerID(int, MTPathStates&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f50ec0 (     0x8) MTFingerToPathMap::clearMaxFingersTouching() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f50ec8 (    0x20) MTFingerToPathMap::updateMaxFingersTouching() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f50ee8 (   0x1d4) MTFingerToPathMap::updateFingerPathMappings(MTPathStates const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f510bc (    0x58) MTABCLogger::MTABCLogger() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f51114 (     0x4) MTABCLogger::MTABCLogger() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f51118 (    0xc4) MTABCLogger::~MTABCLogger() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f511dc (   0x218) MTABCLogger::endSession(MTABCSessionHandler*, bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f513f4 (     0x4) MTABCLogger::~MTABCLogger() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f513f8 (     0x8) MTABCLogger::createLogger(__MTDevice*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f51400 (    0x7c) MTABCLogger::_init(__MTDevice*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f5147c (    0x54) MTABCLogger::_freeSession(MTABCSessionHandler*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f514d0 (   0x59c) MTABCLogger::_prepopulateSessionEvent(MTABCSessionHandler*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f51a6c (    0xec) MTABCLogger::_dumpSessionToFile(MTABCSessionHandler*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f51b58 (    0xf0) (null) [FUNC, FunctionStarts] 
                0x00000001e6f51c48 (    0x50) (null) [FUNC, FunctionStarts] 
                0x00000001e6f51c98 (    0x44) (null) [FUNC, FunctionStarts] 
                0x00000001e6f51cdc (   0x1d4) MTABCLogger::_fullFrameCallback(__MTDevice*, unsigned char*, unsigned int, void*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f51eb0 (   0x1c8) MTABCLogger::startSession(char const*, double) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f52078 (    0xcc) (null) [FUNC, FunctionStarts] 
                0x00000001e6f52144 (    0x54) (null) [FUNC, FunctionStarts] 
                0x00000001e6f52198 (    0xbc) (null) [FUNC, FunctionStarts] 
                0x00000001e6f52254 (    0x7c) (null) [FUNC, FunctionStarts] 
                0x00000001e6f522d0 (    0x74) (null) [FUNC, FunctionStarts] 
                0x00000001e6f52344 (   0x384) (null) [FUNC, FunctionStarts] 
                0x00000001e6f526c8 (    0x44) MTForceBehavior::GetNull() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f5270c (    0x54) (null) [FUNC, FunctionStarts] 
                0x00000001e6f52760 (    0x34) MTForceBehavior::MTForceBehavior() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f52794 (    0x34) MTForceBehavior::MTForceBehavior() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f527c8 (    0x90) MTForceBehavior::operator=(MTForceBehavior const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f52858 (   0x140) MTForceBehavior::behaviorEquals(MTForceBehavior const&) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f52998 (    0x54) (null) [FUNC, FunctionStarts] 
                0x00000001e6f529ec (    0x2c) MTForceBehavior::forceSourceFingerCount() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f52a18 (    0x28) MTForceBehavior::whichButtonBehavior() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f52a40 (    0x10) MTForceBehavior::resizeThresholdLadder(unsigned int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f52a50 (    0x68) MTForceBehavior::resizeToNumStages(unsigned int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f52ab8 (    0x2c) (null) [FUNC, FunctionStarts] 
                0x00000001e6f52ae4 (    0x9c) MTForceBehavior::addStage(MTForceStage, int, int, float, float) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f52b80 (    0x58) MTForceBehavior::isThresholdLadderMonotonic(std::__1::vector<float, std::__1::allocator<float>> const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f52bd8 (     0x8) MTForceBehavior::addStage(MTForceStage, MTForceActuationConfig, MTForceThresholdConfig) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f52be0 (    0xf4) MTForceBehavior::print() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f52cd4 (   0x10c) (null) [FUNC, FunctionStarts] 
                0x00000001e6f52de0 (   0x10c) (null) [FUNC, FunctionStarts] 
                0x00000001e6f52eec (   0x11c) (null) [FUNC, FunctionStarts] 
                0x00000001e6f53008 (     0x8) MTForceBehaviorConfiguration::MTForceBehaviorConfiguration() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f53010 (     0x8) MTForceBehaviorConfiguration::MTForceBehaviorConfiguration() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f53018 (    0x90) MTForceBehaviorConfiguration::addDefaultBehavior(MTForceBehavior const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f530a8 (    0x88) MTForceBehaviorConfiguration::pushBehavior(MTForceBehavior const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f53130 (    0x8c) MTForceBehaviorConfiguration::popBehavior(MTForceBehavior const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f531bc (    0xb8) MTForceBehaviorConfiguration::clearBehaviors() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f53274 (    0xcc) MTForceBehaviorConfiguration::clearNonDefaultBehaviors() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f53340 (    0x58) MTForceBehaviorConfiguration::matchingBehaviorInStack(std::__1::vector<MTForceBehavior, std::__1::allocator<MTForceBehavior>> const&, MTForceSourceMask) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f53398 (    0x30) MTForceBehaviorConfiguration::firstFingerBehavior() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f533c8 (    0x30) MTForceBehaviorConfiguration::secondFingerBehavior() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f533f8 (    0x38) MTForceBehaviorConfiguration::collectiveBehavior(int) const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f53430 (    0x70) MTForceClickHistory::MTForceClickHistory(float) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f534a0 (   0x1d8) MTForceClickHistory::initHistory(float) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f53678 (     0x4) MTForceClickHistory::MTForceClickHistory(float) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f5367c (    0x54) MTForceClickHistory::~MTForceClickHistory() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f536d0 (    0x18) MTForceClickHistory::clearHistory() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f536e8 (     0x4) MTForceClickHistory::~MTForceClickHistory() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f536ec (   0x16c) MTForceClickHistory::updateForceArray(std::__1::vector<float, std::__1::allocator<float>>&, float) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f53858 (    0x2c) MTForceClickHistory::addDrag(float) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f53884 (    0x2c) MTForceClickHistory::addClick(float) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f538b0 (   0x100) MTForceManagement::MTForceManagement(MTSurfaceDimensions const&, MTParserType, MTParserOptions, bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f539b0 (   0x120) MTForceManagement::clearState() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f53ad0 (     0x8) MTForceManagement::MTForceManagement(MTSurfaceDimensions const&, MTParserType, MTParserOptions, bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f53ad8 (   0x100) MTForceManagement::MTForceManagement() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f53bd8 (     0x4) MTForceManagement::MTForceManagement() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f53bdc (    0x84) MTForceManagement::setForceThresholdQualifiers(MTForceThresholdQualifiers const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f53c60 (   0x198) MTForceManagement::setForceActuationQualifiers(MTForceActuationQualifiers const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f53df8 (    0x58) MTForceManagement::setDisableClickWaveformAdaptation(bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f53e50 (    0x20) MTForceManagement::setDisableForceThresholdAdaptation(bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f53e70 (    0x70) MTForceManagement::setFirstStageClickPreference(MTClickStrength) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f53ee0 (    0x24) MTForceManagement::setSecondStageClickPreference(MTClickStrength) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f53f04 (    0x3c) MTForceManagement::whichForceButtonActivated() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f53f40 (    0x20) MTForceManagement::isForceButtonActivated() const [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f53f60 (   0x174) MTForceManagement::constructForceEvent(int, int, MTPathStates const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f540d4 (   0x134) MTForceManagement::updateStatusVariablesFromForceEvent(int, MTForceEvent, MTPathStates const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f54208 (   0x114) MTForceManagement::appendForceEvent(__IOHIDEvent*, MTForceEvent) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f5431c (    0x2c) MTForceManagement::constructThresholdInfo(int, int, MTPathStates const&, MTForceEvent) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f54348 (    0x40) MTForceManagement::constructClickInfo(int, int, MTPathStates const&, MTForceEvent) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f54388 (    0xa0) MTForceManagement::appendThresholdInfo(ThresholdInfo, __IOHIDEvent*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f54428 (    0xa0) MTForceManagement::appendClickInfo(ClickInfo, __IOHIDEvent*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f544c8 (   0x214) MTForceManagement::actuateForceAndHIDEvents(MTPathStates const&, MTActuatorManagement&, __IOHIDEvent*, bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f546dc (    0x68) MTActuatorManagement::getActuatorRef() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f54744 (   0x134) MTForceManagement::actuateOnStageChanges(MTPathStates const&, MTActuatorManagement&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f54878 (    0xe0) MTForceManagement::strongestProgressPathID(MTPathStates const&, bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f54958 (    0xb0) MTForceManagement::strongestForcePathID(MTPathStates const&, bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f54a08 (   0x1a4) MTForceManagement::actuateThresholderPath(MTActuatorManagement&, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f54bac (    0x2c) MTActuatorManagement::getActuationOptions(MTClickStrength, bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f54bd8 (    0xd8) MTActuatorManagement::actuateWaveformID(int, float, float, unsigned int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f54cb0 (    0x88) MTForceManagement::primeBasicBehaviors(int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f54d38 (    0x74) MTForceManagement::analyzeAndManageStrongestForces(MTPathStates const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f54dac (    0xb0) MTForceManagement::managePreActivation(MTPathStates const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f54e5c (    0x84) MTForceManagement::managePostActivation(MTPathStates const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f54ee0 (    0x98) MTForceManagement::analyzeDistributedForces(MTPathStates const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f54f78 (    0xc8) MTForceManagement::lockBehaviorsOnActivatedFinger(int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f55040 (    0x64) MTForceManagement::disableAllThresholders() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f550a4 (    0x70) MTForceManagement::setBehaviorOnThresholders(MTForceBehavior const&, int, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f55114 (    0x58) MTForceManagement::disableFingerThresholders() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f5516c (    0x40) MTForceManagement::disableCollectiveThresholder() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f551ac (    0x6c) MTForceManagement::setBehaviorOnOtherFingerThresholders(MTForceBehavior const&, int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f55218 (    0x9c) MTForceManagement::setOverrideBehavior(MTForceBehavior const&) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f552b4 (    0x70) MTActuatorManagement::MTActuatorManagement(__MTDevice*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f55324 (     0x4) MTActuatorManagement::MTActuatorManagement(__MTDevice*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f55328 (    0x6c) MTActuatorManagement::~MTActuatorManagement() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f55394 (     0x4) MTActuatorManagement::~MTActuatorManagement() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f55398 (    0xcc) MTActuatorManagement::AppleActuatorDeviceMatchedCallback(void*, unsigned int) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f55464 (    0x7c) MTActuatorManagement::setFirmwareClicks(MTClickStrength, bool) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f554e0 (    0x3c) MTActuatorManagement::systemActuationsEnabledChanged() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f5551c (   0x18c) MTActuatorManagement::scheduleOnDispatchQueue(dispatch_queue_s*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f556a8 (    0x38) MTActuatorManagement::unscheduleFromDispatchQueue(dispatch_queue_s*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f556e0 (    0x4c) MTActuatorManagement::reloadActuations() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f5572c (    0x4c) MTActuatorManagement::reclaimHostClickControl() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f55778 (    0xb8) (null) [FUNC, FunctionStarts] 
                0x00000001e6f55830 (    0x54) (null) [FUNC, FunctionStarts] 
                0x00000001e6f55884 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001e6f5589c (    0x48) (null) [FUNC, FunctionStarts] 
                0x00000001e6f558e4 (    0x38) (null) [FUNC, FunctionStarts] 
                0x00000001e6f5591c (   0x11c) (null) [FUNC, FunctionStarts] 
                0x00000001e6f55a38 (    0xf8) (null) [FUNC, FunctionStarts] 
                0x00000001e6f55b30 (    0x78) (null) [FUNC, FunctionStarts] 
                0x00000001e6f55ba8 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001e6f55bc0 (    0x4c) (null) [FUNC, FunctionStarts] 
                0x00000001e6f55c0c (    0xc0) (null) [FUNC, FunctionStarts] 
                0x00000001e6f55ccc (    0x38) (null) [FUNC, FunctionStarts] 
                0x00000001e6f55d04 (    0x54) (null) [FUNC, FunctionStarts] 
                0x00000001e6f55d58 (    0x34) (null) [FUNC, FunctionStarts] 
                0x00000001e6f55d8c (    0x48) (null) [FUNC, FunctionStarts] 
                0x00000001e6f55dd4 (    0x60) (null) [FUNC, FunctionStarts] 
                0x00000001e6f55e34 (    0xb0) (null) [FUNC, FunctionStarts] 
                0x00000001e6f55ee4 (    0x58) (null) [FUNC, FunctionStarts] 
                0x00000001e6f55f3c (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001e6f55f54 (    0x4c) (null) [FUNC, FunctionStarts] 
                0x00000001e6f55fa0 (    0x38) (null) [FUNC, FunctionStarts] 
                0x00000001e6f55fd8 (    0x44) MTLoggingPlugin [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f5601c (    0x30) (null) [FUNC, FunctionStarts] 
                0x00000001e6f5604c (    0x20) MTInterferenceMonitor::MTInterferenceMonitor() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f5606c (    0x20) MTInterferenceMonitor::MTInterferenceMonitor() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f5608c (     0x4) MTInterferenceMonitor::~MTInterferenceMonitor() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f56090 (     0x4) MTInterferenceMonitor::~MTInterferenceMonitor() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f56094 (     0x4) MTInterferenceMonitor::~MTInterferenceMonitor() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f56098 (     0xc) MTInterferenceMonitor::start(dispatch_queue_s*, __MTDevice*) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f560a4 (     0x4) MTInterferenceMonitor::stop() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f560a8 (     0xc) MTInterferenceMonitor::restoreStateToDevice() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f560b4 (    0x24) (null) [FUNC, FunctionStarts] 
                0x00000001e6f560d8 (    0x1c) (null) [FUNC, FunctionStarts] 
                0x00000001e6f560f4 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001e6f56108 (    0x24) (null) [FUNC, FunctionStarts] 
                0x00000001e6f5612c (    0x28) (null) [FUNC, FunctionStarts] 
                0x00000001e6f56154 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001e6f56168 (    0x74) (null) [FUNC, FunctionStarts] 
                0x00000001e6f561dc (    0xa8) (null) [FUNC, FunctionStarts] 
                0x00000001e6f56284 (   0x2bc) AWDMultitouchBootEventReadFrom [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f56540 (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001e6f56548 (    0x90) (null) [FUNC, FunctionStarts] 
                0x00000001e6f565d8 (    0x5c) (null) [FUNC, FunctionStarts] 
                0x00000001e6f56634 (    0x84) (null) [FUNC, FunctionStarts] 
                0x00000001e6f566b8 (    0xa4) (null) [FUNC, FunctionStarts] 
                0x00000001e6f5675c (    0x54) (null) [FUNC, FunctionStarts] 
                0x00000001e6f567b0 (    0x5c) (null) [FUNC, FunctionStarts] 
                0x00000001e6f5680c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001e6f5681c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001e6f5682c (    0x54) (null) [FUNC, FunctionStarts] 
                0x00000001e6f56880 (    0x24) (null) [FUNC, FunctionStarts] 
                0x00000001e6f568a4 (    0x1c) (null) [FUNC, FunctionStarts] 
                0x00000001e6f568c0 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001e6f568d4 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001e6f568e8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001e6f568f8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001e6f56908 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001e6f5691c (    0x94) (null) [FUNC, FunctionStarts] 
                0x00000001e6f569b0 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001e6f569c8 (    0x74) (null) [FUNC, FunctionStarts] 
                0x00000001e6f56a3c (    0x94) (null) [FUNC, FunctionStarts] 
                0x00000001e6f56ad0 (   0x3a8) AWDMultitouchHardwareStatusReadFrom [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001e6f56e78 (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001e6f56e80 (    0x90) (null) [FUNC, FunctionStarts] 
                0x00000001e6f56f10 (    0xa4) (null) [FUNC, FunctionStarts] 
                0x00000001e6f56fb4 (    0x7c) (null) [FUNC, FunctionStarts] 
                0x00000001e6f57030 (    0xa0) (null) [FUNC, FunctionStarts] 
                0x00000001e6f570d0 (    0x60) (null) [FUNC, FunctionStarts] 
                0x00000001e6f57130 (    0x90) (null) [FUNC, FunctionStarts] 
                0x00000001e6f571c0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001e6f571d0 (    0x74) (null) [FUNC, FunctionStarts] 
                0x00000001e6f57244 (    0x84) (null) [FUNC, FunctionStarts] 
                0x00000001e6f572c8 (    0x84) (null) [FUNC, FunctionStarts] 
                0x00000001e6f5734c (    0x78) (null) [FUNC, FunctionStarts] 
                0x00000001e6f573c4 (    0x2c) (null) [FUNC, FunctionStarts] 
                0x00000001e6f573f0 (    0x2c) (null) [FUNC, FunctionStarts] 
                0x00000001e6f5741c (    0x98) (null) [FUNC, FunctionStarts] 
                0x00000001e6f574b4 (    0x9c) (null) [FUNC, FunctionStarts] 
                0x00000001e6f57550 (    0x34) (null) [FUNC, FunctionStarts] 
                0x00000001e6f57584 (    0x88) (null) [FUNC, FunctionStarts] 
                0x00000001e6f5760c (    0x34) (null) [FUNC, FunctionStarts] 
                0x00000001e6f57640 (    0x34) (null) [FUNC, FunctionStarts] 
                0x00000001e6f57674 (    0x34) (null) [FUNC, FunctionStarts] 
                0x00000001e6f576a8 (    0x74) (null) [FUNC, FunctionStarts] 
                0x00000001e6f5771c (    0x2c) (null) [FUNC, FunctionStarts] 
                0x00000001e6f57748 (    0x2c) (null) [FUNC, FunctionStarts] 
                0x00000001e6f57774 (    0x2c) (null) [FUNC, FunctionStarts] 
                0x00000001e6f577a0 (    0x2c) (null) [FUNC, FunctionStarts] 
                0x00000001e6f577cc (    0x2c) (null) [FUNC, FunctionStarts] 
                0x00000001e6f577f8 (    0x2c) (null) [FUNC, FunctionStarts] 
                0x00000001e6f57824 (    0x2c) (null) [FUNC, FunctionStarts] 
                0x00000001e6f57850 (    0x2c) (null) [FUNC, FunctionStarts] 
                0x00000001e6f5787c (    0x78) (null) [FUNC, FunctionStarts] 
                0x00000001e6f578f4 (    0x2c) (null) [FUNC, FunctionStarts] 
                0x00000001e6f57920 (    0x2c) (null) [FUNC, FunctionStarts] 
                0x00000001e6f5794c (    0x2c) (null) [FUNC, FunctionStarts] 
                0x00000001e6f57978 (    0x2c) (null) [FUNC, FunctionStarts] 
                0x00000001e6f579a4 (    0xac) (null) [FUNC, FunctionStarts] 
            0x00000001e6f57a50 (  0x16e0) __TEXT __auth_stubs
                0x00000001e6f57a50 (    0x10) DYLD-STUB$$CFAbsoluteTimeGetCurrent [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57a60 (    0x10) DYLD-STUB$$CFArrayAppendValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57a70 (    0x10) DYLD-STUB$$CFArrayCreateCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57a80 (    0x10) DYLD-STUB$$CFArrayCreateMutable [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57a90 (    0x10) DYLD-STUB$$CFArrayGetCount [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57aa0 (    0x10) DYLD-STUB$$CFArrayGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57ab0 (    0x10) DYLD-STUB$$CFArrayGetValueAtIndex [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57ac0 (    0x10) DYLD-STUB$$CFArrayRemoveValueAtIndex [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57ad0 (    0x10) DYLD-STUB$$CFBooleanGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57ae0 (    0x10) DYLD-STUB$$CFBooleanGetValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57af0 (    0x10) DYLD-STUB$$CFDataCreateMutable [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57b00 (    0x10) DYLD-STUB$$CFDataGetBytePtr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57b10 (    0x10) DYLD-STUB$$CFDataGetLength [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57b20 (    0x10) DYLD-STUB$$CFDataGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57b30 (    0x10) DYLD-STUB$$CFDataSetLength [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57b40 (    0x10) DYLD-STUB$$CFDateFormatterCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57b50 (    0x10) DYLD-STUB$$CFDateFormatterCreateStringWithAbsoluteTime [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57b60 (    0x10) DYLD-STUB$$CFDateFormatterSetProperty [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57b70 (    0x10) DYLD-STUB$$CFDictionaryAddValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57b80 (    0x10) DYLD-STUB$$CFDictionaryCreateCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57b90 (    0x10) DYLD-STUB$$CFDictionaryCreateMutable [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57ba0 (    0x10) DYLD-STUB$$CFDictionaryCreateMutableCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57bb0 (    0x10) DYLD-STUB$$CFDictionaryGetCount [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57bc0 (    0x10) DYLD-STUB$$CFDictionaryGetKeysAndValues [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57bd0 (    0x10) DYLD-STUB$$CFDictionaryGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57be0 (    0x10) DYLD-STUB$$CFDictionaryGetValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57bf0 (    0x10) DYLD-STUB$$CFDictionaryRemoveAllValues [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57c00 (    0x10) DYLD-STUB$$CFDictionaryRemoveValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57c10 (    0x10) DYLD-STUB$$CFDictionarySetValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57c20 (    0x10) DYLD-STUB$$CFEqual [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57c30 (    0x10) DYLD-STUB$$CFGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57c40 (    0x10) DYLD-STUB$$CFMakeCollectable [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57c50 (    0x10) DYLD-STUB$$CFNotificationCenterAddObserver [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57c60 (    0x10) DYLD-STUB$$CFNotificationCenterGetDarwinNotifyCenter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57c70 (    0x10) DYLD-STUB$$CFNotificationCenterGetDistributedCenter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57c80 (    0x10) DYLD-STUB$$CFNotificationCenterPostNotificationWithOptions [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57c90 (    0x10) DYLD-STUB$$CFNotificationCenterRemoveObserver [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57ca0 (    0x10) DYLD-STUB$$CFNumberCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57cb0 (    0x10) DYLD-STUB$$CFNumberGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57cc0 (    0x10) DYLD-STUB$$CFNumberGetValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57cd0 (    0x10) DYLD-STUB$$CFNumberIsFloatType [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57ce0 (    0x10) DYLD-STUB$$CFPlugInAddInstanceForFactory [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57cf0 (    0x10) DYLD-STUB$$CFPlugInRemoveInstanceForFactory [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57d00 (    0x10) DYLD-STUB$$CFPreferencesGetAppBooleanValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57d10 (    0x10) DYLD-STUB$$CFRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57d20 (    0x10) DYLD-STUB$$CFRetain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57d30 (    0x10) DYLD-STUB$$CFShow [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57d40 (    0x10) DYLD-STUB$$CFStringAppend [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57d50 (    0x10) DYLD-STUB$$CFStringCompare [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57d60 (    0x10) DYLD-STUB$$CFStringCreateMutableCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57d70 (    0x10) DYLD-STUB$$CFStringCreateWithCString [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57d80 (    0x10) DYLD-STUB$$CFStringCreateWithFormat [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57d90 (    0x10) DYLD-STUB$$CFStringFind [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57da0 (    0x10) DYLD-STUB$$CFStringGetCString [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57db0 (    0x10) DYLD-STUB$$CFStringGetCStringPtr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57dc0 (    0x10) DYLD-STUB$$CFStringGetIntValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57dd0 (    0x10) DYLD-STUB$$CFStringGetLength [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57de0 (    0x10) DYLD-STUB$$CFStringGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57df0 (    0x10) DYLD-STUB$$CFTimeZoneCopySystem [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57e00 (    0x10) DYLD-STUB$$CFUUIDCreateFromUUIDBytes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57e10 (    0x10) DYLD-STUB$$CFUUIDGetConstantUUIDWithBytes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57e20 (    0x10) DYLD-STUB$$IOAllowPowerChange [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57e30 (    0x10) DYLD-STUB$$IODeregisterForSystemPower [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57e40 (    0x10) DYLD-STUB$$IOHIDEventAppendEvent [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57e50 (    0x10) DYLD-STUB$$IOHIDEventConformsTo [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57e60 (    0x10) DYLD-STUB$$IOHIDEventCreateBoundaryScrollEvent [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57e70 (    0x10) DYLD-STUB$$IOHIDEventCreateButtonEvent [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57e80 (    0x10) DYLD-STUB$$IOHIDEventCreateCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57e90 (    0x10) DYLD-STUB$$IOHIDEventCreateDigitizerEvent [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57ea0 (    0x10) DYLD-STUB$$IOHIDEventCreateDigitizerFingerEventWithQuality [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57eb0 (    0x10) DYLD-STUB$$IOHIDEventCreateDigitizerStylusEventWithPolarOrientation [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57ec0 (    0x10) DYLD-STUB$$IOHIDEventCreateDockSwipeEvent [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57ed0 (    0x10) DYLD-STUB$$IOHIDEventCreateFluidTouchGestureEvent [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57ee0 (    0x10) DYLD-STUB$$IOHIDEventCreateForceEvent [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57ef0 (    0x10) DYLD-STUB$$IOHIDEventCreateKeyboardEvent [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57f00 (    0x10) DYLD-STUB$$IOHIDEventCreateMouseEvent [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57f10 (    0x10) DYLD-STUB$$IOHIDEventCreateNavigationSwipeEvent [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57f20 (    0x10) DYLD-STUB$$IOHIDEventCreatePolarOrientationEvent [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57f30 (    0x10) DYLD-STUB$$IOHIDEventCreateProximtyEvent [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57f40 (    0x10) DYLD-STUB$$IOHIDEventCreateRelativePointerEvent [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57f50 (    0x10) DYLD-STUB$$IOHIDEventCreateRotationEvent [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57f60 (    0x10) DYLD-STUB$$IOHIDEventCreateScaleEvent [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57f70 (    0x10) DYLD-STUB$$IOHIDEventCreateScrollEvent [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57f80 (    0x10) DYLD-STUB$$IOHIDEventCreateSwipeEvent [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57f90 (    0x10) DYLD-STUB$$IOHIDEventCreateSymbolicHotKeyEvent [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57fa0 (    0x10) DYLD-STUB$$IOHIDEventCreateTranslationEvent [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57fb0 (    0x10) DYLD-STUB$$IOHIDEventCreateVelocityEvent [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57fc0 (    0x10) DYLD-STUB$$IOHIDEventCreateVendorDefinedEvent [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57fd0 (    0x10) DYLD-STUB$$IOHIDEventCreateZoomToggleEvent [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57fe0 (    0x10) DYLD-STUB$$IOHIDEventGetChildren [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f57ff0 (    0x10) DYLD-STUB$$IOHIDEventGetEvent [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58000 (    0x10) DYLD-STUB$$IOHIDEventGetEventFlags [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58010 (    0x10) DYLD-STUB$$IOHIDEventGetFloatValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58020 (    0x10) DYLD-STUB$$IOHIDEventGetIntegerValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58030 (    0x10) DYLD-STUB$$IOHIDEventGetPhase [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58040 (    0x10) DYLD-STUB$$IOHIDEventGetTimeStamp [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58050 (    0x10) DYLD-STUB$$IOHIDEventGetType [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58060 (    0x10) DYLD-STUB$$IOHIDEventGetVendorDefinedData [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58070 (    0x10) DYLD-STUB$$IOHIDEventRemoveEvent [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58080 (    0x10) DYLD-STUB$$IOHIDEventSetEventFlags [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58090 (    0x10) DYLD-STUB$$IOHIDEventSetFloatValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f580a0 (    0x10) DYLD-STUB$$IOHIDEventSetIntegerValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f580b0 (    0x10) DYLD-STUB$$IOHIDEventSetPhase [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f580c0 (    0x10) DYLD-STUB$$IOHIDEventSetScrollMomentum [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f580d0 (    0x10) DYLD-STUB$$IOHIDEventSetTimeStamp [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f580e0 (    0x10) DYLD-STUB$$IOHIDEventTypeGetName [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f580f0 (    0x10) DYLD-STUB$$IOHIDPreferencesCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58100 (    0x10) DYLD-STUB$$IOHIDPreferencesCopyDomain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58110 (    0x10) DYLD-STUB$$IOHIDPreferencesSet [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58120 (    0x10) DYLD-STUB$$IOHIDPreferencesSynchronize [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58130 (    0x10) DYLD-STUB$$IOIteratorIsValid [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58140 (    0x10) DYLD-STUB$$IOIteratorNext [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58150 (    0x10) DYLD-STUB$$IONotificationPortCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58160 (    0x10) DYLD-STUB$$IONotificationPortDestroy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58170 (    0x10) DYLD-STUB$$IONotificationPortSetDispatchQueue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58180 (    0x10) DYLD-STUB$$IOObjectRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58190 (    0x10) DYLD-STUB$$IOObjectRetain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f581a0 (    0x10) DYLD-STUB$$IOPMAssertionCreateWithName [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f581b0 (    0x10) DYLD-STUB$$IOPMAssertionRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f581c0 (    0x10) DYLD-STUB$$IORegisterForSystemPower [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f581d0 (    0x10) DYLD-STUB$$IORegistryEntryCreateCFProperties [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f581e0 (    0x10) DYLD-STUB$$IORegistryEntryCreateCFProperty [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f581f0 (    0x10) DYLD-STUB$$IORegistryEntryGetRegistryEntryID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58200 (    0x10) DYLD-STUB$$IORegistryEntrySetCFProperty [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58210 (    0x10) DYLD-STUB$$IOReportChannelGetCategories [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58220 (    0x10) DYLD-STUB$$IOReportCopyChannelsForDriver [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58230 (    0x10) DYLD-STUB$$IOReportCreateSamples [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58240 (    0x10) DYLD-STUB$$IOReportCreateSubscription [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58250 (    0x10) DYLD-STUB$$IOReportGetChannelCount [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58260 (    0x10) DYLD-STUB$$IOReportPrune [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58270 (    0x10) DYLD-STUB$$IOServiceAddMatchingNotification [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58280 (    0x10) DYLD-STUB$$IOServiceClose [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58290 (    0x10) DYLD-STUB$$IOServiceNameMatching [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f582a0 (    0x10) DYLD-STUB$$MTAbsoluteTimeGetCurrent [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f582b0 (    0x10) DYLD-STUB$$MTActuatorActuate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f582c0 (    0x10) DYLD-STUB$$MTActuatorClose [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f582d0 (    0x10) DYLD-STUB$$MTActuatorGetReport [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f582e0 (    0x10) DYLD-STUB$$MTActuatorGetService [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f582f0 (    0x10) DYLD-STUB$$MTActuatorGetSystemActuationsEnabled [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58300 (    0x10) DYLD-STUB$$MTActuatorIsOpen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58310 (    0x10) DYLD-STUB$$MTActuatorLoadActuations [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58320 (    0x10) DYLD-STUB$$MTActuatorOpen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58330 (    0x10) DYLD-STUB$$MTActuatorReclaimHostClickControl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58340 (    0x10) DYLD-STUB$$MTActuatorSetFirmwareClicks [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58350 (    0x10) DYLD-STUB$$MTActuatorSetReport [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58360 (    0x10) DYLD-STUB$$MTContact_getEllipseEccentricity [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58370 (    0x10) DYLD-STUB$$MTContact_getEllipseOrientationDegrees [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58380 (    0x10) DYLD-STUB$$MTContact_isActive [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58390 (    0x10) DYLD-STUB$$MTDeviceBeginRecordingToData [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f583a0 (    0x10) DYLD-STUB$$MTDeviceCopyDeviceUsagePairs [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f583b0 (    0x10) DYLD-STUB$$MTDeviceCreateFromService [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f583c0 (    0x10) DYLD-STUB$$MTDeviceCreateMultitouchDispatchSource [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f583d0 (    0x10) DYLD-STUB$$MTDeviceDispatchKeyboardEvent [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f583e0 (    0x10) DYLD-STUB$$MTDeviceDriverIsReady [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f583f0 (    0x10) DYLD-STUB$$MTDeviceEnableBinaryFilters [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58400 (    0x10) DYLD-STUB$$MTDeviceEnableWorkIntervalNotification [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58410 (    0x10) DYLD-STUB$$MTDeviceEndRecording [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58420 (    0x10) DYLD-STUB$$MTDeviceGetAccurateMaxDigitizerPressureValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58430 (    0x10) DYLD-STUB$$MTDeviceGetCriticalErrors [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58440 (    0x10) DYLD-STUB$$MTDeviceGetDeviceID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58450 (    0x10) DYLD-STUB$$MTDeviceGetDeviceTimestampOffset [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58460 (    0x10) DYLD-STUB$$MTDeviceGetExtendedMaxDigitizerPressureValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58470 (    0x10) DYLD-STUB$$MTDeviceGetFamilyID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58480 (    0x10) DYLD-STUB$$MTDeviceGetMTActuator [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58490 (    0x10) DYLD-STUB$$MTDeviceGetMaxHoverHeightValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f584a0 (    0x10) DYLD-STUB$$MTDeviceGetMinDigitizerPressureValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f584b0 (    0x10) DYLD-STUB$$MTDeviceGetParserOptions [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f584c0 (    0x10) DYLD-STUB$$MTDeviceGetParserType [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f584d0 (    0x10) DYLD-STUB$$MTDeviceGetReport [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f584e0 (    0x10) DYLD-STUB$$MTDeviceGetResetOnLockMs [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f584f0 (    0x10) DYLD-STUB$$MTDeviceGetResetOnUnlockMs [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58500 (    0x10) DYLD-STUB$$MTDeviceGetSensorDimensions [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58510 (    0x10) DYLD-STUB$$MTDeviceGetSensorRegionOfType [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58520 (    0x10) DYLD-STUB$$MTDeviceGetSensorSurfaceDimensions [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58530 (    0x10) DYLD-STUB$$MTDeviceGetService [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58540 (    0x10) DYLD-STUB$$MTDeviceGetSubdeviceID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58550 (    0x10) DYLD-STUB$$MTDeviceGetSystemForceResponseEnabled [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58560 (    0x10) DYLD-STUB$$MTDeviceGetTouchSizeIdentifier [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58570 (    0x10) DYLD-STUB$$MTDeviceGetTransportMethod [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58580 (    0x10) DYLD-STUB$$MTDeviceGetVersion [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58590 (    0x10) DYLD-STUB$$MTDeviceHasExpectedVersion [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f585a0 (    0x10) DYLD-STUB$$MTDeviceInjectFrame [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f585b0 (    0x10) DYLD-STUB$$MTDeviceIsBuiltIn [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f585c0 (    0x10) DYLD-STUB$$MTDeviceIsRunning [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f585d0 (    0x10) DYLD-STUB$$MTDeviceIssueDriverRequest [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f585e0 (    0x10) DYLD-STUB$$MTDeviceMarkRecording [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f585f0 (    0x10) DYLD-STUB$$MTDeviceNeedsFirstPowerOffSuppressed [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58600 (    0x10) DYLD-STUB$$MTDeviceNotifyFirstPowerOffSuppressed [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58610 (    0x10) DYLD-STUB$$MTDeviceNotifyWorkInterval [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58620 (    0x10) DYLD-STUB$$MTDevicePowerControlSupported [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58630 (    0x10) DYLD-STUB$$MTDevicePowerGetState [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58640 (    0x10) DYLD-STUB$$MTDevicePowerSetState [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58650 (    0x10) DYLD-STUB$$MTDeviceRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58660 (    0x10) DYLD-STUB$$MTDeviceSendExternalMessage [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58670 (    0x10) DYLD-STUB$$MTDeviceSetBinaryFiltersProperty [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58680 (    0x10) DYLD-STUB$$MTDeviceSetInputDetectionCallbackTriggerMask [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58690 (    0x10) DYLD-STUB$$MTDeviceSetInputDetectionModeForOrientation [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f586a0 (    0x10) DYLD-STUB$$MTDeviceSetPickButtonShouldSendSecondaryClick [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f586b0 (    0x10) DYLD-STUB$$MTDeviceSetRecordingDesiredFrameCount [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f586c0 (    0x10) DYLD-STUB$$MTDeviceSetReport [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f586d0 (    0x10) DYLD-STUB$$MTDeviceSetSurfaceOrientation [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f586e0 (    0x10) DYLD-STUB$$MTDeviceSetSurfaceOrientationMode [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f586f0 (    0x10) DYLD-STUB$$MTDeviceSetTouchMode [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58700 (    0x10) DYLD-STUB$$MTDeviceShouldDispatchNormalizedVelocity [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58710 (    0x10) DYLD-STUB$$MTDeviceShouldDispatchRelativeCoordinates [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58720 (    0x10) DYLD-STUB$$MTDeviceShouldResetOnButton [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58730 (    0x10) DYLD-STUB$$MTDeviceStart [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58740 (    0x10) DYLD-STUB$$MTDeviceStop [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58750 (    0x10) DYLD-STUB$$MTDeviceSupportsActuation [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58760 (    0x10) DYLD-STUB$$MTDeviceSupportsForce [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58770 (    0x10) DYLD-STUB$$MTDeviceSupportsSilentClick [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58780 (    0x10) DYLD-STUB$$MTDeviceSupportsTapToWake [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58790 (    0x10) DYLD-STUB$$MTDeviceSupportsTouchReadyNotification [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f587a0 (    0x10) DYLD-STUB$$MTDeviceSupportsUSBChargingNotification [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f587b0 (    0x10) DYLD-STUB$$MTDeviceSupportsWirelessChargingNotification [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f587c0 (    0x10) DYLD-STUB$$MTDeviceUpdateDynamicCalibration [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f587d0 (    0x10) DYLD-STUB$$MTDeviceUpdateUILockState [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f587e0 (    0x10) DYLD-STUB$$MTDeviceUseContextualPower [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f587f0 (    0x10) DYLD-STUB$$MTGetPathStageName [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58800 (    0x10) DYLD-STUB$$MTRegisterButtonStateCallback [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58810 (    0x10) DYLD-STUB$$MTRegisterContactFrameCallbackWithRefcon [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58820 (    0x10) DYLD-STUB$$MTRegisterExternalMessageCallback [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58830 (    0x10) DYLD-STUB$$MTRegisterFrameHeaderCallback [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58840 (    0x10) DYLD-STUB$$MTRegisterFrameProcessingEntryExitCallback [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58850 (    0x10) DYLD-STUB$$MTRegisterFullFrameCallback [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58860 (    0x10) DYLD-STUB$$MTRegisterImageCallbackWithRefcon [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58870 (    0x10) DYLD-STUB$$MTRegisterInputDetectionCallback [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58880 (    0x10) DYLD-STUB$$MTRegisterNotificationEventCallback [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58890 (    0x10) DYLD-STUB$$MTRegisterProcessedFrameCallback [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f588a0 (    0x10) DYLD-STUB$$MTRegisterRelativePointerCallback [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f588b0 (    0x10) DYLD-STUB$$MTRegisterTrackingCallback [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f588c0 (    0x10) DYLD-STUB$$MTSwapInt32HostToDevice [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f588d0 (    0x10) DYLD-STUB$$MTUnregisterButtonStateCallback [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f588e0 (    0x10) DYLD-STUB$$MTUnregisterContactFrameCallback [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f588f0 (    0x10) DYLD-STUB$$MTUnregisterExternalMessageCallback [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58900 (    0x10) DYLD-STUB$$MTUnregisterFrameProcessingEntryExitCallback [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58910 (    0x10) DYLD-STUB$$MTUnregisterFullFrameCallback [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58920 (    0x10) DYLD-STUB$$MTUnregisterImageCallback [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58930 (    0x10) DYLD-STUB$$MTUnregisterInputDetectionCallback [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58940 (    0x10) DYLD-STUB$$MTUnregisterNotificationEventCallback [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58950 (    0x10) DYLD-STUB$$MTUnregisterTrackingCallback [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58960 (    0x10) DYLD-STUB$$NSClassFromString [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58970 (    0x10) DYLD-STUB$$NSSelectorFromString [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58980 (    0x10) DYLD-STUB$$NSTemporaryDirectory [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58990 (    0x10) DYLD-STUB$$PBDataWriterWriteUint32Field [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f589a0 (    0x10) DYLD-STUB$$PBDataWriterWriteUint64Field [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f589b0 (    0x10) DYLD-STUB$$PBReaderPlaceMark [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f589c0 (    0x10) DYLD-STUB$$PBReaderRecallMark [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f589d0 (    0x10) DYLD-STUB$$PBReaderSkipValueWithTag [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f589e0 (    0x10) DYLD-STUB$$PBRepeatedUInt32Add [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f589f0 (    0x10) DYLD-STUB$$PBRepeatedUInt32Clear [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58a00 (    0x10) DYLD-STUB$$PBRepeatedUInt32Copy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58a10 (    0x10) DYLD-STUB$$PBRepeatedUInt32Hash [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58a20 (    0x10) DYLD-STUB$$PBRepeatedUInt32IsEqual [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58a30 (    0x10) DYLD-STUB$$PBRepeatedUInt32NSArray [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58a40 (    0x10) DYLD-STUB$$PBRepeatedUInt32Set [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58a50 (    0x10) DYLD-STUB$$_Block_object_assign [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58a60 (    0x10) DYLD-STUB$$_Block_object_dispose [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58a70 (    0x10) DYLD-STUB$$_CFRuntimeCreateInstance [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58a80 (    0x10) DYLD-STUB$$_CFRuntimeRegisterClass [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58a90 (    0x10) DYLD-STUB$$_IOHIDEventSetAttachment [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58aa0 (    0x10) DYLD-STUB$$_Unwind_Resume [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58ab0 (    0x10) DYLD-STUB$$std::logic_error::logic_error(char const*) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58ac0 (    0x10) DYLD-STUB$$std::bad_array_new_length::bad_array_new_length() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58ad0 (    0x10) DYLD-STUB$$void std::__1::__sort<std::__1::__less<float, float>&, float*>(float*, float*, std::__1::__less<float, float>&) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58ae0 (    0x10) DYLD-STUB$$std::terminate() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58af0 (    0x10) DYLD-STUB$$operator delete(void*) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58b00 (    0x10) DYLD-STUB$$operator new(unsigned long) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58b10 (    0x10) DYLD-STUB$$__assert_rtn [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58b20 (    0x10) DYLD-STUB$$__cxa_allocate_exception [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58b30 (    0x10) DYLD-STUB$$__cxa_begin_catch [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58b40 (    0x10) DYLD-STUB$$__cxa_free_exception [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58b50 (    0x10) DYLD-STUB$$__cxa_throw [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58b60 (    0x10) DYLD-STUB$$__sincosf_stret [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58b70 (    0x10) DYLD-STUB$$__stack_chk_fail [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58b80 (    0x10) DYLD-STUB$$_mthid_copyDeviceInfo [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58b90 (    0x10) DYLD-STUB$$_mthid_unserializeGestureConfiguration [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58ba0 (    0x10) DYLD-STUB$$_os_feature_enabled_impl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58bb0 (    0x10) DYLD-STUB$$_os_log_debug_impl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58bc0 (    0x10) DYLD-STUB$$_os_log_error_impl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58bd0 (    0x10) DYLD-STUB$$_os_log_impl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58be0 (    0x10) DYLD-STUB$$_os_signpost_emit_with_name_impl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58bf0 (    0x10) DYLD-STUB$$analytics_send_event_lazy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58c00 (    0x10) DYLD-STUB$$atan2f [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58c10 (    0x10) DYLD-STUB$$bzero [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58c20 (    0x10) DYLD-STUB$$cbrtf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58c30 (    0x10) DYLD-STUB$$cos [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58c40 (    0x10) DYLD-STUB$$cosf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58c50 (    0x10) DYLD-STUB$$dispatch_assert_queue_not$V2 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58c60 (    0x10) DYLD-STUB$$dispatch_async [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58c70 (    0x10) DYLD-STUB$$dispatch_get_context [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58c80 (    0x10) DYLD-STUB$$dispatch_get_global_queue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58c90 (    0x10) DYLD-STUB$$dispatch_group_async [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58ca0 (    0x10) DYLD-STUB$$dispatch_group_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58cb0 (    0x10) DYLD-STUB$$dispatch_group_wait [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58cc0 (    0x10) DYLD-STUB$$dispatch_once [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58cd0 (    0x10) DYLD-STUB$$dispatch_queue_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58ce0 (    0x10) DYLD-STUB$$dispatch_release [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58cf0 (    0x10) DYLD-STUB$$dispatch_resume [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58d00 (    0x10) DYLD-STUB$$dispatch_retain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58d10 (    0x10) DYLD-STUB$$dispatch_set_context [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58d20 (    0x10) DYLD-STUB$$dispatch_source_cancel [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58d30 (    0x10) DYLD-STUB$$dispatch_source_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58d40 (    0x10) DYLD-STUB$$dispatch_source_set_cancel_handler [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58d50 (    0x10) DYLD-STUB$$dispatch_source_set_event_handler [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58d60 (    0x10) DYLD-STUB$$dispatch_source_set_timer [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58d70 (    0x10) DYLD-STUB$$dispatch_suspend [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58d80 (    0x10) DYLD-STUB$$dispatch_time [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58d90 (    0x10) DYLD-STUB$$dispatch_walltime [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58da0 (    0x10) DYLD-STUB$$dlclose [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58db0 (    0x10) DYLD-STUB$$dlerror [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58dc0 (    0x10) DYLD-STUB$$dlopen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58dd0 (    0x10) DYLD-STUB$$dlsym [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58de0 (    0x10) DYLD-STUB$$exp [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58df0 (    0x10) DYLD-STUB$$exp2 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58e00 (    0x10) DYLD-STUB$$expf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58e10 (    0x10) DYLD-STUB$$fmod [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58e20 (    0x10) DYLD-STUB$$fmodf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58e30 (    0x10) DYLD-STUB$$free [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58e40 (    0x10) DYLD-STUB$$hypot [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58e50 (    0x10) DYLD-STUB$$hypotf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58e60 (    0x10) DYLD-STUB$$kdebug_trace [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58e70 (    0x10) DYLD-STUB$$mach_absolute_time [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58e80 (    0x10) DYLD-STUB$$mach_continuous_time [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58e90 (    0x10) DYLD-STUB$$mach_error_string [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58ea0 (    0x10) DYLD-STUB$$mach_timebase_info [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58eb0 (    0x10) DYLD-STUB$$malloc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58ec0 (    0x10) DYLD-STUB$$memcpy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58ed0 (    0x10) DYLD-STUB$$memmove [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58ee0 (    0x10) DYLD-STUB$$memset [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58ef0 (    0x10) DYLD-STUB$$modff [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58f00 (    0x10) DYLD-STUB$$mt_CreateSavedNameForDevice [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58f10 (    0x10) DYLD-STUB$$objc_alloc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58f20 (    0x10) DYLD-STUB$$objc_alloc_init [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58f30 (    0x10) DYLD-STUB$$objc_autorelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58f40 (    0x10) DYLD-STUB$$objc_autoreleasePoolPop [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58f50 (    0x10) DYLD-STUB$$objc_autoreleasePoolPush [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58f60 (    0x10) DYLD-STUB$$objc_enumerationMutation [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58f70 (    0x10) DYLD-STUB$$objc_msgSendSuper2 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58f80 (    0x10) DYLD-STUB$$objc_opt_class [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58f90 (    0x10) DYLD-STUB$$objc_opt_isKindOfClass [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58fa0 (    0x10) DYLD-STUB$$objc_opt_new [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58fb0 (    0x10) DYLD-STUB$$objc_release [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58fc0 (    0x10) DYLD-STUB$$objc_retain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58fd0 (    0x10) DYLD-STUB$$os_log_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58fe0 (    0x10) DYLD-STUB$$os_log_type_enabled [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f58ff0 (    0x10) DYLD-STUB$$os_signpost_enabled [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f59000 (    0x10) DYLD-STUB$$os_variant_allows_internal_security_policies [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f59010 (    0x10) DYLD-STUB$$pow [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f59020 (    0x10) DYLD-STUB$$powf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f59030 (    0x10) DYLD-STUB$$printf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f59040 (    0x10) DYLD-STUB$$pthread_once [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f59050 (    0x10) DYLD-STUB$$puts [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f59060 (    0x10) DYLD-STUB$$snprintf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f59070 (    0x10) DYLD-STUB$$stat [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f59080 (    0x10) DYLD-STUB$$strlen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f59090 (    0x10) DYLD-STUB$$strncpy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f590a0 (    0x10) DYLD-STUB$$usleep [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f590b0 (    0x10) DYLD-STUB$$uuid_generate_random [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f590c0 (    0x10) DYLD-STUB$$uuid_unparse [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f590d0 (    0x10) DYLD-STUB$$xpc_dictionary_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f590e0 (    0x10) DYLD-STUB$$xpc_dictionary_set_bool [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f590f0 (    0x10) DYLD-STUB$$xpc_dictionary_set_double [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f59100 (    0x10) DYLD-STUB$$xpc_dictionary_set_int64 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f59110 (    0x10) DYLD-STUB$$xpc_dictionary_set_string [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001e6f59120 (    0x10) DYLD-STUB$$xpc_dictionary_set_uint64 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
            0x00000001e6f59130 (   0x1d0) __TEXT __objc_methlist
            0x00000001e6f59300 (  0x120c) __TEXT __const
                0x00000001e6f59300 (    0x40) MultitouchHIDVersionString [EXT, NameNList, MangledNameNList, NList] 
                0x00000001e6f59340 (    0x70) MultitouchHIDVersionNumber [EXT, NameNList, MangledNameNList, NList] 
                0x00000001e6f593b0 (    0x15) typeinfo name for MultitouchHIDClass [EXT, NameNList, MangledNameNList, NList] 
                0x00000001e6f593c5 (    0x2b) typeinfo name for MultitouchIOHIDIUnknown [EXT, NameNList, MangledNameNList, NList] 
                0x00000001e6f593f0 (    0x80) typeinfo name for MTSimpleEmbeddedStylusHIDManager [EXT, NameNList, MangledNameNList, NList] 
                0x00000001e6f59470 (    0x28) typeinfo name for MTHandMotion [EXT, NameNList, MangledNameNList, NList] 
                0x00000001e6f59498 (     0x4) MTHandStatistics::kMinRollbackSubsetsOnDivingChange [EXT, NameNList, MangledNameNList, NList] 
                0x00000001e6f5949c (    0x3c) typeinfo name for MTHandStatistics [EXT, NameNList, MangledNameNList, NList] 
                0x00000001e6f594d8 (   0x2b0) typeinfo name for MTParser [EXT, NameNList, MangledNameNList, NList] 
                0x00000001e6f59788 (     0x4) MTPathStates::kALGRestingThumbFingerSpeedSymmetryThreshold [EXT, NameNList, MangledNameNList, NList] 
                0x00000001e6f5978c (     0x4) MTPathStates::kALGHighRestingThumb_DistanceDiscount [EXT, NameNList, MangledNameNList, NList] 
                0x00000001e6f59790 (     0x4) MTPathStates::kALGHighRestingThumbRelease_DistanceThreshold [EXT, NameNList, MangledNameNList, NList] 
                0x00000001e6f59794 (    0x9c) typeinfo name for MTPathStates [EXT, NameNList, MangledNameNList, NList] 
                0x00000001e6f59830 (    0x20) typeinfo name for MTParserPath [EXT, NameNList, MangledNameNList, NList] 
                0x00000001e6f59850 (     0x8) MTChordTable::finger_continuityINchord [EXT, NameNList, MangledNameNList, NList] 
                0x00000001e6f59858 (     0xf) typeinfo name for MTChordTable [EXT, NameNList, MangledNameNList, NList] 
                0x00000001e6f59867 (    0x35) typeinfo name for MTGestureConfig [EXT, NameNList, MangledNameNList, NList] 
                0x00000001e6f5989c (    0x20) typeinfo name for MTSimpleEmbeddedHIDManagerV2 [EXT, NameNList, MangledNameNList, NList] 
                0x00000001e6f598bc (    0x3c) typeinfo name for MTDragManagerEventQueue [EXT, NameNList, MangledNameNList, NList] 
                0x00000001e6f598f8 (    0x60) typeinfo name for MTTrackpadEmbeddedHIDManager [EXT, NameNList, MangledNameNList, NList] 
                0x00000001e6f59958 (     0x4) MTSlideGesture::kMaxCumulativeMotionBacklog_mm [EXT, NameNList, MangledNameNList, NList] 
                0x00000001e6f5995c (     0x4) MTSlideGesture::kMotionSinceTouchdownDecayAlpha [EXT, NameNList, MangledNameNList, NList] 
                0x00000001e6f59960 (     0x4) MTSlideGesture::kSpeedSymmetryRootPower [EXT, NameNList, MangledNameNList, NList] 
                0x00000001e6f59964 (     0x4) MTSlideGesture::kSpeedSymmetryRootPower_1_3F [EXT, NameNList, MangledNameNList, NList] 
                0x00000001e6f59968 (     0x4) MTSlideGesture::kSpeedSymmetryRootPower_Fluid_2F [EXT, NameNList, MangledNameNList, NList] 
                0x00000001e6f5996c (     0x4) MTSlideGesture::kSpeedSymmetryRootPower_All [EXT, NameNList, MangledNameNList, NList] 
                0x00000001e6f59970 (     0x4) MTSlideGesture::kMouseSuppresses_DeltaPosGain [EXT, NameNList, MangledNameNList, NList] 
                0x00000001e6f59974 (     0x4) MTSlideGesture::kMouseSuppresses_LinearDecayGain [EXT, NameNList, MangledNameNList, NList] 
                0x00000001e6f59978 (    0x16) typeinfo name for MTSurfaceDimensions [EXT, NameNList, MangledNameNList, NList] 
                0x00000001e6f5998e (    0xd2) typeinfo name for MTMouseEmbeddedHIDManager [EXT, NameNList, MangledNameNList, NList] 
                0x00000001e6f59a60 (   0x100) typeinfo name for MTPListGestureConfig [EXT, NameNList, MangledNameNList, NList] 
                0x00000001e6f59b60 (     0x4) MTChordIntegrating::kMaxMotionForLockOverride_mm [EXT, NameNList, MangledNameNList, NList] 
                0x00000001e6f59b64 (     0x4) MTChordIntegrating::kMinMotionToFireIfOnlySomeMoving_mm [EXT, NameNList, MangledNameNList, NList] 
                0x00000001e6f59b68 (     0x4) MTChordIntegrating::kStabilizedDragSwipeSpeedDiscriminator_mm_s [EXT, NameNList, MangledNameNList, NList] 
                0x00000001e6f59b6c (     0x4) MTChordIntegrating::kMaxPreMomentumEventInterval_s [EXT, NameNList, MangledNameNList, NList] 
                0x00000001e6f59b70 (     0x4) MTChordIntegrating::kMinPreMomentumSpeed_mickeys [EXT, NameNList, MangledNameNList, NList] 
                0x00000001e6f59b74 (     0x4) MTChordIntegrating::kMaxPausedMomentum_mickeys [EXT, NameNList, MangledNameNList, NList] 
                0x00000001e6f59b78 (     0x4) MTChordIntegrating::kMaxPausedMomentumForDrag_mickeys [EXT, NameNList, MangledNameNList, NList] 
                0x00000001e6f59b7c (     0x4) MTChordIntegrating::kMomentumAxisOrthogonalizationRatio [EXT, NameNList, MangledNameNList, NList] 
                0x00000001e6f59b80 (     0x4) MTChordIntegrating::kMomentumFilterAlpha_Falling [EXT, NameNList, MangledNameNList, NList] 
                0x00000001e6f59b84 (     0x4) MTChordIntegrating::kMomentumFilterAlpha_Rising_RecentTouch [EXT, NameNList, MangledNameNList, NList] 
                0x00000001e6f59b88 (     0x4) MTChordIntegrating::kMomentumFilterAlpha_Rising_OldTouch [EXT, NameNList, MangledNameNList, NList] 
                0x00000001e6f59b8c (     0x4) MTChordIntegrating::kMomentumRecentTouchSensitization_s [EXT, NameNList, MangledNameNList, NList] 
                0x00000001e6f59b90 (    0x1a) typeinfo name for MTSimpleEventDispatcher [EXT, NameNList, MangledNameNList, NList] 
                0x00000001e6f59baa (    0x22) typeinfo name for MTSimpleEmbeddedEventDispatcher [EXT, NameNList, MangledNameNList, NList] 
                0x00000001e6f59bcc (   0x348) typeinfo name for MTSimpleEmbeddedStylusEventDispatcher [EXT, NameNList, MangledNameNList, NList] 
                0x00000001e6f59f14 (    0x1c) typeinfo name for MTTrackpadEventDispatcher [EXT, NameNList, MangledNameNList, NList] 
                0x00000001e6f59f30 (    0x58) typeinfo name for MTGestureStats [EXT, NameNList, MangledNameNList, NList] 
                0x00000001e6f59f88 (    0x70) typeinfo name for MTMouseEventDispatcher [EXT, NameNList, MangledNameNList, NList] 
                0x00000001e6f59ff8 (    0x28) typeinfo name for MTSimpleHIDManager [EXT, NameNList, MangledNameNList, NList] 
                0x00000001e6f5a020 (    0x17) typeinfo name for MTTrackpadHIDManager [EXT, NameNList, MangledNameNList, NList] 
                0x00000001e6f5a037 (    0x5e) typeinfo name for MTMouseEmbeddedEventDispatcher [EXT, NameNList, MangledNameNList, NList] 
                0x00000001e6f5a095 (   0x29f) typeinfo name for MTMouseHIDManager [EXT, NameNList, MangledNameNList, NList] 
                0x00000001e6f5a334 (    0x24) typeinfo name for MTTrackpadEmbeddedEventDispatcher [EXT, NameNList, MangledNameNList, NList] 
                0x00000001e6f5a358 (    0x11) typeinfo name for MTModeSwitcher [EXT, NameNList, MangledNameNList, NList] 
                0x00000001e6f5a369 (    0x1f) typeinfo name for MTNoOpModeSwitcher [EXT, NameNList, MangledNameNList, NList] 
                0x00000001e6f5a388 (    0x19) typeinfo name for MTChordCyclingTrackpad [EXT, NameNList, MangledNameNList, NList] 
                0x00000001e6f5a3a1 (    0x11) typeinfo name for MTChordCycling [EXT, NameNList, MangledNameNList, NList] 
                0x00000001e6f5a3b2 (    0x1d) typeinfo name for MTSimpleEmbeddedHIDManager [EXT, NameNList, MangledNameNList, NList] 
                0x00000001e6f5a3cf (    0x31) typeinfo name for MTRestZoneIntegrator [EXT, NameNList, MangledNameNList, NList] 
                0x00000001e6f5a400 (    0x30) typeinfo name for MTForceFilter [EXT, NameNList, MangledNameNList, NList] 
                0x00000001e6f5a430 (    0x30) typeinfo name for MTForceThresholding [EXT, NameNList, MangledNameNList, NList] 
                0x00000001e6f5a460 (    0x10) typeinfo name for MTPowerLogger [EXT, NameNList, MangledNameNList, NList] 
                0x00000001e6f5a470 (    0x14) typeinfo name for MTPathStatesBasic [EXT, NameNList, MangledNameNList, NList] 
                0x00000001e6f5a484 (    0x70) typeinfo name for MTFingerToPathMap [EXT, NameNList, MangledNameNList, NList] 
                0x00000001e6f5a4f4 (    0x18) typeinfo name for MTInterferenceMonitor [EXT, NameNList, MangledNameNList, NList] 
            0x00000001e6f5a50c (  0x44a1) __TEXT __cstring
            0x00000001e6f5e9b0 (   0x9d8) __TEXT __gcc_except_tab
            0x00000001e6f5f388 (  0x27c9) __TEXT __oslogstring
            0x00000001e6f61b54 (  0x15b8) __TEXT __unwind_info
            0x00000001e6f63110 (   0x150) __TEXT __eh_frame
            0x00000001e6f63260 (    0x3e) __TEXT __objc_classname
            0x00000001e6f6329e (   0x5d3) __TEXT __objc_methname
            0x00000001e6f63871 (    0xe6) __TEXT __objc_methtype
            0x00000001e6f63960 (   0x6a0) __TEXT __objc_stubs
        0x0000000236441d88 (   0xd48) __DATA_CONST SEGMENT
            0x0000000236441d88 (    0xe8) __DATA_CONST __got
            0x0000000236441e70 (   0x790) __DATA_CONST __const
            0x0000000236442600 (    0x10) __DATA_CONST __objc_classlist
            0x0000000236442610 (     0x8) __DATA_CONST __objc_protolist
            0x0000000236442618 (     0x8) __DATA_CONST __objc_imageinfo
            0x0000000236442620 (   0x270) __DATA_CONST __objc_const
            0x0000000236442890 (   0x240) __DATA_CONST __objc_selrefs
        0x0000000236442ad0 (  0x8f80) __AUTH_CONST SEGMENT
            0x0000000236442ad0 (  0x2a68) __AUTH_CONST __const
                0x0000000236442b30 (    0x98) vtable for MultitouchHIDClass [EXT, NameNList, MangledNameNList, NList] 
                0x0000000236442bc8 (    0x18) typeinfo for MultitouchHIDClass [EXT, NameNList, MangledNameNList, NList] 
                0x0000000236442be0 (    0x38) vtable for MultitouchIOHIDIUnknown [EXT, NameNList, MangledNameNList, NList] 
                0x0000000236442c18 (    0x10) typeinfo for MultitouchIOHIDIUnknown [EXT, NameNList, MangledNameNList, NList] 
                0x0000000236442c28 (   0x2b0) vtable for MTSimpleEmbeddedStylusHIDManager [EXT, NameNList, MangledNameNList, NList] 
                0x0000000236442ed8 (    0x18) typeinfo for MTSimpleEmbeddedStylusHIDManager [EXT, NameNList, MangledNameNList, NList] 
                0x0000000236442ef0 (    0x20) vtable for MTHandMotion [EXT, NameNList, MangledNameNList, NList] 
                0x0000000236442f10 (    0x18) typeinfo for MTHandMotion [EXT, NameNList, MangledNameNList, NList] 
                0x0000000236442f28 (    0x58) vtable for MTHandStatistics [EXT, NameNList, MangledNameNList, NList] 
                0x0000000236442f80 (    0x28) typeinfo for MTHandStatistics [EXT, NameNList, MangledNameNList, NList] 
                0x0000000236442fa8 (    0x20) vtable for MTParser [EXT, NameNList, MangledNameNList, NList] 
                0x0000000236442fc8 (    0x10) typeinfo for MTParser [EXT, NameNList, MangledNameNList, NList] 
                0x0000000236442fd8 (    0x58) vtable for MTPathStates [EXT, NameNList, MangledNameNList, NList] 
                0x0000000236443030 (    0x18) typeinfo for MTPathStates [EXT, NameNList, MangledNameNList, NList] 
                0x0000000236443048 (    0x20) vtable for MTParserPath [EXT, NameNList, MangledNameNList, NList] 
                0x0000000236443068 (    0x10) typeinfo for MTParserPath [EXT, NameNList, MangledNameNList, NList] 
                0x0000000236443078 (    0x30) vtable for MTChordTable [EXT, NameNList, MangledNameNList, NList] 
                0x00000002364430a8 (    0x10) typeinfo for MTChordTable [EXT, NameNList, MangledNameNList, NList] 
                0x00000002364430b8 (    0x28) vtable for MTGestureConfig [EXT, NameNList, MangledNameNList, NList] 
                0x00000002364430e0 (    0x10) typeinfo for MTGestureConfig [EXT, NameNList, MangledNameNList, NList] 
                0x00000002364430f0 (   0x2b0) vtable for MTSimpleEmbeddedHIDManagerV2 [EXT, NameNList, MangledNameNList, NList] 
                0x00000002364433a0 (    0x18) typeinfo for MTSimpleEmbeddedHIDManagerV2 [EXT, NameNList, MangledNameNList, NList] 
                0x00000002364433b8 (    0x48) vtable for MTDragManagerEventQueue [EXT, NameNList, MangledNameNList, NList] 
                0x0000000236443400 (    0x18) typeinfo for MTDragManagerEventQueue [EXT, NameNList, MangledNameNList, NList] 
                0x0000000236443418 (   0x3a8) vtable for MTTrackpadEmbeddedHIDManager [EXT, NameNList, MangledNameNList, NList] 
                0x00000002364437c0 (    0x18) typeinfo for MTTrackpadEmbeddedHIDManager [EXT, NameNList, MangledNameNList, NList] 
                0x00000002364437d8 (    0x20) vtable for MTSurfaceDimensions [EXT, NameNList, MangledNameNList, NList] 
                0x00000002364437f8 (    0x10) typeinfo for MTSurfaceDimensions [EXT, NameNList, MangledNameNList, NList] 
                0x0000000236443808 (   0x3e8) vtable for MTMouseEmbeddedHIDManager [EXT, NameNList, MangledNameNList, NList] 
                0x0000000236443bf0 (    0x38) typeinfo for MTMouseEmbeddedHIDManager [EXT, NameNList, MangledNameNList, NList] 
                0x0000000236443c28 (    0x28) vtable for MTPListGestureConfig [EXT, NameNList, MangledNameNList, NList] 
                0x0000000236443c50 (    0x18) typeinfo for MTPListGestureConfig [EXT, NameNList, MangledNameNList, NList] 
                0x0000000236443c68 (    0x98) vtable for MTSimpleEventDispatcher [EXT, NameNList, MangledNameNList, NList] 
                0x0000000236443d00 (    0x10) typeinfo for MTSimpleEventDispatcher [EXT, NameNList, MangledNameNList, NList] 
                0x0000000236443d10 (    0xa0) vtable for MTSimpleEmbeddedEventDispatcher [EXT, NameNList, MangledNameNList, NList] 
                0x0000000236443db0 (    0x18) typeinfo for MTSimpleEmbeddedEventDispatcher [EXT, NameNList, MangledNameNList, NList] 
                0x0000000236443dc8 (    0x98) vtable for MTSimpleEmbeddedStylusEventDispatcher [EXT, NameNList, MangledNameNList, NList] 
                0x0000000236443e60 (    0x18) typeinfo for MTSimpleEmbeddedStylusEventDispatcher [EXT, NameNList, MangledNameNList, NList] 
                0x0000000236443e78 (    0x20) vtable for MTGestureStats [EXT, NameNList, MangledNameNList, NList] 
                0x0000000236443e98 (    0xf0) vtable for MTTrackpadEventDispatcher [EXT, NameNList, MangledNameNList, NList] 
                0x0000000236443f88 (    0x18) typeinfo for MTTrackpadEventDispatcher [EXT, NameNList, MangledNameNList, NList] 
                0x0000000236443fa0 (    0x10) typeinfo for MTGestureStats [EXT, NameNList, MangledNameNList, NList] 
                0x0000000236443fb0 (    0xf0) vtable for MTMouseEventDispatcher [EXT, NameNList, MangledNameNList, NList] 
                0x00000002364440a0 (    0x18) typeinfo for MTMouseEventDispatcher [EXT, NameNList, MangledNameNList, NList] 
                0x00000002364440b8 (   0x2a0) vtable for MTSimpleHIDManager [EXT, NameNList, MangledNameNList, NList] 
                0x0000000236444358 (    0x60) typeinfo for MTSimpleHIDManager [EXT, NameNList, MangledNameNList, NList] 
                0x00000002364443b8 (   0x3a8) vtable for MTTrackpadHIDManager [EXT, NameNList, MangledNameNList, NList] 
                0x0000000236444760 (    0x18) typeinfo for MTTrackpadHIDManager [EXT, NameNList, MangledNameNList, NList] 
                0x0000000236444778 (    0xf0) vtable for MTMouseEmbeddedEventDispatcher [EXT, NameNList, MangledNameNList, NList] 
                0x0000000236444868 (    0x18) typeinfo for MTMouseEmbeddedEventDispatcher [EXT, NameNList, MangledNameNList, NList] 
                0x0000000236444880 (    0x38) typeinfo for MTMouseHIDManager [EXT, NameNList, MangledNameNList, NList] 
                0x00000002364448b8 (   0x3e8) vtable for MTMouseHIDManager [EXT, NameNList, MangledNameNList, NList] 
                0x0000000236444ca0 (    0xf0) vtable for MTTrackpadEmbeddedEventDispatcher [EXT, NameNList, MangledNameNList, NList] 
                0x0000000236444d90 (    0x18) typeinfo for MTTrackpadEmbeddedEventDispatcher [EXT, NameNList, MangledNameNList, NList] 
                0x0000000236444da8 (    0x40) vtable for MTModeSwitcher [EXT, NameNList, MangledNameNList, NList] 
                0x0000000236444de8 (    0x40) vtable for MTNoOpModeSwitcher [EXT, NameNList, MangledNameNList, NList] 
                0x0000000236444e28 (    0x10) typeinfo for MTModeSwitcher [EXT, NameNList, MangledNameNList, NList] 
                0x0000000236444e38 (    0x18) typeinfo for MTNoOpModeSwitcher [EXT, NameNList, MangledNameNList, NList] 
                0x0000000236444e50 (    0xb0) vtable for MTChordCyclingTrackpad [EXT, NameNList, MangledNameNList, NList] 
                0x0000000236444f00 (    0x18) typeinfo for MTChordCyclingTrackpad [EXT, NameNList, MangledNameNList, NList] 
                0x0000000236444f18 (    0xb0) vtable for MTChordCycling [EXT, NameNList, MangledNameNList, NList] 
                0x0000000236444fc8 (    0x50) typeinfo for MTChordCycling [EXT, NameNList, MangledNameNList, NList] 
                0x0000000236445018 (   0x2b0) vtable for MTSimpleEmbeddedHIDManager [EXT, NameNList, MangledNameNList, NList] 
                0x00000002364452c8 (    0x18) typeinfo for MTSimpleEmbeddedHIDManager [EXT, NameNList, MangledNameNList, NList] 
                0x00000002364452e0 (    0x20) vtable for MTRestZoneIntegrator [EXT, NameNList, MangledNameNList, NList] 
                0x0000000236445300 (    0x18) typeinfo for MTRestZoneIntegrator [EXT, NameNList, MangledNameNList, NList] 
                0x0000000236445318 (    0x20) vtable for MTForceFilter [EXT, NameNList, MangledNameNList, NList] 
                0x0000000236445338 (    0x10) typeinfo for MTForceFilter [EXT, NameNList, MangledNameNList, NList] 
                0x0000000236445348 (    0x20) vtable for MTForceThresholding [EXT, NameNList, MangledNameNList, NList] 
                0x0000000236445368 (    0x10) typeinfo for MTForceThresholding [EXT, NameNList, MangledNameNList, NList] 
                0x0000000236445378 (    0x40) vtable for MTPowerLogger [EXT, NameNList, MangledNameNList, NList] 
                0x00000002364453b8 (    0x10) typeinfo for MTPowerLogger [EXT, NameNList, MangledNameNList, NList] 
                0x00000002364453c8 (    0x58) vtable for MTPathStatesBasic [EXT, NameNList, MangledNameNList, NList] 
                0x0000000236445420 (    0x28) typeinfo for MTPathStatesBasic [EXT, NameNList, MangledNameNList, NList] 
                0x0000000236445448 (    0x20) vtable for MTFingerToPathMap [EXT, NameNList, MangledNameNList, NList] 
                0x0000000236445468 (    0xa0) typeinfo for MTFingerToPathMap [EXT, NameNList, MangledNameNList, NList] 
                0x0000000236445508 (    0x20) vtable for MTInterferenceMonitor [EXT, NameNList, MangledNameNList, NList] 
                0x0000000236445528 (    0x10) typeinfo for MTInterferenceMonitor [EXT, NameNList, MangledNameNList, NList] 
            0x0000000236445538 (  0x5900) __AUTH_CONST __cfstring
            0x000000023644ae38 (     0x8) __AUTH_CONST __auth_ptr
            0x000000023644ae40 (    0x90) __AUTH_CONST __objc_const
            0x000000023644aed0 (   0xb80) __AUTH_CONST __auth_got
        0x00000002321b08a8 (   0x148) __AUTH SEGMENT
            0x00000002321b08a8 (    0xa8) __AUTH __data
                0x00000002321b08a8 (    0x40) MultitouchHIDClass::sIOCFPlugInInterfaceV1 [EXT, NameNList, MangledNameNList, NList] 
                0x00000002321b08e8 (    0x68) MultitouchHIDClass::sIOHIDServiceInterface2 [EXT, NameNList, MangledNameNList, NList] 
            0x00000002321b0950 (    0xa0) __AUTH __objc_data
                0x00000002321b0950 (    0x28) OBJC_CLASS_$_AWDMultitouchBootEvent [EXT, NameNList, MangledNameNList, NList] 
                0x00000002321b0978 (    0x28) OBJC_METACLASS_$_AWDMultitouchBootEvent [EXT, NameNList, MangledNameNList, NList] 
                0x00000002321b09a0 (    0x28) OBJC_CLASS_$_AWDMultitouchHardwareStatus [EXT, NameNList, MangledNameNList, NList] 
                0x00000002321b09c8 (    0x28) OBJC_METACLASS_$_AWDMultitouchHardwareStatus [EXT, NameNList, MangledNameNList, NList] 
        0x00000002308a7ae8 (   0xa38) __DATA SEGMENT
            0x00000002308a7ae8 (     0x8) __DATA __got_weak
            0x00000002308a7af0 (    0x60) __DATA __objc_classrefs
            0x00000002308a7b50 (    0x10) __DATA __objc_superrefs
            0x00000002308a7b60 (    0x18) __DATA __objc_ivar
                0x00000002308a7b60 (     0x4) OBJC_IVAR_$_AWDMultitouchBootEvent._has [EXT, NameNList, MangledNameNList, NList] 
                0x00000002308a7b64 (     0x4) OBJC_IVAR_$_AWDMultitouchBootEvent._timestamp [EXT, NameNList, MangledNameNList, NList] 
                0x00000002308a7b68 (     0x4) OBJC_IVAR_$_AWDMultitouchBootEvent._version [EXT, NameNList, MangledNameNList, NList] 
                0x00000002308a7b6c (     0x4) OBJC_IVAR_$_AWDMultitouchHardwareStatus._openRows [EXT, NameNList, MangledNameNList, NList] 
                0x00000002308a7b70 (     0x4) OBJC_IVAR_$_AWDMultitouchHardwareStatus._has [EXT, NameNList, MangledNameNList, NList] 
                0x00000002308a7b74 (     0x4) OBJC_IVAR_$_AWDMultitouchHardwareStatus._timestamp [EXT, NameNList, MangledNameNList, NList] 
            0x00000002308a7b78 (   0x150) __DATA __data
                0x00000002308a7b88 (     0x4) gPrintHIDShowPathEvents [EXT, NameNList, MangledNameNList, NList] 
                0x00000002308a7b8c (     0x4) MTHandStatistics::kMinClutchingSubsetSizeFrom4F [EXT, NameNList, MangledNameNList, NList] 
                0x00000002308a7b90 (     0x8) MTHandStatistics::kMinClutchingSubsetSizeFrom5F [EXT, NameNList, MangledNameNList, NList] 
                0x00000002308a7b98 (     0x8) gHandSizeEquilibrator [EXT, NameNList, MangledNameNList, NList] 
                0x00000002308a7ba0 (   0x128) gTimingPrefs [EXT, NameNList, MangledNameNList, NList] 
            0x00000002308a7cc8 (    0x40) __DATA __bss
            0x00000002308a7d08 (   0x818) __DATA __common
                0x00000002308a7d08 (     0x8) MultitouchIOHIDIUnknown::factoryRefCount [EXT, NameNList, MangledNameNList, NList] 
                0x00000002308a7d10 (   0x800) gUSBKeyNames [EXT, NameNList, MangledNameNList, NList] 
                0x00000002308a8510 (     0x8) MTForceBehavior::nullForceBehavior [EXT, NameNList, MangledNameNList, NList] 
                0x00000002308a8518 (     0x8) MTForceBehavior::nullDispatchOnce [EXT, NameNList, MangledNameNList, NList] 
        0x000000023a910000 (0x37bf0000) __LINKEDIT SEGMENT
