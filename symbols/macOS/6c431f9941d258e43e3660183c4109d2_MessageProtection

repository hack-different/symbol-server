/System/Library/PrivateFrameworks/MessageProtection.framework/Versions/A/MessageProtection [arm64e, 0.091547 seconds]:
    39CA36F8-6BA0-3D19-893B-A5A2F7DB8EC0 /System/Library/PrivateFrameworks/MessageProtection.framework/Versions/A/MessageProtection [DYLIB, DYLDSHAREDCACHE, FaultedFromDiskDyldSharedCache, MMap64]  
        0x00000001b77c9000 ( 0x52000) __TEXT SEGMENT
            0x00000001b77c9000 (  0x257c) MACH_HEADER
            0x00000001b77cb57c ( 0x3cdb4) __TEXT __text
                0x00000001b77cb57c (    0x84) -[GLTDiversifiedKeyAndTPS initWithKey:trackingPreventionSalt:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77cb600 (     0x8) -[GLTDiversifiedKeyAndTPS trackingPreventionSalt] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77cb608 (     0x8) -[GLTDiversifiedKeyAndTPS diversifiedKey] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77cb610 (     0xc) -[GLTDiversifiedKeyAndTPS .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77cb61c (    0xb0) +[GLTKeyDiversification diversifyPublicKey:trackingPreventionSalt:withDocumentIdentifier:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77cb6cc (    0x10) +[GLTKeyDiversification diversifyPublicKey:withDocumentIdentifier:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77cb6dc (     0xc) +[GLTKeyDiversification diversifyPrivateKey:withDocumentIdentifier:trackingPreventionSalt:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77cb6e8 (   0x534) SecMPSignAndProtectMessage [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77cbc1c (   0x124) SecMPCopyProtectedMsgHash [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77cbd40 (   0x1b8) SecMPComputeIntegrityTag [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77cbef8 (   0x110) SecMWCreateEphemeralDeviceIdentity [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77cc008 (    0xc0) SecMWCreateSessionSalt [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77cc0c8 (    0xc0) SecMWCreateSessionSeed [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77cc188 (    0xf4) CFDictionaryCreateForCFTypes [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77cc27c (    0x84) CFDictionaryCreateMutableForCFTypesWith [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77cc300 (    0x74) -[SigningPublicKey verifySignature:formatter:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77cc374 (    0x84) -[SigningPublicKey verifySignature:ofData:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77cc3f8 (    0x78) -[SigningPublicKey description] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77cc470 (   0x25c) +[NGMPadding padMessage:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77cc6cc (   0x15c) +[NGMPadding unpadMessage:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77cc828 (    0xa8) -[SecMessageLegacyPublicIdentity initWithEncryptionKey:signingKey:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77cc8d0 (   0x1d8) +[SecMessageLegacyPublicIdentity identityWithIdentityData:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ccaa8 (   0x220) -[SecMessageLegacyPublicIdentity identityData] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77cccc8 (    0x84) -[SecMessageLegacyPublicIdentity encryptData:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ccd4c (   0x118) -[SecMessageLegacyPublicIdentity sealMessage:signedByFullIdentity:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77cce64 (    0xa8) -[SecMessageLegacyPublicIdentity publicIDHash] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ccf0c (   0x138) -[SecMessageLegacyPublicIdentity publicIDCanonicalHash] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77cd044 (    0x64) -[SecMessageLegacyPublicIdentity encryptionSize] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77cd0a8 (    0x84) -[SecMessageLegacyPublicIdentity verifySignature:ofData:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77cd12c (    0xc0) -[SecMessageLegacyPublicIdentity asRef] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77cd1ec (    0x48) -[SecMessageLegacyPublicIdentity publicSigningKeyForTerminusMigration] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77cd234 (     0x8) -[SecMessageLegacyPublicIdentity signingKey] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77cd23c (     0x8) -[SecMessageLegacyPublicIdentity encryptionKey] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77cd244 (    0x44) -[SecMessageLegacyPublicIdentity .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77cd288 (   0x114) -[NGMMessageSignatureFormatter initWithDHOutput:prekeyPub:ephemeralPub:recipientPub:ciphertext:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77cd39c (     0x8) -[NGMMessageSignatureFormatter signedData] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77cd3a4 (     0x8) -[NGMMessageSignatureFormatter formattedSignedData] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77cd3ac (     0xc) -[NGMMessageSignatureFormatter .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77cd3b8 (    0x20) NoError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77cd3d8 (    0x54) MessageProtectionLog [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77cd42c (    0x48) __MessageProtectionLog_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77cd474 (   0x148) MPLogAndAssignCFError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77cd5bc (   0x14c) MPLogAndAssignError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77cd708 (   0x14c) SecMPCreateError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77cd854 (    0x18) OUTLINED_FUNCTION_0 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77cd86c (    0x1c) OUTLINED_FUNCTION_1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77cd888 (     0xc) +[FullKey generateNewKeyWithAccess:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77cd894 (    0xb8) +[FullKey generateNewKeyWithAccess:forceNoSEP:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77cd94c (   0x168) -[FullKey initWithKey:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77cdab4 (   0x168) -[FullKey initWithProtobufferData:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77cdc1c (    0xa0) -[FullKey initWithCTKTokenOID:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77cdcbc (   0x248) -[FullKey initWithKeychainTag:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77cdf04 (    0xb0) -[FullKey keyIdentifier] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77cdfb4 (    0xb0) -[FullKey description] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ce064 (    0xc0) -[FullKey protobuffer] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ce124 (     0xc) -[FullKey key] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ce130 (     0x8) -[FullKey keyStore] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ce138 (     0xc) -[FullKey keychainTag] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ce144 (     0x8) -[FullKey setKeychainTag:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ce14c (    0x44) -[FullKey .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ce190 (   0x11c) -[NGMFullDeviceIdentity(MigrationToModernizedKeyStorage) requiresMigration] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ce2ac (    0x6c) __75-[NGMFullDeviceIdentity(MigrationToModernizedKeyStorage) requiresMigration]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ce318 (    0x10) __copy_helper_block_e8_32r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ce328 (     0xc) __destroy_helper_block_e8_32r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ce334 (   0x130) -[NGMFullDeviceIdentity(MigrationToModernizedKeyStorage) deleteKeyWithTag:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ce464 (   0x1ec) -[NGMFullDeviceIdentity(MigrationToModernizedKeyStorage) postMigrationKeychainCleanup] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ce650 (    0xd8) __86-[NGMFullDeviceIdentity(MigrationToModernizedKeyStorage) postMigrationKeychainCleanup]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ce728 (    0x48) __copy_helper_block_e8_32s40r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ce770 (    0x40) __destroy_helper_block_e8_32s40r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ce7b0 (   0x130) -[LegacySigningKeyPrivate init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ce8e0 (   0x150) -[LegacySigningKeyPrivate initWithData:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77cea30 (    0x3c) -[LegacySigningKeyPrivate signData:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77cea6c (    0x30) -[LegacySigningKeyPrivate dataRepresentation] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77cea9c (    0x7c) -[LegacySigningKeyPrivate publicKey] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ceb18 (     0x8) -[LegacySigningKeyPrivate secKeyRef] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ceb20 (     0xc) -[LegacySigningKeyPrivate setSecKeyRef:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ceb2c (     0xc) -[LegacySigningKeyPrivate .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ceb38 (    0xac) +[NGMFullPrekey fullPrekeyForTestingSignedBy:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77cebe4 (    0x78) -[NGMFullPrekey ecdhKeyCTKObject] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77cec5c (   0x258) -[NGMFullPrekey initWithPrekeySignedBy:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ceeb4 (   0x214) -[NGMFullPrekey initWithPBPrekey:verifySignedBy:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77cf0c8 (    0xf4) -[NGMFullPrekey pbDevicePrekey] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77cf1bc (    0xd8) -[NGMFullPrekey description] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77cf294 (    0x90) -[NGMFullPrekey delete] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77cf324 (     0x8) -[NGMFullPrekey dhKey] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77cf32c (     0x8) -[NGMFullPrekey publicPrekey] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77cf334 (    0x44) -[NGMFullPrekey .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77cf378 (    0x40) SecMPPIEncryptionSpace [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77cf3b8 (   0x160) SecMPPIRecreateSignature [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77cf518 (    0x74) mp_decode_forced_uint [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77cf58c (   0x5d0) SecMPVerifyAndExposeMessage [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77cfb5c (    0x60) CFDataCreateReferenceFromRange [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77cfbbc (   0x12c) SecMPDecryptUsingCTREmbeddedKey [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77cfce8 (   0x1bc) SecMPVerifyIntegrityTag [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77cfea4 (   0x130) -[NGMECDHPublicPreKey initRemotePrekeyWithPublicPrekeyPB:signedBy:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77cffd4 (    0xb8) -[NGMECDHPublicPreKey initWithPublicKey:signature:timestamp:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d008c (   0x10c) -[NGMECDHPublicPreKey isValidlySignedBy:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d0198 (    0xd4) -[NGMECDHPublicPreKey description] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d026c (     0x8) -[NGMECDHPublicPreKey dhKey] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d0274 (     0x8) -[NGMECDHPublicPreKey signature] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d027c (     0x8) -[NGMECDHPublicPreKey timestamp] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d0284 (    0x44) -[NGMECDHPublicPreKey .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d02c8 (    0x70) -[SecKeyRSAPublic initWithSecKeyRef:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d0338 (   0x1b0) -[SecKeyRSAPublic initWithData:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d04e8 (    0xf4) -[SecKeyRSAPublic encryptData:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d05dc (    0x54) -[SecKeyRSAPublic dataRepresentation] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d0630 (     0x8) -[SecKeyRSAPublic secKeyRef] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d0638 (     0xc) -[SecKeyRSAPublic setSecKeyRef:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d0644 (     0xc) -[SecKeyRSAPublic .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d0650 (    0x18) OUTLINED_FUNCTION_0 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d0668 (    0x20) OUTLINED_FUNCTION_1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d0688 (    0xe4) -[NGMPrekeySignatureFormatter initToSignKey:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d076c (    0xb0) -[NGMPrekeySignatureFormatter initWithPublicPrekey:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d081c (    0xe8) -[NGMPrekeySignatureFormatter signedData] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d0904 (     0x8) -[NGMPrekeySignatureFormatter timestamp] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d090c (     0x8) -[NGMPrekeySignatureFormatter prekeyPublic] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d0914 (     0xc) -[NGMPrekeySignatureFormatter .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d0920 (   0x17c) -[NGMKeyRollingTicket initTicketWithSigningKey:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d0a9c (    0x58) -[NGMKeyRollingTicket identityData] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d0af4 (    0x58) -[NGMKeyRollingTicket prekeyData] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d0b4c (     0x8) -[NGMKeyRollingTicket publicDeviceIdentity] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d0b54 (     0x8) -[NGMKeyRollingTicket prekey] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d0b5c (     0x8) -[NGMKeyRollingTicket registrationInfo] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d0b64 (    0x44) -[NGMKeyRollingTicket .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d0ba8 (    0xa8) -[NGMPublicDeviceIdentity initWithEchnidaRegistration:signingKey:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d0c50 (   0x1f4) +[NGMPublicDeviceIdentity identityWithIdentityData:prekeyData:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d0e44 (    0xfc) -[NGMPublicDeviceIdentity identityData] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d0f40 (   0x284) -[NGMPublicDeviceIdentity prekeyData] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d11c4 (    0x84) -[NGMPublicDeviceIdentity verifySignature:formatter:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d1248 (    0x54) -[NGMPublicDeviceIdentity isValidSigningDestination] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d129c (     0x8) -[NGMPublicDeviceIdentity isSecondaryCompatible] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d12a4 (    0x10) -[NGMPublicDeviceIdentity sealMessage:signedByFullIdentity:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d12b4 (   0x4e4) -[NGMPublicDeviceIdentity sealMessage:withEncryptedAttributes:signedByFullIdentity:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d1798 (   0x138) -[NGMPublicDeviceIdentity sealMessage:forceSizeOptimizations:resetState:encryptedAttributes:signedByFullIdentity:errors:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d18d0 (    0xd8) -[NGMPublicDeviceIdentity description] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d19a8 (   0x264) -[NGMPublicDeviceIdentity sealMessage:guid:sendingURI:sendingPushToken:receivingURI:receivingPushToken:forceSizeOptimizations:resetState:encryptedAttributes:signedByFullIdentity:errors:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d1c0c (     0x8) -[NGMPublicDeviceIdentity signingKey] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d1c14 (     0xc) -[NGMPublicDeviceIdentity setSigningKey:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d1c20 (     0x8) -[NGMPublicDeviceIdentity echnidaRegistration] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d1c28 (     0xc) -[NGMPublicDeviceIdentity setEchnidaRegistration:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d1c34 (    0x44) -[NGMPublicDeviceIdentity .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d1c78 (   0x114) +[NGMMessageFormatter formatOutgoingMessageWithEncryptedPayload:ephemeral:signature:keyValidator:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d1d8c (   0x1ec) +[NGMMessageFormatter formatOutgoingInnerMessageWithPayload:attributes:destinationIdentity:sendingIdentity:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d1f78 (   0x110) -[NGMFTVoucherSignatureFormatter initWithApplicationData:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d2088 (     0x8) -[NGMFTVoucherSignatureFormatter signedData] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d2090 (     0xc) -[NGMFTVoucherSignatureFormatter setSignedData:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d209c (     0xc) -[NGMFTVoucherSignatureFormatter .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d20a8 (    0x4c) -[CoreCryptoP256Private initWithKey:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d20f4 (    0xdc) +[CoreCryptoP256Private generate] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d21d0 (   0x208) -[CoreCryptoP256Private keyAgreement:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d23d8 (    0xa0) -[CoreCryptoP256Private publicKey] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d2478 (    0x50) -[CoreCryptoP256Private dealloc] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d24c8 (    0x68) -[CoreCryptoP256Private keychainData] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d2530 (    0x50) -[CoreCryptoP256Private signData:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d2580 (    0x5c) -[CoreCryptoP256Private initWithData:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d25dc (     0x8) -[CoreCryptoP256Private full_key] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d25e4 (     0x8) -[CoreCryptoP256Private setFull_key:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d25ec (    0x1c) OUTLINED_FUNCTION_0 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d2608 (   0x118) SecMPLogError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d2720 (    0x64) insertSize [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d2784 (    0x70) appendSize [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d27f4 (    0x64) appendOneByteSize [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d2858 (    0x74) readSize [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d28cc (    0x74) appendSizeAndData [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d2940 (    0x8c) appendPublicOctetsAndSize [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d29cc (    0x5c) appendLongLong [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d2a28 (    0x48) readLongLong [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d2a70 (   0x1c4) +[NGMMessageHasher computeHashForMessage:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d2c34 (   0x110) -[NGMGFTSignatureFormatter initWithApplicationData:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d2d44 (     0x8) -[NGMGFTSignatureFormatter signedData] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d2d4c (     0xc) -[NGMGFTSignatureFormatter setSignedData:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d2d58 (     0xc) -[NGMGFTSignatureFormatter .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d2d64 (    0xc8) -[NGMFullDeviceIdentity(Signing) sign:forType:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d2e2c (   0x1bc) -[NGMFullDeviceIdentity(Signing) batchSign:forType:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d2fe8 (   0x1f4) +[SecMessageLegacyFullIdentity(Migration) populateIdentity:withSigningKeyFromPersistentRef:size:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d31dc (   0x248) SecMPFICreatePrivateAndPublicKeyReadPersistentRef [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d3424 (   0x1f4) +[SecMessageLegacyFullIdentity(Migration) populateIdentity:withEncryptionKeyFromPersistentRef:size:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d3618 (    0xdc) +[SecMessageLegacyFullIdentity(Migration) identityFromV2Bytes:size:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d36f4 (   0x10c) -[SecMessageLegacyFullIdentity(Migration) deleteItemWithPersistentRef:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d3800 (    0xe4) -[SecMessageLegacyFullIdentity(Migration) deleteMigratedKeys] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d38e4 (    0x74) readSize [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d3958 (    0xa8) SecMPComputePaddingForTransport [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d3a00 (    0x8c) nextMultiple [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d3a8c (   0x118) SecMPComputePaddingForStorage [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d3ba4 (    0x68) -[NGMRollingBitmaskBuffer init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d3c0c (    0xac) -[NGMRollingBitmaskBuffer initWithData:upperBufferIndex:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d3cb8 (   0x12c) -[NGMRollingBitmaskBuffer processIncomingCounter:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d3de4 (    0x6c) -[NGMRollingBitmaskBuffer bufferData] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d3e50 (    0x4c) -[NGMRollingBitmaskBuffer dealloc] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d3e9c (     0x8) -[NGMRollingBitmaskBuffer upper_buffer_index] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d3ea4 (     0x8) -[NGMRollingBitmaskBuffer setUpper_buffer_index:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d3eac (     0x8) -[NGMRollingBitmaskBuffer valid_values_buffer] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d3eb4 (     0x8) -[NGMRollingBitmaskBuffer setValid_values_buffer:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d3ebc (     0x8) -[NGMRollingBitmaskBuffer valid_values_buffer_size] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d3ec4 (     0x8) -[NGMRollingBitmaskBuffer setValid_values_buffer_size:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d3ecc (    0x84) -[DHKey publicKey] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d3f50 (    0xa8) -[DHKey keyAgreementWithPublicKey:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d3ff8 (    0x98) -[DHKey description] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d4090 (   0x1b8) -[LegacySigningKeyPublic initWithData:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d4248 (    0x30) -[LegacySigningKeyPublic dataRepresentation] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d4278 (    0x40) -[LegacySigningKeyPublic verifySignature:ofData:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d42b8 (     0x8) -[LegacySigningKeyPublic secKeyRef] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d42c0 (     0xc) -[LegacySigningKeyPublic setSecKeyRef:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d42cc (     0xc) -[LegacySigningKeyPublic .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d42d8 (    0xb0) -[MPStatusKitSubscriptionKeys initWithIndex:chainKey:signingKey:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d4388 (     0x8) -[MPStatusKitSubscriptionKeys index] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d4390 (     0x8) -[MPStatusKitSubscriptionKeys chainKey] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d4398 (     0x8) -[MPStatusKitSubscriptionKeys signingKey] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d43a0 (    0x44) -[MPStatusKitSubscriptionKeys .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d43e4 (    0xb0) -[MPStatusKitMessage initWithIndex:encryptedMessage:signature:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d4494 (     0x8) -[MPStatusKitMessage index] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d449c (     0x8) -[MPStatusKitMessage encryptedMessage] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d44a4 (     0x8) -[MPStatusKitMessage signature] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d44ac (    0x44) -[MPStatusKitMessage .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d44f0 (    0xd0) -[MPStatusKitOutgoingRatchet initWithData:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d45c0 (    0x78) -[MPStatusKitOutgoingRatchet init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d4638 (    0x58) -[MPStatusKitOutgoingRatchet currentSubscriptionKeys] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d4690 (    0x40) -[MPStatusKitOutgoingRatchet ratchetForward] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d46d0 (    0xa4) -[MPStatusKitOutgoingRatchet sealStatus:authenticating:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d4774 (    0x58) -[MPStatusKitOutgoingRatchet serializedData] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d47cc (    0x58) -[MPStatusKitOutgoingRatchet signingKeyIdentifier] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d4824 (     0x8) -[MPStatusKitOutgoingRatchet ratchet] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d482c (     0xc) -[MPStatusKitOutgoingRatchet setRatchet:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d4838 (     0xc) -[MPStatusKitOutgoingRatchet .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d4844 (    0xd0) -[MPStatusKitIncomingRatchet initWithData:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d4914 (    0xfc) -[MPStatusKitIncomingRatchet initWithIndex:chainKey:signingKey:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d4a10 (    0xd0) -[MPStatusKitIncomingRatchet unsealStatusWithIndex:encryptedMessage:authenticating:signature:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d4ae0 (    0x58) -[MPStatusKitIncomingRatchet serializedData] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d4b38 (    0x58) -[MPStatusKitIncomingRatchet signingKeyIdentifier] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d4b90 (     0xc) -[MPStatusKitIncomingRatchet maxForwardRatchetDelta] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d4b9c (     0x8) -[MPStatusKitIncomingRatchet ratchet] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d4ba4 (     0xc) -[MPStatusKitIncomingRatchet setRatchet:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d4bb0 (     0xc) -[MPStatusKitIncomingRatchet .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d4bbc (    0x10) +[NGMProtocolVersion isVersionSupported:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d4bcc (     0x8) +[NGMProtocolVersion supportedVersion] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d4bd4 (    0x44) SecMPPublicIdentityCopyFromPrivate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d4c18 (   0x10c) SecMPPublicIdentityCreateFromBytes [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d4d24 (    0x64) SecMPPublicIdentityCreateFromData [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d4d88 (    0xb4) SecMPPIEqualToBytes [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d4e3c (    0x70) SecMPPIAppendSerialization [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d4eac (    0xcc) SecMPPIEqual [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d4f78 (    0x70) SecMPPIAppendCanonicalPublicKey [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d4fe8 (   0x1cc) SecMPPIVerifySignature [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d51b4 (    0xb0) SecMPPIAppendPKIEncryptedData [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d5264 (    0x98) SecMPFullIdentityGetTypeID [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d52fc (    0x34) __SecMPFullIdentityGetTypeID_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d5330 (     0x8) SecMPFullIdentityDestroy [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d5338 (    0x40) SecMPFullIdentityCopyDescription [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d5378 (    0x98) SecMPPublicIdentityGetTypeID [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d5410 (    0x34) __SecMPPublicIdentityGetTypeID_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d5444 (     0x8) SecMPPublicIdentityDestroy [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d544c (    0x40) SecMPPublicIdentityCopyDescription [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d548c (    0x10) SecMPFICopyProtClass [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d549c (    0x48) SecMPFullIdentityCreate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d54e4 (    0x48) SecMPFullIdentityCreateWithAccessProtClass [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d552c (    0x48) SecMPFullIdentityCreateWithProtClass [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d5574 (    0xc4) SecMPFullIdentityCreateFromData [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d5638 (     0x8) SecMPFIPurgeFromKeychain [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d5640 (     0x8) SecMPFIPurgeAllFromKeychain [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d5648 (    0xe4) SecMPFIAppendSerialization [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d572c (    0x24) SecMPFIEncryptionSpace [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d5750 (    0xcc) SecMPFIDecrypt [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d581c (    0x48) SecMPFullIdentityCreateWithAccess [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d5864 (     0x8) SecMPFIUpdateProtClass [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d586c (   0x104) SecMPFIAppendSignature [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d5970 (    0x88) SecMPFIAppendPublicHash [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d59f8 (    0x88) SecMPFIAppendCanonicalPublicHash [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d5a80 (    0x70) SecMPPIAppendCanonicalHash [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d5af0 (   0x150) SecMPFullIdentityCreateFromRefs [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d5c40 (    0x18) OUTLINED_FUNCTION_0 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d5c58 (    0x20) OUTLINED_FUNCTION_1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d5c78 (    0x8c) -[NGMPBInnerMessage(Attributes) attributes] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d5d04 (    0x9c) -[NGMFullDeviceIdentity initWithSigningKey:devicePrekeys:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d5da0 (     0x8) +[NGMFullDeviceIdentity identityWithAccess:usageIdentifier:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d5da8 (   0x208) +[NGMFullDeviceIdentity identityWithAccess:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d5fb0 (   0x350) +[NGMFullDeviceIdentity identityWithDataRepresentation:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d6300 (   0x1a0) -[NGMFullDeviceIdentity dataRepresentationWithError:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d64a0 (    0x54) __53-[NGMFullDeviceIdentity dataRepresentationWithError:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d64f4 (     0x8) __copy_helper_block_e8_32s [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d64fc (     0x8) __destroy_helper_block_e8_32s [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d6504 (    0xdc) -[NGMFullDeviceIdentity publicDeviceIdentityWithError:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d65e0 (   0x1c4) -[NGMFullDeviceIdentity unsealMessage:signedByPublicIdentity:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d67a4 (    0x10) __Block_byref_object_copy_ [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d67b4 (     0x8) __Block_byref_object_dispose_ [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d67bc (    0xdc) __68-[NGMFullDeviceIdentity unsealMessage:signedByPublicIdentity:error:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d6898 (    0x50) __copy_helper_block_e8_32r40r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d68e8 (    0x44) __destroy_helper_block_e8_32r40r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d692c (    0xb4) -[NGMFullDeviceIdentity unsealMessage:signedByPublicIdentity:decryptionBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d69e0 (    0x18) __78-[NGMFullDeviceIdentity unsealMessage:signedByPublicIdentity:decryptionBlock:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d69f8 (    0x10) __copy_helper_block_e8_32b [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d6a08 (   0x118) -[NGMFullDeviceIdentity unsealMessageAndAttributes:guid:signedByPublicIdentity:decryptionBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d6b20 (   0x490) -[NGMFullDeviceIdentity unsealMessageAndAttributes:guid:sendingURI:sendingPushToken:receivingURI:receivingPushToken:signedByPublicIdentity:decryptionBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d6fb0 (    0x2c) __Block_byref_object_copy_.25 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d6fdc (     0x8) __Block_byref_object_dispose_.26 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d6fe4 (   0x154) __156-[NGMFullDeviceIdentity unsealMessageAndAttributes:guid:sendingURI:sendingPushToken:receivingURI:receivingPushToken:signedByPublicIdentity:decryptionBlock:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d7138 (    0x78) __copy_helper_block_e8_32s40r48r56r64r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d71b0 (    0x64) __destroy_helper_block_e8_32s40r48r56r64r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d7214 (   0xaf8) -[NGMFullDeviceIdentity unsealMessageAndAttributes:signedByPublicIdentity:decryptionBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d7d0c (    0x88) -[NGMFullDeviceIdentity signDataWithFormatter:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d7d94 (    0xdc) -[NGMFullDeviceIdentity shouldRollEncryptionIdentity] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d7e70 (   0x108) -[NGMFullDeviceIdentity eraseFromKeyChain:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d7f78 (    0x80) -[NGMFullDeviceIdentity keyRollingTicketWithError:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d7ff8 (   0x1f4) -[NGMFullDeviceIdentity updateWithRegisteredTicket:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d81ec (   0x194) -[NGMFullDeviceIdentity description] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d8380 (    0x5c) __36-[NGMFullDeviceIdentity description]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d83dc (     0x8) -[NGMFullDeviceIdentity deviceSigningKey] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d83e4 (     0xc) -[NGMFullDeviceIdentity setDeviceSigningKey:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d83f0 (     0x8) -[NGMFullDeviceIdentity devicePrekeys] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d83f8 (     0xc) -[NGMFullDeviceIdentity setDevicePrekeys:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d8404 (    0x44) -[NGMFullDeviceIdentity .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d8448 (   0x164) +[MP_AES_CTR crypt:key:IV:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d85ac (     0x4) +[MP_AES_CTR encrypt:key:IV:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d85b0 (     0x4) +[MP_AES_CTR decrypt:key:IV:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d85b4 (    0x6c) -[SecKeyP256Public initWithSecKeyRef:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d8620 (   0x1f4) -[SecKeyP256Public dataRepresentation] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d8814 (   0x2bc) -[SecKeyP256Public initWithData:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d8ad0 (   0x160) -[SecKeyP256Public verifySignature:data:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d8c30 (    0x50) -[SecKeyP256Public dealloc] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d8c80 (     0x8) -[SecKeyP256Public publicKeyRef] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d8c88 (     0x8) -[SecKeyP256Public setPublicKeyRef:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d8c90 (     0xc) -[SecKeyP256Public serializedKey] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d8c9c (     0x8) -[SecKeyP256Public setSerializedKey:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d8ca4 (     0xc) -[SecKeyP256Public .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d8cb0 (    0x10) +[SecKeyP256Private defaultProtectionClassForPlatform] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d8cc0 (    0x64) +[SecKeyP256Private generate] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d8d24 (   0x3e8) +[SecKeyP256Private generateWithAccessControl:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d910c (   0x17c) -[SecKeyP256Private getPrivateKeyRefWithError:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d9288 (     0x8) -[SecKeyP256Private keyAgreement:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d9290 (   0x1a4) -[SecKeyP256Private keyAgreement:error:isRetry:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d9434 (    0xac) -[SecKeyP256Private publicKey] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d94e0 (   0x150) -[SecKeyP256Private signData:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d9630 (     0x4) -[SecKeyP256Private keychainData] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d9634 (   0x1b0) -[SecKeyP256Private initWithData:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d97e4 (     0x8) -[SecKeyP256Private privateKey] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d97ec (     0x8) -[SecKeyP256Private privateKeyBlob] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d97f4 (     0xc) -[SecKeyP256Private setPublicKey:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d9800 (    0x50) -[SecKeyP256Private .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d9850 (    0x14) OUTLINED_FUNCTION_0 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d9864 (    0x18) OUTLINED_FUNCTION_1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d987c (    0x14) OUTLINED_FUNCTION_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d9890 (    0xb0) SecProtectStream [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d9940 (   0x170) AES256CTRIV0TransformStream [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d9ab0 (    0x84) SecExposeStream [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d9b34 (    0xf4) +[GFTKeyWrapping wrapSeed:to:legacy:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d9c28 (    0x14) +[GFTKeyWrapping wrapSeed:toKeys:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d9c3c (    0x18) +[GFTKeyWrapping unwrapSeed:usingKey:legacy:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d9c54 (     0xc) +[GFTKeyWrapping encrypt:toKey:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d9c60 (     0xc) +[GFTKeyWrapping decrypt:usingKey:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d9c6c (     0xc) MPEchnidaEncryptionDisabled [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d9c78 (    0x6c) get_value [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d9ce4 (    0x48) MPSecondaryEncryptionDisabled [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d9d2c (     0xc) MPSecondaryRegistrationDisabled [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d9d38 (    0x10) MPSetEchnidaEncryptionDisabled [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d9d48 (    0x78) set_value [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d9dc0 (    0x10) MPSetSecondaryEncryptionDisabled [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d9dd0 (    0x10) MPSetSecondaryRegistrationDisabled [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d9de0 (    0x50) +[NGMKeyValidator validatorLength] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d9e30 (     0xc) +[NGMKeyValidator rangeOnPublicKey] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d9e3c (    0x58) +[NGMKeyValidator versionByte] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77d9e94 (   0x8dc) +[NGMKeyValidator isValidKeyValidator:receiversIdentity:sendersIdentity:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77da770 (   0x104) __79+[NGMKeyValidator isValidKeyValidator:receiversIdentity:sendersIdentity:error:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77da874 (    0x50) __copy_helper_block_e8_32s40s48r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77da8c4 (    0x48) __destroy_helper_block_e8_32s40s48r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77da90c (    0xbc) __79+[NGMKeyValidator isValidKeyValidator:receiversIdentity:sendersIdentity:error:]_block_invoke.21 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77da9c8 (    0x3c) __copy_helper_block_e8_32s40s [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77daa04 (    0x3c) __destroy_helper_block_e8_32s40s [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77daa40 (   0x264) +[NGMKeyValidator keyValidatorWithReceiversIdentity:sendersIdentity:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77daca4 (    0xa4) -[NSData(ValidateSize) lengthValidatedBuffer] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77dad48 (    0x68) -[NSMutableData(AppendWithSize) appendDataAndSize:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77dadb0 (    0x78) -[DHPublicKey description] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77dae28 (    0x84) -[SigningKey publicKey] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77daeac (    0x88) -[SigningKey signData:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77daf34 (    0x78) -[SigningKey signDataWithFormatter:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77dafac (    0x98) -[SigningKey description] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77db044 (    0xc4) -[SecMessageLegacyFullIdentity initWithEncryptionSecKey:signingSecKey:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77db108 (    0xfc) -[SecMessageLegacyFullIdentity initWithProtobufData:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77db204 (    0xac) -[SecMessageLegacyFullIdentity initWithEncryptionKey:signingKey:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77db2b0 (   0x164) -[SecMessageLegacyFullIdentity initWithEncryptionKeyData:signingKeyData:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77db414 (   0x134) +[SecMessageLegacyFullIdentity identity] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77db548 (   0x1dc) +[SecMessageLegacyFullIdentity identityWithDataRepresentation:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77db724 (    0x88) -[SecMessageLegacyFullIdentity signData:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77db7ac (    0x88) -[SecMessageLegacyFullIdentity decryptMessage:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77db834 (   0x140) -[SecMessageLegacyFullIdentity dataRepresentationWithError:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77db974 (    0xd0) -[SecMessageLegacyFullIdentity publicIdentity] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77dba44 (    0x40) -[SecMessageLegacyFullIdentity encryptionSize] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77dba84 (   0x120) -[SecMessageLegacyFullIdentity unsealMessage:signedByPublicIdentity:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77dbba4 (    0x48) -[SecMessageLegacyFullIdentity privateSigningKeyForTerminusMigration] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77dbbec (    0xc8) -[SecMessageLegacyFullIdentity asRef] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77dbcb4 (     0x8) -[SecMessageLegacyFullIdentity signingKey] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77dbcbc (     0xc) -[SecMessageLegacyFullIdentity setSigningKey:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77dbcc8 (     0x8) -[SecMessageLegacyFullIdentity encryptionKey] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77dbcd0 (     0xc) -[SecMessageLegacyFullIdentity setEncryptionKey:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77dbcdc (     0x8) -[SecMessageLegacyFullIdentity encryptionKeyPersistentRef] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77dbce4 (     0xc) -[SecMessageLegacyFullIdentity setEncryptionKeyPersistentRef:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77dbcf0 (     0x8) -[SecMessageLegacyFullIdentity signingKeyPersistentRef] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77dbcf8 (     0xc) -[SecMessageLegacyFullIdentity setSigningKeyPersistentRef:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77dbd04 (     0x8) -[SecMessageLegacyFullIdentity isMigratedV2Key] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77dbd0c (     0x8) -[SecMessageLegacyFullIdentity setIsMigratedV2Key:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77dbd14 (    0x5c) -[SecMessageLegacyFullIdentity .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77dbd70 (    0x1c) OUTLINED_FUNCTION_0 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77dbd8c (    0x18) OUTLINED_FUNCTION_1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77dbda4 (    0x20) OUTLINED_FUNCTION_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77dbdc4 (   0x1bc) -[SecKeyRSAPrivate init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77dbf80 (   0x198) -[SecKeyRSAPrivate initWithData:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77dc118 (    0x88) -[SecKeyRSAPrivate publicKey] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77dc1a0 (    0xf4) -[SecKeyRSAPrivate decryptData:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77dc294 (    0x54) -[SecKeyRSAPrivate dataRepresentation] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77dc2e8 (     0x8) -[SecKeyRSAPrivate secKeyRef] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77dc2f0 (     0xc) -[SecKeyRSAPrivate setSecKeyRef:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77dc2fc (     0xc) -[SecKeyRSAPrivate .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77dc308 (    0x18) OUTLINED_FUNCTION_0 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77dc320 (    0x20) OUTLINED_FUNCTION_1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77dc340 (   0x138) SecMPFullIdentityObjCCreateOTRSessionWithFlags [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77dc478 (   0x130) SecMPFullIdentityCreateOTRSessionWithFlags [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77dc5a8 (     0xc) SecMPFullIdentityCreateOTRSessionWith [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77dc5b4 (   0x110) -[NGMGelatoPresenceSignatureFormatter initWithApplicationData:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77dc6c4 (     0x8) -[NGMGelatoPresenceSignatureFormatter signedData] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77dc6cc (     0xc) -[NGMGelatoPresenceSignatureFormatter setSignedData:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77dc6d8 (     0xc) -[NGMGelatoPresenceSignatureFormatter .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77dc6e4 (    0xa0) +[NGMReplayManager sharedManager] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77dc784 (    0x90) __33+[NGMReplayManager sharedManager]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77dc814 (    0x94) -[NGMReplayManager dbNameFromProcess] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77dc8a8 (    0xc4) -[NGMReplayManager isBATS] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77dc96c (    0xac) -[NGMReplayManager isXCTest] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77dca18 (    0x4c) -[NGMReplayManager isRunningTests] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77dca64 (   0x1a0) -[NGMReplayManager persistentStoreDescription] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77dcc04 (    0xd4) -[NGMReplayManager objectContextWithError:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77dccd8 (   0x410) -[NGMReplayManager persistentContainerWithError:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77dd0e8 (    0x10) __Block_byref_object_copy_ [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77dd0f8 (     0x8) __Block_byref_object_dispose_ [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77dd100 (   0x174) __49-[NGMReplayManager persistentContainerWithError:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77dd274 (   0x178) -[NGMReplayManager logDatabaseCreationDate:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77dd3ec (   0x1fc) -[NGMReplayManager computeDestinationHashForOutgoingMessageTo:withLocalKey:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77dd5e8 (   0x1fc) -[NGMReplayManager computeDestinationHashForIncomingMessageFrom:toLocalKey:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77dd7e4 (   0x3c8) -[NGMReplayManager counterForDestinationWithIdentityKey:sendingIdentity:error:success:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ddbac (   0x50c) __87-[NGMReplayManager counterForDestinationWithIdentityKey:sendingIdentity:error:success:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77de0b8 (    0x88) __copy_helper_block_e8_32s40s48s56s64s72r80r88r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77de140 (    0x78) __destroy_helper_block_e8_32s40s48s56s64s72r80r88r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77de1b8 (   0x334) -[NGMReplayManager validateIncomingCounter:prekey:publicIdentity:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77de4ec (    0x1c) __72-[NGMReplayManager validateIncomingCounter:prekey:publicIdentity:error:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77de508 (    0x4c) __copy_helper_block_e8_32s40s48s56s [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77de554 (    0x4c) __destroy_helper_block_e8_32s40s48s56s [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77de5a0 (   0x3b0) -[NGMReplayManager processFetchRequestAndValidate:counter:commit:theirIdentity:prekey:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77de950 (   0x408) __93-[NGMReplayManager processFetchRequestAndValidate:counter:commit:theirIdentity:prekey:error:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ded58 (    0x80) __copy_helper_block_e8_32s40s48s56s64s72s80r88r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77dedd8 (    0x74) __destroy_helper_block_e8_32s40s48s56s64s72s80r88r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77dee4c (   0x2bc) -[NGMReplayManager registeredPrekeyForNGMPrekey:objectContext:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77df108 (   0x340) -[NGMReplayManager deleteReceivingCountersForKey:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77df448 (   0x27c) -[NGMReplayManager deleteExpiredSendingDestinations] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77df6c4 (     0xc) __52-[NGMReplayManager deleteExpiredSendingDestinations]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77df6d0 (     0xc) -[NGMReplayManager .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77df6dc (    0x18) OUTLINED_FUNCTION_0 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77df6f4 (    0x20) OUTLINED_FUNCTION_1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77df714 (    0x20) OUTLINED_FUNCTION_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77df734 (    0x14) OUTLINED_FUNCTION_3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77df748 (    0x1c) OUTLINED_FUNCTION_4 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77df764 (    0x84) +[NGMTimeBasedEvaluations sharedManager] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77df7e8 (    0x88) +[NGMTimeBasedEvaluations nowDate] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77df870 (    0x64) +[NGMTimeBasedEvaluations setNowDate:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77df8d4 (    0x74) +[NGMTimeBasedEvaluations oldestDateAllowedToSendTo] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77df948 (    0x28) +[NGMTimeBasedEvaluations timeIntervalAllowedForAction:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77df970 (    0x2c) +[NGMTimeBasedEvaluations debugDescriptionForAction:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77df99c (   0x268) +[NGMTimeBasedEvaluations validateFetchedPrekeyTimestamp:forEvaluationType:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77dfc04 (   0x188) +[NGMTimeBasedEvaluations prekeyCanBeDeleted:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77dfd8c (   0x10c) +[NGMTimeBasedEvaluations prekeyShouldBeRolled:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77dfe98 (     0xc) -[NGMTimeBasedEvaluations date] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77dfea4 (     0x8) -[NGMTimeBasedEvaluations setDate:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77dfeac (     0xc) -[NGMTimeBasedEvaluations .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77dfeb8 (    0x1c) OUTLINED_FUNCTION_0 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77dfed4 (    0x7c) -[PublicKey initWithKey:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77dff50 (    0xf8) -[PublicKey isEqual:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e0048 (    0xd4) -[PublicKey initWithData:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e011c (     0x8) -[PublicKey dataRepresentation] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e0124 (    0x78) -[PublicKey description] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e019c (     0xc) -[PublicKey key] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e01a8 (     0x8) -[PublicKey setKey:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e01b0 (     0xc) -[PublicKey .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e01bc (    0xc8) -[NGMPublicDeviceIdentity(SignatureVerification) isValidSignature:forMessage:forType:error:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e0284 (    0xb8) -[NGMPBLegacyKey description] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e033c (    0x8c) -[NGMPBLegacyKey dictionaryRepresentation] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e03c8 (   0x1bc) NGMPBLegacyKeyReadFrom [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e0584 (     0x8) -[NGMPBLegacyKey readFrom:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e058c (    0x7c) -[NGMPBLegacyKey writeTo:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e0608 (    0x70) -[NGMPBLegacyKey copyTo:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e0678 (    0x8c) -[NGMPBLegacyKey copyWithZone:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e0704 (    0xac) -[NGMPBLegacyKey isEqual:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e07b0 (    0x48) -[NGMPBLegacyKey hash] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e07f8 (    0x70) -[NGMPBLegacyKey mergeFrom:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e0868 (    0x10) -[NGMPBLegacyKey encryptionKey] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e0878 (    0x14) -[NGMPBLegacyKey setEncryptionKey:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e088c (    0x10) -[NGMPBLegacyKey signingKey] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e089c (    0x14) -[NGMPBLegacyKey setSigningKey:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e08b0 (    0x54) -[NGMPBLegacyKey .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e0904 (    0x18) -[NGMPBDevicePreKey hasDhKey] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e091c (    0x18) -[NGMPBDevicePreKey hasSecondaryPrivateKey] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e0934 (    0x18) -[NGMPBDevicePreKey hasSecondaryRegistrationData] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e094c (    0x24) -[NGMPBDevicePreKey setSecondaryVersion:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e0970 (    0x1c) -[NGMPBDevicePreKey setHasSecondaryVersion:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e098c (    0x14) -[NGMPBDevicePreKey hasSecondaryVersion] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e09a0 (    0xb8) -[NGMPBDevicePreKey description] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e0a58 (   0x17c) -[NGMPBDevicePreKey dictionaryRepresentation] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e0bd4 (   0x354) NGMPBDevicePreKeyReadFrom [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e0f28 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001b77e0f40 (     0x8) -[NGMPBDevicePreKey readFrom:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e0f48 (    0xf4) -[NGMPBDevicePreKey writeTo:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e103c (    0xd8) -[NGMPBDevicePreKey copyTo:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e1114 (   0x110) -[NGMPBDevicePreKey copyWithZone:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e1224 (   0x140) -[NGMPBDevicePreKey isEqual:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e1364 (   0x12c) -[NGMPBDevicePreKey hash] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e1490 (    0xf0) -[NGMPBDevicePreKey mergeFrom:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e1580 (    0x10) -[NGMPBDevicePreKey dhKey] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e1590 (    0x14) -[NGMPBDevicePreKey setDhKey:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e15a4 (    0x10) -[NGMPBDevicePreKey timestamp] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e15b4 (    0x10) -[NGMPBDevicePreKey setTimestamp:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e15c4 (    0x10) -[NGMPBDevicePreKey prekeySignature] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e15d4 (    0x14) -[NGMPBDevicePreKey setPrekeySignature:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e15e8 (    0x10) -[NGMPBDevicePreKey secondaryPrivateKey] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e15f8 (    0x14) -[NGMPBDevicePreKey setSecondaryPrivateKey:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e160c (    0x10) -[NGMPBDevicePreKey secondaryRegistrationData] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e161c (    0x14) -[NGMPBDevicePreKey setSecondaryRegistrationData:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e1630 (    0x10) -[NGMPBDevicePreKey secondaryVersion] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e1640 (    0x7c) -[NGMPBDevicePreKey .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e16bc (    0x10) -[NGMPBFullDeviceIdentity clearPrekeys] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e16cc (    0x80) -[NGMPBFullDeviceIdentity addPrekeys:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e174c (    0x10) -[NGMPBFullDeviceIdentity prekeysCount] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e175c (    0x10) -[NGMPBFullDeviceIdentity prekeysAtIndex:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e176c (     0xc) +[NGMPBFullDeviceIdentity prekeysType] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e1778 (    0xb8) -[NGMPBFullDeviceIdentity description] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e1830 (   0x1dc) -[NGMPBFullDeviceIdentity dictionaryRepresentation] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e1a0c (   0x22c) NGMPBFullDeviceIdentityReadFrom [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e1c38 (     0x8) -[NGMPBFullDeviceIdentity readFrom:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e1c40 (   0x134) -[NGMPBFullDeviceIdentity writeTo:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e1d74 (    0xc0) -[NGMPBFullDeviceIdentity copyTo:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e1e34 (   0x160) -[NGMPBFullDeviceIdentity copyWithZone:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e1f94 (    0xac) -[NGMPBFullDeviceIdentity isEqual:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e2040 (    0x48) -[NGMPBFullDeviceIdentity hash] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e2088 (   0x148) -[NGMPBFullDeviceIdentity mergeFrom:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e21d0 (    0x10) -[NGMPBFullDeviceIdentity signingKey] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e21e0 (    0x14) -[NGMPBFullDeviceIdentity setSigningKey:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e21f4 (    0x10) -[NGMPBFullDeviceIdentity prekeys] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e2204 (    0x14) -[NGMPBFullDeviceIdentity setPrekeys:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e2218 (    0x54) -[NGMPBFullDeviceIdentity .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e226c (    0x18) -[NGMPBOuterMessage hasEncryptedPayload] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e2284 (    0x18) -[NGMPBOuterMessage hasEphemeralPubKey] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e229c (    0x18) -[NGMPBOuterMessage hasSignature] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e22b4 (    0x18) -[NGMPBOuterMessage hasSecondaryMessage] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e22cc (    0x18) -[NGMPBOuterMessage hasKeyValidator] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e22e4 (    0xb8) -[NGMPBOuterMessage description] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e239c (    0xec) -[NGMPBOuterMessage dictionaryRepresentation] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e2488 (   0x244) NGMPBOuterMessageReadFrom [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e26cc (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b77e26dc (     0x8) -[NGMPBOuterMessage readFrom:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e26e4 (    0xcc) -[NGMPBOuterMessage writeTo:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e27b0 (    0xb8) -[NGMPBOuterMessage copyTo:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e2868 (    0xf8) -[NGMPBOuterMessage copyWithZone:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e2960 (   0x10c) -[NGMPBOuterMessage isEqual:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e2a6c (    0x84) -[NGMPBOuterMessage hash] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e2af0 (    0xb8) -[NGMPBOuterMessage mergeFrom:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e2ba8 (    0x10) -[NGMPBOuterMessage encryptedPayload] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e2bb8 (    0x14) -[NGMPBOuterMessage setEncryptedPayload:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e2bcc (    0x10) -[NGMPBOuterMessage ephemeralPubKey] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e2bdc (    0x14) -[NGMPBOuterMessage setEphemeralPubKey:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e2bf0 (    0x10) -[NGMPBOuterMessage signature] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e2c00 (    0x14) -[NGMPBOuterMessage setSignature:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e2c14 (    0x10) -[NGMPBOuterMessage secondaryMessage] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e2c24 (    0x14) -[NGMPBOuterMessage setSecondaryMessage:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e2c38 (    0x10) -[NGMPBOuterMessage keyValidator] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e2c48 (    0x14) -[NGMPBOuterMessage setKeyValidator:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e2c5c (    0x90) -[NGMPBOuterMessage .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e2cec (    0x24) -[NGMPBPublicDeviceIdentity setSecondaryVersion:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e2d10 (    0x1c) -[NGMPBPublicDeviceIdentity setHasSecondaryVersion:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e2d2c (    0x14) -[NGMPBPublicDeviceIdentity hasSecondaryVersion] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e2d40 (    0xb8) -[NGMPBPublicDeviceIdentity description] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e2df8 (    0xbc) -[NGMPBPublicDeviceIdentity dictionaryRepresentation] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e2eb4 (   0x240) NGMPBPublicDeviceIdentityReadFrom [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e30f4 (     0x8) -[NGMPBPublicDeviceIdentity readFrom:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e30fc (    0x84) -[NGMPBPublicDeviceIdentity writeTo:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e3180 (    0x7c) -[NGMPBPublicDeviceIdentity copyTo:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e31fc (    0x94) -[NGMPBPublicDeviceIdentity copyWithZone:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e3290 (    0xc8) -[NGMPBPublicDeviceIdentity isEqual:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e3358 (    0x64) -[NGMPBPublicDeviceIdentity hash] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e33bc (    0x84) -[NGMPBPublicDeviceIdentity mergeFrom:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e3440 (    0x10) -[NGMPBPublicDeviceIdentity signingKey] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e3450 (    0x14) -[NGMPBPublicDeviceIdentity setSigningKey:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e3464 (    0x10) -[NGMPBPublicDeviceIdentity secondaryVersion] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e3474 (    0x14) -[NGMPBPublicDeviceIdentity .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e3488 (    0x18) -[NGMPBPublicDevicePrekey hasSecondaryPrekey] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e34a0 (    0xb8) -[NGMPBPublicDevicePrekey description] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e3558 (    0xf4) -[NGMPBPublicDevicePrekey dictionaryRepresentation] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e364c (   0x23c) NGMPBPublicDevicePrekeyReadFrom [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e3888 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b77e3898 (     0x8) -[NGMPBPublicDevicePrekey readFrom:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e38a0 (    0xb0) -[NGMPBPublicDevicePrekey writeTo:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e3950 (    0x8c) -[NGMPBPublicDevicePrekey copyTo:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e39dc (    0xc0) -[NGMPBPublicDevicePrekey copyWithZone:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e3a9c (    0xe4) -[NGMPBPublicDevicePrekey isEqual:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e3b80 (    0xe0) -[NGMPBPublicDevicePrekey hash] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e3c60 (    0x98) -[NGMPBPublicDevicePrekey mergeFrom:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e3cf8 (    0x10) -[NGMPBPublicDevicePrekey prekey] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e3d08 (    0x14) -[NGMPBPublicDevicePrekey setPrekey:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e3d1c (    0x10) -[NGMPBPublicDevicePrekey prekeySignature] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e3d2c (    0x14) -[NGMPBPublicDevicePrekey setPrekeySignature:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e3d40 (    0x10) -[NGMPBPublicDevicePrekey timestamp] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e3d50 (    0x10) -[NGMPBPublicDevicePrekey setTimestamp:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e3d60 (    0x10) -[NGMPBPublicDevicePrekey secondaryPrekey] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e3d70 (    0x14) -[NGMPBPublicDevicePrekey setSecondaryPrekey:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e3d84 (    0x68) -[NGMPBPublicDevicePrekey .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e3dec (    0x18) -[NGMPBP256Key hasKeychainTag] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e3e04 (    0x68) -[NGMPBP256Key keystoreAsString:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e3e6c (    0xac) -[NGMPBP256Key StringAsKeystore:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e3f18 (    0x18) -[NGMPBP256Key hasKeyData] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e3f30 (    0xb8) -[NGMPBP256Key description] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e3fe8 (   0x104) -[NGMPBP256Key dictionaryRepresentation] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e40ec (   0x254) NGMPBP256KeyReadFrom [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e4340 (     0x8) -[NGMPBP256Key readFrom:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e4348 (    0x90) -[NGMPBP256Key writeTo:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e43d8 (    0x80) -[NGMPBP256Key copyTo:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e4458 (    0x9c) -[NGMPBP256Key copyWithZone:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e44f4 (    0xc4) -[NGMPBP256Key isEqual:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e45b8 (    0x60) -[NGMPBP256Key hash] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e4618 (    0x80) -[NGMPBP256Key mergeFrom:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e4698 (    0x10) -[NGMPBP256Key keychainTag] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e46a8 (    0x14) -[NGMPBP256Key setKeychainTag:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e46bc (    0x10) -[NGMPBP256Key keystore] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e46cc (    0x10) -[NGMPBP256Key setKeystore:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e46dc (    0x10) -[NGMPBP256Key keyData] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e46ec (    0x14) -[NGMPBP256Key setKeyData:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e4700 (    0x54) -[NGMPBP256Key .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e4754 (    0x24) -[NGMPBInnerMessage setCounter:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e4778 (    0x1c) -[NGMPBInnerMessage setHasCounter:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e4794 (    0x14) -[NGMPBInnerMessage hasCounter] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e47a8 (    0x18) -[NGMPBInnerMessage hasKtGossipData] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e47c0 (    0x18) -[NGMPBInnerMessage hasDebugInfo] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e47d8 (    0xb8) -[NGMPBInnerMessage description] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e4890 (   0x104) -[NGMPBInnerMessage dictionaryRepresentation] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e4994 (   0x294) NGMPBInnerMessageReadFrom [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e4c28 (     0x8) -[NGMPBInnerMessage readFrom:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e4c30 (    0xbc) -[NGMPBInnerMessage writeTo:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e4cec (    0xac) -[NGMPBInnerMessage copyTo:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e4d98 (    0xdc) -[NGMPBInnerMessage copyWithZone:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e4e74 (   0x104) -[NGMPBInnerMessage isEqual:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e4f78 (    0x8c) -[NGMPBInnerMessage hash] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e5004 (    0xb4) -[NGMPBInnerMessage mergeFrom:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e50b8 (    0x10) -[NGMPBInnerMessage message] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e50c8 (    0x14) -[NGMPBInnerMessage setMessage:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e50dc (    0x10) -[NGMPBInnerMessage counter] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e50ec (    0x10) -[NGMPBInnerMessage ktGossipData] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e50fc (    0x14) -[NGMPBInnerMessage setKtGossipData:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e5110 (    0x10) -[NGMPBInnerMessage debugInfo] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e5120 (    0x14) -[NGMPBInnerMessage setDebugInfo:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e5134 (    0x68) -[NGMPBInnerMessage .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e519c (    0x14) +[RegisteredPreKey(CoreDataProperties) fetchRequest] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e51b0 (    0x14) +[SenderPublicIdentity(CoreDataProperties) fetchRequest] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e51c4 (    0x14) +[SendingDestination(CoreDataProperties) fetchRequest] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e51d8 (    0xf4) closure #1 in static CoreCryptoAESCTRImpl.crypt(key:data:IV:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e52cc (   0x174) closure #1 in closure #1 in static CoreCryptoAESCTRImpl.crypt(key:data:IV:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e5440 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b77e5450 (     0xc) variable initialization expression of SymmetricRatchet.messageKeys [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e545c (     0x8) variable initialization expression of AES.IV.blockSize [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e5464 (    0x14) type metadata accessor for SecKeyRef [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e5478 (    0x4c) protocol witness for Hashable.hashValue.getter in conformance CFStringRef [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e54c4 (    0x58) protocol witness for Hashable.hash(into:) in conformance CFStringRef [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e551c (    0x68) protocol witness for Hashable._rawHashValue(seed:) in conformance CFStringRef [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e5584 (    0x6c) protocol witness for static Equatable.== infix(_:_:) in conformance CFStringRef [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e55f0 (   0x220) specialized Data._Representation.withUnsafeMutableBytes<A>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e5810 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b77e5820 (    0xdc) specialized Data.InlineData.withUnsafeBytes<A>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e58fc (    0xe8) specialized Data.InlineData.withUnsafeBytes<A>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e59e4 (    0xb0) specialized __DataStorage.withUnsafeBytes<A>(in:apply:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e5a94 (    0x98) specialized Data.InlineSlice.withUnsafeMutableBytes<A>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e5b2c (   0x2f0) specialized static CoreCryptoAESCTRImpl.crypt(key:data:IV:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e5e1c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b77e5e2c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b77e5e3c (    0x24) partial apply for closure #1 in static CoreCryptoAESCTRImpl.crypt(key:data:IV:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e5e60 (    0x58) outlined consume of Data._Representation [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e5eb8 (    0x34) partial apply for closure #1 in closure #1 in static CoreCryptoAESCTRImpl.crypt(key:data:IV:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e5eec (    0xc0) specialized __DataStorage.withUnsafeMutableBytes<A>(in:apply:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e5fac (   0x370) specialized Data._Representation.withUnsafeMutableBytes<A>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e631c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b77e632c (    0x14) type metadata accessor for CFStringRef [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e6340 (    0x14) type metadata accessor for CFErrorRef [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e6354 (    0x48) type metadata accessor for SecKeyRef [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e639c (    0x48) base witness table accessor for Hashable in CFStringRef [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e63e4 (    0x48) lazy protocol witness table accessor for type CryptoKitError and conformance CryptoKitError [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e642c (    0x48) base witness table accessor for Equatable in CFStringRef [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e6474 (    0x3c) one-time initialization function for GLT_SEED_EXTRACTION_LABEL [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e64b0 (     0x4) protocol witness for Error._domain.getter in conformance GLTKeyDiversificationError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e64b4 (     0x4) protocol witness for Error._code.getter in conformance GLTKeyDiversificationError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e64b8 (     0x4) protocol witness for Error._userInfo.getter in conformance GLTKeyDiversificationError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e64bc (     0x4) protocol witness for Error._getEmbeddedNSError() in conformance GLTKeyDiversificationError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e64c0 (    0x10) @objc GLTDiversifiedKey.diversifiedKey.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e64d0 (    0x10) @objc GLTDiversifiedKey.trackingPreventionSalt.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e64e0 (    0x18) GLTDiversifiedKey.__allocating_init() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e64f8 (    0x30) GLTDiversifiedKey.init() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e6528 (    0x30) @objc GLTDiversifiedKey.init() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e6558 (    0x18) GLTDiversifiedKey.__deallocating_deinit [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e6570 (    0x24) type metadata accessor for GLTDiversifiedKey [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e6594 (    0x4c) @objc GLTDiversifiedKey.__ivar_destroyer [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e65e0 (    0x18) static GLTKeyDiversificationSwift.diversify(publicKey:trackingPreventionSalt:docId:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e65f8 (   0x140) @objc static GLTKeyDiversificationSwift.diversify(publicKey:trackingPreventionSalt:docId:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e6738 (    0x18) static GLTKeyDiversificationSwift.diversify(privateKey:docId:trackingPreventionSalt:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e6750 (   0x11c) @objc static GLTKeyDiversificationSwift.diversify(privateKey:docId:trackingPreventionSalt:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e686c (    0x18) GLTKeyDiversificationSwift.__allocating_init() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e6884 (    0x48) GLTDiversifiedKey.__allocating_init() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e68cc (    0x34) GLTKeyDiversificationSwift.init() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e6900 (    0x40) @objc GLTKeyDiversificationSwift.init() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e6940 (    0x18) GLTKeyDiversificationSwift.__deallocating_deinit [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e6958 (    0x38) GLTDiversifiedKey.__deallocating_deinit [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e6990 (   0x328) specialized Data._Representation.withUnsafeMutableBytes<A>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e6cb8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b77e6cc8 (   0x40c) specialized static GLTKeyDiversificationSwift.validateKeyType(_:isPublicKey:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e70d4 (   0x114) specialized Dictionary.init(dictionaryLiteral:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e71e8 (   0x604) specialized static GLTKeyDiversificationSwift.diversify(publicKey:trackingPreventionSalt:docId:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e77ec (   0x530) specialized static GLTKeyDiversificationSwift.diversify(privateKey:docId:trackingPreventionSalt:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e7d1c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b77e7d2c (    0x24) type metadata accessor for GLTKeyDiversificationSwift [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e7d50 (    0x14) outlined consume of Data? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e7d64 (    0x54) lazy protocol witness table accessor for type GLTKeyDiversificationError and conformance GLTKeyDiversificationError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e7db8 (    0x64) outlined copy of Data._Representation [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e7e1c (    0x44) __swift_instantiateConcreteTypeFromMangledName [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e7e60 (    0x68) outlined init with copy of (CFStringRef, Any) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e7ec8 (    0x10) outlined init with take of Any [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e7ed8 (    0x44) lazy protocol witness table accessor for type CFStringRef and conformance CFStringRef [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e7f1c (    0x5c) outlined init with copy of Any [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e7f78 (    0x14) outlined copy of Data? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e7f8c (     0xc) __swift_memcpy8_8 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e7f98 (     0x4) __swift_noop_void_return [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e7f9c (    0x64) getEnumTagSinglePayload for GLTKeyDiversificationError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e8000 (    0x54) storeEnumTagSinglePayload for GLTKeyDiversificationError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e8054 (    0x24) getEnumTag for GLTKeyDiversificationError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e8078 (     0x4) destructiveProjectEnumData for GLTKeyDiversificationError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e807c (    0x28) destructiveInjectEnumTag for GLTKeyDiversificationError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e80a4 (    0x10) type metadata accessor for GLTKeyDiversificationError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e80b4 (   0x258) MPPB_SKPaddedStatus.paddedData() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e830c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b77e831c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b77e832c (    0x6c) closure #1 in SymmetricKey.toZeroizingNSData() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e8398 (   0xa30) SymmetricRatchet.init(data:step:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e8dc8 (   0x430) SymmetricRatchet.serializedData() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e91f8 (   0x680) specialized Sequence.compactMap<A>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e9878 (    0x40) type metadata accessor for NSData [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e98b8 (    0x54) lazy protocol witness table accessor for type SymmetricRatchetErrors and conformance SymmetricRatchetErrors [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e990c (    0x50) __swift_destroy_boxed_opaque_existential_1 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e995c (    0x64) outlined init with copy of SymmetricRatchetStep [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e99c0 (    0x68) outlined init with copy of MPPB_KeyAndIndex? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e9a28 (    0x60) outlined destroy of MPPB_RatchetState [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e9a88 (   0x328) specialized Data._Representation.withUnsafeMutableBytes<A>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e9db0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b77e9dc0 (    0x68) outlined init with take of MPPB_KeyAndIndex [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e9e28 (    0x48) lazy protocol witness table accessor for type MPPB_RatchetState and conformance MPPB_RatchetState [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e9e70 (    0x54) lazy protocol witness table accessor for type StatusKitErrors and conformance StatusKitErrors [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e9ec4 (    0xa0) specialized Data.init(count:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e9f64 (    0x68) outlined init with take of (key: UInt64, value: SymmetricKey) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77e9fcc (    0x5c) outlined destroy of (key: SymmetricKey, index: UInt64) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ea028 (   0x220) initializeBufferWithCopyOfBuffer for MPPB_RatchetState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ea248 (    0x20) type metadata accessor for MPPB_KeyAndIndex [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ea268 (   0x120) destroy for MPPB_RatchetState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ea388 (   0x1d0) initializeWithCopy for MPPB_RatchetState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ea558 (   0x308) assignWithCopy for MPPB_RatchetState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ea860 (    0x54) outlined destroy of Data [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ea8b4 (    0x5c) outlined destroy of MPPB_KeyAndIndex [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ea910 (   0x190) initializeWithTake for MPPB_RatchetState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77eaaa0 (   0x2ac) assignWithTake for MPPB_RatchetState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ead4c (    0x14) getEnumTagSinglePayload for MPPB_RatchetState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ead60 (   0x130) (null) [FUNC, FunctionStarts] 
                0x00000001b77eae90 (    0x14) storeEnumTagSinglePayload for MPPB_RatchetState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77eaea4 (   0x130) (null) [FUNC, FunctionStarts] 
                0x00000001b77eafd4 (    0x20) type metadata accessor for MPPB_RatchetState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77eaff4 (    0xd8) type metadata completion function for MPPB_RatchetState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77eb0cc (    0x58) type metadata accessor for MPPB_KeyAndIndex? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77eb124 (   0x120) initializeBufferWithCopyOfBuffer for MPPB_KeyAndIndex [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77eb244 (    0x94) destroy for MPPB_KeyAndIndex [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77eb2d8 (    0xd0) initializeWithCopy for MPPB_KeyAndIndex [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77eb3a8 (   0x114) assignWithCopy for MPPB_KeyAndIndex [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77eb4bc (    0x94) initializeWithTake for MPPB_KeyAndIndex [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77eb550 (    0xe4) assignWithTake for MPPB_KeyAndIndex [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77eb634 (    0x14) getEnumTagSinglePayload for MPPB_KeyAndIndex [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77eb648 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001b77eb64c (    0x14) storeEnumTagSinglePayload for MPPB_KeyAndIndex [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77eb660 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001b77eb664 (     0xc) type metadata completion function for MPPB_KeyAndIndex [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77eb670 (   0x1b8) one-time initialization function for _protobuf_nameMap [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77eb828 (    0xb0) MPPB_SKPaddedStatus.decodeMessage<A>(decoder:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77eb8d8 (    0x9c) MPPB_SKPaddedStatus.traverse<A>(visitor:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77eb974 (    0x3c) protocol witness for Message.init() in conformance MPPB_SKPaddedStatus [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77eb9b0 (    0x1c) protocol witness for static Message.protoMessageName.getter in conformance MPPB_SKPaddedStatus [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77eb9cc (    0x1c) protocol witness for Message.isInitialized.getter in conformance MPPB_SKPaddedStatus [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77eb9e8 (     0x4) protocol witness for Message.unknownFields.getter in conformance MPPB_SKPaddedStatus [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77eb9ec (     0x4) protocol witness for Message.unknownFields.setter in conformance MPPB_SKPaddedStatus [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77eb9f0 (    0x20) protocol witness for Message.unknownFields.modify in conformance MPPB_SKPaddedStatus [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77eba10 (     0x4) protocol witness for Message.unknownFields.modify in conformance MPPB_SKPaddedStatus [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77eba14 (    0x18) protocol witness for Message.decodeMessage<A>(decoder:) in conformance MPPB_SKPaddedStatus [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77eba2c (    0x18) protocol witness for Message.traverse<A>(visitor:) in conformance MPPB_SKPaddedStatus [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77eba44 (    0x7c) protocol witness for Message.isEqualTo(message:) in conformance MPPB_SKPaddedStatus [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ebac0 (    0x24) protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance MPPB_SKPaddedStatus [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ebae4 (    0x6c) protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance MPPB_SKPaddedStatus [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ebb50 (     0x4) protocol witness for Hashable.hashValue.getter in conformance MPPB_SKPaddedStatus [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ebb54 (    0x7c) protocol witness for Hashable.hash(into:) in conformance MPPB_SKPaddedStatus [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ebbd0 (     0x4) protocol witness for Hashable._rawHashValue(seed:) in conformance MPPB_SKPaddedStatus [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ebbd4 (     0x4) protocol witness for static Equatable.== infix(_:_:) in conformance MPPB_SKPaddedStatus [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ebbd8 (   0x1b8) one-time initialization function for _protobuf_nameMap [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ebd90 (    0xd0) MPPB_KeyAndIndex.decodeMessage<A>(decoder:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ebe60 (    0x84) MPPB_KeyAndIndex.traverse<A>(visitor:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ebee4 (    0x84) closure #1 in MPPB_SKPaddedStatus.traverse<A>(visitor:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ebf68 (    0x78) closure #2 in MPPB_KeyAndIndex.traverse<A>(visitor:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ebfe0 (     0x4) static MPPB_KeyAndIndex.== infix(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ebfe4 (    0x48) protocol witness for Message.init() in conformance MPPB_KeyAndIndex [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ec02c (    0x1c) protocol witness for static Message.protoMessageName.getter in conformance MPPB_KeyAndIndex [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ec048 (    0x38) protocol witness for Message.isInitialized.getter in conformance MPPB_KeyAndIndex [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ec080 (     0x4) protocol witness for Message.unknownFields.getter in conformance MPPB_KeyAndIndex [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ec084 (     0x4) protocol witness for Message.unknownFields.setter in conformance MPPB_KeyAndIndex [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ec088 (    0x20) protocol witness for Message.unknownFields.modify in conformance MPPB_KeyAndIndex [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ec0a8 (     0x4) protocol witness for Message.unknownFields.modify in conformance MPPB_KeyAndIndex [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ec0ac (    0x18) protocol witness for Message.decodeMessage<A>(decoder:) in conformance MPPB_KeyAndIndex [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ec0c4 (    0x18) protocol witness for Message.traverse<A>(visitor:) in conformance MPPB_KeyAndIndex [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ec0dc (     0x4) protocol witness for Message.hash(into:) in conformance MPPB_KeyAndIndex [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ec0e0 (    0x7c) protocol witness for Message.isEqualTo(message:) in conformance MPPB_KeyAndIndex [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ec15c (     0x4) protocol witness for _MessageImplementationBase._protobuf_generated_isEqualTo(other:) in conformance MPPB_KeyAndIndex [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ec160 (    0x24) protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance MPPB_KeyAndIndex [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ec184 (    0x6c) protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance MPPB_KeyAndIndex [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ec1f0 (     0x4) protocol witness for Hashable.hashValue.getter in conformance MPPB_KeyAndIndex [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ec1f4 (    0x7c) protocol witness for Hashable.hash(into:) in conformance MPPB_KeyAndIndex [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ec270 (     0x4) protocol witness for Hashable._rawHashValue(seed:) in conformance MPPB_KeyAndIndex [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ec274 (     0x4) protocol witness for static Equatable.== infix(_:_:) in conformance MPPB_KeyAndIndex [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ec278 (   0x1b8) one-time initialization function for _protobuf_nameMap [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ec430 (   0x20c) MPPB_RatchetState.isInitialized.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ec63c (   0x1c4) specialized _arrayForceCast<A, B>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ec800 (   0x11c) MPPB_RatchetState.decodeMessage<A>(decoder:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ec91c (    0xb0) closure #1 in MPPB_RatchetState.decodeMessage<A>(decoder:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ec9cc (   0x104) MPPB_RatchetState.traverse<A>(visitor:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ecad0 (   0x1cc) closure #1 in MPPB_RatchetState.traverse<A>(visitor:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ecc9c (    0x90) protocol witness for Message.init() in conformance MPPB_RatchetState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ecd2c (    0x1c) protocol witness for static Message.protoMessageName.getter in conformance MPPB_RatchetState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ecd48 (     0x4) protocol witness for Message.isInitialized.getter in conformance MPPB_RatchetState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ecd4c (     0x4) protocol witness for Message.unknownFields.getter in conformance MPPB_RatchetState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ecd50 (     0x4) protocol witness for Message.unknownFields.setter in conformance MPPB_RatchetState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ecd54 (    0x24) protocol witness for Message.unknownFields.modify in conformance MPPB_RatchetState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ecd78 (     0x4) protocol witness for Message.unknownFields.modify in conformance MPPB_RatchetState [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ecd7c (    0x18) protocol witness for Message.decodeMessage<A>(decoder:) in conformance MPPB_RatchetState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ecd94 (    0x18) protocol witness for Message.traverse<A>(visitor:) in conformance MPPB_RatchetState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ecdac (    0x7c) protocol witness for Message.isEqualTo(message:) in conformance MPPB_RatchetState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ece28 (    0x24) protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance MPPB_RatchetState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ece4c (    0x6c) protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance MPPB_RatchetState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77eceb8 (    0x7c) protocol witness for Hashable.hash(into:) in conformance MPPB_RatchetState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ecf34 (     0x4) protocol witness for static Equatable.== infix(_:_:) in conformance MPPB_RatchetState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ecf38 (   0x204) one-time initialization function for _protobuf_nameMap [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ed13c (   0x130) MPPB_SKIncomingRatchet.decodeMessage<A>(decoder:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ed26c (   0x140) MPPB_SKIncomingRatchet.traverse<A>(visitor:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ed3ac (    0x8c) closure #2 in MPPB_SKPaddedStatus.traverse<A>(visitor:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ed438 (    0x80) closure #2 in MPPB_SKIncomingRatchet.traverse<A>(visitor:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ed4b8 (    0x50) protocol witness for Message.init() in conformance MPPB_SKIncomingRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ed508 (    0x1c) protocol witness for static Message.protoMessageName.getter in conformance MPPB_SKIncomingRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ed524 (    0x74) protocol witness for Message.isInitialized.getter in conformance MPPB_SKIncomingRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ed598 (     0x4) protocol witness for Message.unknownFields.getter in conformance MPPB_SKIncomingRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ed59c (    0x70) protocol witness for Message.unknownFields.getter in conformance MPPB_RatchetState [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ed60c (     0x4) protocol witness for Message.unknownFields.setter in conformance MPPB_SKIncomingRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ed610 (    0x70) protocol witness for Message.unknownFields.setter in conformance MPPB_RatchetState [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ed680 (    0x24) protocol witness for Message.unknownFields.modify in conformance MPPB_SKIncomingRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ed6a4 (     0x4) protocol witness for Message.unknownFields.modify in conformance MPPB_SKIncomingRatchet [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ed6a8 (    0x18) protocol witness for Message.decodeMessage<A>(decoder:) in conformance MPPB_SKIncomingRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ed6c0 (    0x18) protocol witness for Message.traverse<A>(visitor:) in conformance MPPB_SKIncomingRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ed6d8 (    0x7c) protocol witness for Message.isEqualTo(message:) in conformance MPPB_SKIncomingRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ed754 (    0x24) protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance MPPB_SKIncomingRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ed778 (    0x6c) protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance MPPB_SKIncomingRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ed7e4 (    0x7c) protocol witness for Hashable.hash(into:) in conformance MPPB_SKIncomingRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ed860 (     0x4) protocol witness for static Equatable.== infix(_:_:) in conformance MPPB_SKIncomingRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ed864 (   0x240) one-time initialization function for _protobuf_nameMap [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77edaa4 (   0x364) MPPB_SKOutgoingRatchet.isInitialized.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ede08 (   0x114) MPPB_SKOutgoingRatchet.decodeMessage<A>(decoder:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77edf1c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b77edf2c (    0xb0) closure #3 in MPPB_SKOutgoingRatchet.decodeMessage<A>(decoder:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77edfdc (    0xb0) closure #4 in MPPB_SKOutgoingRatchet.decodeMessage<A>(decoder:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ee08c (    0xcc) MPPB_SKOutgoingRatchet.traverse<A>(visitor:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ee158 (   0x1cc) closure #3 in MPPB_SKOutgoingRatchet.traverse<A>(visitor:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ee324 (   0x1cc) closure #4 in MPPB_SKOutgoingRatchet.traverse<A>(visitor:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ee4f0 (    0xd0) protocol witness for Message.init() in conformance MPPB_SKOutgoingRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ee5c0 (    0x1c) protocol witness for static Message.protoMessageName.getter in conformance MPPB_SKOutgoingRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ee5dc (     0x4) protocol witness for Message.isInitialized.getter in conformance MPPB_SKOutgoingRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ee5e0 (    0x68) protocol witness for Message.unknownFields.getter in conformance MPPB_SKPaddedStatus [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ee648 (    0x68) protocol witness for Message.unknownFields.setter in conformance MPPB_SKPaddedStatus [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ee6b0 (    0x20) protocol witness for Message.unknownFields.modify in conformance MPPB_SKOutgoingRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ee6d0 (     0x4) protocol witness for Message.unknownFields.modify in conformance MPPB_SKOutgoingRatchet [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ee6d4 (    0x18) protocol witness for Message.decodeMessage<A>(decoder:) in conformance MPPB_SKOutgoingRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ee6ec (    0x18) protocol witness for Message.traverse<A>(visitor:) in conformance MPPB_SKOutgoingRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ee704 (    0x7c) protocol witness for Message.isEqualTo(message:) in conformance MPPB_SKOutgoingRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ee780 (    0x24) protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance MPPB_SKOutgoingRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ee7a4 (    0x9c) protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance MPPB_SKPaddedStatus [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ee840 (    0x6c) protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance MPPB_SKOutgoingRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ee8ac (    0x58) protocol witness for Hashable.hashValue.getter in conformance MPPB_SKPaddedStatus [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ee904 (    0x7c) protocol witness for Hashable.hash(into:) in conformance MPPB_SKOutgoingRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ee980 (    0x54) protocol witness for Hashable._rawHashValue(seed:) in conformance MPPB_SKPaddedStatus [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ee9d4 (     0x4) protocol witness for static Equatable.== infix(_:_:) in conformance MPPB_SKOutgoingRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ee9d8 (    0x48) base witness table accessor for Equatable in MPPB_SKOutgoingRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77eea20 (    0x20) type metadata accessor for MPPB_SKOutgoingRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77eea40 (    0x48) base witness table accessor for Message in MPPB_SKOutgoingRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77eea88 (    0x48) lazy protocol witness table accessor for type MPPB_SKOutgoingRatchet and conformance MPPB_SKOutgoingRatchet [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77eead0 (    0x48) base witness table accessor for Hashable in MPPB_SKOutgoingRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77eeb18 (    0x48) base witness table accessor for CustomDebugStringConvertible in MPPB_SKOutgoingRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77eeb60 (    0x48) base witness table accessor for Equatable in MPPB_SKIncomingRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77eeba8 (    0x20) type metadata accessor for MPPB_SKIncomingRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77eebc8 (    0x48) base witness table accessor for Message in MPPB_SKIncomingRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77eec10 (    0x48) base witness table accessor for Hashable in MPPB_SKIncomingRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77eec58 (    0x48) base witness table accessor for CustomDebugStringConvertible in MPPB_SKIncomingRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77eeca0 (    0x48) base witness table accessor for Equatable in MPPB_RatchetState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77eece8 (    0x48) base witness table accessor for Message in MPPB_RatchetState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77eed30 (    0x48) base witness table accessor for Hashable in MPPB_RatchetState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77eed78 (    0x48) base witness table accessor for Equatable in MPPB_KeyAndIndex [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77eedc0 (    0x48) base witness table accessor for Message in MPPB_KeyAndIndex [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77eee08 (    0x48) base witness table accessor for Hashable in MPPB_KeyAndIndex [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77eee50 (    0x48) base witness table accessor for CustomDebugStringConvertible in MPPB_KeyAndIndex [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77eee98 (    0x48) base witness table accessor for Equatable in MPPB_SKPaddedStatus [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77eeee0 (    0x20) type metadata accessor for MPPB_SKPaddedStatus [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77eef00 (    0x38) type metadata accessor for MPPB_KeyAndIndex [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77eef38 (    0x48) base witness table accessor for Message in MPPB_SKPaddedStatus [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77eef80 (    0x48) base witness table accessor for Hashable in MPPB_SKPaddedStatus [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77eefc8 (    0x48) base witness table accessor for CustomDebugStringConvertible in MPPB_SKPaddedStatus [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ef010 (    0x48) base witness table accessor for CustomDebugStringConvertible in MPPB_RatchetState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ef058 (    0x64) outlined init with take of MPPB_KeyAndIndex [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ef0bc (   0x204) closure #1 in static Data.== infix(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ef2c0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b77ef2d0 (    0x20) specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ef2f0 (    0x64) outlined init with copy of MPPB_KeyAndIndex [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ef354 (    0x64) __swift_allocate_boxed_opaque_existential_1 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ef3b8 (    0x18) outlined init with take of Message [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ef3d0 (    0x20) specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ef3f0 (   0x13c) specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ef52c (     0x4) _swift_stdlib_malloc_size [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ef530 (    0x38) __swift_project_value_buffer [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ef568 (    0x64) __swift_allocate_value_buffer [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ef5cc (   0x1d4) specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ef7a0 (    0xd8) specialized Data.InlineData.withUnsafeBytes<A>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ef878 (    0xb8) specialized __DataStorage.withUnsafeBytes<A>(in:apply:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ef930 (   0x1e4) specialized static Data.== infix(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77efb14 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b77efb24 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b77efb34 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b77efb44 (   0x7fc) specialized static MPPB_SKOutgoingRatchet.== infix(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f0340 (   0x308) specialized static MPPB_SKIncomingRatchet.== infix(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f0648 (   0x320) specialized static MPPB_SKPaddedStatus.== infix(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f0968 (   0x62c) specialized static Array<A>.== infix(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f0f94 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b77f0fa4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b77f0fb4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b77f0fc4 (   0x498) specialized static MPPB_RatchetState.== infix(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f145c (   0x29c) specialized static MPPB_KeyAndIndex.== infix(_:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f16f8 (    0x5c) outlined destroy of MPPB_KeyAndIndex? [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f1754 (   0x140) initializeBufferWithCopyOfBuffer for MPPB_SKPaddedStatus [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f1894 (    0xb4) destroy for MPPB_SKPaddedStatus [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f1948 (    0xf0) initializeWithCopy for MPPB_SKPaddedStatus [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f1a38 (   0x178) assignWithCopy for MPPB_SKPaddedStatus [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f1bb0 (    0x84) initializeWithTake for MPPB_SKPaddedStatus [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f1c34 (   0x118) assignWithTake for MPPB_SKPaddedStatus [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f1d4c (    0x14) getEnumTagSinglePayload for MPPB_SKPaddedStatus [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f1d60 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001b77f1d64 (    0xcc) __swift_get_extra_inhabitant_index.2Tm [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f1e30 (    0x14) storeEnumTagSinglePayload for MPPB_SKPaddedStatus [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f1e44 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001b77f1e48 (    0xcc) __swift_store_extra_inhabitant_index.3Tm [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f1f14 (     0xc) type metadata completion function for MPPB_SKPaddedStatus [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f1f20 (    0x9c) type metadata completion function for MPPB_KeyAndIndex [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f1fbc (   0x170) initializeBufferWithCopyOfBuffer for MPPB_SKIncomingRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f212c (    0xd0) destroy for MPPB_SKIncomingRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f21fc (   0x120) initializeWithCopy for MPPB_SKIncomingRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f231c (   0x19c) assignWithCopy for MPPB_SKIncomingRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f24b8 (    0xa0) initializeWithTake for MPPB_SKIncomingRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f2558 (   0x134) assignWithTake for MPPB_SKIncomingRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f268c (    0x14) getEnumTagSinglePayload for MPPB_SKIncomingRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f26a0 (    0xb0) (null) [FUNC, FunctionStarts] 
                0x00000001b77f2750 (    0x14) storeEnumTagSinglePayload for MPPB_SKIncomingRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f2764 (    0xa8) (null) [FUNC, FunctionStarts] 
                0x00000001b77f280c (    0xa8) type metadata completion function for MPPB_SKIncomingRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f28b4 (   0x3a0) initializeBufferWithCopyOfBuffer for MPPB_SKOutgoingRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f2c54 (   0x1c0) destroy for MPPB_SKOutgoingRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f2e14 (   0x350) initializeWithCopy for MPPB_SKOutgoingRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f3164 (   0x5f4) assignWithCopy for MPPB_SKOutgoingRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f3758 (   0x278) initializeWithTake for MPPB_SKOutgoingRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f39d0 (   0x4c0) assignWithTake for MPPB_SKOutgoingRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f3e90 (    0x14) getEnumTagSinglePayload for MPPB_SKOutgoingRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f3ea4 (   0x138) (null) [FUNC, FunctionStarts] 
                0x00000001b77f3fdc (    0x14) storeEnumTagSinglePayload for MPPB_SKOutgoingRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f3ff0 (   0x13c) (null) [FUNC, FunctionStarts] 
                0x00000001b77f412c (    0xd4) type metadata completion function for MPPB_SKOutgoingRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f4200 (     0x4) protocol witness for _MessageImplementationBase._protobuf_generated_isEqualTo(other:) in conformance MPPB_SKPaddedStatus [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f4204 (     0x4) protocol witness for _MessageImplementationBase._protobuf_generated_isEqualTo(other:) in conformance MPPB_RatchetState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f4208 (     0x4) protocol witness for _MessageImplementationBase._protobuf_generated_isEqualTo(other:) in conformance MPPB_SKIncomingRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f420c (     0x4) protocol witness for _MessageImplementationBase._protobuf_generated_isEqualTo(other:) in conformance MPPB_SKOutgoingRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f4210 (     0x4) protocol witness for Hashable.hashValue.getter in conformance MPPB_RatchetState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f4214 (     0x4) protocol witness for Hashable.hashValue.getter in conformance MPPB_SKIncomingRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f4218 (     0x4) protocol witness for Hashable.hashValue.getter in conformance MPPB_SKOutgoingRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f421c (     0x4) protocol witness for Message.hash(into:) in conformance MPPB_SKPaddedStatus [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f4220 (     0x4) protocol witness for Message.hash(into:) in conformance MPPB_RatchetState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f4224 (     0x4) protocol witness for Hashable._rawHashValue(seed:) in conformance MPPB_RatchetState [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f4228 (     0x4) protocol witness for Message.hash(into:) in conformance MPPB_SKIncomingRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f422c (     0x4) protocol witness for Hashable._rawHashValue(seed:) in conformance MPPB_SKIncomingRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f4230 (     0x4) protocol witness for Message.unknownFields.getter in conformance MPPB_SKOutgoingRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f4234 (     0x4) protocol witness for Message.unknownFields.setter in conformance MPPB_SKOutgoingRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f4238 (     0x4) protocol witness for Message.hash(into:) in conformance MPPB_SKOutgoingRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f423c (     0x4) protocol witness for Hashable._rawHashValue(seed:) in conformance MPPB_SKOutgoingRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f4240 (    0x14) protocol witness for static Equatable.== infix(_:_:) in conformance KeyWrappingErrors [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f4254 (    0x48) protocol witness for Hashable.hashValue.getter in conformance KeyWrappingErrors [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f429c (    0x2c) protocol witness for Hashable.hash(into:) in conformance KeyWrappingErrors [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f42c8 (    0x44) protocol witness for Hashable._rawHashValue(seed:) in conformance KeyWrappingErrors [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f430c (     0x4) protocol witness for Error._domain.getter in conformance KeyWrappingErrors [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f4310 (     0x4) protocol witness for Error._code.getter in conformance KeyWrappingErrors [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f4314 (     0x4) protocol witness for Error._userInfo.getter in conformance KeyWrappingErrors [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f4318 (     0x4) protocol witness for Error._getEmbeddedNSError() in conformance KeyWrappingErrors [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f431c (   0x24c) one-time initialization function for ciphersuite [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f4568 (   0x16c) specialized Collection.prefix(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f46d4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b77f46e4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b77f46f4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b77f4704 (    0xfc) @objc static GFTKeyWrapper.unwrapWrappedSeed(_:legacy:using:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f4800 (    0x18) @objc static GFTKeyWrapper.encrypt(_:to:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f4818 (    0x18) @objc static GFTKeyWrapper.decrypt(_:using:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f4830 (    0xfc) @objc static GFTKeyWrapper.encrypt(_:to:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f492c (    0xfc) @objc static GFTKeyWrapper.wrapSeed(_:to:legacy:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f4a28 (    0x40) @objc GFTKeyWrapper.init() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f4a68 (    0x34) GFTKeyWrapper.__deallocating_deinit [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f4a9c (     0x4) @objc GFTKeyWrapper.__ivar_destroyer [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f4aa0 (    0x24) type metadata accessor for GFTKeyWrapper [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f4ac4 (    0xac) closure #1 in static GFTLegacyWrappingAlgorithm.wrap(sharedSecret:seed:privateKey:publicKey:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f4b70 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b77f4b80 (    0xdc) closure #1 in closure #1 in static GFTLegacyWrappingAlgorithm.wrap(sharedSecret:seed:privateKey:publicKey:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f4c5c (   0x240) closure #1 in static GFTLegacyWrappingAlgorithm.unwrap(wrappedSeed:using:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f4e9c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b77f4eac (    0xb8) closure #1 in closure #1 in static GFTLegacyWrappingAlgorithm.unwrap(wrappedSeed:using:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f4f64 (    0x7c) closure #1 in static GondolaWrappingAlgorithm.unwrap(wrappedSeed:using:privateKey:publicKey:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f4fe0 (    0xd4) specialized Data.InlineData.withUnsafeBytes<A>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f50b4 (    0xc4) specialized __DataStorage.withUnsafeBytes<A>(in:apply:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f5178 (   0x1d4) specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f534c (    0xec) specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f5438 (    0xcc) specialized RandomAccessCollection<>.distance(from:to:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f5504 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b77f5514 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b77f5524 (    0x6c) specialized RandomAccessCollection<>.index(_:offsetBy:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f5590 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b77f55a0 (   0x394) specialized static GFTLegacyWrappingAlgorithm.unwrap(wrappedSeed:using:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f5934 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b77f5944 (   0x81c) specialized static GondolaWrappingAlgorithm.unwrap(wrappedSeed:using:privateKey:publicKey:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f6160 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b77f6170 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b77f6180 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b77f6190 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b77f61a0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b77f61b0 (   0xb48) specialized static GFTKeyWrapper.unwrapWrappedSeed(_:legacy:using:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f6cf8 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b77f6d08 (   0x6c4) specialized static GFTKeyWrapper.encrypt(_:to:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f73cc (   0x7c4) specialized static GFTKeyWrapper.decrypt(_:using:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f7b90 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b77f7ba0 (    0x98) specialized Data.init(capacity:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f7c38 (   0x32c) specialized static GondolaWrappingAlgorithm.wrap(sharedSecret:seed:privateKey:publicKey:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f7f64 (   0xe7c) specialized static GFTKeyWrapper.wrapSeed(_:to:legacy:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f8de0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b77f8df0 (    0x54) lazy protocol witness table accessor for type KeyWrappingErrors and conformance KeyWrappingErrors [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f8e44 (    0x44) __swift_project_boxed_opaque_existential_1 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f8e88 (    0x54) lazy protocol witness table accessor for type Data and conformance Data [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f8edc (    0x20) partial apply for closure #1 in static GFTLegacyWrappingAlgorithm.wrap(sharedSecret:seed:privateKey:publicKey:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f8efc (     0x4) _swift_stdlib_malloc_size [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f8f00 (    0x5c) lazy protocol witness table accessor for type [UInt8] and conformance <A> [A] [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f8f5c (    0x48) __swift_instantiateConcreteTypeFromMangledNameAbstract [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f8fa4 (    0x48) lazy protocol witness table accessor for type SHA256 and conformance SHA256 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f8fec (    0x54) lazy protocol witness table accessor for type String and conformance String [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f9040 (    0x3c) type metadata accessor for NSData [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f907c (    0x1c) partial apply for closure #1 in static GFTLegacyWrappingAlgorithm.unwrap(wrappedSeed:using:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f9098 (    0x5c) outlined destroy of P256.KeyAgreement.PublicKey? [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f90f4 (    0x1c) partial apply for closure #1 in static GondolaWrappingAlgorithm.unwrap(wrappedSeed:using:privateKey:publicKey:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f9110 (     0xc) __swift_memcpy1_1 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f911c (    0x90) getEnumTagSinglePayload for KeyWrappingErrors [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f91ac (    0xcc) storeEnumTagSinglePayload for KeyWrappingErrors [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f9278 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001b77f928c (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001b77f92a0 (     0x8) getEnumTag for KeyWrappingErrors [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f92a8 (     0x4) destructiveProjectEnumData for KeyWrappingErrors [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f92ac (     0x8) destructiveInjectEnumTag for KeyWrappingErrors [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f92b4 (    0x10) type metadata accessor for KeyWrappingErrors [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f92c4 (     0x4) base witness table accessor for Equatable in KeyWrappingErrors [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f92c8 (    0x54) lazy protocol witness table accessor for type KeyWrappingErrors and conformance KeyWrappingErrors [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f931c (   0x130) AES.IV.init(IV:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f944c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b77f945c (    0x58) lazy protocol witness table accessor for type CryptoKitError and conformance CryptoKitError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f94b4 (    0x58) AES.IV.data() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f950c (    0x18) static AES.CTR.decrypt(key:ciphertext:IV:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f9524 (    0x18) static AES.CTR.encrypt(key:message:IV:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f953c (   0x320) specialized Data._Representation.withUnsafeMutableBytes<A>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f985c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b77f986c (    0xd8) specialized Data.InlineData.withUnsafeBytes<A>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f9944 (    0xb4) specialized __DataStorage.withUnsafeMutableBytes<A>(in:apply:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f99f8 (    0x7c) _StringGuts._slowEnsureMatchingEncoding(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f9a74 (    0x8c) specialized closure #1 in closure #3 in Data.init<A>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f9b00 (   0x260) specialized Data.init<A>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f9d60 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b77f9d70 (    0x4c) initializeBufferWithCopyOfBuffer for AES.IV [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f9dbc (     0xc) destroy for AES.IV [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f9dc8 (    0x4c) initializeWithCopy for AES.IV [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f9e14 (    0x54) assignWithCopy for AES.IV [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f9e68 (    0x14) __swift_memcpy24_8 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f9e7c (    0x44) assignWithTake for AES.IV [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f9ec0 (    0x54) getEnumTagSinglePayload for AES.IV [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f9f14 (    0x50) storeEnumTagSinglePayload for AES.IV [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f9f64 (    0x10) type metadata accessor for AES.IV [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f9f74 (    0x10) type metadata accessor for AES.CTR [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77f9f84 (    0xa0) specialized Data._Representation.init(count:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77fa024 (   0x50c) specialized Data.init<A>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77fa530 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b77fa540 (    0x60) outlined destroy of ContiguousBytes? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77fa5a0 (    0x68) partial apply for specialized closure #3 in Data.init<A>(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77fa608 (    0x14) outlined consume of Data._Representation? [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77fa61c (    0x18) outlined init with take of ContiguousBytes [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77fa634 (    0x1c) partial apply for specialized closure #1 in closure #3 in Data.init<A>(_:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77fa650 (    0x6c) specialized UnsafeMutableRawBufferPointer.withMemoryRebound<A, B>(to:_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77fa6bc (    0x18) static AES.CTR.encrypt(key:message:IV:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77fa6d4 (    0x90) getEnumTagSinglePayload for SymmetricRatchetErrors [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77fa764 (    0xcc) storeEnumTagSinglePayload for SymmetricRatchetErrors [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77fa830 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001b77fa844 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001b77fa858 (     0x8) getEnumTag for SymmetricRatchetErrors [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77fa860 (     0x4) destructiveProjectEnumData for SymmetricRatchetErrors [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77fa864 (     0x8) destructiveInjectEnumTag for SymmetricRatchetErrors [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77fa86c (    0x10) type metadata accessor for SymmetricRatchetErrors [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77fa87c (     0x4) base witness table accessor for Equatable in SymmetricRatchetErrors [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77fa880 (    0x54) lazy protocol witness table accessor for type SymmetricRatchetErrors and conformance SymmetricRatchetErrors [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77fa8d4 (    0x14) protocol witness for static Equatable.== infix(_:_:) in conformance SymmetricRatchetErrors [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77fa8e8 (    0x48) protocol witness for Hashable.hashValue.getter in conformance SymmetricRatchetErrors [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77fa930 (    0x2c) protocol witness for Hashable.hash(into:) in conformance SymmetricRatchetErrors [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77fa95c (    0x44) protocol witness for Hashable._rawHashValue(seed:) in conformance SymmetricRatchetErrors [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77fa9a0 (     0x4) protocol witness for Error._domain.getter in conformance SymmetricRatchetErrors [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77fa9a4 (     0x4) protocol witness for Error._code.getter in conformance SymmetricRatchetErrors [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77fa9a8 (     0x4) protocol witness for Error._userInfo.getter in conformance SymmetricRatchetErrors [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77fa9ac (     0x4) protocol witness for Error._getEmbeddedNSError() in conformance SymmetricRatchetErrors [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77fa9b0 (   0x250) specialized Dictionary.subscript.setter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77fac00 (   0x134) specialized Data.append<A>(contentsOf:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77fad34 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b77fad44 (    0x14) protocol witness for static Equatable.== infix(_:_:) in conformance StatusKitErrors [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77fad58 (    0x48) protocol witness for Hashable.hashValue.getter in conformance StatusKitErrors [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77fada0 (    0x2c) protocol witness for Hashable.hash(into:) in conformance StatusKitErrors [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77fadcc (    0x44) protocol witness for Hashable._rawHashValue(seed:) in conformance StatusKitErrors [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77fae10 (     0x4) protocol witness for Error._domain.getter in conformance StatusKitErrors [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77fae14 (     0x4) protocol witness for Error._code.getter in conformance StatusKitErrors [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77fae18 (     0x4) protocol witness for Error._userInfo.getter in conformance StatusKitErrors [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77fae1c (     0x4) protocol witness for Error._getEmbeddedNSError() in conformance StatusKitErrors [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77fae20 (    0x3c) one-time initialization function for statusKeyRatchetPrefix [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77fae5c (   0x180) one-time initialization function for statusKitRatchetStep [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77fafdc (    0x40) @objc SKRatchet.init() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77fb01c (    0x18) SKRatchet.__deallocating_deinit [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77fb034 (    0x24) type metadata accessor for SKRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77fb058 (   0xc8c) SKOutgoingRatchet.init(data:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77fbce4 (    0x18) @objc SKOutgoingRatchet.init(data:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77fbcfc (   0x5cc) SKOutgoingRatchet.init() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77fc2c8 (    0x24) @objc SKOutgoingRatchet.init() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77fc2ec (    0x34) static SKOutgoingRatchet.generate() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77fc320 (    0x38) @objc static SKOutgoingRatchet.generate() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77fc358 (   0x4a0) SKOutgoingRatchet.ratchetForward() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77fc7f8 (    0x3c) @objc SKOutgoingRatchet.ratchetForward() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77fc834 (   0x950) SKOutgoingRatchet.sealMessage(_:authenticating:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77fd184 (   0x134) @objc SKOutgoingRatchet.sealMessage(_:authenticating:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77fd2b8 (   0x34c) SKOutgoingRatchet.currentSubscriptionKeys() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77fd604 (    0x4c) @objc SKOutgoingRatchet.currentSubscriptionKeys() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77fd650 (   0x7a0) SKOutgoingRatchet.serializedData() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77fddf0 (    0x18) @objc SKOutgoingRatchet.serializedData() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77fde08 (   0x3f8) SKOutgoingRatchet.signingKeyIdentifier() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77fe200 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b77fe210 (    0x18) @objc SKOutgoingRatchet.signingKeyIdentifier() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77fe228 (    0x1c) SKOutgoingRatchet.__deallocating_deinit [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77fe244 (    0x38) SKRatchet.__deallocating_deinit [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77fe27c (    0xb8) @objc SKOutgoingRatchet.__ivar_destroyer [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77fe334 (     0x8) ObjC metadata update function for SKOutgoingRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77fe33c (    0x20) type metadata accessor for SKOutgoingRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77fe35c (   0x150) type metadata completion function for SKOutgoingRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77fe4ac (     0x8) @objc static SKIncomingRatchet.maxForwardRatchetDelta.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77fe4b4 (   0xbf0) SKIncomingRatchet.init(data:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ff0a4 (    0x18) @objc SKIncomingRatchet.init(data:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ff0bc (    0xbc) @objc SKOutgoingRatchet.init(data:) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ff178 (   0x51c) SKIncomingRatchet.init(key:index:signingKey:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ff694 (    0xf0) @objc SKIncomingRatchet.init(key:index:signingKey:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b77ff784 (   0xfd8) SKIncomingRatchet.openStatus(index:encryptedMessage:authenticating:signature:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b780075c (   0x160) specialized AES.GCM.SealedBox.init<A>(combined:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b78008bc (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b78008cc (   0x1b8) @objc SKIncomingRatchet.openStatus(index:encryptedMessage:authenticating:signature:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7800a84 (   0x784) SKIncomingRatchet.serializedData() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7801208 (    0x18) @objc SKIncomingRatchet.serializedData() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7801220 (   0x368) SKIncomingRatchet.signingKeyIdentifier() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7801588 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001b7801598 (    0x18) @objc SKIncomingRatchet.signingKeyIdentifier() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b78015b0 (    0x7c) @objc SKOutgoingRatchet.serializedData() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b780162c (    0x30) @objc SKIncomingRatchet.init() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b780165c (    0xa0) SKIncomingRatchet.__ivar_destroyer [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b78016fc (    0x1c) SKIncomingRatchet.__deallocating_deinit [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7801718 (    0xa4) @objc SKIncomingRatchet.__ivar_destroyer [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b78017bc (     0x8) ObjC metadata update function for SKIncomingRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b78017c4 (    0x20) type metadata accessor for SKIncomingRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b78017e4 (    0x38) type metadata accessor for SKOutgoingRatchet [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b780181c (    0xd8) type metadata completion function for SKIncomingRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b78018f4 (    0x78) closure #1 in Data.init<A>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b780196c (    0xd8) specialized Data.InlineData.withUnsafeBytes<A>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7801a44 (   0x12c) specialized Data.InlineData.withUnsafeBytes<A>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7801b70 (    0x94) specialized __DataStorage.withUnsafeBytes<A>(in:apply:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7801c04 (    0xe0) specialized __DataStorage.withUnsafeBytes<A>(in:apply:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7801ce4 (    0xb4) specialized __RawDictionaryStorage.find<A>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7801d98 (    0x44) specialized __RawDictionaryStorage.find<A>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7801ddc (    0x48) specialized __RawDictionaryStorage.find<A>(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7801e24 (   0x174) specialized __RawDictionaryStorage.find<A>(_:hashValue:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7801f98 (    0x9c) specialized __RawDictionaryStorage.find<A>(_:hashValue:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7802034 (    0xa0) specialized __RawDictionaryStorage.find<A>(_:hashValue:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b78020d4 (   0x1d8) specialized _NativeDictionary._delete(at:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b78022ac (   0x1dc) specialized _NativeDictionary._delete(at:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7802488 (   0x168) specialized _NativeDictionary.setValue(_:forKey:isUnique:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b78025f0 (    0xb0) specialized _NativeDictionary._insert(at:key:value:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b78026a0 (   0x29c) specialized _NativeDictionary.copy() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b780293c (   0x29c) specialized _NativeDictionary.copy() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7802bd8 (   0x3b8) specialized _NativeDictionary._copyOrMoveAndResize(capacity:moveElements:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7802f90 (   0x3bc) specialized _NativeDictionary._copyOrMoveAndResize(capacity:moveElements:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b780334c (    0x88) specialized Dictionary.startIndex.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b78033d4 (    0xc0) specialized Dictionary.subscript.getter [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7803494 (    0xc8) specialized Data.InlineData.init(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b780355c (    0x7c) specialized Data.LargeSlice.init(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b78035d8 (    0x84) specialized Data.InlineSlice.init(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b780365c (    0x6c) specialized Data._Representation.init(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b78036c8 (    0x68) outlined init with take of (key: UInt16, value: SymmetricKey) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7803730 (    0x64) outlined init with copy of SymmetricRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7803794 (    0x40) (null) [FUNC, FunctionStarts] 
                0x00000001b78037d4 (    0x5c) outlined destroy of (key: UInt16, value: SymmetricKey) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7803830 (    0x68) outlined init with take of MPPB_KeyAndIndex [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7803898 (    0x60) outlined destroy of SymmetricRatchet [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b78038f8 (    0x48) lazy protocol witness table accessor for type SHA256 and conformance SHA256 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7803940 (    0x90) getEnumTagSinglePayload for StatusKitErrors [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b78039d0 (    0xcc) storeEnumTagSinglePayload for StatusKitErrors [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7803a9c (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001b7803ab0 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001b7803ac4 (     0x8) getEnumTag for StatusKitErrors [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7803acc (     0x4) destructiveProjectEnumData for StatusKitErrors [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7803ad0 (     0x8) destructiveInjectEnumTag for StatusKitErrors [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7803ad8 (    0x10) type metadata accessor for StatusKitErrors [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7803ae8 (     0x4) base witness table accessor for Equatable in StatusKitErrors [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7803aec (    0x54) lazy protocol witness table accessor for type StatusKitErrors and conformance StatusKitErrors [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7803b40 (     0x8) type metadata instantiation function for HKDFRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7803b48 (    0x34) initializeBufferWithCopyOfBuffer for HKDFRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7803b7c (    0x40) destroy for HKDFRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7803bbc (    0x68) initializeWithCopy for HKDFRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7803c24 (    0x78) assignWithCopy for HKDFRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7803c9c (    0x14) __swift_memcpy41_8 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7803cb0 (    0x5c) assignWithTake for HKDFRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7803d0c (    0x54) getEnumTagSinglePayload for HKDFRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7803d60 (    0x5c) storeEnumTagSinglePayload for HKDFRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7803dbc (    0x18) type metadata accessor for HKDFRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7803dd4 (   0x490) protocol witness for SymmetricRatchetStep.ratchet(_:) in conformance HKDFRatchet<A> [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7804264 (    0x60) outlined destroy of (key: SymmetricKey, index: UInt64) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b78042c4 (    0x58) lazy protocol witness table accessor for type SymmetricKey and conformance SymmetricKey [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b780431c (    0x30) __swift_instantiateGenericMetadata [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b780434c (   0x1e8) SymmetricRatchet.init(ck:index:step:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7804534 (     0xc) SymmetricRatchet.maxForwardRatchetDelta.unsafeMutableAddressor [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7804540 (   0x1f4) SymmetricRatchet.messageKey(forIndex:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7804734 (     0x8) static SymmetricRatchet.maxForwardRatchetDelta.getter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b780473c (   0x148) initializeBufferWithCopyOfBuffer for SymmetricRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7804884 (    0x80) destroy for SymmetricRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7804904 (    0xf8) initializeWithCopy for SymmetricRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b78049fc (    0xb4) assignWithCopy for SymmetricRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7804ab0 (   0x230) __swift_assign_boxed_opaque_existential_1 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7804ce0 (    0xac) initializeWithTake for SymmetricRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7804d8c (    0xc0) assignWithTake for SymmetricRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7804e4c (    0x14) getEnumTagSinglePayload for SymmetricRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7804e60 (    0xc4) (null) [FUNC, FunctionStarts] 
                0x00000001b7804f24 (    0x14) storeEnumTagSinglePayload for SymmetricRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7804f38 (    0xc0) (null) [FUNC, FunctionStarts] 
                0x00000001b7804ff8 (    0x4c) type metadata accessor for SymmetricRatchet [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7805044 (    0xc8) type metadata completion function for SymmetricRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b780510c (   0x914) SymmetricRatchet.deriveMessageKeysUntil(_:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7805a20 (   0x178) specialized Dictionary.removeValue(forKey:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7805b98 (    0x68) outlined init with copy of (key: SymmetricKey, index: UInt64) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7805c00 (    0x5c) outlined destroy of SymmetricKey? [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7805c5c (    0x68) outlined init with take of (key: SymmetricKey, index: UInt64) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7805cc4 (    0x64) outlined init with take of SymmetricRatchet [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7805d28 (     0x4) static HKDF.deriveKeyWith(_:salt:outputSize:) [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7805d2c (    0x88) @objc static HKDF.deriveKeyWith(_:salt:outputSize:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7805db4 (    0x34) HKDF.__allocating_init() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7805de8 (    0x34) HKDF.init() [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7805e1c (    0x40) @objc HKDF.init() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7805e5c (    0x34) HKDF.__deallocating_deinit [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7805e90 (   0x20c) specialized static HKDF.deriveKeyWith(_:salt:outputSize:) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b780609c (    0x24) type metadata accessor for HKDF [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b78060c0 (    0x48) lazy protocol witness table accessor for type SHA256 and conformance SHA256 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7806108 (    0x5c) MPLogAndAssignCFError.cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7806164 (    0x5c) MPLogAndAssignCFError.cold.2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b78061c0 (    0x5c) MPLogAndAssignError.cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b780621c (    0x5c) MPLogAndAssignError.cold.2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7806278 (    0x78) -[FullKey initWithKey:error:].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b78062f0 (    0x88) -[FullKey initWithProtobufferData:error:].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7806378 (    0x44) -[FullKey initWithProtobufferData:error:].cold.2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b78063bc (    0x74) -[NGMFullDeviceIdentity(MigrationToModernizedKeyStorage) deleteKeyWithTag:].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7806430 (    0x44) -[NGMFullDeviceIdentity(MigrationToModernizedKeyStorage) postMigrationKeychainCleanup].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7806474 (    0x2c) +[NGMFullPrekey fullPrekeyForTestingSignedBy:].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b78064a0 (    0xa4) -[NGMFullPrekey initWithPrekeySignedBy:error:].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7806544 (    0xe8) -[NGMFullPrekey delete].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b780662c (    0x7c) -[SecKeyRSAPublic initWithData:error:].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b78066a8 (    0x7c) -[SecKeyRSAPublic encryptData:error:].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7806724 (    0x44) -[NGMKeyRollingTicket initTicketWithSigningKey:error:].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7806768 (    0x44) -[NGMPublicDeviceIdentity identityData].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b78067ac (    0xa0) -[NGMPublicDeviceIdentity prekeyData].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b780684c (    0x44) -[NGMPublicDeviceIdentity prekeyData].cold.2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7806890 (    0x44) -[NGMPublicDeviceIdentity sealMessage:guid:sendingURI:sendingPushToken:receivingURI:receivingPushToken:forceSizeOptimizations:resetState:encryptedAttributes:signedByFullIdentity:errors:].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b78068d4 (    0xa4) +[NGMMessageFormatter formatOutgoingInnerMessageWithPayload:attributes:destinationIdentity:sendingIdentity:error:].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7806978 (    0x74) +[CoreCryptoP256Private generate].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b78069ec (    0x38) -[CoreCryptoP256Private keychainData].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7806a24 (    0x38) -[CoreCryptoP256Private signData:error:].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7806a5c (    0x38) -[CoreCryptoP256Private initWithData:error:].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7806a94 (    0x74) -[SecMessageLegacyFullIdentity(Migration) deleteItemWithPersistentRef:].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7806b08 (    0x88) nextMultiple.cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7806b90 (    0x9c) -[LegacySigningKeyPublic initWithData:error:].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7806c2c (    0xa0) SecMPPublicIdentityCreateFromBytes.cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7806ccc (    0x44) SecMPPIAppendPKIEncryptedData.cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7806d10 (    0x80) SecMPFullIdentityCreateFromData.cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7806d90 (    0x80) SecMPFIAppendSignature.cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7806e10 (    0x2c) SecMPFullIdentityCreateFromRefs.cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7806e3c (    0x2c) SecMPFullIdentityCreateFromRefs.cold.2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7806e68 (    0x2c) SecMPFullIdentityCreateFromRefs.cold.3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7806e94 (    0xa4) +[NGMFullDeviceIdentity identityWithAccess:error:].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7806f38 (    0x44) -[NGMFullDeviceIdentity unsealMessageAndAttributes:signedByPublicIdentity:decryptionBlock:].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7806f7c (    0xa8) -[SecKeyP256Public dataRepresentation].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7807024 (    0x74) -[SecKeyP256Public dataRepresentation].cold.2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7807098 (    0x8c) -[SecKeyP256Public initWithData:error:].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7807124 (    0x64) -[SecKeyP256Public verifySignature:data:].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7807188 (    0x64) +[SecKeyP256Private generateWithAccessControl:].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b78071ec (    0x44) +[SecKeyP256Private generateWithAccessControl:].cold.2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7807230 (    0xac) -[SecKeyP256Private keyAgreement:error:isRetry:].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b78072dc (    0x44) -[SecKeyP256Private publicKey].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7807320 (    0x90) -[SecKeyP256Private initWithData:error:].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b78073b0 (    0x44) +[NGMKeyValidator isValidKeyValidator:receiversIdentity:sendersIdentity:error:].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b78073f4 (    0x44) __79+[NGMKeyValidator isValidKeyValidator:receiversIdentity:sendersIdentity:error:]_block_invoke.cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7807438 (    0x38) -[SecMessageLegacyFullIdentity initWithProtobufData:].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7807470 (    0x84) -[SecMessageLegacyFullIdentity initWithEncryptionKeyData:signingKeyData:].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b78074f4 (    0x80) -[SecMessageLegacyFullIdentity initWithEncryptionKeyData:signingKeyData:].cold.2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7807574 (    0x38) +[SecMessageLegacyFullIdentity identity].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b78075ac (    0x38) +[SecMessageLegacyFullIdentity identity].cold.2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b78075e4 (    0x7c) -[SecKeyRSAPrivate init].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7807660 (    0x7c) -[SecKeyRSAPrivate initWithData:error:].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b78076dc (    0x7c) -[SecKeyRSAPrivate decryptData:error:].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7807758 (    0x44) -[NGMReplayManager persistentStoreDescription].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b780779c (    0x84) -[NGMReplayManager objectContextWithError:].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7807820 (    0x48) -[NGMReplayManager persistentContainerWithError:].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7807868 (    0x44) -[NGMReplayManager persistentContainerWithError:].cold.2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b78078ac (    0x80) __49-[NGMReplayManager persistentContainerWithError:]_block_invoke.cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b780792c (    0x48) -[NGMReplayManager counterForDestinationWithIdentityKey:sendingIdentity:error:success:].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7807974 (    0x80) __87-[NGMReplayManager counterForDestinationWithIdentityKey:sendingIdentity:error:success:]_block_invoke.cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b78079f4 (    0x80) __87-[NGMReplayManager counterForDestinationWithIdentityKey:sendingIdentity:error:success:]_block_invoke.cold.2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7807a74 (    0x84) -[NGMReplayManager processFetchRequestAndValidate:counter:commit:theirIdentity:prekey:error:].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7807af8 (    0x84) -[NGMReplayManager processFetchRequestAndValidate:counter:commit:theirIdentity:prekey:error:].cold.2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7807b7c (    0xb4) __93-[NGMReplayManager processFetchRequestAndValidate:counter:commit:theirIdentity:prekey:error:]_block_invoke.cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7807c30 (    0x80) __93-[NGMReplayManager processFetchRequestAndValidate:counter:commit:theirIdentity:prekey:error:]_block_invoke.cold.2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7807cb0 (    0x80) -[NGMReplayManager registeredPrekeyForNGMPrekey:objectContext:].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7807d30 (    0x80) -[NGMReplayManager deleteReceivingCountersForKey:].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7807db0 (    0xec) -[NGMReplayManager deleteReceivingCountersForKey:].cold.2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7807e9c (    0x80) -[NGMReplayManager deleteReceivingCountersForKey:].cold.3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7807f1c (    0x80) -[NGMReplayManager deleteExpiredSendingDestinations].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7807f9c (    0x80) -[NGMReplayManager deleteExpiredSendingDestinations].cold.2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b780801c (    0x80) -[NGMReplayManager deleteExpiredSendingDestinations].cold.3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b780809c (    0x38) +[NGMTimeBasedEvaluations validateFetchedPrekeyTimestamp:forEvaluationType:].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b78080d4 (    0x38) +[NGMTimeBasedEvaluations prekeyShouldBeRolled:].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b780810c (    0x38) +[NGMTimeBasedEvaluations prekeyShouldBeRolled:].cold.2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7808144 (    0x8c) -[PublicKey initWithData:error:].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b78081d0 (    0x2c) -[NGMPBLegacyKey writeTo:].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b78081fc (    0x2c) -[NGMPBLegacyKey writeTo:].cold.2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7808228 (    0x2c) -[NGMPBDevicePreKey writeTo:].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7808254 (    0x2c) -[NGMPBFullDeviceIdentity writeTo:].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7808280 (    0x2c) -[NGMPBPublicDeviceIdentity writeTo:].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b78082ac (    0x2c) -[NGMPBPublicDevicePrekey writeTo:].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b78082d8 (    0x2c) -[NGMPBPublicDevicePrekey writeTo:].cold.2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b7808304 (    0x2c) -[NGMPBInnerMessage writeTo:].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
            0x00000001b7808330 (  0x1500) __TEXT __auth_stubs
                0x00000001b7808330 (    0x10) DYLD-STUB$$__DataStorage.init(bytes:length:copy:deallocator:offset:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808340 (    0x10) DYLD-STUB$$__DataStorage.init(bytes:length:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808350 (    0x10) DYLD-STUB$$__DataStorage._bytes.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808360 (    0x10) DYLD-STUB$$__DataStorage.init(length:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808370 (    0x10) DYLD-STUB$$__DataStorage._length.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808380 (    0x10) DYLD-STUB$$__DataStorage._offset.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808390 (    0x10) DYLD-STUB$$__DataStorage.init(capacity:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78083a0 (    0x10) DYLD-STUB$$type metadata accessor for __DataStorage [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78083b0 (    0x10) DYLD-STUB$$dispatch thunk of ContiguousBytes.withUnsafeBytes<A>(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78083c0 (    0x10) DYLD-STUB$$_convertErrorToNSError(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78083d0 (    0x10) DYLD-STUB$$NSFastEnumerationIterator.next() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78083e0 (    0x10) DYLD-STUB$$type metadata accessor for NSFastEnumerationIterator [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78083f0 (    0x10) DYLD-STUB$$Data.LargeSlice.ensureUniqueReference() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808400 (    0x10) DYLD-STUB$$Data.InlineSlice.ensureUniqueReference() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808410 (    0x10) DYLD-STUB$$type metadata accessor for Data.RangeReference [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808420 (    0x10) DYLD-STUB$$Data._Representation.replaceSubrange(_:with:count:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808430 (    0x10) DYLD-STUB$$Data._Representation.append(contentsOf:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808440 (    0x10) DYLD-STUB$$Data._Representation.subscript.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808450 (    0x10) DYLD-STUB$$Data._bridgeToObjectiveC() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808460 (    0x10) DYLD-STUB$$static Data._unconditionallyBridgeFromObjectiveC(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808470 (    0x10) DYLD-STUB$$Data.append(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808480 (    0x10) DYLD-STUB$$Data.advanced(by:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808490 (    0x10) DYLD-STUB$$static _CFObject.== infix(_:_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78084a0 (    0x10) DYLD-STUB$$_CFObject.hash(into:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78084b0 (    0x10) DYLD-STUB$$_CFObject.hashValue.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78084c0 (    0x10) DYLD-STUB$$static Padme.paddedMessageByteCount(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78084d0 (    0x10) DYLD-STUB$$static Internal.areAllInitialized(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78084e0 (    0x10) DYLD-STUB$$UnknownStorage.traverse<A>(visitor:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78084f0 (    0x10) DYLD-STUB$$UnknownStorage.init() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808500 (    0x10) DYLD-STUB$$type metadata accessor for UnknownStorage [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808510 (    0x10) DYLD-STUB$$BinaryDecodingOptions.init() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808520 (    0x10) DYLD-STUB$$type metadata accessor for BinaryDecodingOptions [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808530 (    0x10) DYLD-STUB$$_MessageImplementationBase._protobuf_generated_isEqualTo(other:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808540 (    0x10) DYLD-STUB$$_MessageImplementationBase.isEqualTo(message:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808550 (    0x10) DYLD-STUB$$dispatch thunk of Decoder.nextFieldNumber() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808560 (    0x10) DYLD-STUB$$dispatch thunk of Decoder.decodeSingularBytesField(value:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808570 (    0x10) DYLD-STUB$$dispatch thunk of Decoder.decodeSingularUInt64Field(value:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808580 (    0x10) DYLD-STUB$$dispatch thunk of Decoder.decodeRepeatedMessageField<A>(value:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808590 (    0x10) DYLD-STUB$$dispatch thunk of Decoder.decodeSingularMessageField<A>(value:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78085a0 (    0x10) DYLD-STUB$$Message.init(serializedData:extensions:partial:options:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78085b0 (    0x10) DYLD-STUB$$Message.serializedData(partial:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78085c0 (    0x10) DYLD-STUB$$Message.debugDescription.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78085d0 (    0x10) DYLD-STUB$$Message.hash(into:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78085e0 (    0x10) DYLD-STUB$$dispatch thunk of Visitor.visitSingularBytesField(value:fieldNumber:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78085f0 (    0x10) DYLD-STUB$$dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808600 (    0x10) DYLD-STUB$$dispatch thunk of Visitor.visitRepeatedMessageField<A>(value:fieldNumber:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808610 (    0x10) DYLD-STUB$$dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808620 (    0x10) DYLD-STUB$$type metadata accessor for _NameMap.NameDescription [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808630 (    0x10) DYLD-STUB$$_NameMap.init(dictionaryLiteral:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808640 (    0x10) DYLD-STUB$$type metadata accessor for _NameMap [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808650 (    0x10) DYLD-STUB$$os_log(_:dso:log:_:_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808660 (    0x10) DYLD-STUB$$type metadata accessor for CryptoKitError [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808670 (    0x10) DYLD-STUB$$dispatch thunk of HashFunction.update(bufferPointer:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808680 (    0x10) DYLD-STUB$$dispatch thunk of HashFunction.finalize() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808690 (    0x10) DYLD-STUB$$dispatch thunk of HashFunction.init() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78086a0 (    0x10) DYLD-STUB$$type metadata accessor for SHA256Digest [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78086b0 (    0x10) DYLD-STUB$$SharedSecret.hkdfDerivedSymmetricKey<A, B, C>(using:salt:sharedInfo:outputByteCount:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78086c0 (    0x10) DYLD-STUB$$SharedSecret.x963DerivedSymmetricKey<A, B>(using:sharedInfo:outputByteCount:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78086d0 (    0x10) DYLD-STUB$$type metadata accessor for SharedSecret [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78086e0 (    0x10) DYLD-STUB$$SymmetricKey.withUnsafeBytes<A>(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78086f0 (    0x10) DYLD-STUB$$SymmetricKey.init<A>(data:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808700 (    0x10) DYLD-STUB$$SymmetricKey.init(size:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808710 (    0x10) DYLD-STUB$$SymmetricKey.bitCount.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808720 (    0x10) DYLD-STUB$$type metadata accessor for SymmetricKey [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808730 (    0x10) DYLD-STUB$$static SymmetricKeySize.bits256.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808740 (    0x10) DYLD-STUB$$type metadata accessor for SymmetricKeySize [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808750 (    0x10) DYLD-STUB$$static AES.GCM.open<A>(_:using:authenticating:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808760 (    0x10) DYLD-STUB$$static AES.GCM.seal<A, B>(_:using:nonce:authenticating:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808770 (    0x10) DYLD-STUB$$type metadata accessor for AES.GCM.Nonce [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808780 (    0x10) DYLD-STUB$$AES.GCM.SealedBox.combined.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808790 (    0x10) DYLD-STUB$$AES.GCM.SealedBox.init(combined:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78087a0 (    0x10) DYLD-STUB$$type metadata accessor for AES.GCM.SealedBox [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78087b0 (    0x10) DYLD-STUB$$static AES.KeyWrap.wrap(_:using:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78087c0 (    0x10) DYLD-STUB$$static AES.KeyWrap.unwrap<A>(_:using:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78087d0 (    0x10) DYLD-STUB$$static HKDF.expand<A, B>(pseudoRandomKey:info:outputByteCount:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78087e0 (    0x10) DYLD-STUB$$static HKDF.deriveKey<A>(inputKeyMaterial:salt:outputByteCount:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78087f0 (    0x10) DYLD-STUB$$HPKE.Ciphersuite.init(kem:kdf:aead:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808800 (    0x10) DYLD-STUB$$type metadata accessor for HPKE.Ciphersuite [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808810 (    0x10) DYLD-STUB$$type metadata accessor for HPKE.KDF [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808820 (    0x10) DYLD-STUB$$type metadata accessor for HPKE.KEM [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808830 (    0x10) DYLD-STUB$$type metadata accessor for HPKE.AEAD [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808840 (    0x10) DYLD-STUB$$HPKE.Sender.init<A>(recipientKey:ciphersuite:info:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808850 (    0x10) DYLD-STUB$$HPKE.Sender.encapsulatedKey.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808860 (    0x10) DYLD-STUB$$HPKE.Sender.seal<A, B>(_:authenticating:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808870 (    0x10) DYLD-STUB$$type metadata accessor for HPKE.Sender [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808880 (    0x10) DYLD-STUB$$HPKE.Recipient.init<A>(privateKey:ciphersuite:info:encapsulatedKey:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808890 (    0x10) DYLD-STUB$$HPKE.Recipient.open<A, B>(_:authenticating:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78088a0 (    0x10) DYLD-STUB$$type metadata accessor for HPKE.Recipient [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78088b0 (    0x10) DYLD-STUB$$P256.KeyAgreement.PublicKey.rawRepresentation.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78088c0 (    0x10) DYLD-STUB$$P256.KeyAgreement.PublicKey.x963Representation.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78088d0 (    0x10) DYLD-STUB$$P256.KeyAgreement.PublicKey.init<A>(x963Representation:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78088e0 (    0x10) DYLD-STUB$$type metadata accessor for P256.KeyAgreement.PublicKey [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78088f0 (    0x10) DYLD-STUB$$P256.KeyAgreement.PrivateKey.sharedSecretFromKeyAgreement(with:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808900 (    0x10) DYLD-STUB$$P256.KeyAgreement.PrivateKey.publicKey.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808910 (    0x10) DYLD-STUB$$P256.KeyAgreement.PrivateKey.init<A>(x963Representation:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808920 (    0x10) DYLD-STUB$$P256.KeyAgreement.PrivateKey.init(compactRepresentable:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808930 (    0x10) DYLD-STUB$$type metadata accessor for P256.KeyAgreement.PrivateKey [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808940 (    0x10) DYLD-STUB$$P256.Signing.PrivateKey.publicKey.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808950 (    0x10) DYLD-STUB$$P256.Signing.PrivateKey.rawRepresentation.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808960 (    0x10) DYLD-STUB$$P256.Signing.PrivateKey.init<A>(rawRepresentation:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808970 (    0x10) DYLD-STUB$$P256.Signing.PrivateKey.x963Representation.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808980 (    0x10) DYLD-STUB$$P256.Signing.PrivateKey.init<A>(x963Representation:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808990 (    0x10) DYLD-STUB$$P256.Signing.PrivateKey.init(compactRepresentable:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78089a0 (    0x10) DYLD-STUB$$P256.Signing.PrivateKey.keyFromDiversification(with:seedExtractionLabel:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78089b0 (    0x10) DYLD-STUB$$P256.Signing.PrivateKey.signature<A>(for:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78089c0 (    0x10) DYLD-STUB$$type metadata accessor for P256.Signing.PrivateKey [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78089d0 (    0x10) DYLD-STUB$$P256.Signing.ECDSASignature.rawRepresentation.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78089e0 (    0x10) DYLD-STUB$$P256.Signing.ECDSASignature.init<A>(rawRepresentation:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78089f0 (    0x10) DYLD-STUB$$type metadata accessor for P256.Signing.ECDSASignature [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808a00 (    0x10) DYLD-STUB$$P256.Signing.PublicKey.isValidSignature<A>(_:for:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808a10 (    0x10) DYLD-STUB$$P256.Signing.PublicKey.x963Representation.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808a20 (    0x10) DYLD-STUB$$P256.Signing.PublicKey.init<A>(x963Representation:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808a30 (    0x10) DYLD-STUB$$P256.Signing.PublicKey.compactRepresentation.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808a40 (    0x10) DYLD-STUB$$P256.Signing.PublicKey.init<A>(compactRepresentation:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808a50 (    0x10) DYLD-STUB$$P256.Signing.PublicKey.keyFromDiversification(with:seedExtractionLabel:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808a60 (    0x10) DYLD-STUB$$type metadata accessor for P256.Signing.PublicKey [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808a70 (    0x10) DYLD-STUB$$type metadata accessor for SHA256 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808a80 (    0x10) DYLD-STUB$$Dictionary._bridgeToObjectiveC() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808a90 (    0x10) DYLD-STUB$$static Dictionary._conditionallyBridgeFromObjectiveC(_:result:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808aa0 (    0x10) DYLD-STUB$$dispatch thunk of Hashable.hash(into:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808ab0 (    0x10) DYLD-STUB$$dispatch thunk of static Equatable.== infix(_:_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808ac0 (    0x10) DYLD-STUB$$String._bridgeToObjectiveC() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808ad0 (    0x10) DYLD-STUB$$static String._unconditionallyBridgeFromObjectiveC(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808ae0 (    0x10) DYLD-STUB$$String.UTF8View._foreignCount() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808af0 (    0x10) DYLD-STUB$$String.UTF8View._foreignIndex(after:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808b00 (    0x10) DYLD-STUB$$String.UTF8View._foreignIndex(_:offsetBy:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808b10 (    0x10) DYLD-STUB$$String.UTF8View._foreignSubscript(position:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808b20 (    0x10) DYLD-STUB$$String.UTF16View.index(_:offsetBy:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808b30 (    0x10) DYLD-STUB$$static Array._allocateBufferUninitialized(minimumCapacity:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808b40 (    0x10) DYLD-STUB$$static os_log_type_t.error.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808b50 (    0x10) DYLD-STUB$$NSArray.makeIterator() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808b60 (    0x10) DYLD-STUB$$type metadata accessor for Optional [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808b70 (    0x10) DYLD-STUB$$_HashTable.previousHole(before:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808b80 (    0x10) DYLD-STUB$$_HashTable.occupiedBucket(after:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808b90 (    0x10) DYLD-STUB$$_StringGuts.copyUTF8(into:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808ba0 (    0x10) DYLD-STUB$$_StringObject.sharedUTF8.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808bb0 (    0x10) DYLD-STUB$$static _DictionaryStorage.copy(original:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808bc0 (    0x10) DYLD-STUB$$static _DictionaryStorage.resize(original:capacity:move:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808bd0 (    0x10) DYLD-STUB$$static _DictionaryStorage.allocate(capacity:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808be0 (    0x10) DYLD-STUB$$KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808bf0 (    0x10) DYLD-STUB$$Error.localizedDescription.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808c00 (    0x10) DYLD-STUB$$Error._getEmbeddedNSError() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808c10 (    0x10) DYLD-STUB$$Error._code.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808c20 (    0x10) DYLD-STUB$$Error._domain.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808c30 (    0x10) DYLD-STUB$$Error._userInfo.getter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808c40 (    0x10) DYLD-STUB$$static Hasher._hash(seed:bytes:count:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808c50 (    0x10) DYLD-STUB$$static Hasher._hash(seed:_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808c60 (    0x10) DYLD-STUB$$Hasher.init(_seed:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808c70 (    0x10) DYLD-STUB$$Hasher._combine(_:) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808c80 (    0x10) DYLD-STUB$$Hasher._finalize() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808c90 (    0x10) DYLD-STUB$$CC_SHA1 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808ca0 (    0x10) DYLD-STUB$$CC_SHA256 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808cb0 (    0x10) DYLD-STUB$$CFCopyDescription [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808cc0 (    0x10) DYLD-STUB$$CFDataAppendBytes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808cd0 (    0x10) DYLD-STUB$$CFDataCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808ce0 (    0x10) DYLD-STUB$$CFDataCreateMutable [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808cf0 (    0x10) DYLD-STUB$$CFDataCreateWithBytesNoCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808d00 (    0x10) DYLD-STUB$$CFDataGetBytePtr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808d10 (    0x10) DYLD-STUB$$CFDataGetLength [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808d20 (    0x10) DYLD-STUB$$CFDataGetMutableBytePtr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808d30 (    0x10) DYLD-STUB$$CFDataIncreaseLength [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808d40 (    0x10) DYLD-STUB$$CFDataSetLength [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808d50 (    0x10) DYLD-STUB$$CFDictionaryCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808d60 (    0x10) DYLD-STUB$$CFDictionaryCreateCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808d70 (    0x10) DYLD-STUB$$CFDictionaryCreateMutable [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808d80 (    0x10) DYLD-STUB$$CFDictionaryGetValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808d90 (    0x10) DYLD-STUB$$CFDictionarySetValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808da0 (    0x10) DYLD-STUB$$CFEqual [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808db0 (    0x10) DYLD-STUB$$CFErrorCopyDescription [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808dc0 (    0x10) DYLD-STUB$$CFErrorCopyUserInfo [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808dd0 (    0x10) DYLD-STUB$$CFErrorCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808de0 (    0x10) DYLD-STUB$$CFErrorCreateWithUserInfoKeysAndValues [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808df0 (    0x10) DYLD-STUB$$CFErrorGetCode [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808e00 (    0x10) DYLD-STUB$$CFErrorGetDomain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808e10 (    0x10) DYLD-STUB$$CFGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808e20 (    0x10) DYLD-STUB$$CFNumberCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808e30 (    0x10) DYLD-STUB$$CFReadStreamRead [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808e40 (    0x10) DYLD-STUB$$CFRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808e50 (    0x10) DYLD-STUB$$CFRetain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808e60 (    0x10) DYLD-STUB$$CFStringAppend [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808e70 (    0x10) DYLD-STUB$$CFStringCreateMutableCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808e80 (    0x10) DYLD-STUB$$CFStringCreateWithFormat [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808e90 (    0x10) DYLD-STUB$$CFStringGetCString [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808ea0 (    0x10) DYLD-STUB$$CFWriteStreamWrite [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808eb0 (    0x10) DYLD-STUB$$NSHomeDirectory [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808ec0 (    0x10) DYLD-STUB$$NSTemporaryDirectory [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808ed0 (    0x10) DYLD-STUB$$PBDataWriterWriteDataField [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808ee0 (    0x10) DYLD-STUB$$PBDataWriterWriteDoubleField [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808ef0 (    0x10) DYLD-STUB$$PBDataWriterWriteInt32Field [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808f00 (    0x10) DYLD-STUB$$PBDataWriterWriteStringField [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808f10 (    0x10) DYLD-STUB$$PBDataWriterWriteSubmessage [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808f20 (    0x10) DYLD-STUB$$PBDataWriterWriteUint32Field [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808f30 (    0x10) DYLD-STUB$$PBReaderPlaceMark [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808f40 (    0x10) DYLD-STUB$$PBReaderReadData [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808f50 (    0x10) DYLD-STUB$$PBReaderReadString [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808f60 (    0x10) DYLD-STUB$$PBReaderRecallMark [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808f70 (    0x10) DYLD-STUB$$PBReaderSkipValueWithTag [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808f80 (    0x10) DYLD-STUB$$SecAccessControlCreateWithFlags [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808f90 (    0x10) DYLD-STUB$$SecItemCopyMatching [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808fa0 (    0x10) DYLD-STUB$$SecItemDelete [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808fb0 (    0x10) DYLD-STUB$$SecKeyCopyAttributes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808fc0 (    0x10) DYLD-STUB$$SecKeyCopyExternalRepresentation [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808fd0 (    0x10) DYLD-STUB$$SecKeyCopyKeyExchangeResult [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808fe0 (    0x10) DYLD-STUB$$SecKeyCopyPublicBytes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7808ff0 (    0x10) DYLD-STUB$$SecKeyCopyPublicKey [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7809000 (    0x10) DYLD-STUB$$SecKeyCreateDecryptedData [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7809010 (    0x10) DYLD-STUB$$SecKeyCreateEncryptedData [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7809020 (    0x10) DYLD-STUB$$SecKeyCreateRandomKey [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7809030 (    0x10) DYLD-STUB$$SecKeyCreateSignature [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7809040 (    0x10) DYLD-STUB$$SecKeyCreateWithData [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7809050 (    0x10) DYLD-STUB$$SecKeyGetSize [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7809060 (    0x10) DYLD-STUB$$SecKeyGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7809070 (    0x10) DYLD-STUB$$SecKeyIsAlgorithmSupported [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7809080 (    0x10) DYLD-STUB$$SecKeyVerifySignature [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7809090 (    0x10) DYLD-STUB$$SecOTRFullIdentityCreateFromSecKeyRef [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78090a0 (    0x10) DYLD-STUB$$SecOTRPublicIdentityCreateFromSecKeyRef [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78090b0 (    0x10) DYLD-STUB$$SecOTRSessionCreateFromIDAndFlags [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78090c0 (    0x10) DYLD-STUB$$SecRandomCopyBytes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78090d0 (    0x10) DYLD-STUB$$_Block_object_assign [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78090e0 (    0x10) DYLD-STUB$$_Block_object_dispose [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78090f0 (    0x10) DYLD-STUB$$_CFRuntimeCreateInstance [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7809100 (    0x10) DYLD-STUB$$_CFRuntimeRegisterClass [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7809110 (    0x10) DYLD-STUB$$_Unwind_Resume [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7809120 (    0x10) DYLD-STUB$$__assert_rtn [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7809130 (    0x10) DYLD-STUB$$__stack_chk_fail [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7809140 (    0x10) DYLD-STUB$$_os_log_debug_impl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7809150 (    0x10) DYLD-STUB$$_os_log_error_impl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7809160 (    0x10) DYLD-STUB$$_os_log_fault_impl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7809170 (    0x10) DYLD-STUB$$_os_log_impl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7809180 (    0x10) DYLD-STUB$$_swift_stdlib_reportUnimplementedInitializer [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7809190 (    0x10) DYLD-STUB$$bzero [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78091a0 (    0x10) DYLD-STUB$$cc_clear [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78091b0 (    0x10) DYLD-STUB$$cc_cmp_safe [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78091c0 (    0x10) DYLD-STUB$$ccaes_ctr_crypt_mode [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78091d0 (    0x10) DYLD-STUB$$ccaes_siv_decrypt_mode [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78091e0 (    0x10) DYLD-STUB$$ccaes_siv_encrypt_mode [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78091f0 (    0x10) DYLD-STUB$$ccctr_one_shot [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7809200 (    0x10) DYLD-STUB$$ccder_decode_sequence_tl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7809210 (    0x10) DYLD-STUB$$ccder_decode_tl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7809220 (    0x10) DYLD-STUB$$ccder_encode_constructed_tl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7809230 (    0x10) DYLD-STUB$$ccder_encode_implicit_raw_octet_string [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7809240 (    0x10) DYLD-STUB$$ccder_encode_integer [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7809250 (    0x10) DYLD-STUB$$ccder_sizeof [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7809260 (    0x10) DYLD-STUB$$ccder_sizeof_implicit_raw_octet_string [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7809270 (    0x10) DYLD-STUB$$ccec_compact_export_pub [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7809280 (    0x10) DYLD-STUB$$ccec_compact_generate_key [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7809290 (    0x10) DYLD-STUB$$ccec_compact_import_pub [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78092a0 (    0x10) DYLD-STUB$$ccec_cp_256 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78092b0 (    0x10) DYLD-STUB$$ccec_export_pub [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78092c0 (    0x10) DYLD-STUB$$ccec_import_pub [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78092d0 (    0x10) DYLD-STUB$$ccec_validate_pub [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78092e0 (    0x10) DYLD-STUB$$ccec_x963_import_pub [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78092f0 (    0x10) DYLD-STUB$$ccecdh_compute_shared_secret [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7809300 (    0x10) DYLD-STUB$$cchmac_final [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7809310 (    0x10) DYLD-STUB$$cchmac_init [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7809320 (    0x10) DYLD-STUB$$cchmac_update [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7809330 (    0x10) DYLD-STUB$$ccn_cmp [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7809340 (    0x10) DYLD-STUB$$ccn_read_uint [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7809350 (    0x10) DYLD-STUB$$ccn_sub [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7809360 (    0x10) DYLD-STUB$$ccrng [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7809370 (    0x10) DYLD-STUB$$ccsha256_di [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7809380 (    0x10) DYLD-STUB$$ccsiv_one_shot [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7809390 (    0x10) DYLD-STUB$$cczp_bitlen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78093a0 (    0x10) DYLD-STUB$$cczp_prime [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78093b0 (    0x10) DYLD-STUB$$dispatch_once [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78093c0 (    0x10) DYLD-STUB$$fmod [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78093d0 (    0x10) DYLD-STUB$$free [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78093e0 (    0x10) DYLD-STUB$$malloc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78093f0 (    0x10) DYLD-STUB$$malloc_size [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7809400 (    0x10) DYLD-STUB$$memcmp [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7809410 (    0x10) DYLD-STUB$$memcpy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7809420 (    0x10) DYLD-STUB$$memmove [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7809430 (    0x10) DYLD-STUB$$memset [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7809440 (    0x10) DYLD-STUB$$memset_s [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7809450 (    0x10) DYLD-STUB$$objc_alloc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7809460 (    0x10) DYLD-STUB$$objc_allocWithZone [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7809470 (    0x10) DYLD-STUB$$objc_alloc_init [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7809480 (    0x10) DYLD-STUB$$objc_autorelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7809490 (    0x10) DYLD-STUB$$objc_autoreleaseReturnValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78094a0 (    0x10) DYLD-STUB$$objc_enumerationMutation [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78094b0 (    0x10) DYLD-STUB$$objc_getProperty [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78094c0 (    0x10) DYLD-STUB$$objc_msgSend [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78094d0 (    0x10) DYLD-STUB$$objc_msgSendSuper2 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78094e0 (    0x10) DYLD-STUB$$objc_opt_class [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78094f0 (    0x10) DYLD-STUB$$objc_opt_isKindOfClass [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7809500 (    0x10) DYLD-STUB$$objc_opt_self [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7809510 (    0x10) DYLD-STUB$$objc_release [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7809520 (    0x10) DYLD-STUB$$objc_retain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7809530 (    0x10) DYLD-STUB$$objc_retainAutorelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7809540 (    0x10) DYLD-STUB$$objc_retainAutoreleaseReturnValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7809550 (    0x10) DYLD-STUB$$objc_retainAutoreleasedReturnValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7809560 (    0x10) DYLD-STUB$$objc_retainBlock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7809570 (    0x10) DYLD-STUB$$objc_setProperty_atomic [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7809580 (    0x10) DYLD-STUB$$objc_storeStrong [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7809590 (    0x10) DYLD-STUB$$objc_sync_enter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78095a0 (    0x10) DYLD-STUB$$objc_sync_exit [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78095b0 (    0x10) DYLD-STUB$$os_log_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78095c0 (    0x10) DYLD-STUB$$os_log_type_enabled [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78095d0 (    0x10) DYLD-STUB$$swift_allocBox [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78095e0 (    0x10) DYLD-STUB$$swift_allocError [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78095f0 (    0x10) DYLD-STUB$$swift_allocObject [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7809600 (    0x10) DYLD-STUB$$swift_allocateGenericValueMetadata [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7809610 (    0x10) DYLD-STUB$$swift_arrayInitWithCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7809620 (    0x10) DYLD-STUB$$swift_arrayInitWithTakeBackToFront [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7809630 (    0x10) DYLD-STUB$$swift_arrayInitWithTakeFrontToBack [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7809640 (    0x10) DYLD-STUB$$swift_beginAccess [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7809650 (    0x10) DYLD-STUB$$swift_bridgeObjectRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7809660 (    0x10) DYLD-STUB$$swift_bridgeObjectRetain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7809670 (    0x10) DYLD-STUB$$swift_deallocObject [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7809680 (    0x10) DYLD-STUB$$swift_deallocPartialClassInstance [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7809690 (    0x10) DYLD-STUB$$swift_dynamicCast [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78096a0 (    0x10) DYLD-STUB$$swift_endAccess [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78096b0 (    0x10) DYLD-STUB$$swift_errorRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78096c0 (    0x10) DYLD-STUB$$swift_errorRetain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78096d0 (    0x10) DYLD-STUB$$swift_getEnumTagSinglePayloadGeneric [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78096e0 (    0x10) DYLD-STUB$$swift_getForeignTypeMetadata [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78096f0 (    0x10) DYLD-STUB$$swift_getGenericMetadata [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7809700 (    0x10) DYLD-STUB$$swift_getObjCClassFromMetadata [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7809710 (    0x10) DYLD-STUB$$swift_getObjCClassMetadata [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7809720 (    0x10) DYLD-STUB$$swift_getSingletonMetadata [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7809730 (    0x10) DYLD-STUB$$swift_getTupleTypeLayout2 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7809740 (    0x10) DYLD-STUB$$swift_getTypeByMangledNameInContext2 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7809750 (    0x10) DYLD-STUB$$swift_getTypeByMangledNameInContextInMetadataState2 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7809760 (    0x10) DYLD-STUB$$swift_getWitnessTable [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7809770 (    0x10) DYLD-STUB$$swift_initStackObject [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7809780 (    0x10) DYLD-STUB$$swift_initStructMetadata [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7809790 (    0x10) DYLD-STUB$$swift_isUniquelyReferenced_nonNull_native [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78097a0 (    0x10) DYLD-STUB$$swift_once [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78097b0 (    0x10) DYLD-STUB$$swift_release [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78097c0 (    0x10) DYLD-STUB$$swift_retain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78097d0 (    0x10) DYLD-STUB$$swift_slowAlloc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78097e0 (    0x10) DYLD-STUB$$swift_storeEnumTagSinglePayloadGeneric [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b78097f0 (    0x10) DYLD-STUB$$swift_unexpectedError [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7809800 (    0x10) DYLD-STUB$$swift_updateClassMetadata2 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7809810 (    0x10) DYLD-STUB$$swift_willThrow [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b7809820 (    0x10) DYLD-STUB$$syslog$DARWIN_EXTSN [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
            0x00000001b7809830 (  0x1bfc) __TEXT __objc_methlist
                0x00000001b7809830 (    0x30) _OBJC_$_CLASS_METHODS_GLTKeyDiversification [NameNList, MangledNameNList, NList] 
                0x00000001b7809860 (    0x38) _OBJC_$_INSTANCE_METHODS_GLTDiversifiedKeyAndTPS [NameNList, MangledNameNList, NList] 
                0x00000001b7809898 (    0x30) _OBJC_$_INSTANCE_METHODS_SigningPublicKey [NameNList, MangledNameNList, NList] 
                0x00000001b78098c8 (    0x20) _OBJC_$_CLASS_METHODS_NGMPadding [NameNList, MangledNameNList, NList] 
                0x00000001b78098e8 (    0x18) _OBJC_$_CLASS_METHODS_SecMessageLegacyPublicIdentity [NameNList, MangledNameNList, NList] 
                0x00000001b7809900 (    0xa8) _OBJC_$_INSTANCE_METHODS_SecMessageLegacyPublicIdentity [NameNList, MangledNameNList, NList] 
                0x00000001b78099a8 (    0x38) _OBJC_$_INSTANCE_METHODS_NGMMessageSignatureFormatter [NameNList, MangledNameNList, NList] 
                0x00000001b78099e0 (    0x20) _OBJC_$_CLASS_METHODS_FullKey [NameNList, MangledNameNList, NList] 
                0x00000001b7809a00 (    0x98) _OBJC_$_INSTANCE_METHODS_FullKey [NameNList, MangledNameNList, NList] 
                0x00000001b7809a98 (    0x68) _OBJC_$_INSTANCE_METHODS_LegacySigningKeyPrivate [NameNList, MangledNameNList, NList] 
                0x00000001b7809b00 (    0x18) _OBJC_$_CLASS_METHODS_NGMFullPrekey [NameNList, MangledNameNList, NList] 
                0x00000001b7809b18 (    0x78) _OBJC_$_INSTANCE_METHODS_NGMFullPrekey [NameNList, MangledNameNList, NList] 
                0x00000001b7809b90 (    0x68) _OBJC_$_INSTANCE_METHODS_NGMECDHPublicPreKey [NameNList, MangledNameNList, NList] 
                0x00000001b7809bf8 (    0x60) _OBJC_$_INSTANCE_METHODS_SecKeyRSAPublic [NameNList, MangledNameNList, NList] 
                0x00000001b7809c58 (    0x50) _OBJC_$_INSTANCE_METHODS_NGMPrekeySignatureFormatter [NameNList, MangledNameNList, NList] 
                0x00000001b7809ca8 (    0x60) _OBJC_$_INSTANCE_METHODS_NGMKeyRollingTicket [NameNList, MangledNameNList, NList] 
                0x00000001b7809d08 (    0x18) _OBJC_$_CLASS_METHODS_NGMPublicDeviceIdentity(SignatureVerification) [NameNList, MangledNameNList, NList] 
                0x00000001b7809d20 (    0xd8) _OBJC_$_INSTANCE_METHODS_NGMPublicDeviceIdentity(SignatureVerification) [NameNList, MangledNameNList, NList] 
                0x00000001b7809df8 (    0x20) _OBJC_$_CLASS_METHODS_NGMMessageFormatter [NameNList, MangledNameNList, NList] 
                0x00000001b7809e18 (    0x38) _OBJC_$_INSTANCE_METHODS_NGMFTVoucherSignatureFormatter [NameNList, MangledNameNList, NList] 
                0x00000001b7809e50 (    0x18) _OBJC_$_CLASS_METHODS_CoreCryptoP256Private [NameNList, MangledNameNList, NList] 
                0x00000001b7809e68 (    0x78) _OBJC_$_INSTANCE_METHODS_CoreCryptoP256Private [NameNList, MangledNameNList, NList] 
                0x00000001b7809ee0 (    0x18) _OBJC_$_CLASS_METHODS_NGMMessageHasher [NameNList, MangledNameNList, NList] 
                0x00000001b7809ef8 (    0x38) _OBJC_$_INSTANCE_METHODS_NGMGFTSignatureFormatter [NameNList, MangledNameNList, NList] 
                0x00000001b7809f30 (    0x90) _OBJC_$_INSTANCE_METHODS_NGMRollingBitmaskBuffer [NameNList, MangledNameNList, NList] 
                0x00000001b7809fc0 (    0x30) _OBJC_$_INSTANCE_METHODS_DHKey [NameNList, MangledNameNList, NList] 
                0x00000001b7809ff0 (    0x50) _OBJC_$_INSTANCE_METHODS_LegacySigningKeyPublic [NameNList, MangledNameNList, NList] 
                0x00000001b780a040 (    0x78) _OBJC_$_INSTANCE_METHODS_MPStatusKitIncomingRatchet [NameNList, MangledNameNList, NList] 
                0x00000001b780a0b8 (    0x48) _OBJC_$_INSTANCE_METHODS_MPStatusKitMessage [NameNList, MangledNameNList, NList] 
                0x00000001b780a100 (    0x80) _OBJC_$_INSTANCE_METHODS_MPStatusKitOutgoingRatchet [NameNList, MangledNameNList, NList] 
                0x00000001b780a180 (    0x48) _OBJC_$_INSTANCE_METHODS_MPStatusKitSubscriptionKeys [NameNList, MangledNameNList, NList] 
                0x00000001b780a1c8 (    0x20) _OBJC_$_CLASS_METHODS_NGMProtocolVersion [NameNList, MangledNameNList, NList] 
                0x00000001b780a1e8 (    0x30) _OBJC_$_CLASS_METHODS_NGMFullDeviceIdentity(MigrationToModernizedKeyStorage|Signing) [NameNList, MangledNameNList, NList] 
                0x00000001b780a218 (   0x128) _OBJC_$_INSTANCE_METHODS_NGMFullDeviceIdentity(MigrationToModernizedKeyStorage|Signing) [NameNList, MangledNameNList, NList] 
                0x00000001b780a340 (    0x30) _OBJC_$_CLASS_METHODS_MP_AES_CTR [NameNList, MangledNameNList, NList] 
                0x00000001b780a370 (    0x30) _OBJC_$_CLASS_METHODS_SecKeyP256Private [NameNList, MangledNameNList, NList] 
                0x00000001b780a3a0 (    0x90) _OBJC_$_INSTANCE_METHODS_SecKeyP256Private [NameNList, MangledNameNList, NList] 
                0x00000001b780a430 (    0x80) _OBJC_$_INSTANCE_METHODS_SecKeyP256Public [NameNList, MangledNameNList, NList] 
                0x00000001b780a4b0 (    0x48) _OBJC_$_CLASS_METHODS_GFTKeyWrapping [NameNList, MangledNameNList, NList] 
                0x00000001b780a4f8 (    0x48) _OBJC_$_CLASS_METHODS_NGMKeyValidator [NameNList, MangledNameNList, NList] 
                0x00000001b780a540 (    0x18) _OBJC_$_INSTANCE_METHODS_NSData(ValidateSize) [NameNList, MangledNameNList, NList] 
                0x00000001b780a558 (    0x18) _OBJC_$_INSTANCE_METHODS_NSMutableData(AppendWithSize) [NameNList, MangledNameNList, NList] 
                0x00000001b780a570 (    0x18) _OBJC_$_INSTANCE_METHODS_DHPublicKey [NameNList, MangledNameNList, NList] 
                0x00000001b780a588 (    0x38) _OBJC_$_INSTANCE_METHODS_SigningKey [NameNList, MangledNameNList, NList] 
                0x00000001b780a5c0 (    0x48) _OBJC_$_CLASS_METHODS_SecMessageLegacyFullIdentity(Migration) [NameNList, MangledNameNList, NList] 
                0x00000001b780a608 (   0x138) _OBJC_$_INSTANCE_METHODS_SecMessageLegacyFullIdentity(Migration) [NameNList, MangledNameNList, NList] 
                0x00000001b780a740 (    0x68) _OBJC_$_INSTANCE_METHODS_SecKeyRSAPrivate [NameNList, MangledNameNList, NList] 
                0x00000001b780a7a8 (    0x38) _OBJC_$_INSTANCE_METHODS_NGMGelatoPresenceSignatureFormatter [NameNList, MangledNameNList, NList] 
                0x00000001b780a7e0 (    0x18) _OBJC_$_CLASS_METHODS_NGMReplayManager [NameNList, MangledNameNList, NList] 
                0x00000001b780a7f8 (    0xd8) _OBJC_$_INSTANCE_METHODS_NGMReplayManager [NameNList, MangledNameNList, NList] 
                0x00000001b780a8d0 (    0x78) _OBJC_$_CLASS_METHODS_NGMTimeBasedEvaluations [NameNList, MangledNameNList, NList] 
                0x00000001b780a948 (    0x30) _OBJC_$_INSTANCE_METHODS_NGMTimeBasedEvaluations [NameNList, MangledNameNList, NList] 
                0x00000001b780a978 (    0x68) _OBJC_$_INSTANCE_METHODS_PublicKey [NameNList, MangledNameNList, NList] 
                0x00000001b780a9e0 (    0xb0) _OBJC_$_INSTANCE_METHODS_NGMPBLegacyKey [NameNList, MangledNameNList, NList] 
                0x00000001b780aa90 (   0x150) _OBJC_$_INSTANCE_METHODS_NGMPBDevicePreKey [NameNList, MangledNameNList, NList] 
                0x00000001b780abe0 (    0x18) _OBJC_$_CLASS_METHODS_NGMPBFullDeviceIdentity [NameNList, MangledNameNList, NList] 
                0x00000001b780abf8 (    0xe0) _OBJC_$_INSTANCE_METHODS_NGMPBFullDeviceIdentity [NameNList, MangledNameNList, NList] 
                0x00000001b780acd8 (   0x138) _OBJC_$_INSTANCE_METHODS_NGMPBOuterMessage [NameNList, MangledNameNList, NList] 
                0x00000001b780ae10 (    0xc8) _OBJC_$_INSTANCE_METHODS_NGMPBPublicDeviceIdentity [NameNList, MangledNameNList, NList] 
                0x00000001b780aed8 (    0xf0) _OBJC_$_INSTANCE_METHODS_NGMPBPublicDevicePrekey [NameNList, MangledNameNList, NList] 
                0x00000001b780afc8 (    0xf8) _OBJC_$_INSTANCE_METHODS_NGMPBP256Key [NameNList, MangledNameNList, NList] 
                0x00000001b780b0c0 (   0x120) _OBJC_$_INSTANCE_METHODS_NGMPBInnerMessage(Attributes) [NameNList, MangledNameNList, NList] 
                0x00000001b780b1e0 (    0x18) _OBJC_$_CLASS_METHODS_RegisteredPreKey(CoreDataProperties) [NameNList, MangledNameNList, NList] 
                0x00000001b780b1f8 (    0x18) _OBJC_$_CLASS_METHODS_SenderPublicIdentity(CoreDataProperties) [NameNList, MangledNameNList, NList] 
                0x00000001b780b210 (    0x18) _OBJC_$_CLASS_METHODS_SendingDestination(CoreDataProperties) [NameNList, MangledNameNList, NList] 
                0x00000001b780b228 (    0x20) _OBJC_$_CLASS_METHODS__TtC17MessageProtection26GLTKeyDiversificationSwift [NameNList, MangledNameNList, NList] 
                0x00000001b780b248 (    0x38) _OBJC_$_INSTANCE_METHODS__TtC17MessageProtection17GLTDiversifiedKey [NameNList, MangledNameNList, NList] 
                0x00000001b780b280 (    0x18) _OBJC_$_INSTANCE_METHODS__TtC17MessageProtection26GLTKeyDiversificationSwift [NameNList, MangledNameNList, NList] 
                0x00000001b780b298 (    0x38) _OBJC_$_CLASS_METHODS__TtC17MessageProtection13GFTKeyWrapper [NameNList, MangledNameNList, NList] 
                0x00000001b780b2d0 (    0x20) _OBJC_$_INSTANCE_METHODS__TtC17MessageProtection13GFTKeyWrapper [NameNList, MangledNameNList, NList] 
                0x00000001b780b2f0 (    0x18) _OBJC_$_CLASS_METHODS__TtC17MessageProtection17SKIncomingRatchet [NameNList, MangledNameNList, NList] 
                0x00000001b780b308 (    0x18) _OBJC_$_CLASS_METHODS__TtC17MessageProtection17SKOutgoingRatchet [NameNList, MangledNameNList, NList] 
                0x00000001b780b320 (    0x60) _OBJC_$_INSTANCE_METHODS__TtC17MessageProtection17SKIncomingRatchet [NameNList, MangledNameNList, NList] 
                0x00000001b780b380 (    0x68) _OBJC_$_INSTANCE_METHODS__TtC17MessageProtection17SKOutgoingRatchet [NameNList, MangledNameNList, NList] 
                0x00000001b780b3e8 (    0x18) _OBJC_$_INSTANCE_METHODS__TtC17MessageProtection9SKRatchet [NameNList, MangledNameNList, NList] 
                0x00000001b780b400 (    0x18) _OBJC_$_CLASS_METHODS__TtC17MessageProtection4HKDF [NameNList, MangledNameNList, NList] 
                0x00000001b780b418 (    0x14) _OBJC_$_INSTANCE_METHODS__TtC17MessageProtection4HKDF [NameNList, MangledNameNList, NList] 
            0x00000001b780b430 (  0x2731) __TEXT __cstring
            0x00000001b780db61 (  0x168e) __TEXT __oslogstring
            0x00000001b780f1f0 (   0xf76) __TEXT __const
                0x00000001b780f1f0 (    0x20) kIVBigEndian1 [NameNList, MangledNameNList, NList] 
                0x00000001b780f210 (    0x20) kIVBigEndian1 [NameNList, MangledNameNList, NList] 
                0x00000001b780f230 (     0x4) kMPTransportDefaultMaxCap [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b780f234 (     0x4) kMPTransportDefaultFirstThreshold [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b780f238 (     0x4) kMPTransportMessageFirstThreshold [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b780f23c (     0x4) kMPTransportMessageMaxCap [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b780f240 (     0x4) kMPStorageDefaultFirstThreshold [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b780f244 (     0x4) kMPStorageDefaultNextThreshold [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b780f248 (     0x4) kMPStorageDefaultMaxCap [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b780f24c (     0x4) kMPStorageMessageFirstThreshold [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b780f250 (     0x4) kMPStorageMessageNextThreshold [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b780f254 (    0x5c) kMPStorageMessageMaxCap [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b780f2b0 (     0x1) kProtectedFileHeader [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b780f2b1 (    0xf7) kIVZero [NameNList, MangledNameNList, NList] 
                0x00000001b780f3a8 (    0x2c) protocol conformance descriptor for CFStringRef [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b780f3d4 (    0x2c) protocol conformance descriptor for CFStringRef [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b780f400 (    0xec) protocol conformance descriptor for CFStringRef [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b780f4ec (    0xfc) protocol conformance descriptor for GLTKeyDiversificationError [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b780f5e8 (    0x28) protocol conformance descriptor for MPPB_SKOutgoingRatchet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b780f610 (    0x40) protocol conformance descriptor for MPPB_SKOutgoingRatchet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b780f650 (    0x28) protocol conformance descriptor for MPPB_SKOutgoingRatchet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b780f678 (    0x28) protocol conformance descriptor for MPPB_SKOutgoingRatchet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b780f6a0 (    0x38) protocol conformance descriptor for MPPB_SKOutgoingRatchet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b780f6d8 (    0x78) protocol conformance descriptor for MPPB_SKOutgoingRatchet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b780f750 (    0x28) protocol conformance descriptor for MPPB_SKIncomingRatchet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b780f778 (    0x40) protocol conformance descriptor for MPPB_SKIncomingRatchet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b780f7b8 (    0x28) protocol conformance descriptor for MPPB_SKIncomingRatchet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b780f7e0 (    0x28) protocol conformance descriptor for MPPB_SKIncomingRatchet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b780f808 (    0x38) protocol conformance descriptor for MPPB_SKIncomingRatchet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b780f840 (    0x78) protocol conformance descriptor for MPPB_SKIncomingRatchet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b780f8b8 (    0x28) protocol conformance descriptor for MPPB_RatchetState [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b780f8e0 (    0x40) protocol conformance descriptor for MPPB_RatchetState [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b780f920 (    0x28) protocol conformance descriptor for MPPB_RatchetState [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b780f948 (    0x28) protocol conformance descriptor for MPPB_RatchetState [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b780f970 (    0x38) protocol conformance descriptor for MPPB_RatchetState [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b780f9a8 (    0x28) protocol conformance descriptor for MPPB_KeyAndIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b780f9d0 (    0x40) protocol conformance descriptor for MPPB_KeyAndIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b780fa10 (    0x28) protocol conformance descriptor for MPPB_KeyAndIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b780fa38 (    0x28) protocol conformance descriptor for MPPB_KeyAndIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b780fa60 (    0x38) protocol conformance descriptor for MPPB_KeyAndIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b780fa98 (    0x78) protocol conformance descriptor for MPPB_KeyAndIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b780fb10 (    0x28) protocol conformance descriptor for MPPB_SKPaddedStatus [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b780fb38 (    0x40) protocol conformance descriptor for MPPB_SKPaddedStatus [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b780fb78 (    0x28) protocol conformance descriptor for MPPB_SKPaddedStatus [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b780fba0 (    0x28) protocol conformance descriptor for MPPB_SKPaddedStatus [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b780fbc8 (    0x38) protocol conformance descriptor for MPPB_SKPaddedStatus [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b780fc00 (    0x78) protocol conformance descriptor for MPPB_SKPaddedStatus [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b780fc78 (   0x11c) protocol conformance descriptor for MPPB_RatchetState [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b780fd94 (    0x40) protocol conformance descriptor for KeyWrappingErrors [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b780fdd4 (    0x28) protocol conformance descriptor for KeyWrappingErrors [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b780fdfc (    0x9c) protocol conformance descriptor for KeyWrappingErrors [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b780fe98 (    0x40) protocol conformance descriptor for SymmetricRatchetErrors [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b780fed8 (    0x28) protocol conformance descriptor for SymmetricRatchetErrors [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b780ff00 (    0x40) protocol conformance descriptor for SymmetricRatchetErrors [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b780ff40 (    0x74) __swift_reflection_version [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b780ffb4 (    0x40) protocol conformance descriptor for StatusKitErrors [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b780fff4 (    0x28) protocol conformance descriptor for StatusKitErrors [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781001c (    0x44) protocol conformance descriptor for StatusKitErrors [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810060 (    0x30) __unnamed_1 [NameNList, MangledNameNList, NList] 
                0x00000001b7810090 (    0x18) generic type metadata pattern for HKDFRatchet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b78100a8 (    0xbe) protocol conformance descriptor for HKDFRatchet<A> [PEXT, NameNList, MangledNameNList, NList] 
            0x00000001b7810168 (   0x228) __TEXT __gcc_except_tab
                0x00000001b7810168 (    0x14) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001b781017c (    0x34) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x00000001b78101b0 (    0x18) GCC_except_table10 [NameNList, MangledNameNList, NList] 
                0x00000001b78101c8 (    0x20) GCC_except_table20 [NameNList, MangledNameNList, NList] 
                0x00000001b78101e8 (    0x20) GCC_except_table32 [NameNList, MangledNameNList, NList] 
                0x00000001b7810208 (    0x90) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001b7810298 (    0x70) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x00000001b7810308 (    0x50) GCC_except_table17 [NameNList, MangledNameNList, NList] 
                0x00000001b7810358 (    0x28) GCC_except_table25 [NameNList, MangledNameNList, NList] 
                0x00000001b7810380 (    0x10) GCC_except_table0 [NameNList, MangledNameNList, NList] 
            0x00000001b7810390 (   0x21c) __TEXT __ustring
            0x00000001b78105ac (   0x4f0) __TEXT __constg_swiftt
                0x00000001b78105ac (     0xc) module descriptor  [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b78105b8 (    0x30) nominal type descriptor for SecKeyRef [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b78105e8 (    0x30) nominal type descriptor for CFStringRef [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810618 (    0x30) nominal type descriptor for CFErrorRef [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810648 (     0xc) module descriptor  [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810654 (     0xc) module descriptor  [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810660 (    0x34) nominal type descriptor for GLTDiversifiedKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810694 (     0x8) method descriptor for GLTDiversifiedKey.__allocating_init(diversifiedKey:trackingPreventionSalt:) [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781069c (    0x2c) nominal type descriptor for GLTKeyDiversificationSwift [EXT, NameNList, MangledNameNList, NList] 
                0x00000001b78106c8 (    0x1c) nominal type descriptor for GLTKeyDiversificationError [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b78106e4 (    0x28) nominal type descriptor for MPPB_RatchetState [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781070c (    0x28) nominal type descriptor for MPPB_KeyAndIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810734 (    0x28) nominal type descriptor for MPPB_SKPaddedStatus [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781075c (    0x28) nominal type descriptor for MPPB_SKIncomingRatchet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810784 (    0x28) nominal type descriptor for MPPB_SKOutgoingRatchet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b78107ac (    0x2c) nominal type descriptor for GFTKeyWrapper [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b78107d8 (    0x1c) nominal type descriptor for KeyWrappingErrors [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b78107f4 (     0xc) extension descriptor AES [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810800 (    0x1c) nominal type descriptor for AES.IV [EXT, NameNList, MangledNameNList, NList] 
                0x00000001b781081c (    0x1c) nominal type descriptor for AES.CTR [EXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810838 (    0x1c) nominal type descriptor for SymmetricRatchetErrors [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810854 (    0x2c) nominal type descriptor for SKRatchet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810880 (    0x40) nominal type descriptor for SKOutgoingRatchet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b78108c0 (     0x8) method descriptor for SKOutgoingRatchet.ratchet.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b78108c8 (     0x8) method descriptor for SKOutgoingRatchet.ratchet.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b78108d0 (     0x8) method descriptor for SKOutgoingRatchet.ratchet.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b78108d8 (     0x8) method descriptor for SKOutgoingRatchet.currentSubscriptionKey.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b78108e0 (     0x8) method descriptor for SKOutgoingRatchet.currentSubscriptionKey.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b78108e8 (     0x8) method descriptor for SKOutgoingRatchet.currentSubscriptionKey.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b78108f0 (     0x8) method descriptor for SKOutgoingRatchet.currentMessageKey.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b78108f8 (     0x8) method descriptor for SKOutgoingRatchet.currentMessageKey.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810900 (     0x8) method descriptor for SKOutgoingRatchet.currentMessageKey.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810908 (     0x8) method descriptor for SKOutgoingRatchet.__allocating_init(data:) [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810910 (     0x8) method descriptor for SKOutgoingRatchet.ratchetForward() [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810918 (     0x8) method descriptor for SKOutgoingRatchet.sealMessage(_:authenticating:) [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810920 (     0x8) method descriptor for SKOutgoingRatchet.currentSubscriptionKeys() [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810928 (     0x8) method descriptor for SKOutgoingRatchet.serializedData() [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810930 (     0x8) method descriptor for SKOutgoingRatchet.signingKeyIdentifier() [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810938 (    0x40) nominal type descriptor for SKIncomingRatchet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810978 (     0x8) method descriptor for SKIncomingRatchet.ratchet.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810980 (     0x8) method descriptor for SKIncomingRatchet.ratchet.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810988 (     0x8) method descriptor for SKIncomingRatchet.ratchet.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810990 (     0x8) method descriptor for SKIncomingRatchet.messageKeys.getter [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810998 (     0x8) method descriptor for SKIncomingRatchet.messageKeys.setter [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b78109a0 (     0x8) method descriptor for SKIncomingRatchet.messageKeys.modify [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b78109a8 (     0x8) method descriptor for SKIncomingRatchet.__allocating_init(data:) [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b78109b0 (     0x8) method descriptor for SKIncomingRatchet.__allocating_init(key:index:signingKey:) [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b78109b8 (     0x8) method descriptor for SKIncomingRatchet.openStatus(index:encryptedMessage:authenticating:signature:) [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b78109c0 (     0x8) method descriptor for SKIncomingRatchet.serializedData() [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b78109c8 (     0x8) method descriptor for SKIncomingRatchet.signingKeyIdentifier() [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b78109d0 (    0x1c) nominal type descriptor for StatusKitErrors [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b78109ec (    0x3c) nominal type descriptor for HKDFRatchet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810a28 (    0x28) nominal type descriptor for SymmetricRatchet [EXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810a50 (    0x2c) nominal type descriptor for HKDF [EXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810a7c (    0x10) protocol descriptor for SymmetricRatchetStep [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810a8c (    0x10) protocol requirements base descriptor for SymmetricRatchetStep [PEXT, NameNList, MangledNameNList, NList] 
            0x00000001b7810a9c (   0x3cf) __TEXT __swift5_typeref
                0x00000001b7810a9c (     0x8) associated conformance So11CFStringRefa14CoreFoundation9_CFObjectSCSH [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810aa4 (     0x8) associated conformance So11CFStringRefaSHSCSQ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810aac (     0xe) symbolic So8NSObjectC [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810aba (     0x6) symbolic _____ 17MessageProtection17GLTDiversifiedKeyC [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810ac0 (     0x6) symbolic _____ So9SecKeyRefa [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810ac6 (     0xc) symbolic So6NSDataC [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810ad2 (     0x6) symbolic _____ 17MessageProtection26GLTKeyDiversificationSwiftC [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810ad8 (    0x12) symbolic _____y______yptG s23_ContiguousArrayStorageC So11CFStringRefa [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810aea (    0x10) symbolic _____y_____ypG s18_DictionaryStorageC So11CFStringRefa [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810afa (     0xa) symbolic ______ypt So11CFStringRefa [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810b04 (     0x6) symbolic _____ 17MessageProtection26GLTKeyDiversificationErrorO [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810b0a (    0x1a) symbolic _____y_____GSg7cfError_t s9UnmanagedV So10CFErrorRefa [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810b24 (    0x18) symbolic _____3key______5indext 9CryptoKit12SymmetricKeyV s6UInt64V [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810b3c (     0x8) symbolic _____Sg 17MessageProtection16MPPB_KeyAndIndexV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810b44 (     0x8) symbolic _____Sg 9CryptoKit12SymmetricKeyV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810b4c (     0x8) symbolic _____Sg 17MessageProtection17MPPB_RatchetStateV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810b54 (    0x18) symbolic _____3key______5valuet s6UInt64V 9CryptoKit12SymmetricKeyV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810b6c (     0x6) symbolic _____ 17MessageProtection16MPPB_KeyAndIndexV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810b72 (     0x6) symbolic _____ 21InternalSwiftProtobuf14UnknownStorageV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810b78 (     0x8) symbolic _____Sg 10Foundation4DataV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810b80 (     0x8) symbolic _____Sg s6UInt64V [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810b88 (     0x6) symbolic _____ 17MessageProtection17MPPB_RatchetStateV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810b8e (     0xa) symbolic Say_____G 17MessageProtection16MPPB_KeyAndIndexV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810b98 (     0x8) associated conformance 17MessageProtection22MPPB_SKOutgoingRatchetVSHAASQ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810ba0 (     0x8) associated conformance 17MessageProtection22MPPB_SKOutgoingRatchetV21InternalSwiftProtobuf01_A18ImplementationBaseAaD0A0 [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810ba8 (     0x8) associated conformance 17MessageProtection22MPPB_SKOutgoingRatchetV21InternalSwiftProtobuf01_A18ImplementationBaseAASH [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810bb0 (     0x8) associated conformance 17MessageProtection22MPPB_SKOutgoingRatchetV21InternalSwiftProtobuf0A0AAs28CustomDebugStringConvertible [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810bb8 (     0x8) associated conformance 17MessageProtection22MPPB_SKIncomingRatchetVSHAASQ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810bc0 (     0x8) associated conformance 17MessageProtection22MPPB_SKIncomingRatchetV21InternalSwiftProtobuf01_A18ImplementationBaseAaD0A0 [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810bc8 (     0x8) associated conformance 17MessageProtection22MPPB_SKIncomingRatchetV21InternalSwiftProtobuf01_A18ImplementationBaseAASH [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810bd0 (     0x8) associated conformance 17MessageProtection22MPPB_SKIncomingRatchetV21InternalSwiftProtobuf0A0AAs28CustomDebugStringConvertible [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810bd8 (     0x8) associated conformance 17MessageProtection17MPPB_RatchetStateVSHAASQ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810be0 (     0x8) associated conformance 17MessageProtection17MPPB_RatchetStateV21InternalSwiftProtobuf01_A18ImplementationBaseAaD0A0 [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810be8 (     0x8) associated conformance 17MessageProtection17MPPB_RatchetStateV21InternalSwiftProtobuf01_A18ImplementationBaseAASH [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810bf0 (     0x8) associated conformance 17MessageProtection16MPPB_KeyAndIndexVSHAASQ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810bf8 (     0x8) associated conformance 17MessageProtection16MPPB_KeyAndIndexV21InternalSwiftProtobuf01_A18ImplementationBaseAaD0A0 [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810c00 (     0x8) associated conformance 17MessageProtection16MPPB_KeyAndIndexV21InternalSwiftProtobuf01_A18ImplementationBaseAASH [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810c08 (     0x8) associated conformance 17MessageProtection16MPPB_KeyAndIndexV21InternalSwiftProtobuf0A0AAs28CustomDebugStringConvertible [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810c10 (     0x8) associated conformance 17MessageProtection19MPPB_SKPaddedStatusVSHAASQ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810c18 (     0x8) associated conformance 17MessageProtection19MPPB_SKPaddedStatusV21InternalSwiftProtobuf01_A18ImplementationBaseAaD0A0 [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810c20 (     0x8) associated conformance 17MessageProtection19MPPB_SKPaddedStatusV21InternalSwiftProtobuf01_A18ImplementationBaseAASH [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810c28 (     0x8) associated conformance 17MessageProtection19MPPB_SKPaddedStatusV21InternalSwiftProtobuf0A0AAs28CustomDebugStringConvertible [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810c30 (     0x8) associated conformance 17MessageProtection17MPPB_RatchetStateV21InternalSwiftProtobuf0A0AAs28CustomDebugStringConvertible [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810c38 (    0x10) symbolic _____y______pG s23_ContiguousArrayStorageC 21InternalSwiftProtobuf7MessageP [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810c48 (     0x8) symbolic ______p 21InternalSwiftProtobuf7MessageP [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810c50 (    0x12) symbolic _____ySi______tG s23_ContiguousArrayStorageC 21InternalSwiftProtobuf8_NameMapV0G11DescriptionO [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810c62 (     0xa) symbolic Si______t 21InternalSwiftProtobuf8_NameMapV0D11DescriptionO [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810c6c (     0xc) symbolic _____Sg_ABt 17MessageProtection16MPPB_KeyAndIndexV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810c78 (     0xe) symbolic _____y_____G s23_ContiguousArrayStorageC 17MessageProtection16MPPB_KeyAndIndexV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810c86 (     0x6) symbolic _____ 17MessageProtection22MPPB_SKOutgoingRatchetV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810c8c (     0x6) symbolic _____ 17MessageProtection22MPPB_SKIncomingRatchetV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810c92 (     0x6) symbolic _____ 17MessageProtection19MPPB_SKPaddedStatusV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810c98 (     0x6) symbolic _____ 17MessageProtection13GFTKeyWrapperC [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810c9e (     0x8) symbolic _____Sg 9CryptoKit12SharedSecretV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810ca6 (     0x8) symbolic _____Sg 9CryptoKit4P256O12KeyAgreementO06PublicD0V [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810cae (     0xe) symbolic _____y_____G s23_ContiguousArrayStorageC s5UInt8V [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810cbc (     0xa) symbolic Say_____G s5UInt8V [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810cc6 (     0x8) symbolic _____Sg 9CryptoKit4P256O12KeyAgreementO07PrivateD0V [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810cce (    0x10) symbolic _____y______pG s23_ContiguousArrayStorageC s7CVarArgP [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810cde (     0x6) symbolic SvSg [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810ce4 (     0x6) symbolic _____ 17MessageProtection17KeyWrappingErrorsO [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810cea (     0x8) associated conformance 17MessageProtection17KeyWrappingErrorsOSHAASQ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810cf2 (     0x6) symbolic _____ 9CryptoKit3AESO [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810cf8 (     0x6) symbolic _____ 9CryptoKit3AESO17MessageProtectionE2IVV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810cfe (     0x6) symbolic _____ 10Foundation4DataV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810d04 (     0x4) symbolic Si [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810d08 (     0x6) symbolic _____ 9CryptoKit3AESO17MessageProtectionE3CTRO [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810d0e (     0x8) symbolic ______p 10Foundation15ContiguousBytesP [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810d16 (     0xa) symbolic ______pSg 10Foundation15ContiguousBytesP [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810d20 (     0x6) symbolic _____ 17MessageProtection22SymmetricRatchetErrorsO [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810d26 (     0x8) associated conformance 17MessageProtection22SymmetricRatchetErrorsOSHAASQ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810d2e (     0x6) symbolic _____ 17MessageProtection9SKRatchetC [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810d34 (     0x6) symbolic _____ 17MessageProtection17SKOutgoingRatchetC [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810d3a (     0x6) symbolic _____ 17MessageProtection16SymmetricRatchetV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810d40 (     0x6) symbolic _____ 9CryptoKit4P256O7SigningO10PrivateKeyV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810d46 (     0x6) symbolic _____ 17MessageProtection17SKIncomingRatchetC [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810d4c (     0x6) symbolic _____ 9CryptoKit4P256O7SigningO9PublicKeyV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810d52 (    0x10) symbolic SDy__________G s6UInt16V 9CryptoKit12SymmetricKeyV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810d62 (    0x18) symbolic _____3key______5valuet s6UInt16V 9CryptoKit12SymmetricKeyV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810d7a (     0x8) symbolic _____Sg 17MessageProtection19MPPB_SKPaddedStatusV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810d82 (     0x8) symbolic _____Sg 9CryptoKit3AESO3GCMO9SealedBoxV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810d8a (     0x8) symbolic ______p s5ErrorP [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810d92 (    0x12) symbolic _____y__________G s18_DictionaryStorageC s6UInt16V 9CryptoKit12SymmetricKeyV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810da4 (    0x12) symbolic _____y__________G s18_DictionaryStorageC s6UInt64V 9CryptoKit12SymmetricKeyV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810db6 (     0xe) symbolic _____y_____G 17MessageProtection11HKDFRatchetV 9CryptoKit6SHA256V [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810dc4 (     0x8) symbolic _____Sg 17MessageProtection22MPPB_SKIncomingRatchetV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810dcc (     0x8) symbolic _____Sg 9CryptoKit3AESO3GCMO5NonceV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810dd4 (    0x1a) symbolic _____3key______5indextSg 9CryptoKit12SymmetricKeyV s6UInt64V [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810dee (     0x8) symbolic _____Sg 17MessageProtection22MPPB_SKOutgoingRatchetV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810df6 (     0x6) symbolic _____ 17MessageProtection15StatusKitErrorsO [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810dfc (     0x8) associated conformance 17MessageProtection15StatusKitErrorsOSHAASQ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810e04 (     0x2) symbolic x [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810e06 (     0x6) symbolic _____ 17MessageProtection11HKDFRatchetV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810e0c (     0x6) symbolic SiSg [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810e12 (     0xe) symbolic ___________t 9CryptoKit12SymmetricKeyV s6UInt64V [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810e20 (    0x10) symbolic SDy__________G s6UInt64V 9CryptoKit12SymmetricKeyV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810e30 (     0x8) symbolic ______p 17MessageProtection20SymmetricRatchetStepP [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810e38 (     0x6) symbolic _____ 17MessageProtection4HKDFC [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7810e3e (    0x2d) symbolic $s17MessageProtection20SymmetricRatchetStepP [PEXT, NameNList, MangledNameNList, NList] 
            0x00000001b7810e6c (    0xb0) __TEXT __swift5_proto
            0x00000001b7810f1c (    0x5c) __TEXT __swift5_types
            0x00000001b7810f80 (   0x4ee) __TEXT __swift5_reflstr
            0x00000001b7811470 (   0x414) __TEXT __swift5_fieldmd
                0x00000001b7811470 (    0x28) reflection metadata field descriptor GLTDiversifiedKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7811498 (    0x10) reflection metadata field descriptor GLTKeyDiversificationSwift [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b78114a8 (    0x4c) reflection metadata field descriptor GLTKeyDiversificationError [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b78114f4 (    0x34) reflection metadata field descriptor MPPB_KeyAndIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7811528 (    0x34) reflection metadata field descriptor MPPB_RatchetState [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781155c (    0x4c) reflection metadata field descriptor MPPB_SKOutgoingRatchet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b78115a8 (    0x40) reflection metadata field descriptor MPPB_SKIncomingRatchet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b78115e8 (    0x34) reflection metadata field descriptor MPPB_SKPaddedStatus [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781161c (    0x10) reflection metadata field descriptor GFTKeyWrapper [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781162c (    0x64) reflection metadata field descriptor KeyWrappingErrors [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7811690 (    0x28) reflection metadata field descriptor AES.IV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b78116b8 (    0x10) reflection metadata field descriptor AES.CTR [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b78116c8 (    0x40) reflection metadata field descriptor SymmetricRatchetErrors [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7811708 (    0x10) reflection metadata field descriptor SKRatchet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7811718 (    0x40) reflection metadata field descriptor SKOutgoingRatchet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7811758 (    0x34) reflection metadata field descriptor SKIncomingRatchet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781178c (    0x70) reflection metadata field descriptor StatusKitErrors [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b78117fc (    0x34) reflection metadata field descriptor HKDFRatchet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7811830 (    0x34) reflection metadata field descriptor SymmetricRatchet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7811864 (    0x10) reflection metadata field descriptor HKDF [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7811874 (    0x10) reflection metadata field descriptor SymmetricRatchetStep [PEXT, NameNList, MangledNameNList, NList] 
            0x00000001b7811884 (    0x40) __TEXT __swift5_capture
            0x00000001b78118c4 (     0x4) __TEXT __swift5_protos
            0x00000001b78118c8 (  0x1e18) __TEXT __unwind_info
            0x00000001b78136e0 (   0xef8) __TEXT __eh_frame
            0x00000001b78145d8 (   0x510) __TEXT __objc_classname
            0x00000001b7814ae8 (  0x3226) __TEXT __objc_methname
            0x00000001b7817d0e (   0xaea) __TEXT __objc_methtype
            0x00000001b7818800 (  0x2800) __TEXT __objc_stubs
                0x00000001b7818800 (    0x20) objc_msgSend$URL [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7818820 (    0x20) objc_msgSend$URLForResource:withExtension: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7818840 (    0x20) objc_msgSend$absoluteString [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7818860 (    0x20) objc_msgSend$addObject: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7818880 (    0x20) objc_msgSend$addPrekeys: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b78188a0 (    0x20) objc_msgSend$allocWithZone: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b78188c0 (    0x20) objc_msgSend$appendBytes:length: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b78188e0 (    0x20) objc_msgSend$appendData: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7818900 (    0x20) objc_msgSend$appendDataAndSize: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7818920 (    0x20) objc_msgSend$appendString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7818940 (    0x20) objc_msgSend$array [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7818960 (    0x20) objc_msgSend$arrayWithCapacity: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7818980 (    0x20) objc_msgSend$arrayWithObjects: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b78189a0 (    0x20) objc_msgSend$arrayWithObjects:count: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b78189c0 (    0x20) objc_msgSend$asRef [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b78189e0 (    0x20) objc_msgSend$attributes [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7818a00 (    0x20) objc_msgSend$attributesOfItemAtPath:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7818a20 (    0x20) objc_msgSend$base64EncodedStringWithOptions: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7818a40 (    0x20) objc_msgSend$boolForKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7818a60 (    0x20) objc_msgSend$bufferData [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7818a80 (    0x20) objc_msgSend$bundleWithIdentifier: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7818aa0 (    0x20) objc_msgSend$bytes [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7818ac0 (    0x20) objc_msgSend$clearPrekeys [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7818ae0 (    0x20) objc_msgSend$code [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7818b00 (    0x20) objc_msgSend$computeDestinationHashForIncomingMessageFrom:toLocalKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7818b20 (    0x20) objc_msgSend$computeDestinationHashForOutgoingMessageTo:withLocalKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7818b40 (    0x20) objc_msgSend$copyWithZone: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7818b60 (    0x20) objc_msgSend$count [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7818b80 (    0x20) objc_msgSend$countByEnumeratingWithState:objects:count: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7818ba0 (    0x20) objc_msgSend$counter [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7818bc0 (    0x20) objc_msgSend$counterForDestinationWithIdentityKey:sendingIdentity:error:success: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7818be0 (    0x20) objc_msgSend$crypt:key:IV: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7818c00 (    0x20) objc_msgSend$currentSubscriptionKeys [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7818c20 (    0x20) objc_msgSend$data [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7818c40 (    0x20) objc_msgSend$dataRepresentation [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7818c60 (    0x20) objc_msgSend$dataRepresentationWithError: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7818c80 (    0x20) objc_msgSend$dataUsingEncoding: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7818ca0 (    0x20) objc_msgSend$dataWithBytes:length: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7818cc0 (    0x20) objc_msgSend$dataWithCapacity: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7818ce0 (    0x20) objc_msgSend$dataWithData: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7818d00 (    0x20) objc_msgSend$dataWithLength: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7818d20 (    0x20) objc_msgSend$date [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7818d40 (    0x20) objc_msgSend$dateWithTimeIntervalSince1970: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7818d60 (    0x20) objc_msgSend$dbNameFromProcess [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7818d80 (    0x20) objc_msgSend$debugDescriptionForAction: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7818da0 (    0x20) objc_msgSend$decrypt:key:IV: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7818dc0 (    0x20) objc_msgSend$decrypt:using:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7818de0 (    0x20) objc_msgSend$decryptData:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7818e00 (    0x20) objc_msgSend$decryptMessage:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7818e20 (    0x20) objc_msgSend$defaultManager [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7818e40 (    0x20) objc_msgSend$defaultProtectionClassForPlatform [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7818e60 (    0x20) objc_msgSend$delete [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7818e80 (    0x20) objc_msgSend$deleteExpiredSendingDestinations [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7818ea0 (    0x20) objc_msgSend$deleteItemWithPersistentRef: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7818ec0 (    0x20) objc_msgSend$deleteKeyWithTag: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7818ee0 (    0x20) objc_msgSend$deleteMigratedKeys [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7818f00 (    0x20) objc_msgSend$deleteObject: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7818f20 (    0x20) objc_msgSend$deleteReceivingCountersForKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7818f40 (    0x20) objc_msgSend$deriveKeyWith:salt:outputSize: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7818f60 (    0x20) objc_msgSend$description [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7818f80 (    0x20) objc_msgSend$devicePrekeys [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7818fa0 (    0x20) objc_msgSend$deviceSigningKey [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7818fc0 (    0x20) objc_msgSend$dhKey [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7818fe0 (    0x20) objc_msgSend$dictionary [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819000 (    0x20) objc_msgSend$dictionaryRepresentation [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819020 (    0x20) objc_msgSend$dictionaryWithObjects:forKeys:count: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819040 (    0x20) objc_msgSend$diversifiedKey [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819060 (    0x20) objc_msgSend$diversifyPublicKey:trackingPreventionSalt:withDocumentIdentifier:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819080 (    0x20) objc_msgSend$diversifyWithPrivateKey:docId:trackingPreventionSalt:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b78190a0 (    0x20) objc_msgSend$diversifyWithPublicKey:trackingPreventionSalt:docId:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b78190c0 (    0x20) objc_msgSend$echnidaRegistration [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b78190e0 (    0x20) objc_msgSend$encrypt:key:IV: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819100 (    0x20) objc_msgSend$encrypt:to:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819120 (    0x20) objc_msgSend$encryptData: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819140 (    0x20) objc_msgSend$encryptData:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819160 (    0x20) objc_msgSend$encryptedPayload [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819180 (    0x20) objc_msgSend$encryptionKey [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b78191a0 (    0x20) objc_msgSend$encryptionKeyPersistentRef [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b78191c0 (    0x20) objc_msgSend$encryptionSize [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b78191e0 (    0x20) objc_msgSend$enumerateObjectsUsingBlock: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819200 (    0x20) objc_msgSend$environment [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819220 (    0x20) objc_msgSend$ephemeralPubKey [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819240 (    0x20) objc_msgSend$errorWithDomain:code:userInfo: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819260 (    0x20) objc_msgSend$executeFetchRequest:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819280 (    0x20) objc_msgSend$fetchRequest [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b78192a0 (    0x20) objc_msgSend$fetchRequestWithEntityName: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b78192c0 (    0x20) objc_msgSend$firstObject [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b78192e0 (    0x20) objc_msgSend$formatOutgoingInnerMessageWithPayload:attributes:destinationIdentity:sendingIdentity:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819300 (    0x20) objc_msgSend$formatOutgoingMessageWithEncryptedPayload:ephemeral:signature:keyValidator: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819320 (    0x20) objc_msgSend$generate [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819340 (    0x20) objc_msgSend$generateNewKeyWithAccess:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819360 (    0x20) objc_msgSend$generateNewKeyWithAccess:forceNoSEP:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819380 (    0x20) objc_msgSend$generateWithAccessControl: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b78193a0 (    0x20) objc_msgSend$getBytes:range: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b78193c0 (    0x20) objc_msgSend$getPrivateKeyRefWithError: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b78193e0 (    0x20) objc_msgSend$hasCounter [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819400 (    0x20) objc_msgSend$hasKeyData [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819420 (    0x20) objc_msgSend$hasKeychainTag [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819440 (    0x20) objc_msgSend$hasKtGossipData [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819460 (    0x20) objc_msgSend$hash [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819480 (    0x20) objc_msgSend$identity [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b78194a0 (    0x20) objc_msgSend$identityData [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b78194c0 (    0x20) objc_msgSend$identityFromV2Bytes:size:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b78194e0 (    0x20) objc_msgSend$identityWithAccess:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819500 (    0x20) objc_msgSend$identityWithDataRepresentation:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819520 (    0x20) objc_msgSend$identityWithIdentityData:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819540 (    0x20) objc_msgSend$identityWithIdentityData:prekeyData:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819560 (    0x20) objc_msgSend$init [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819580 (    0x20) objc_msgSend$initFileURLWithPath: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b78195a0 (    0x20) objc_msgSend$initRemotePrekeyWithPublicPrekeyPB:signedBy:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b78195c0 (    0x20) objc_msgSend$initTicketWithSigningKey:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b78195e0 (    0x20) objc_msgSend$initToSignKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819600 (    0x20) objc_msgSend$initWithApplicationData: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819620 (    0x20) objc_msgSend$initWithBytes:length: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819640 (    0x20) objc_msgSend$initWithCTKTokenOID:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819660 (    0x20) objc_msgSend$initWithCapacity: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819680 (    0x20) objc_msgSend$initWithConcurrencyType: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b78196a0 (    0x20) objc_msgSend$initWithContentsOfURL: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b78196c0 (    0x20) objc_msgSend$initWithContext: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b78196e0 (    0x20) objc_msgSend$initWithDHOutput:prekeyPub:ephemeralPub:recipientPub:ciphertext: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819700 (    0x20) objc_msgSend$initWithData: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819720 (    0x20) objc_msgSend$initWithData:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819740 (    0x20) objc_msgSend$initWithData:upperBufferIndex: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819760 (    0x20) objc_msgSend$initWithEchnidaRegistration:signingKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819780 (    0x20) objc_msgSend$initWithEncryptionKey:signingKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b78197a0 (    0x20) objc_msgSend$initWithEncryptionKeyData:signingKeyData: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b78197c0 (    0x20) objc_msgSend$initWithEncryptionSecKey:signingSecKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b78197e0 (    0x20) objc_msgSend$initWithKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819800 (    0x20) objc_msgSend$initWithKey:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819820 (    0x20) objc_msgSend$initWithKey:index:signingKey:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819840 (    0x20) objc_msgSend$initWithKey:trackingPreventionSalt: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819860 (    0x20) objc_msgSend$initWithKeychainTag:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819880 (    0x20) objc_msgSend$initWithLength: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b78198a0 (    0x20) objc_msgSend$initWithName:managedObjectModel: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b78198c0 (    0x20) objc_msgSend$initWithPBPrekey:verifySignedBy:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b78198e0 (    0x20) objc_msgSend$initWithPrekeySignedBy:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819900 (    0x20) objc_msgSend$initWithProtobufData: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819920 (    0x20) objc_msgSend$initWithProtobufferData:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819940 (    0x20) objc_msgSend$initWithPublicKey:signature:timestamp: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819960 (    0x20) objc_msgSend$initWithPublicPrekey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819980 (    0x20) objc_msgSend$initWithSecKeyRef: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b78199a0 (    0x20) objc_msgSend$initWithSigningKey:devicePrekeys: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b78199c0 (    0x20) objc_msgSend$initWithSuiteName: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b78199e0 (    0x20) objc_msgSend$initWithURL: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819a00 (    0x20) objc_msgSend$isBATS [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819a20 (    0x20) objc_msgSend$isEqual: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819a40 (    0x20) objc_msgSend$isEqualToData: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819a60 (    0x20) objc_msgSend$isEqualToString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819a80 (    0x20) objc_msgSend$isMemberOfClass: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819aa0 (    0x20) objc_msgSend$isMigratedV2Key [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819ac0 (    0x20) objc_msgSend$isRunningTests [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819ae0 (    0x20) objc_msgSend$isValidKeyValidator:receiversIdentity:sendersIdentity:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819b00 (    0x20) objc_msgSend$isValidSigningDestination [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819b20 (    0x20) objc_msgSend$isValidlySignedBy:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819b40 (    0x20) objc_msgSend$isVersionSupported: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819b60 (    0x20) objc_msgSend$isXCTest [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819b80 (    0x20) objc_msgSend$key [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819ba0 (    0x20) objc_msgSend$keyAgreement:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819bc0 (    0x20) objc_msgSend$keyAgreement:error:isRetry: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819be0 (    0x20) objc_msgSend$keyAgreementWithPublicKey:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819c00 (    0x20) objc_msgSend$keyData [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819c20 (    0x20) objc_msgSend$keyIdentifier [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819c40 (    0x20) objc_msgSend$keyStore [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819c60 (    0x20) objc_msgSend$keyValidator [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819c80 (    0x20) objc_msgSend$keyValidatorWithReceiversIdentity:sendersIdentity: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819ca0 (    0x20) objc_msgSend$keychainData [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819cc0 (    0x20) objc_msgSend$keychainTag [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819ce0 (    0x20) objc_msgSend$keystore [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819d00 (    0x20) objc_msgSend$ktGossipData [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819d20 (    0x20) objc_msgSend$lastObject [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819d40 (    0x20) objc_msgSend$length [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819d60 (    0x20) objc_msgSend$lengthValidatedBuffer [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819d80 (    0x20) objc_msgSend$loadPersistentStoresWithCompletionHandler: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819da0 (    0x20) objc_msgSend$logDatabaseCreationDate: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819dc0 (    0x20) objc_msgSend$maxForwardRatchetDelta [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819de0 (    0x20) objc_msgSend$mergeFrom: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819e00 (    0x20) objc_msgSend$message [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819e20 (    0x20) objc_msgSend$mutableBytes [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819e40 (    0x20) objc_msgSend$mutableCopy [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819e60 (    0x20) objc_msgSend$now [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819e80 (    0x20) objc_msgSend$nowDate [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819ea0 (    0x20) objc_msgSend$numberWithDouble: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819ec0 (    0x20) objc_msgSend$numberWithUnsignedInt: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819ee0 (    0x20) objc_msgSend$objectAtIndex: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819f00 (    0x20) objc_msgSend$objectAtIndexedSubscript: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819f20 (    0x20) objc_msgSend$objectContextWithError: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819f40 (    0x20) objc_msgSend$objectForKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819f60 (    0x20) objc_msgSend$objectForKeyedSubscript: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819f80 (    0x20) objc_msgSend$oldestDateAllowedToSendTo [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819fa0 (    0x20) objc_msgSend$openStatusWithIndex:encryptedMessage:authenticating:signature:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819fc0 (    0x20) objc_msgSend$padMessage:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b7819fe0 (    0x20) objc_msgSend$pathExtension [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781a000 (    0x20) objc_msgSend$pathWithComponents: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781a020 (    0x20) objc_msgSend$pbDevicePrekey [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781a040 (    0x20) objc_msgSend$performBlockAndWait: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781a060 (    0x20) objc_msgSend$persistentContainerWithError: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781a080 (    0x20) objc_msgSend$persistentStoreCoordinator [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781a0a0 (    0x20) objc_msgSend$persistentStoreDescription [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781a0c0 (    0x20) objc_msgSend$populateIdentity:withEncryptionKeyFromPersistentRef:size: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781a0e0 (    0x20) objc_msgSend$populateIdentity:withSigningKeyFromPersistentRef:size: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781a100 (    0x20) objc_msgSend$postMigrationKeychainCleanup [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781a120 (    0x20) objc_msgSend$predicateWithFormat: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781a140 (    0x20) objc_msgSend$prekey [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781a160 (    0x20) objc_msgSend$prekeyCanBeDeleted: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781a180 (    0x20) objc_msgSend$prekeyData [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781a1a0 (    0x20) objc_msgSend$prekeyPublic [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781a1c0 (    0x20) objc_msgSend$prekeyShouldBeRolled: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781a1e0 (    0x20) objc_msgSend$prekeySignature [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781a200 (    0x20) objc_msgSend$prekeys [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781a220 (    0x20) objc_msgSend$prekeysAtIndex: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781a240 (    0x20) objc_msgSend$prekeysCount [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781a260 (    0x20) objc_msgSend$privateKeyBlob [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781a280 (    0x20) objc_msgSend$processFetchRequestAndValidate:counter:commit:theirIdentity:prekey:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781a2a0 (    0x20) objc_msgSend$processIncomingCounter: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781a2c0 (    0x20) objc_msgSend$processInfo [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781a2e0 (    0x20) objc_msgSend$processName [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781a300 (    0x20) objc_msgSend$protobuffer [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781a320 (    0x20) objc_msgSend$publicIDCanonicalHash [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781a340 (    0x20) objc_msgSend$publicIDHash [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781a360 (    0x20) objc_msgSend$publicIdentity [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781a380 (    0x20) objc_msgSend$publicKey [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781a3a0 (    0x20) objc_msgSend$publicKeyRef [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781a3c0 (    0x20) objc_msgSend$publicPrekey [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781a3e0 (    0x20) objc_msgSend$rangeOnPublicKey [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781a400 (    0x20) objc_msgSend$ratchet [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781a420 (    0x20) objc_msgSend$ratchetForward [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781a440 (    0x20) objc_msgSend$registeredPrekeyForNGMPrekey:objectContext: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781a460 (    0x20) objc_msgSend$registrationInfo [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781a480 (    0x20) objc_msgSend$removeAllObjects [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781a4a0 (    0x20) objc_msgSend$removeObjectsInArray: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781a4c0 (    0x20) objc_msgSend$replaceBytesInRange:withBytes: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781a4e0 (    0x20) objc_msgSend$requiresMigration [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781a500 (    0x20) objc_msgSend$reverseObjectEnumerator [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781a520 (    0x20) objc_msgSend$save: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781a540 (    0x20) objc_msgSend$sealMessage:authenticating:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781a560 (    0x20) objc_msgSend$sealMessage:guid:sendingURI:sendingPushToken:receivingURI:receivingPushToken:forceSizeOptimizations:resetState:encryptedAttributes:signedByFullIdentity:errors: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781a580 (    0x20) objc_msgSend$sealMessage:withEncryptedAttributes:signedByFullIdentity:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781a5a0 (    0x20) objc_msgSend$secKeyRef [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781a5c0 (    0x20) objc_msgSend$serializedData [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781a5e0 (    0x20) objc_msgSend$setBool:forKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781a600 (    0x20) objc_msgSend$setCounter: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781a620 (    0x20) objc_msgSend$setDate: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781a640 (    0x20) objc_msgSend$setDebugInfo: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781a660 (    0x20) objc_msgSend$setDestinationHash: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781a680 (    0x20) objc_msgSend$setDevicePrekeys: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781a6a0 (    0x20) objc_msgSend$setDeviceSigningKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781a6c0 (    0x20) objc_msgSend$setDhKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781a6e0 (    0x20) objc_msgSend$setEncryptedPayload: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781a700 (    0x20) objc_msgSend$setEncryptionKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781a720 (    0x20) objc_msgSend$setEncryptionKeyPersistentRef: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781a740 (    0x20) objc_msgSend$setEphemeralPubKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781a760 (    0x20) objc_msgSend$setIsMigratedV2Key: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781a780 (    0x20) objc_msgSend$setKeyData: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781a7a0 (    0x20) objc_msgSend$setKeyValidator: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781a7c0 (    0x20) objc_msgSend$setKeychainTag: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781a7e0 (    0x20) objc_msgSend$setKeystore: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781a800 (    0x20) objc_msgSend$setKtGossipData: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781a820 (    0x20) objc_msgSend$setMessage: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781a840 (    0x20) objc_msgSend$setMessagedKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781a860 (    0x20) objc_msgSend$setObject:forKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781a880 (    0x20) objc_msgSend$setObject:forKeyedSubscript: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781a8a0 (    0x20) objc_msgSend$setOption:forKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781a8c0 (    0x20) objc_msgSend$setPersistentStoreCoordinator: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781a8e0 (    0x20) objc_msgSend$setPersistentStoreDescriptions: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781a900 (    0x20) objc_msgSend$setPredicate: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781a920 (    0x20) objc_msgSend$setPrekey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781a940 (    0x20) objc_msgSend$setPrekeySignature: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781a960 (    0x20) objc_msgSend$setRatchet: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781a980 (    0x20) objc_msgSend$setRegistrationDate: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781a9a0 (    0x20) objc_msgSend$setSecKeyRef: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781a9c0 (    0x20) objc_msgSend$setSecondaryMessage: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781a9e0 (    0x20) objc_msgSend$setSecondaryPrekey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781aa00 (    0x20) objc_msgSend$setSecondaryPrivateKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781aa20 (    0x20) objc_msgSend$setSecondaryRegistrationData: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781aa40 (    0x20) objc_msgSend$setShouldAddStoreAsynchronously: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781aa60 (    0x20) objc_msgSend$setSignature: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781aa80 (    0x20) objc_msgSend$setSigningKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781aaa0 (    0x20) objc_msgSend$setSigningKeyPersistentRef: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781aac0 (    0x20) objc_msgSend$setSkippedCounters: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781aae0 (    0x20) objc_msgSend$setTag: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781ab00 (    0x20) objc_msgSend$setTimestamp: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781ab20 (    0x20) objc_msgSend$setUpperBufferIndex: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781ab40 (    0x20) objc_msgSend$setValidOutgoingCounter: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781ab60 (    0x20) objc_msgSend$sharedManager [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781ab80 (    0x20) objc_msgSend$sign:forType:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781aba0 (    0x20) objc_msgSend$signData:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781abc0 (    0x20) objc_msgSend$signDataWithFormatter:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781abe0 (    0x20) objc_msgSend$signature [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781ac00 (    0x20) objc_msgSend$signedData [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781ac20 (    0x20) objc_msgSend$signingKey [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781ac40 (    0x20) objc_msgSend$signingKeyIdentifier [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781ac60 (    0x20) objc_msgSend$signingKeyPersistentRef [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781ac80 (    0x20) objc_msgSend$skippedCounters [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781aca0 (    0x20) objc_msgSend$string [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781acc0 (    0x20) objc_msgSend$stringByAppendingString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781ace0 (    0x20) objc_msgSend$stringWithFormat: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781ad00 (    0x20) objc_msgSend$subdataWithRange: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781ad20 (    0x20) objc_msgSend$supportedVersion [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781ad40 (    0x20) objc_msgSend$timeIntervalAllowedForAction: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781ad60 (    0x20) objc_msgSend$timeIntervalSince1970 [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781ad80 (    0x20) objc_msgSend$timestamp [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781ada0 (    0x20) objc_msgSend$trackingPreventionSalt [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781adc0 (    0x20) objc_msgSend$unpadMessage:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781ade0 (    0x20) objc_msgSend$unsealMessage:signedByPublicIdentity:decryptionBlock: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781ae00 (    0x20) objc_msgSend$unsealMessageAndAttributes:guid:sendingURI:sendingPushToken:receivingURI:receivingPushToken:signedByPublicIdentity:decryptionBlock: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781ae20 (    0x20) objc_msgSend$unsealMessageAndAttributes:signedByPublicIdentity:decryptionBlock: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781ae40 (    0x20) objc_msgSend$unwrapWrappedSeed:legacy:using:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781ae60 (    0x20) objc_msgSend$upperBufferIndex [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781ae80 (    0x20) objc_msgSend$upper_buffer_index [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781aea0 (    0x20) objc_msgSend$validOutgoingCounter [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781aec0 (    0x20) objc_msgSend$valid_values_buffer [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781aee0 (    0x20) objc_msgSend$valid_values_buffer_size [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781af00 (    0x20) objc_msgSend$validateFetchedPrekeyTimestamp:forEvaluationType: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781af20 (    0x20) objc_msgSend$validateIncomingCounter:prekey:publicIdentity:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781af40 (    0x20) objc_msgSend$validatorLength [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781af60 (    0x20) objc_msgSend$verifySignature:data: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781af80 (    0x20) objc_msgSend$verifySignature:formatter: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781afa0 (    0x20) objc_msgSend$verifySignature:ofData: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781afc0 (    0x20) objc_msgSend$versionByte [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b781afe0 (    0x20) objc_msgSend$wrapSeed:to:legacy:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
        0x00000001d99e5020 (  0x4f90) __DATA_CONST SEGMENT
            0x00000001d99e5020 (   0x2e0) __DATA_CONST __got
            0x00000001d99e5300 (    0xd0) __DATA_CONST __const
                0x00000001d99e5300 (    0x38) __block_descriptor_32_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d99e5338 (    0x58) __block_descriptor_40_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d99e5390 (     0x8) _swift_FORCE_LOAD_$_swiftFoundation_$_MessageProtection [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d99e5398 (     0x8) _swift_FORCE_LOAD_$_swiftObjectiveC_$_MessageProtection [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d99e53a0 (     0x8) _swift_FORCE_LOAD_$_swiftDarwin_$_MessageProtection [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d99e53a8 (     0x8) _swift_FORCE_LOAD_$_swiftCoreFoundation_$_MessageProtection [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d99e53b0 (     0x8) _swift_FORCE_LOAD_$_swiftDispatch_$_MessageProtection [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d99e53b8 (     0x8) _swift_FORCE_LOAD_$_swiftXPC_$_MessageProtection [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d99e53c0 (     0x8) _swift_FORCE_LOAD_$_swiftIOKit_$_MessageProtection [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d99e53c8 (     0x8) _swift_FORCE_LOAD_$_swiftos_$_MessageProtection [PEXT, NameNList, MangledNameNList, NList] 
            0x00000001d99e53d0 (   0x1d8) __DATA_CONST __objc_classlist
            0x00000001d99e55a8 (    0x10) __DATA_CONST __objc_catlist
            0x00000001d99e55b8 (    0x28) __DATA_CONST __objc_protolist
                0x00000001d99e55b8 (     0x8) _OBJC_LABEL_PROTOCOL_$_NSObject [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d99e55c0 (     0x8) _OBJC_LABEL_PROTOCOL_$_SignatureFormatter [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d99e55c8 (     0x8) _OBJC_LABEL_PROTOCOL_$_P256PrivateKeyProtocol [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d99e55d0 (     0x8) _OBJC_LABEL_PROTOCOL_$_P256PublicKeyProtocol [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d99e55d8 (     0x8) _OBJC_LABEL_PROTOCOL_$_NSCopying [PEXT, NameNList, MangledNameNList, NList] 
            0x00000001d99e55e0 (     0x8) __DATA_CONST __objc_imageinfo
            0x00000001d99e55e8 (  0x3d48) __DATA_CONST __objc_const
                0x00000001d99e55e8 (    0x48) _OBJC_METACLASS_RO_$_GLTDiversifiedKeyAndTPS [NameNList, MangledNameNList, NList] 
                0x00000001d99e5630 (    0x48) _OBJC_$_INSTANCE_VARIABLES_GLTDiversifiedKeyAndTPS [NameNList, MangledNameNList, NList] 
                0x00000001d99e5678 (    0x28) _OBJC_$_PROP_LIST_GLTDiversifiedKeyAndTPS [NameNList, MangledNameNList, NList] 
                0x00000001d99e56a0 (    0x48) _OBJC_CLASS_RO_$_GLTKeyDiversification [NameNList, MangledNameNList, NList] 
                0x00000001d99e56e8 (    0x48) _OBJC_METACLASS_RO_$_SigningPublicKey [NameNList, MangledNameNList, NList] 
                0x00000001d99e5730 (    0x48) _OBJC_CLASS_RO_$_NGMPadding [NameNList, MangledNameNList, NList] 
                0x00000001d99e5778 (    0x48) _OBJC_$_INSTANCE_VARIABLES_SecMessageLegacyPublicIdentity [NameNList, MangledNameNList, NList] 
                0x00000001d99e57c0 (    0x28) _OBJC_$_PROP_LIST_SecMessageLegacyPublicIdentity [NameNList, MangledNameNList, NList] 
                0x00000001d99e57e8 (   0x1d0) _OBJC_$_PROTOCOL_INSTANCE_METHODS_NSObject [NameNList, MangledNameNList, NList] 
                0x00000001d99e59b8 (    0x20) _OBJC_$_PROTOCOL_INSTANCE_METHODS_OPT_NSObject [NameNList, MangledNameNList, NList] 
                0x00000001d99e59d8 (    0x48) _OBJC_$_PROP_LIST_NSObject [NameNList, MangledNameNList, NList] 
                0x00000001d99e5a20 (    0xa0) _OBJC_$_PROTOCOL_METHOD_TYPES_NSObject [NameNList, MangledNameNList, NList] 
                0x00000001d99e5ac0 (    0x18) _OBJC_$_PROTOCOL_REFS_SignatureFormatter [NameNList, MangledNameNList, NList] 
                0x00000001d99e5ad8 (    0x20) _OBJC_$_PROTOCOL_INSTANCE_METHODS_SignatureFormatter [NameNList, MangledNameNList, NList] 
                0x00000001d99e5af8 (     0x8) _OBJC_$_PROTOCOL_METHOD_TYPES_SignatureFormatter [NameNList, MangledNameNList, NList] 
                0x00000001d99e5b00 (    0x18) _OBJC_CLASS_PROTOCOLS_$_NGMMessageSignatureFormatter [NameNList, MangledNameNList, NList] 
                0x00000001d99e5b18 (    0x48) _OBJC_METACLASS_RO_$_NGMMessageSignatureFormatter [NameNList, MangledNameNList, NList] 
                0x00000001d99e5b60 (    0x28) _OBJC_$_INSTANCE_VARIABLES_NGMMessageSignatureFormatter [NameNList, MangledNameNList, NList] 
                0x00000001d99e5b88 (    0x58) _OBJC_$_PROP_LIST_NGMMessageSignatureFormatter [NameNList, MangledNameNList, NList] 
                0x00000001d99e5be0 (    0x68) _OBJC_$_INSTANCE_VARIABLES_FullKey [NameNList, MangledNameNList, NList] 
                0x00000001d99e5c48 (    0x38) _OBJC_$_PROP_LIST_FullKey [NameNList, MangledNameNList, NList] 
                0x00000001d99e5c80 (    0x48) _OBJC_METACLASS_RO_$_LegacySigningKeyPrivate [NameNList, MangledNameNList, NList] 
                0x00000001d99e5cc8 (    0x28) _OBJC_$_INSTANCE_VARIABLES_LegacySigningKeyPrivate [NameNList, MangledNameNList, NList] 
                0x00000001d99e5cf0 (    0x18) _OBJC_$_PROP_LIST_LegacySigningKeyPrivate [NameNList, MangledNameNList, NList] 
                0x00000001d99e5d08 (    0x48) _OBJC_$_INSTANCE_VARIABLES_NGMFullPrekey [NameNList, MangledNameNList, NList] 
                0x00000001d99e5d50 (    0x28) _OBJC_$_PROP_LIST_NGMFullPrekey [NameNList, MangledNameNList, NList] 
                0x00000001d99e5d78 (    0x48) _OBJC_METACLASS_RO_$_NGMECDHPublicPreKey [NameNList, MangledNameNList, NList] 
                0x00000001d99e5dc0 (    0x68) _OBJC_$_INSTANCE_VARIABLES_NGMECDHPublicPreKey [NameNList, MangledNameNList, NList] 
                0x00000001d99e5e28 (    0x38) _OBJC_$_PROP_LIST_NGMECDHPublicPreKey [NameNList, MangledNameNList, NList] 
                0x00000001d99e5e60 (    0x48) _OBJC_METACLASS_RO_$_SecKeyRSAPublic [NameNList, MangledNameNList, NList] 
                0x00000001d99e5ea8 (    0x28) _OBJC_$_INSTANCE_VARIABLES_SecKeyRSAPublic [NameNList, MangledNameNList, NList] 
                0x00000001d99e5ed0 (    0x18) _OBJC_$_PROP_LIST_SecKeyRSAPublic [NameNList, MangledNameNList, NList] 
                0x00000001d99e5ee8 (   0x1d0) _OBJC_$_PROTOCOL_INSTANCE_METHODS_NSObject [NameNList, MangledNameNList, NList] 
                0x00000001d99e60b8 (    0x20) _OBJC_$_PROTOCOL_INSTANCE_METHODS_OPT_NSObject [NameNList, MangledNameNList, NList] 
                0x00000001d99e60d8 (    0x48) _OBJC_$_PROP_LIST_NSObject [NameNList, MangledNameNList, NList] 
                0x00000001d99e6120 (    0xa0) _OBJC_$_PROTOCOL_METHOD_TYPES_NSObject [NameNList, MangledNameNList, NList] 
                0x00000001d99e61c0 (    0x18) _OBJC_$_PROTOCOL_REFS_SignatureFormatter [NameNList, MangledNameNList, NList] 
                0x00000001d99e61d8 (    0x20) _OBJC_$_PROTOCOL_INSTANCE_METHODS_SignatureFormatter [NameNList, MangledNameNList, NList] 
                0x00000001d99e61f8 (     0x8) _OBJC_$_PROTOCOL_METHOD_TYPES_SignatureFormatter [NameNList, MangledNameNList, NList] 
                0x00000001d99e6200 (    0x18) _OBJC_CLASS_PROTOCOLS_$_NGMPrekeySignatureFormatter [NameNList, MangledNameNList, NList] 
                0x00000001d99e6218 (    0x48) _OBJC_METACLASS_RO_$_NGMPrekeySignatureFormatter [NameNList, MangledNameNList, NList] 
                0x00000001d99e6260 (    0x48) _OBJC_$_INSTANCE_VARIABLES_NGMPrekeySignatureFormatter [NameNList, MangledNameNList, NList] 
                0x00000001d99e62a8 (    0x68) _OBJC_$_PROP_LIST_NGMPrekeySignatureFormatter [NameNList, MangledNameNList, NList] 
                0x00000001d99e6310 (    0x48) _OBJC_METACLASS_RO_$_NGMKeyRollingTicket [NameNList, MangledNameNList, NList] 
                0x00000001d99e6358 (    0x48) _OBJC_$_INSTANCE_VARIABLES_NGMKeyRollingTicket [NameNList, MangledNameNList, NList] 
                0x00000001d99e63a0 (    0x28) _OBJC_$_PROP_LIST_NGMKeyRollingTicket [NameNList, MangledNameNList, NList] 
                0x00000001d99e63c8 (    0x48) _OBJC_$_INSTANCE_VARIABLES_NGMPublicDeviceIdentity [NameNList, MangledNameNList, NList] 
                0x00000001d99e6410 (    0x28) _OBJC_$_PROP_LIST_NGMPublicDeviceIdentity [NameNList, MangledNameNList, NList] 
                0x00000001d99e6438 (    0x48) _OBJC_CLASS_RO_$_NGMMessageFormatter [NameNList, MangledNameNList, NList] 
                0x00000001d99e6480 (   0x1d0) _OBJC_$_PROTOCOL_INSTANCE_METHODS_NSObject [NameNList, MangledNameNList, NList] 
                0x00000001d99e6650 (    0x20) _OBJC_$_PROTOCOL_INSTANCE_METHODS_OPT_NSObject [NameNList, MangledNameNList, NList] 
                0x00000001d99e6670 (    0x48) _OBJC_$_PROP_LIST_NSObject [NameNList, MangledNameNList, NList] 
                0x00000001d99e66b8 (    0xa0) _OBJC_$_PROTOCOL_METHOD_TYPES_NSObject [NameNList, MangledNameNList, NList] 
                0x00000001d99e6758 (    0x18) _OBJC_$_PROTOCOL_REFS_SignatureFormatter [NameNList, MangledNameNList, NList] 
                0x00000001d99e6770 (    0x20) _OBJC_$_PROTOCOL_INSTANCE_METHODS_SignatureFormatter [NameNList, MangledNameNList, NList] 
                0x00000001d99e6790 (     0x8) _OBJC_$_PROTOCOL_METHOD_TYPES_SignatureFormatter [NameNList, MangledNameNList, NList] 
                0x00000001d99e6798 (    0x18) _OBJC_CLASS_PROTOCOLS_$_NGMFTVoucherSignatureFormatter [NameNList, MangledNameNList, NList] 
                0x00000001d99e67b0 (    0x48) _OBJC_METACLASS_RO_$_NGMFTVoucherSignatureFormatter [NameNList, MangledNameNList, NList] 
                0x00000001d99e67f8 (    0x28) _OBJC_$_INSTANCE_VARIABLES_NGMFTVoucherSignatureFormatter [NameNList, MangledNameNList, NList] 
                0x00000001d99e6820 (    0x58) _OBJC_$_PROP_LIST_NGMFTVoucherSignatureFormatter [NameNList, MangledNameNList, NList] 
                0x00000001d99e6878 (   0x1d0) _OBJC_$_PROTOCOL_INSTANCE_METHODS_NSObject [NameNList, MangledNameNList, NList] 
                0x00000001d99e6a48 (    0x20) _OBJC_$_PROTOCOL_INSTANCE_METHODS_OPT_NSObject [NameNList, MangledNameNList, NList] 
                0x00000001d99e6a68 (    0x48) _OBJC_$_PROP_LIST_NSObject [NameNList, MangledNameNList, NList] 
                0x00000001d99e6ab0 (    0xa0) _OBJC_$_PROTOCOL_METHOD_TYPES_NSObject [NameNList, MangledNameNList, NList] 
                0x00000001d99e6b50 (    0x18) _OBJC_$_PROTOCOL_REFS_P256PrivateKeyProtocol [NameNList, MangledNameNList, NList] 
                0x00000001d99e6b68 (    0x80) _OBJC_$_PROTOCOL_INSTANCE_METHODS_P256PrivateKeyProtocol [NameNList, MangledNameNList, NList] 
                0x00000001d99e6be8 (    0x20) _OBJC_$_PROTOCOL_CLASS_METHODS_P256PrivateKeyProtocol [NameNList, MangledNameNList, NList] 
                0x00000001d99e6c08 (    0x30) _OBJC_$_PROTOCOL_METHOD_TYPES_P256PrivateKeyProtocol [NameNList, MangledNameNList, NList] 
                0x00000001d99e6c38 (    0x18) _OBJC_CLASS_PROTOCOLS_$_CoreCryptoP256Private [NameNList, MangledNameNList, NList] 
                0x00000001d99e6c50 (    0x28) _OBJC_$_INSTANCE_VARIABLES_CoreCryptoP256Private [NameNList, MangledNameNList, NList] 
                0x00000001d99e6c78 (    0x58) _OBJC_$_PROP_LIST_CoreCryptoP256Private [NameNList, MangledNameNList, NList] 
                0x00000001d99e6cd0 (    0x48) _OBJC_CLASS_RO_$_NGMMessageHasher [NameNList, MangledNameNList, NList] 
                0x00000001d99e6d18 (   0x1d0) _OBJC_$_PROTOCOL_INSTANCE_METHODS_NSObject [NameNList, MangledNameNList, NList] 
                0x00000001d99e6ee8 (    0x20) _OBJC_$_PROTOCOL_INSTANCE_METHODS_OPT_NSObject [NameNList, MangledNameNList, NList] 
                0x00000001d99e6f08 (    0x48) _OBJC_$_PROP_LIST_NSObject [NameNList, MangledNameNList, NList] 
                0x00000001d99e6f50 (    0xa0) _OBJC_$_PROTOCOL_METHOD_TYPES_NSObject [NameNList, MangledNameNList, NList] 
                0x00000001d99e6ff0 (    0x18) _OBJC_$_PROTOCOL_REFS_SignatureFormatter [NameNList, MangledNameNList, NList] 
                0x00000001d99e7008 (    0x20) _OBJC_$_PROTOCOL_INSTANCE_METHODS_SignatureFormatter [NameNList, MangledNameNList, NList] 
                0x00000001d99e7028 (     0x8) _OBJC_$_PROTOCOL_METHOD_TYPES_SignatureFormatter [NameNList, MangledNameNList, NList] 
                0x00000001d99e7030 (    0x18) _OBJC_CLASS_PROTOCOLS_$_NGMGFTSignatureFormatter [NameNList, MangledNameNList, NList] 
                0x00000001d99e7048 (    0x48) _OBJC_METACLASS_RO_$_NGMGFTSignatureFormatter [NameNList, MangledNameNList, NList] 
                0x00000001d99e7090 (    0x28) _OBJC_$_INSTANCE_VARIABLES_NGMGFTSignatureFormatter [NameNList, MangledNameNList, NList] 
                0x00000001d99e70b8 (    0x58) _OBJC_$_PROP_LIST_NGMGFTSignatureFormatter [NameNList, MangledNameNList, NList] 
                0x00000001d99e7110 (    0x48) _OBJC_METACLASS_RO_$_NGMRollingBitmaskBuffer [NameNList, MangledNameNList, NList] 
                0x00000001d99e7158 (    0x68) _OBJC_$_INSTANCE_VARIABLES_NGMRollingBitmaskBuffer [NameNList, MangledNameNList, NList] 
                0x00000001d99e71c0 (    0x38) _OBJC_$_PROP_LIST_NGMRollingBitmaskBuffer [NameNList, MangledNameNList, NList] 
                0x00000001d99e71f8 (    0x48) _OBJC_METACLASS_RO_$_DHKey [NameNList, MangledNameNList, NList] 
                0x00000001d99e7240 (    0x48) _OBJC_METACLASS_RO_$_LegacySigningKeyPublic [NameNList, MangledNameNList, NList] 
                0x00000001d99e7288 (    0x28) _OBJC_$_INSTANCE_VARIABLES_LegacySigningKeyPublic [NameNList, MangledNameNList, NList] 
                0x00000001d99e72b0 (    0x18) _OBJC_$_PROP_LIST_LegacySigningKeyPublic [NameNList, MangledNameNList, NList] 
                0x00000001d99e72c8 (    0x48) _OBJC_METACLASS_RO_$_MPStatusKitSubscriptionKeys [NameNList, MangledNameNList, NList] 
                0x00000001d99e7310 (    0x68) _OBJC_$_INSTANCE_VARIABLES_MPStatusKitSubscriptionKeys [NameNList, MangledNameNList, NList] 
                0x00000001d99e7378 (    0x38) _OBJC_$_PROP_LIST_MPStatusKitSubscriptionKeys [NameNList, MangledNameNList, NList] 
                0x00000001d99e73b0 (    0x48) _OBJC_METACLASS_RO_$_MPStatusKitMessage [NameNList, MangledNameNList, NList] 
                0x00000001d99e73f8 (    0x68) _OBJC_$_INSTANCE_VARIABLES_MPStatusKitMessage [NameNList, MangledNameNList, NList] 
                0x00000001d99e7460 (    0x38) _OBJC_$_PROP_LIST_MPStatusKitMessage [NameNList, MangledNameNList, NList] 
                0x00000001d99e7498 (    0x48) _OBJC_METACLASS_RO_$_MPStatusKitOutgoingRatchet [NameNList, MangledNameNList, NList] 
                0x00000001d99e74e0 (    0x28) _OBJC_$_INSTANCE_VARIABLES_MPStatusKitOutgoingRatchet [NameNList, MangledNameNList, NList] 
                0x00000001d99e7508 (    0x18) _OBJC_$_PROP_LIST_MPStatusKitOutgoingRatchet [NameNList, MangledNameNList, NList] 
                0x00000001d99e7520 (    0x48) _OBJC_METACLASS_RO_$_MPStatusKitIncomingRatchet [NameNList, MangledNameNList, NList] 
                0x00000001d99e7568 (    0x28) _OBJC_$_INSTANCE_VARIABLES_MPStatusKitIncomingRatchet [NameNList, MangledNameNList, NList] 
                0x00000001d99e7590 (    0x18) _OBJC_$_PROP_LIST_MPStatusKitIncomingRatchet [NameNList, MangledNameNList, NList] 
                0x00000001d99e75a8 (    0x48) _OBJC_CLASS_RO_$_NGMProtocolVersion [NameNList, MangledNameNList, NList] 
                0x00000001d99e75f0 (    0x48) _OBJC_$_INSTANCE_VARIABLES_NGMFullDeviceIdentity [NameNList, MangledNameNList, NList] 
                0x00000001d99e7638 (    0x28) _OBJC_$_PROP_LIST_NGMFullDeviceIdentity [NameNList, MangledNameNList, NList] 
                0x00000001d99e7660 (    0x48) _OBJC_CLASS_RO_$_MP_AES_CTR [NameNList, MangledNameNList, NList] 
                0x00000001d99e76a8 (   0x1d0) _OBJC_$_PROTOCOL_INSTANCE_METHODS_NSObject [NameNList, MangledNameNList, NList] 
                0x00000001d99e7878 (    0x20) _OBJC_$_PROTOCOL_INSTANCE_METHODS_OPT_NSObject [NameNList, MangledNameNList, NList] 
                0x00000001d99e7898 (    0x48) _OBJC_$_PROP_LIST_NSObject [NameNList, MangledNameNList, NList] 
                0x00000001d99e78e0 (    0xa0) _OBJC_$_PROTOCOL_METHOD_TYPES_NSObject [NameNList, MangledNameNList, NList] 
                0x00000001d99e7980 (    0x18) _OBJC_$_PROTOCOL_REFS_P256PublicKeyProtocol [NameNList, MangledNameNList, NList] 
                0x00000001d99e7998 (    0x50) _OBJC_$_PROTOCOL_INSTANCE_METHODS_P256PublicKeyProtocol [NameNList, MangledNameNList, NList] 
                0x00000001d99e79e8 (    0x18) _OBJC_$_PROTOCOL_METHOD_TYPES_P256PublicKeyProtocol [NameNList, MangledNameNList, NList] 
                0x00000001d99e7a00 (    0x18) _OBJC_CLASS_PROTOCOLS_$_SecKeyP256Public [NameNList, MangledNameNList, NList] 
                0x00000001d99e7a18 (    0x48) _OBJC_METACLASS_RO_$_SecKeyP256Public [NameNList, MangledNameNList, NList] 
                0x00000001d99e7a60 (    0x48) _OBJC_$_INSTANCE_VARIABLES_SecKeyP256Public [NameNList, MangledNameNList, NList] 
                0x00000001d99e7aa8 (    0x68) _OBJC_$_PROP_LIST_SecKeyP256Public [NameNList, MangledNameNList, NList] 
                0x00000001d99e7b10 (    0x18) _OBJC_$_PROTOCOL_REFS_P256PrivateKeyProtocol [NameNList, MangledNameNList, NList] 
                0x00000001d99e7b28 (    0x80) _OBJC_$_PROTOCOL_INSTANCE_METHODS_P256PrivateKeyProtocol [NameNList, MangledNameNList, NList] 
                0x00000001d99e7ba8 (    0x20) _OBJC_$_PROTOCOL_CLASS_METHODS_P256PrivateKeyProtocol [NameNList, MangledNameNList, NList] 
                0x00000001d99e7bc8 (    0x30) _OBJC_$_PROTOCOL_METHOD_TYPES_P256PrivateKeyProtocol [NameNList, MangledNameNList, NList] 
                0x00000001d99e7bf8 (    0x18) _OBJC_CLASS_PROTOCOLS_$_SecKeyP256Private [NameNList, MangledNameNList, NList] 
                0x00000001d99e7c10 (    0x68) _OBJC_$_INSTANCE_VARIABLES_SecKeyP256Private [NameNList, MangledNameNList, NList] 
                0x00000001d99e7c78 (    0x78) _OBJC_$_PROP_LIST_SecKeyP256Private [NameNList, MangledNameNList, NList] 
                0x00000001d99e7cf0 (    0x48) _OBJC_CLASS_RO_$_GFTKeyWrapping [NameNList, MangledNameNList, NList] 
                0x00000001d99e7d38 (    0x48) _OBJC_CLASS_RO_$_NGMKeyValidator [NameNList, MangledNameNList, NList] 
                0x00000001d99e7d80 (    0x48) _OBJC_METACLASS_RO_$_DHPublicKey [NameNList, MangledNameNList, NList] 
                0x00000001d99e7dc8 (    0x48) _OBJC_METACLASS_RO_$_SigningKey [NameNList, MangledNameNList, NList] 
                0x00000001d99e7e10 (    0xa8) _OBJC_$_INSTANCE_VARIABLES_SecMessageLegacyFullIdentity [NameNList, MangledNameNList, NList] 
                0x00000001d99e7eb8 (    0x58) _OBJC_$_PROP_LIST_SecMessageLegacyFullIdentity [NameNList, MangledNameNList, NList] 
                0x00000001d99e7f10 (    0x48) _OBJC_METACLASS_RO_$_SecKeyRSAPrivate [NameNList, MangledNameNList, NList] 
                0x00000001d99e7f58 (    0x28) _OBJC_$_INSTANCE_VARIABLES_SecKeyRSAPrivate [NameNList, MangledNameNList, NList] 
                0x00000001d99e7f80 (    0x18) _OBJC_$_PROP_LIST_SecKeyRSAPrivate [NameNList, MangledNameNList, NList] 
                0x00000001d99e7f98 (   0x1d0) _OBJC_$_PROTOCOL_INSTANCE_METHODS_NSObject [NameNList, MangledNameNList, NList] 
                0x00000001d99e8168 (    0x20) _OBJC_$_PROTOCOL_INSTANCE_METHODS_OPT_NSObject [NameNList, MangledNameNList, NList] 
                0x00000001d99e8188 (    0x48) _OBJC_$_PROP_LIST_NSObject [NameNList, MangledNameNList, NList] 
                0x00000001d99e81d0 (    0xa0) _OBJC_$_PROTOCOL_METHOD_TYPES_NSObject [NameNList, MangledNameNList, NList] 
                0x00000001d99e8270 (    0x18) _OBJC_$_PROTOCOL_REFS_SignatureFormatter [NameNList, MangledNameNList, NList] 
                0x00000001d99e8288 (    0x20) _OBJC_$_PROTOCOL_INSTANCE_METHODS_SignatureFormatter [NameNList, MangledNameNList, NList] 
                0x00000001d99e82a8 (     0x8) _OBJC_$_PROTOCOL_METHOD_TYPES_SignatureFormatter [NameNList, MangledNameNList, NList] 
                0x00000001d99e82b0 (    0x18) _OBJC_CLASS_PROTOCOLS_$_NGMGelatoPresenceSignatureFormatter [NameNList, MangledNameNList, NList] 
                0x00000001d99e82c8 (    0x48) _OBJC_METACLASS_RO_$_NGMGelatoPresenceSignatureFormatter [NameNList, MangledNameNList, NList] 
                0x00000001d99e8310 (    0x28) _OBJC_$_INSTANCE_VARIABLES_NGMGelatoPresenceSignatureFormatter [NameNList, MangledNameNList, NList] 
                0x00000001d99e8338 (    0x58) _OBJC_$_PROP_LIST_NGMGelatoPresenceSignatureFormatter [NameNList, MangledNameNList, NList] 
                0x00000001d99e8390 (    0x28) _OBJC_$_INSTANCE_VARIABLES_NGMReplayManager [NameNList, MangledNameNList, NList] 
                0x00000001d99e83b8 (    0x28) _OBJC_$_INSTANCE_VARIABLES_NGMTimeBasedEvaluations [NameNList, MangledNameNList, NList] 
                0x00000001d99e83e0 (    0x18) _OBJC_$_PROP_LIST_NGMTimeBasedEvaluations [NameNList, MangledNameNList, NList] 
                0x00000001d99e83f8 (    0x48) _OBJC_METACLASS_RO_$_PublicKey [NameNList, MangledNameNList, NList] 
                0x00000001d99e8440 (    0x28) _OBJC_$_INSTANCE_VARIABLES_PublicKey [NameNList, MangledNameNList, NList] 
                0x00000001d99e8468 (    0x18) _OBJC_$_PROP_LIST_PublicKey [NameNList, MangledNameNList, NList] 
                0x00000001d99e8480 (    0x20) _OBJC_$_PROTOCOL_INSTANCE_METHODS_NSCopying [NameNList, MangledNameNList, NList] 
                0x00000001d99e84a0 (     0x8) _OBJC_$_PROTOCOL_METHOD_TYPES_NSCopying [NameNList, MangledNameNList, NList] 
                0x00000001d99e84a8 (    0x18) _OBJC_CLASS_PROTOCOLS_$_NGMPBLegacyKey [NameNList, MangledNameNList, NList] 
                0x00000001d99e84c0 (    0x48) _OBJC_METACLASS_RO_$_NGMPBLegacyKey [NameNList, MangledNameNList, NList] 
                0x00000001d99e8508 (    0x48) _OBJC_$_INSTANCE_VARIABLES_NGMPBLegacyKey [NameNList, MangledNameNList, NList] 
                0x00000001d99e8550 (    0x28) _OBJC_$_PROP_LIST_NGMPBLegacyKey [NameNList, MangledNameNList, NList] 
                0x00000001d99e8578 (    0x20) _OBJC_$_PROTOCOL_INSTANCE_METHODS_NSCopying [NameNList, MangledNameNList, NList] 
                0x00000001d99e8598 (     0x8) _OBJC_$_PROTOCOL_METHOD_TYPES_NSCopying [NameNList, MangledNameNList, NList] 
                0x00000001d99e85a0 (    0x18) _OBJC_CLASS_PROTOCOLS_$_NGMPBDevicePreKey [NameNList, MangledNameNList, NList] 
                0x00000001d99e85b8 (    0x48) _OBJC_METACLASS_RO_$_NGMPBDevicePreKey [NameNList, MangledNameNList, NList] 
                0x00000001d99e8600 (    0xe8) _OBJC_$_INSTANCE_VARIABLES_NGMPBDevicePreKey [NameNList, MangledNameNList, NList] 
                0x00000001d99e86e8 (    0xa8) _OBJC_$_PROP_LIST_NGMPBDevicePreKey [NameNList, MangledNameNList, NList] 
                0x00000001d99e8790 (    0x20) _OBJC_$_PROTOCOL_INSTANCE_METHODS_NSCopying [NameNList, MangledNameNList, NList] 
                0x00000001d99e87b0 (     0x8) _OBJC_$_PROTOCOL_METHOD_TYPES_NSCopying [NameNList, MangledNameNList, NList] 
                0x00000001d99e87b8 (    0x18) _OBJC_CLASS_PROTOCOLS_$_NGMPBFullDeviceIdentity [NameNList, MangledNameNList, NList] 
                0x00000001d99e87d0 (    0x48) _OBJC_$_INSTANCE_VARIABLES_NGMPBFullDeviceIdentity [NameNList, MangledNameNList, NList] 
                0x00000001d99e8818 (    0x28) _OBJC_$_PROP_LIST_NGMPBFullDeviceIdentity [NameNList, MangledNameNList, NList] 
                0x00000001d99e8840 (    0x20) _OBJC_$_PROTOCOL_INSTANCE_METHODS_NSCopying [NameNList, MangledNameNList, NList] 
                0x00000001d99e8860 (     0x8) _OBJC_$_PROTOCOL_METHOD_TYPES_NSCopying [NameNList, MangledNameNList, NList] 
                0x00000001d99e8868 (    0x18) _OBJC_CLASS_PROTOCOLS_$_NGMPBOuterMessage [NameNList, MangledNameNList, NList] 
                0x00000001d99e8880 (    0x48) _OBJC_METACLASS_RO_$_NGMPBOuterMessage [NameNList, MangledNameNList, NList] 
                0x00000001d99e88c8 (    0xa8) _OBJC_$_INSTANCE_VARIABLES_NGMPBOuterMessage [NameNList, MangledNameNList, NList] 
                0x00000001d99e8970 (    0xa8) _OBJC_$_PROP_LIST_NGMPBOuterMessage [NameNList, MangledNameNList, NList] 
                0x00000001d99e8a18 (    0x20) _OBJC_$_PROTOCOL_INSTANCE_METHODS_NSCopying [NameNList, MangledNameNList, NList] 
                0x00000001d99e8a38 (     0x8) _OBJC_$_PROTOCOL_METHOD_TYPES_NSCopying [NameNList, MangledNameNList, NList] 
                0x00000001d99e8a40 (    0x18) _OBJC_CLASS_PROTOCOLS_$_NGMPBPublicDeviceIdentity [NameNList, MangledNameNList, NList] 
                0x00000001d99e8a58 (    0x48) _OBJC_METACLASS_RO_$_NGMPBPublicDeviceIdentity [NameNList, MangledNameNList, NList] 
                0x00000001d99e8aa0 (    0x68) _OBJC_$_INSTANCE_VARIABLES_NGMPBPublicDeviceIdentity [NameNList, MangledNameNList, NList] 
                0x00000001d99e8b08 (    0x38) _OBJC_$_PROP_LIST_NGMPBPublicDeviceIdentity [NameNList, MangledNameNList, NList] 
                0x00000001d99e8b40 (    0x20) _OBJC_$_PROTOCOL_INSTANCE_METHODS_NSCopying [NameNList, MangledNameNList, NList] 
                0x00000001d99e8b60 (     0x8) _OBJC_$_PROTOCOL_METHOD_TYPES_NSCopying [NameNList, MangledNameNList, NList] 
                0x00000001d99e8b68 (    0x18) _OBJC_CLASS_PROTOCOLS_$_NGMPBPublicDevicePrekey [NameNList, MangledNameNList, NList] 
                0x00000001d99e8b80 (    0x48) _OBJC_METACLASS_RO_$_NGMPBPublicDevicePrekey [NameNList, MangledNameNList, NList] 
                0x00000001d99e8bc8 (    0x88) _OBJC_$_INSTANCE_VARIABLES_NGMPBPublicDevicePrekey [NameNList, MangledNameNList, NList] 
                0x00000001d99e8c50 (    0x58) _OBJC_$_PROP_LIST_NGMPBPublicDevicePrekey [NameNList, MangledNameNList, NList] 
                0x00000001d99e8ca8 (    0x20) _OBJC_$_PROTOCOL_INSTANCE_METHODS_NSCopying [NameNList, MangledNameNList, NList] 
                0x00000001d99e8cc8 (     0x8) _OBJC_$_PROTOCOL_METHOD_TYPES_NSCopying [NameNList, MangledNameNList, NList] 
                0x00000001d99e8cd0 (    0x18) _OBJC_CLASS_PROTOCOLS_$_NGMPBP256Key [NameNList, MangledNameNList, NList] 
                0x00000001d99e8ce8 (    0x48) _OBJC_METACLASS_RO_$_NGMPBP256Key [NameNList, MangledNameNList, NList] 
                0x00000001d99e8d30 (    0x68) _OBJC_$_INSTANCE_VARIABLES_NGMPBP256Key [NameNList, MangledNameNList, NList] 
                0x00000001d99e8d98 (    0x58) _OBJC_$_PROP_LIST_NGMPBP256Key [NameNList, MangledNameNList, NList] 
                0x00000001d99e8df0 (    0x20) _OBJC_$_PROTOCOL_INSTANCE_METHODS_NSCopying [NameNList, MangledNameNList, NList] 
                0x00000001d99e8e10 (     0x8) _OBJC_$_PROTOCOL_METHOD_TYPES_NSCopying [NameNList, MangledNameNList, NList] 
                0x00000001d99e8e18 (    0x18) _OBJC_CLASS_PROTOCOLS_$_NGMPBInnerMessage [NameNList, MangledNameNList, NList] 
                0x00000001d99e8e30 (    0x48) _OBJC_METACLASS_RO_$_NGMPBInnerMessage [NameNList, MangledNameNList, NList] 
                0x00000001d99e8e78 (    0xa8) _OBJC_$_INSTANCE_VARIABLES_NGMPBInnerMessage [NameNList, MangledNameNList, NList] 
                0x00000001d99e8f20 (    0x78) _OBJC_$_PROP_LIST_NGMPBInnerMessage [NameNList, MangledNameNList, NList] 
                0x00000001d99e8f98 (    0x70) _OBJC_CLASS_RO_$_RegisteredPreKey [NameNList, MangledNameNList, NList] 
                0x00000001d99e9008 (    0xa0) _OBJC_CLASS_RO_$_SenderPublicIdentity [NameNList, MangledNameNList, NList] 
                0x00000001d99e90a8 (    0x80) _OBJC_CLASS_RO_$_SendingDestination [NameNList, MangledNameNList, NList] 
                0x00000001d99e9128 (    0x48) _METACLASS_DATA__TtC17MessageProtection17GLTDiversifiedKey [NameNList, MangledNameNList, NList] 
                0x00000001d99e9170 (    0x48) _IVARS__TtC17MessageProtection17GLTDiversifiedKey [NameNList, MangledNameNList, NList] 
                0x00000001d99e91b8 (    0x28) _PROPERTIES__TtC17MessageProtection17GLTDiversifiedKey [NameNList, MangledNameNList, NList] 
                0x00000001d99e91e0 (    0x48) _METACLASS_DATA__TtC17MessageProtection9SKRatchet [NameNList, MangledNameNList, NList] 
                0x00000001d99e9228 (    0x88) _IVARS__TtC17MessageProtection17SKOutgoingRatchet [NameNList, MangledNameNList, NList] 
                0x00000001d99e92b0 (    0x18) _CLASS_PROPERTIES__TtC17MessageProtection17SKIncomingRatchet [NameNList, MangledNameNList, NList] 
                0x00000001d99e92c8 (    0x68) _IVARS__TtC17MessageProtection17SKIncomingRatchet [NameNList, MangledNameNList, NList] 
            0x00000001d99e9330 (   0xc80) __DATA_CONST __objc_selrefs
        0x00000001d99e9fb0 (  0x4268) __AUTH_CONST SEGMENT
            0x00000001d99e9fb0 (  0x13a0) __AUTH_CONST __objc_const
                0x00000001d99e9fb0 (    0x48) _OBJC_CLASS_RO_$_GLTDiversifiedKeyAndTPS [NameNList, MangledNameNList, NList] 
                0x00000001d99e9ff8 (    0x48) _OBJC_METACLASS_RO_$_GLTKeyDiversification [NameNList, MangledNameNList, NList] 
                0x00000001d99ea040 (    0x48) _OBJC_CLASS_RO_$_SigningPublicKey [NameNList, MangledNameNList, NList] 
                0x00000001d99ea088 (    0x48) _OBJC_METACLASS_RO_$_NGMPadding [NameNList, MangledNameNList, NList] 
                0x00000001d99ea0d0 (    0x48) _OBJC_METACLASS_RO_$_SecMessageLegacyPublicIdentity [NameNList, MangledNameNList, NList] 
                0x00000001d99ea118 (    0x48) _OBJC_CLASS_RO_$_SecMessageLegacyPublicIdentity [NameNList, MangledNameNList, NList] 
                0x00000001d99ea160 (    0x48) _OBJC_CLASS_RO_$_NGMMessageSignatureFormatter [NameNList, MangledNameNList, NList] 
                0x00000001d99ea1a8 (    0x48) _OBJC_METACLASS_RO_$_FullKey [NameNList, MangledNameNList, NList] 
                0x00000001d99ea1f0 (    0x48) _OBJC_CLASS_RO_$_FullKey [NameNList, MangledNameNList, NList] 
                0x00000001d99ea238 (    0x48) _OBJC_CLASS_RO_$_LegacySigningKeyPrivate [NameNList, MangledNameNList, NList] 
                0x00000001d99ea280 (    0x48) _OBJC_METACLASS_RO_$_NGMFullPrekey [NameNList, MangledNameNList, NList] 
                0x00000001d99ea2c8 (    0x48) _OBJC_CLASS_RO_$_NGMFullPrekey [NameNList, MangledNameNList, NList] 
                0x00000001d99ea310 (    0x48) _OBJC_CLASS_RO_$_NGMECDHPublicPreKey [NameNList, MangledNameNList, NList] 
                0x00000001d99ea358 (    0x48) _OBJC_CLASS_RO_$_SecKeyRSAPublic [NameNList, MangledNameNList, NList] 
                0x00000001d99ea3a0 (    0x48) _OBJC_CLASS_RO_$_NGMPrekeySignatureFormatter [NameNList, MangledNameNList, NList] 
                0x00000001d99ea3e8 (    0x48) _OBJC_CLASS_RO_$_NGMKeyRollingTicket [NameNList, MangledNameNList, NList] 
                0x00000001d99ea430 (    0x48) _OBJC_METACLASS_RO_$_NGMPublicDeviceIdentity [NameNList, MangledNameNList, NList] 
                0x00000001d99ea478 (    0x48) _OBJC_CLASS_RO_$_NGMPublicDeviceIdentity [NameNList, MangledNameNList, NList] 
                0x00000001d99ea4c0 (    0x48) _OBJC_METACLASS_RO_$_NGMMessageFormatter [NameNList, MangledNameNList, NList] 
                0x00000001d99ea508 (    0x48) _OBJC_CLASS_RO_$_NGMFTVoucherSignatureFormatter [NameNList, MangledNameNList, NList] 
                0x00000001d99ea550 (    0x48) _OBJC_METACLASS_RO_$_CoreCryptoP256Private [NameNList, MangledNameNList, NList] 
                0x00000001d99ea598 (    0x48) _OBJC_CLASS_RO_$_CoreCryptoP256Private [NameNList, MangledNameNList, NList] 
                0x00000001d99ea5e0 (    0x48) _OBJC_METACLASS_RO_$_NGMMessageHasher [NameNList, MangledNameNList, NList] 
                0x00000001d99ea628 (    0x48) _OBJC_CLASS_RO_$_NGMGFTSignatureFormatter [NameNList, MangledNameNList, NList] 
                0x00000001d99ea670 (    0x48) _OBJC_CLASS_RO_$_NGMRollingBitmaskBuffer [NameNList, MangledNameNList, NList] 
                0x00000001d99ea6b8 (    0x48) _OBJC_CLASS_RO_$_DHKey [NameNList, MangledNameNList, NList] 
                0x00000001d99ea700 (    0x48) _OBJC_CLASS_RO_$_LegacySigningKeyPublic [NameNList, MangledNameNList, NList] 
                0x00000001d99ea748 (    0x48) _OBJC_CLASS_RO_$_MPStatusKitSubscriptionKeys [NameNList, MangledNameNList, NList] 
                0x00000001d99ea790 (    0x48) _OBJC_CLASS_RO_$_MPStatusKitMessage [NameNList, MangledNameNList, NList] 
                0x00000001d99ea7d8 (    0x48) _OBJC_CLASS_RO_$_MPStatusKitOutgoingRatchet [NameNList, MangledNameNList, NList] 
                0x00000001d99ea820 (    0x48) _OBJC_CLASS_RO_$_MPStatusKitIncomingRatchet [NameNList, MangledNameNList, NList] 
                0x00000001d99ea868 (    0x48) _OBJC_METACLASS_RO_$_NGMProtocolVersion [NameNList, MangledNameNList, NList] 
                0x00000001d99ea8b0 (    0x48) _OBJC_METACLASS_RO_$_NGMFullDeviceIdentity [NameNList, MangledNameNList, NList] 
                0x00000001d99ea8f8 (    0x48) _OBJC_CLASS_RO_$_NGMFullDeviceIdentity [NameNList, MangledNameNList, NList] 
                0x00000001d99ea940 (    0x48) _OBJC_METACLASS_RO_$_MP_AES_CTR [NameNList, MangledNameNList, NList] 
                0x00000001d99ea988 (    0x48) _OBJC_CLASS_RO_$_SecKeyP256Public [NameNList, MangledNameNList, NList] 
                0x00000001d99ea9d0 (    0x48) _OBJC_METACLASS_RO_$_SecKeyP256Private [NameNList, MangledNameNList, NList] 
                0x00000001d99eaa18 (    0x48) _OBJC_CLASS_RO_$_SecKeyP256Private [NameNList, MangledNameNList, NList] 
                0x00000001d99eaa60 (    0x48) _OBJC_METACLASS_RO_$_GFTKeyWrapping [NameNList, MangledNameNList, NList] 
                0x00000001d99eaaa8 (    0x48) _OBJC_METACLASS_RO_$_NGMKeyValidator [NameNList, MangledNameNList, NList] 
                0x00000001d99eaaf0 (    0x40) _OBJC_$_CATEGORY_NSData_$_ValidateSize [NameNList, MangledNameNList, NList] 
                0x00000001d99eab30 (    0x40) _OBJC_$_CATEGORY_NSMutableData_$_AppendWithSize [NameNList, MangledNameNList, NList] 
                0x00000001d99eab70 (    0x48) _OBJC_CLASS_RO_$_DHPublicKey [NameNList, MangledNameNList, NList] 
                0x00000001d99eabb8 (    0x48) _OBJC_CLASS_RO_$_SigningKey [NameNList, MangledNameNList, NList] 
                0x00000001d99eac00 (    0x48) _OBJC_METACLASS_RO_$_SecMessageLegacyFullIdentity [NameNList, MangledNameNList, NList] 
                0x00000001d99eac48 (    0x48) _OBJC_CLASS_RO_$_SecMessageLegacyFullIdentity [NameNList, MangledNameNList, NList] 
                0x00000001d99eac90 (    0x48) _OBJC_CLASS_RO_$_SecKeyRSAPrivate [NameNList, MangledNameNList, NList] 
                0x00000001d99eacd8 (    0x48) _OBJC_CLASS_RO_$_NGMGelatoPresenceSignatureFormatter [NameNList, MangledNameNList, NList] 
                0x00000001d99ead20 (    0x48) _OBJC_METACLASS_RO_$_NGMReplayManager [NameNList, MangledNameNList, NList] 
                0x00000001d99ead68 (    0x48) _OBJC_CLASS_RO_$_NGMReplayManager [NameNList, MangledNameNList, NList] 
                0x00000001d99eadb0 (    0x48) _OBJC_METACLASS_RO_$_NGMTimeBasedEvaluations [NameNList, MangledNameNList, NList] 
                0x00000001d99eadf8 (    0x48) _OBJC_CLASS_RO_$_NGMTimeBasedEvaluations [NameNList, MangledNameNList, NList] 
                0x00000001d99eae40 (    0x48) _OBJC_CLASS_RO_$_PublicKey [NameNList, MangledNameNList, NList] 
                0x00000001d99eae88 (    0x48) _OBJC_CLASS_RO_$_NGMPBLegacyKey [NameNList, MangledNameNList, NList] 
                0x00000001d99eaed0 (    0x48) _OBJC_CLASS_RO_$_NGMPBDevicePreKey [NameNList, MangledNameNList, NList] 
                0x00000001d99eaf18 (    0x48) _OBJC_METACLASS_RO_$_NGMPBFullDeviceIdentity [NameNList, MangledNameNList, NList] 
                0x00000001d99eaf60 (    0x48) _OBJC_CLASS_RO_$_NGMPBFullDeviceIdentity [NameNList, MangledNameNList, NList] 
                0x00000001d99eafa8 (    0x48) _OBJC_CLASS_RO_$_NGMPBOuterMessage [NameNList, MangledNameNList, NList] 
                0x00000001d99eaff0 (    0x48) _OBJC_CLASS_RO_$_NGMPBPublicDeviceIdentity [NameNList, MangledNameNList, NList] 
                0x00000001d99eb038 (    0x48) _OBJC_CLASS_RO_$_NGMPBPublicDevicePrekey [NameNList, MangledNameNList, NList] 
                0x00000001d99eb080 (    0x48) _OBJC_CLASS_RO_$_NGMPBP256Key [NameNList, MangledNameNList, NList] 
                0x00000001d99eb0c8 (    0x48) _OBJC_CLASS_RO_$_NGMPBInnerMessage [NameNList, MangledNameNList, NList] 
                0x00000001d99eb110 (    0x48) _OBJC_METACLASS_RO_$_RegisteredPreKey [NameNList, MangledNameNList, NList] 
                0x00000001d99eb158 (    0x48) _OBJC_METACLASS_RO_$_SenderPublicIdentity [NameNList, MangledNameNList, NList] 
                0x00000001d99eb1a0 (    0x48) _OBJC_METACLASS_RO_$_SendingDestination [NameNList, MangledNameNList, NList] 
                0x00000001d99eb1e8 (    0x48) _METACLASS_DATA__TtC17MessageProtection26GLTKeyDiversificationSwift [NameNList, MangledNameNList, NList] 
                0x00000001d99eb230 (    0x48) _METACLASS_DATA__TtC17MessageProtection13GFTKeyWrapper [NameNList, MangledNameNList, NList] 
                0x00000001d99eb278 (    0x48) _METACLASS_DATA__TtC17MessageProtection17SKOutgoingRatchet [NameNList, MangledNameNList, NList] 
                0x00000001d99eb2c0 (    0x48) _METACLASS_DATA__TtC17MessageProtection17SKIncomingRatchet [NameNList, MangledNameNList, NList] 
                0x00000001d99eb308 (    0x48) _METACLASS_DATA__TtC17MessageProtection4HKDF [NameNList, MangledNameNList, NList] 
            0x00000001d99eb350 (  0x17c0) __AUTH_CONST __cfstring
            0x00000001d99ecb10 (    0x78) __AUTH_CONST __auth_ptr
            0x00000001d99ecb88 (   0xb40) __AUTH_CONST __const
                0x00000001d99ecb88 (    0x20) __block_literal_global [NameNList, MangledNameNList, NList] 
                0x00000001d99ecba8 (    0x30) __block_descriptor_40_e8_32r_e30_v32?0"NGMFullPrekey"8Q16^B24l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d99ecbd8 (    0x30) __block_descriptor_48_e8_32s40r_e30_v32?0"NGMFullPrekey"8Q16^B24l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d99ecc08 (    0x60) _block_invoke.sSecMPFullIdentityClass [NameNList, MangledNameNList, NList] 
                0x00000001d99ecc68 (    0x60) _block_invoke_2.sSecMPPublicIdentityClass [NameNList, MangledNameNList, NList] 
                0x00000001d99eccc8 (    0x30) __block_descriptor_40_e8_32s_e30_v32?0"NGMFullPrekey"8Q16^B24l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d99eccf8 (    0x30) __block_descriptor_48_e8_32r40r_e39_v32?0"NSData"8"NSError"16?<B?^>24l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d99ecd28 (    0x30) __block_descriptor_40_e8_32bs_e56_v40?0"NSData"8"NSDictionary"16"NSError"24?<B?^>32l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d99ecd58 (    0x30) __block_descriptor_72_e8_32s40r48r56r64r_e56_v40?0"NSData"8"NSDictionary"16"NSError"24?<B?^>32l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d99ecd88 (    0x30) __block_descriptor_72_e8_32s40s48r_e30_v32?0"NGMFullPrekey"8Q16^B24l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d99ecdb8 (    0x30) __block_descriptor_48_e8_32s40s_e15_v32?08Q16^B24l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d99ecde8 (    0x30) __block_descriptor_48_e8_32s40r_e50_v24?0"NSPersistentStoreDescription"8"NSError"16l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d99ece18 (    0x30) __block_descriptor_104_e8_32s40s48s56s64s72r80r88r_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d99ece48 (    0x30) __block_descriptor_68_e8_32s40s48s56s_e9_B16?0^8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d99ece78 (    0x30) __block_descriptor_101_e8_32s40s48s56s64s72s80r88r_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d99ecea8 (    0x30) __block_descriptor_40_e8_32s_e35_v32?0"SendingDestination"8Q16^B24l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d99eced8 (    0x30) full type metadata for SecKeyRef [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d99ecf08 (    0x30) full type metadata for CFStringRef [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d99ecf38 (    0x98) full type metadata for CFErrorRef [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d99ecfd0 (    0x70) value witness table for GLTKeyDiversificationError [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d99ed040 (    0x10) full type metadata for GLTKeyDiversificationError [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d99ed050 (   0x1a8) type metadata for GLTKeyDiversificationError [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d99ed1f8 (    0x70) value witness table for KeyWrappingErrors [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d99ed268 (    0x10) full type metadata for KeyWrappingErrors [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d99ed278 (    0x70) type metadata for KeyWrappingErrors [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d99ed2e8 (    0x60) value witness table for AES.IV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d99ed348 (    0x10) full type metadata for AES.IV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d99ed358 (    0x20) type metadata for AES.IV [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d99ed378 (    0x10) full type metadata for AES.CTR [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d99ed388 (    0x18) type metadata for AES.CTR [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d99ed3a0 (    0x70) value witness table for SymmetricRatchetErrors [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d99ed410 (    0x10) full type metadata for SymmetricRatchetErrors [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d99ed420 (   0x118) type metadata for SymmetricRatchetErrors [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d99ed538 (    0x70) value witness table for StatusKitErrors [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d99ed5a8 (    0x10) full type metadata for StatusKitErrors [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d99ed5b8 (    0x68) type metadata for StatusKitErrors [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d99ed620 (    0x68) value witness table for HKDFRatchet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d99ed688 (    0x40) protocol witness table for HKDFRatchet<A> [PEXT, NameNList, MangledNameNList, NList] 
            0x00000001d99ed6c8 (    0xc0) __AUTH_CONST __objc_intobj
            0x00000001d99ed788 (   0xa90) __AUTH_CONST __auth_got
        0x00000001d79bea58 (  0x1400) __AUTH SEGMENT
            0x00000001d79bea58 (   0xfb0) __AUTH __objc_data
                0x00000001d79bea58 (    0x28) OBJC_CLASS_$_GLTDiversifiedKeyAndTPS [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d79bea80 (    0x28) OBJC_METACLASS_$_GLTDiversifiedKeyAndTPS [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d79beaa8 (    0x28) OBJC_METACLASS_$_GLTKeyDiversification [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d79bead0 (    0x28) OBJC_CLASS_$_GLTKeyDiversification [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d79beaf8 (    0x28) OBJC_METACLASS_$_SigningPublicKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d79beb20 (    0x28) OBJC_CLASS_$_SigningPublicKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d79beb48 (    0x28) OBJC_METACLASS_$_NGMPadding [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d79beb70 (    0x28) OBJC_CLASS_$_NGMPadding [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d79beb98 (    0x28) OBJC_CLASS_$_NGMMessageSignatureFormatter [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d79bebc0 (    0x28) OBJC_METACLASS_$_NGMMessageSignatureFormatter [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d79bebe8 (    0x28) OBJC_CLASS_$_NGMECDHPublicPreKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d79bec10 (    0x28) OBJC_METACLASS_$_NGMECDHPublicPreKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d79bec38 (    0x28) OBJC_CLASS_$_NGMPrekeySignatureFormatter [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d79bec60 (    0x28) OBJC_METACLASS_$_NGMPrekeySignatureFormatter [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d79bec88 (    0x28) OBJC_CLASS_$_NGMKeyRollingTicket [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d79becb0 (    0x28) OBJC_METACLASS_$_NGMKeyRollingTicket [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d79becd8 (    0x28) OBJC_CLASS_$_NGMPublicDeviceIdentity [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d79bed00 (    0x28) OBJC_METACLASS_$_NGMPublicDeviceIdentity [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d79bed28 (    0x28) OBJC_METACLASS_$_NGMMessageFormatter [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d79bed50 (    0x28) OBJC_CLASS_$_NGMMessageFormatter [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d79bed78 (    0x28) OBJC_CLASS_$_NGMFTVoucherSignatureFormatter [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d79beda0 (    0x28) OBJC_METACLASS_$_NGMFTVoucherSignatureFormatter [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d79bedc8 (    0x28) OBJC_CLASS_$_CoreCryptoP256Private [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d79bedf0 (    0x28) OBJC_METACLASS_$_CoreCryptoP256Private [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d79bee18 (    0x28) OBJC_METACLASS_$_NGMMessageHasher [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d79bee40 (    0x28) OBJC_CLASS_$_NGMMessageHasher [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d79bee68 (    0x28) OBJC_CLASS_$_NGMGFTSignatureFormatter [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d79bee90 (    0x28) OBJC_METACLASS_$_NGMGFTSignatureFormatter [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d79beeb8 (    0x28) OBJC_CLASS_$_NGMRollingBitmaskBuffer [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d79beee0 (    0x28) OBJC_METACLASS_$_NGMRollingBitmaskBuffer [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d79bef08 (    0x28) OBJC_CLASS_$_MPStatusKitSubscriptionKeys [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d79bef30 (    0x28) OBJC_METACLASS_$_MPStatusKitSubscriptionKeys [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d79bef58 (    0x28) OBJC_CLASS_$_MPStatusKitMessage [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d79bef80 (    0x28) OBJC_METACLASS_$_MPStatusKitMessage [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d79befa8 (    0x28) OBJC_CLASS_$_MPStatusKitOutgoingRatchet [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d79befd0 (    0x28) OBJC_METACLASS_$_MPStatusKitOutgoingRatchet [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d79beff8 (    0x28) OBJC_CLASS_$_MPStatusKitIncomingRatchet [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d79bf020 (    0x28) OBJC_METACLASS_$_MPStatusKitIncomingRatchet [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d79bf048 (    0x28) OBJC_METACLASS_$_MP_AES_CTR [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d79bf070 (    0x28) OBJC_CLASS_$_MP_AES_CTR [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d79bf098 (    0x28) OBJC_METACLASS_$_GFTKeyWrapping [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d79bf0c0 (    0x28) OBJC_CLASS_$_GFTKeyWrapping [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d79bf0e8 (    0x28) OBJC_METACLASS_$_NGMKeyValidator [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d79bf110 (    0x28) OBJC_CLASS_$_NGMKeyValidator [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d79bf138 (    0x28) OBJC_CLASS_$_NGMGelatoPresenceSignatureFormatter [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d79bf160 (    0x28) OBJC_METACLASS_$_NGMGelatoPresenceSignatureFormatter [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d79bf188 (    0x28) OBJC_METACLASS_$_NGMReplayManager [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d79bf1b0 (    0x28) OBJC_CLASS_$_NGMReplayManager [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d79bf1d8 (    0x28) OBJC_CLASS_$_NGMPBOuterMessage [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d79bf200 (    0x28) OBJC_METACLASS_$_NGMPBOuterMessage [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d79bf228 (    0x28) OBJC_CLASS_$_NGMPBPublicDeviceIdentity [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d79bf250 (    0x28) OBJC_METACLASS_$_NGMPBPublicDeviceIdentity [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d79bf278 (    0x28) OBJC_CLASS_$_NGMPBPublicDevicePrekey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d79bf2a0 (    0x28) OBJC_METACLASS_$_NGMPBPublicDevicePrekey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d79bf2c8 (    0x28) OBJC_CLASS_$_NGMPBInnerMessage [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d79bf2f0 (    0x28) OBJC_METACLASS_$_NGMPBInnerMessage [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d79bf318 (    0x28) OBJC_METACLASS_$_RegisteredPreKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d79bf340 (    0x28) OBJC_CLASS_$_RegisteredPreKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d79bf368 (    0x28) OBJC_METACLASS_$_SenderPublicIdentity [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d79bf390 (    0x28) OBJC_CLASS_$_SenderPublicIdentity [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d79bf3b8 (    0x28) OBJC_METACLASS_$_SendingDestination [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d79bf3e0 (    0x28) OBJC_CLASS_$_SendingDestination [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d79bf408 (    0x48) _DATA__TtC17MessageProtection17GLTDiversifiedKey [NameNList, MangledNameNList, NList] 
                0x00000001d79bf450 (    0x18) full type metadata for GLTDiversifiedKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d79bf468 (    0x68) type metadata for GLTDiversifiedKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d79bf468 (    0x68) OBJC_CLASS_$__TtC17MessageProtection17GLTDiversifiedKey [EXT, ALIAS, NameNList, MangledNameNList, NList] 
                0x00000001d79bf4d0 (    0x48) _DATA__TtC17MessageProtection26GLTKeyDiversificationSwift [NameNList, MangledNameNList, NList] 
                0x00000001d79bf518 (    0x18) full type metadata for GLTKeyDiversificationSwift [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d79bf530 (    0x50) type metadata for GLTKeyDiversificationSwift [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d79bf530 (    0x50) OBJC_CLASS_$__TtC17MessageProtection26GLTKeyDiversificationSwift [EXT, ALIAS, NameNList, MangledNameNList, NList] 
                0x00000001d79bf580 (    0x48) _DATA__TtC17MessageProtection13GFTKeyWrapper [NameNList, MangledNameNList, NList] 
                0x00000001d79bf5c8 (    0x18) full type metadata for GFTKeyWrapper [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d79bf5e0 (    0x50) OBJC_CLASS_$__TtC17MessageProtection13GFTKeyWrapper [PEXT, NameNList, MangledNameNList, Merged, NList] 
                0x00000001d79bf630 (    0x48) _DATA__TtC17MessageProtection9SKRatchet [NameNList, MangledNameNList, NList] 
                0x00000001d79bf678 (    0x18) full type metadata for SKRatchet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d79bf690 (    0x50) OBJC_CLASS_$__TtC17MessageProtection9SKRatchet [PEXT, NameNList, MangledNameNList, Merged, NList] 
                0x00000001d79bf6e0 (    0x50) _DATA__TtC17MessageProtection17SKOutgoingRatchet [NameNList, MangledNameNList, NList] 
                0x00000001d79bf730 (    0x18) full type metadata for SKOutgoingRatchet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d79bf748 (    0xe8) OBJC_CLASS_$__TtC17MessageProtection17SKOutgoingRatchet [PEXT, NameNList, MangledNameNList, Merged, NList] 
                0x00000001d79bf830 (    0x50) _DATA__TtC17MessageProtection17SKIncomingRatchet [NameNList, MangledNameNList, NList] 
                0x00000001d79bf880 (    0x18) full type metadata for SKIncomingRatchet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d79bf898 (    0xc0) OBJC_CLASS_$__TtC17MessageProtection17SKIncomingRatchet [PEXT, NameNList, MangledNameNList, Merged, NList] 
                0x00000001d79bf958 (    0x48) _DATA__TtC17MessageProtection4HKDF [NameNList, MangledNameNList, NList] 
                0x00000001d79bf9a0 (    0x18) full type metadata for HKDF [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d79bf9b8 (    0x50) type metadata for HKDF [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d79bf9b8 (    0x50) OBJC_CLASS_$__TtC17MessageProtection4HKDF [EXT, ALIAS, NameNList, MangledNameNList, NList] 
            0x00000001d79bfa08 (   0x450) __AUTH __data
                0x00000001d79bfa08 (    0x28) OBJC_METACLASS_$__TtC17MessageProtection17GLTDiversifiedKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d79bfa30 (    0x28) OBJC_METACLASS_$__TtC17MessageProtection26GLTKeyDiversificationSwift [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d79bfa58 (    0x58) value witness table for MPPB_RatchetState [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d79bfab0 (    0x10) full type metadata for MPPB_RatchetState [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d79bfac0 (    0x20) type metadata for MPPB_RatchetState [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d79bfae0 (    0x58) value witness table for MPPB_KeyAndIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d79bfb38 (    0x10) full type metadata for MPPB_KeyAndIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d79bfb48 (    0x20) type metadata for MPPB_KeyAndIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d79bfb68 (    0x58) value witness table for MPPB_SKPaddedStatus [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d79bfbc0 (    0x10) full type metadata for MPPB_SKPaddedStatus [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d79bfbd0 (    0x20) type metadata for MPPB_SKPaddedStatus [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d79bfbf0 (    0x58) value witness table for MPPB_SKIncomingRatchet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d79bfc48 (    0x10) full type metadata for MPPB_SKIncomingRatchet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d79bfc58 (    0x20) type metadata for MPPB_SKIncomingRatchet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d79bfc78 (    0x58) value witness table for MPPB_SKOutgoingRatchet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d79bfcd0 (    0x10) full type metadata for MPPB_SKOutgoingRatchet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d79bfce0 (    0x28) type metadata for MPPB_SKOutgoingRatchet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d79bfd08 (    0x28) OBJC_METACLASS_$__TtC17MessageProtection13GFTKeyWrapper [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d79bfd30 (    0x28) OBJC_METACLASS_$__TtC17MessageProtection9SKRatchet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d79bfd58 (    0x28) OBJC_METACLASS_$__TtC17MessageProtection17SKOutgoingRatchet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d79bfd80 (    0x28) OBJC_METACLASS_$__TtC17MessageProtection17SKIncomingRatchet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d79bfda8 (    0x58) value witness table for SymmetricRatchet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d79bfe00 (    0x10) full type metadata for SymmetricRatchet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d79bfe10 (    0x20) type metadata for SymmetricRatchet [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d79bfe30 (    0x28) OBJC_METACLASS_$__TtC17MessageProtection4HKDF [EXT, NameNList, MangledNameNList, NList] 
        0x00000001d6648dd0 (  0x2148) __DATA SEGMENT
            0x00000001d6648dd0 (   0x238) __DATA __objc_classrefs
            0x00000001d6649008 (   0x110) __DATA __objc_superrefs
            0x00000001d6649118 (   0x150) __DATA __objc_ivar
                0x00000001d6649118 (     0x4) OBJC_IVAR_$_GLTDiversifiedKeyAndTPS._trackingPreventionSalt [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d664911c (     0x4) OBJC_IVAR_$_GLTDiversifiedKeyAndTPS._diversifiedKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649120 (     0x4) OBJC_IVAR_$_SecMessageLegacyPublicIdentity._signingKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649124 (     0x4) OBJC_IVAR_$_SecMessageLegacyPublicIdentity._encryptionKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649128 (     0x4) OBJC_IVAR_$_NGMMessageSignatureFormatter._formattedSignedData [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d664912c (     0x4) OBJC_IVAR_$_FullKey._keyStore [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649130 (     0x4) OBJC_IVAR_$_FullKey._key [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649134 (     0x4) OBJC_IVAR_$_FullKey._keychainTag [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649138 (     0x4) OBJC_IVAR_$_LegacySigningKeyPrivate._secKeyRef [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d664913c (     0x4) OBJC_IVAR_$_NGMFullPrekey._dhKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649140 (     0x4) OBJC_IVAR_$_NGMFullPrekey._publicPrekey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649144 (     0x4) OBJC_IVAR_$_NGMECDHPublicPreKey._dhKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649148 (     0x4) OBJC_IVAR_$_NGMECDHPublicPreKey._signature [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d664914c (     0x4) OBJC_IVAR_$_NGMECDHPublicPreKey._timestamp [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649150 (     0x4) OBJC_IVAR_$_SecKeyRSAPublic._secKeyRef [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649154 (     0x4) OBJC_IVAR_$_NGMPrekeySignatureFormatter._timestamp [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649158 (     0x4) OBJC_IVAR_$_NGMPrekeySignatureFormatter._prekeyPublic [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d664915c (     0x4) OBJC_IVAR_$_NGMKeyRollingTicket._prekey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649160 (     0x4) OBJC_IVAR_$_NGMKeyRollingTicket._registrationInfo [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649164 (     0x4) OBJC_IVAR_$_NGMPublicDeviceIdentity._signingKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649168 (     0x4) OBJC_IVAR_$_NGMPublicDeviceIdentity._echnidaRegistration [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d664916c (     0x4) OBJC_IVAR_$_NGMFTVoucherSignatureFormatter._signedData [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649170 (     0x4) OBJC_IVAR_$_CoreCryptoP256Private._full_key [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649174 (     0x4) OBJC_IVAR_$_NGMGFTSignatureFormatter._signedData [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649178 (     0x4) OBJC_IVAR_$_NGMRollingBitmaskBuffer._upper_buffer_index [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d664917c (     0x4) OBJC_IVAR_$_NGMRollingBitmaskBuffer._valid_values_buffer_size [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649180 (     0x4) OBJC_IVAR_$_NGMRollingBitmaskBuffer._valid_values_buffer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649184 (     0x4) OBJC_IVAR_$_LegacySigningKeyPublic._secKeyRef [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649188 (     0x4) OBJC_IVAR_$_MPStatusKitSubscriptionKeys._index [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d664918c (     0x4) OBJC_IVAR_$_MPStatusKitSubscriptionKeys._chainKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649190 (     0x4) OBJC_IVAR_$_MPStatusKitSubscriptionKeys._signingKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649194 (     0x4) OBJC_IVAR_$_MPStatusKitMessage._index [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649198 (     0x4) OBJC_IVAR_$_MPStatusKitMessage._encryptedMessage [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d664919c (     0x4) OBJC_IVAR_$_MPStatusKitMessage._signature [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66491a0 (     0x4) OBJC_IVAR_$_MPStatusKitOutgoingRatchet._ratchet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66491a4 (     0x4) OBJC_IVAR_$_MPStatusKitIncomingRatchet._ratchet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66491a8 (     0x4) OBJC_IVAR_$_NGMFullDeviceIdentity._deviceSigningKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66491ac (     0x4) OBJC_IVAR_$_NGMFullDeviceIdentity._devicePrekeys [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66491b0 (     0x4) OBJC_IVAR_$_SecKeyP256Public._publicKeyRef [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66491b4 (     0x4) OBJC_IVAR_$_SecKeyP256Public._serializedKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66491b8 (     0x4) OBJC_IVAR_$_SecKeyP256Private._privateKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66491bc (     0x4) OBJC_IVAR_$_SecKeyP256Private._privateKeyBlob [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66491c0 (     0x4) OBJC_IVAR_$_SecKeyP256Private._publicKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66491c4 (     0x4) OBJC_IVAR_$_SecMessageLegacyFullIdentity._isMigratedV2Key [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66491c8 (     0x4) OBJC_IVAR_$_SecMessageLegacyFullIdentity._signingKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66491cc (     0x4) OBJC_IVAR_$_SecMessageLegacyFullIdentity._encryptionKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66491d0 (     0x4) OBJC_IVAR_$_SecMessageLegacyFullIdentity._encryptionKeyPersistentRef [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66491d4 (     0x4) OBJC_IVAR_$_SecMessageLegacyFullIdentity._signingKeyPersistentRef [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66491d8 (     0x4) OBJC_IVAR_$_SecKeyRSAPrivate._secKeyRef [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66491dc (     0x4) OBJC_IVAR_$_NGMGelatoPresenceSignatureFormatter._signedData [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66491e0 (     0x4) OBJC_IVAR_$_NGMReplayManager._persistentContainer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66491e4 (     0x4) OBJC_IVAR_$_NGMTimeBasedEvaluations._date [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66491e8 (     0x4) OBJC_IVAR_$_PublicKey._key [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66491ec (     0x4) OBJC_IVAR_$_NGMPBLegacyKey._encryptionKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66491f0 (     0x4) OBJC_IVAR_$_NGMPBLegacyKey._signingKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66491f4 (     0x4) OBJC_IVAR_$_NGMPBDevicePreKey._dhKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66491f8 (     0x4) OBJC_IVAR_$_NGMPBDevicePreKey._secondaryPrivateKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66491fc (     0x4) OBJC_IVAR_$_NGMPBDevicePreKey._secondaryRegistrationData [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649200 (     0x4) OBJC_IVAR_$_NGMPBDevicePreKey._has [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649204 (     0x4) OBJC_IVAR_$_NGMPBDevicePreKey._secondaryVersion [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649208 (     0x4) OBJC_IVAR_$_NGMPBDevicePreKey._timestamp [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d664920c (     0x4) OBJC_IVAR_$_NGMPBDevicePreKey._prekeySignature [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649210 (     0x4) OBJC_IVAR_$_NGMPBFullDeviceIdentity._prekeys [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649214 (     0x4) OBJC_IVAR_$_NGMPBFullDeviceIdentity._signingKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649218 (     0x4) OBJC_IVAR_$_NGMPBOuterMessage._encryptedPayload [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d664921c (     0x4) OBJC_IVAR_$_NGMPBOuterMessage._ephemeralPubKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649220 (     0x4) OBJC_IVAR_$_NGMPBOuterMessage._signature [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649224 (     0x4) OBJC_IVAR_$_NGMPBOuterMessage._secondaryMessage [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649228 (     0x4) OBJC_IVAR_$_NGMPBOuterMessage._keyValidator [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d664922c (     0x4) OBJC_IVAR_$_NGMPBPublicDeviceIdentity._has [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649230 (     0x4) OBJC_IVAR_$_NGMPBPublicDeviceIdentity._secondaryVersion [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649234 (     0x4) OBJC_IVAR_$_NGMPBPublicDeviceIdentity._signingKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649238 (     0x4) OBJC_IVAR_$_NGMPBPublicDevicePrekey._secondaryPrekey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d664923c (     0x4) OBJC_IVAR_$_NGMPBPublicDevicePrekey._prekey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649240 (     0x4) OBJC_IVAR_$_NGMPBPublicDevicePrekey._prekeySignature [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649244 (     0x4) OBJC_IVAR_$_NGMPBPublicDevicePrekey._timestamp [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649248 (     0x4) OBJC_IVAR_$_NGMPBP256Key._keychainTag [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d664924c (     0x4) OBJC_IVAR_$_NGMPBP256Key._keyData [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649250 (     0x4) OBJC_IVAR_$_NGMPBP256Key._keystore [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649254 (     0x4) OBJC_IVAR_$_NGMPBInnerMessage._has [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649258 (     0x4) OBJC_IVAR_$_NGMPBInnerMessage._counter [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d664925c (     0x4) OBJC_IVAR_$_NGMPBInnerMessage._ktGossipData [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649260 (     0x4) OBJC_IVAR_$_NGMPBInnerMessage._debugInfo [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649264 (     0x4) OBJC_IVAR_$_NGMPBInnerMessage._message [PEXT, NameNList, MangledNameNList, NList] 
            0x00000001d6649268 (   0x600) __DATA __data
                0x00000001d6649268 (    0x60) _OBJC_PROTOCOL_$_NSObject [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66492c8 (    0x60) _OBJC_PROTOCOL_$_SignatureFormatter [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649328 (     0x8) sLocalErrorDomain [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649330 (     0x8) NGMEncryptedAttributeKTGossipData [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649338 (    0x60) _OBJC_PROTOCOL_$_P256PrivateKeyProtocol [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649398 (    0x60) _OBJC_PROTOCOL_$_P256PublicKeyProtocol [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66493f8 (    0x60) _OBJC_PROTOCOL_$_NSCopying [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649458 (     0x8) one-time initialization token for GLT_SEED_EXTRACTION_LABEL [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649460 (     0x8) one-time initialization token for _protobuf_nameMap [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649468 (     0x8) one-time initialization token for _protobuf_nameMap [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649470 (     0x8) one-time initialization token for _protobuf_nameMap [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649478 (     0x8) one-time initialization token for _protobuf_nameMap [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649480 (     0x8) one-time initialization token for _protobuf_nameMap [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649488 (     0x8) one-time initialization token for ciphersuite [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649490 (     0x8) one-time initialization token for statusKeyRatchetPrefix [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649498 (     0x8) one-time initialization token for statusKitRatchetStep [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66494a0 (     0x8) lazy cache variable for type metadata for SecKeyRef [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66494a8 (     0x8) lazy protocol witness table cache variable for type CryptoKitError and conformance CryptoKitError [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66494b0 (     0x8) lazy cache variable for type metadata for CFStringRef [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66494b8 (     0x8) lazy cache variable for type metadata for CFErrorRef [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66494c0 (     0x8) lazy protocol witness table cache variable for type CFStringRef and conformance CFStringRef [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66494c8 (     0x8) lazy protocol witness table cache variable for type CFStringRef and conformance CFStringRef [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66494d0 (     0x8) direct field offset for GLTDiversifiedKey.diversifiedKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66494d8 (     0x8) direct field offset for GLTDiversifiedKey.trackingPreventionSalt [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66494e0 (     0x8) lazy protocol witness table cache variable for type GLTKeyDiversificationError and conformance GLTKeyDiversificationError [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66494e8 (     0x8) demangling cache variable for type metadata for _ContiguousArrayStorage<(CFStringRef, Any)> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66494f0 (     0x8) demangling cache variable for type metadata for _DictionaryStorage<CFStringRef, Any> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66494f8 (     0x8) demangling cache variable for type metadata for (CFStringRef, Any) [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649500 (     0x8) lazy protocol witness table cache variable for type CFStringRef and conformance CFStringRef [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649508 (     0x8) demangling cache variable for type metadata for (key: SymmetricKey, index: UInt64) [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649510 (     0x8) lazy cache variable for type metadata for NSData [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649518 (     0x8) demangling cache variable for type metadata for MPPB_KeyAndIndex? [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649520 (     0x8) lazy protocol witness table cache variable for type MPPB_RatchetState and conformance MPPB_RatchetState [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649528 (     0x8) demangling cache variable for type metadata for SymmetricKey? [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649530 (     0x8) demangling cache variable for type metadata for MPPB_RatchetState? [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649538 (     0x8) lazy protocol witness table cache variable for type SymmetricRatchetErrors and conformance SymmetricRatchetErrors [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649540 (     0x8) lazy protocol witness table cache variable for type MPPB_SKPaddedStatus and conformance MPPB_SKPaddedStatus [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649548 (     0x8) lazy protocol witness table cache variable for type StatusKitErrors and conformance StatusKitErrors [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649550 (     0x8) demangling cache variable for type metadata for (key: UInt64, value: SymmetricKey) [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649558 (    0x10) type metadata singleton initialization cache for MPPB_RatchetState [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649568 (     0x8) lazy cache variable for type metadata for MPPB_KeyAndIndex? [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649570 (    0x10) type metadata singleton initialization cache for MPPB_KeyAndIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649580 (     0x8) lazy protocol witness table cache variable for type MPPB_SKOutgoingRatchet and conformance MPPB_SKOutgoingRatchet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649588 (     0x8) lazy protocol witness table cache variable for type MPPB_SKOutgoingRatchet and conformance MPPB_SKOutgoingRatchet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649590 (     0x8) lazy protocol witness table cache variable for type MPPB_SKOutgoingRatchet and conformance MPPB_SKOutgoingRatchet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649598 (     0x8) lazy protocol witness table cache variable for type MPPB_SKOutgoingRatchet and conformance MPPB_SKOutgoingRatchet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66495a0 (     0x8) lazy protocol witness table cache variable for type MPPB_SKIncomingRatchet and conformance MPPB_SKIncomingRatchet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66495a8 (     0x8) lazy protocol witness table cache variable for type MPPB_SKIncomingRatchet and conformance MPPB_SKIncomingRatchet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66495b0 (     0x8) lazy protocol witness table cache variable for type MPPB_SKIncomingRatchet and conformance MPPB_SKIncomingRatchet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66495b8 (     0x8) lazy protocol witness table cache variable for type MPPB_SKIncomingRatchet and conformance MPPB_SKIncomingRatchet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66495c0 (     0x8) lazy protocol witness table cache variable for type MPPB_RatchetState and conformance MPPB_RatchetState [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66495c8 (     0x8) lazy protocol witness table cache variable for type MPPB_RatchetState and conformance MPPB_RatchetState [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66495d0 (     0x8) lazy protocol witness table cache variable for type MPPB_KeyAndIndex and conformance MPPB_KeyAndIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66495d8 (     0x8) lazy protocol witness table cache variable for type MPPB_KeyAndIndex and conformance MPPB_KeyAndIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66495e0 (     0x8) lazy protocol witness table cache variable for type MPPB_KeyAndIndex and conformance MPPB_KeyAndIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66495e8 (     0x8) lazy protocol witness table cache variable for type MPPB_KeyAndIndex and conformance MPPB_KeyAndIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66495f0 (     0x8) lazy protocol witness table cache variable for type MPPB_SKPaddedStatus and conformance MPPB_SKPaddedStatus [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66495f8 (     0x8) lazy protocol witness table cache variable for type MPPB_SKPaddedStatus and conformance MPPB_SKPaddedStatus [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649600 (     0x8) lazy protocol witness table cache variable for type MPPB_SKPaddedStatus and conformance MPPB_SKPaddedStatus [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649608 (     0x8) lazy protocol witness table cache variable for type MPPB_RatchetState and conformance MPPB_RatchetState [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649610 (     0x8) lazy protocol witness table cache variable for type MPPB_RatchetState and conformance MPPB_RatchetState [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649618 (     0x8) demangling cache variable for type metadata for _ContiguousArrayStorage<Message> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649620 (     0x8) demangling cache variable for type metadata for Message [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649628 (     0x8) lazy protocol witness table cache variable for type MPPB_SKPaddedStatus and conformance MPPB_SKPaddedStatus [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649630 (     0x8) demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649638 (     0x8) demangling cache variable for type metadata for (Int, _NameMap.NameDescription) [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649640 (     0x8) lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649648 (     0x8) lazy protocol witness table cache variable for type MPPB_KeyAndIndex and conformance MPPB_KeyAndIndex [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649650 (     0x8) demangling cache variable for type metadata for (MPPB_KeyAndIndex?, MPPB_KeyAndIndex?) [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649658 (     0x8) lazy protocol witness table cache variable for type MPPB_SKIncomingRatchet and conformance MPPB_SKIncomingRatchet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649660 (     0x8) lazy protocol witness table cache variable for type MPPB_SKOutgoingRatchet and conformance MPPB_SKOutgoingRatchet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649668 (     0x8) demangling cache variable for type metadata for _ContiguousArrayStorage<MPPB_KeyAndIndex> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649670 (    0x10) type metadata singleton initialization cache for MPPB_SKPaddedStatus [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649680 (    0x10) type metadata singleton initialization cache for MPPB_SKIncomingRatchet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649690 (    0x10) type metadata singleton initialization cache for MPPB_SKOutgoingRatchet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66496a0 (     0x8) demangling cache variable for type metadata for SharedSecret? [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66496a8 (     0x8) demangling cache variable for type metadata for P256.KeyAgreement.PublicKey? [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66496b0 (     0x8) lazy protocol witness table cache variable for type KeyWrappingErrors and conformance KeyWrappingErrors [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66496b8 (     0x8) lazy protocol witness table cache variable for type SHA256 and conformance SHA256 [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66496c0 (     0x8) lazy protocol witness table cache variable for type Data and conformance Data [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66496c8 (     0x8) demangling cache variable for type metadata for _ContiguousArrayStorage<UInt8> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66496d0 (     0x8) demangling cache variable for type metadata for [UInt8] [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66496d8 (     0x8) lazy protocol witness table cache variable for type [UInt8] and conformance <A> [A] [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66496e0 (     0x8) demangling cache variable for type metadata for P256.KeyAgreement.PrivateKey? [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66496e8 (     0x8) demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66496f0 (     0x8) lazy protocol witness table cache variable for type CFErrorRef and conformance CFErrorRef [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66496f8 (     0x8) lazy protocol witness table cache variable for type String and conformance String [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649700 (     0x8) lazy cache variable for type metadata for NSMutableData [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649708 (     0x8) demangling cache variable for type metadata for UnsafeMutableRawPointer? [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649710 (     0x8) lazy protocol witness table cache variable for type KeyWrappingErrors and conformance KeyWrappingErrors [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649718 (     0x8) demangling cache variable for type metadata for ContiguousBytes [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649720 (     0x8) demangling cache variable for type metadata for ContiguousBytes? [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649728 (     0x8) lazy protocol witness table cache variable for type SymmetricRatchetErrors and conformance SymmetricRatchetErrors [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649730 (    0x10) type metadata singleton initialization cache for SKOutgoingRatchet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649740 (    0x10) type metadata singleton initialization cache for SKIncomingRatchet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649750 (     0x8) lazy protocol witness table cache variable for type SHA256Digest and conformance SHA256Digest [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649758 (     0x8) demangling cache variable for type metadata for (key: UInt16, value: SymmetricKey) [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649760 (     0x8) demangling cache variable for type metadata for MPPB_SKPaddedStatus? [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649768 (     0x8) demangling cache variable for type metadata for AES.GCM.SealedBox? [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649770 (     0x8) demangling cache variable for type metadata for Error [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649778 (     0x8) demangling cache variable for type metadata for _DictionaryStorage<UInt16, SymmetricKey> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649780 (     0x8) demangling cache variable for type metadata for _DictionaryStorage<UInt64, SymmetricKey> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649788 (     0x8) demangling cache variable for type metadata for HKDFRatchet<SHA256> [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649790 (     0x8) demangling cache variable for type metadata for MPPB_SKIncomingRatchet? [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649798 (     0x8) demangling cache variable for type metadata for AES.GCM.Nonce? [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66497a0 (     0x8) demangling cache variable for type metadata for (key: SymmetricKey, index: UInt64)? [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66497a8 (     0x8) demangling cache variable for type metadata for MPPB_SKOutgoingRatchet? [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66497b0 (     0x8) lazy protocol witness table cache variable for type StatusKitErrors and conformance StatusKitErrors [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66497b8 (    0x80) type metadata instantiation cache for HKDFRatchet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649838 (     0x8) demangling cache variable for type metadata for (SymmetricKey, UInt64) [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649840 (     0x8) lazy protocol witness table cache variable for type SymmetricKey and conformance SymmetricKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649848 (     0x8) static SymmetricRatchet.maxForwardRatchetDelta [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649850 (    0x10) type metadata singleton initialization cache for SymmetricRatchet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6649860 (     0x8) lazy protocol witness table cache variable for type NSData and conformance NSData [PEXT, NameNList, MangledNameNList, NList] 
            0x00000001d6649870 (  0x1590) __DATA __bss
                0x00000001d6649870 (     0x8) sharedManager.sharedManager [NameNList, MangledNameNList, NList] 
                0x00000001d6649878 (     0x8) sharedManager.onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d6649880 (    0x80) metadata instantiation cache for protocol conformance descriptor for CFStringRef [NameNList, MangledNameNList, NList] 
                0x00000001d6649900 (    0x80) metadata instantiation cache for protocol conformance descriptor for CFStringRef [NameNList, MangledNameNList, NList] 
                0x00000001d6649980 (    0x80) metadata instantiation cache for protocol conformance descriptor for CFStringRef [NameNList, MangledNameNList, NList] 
                0x00000001d6649a00 (    0x80) metadata instantiation cache for protocol conformance descriptor for GLTKeyDiversificationError [NameNList, MangledNameNList, NList] 
                0x00000001d6649a80 (    0x80) metadata instantiation cache for protocol conformance descriptor for MPPB_SKOutgoingRatchet [NameNList, MangledNameNList, NList] 
                0x00000001d6649b00 (    0x80) metadata instantiation cache for protocol conformance descriptor for MPPB_SKOutgoingRatchet [NameNList, MangledNameNList, NList] 
                0x00000001d6649b80 (    0x80) metadata instantiation cache for protocol conformance descriptor for MPPB_SKOutgoingRatchet [NameNList, MangledNameNList, NList] 
                0x00000001d6649c00 (    0x80) metadata instantiation cache for protocol conformance descriptor for MPPB_SKOutgoingRatchet [NameNList, MangledNameNList, NList] 
                0x00000001d6649c80 (    0x80) metadata instantiation cache for protocol conformance descriptor for MPPB_SKOutgoingRatchet [NameNList, MangledNameNList, NList] 
                0x00000001d6649d00 (    0x80) metadata instantiation cache for protocol conformance descriptor for MPPB_SKOutgoingRatchet [NameNList, MangledNameNList, NList] 
                0x00000001d6649d80 (    0x80) metadata instantiation cache for protocol conformance descriptor for MPPB_SKIncomingRatchet [NameNList, MangledNameNList, NList] 
                0x00000001d6649e00 (    0x80) metadata instantiation cache for protocol conformance descriptor for MPPB_SKIncomingRatchet [NameNList, MangledNameNList, NList] 
                0x00000001d6649e80 (    0x80) metadata instantiation cache for protocol conformance descriptor for MPPB_SKIncomingRatchet [NameNList, MangledNameNList, NList] 
                0x00000001d6649f00 (    0x80) metadata instantiation cache for protocol conformance descriptor for MPPB_SKIncomingRatchet [NameNList, MangledNameNList, NList] 
                0x00000001d6649f80 (    0x80) metadata instantiation cache for protocol conformance descriptor for MPPB_SKIncomingRatchet [NameNList, MangledNameNList, NList] 
                0x00000001d664a000 (    0x80) metadata instantiation cache for protocol conformance descriptor for MPPB_SKIncomingRatchet [NameNList, MangledNameNList, NList] 
                0x00000001d664a080 (    0x80) metadata instantiation cache for protocol conformance descriptor for MPPB_RatchetState [NameNList, MangledNameNList, NList] 
                0x00000001d664a100 (    0x80) metadata instantiation cache for protocol conformance descriptor for MPPB_RatchetState [NameNList, MangledNameNList, NList] 
                0x00000001d664a180 (    0x80) metadata instantiation cache for protocol conformance descriptor for MPPB_RatchetState [NameNList, MangledNameNList, NList] 
                0x00000001d664a200 (    0x80) metadata instantiation cache for protocol conformance descriptor for MPPB_RatchetState [NameNList, MangledNameNList, NList] 
                0x00000001d664a280 (    0x80) metadata instantiation cache for protocol conformance descriptor for MPPB_RatchetState [NameNList, MangledNameNList, NList] 
                0x00000001d664a300 (    0x80) metadata instantiation cache for protocol conformance descriptor for MPPB_KeyAndIndex [NameNList, MangledNameNList, NList] 
                0x00000001d664a380 (    0x80) metadata instantiation cache for protocol conformance descriptor for MPPB_KeyAndIndex [NameNList, MangledNameNList, NList] 
                0x00000001d664a400 (    0x80) metadata instantiation cache for protocol conformance descriptor for MPPB_KeyAndIndex [NameNList, MangledNameNList, NList] 
                0x00000001d664a480 (    0x80) metadata instantiation cache for protocol conformance descriptor for MPPB_KeyAndIndex [NameNList, MangledNameNList, NList] 
                0x00000001d664a500 (    0x80) metadata instantiation cache for protocol conformance descriptor for MPPB_KeyAndIndex [NameNList, MangledNameNList, NList] 
                0x00000001d664a580 (    0x80) metadata instantiation cache for protocol conformance descriptor for MPPB_KeyAndIndex [NameNList, MangledNameNList, NList] 
                0x00000001d664a600 (    0x80) metadata instantiation cache for protocol conformance descriptor for MPPB_SKPaddedStatus [NameNList, MangledNameNList, NList] 
                0x00000001d664a680 (    0x80) metadata instantiation cache for protocol conformance descriptor for MPPB_SKPaddedStatus [NameNList, MangledNameNList, NList] 
                0x00000001d664a700 (    0x80) metadata instantiation cache for protocol conformance descriptor for MPPB_SKPaddedStatus [NameNList, MangledNameNList, NList] 
                0x00000001d664a780 (    0x80) metadata instantiation cache for protocol conformance descriptor for MPPB_SKPaddedStatus [NameNList, MangledNameNList, NList] 
                0x00000001d664a800 (    0x80) metadata instantiation cache for protocol conformance descriptor for MPPB_SKPaddedStatus [NameNList, MangledNameNList, NList] 
                0x00000001d664a880 (    0x80) metadata instantiation cache for protocol conformance descriptor for MPPB_SKPaddedStatus [NameNList, MangledNameNList, NList] 
                0x00000001d664a900 (    0x80) metadata instantiation cache for protocol conformance descriptor for MPPB_RatchetState [NameNList, MangledNameNList, NList] 
                0x00000001d664a980 (    0x80) metadata instantiation cache for protocol conformance descriptor for KeyWrappingErrors [NameNList, MangledNameNList, NList] 
                0x00000001d664aa00 (    0x80) metadata instantiation cache for protocol conformance descriptor for KeyWrappingErrors [NameNList, MangledNameNList, NList] 
                0x00000001d664aa80 (    0x80) metadata instantiation cache for protocol conformance descriptor for KeyWrappingErrors [NameNList, MangledNameNList, NList] 
                0x00000001d664ab00 (    0x80) metadata instantiation cache for protocol conformance descriptor for SymmetricRatchetErrors [NameNList, MangledNameNList, NList] 
                0x00000001d664ab80 (    0x80) metadata instantiation cache for protocol conformance descriptor for SymmetricRatchetErrors [NameNList, MangledNameNList, NList] 
                0x00000001d664ac00 (    0x80) metadata instantiation cache for protocol conformance descriptor for SymmetricRatchetErrors [NameNList, MangledNameNList, NList] 
                0x00000001d664ac80 (    0x80) metadata instantiation cache for protocol conformance descriptor for StatusKitErrors [NameNList, MangledNameNList, NList] 
                0x00000001d664ad00 (    0x80) metadata instantiation cache for protocol conformance descriptor for StatusKitErrors [NameNList, MangledNameNList, NList] 
                0x00000001d664ad80 (    0x80) metadata instantiation cache for protocol conformance descriptor for StatusKitErrors [NameNList, MangledNameNList, NList] 
            0x00000001d664ae00 (   0x118) __DATA __common
                0x00000001d664ae00 (    0x10) GLT_SEED_EXTRACTION_LABEL [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d664ae10 (    0x18) static MPPB_SKPaddedStatus._protobuf_nameMap [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d664ae28 (    0x18) static MPPB_KeyAndIndex._protobuf_nameMap [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d664ae40 (    0x18) static MPPB_RatchetState._protobuf_nameMap [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d664ae58 (    0x18) static MPPB_SKIncomingRatchet._protobuf_nameMap [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d664ae70 (    0x18) static MPPB_SKOutgoingRatchet._protobuf_nameMap [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d664ae88 (    0x18) static GFTKeyWrapper.ciphersuite [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d664aea0 (    0x10) statusKeyRatchetPrefix [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d664aeb0 (    0x30) statusKitRatchetStep [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d664aee0 (     0x8) direct field offset for SKOutgoingRatchet.ratchet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d664aee8 (     0x8) direct field offset for SKOutgoingRatchet.signingKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d664aef0 (     0x8) direct field offset for SKOutgoingRatchet.currentSubscriptionKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d664aef8 (     0x8) direct field offset for SKOutgoingRatchet.currentMessageKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d664af00 (     0x8) direct field offset for SKIncomingRatchet.ratchet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d664af08 (     0x8) direct field offset for SKIncomingRatchet.signingPublicKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d664af10 (     0x8) direct field offset for SKIncomingRatchet.messageKeys [PEXT, NameNList, MangledNameNList, NList] 
        0x00000001d709d5e0 (   0x6c8) __DATA_DIRTY SEGMENT
            0x00000001d709d5e0 (   0x690) __DATA_DIRTY __objc_data
                0x00000001d709d5e0 (    0x28) OBJC_CLASS_$_SecMessageLegacyPublicIdentity [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d709d608 (    0x28) OBJC_METACLASS_$_SecMessageLegacyPublicIdentity [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d709d630 (    0x28) OBJC_CLASS_$_FullKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d709d658 (    0x28) OBJC_METACLASS_$_FullKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d709d680 (    0x28) OBJC_CLASS_$_LegacySigningKeyPrivate [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d709d6a8 (    0x28) OBJC_METACLASS_$_LegacySigningKeyPrivate [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d709d6d0 (    0x28) OBJC_CLASS_$_NGMFullPrekey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d709d6f8 (    0x28) OBJC_METACLASS_$_NGMFullPrekey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d709d720 (    0x28) OBJC_CLASS_$_SecKeyRSAPublic [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d709d748 (    0x28) OBJC_METACLASS_$_SecKeyRSAPublic [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d709d770 (    0x28) OBJC_METACLASS_$_DHKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d709d798 (    0x28) OBJC_CLASS_$_DHKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d709d7c0 (    0x28) OBJC_METACLASS_$_LegacySigningKeyPublic [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d709d7e8 (    0x28) OBJC_CLASS_$_LegacySigningKeyPublic [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d709d810 (    0x28) OBJC_METACLASS_$_NGMProtocolVersion [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d709d838 (    0x28) OBJC_CLASS_$_NGMProtocolVersion [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d709d860 (    0x28) OBJC_CLASS_$_NGMFullDeviceIdentity [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d709d888 (    0x28) OBJC_METACLASS_$_NGMFullDeviceIdentity [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d709d8b0 (    0x28) OBJC_CLASS_$_SecKeyP256Public [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d709d8d8 (    0x28) OBJC_METACLASS_$_SecKeyP256Public [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d709d900 (    0x28) OBJC_CLASS_$_SecKeyP256Private [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d709d928 (    0x28) OBJC_METACLASS_$_SecKeyP256Private [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d709d950 (    0x28) OBJC_METACLASS_$_DHPublicKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d709d978 (    0x28) OBJC_CLASS_$_DHPublicKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d709d9a0 (    0x28) OBJC_METACLASS_$_SigningKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d709d9c8 (    0x28) OBJC_CLASS_$_SigningKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d709d9f0 (    0x28) OBJC_CLASS_$_SecMessageLegacyFullIdentity [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d709da18 (    0x28) OBJC_METACLASS_$_SecMessageLegacyFullIdentity [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d709da40 (    0x28) OBJC_CLASS_$_SecKeyRSAPrivate [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d709da68 (    0x28) OBJC_METACLASS_$_SecKeyRSAPrivate [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d709da90 (    0x28) OBJC_METACLASS_$_NGMTimeBasedEvaluations [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d709dab8 (    0x28) OBJC_CLASS_$_NGMTimeBasedEvaluations [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d709dae0 (    0x28) OBJC_CLASS_$_PublicKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d709db08 (    0x28) OBJC_METACLASS_$_PublicKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d709db30 (    0x28) OBJC_CLASS_$_NGMPBLegacyKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d709db58 (    0x28) OBJC_METACLASS_$_NGMPBLegacyKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d709db80 (    0x28) OBJC_CLASS_$_NGMPBDevicePreKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d709dba8 (    0x28) OBJC_METACLASS_$_NGMPBDevicePreKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d709dbd0 (    0x28) OBJC_CLASS_$_NGMPBFullDeviceIdentity [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d709dbf8 (    0x28) OBJC_METACLASS_$_NGMPBFullDeviceIdentity [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d709dc20 (    0x28) OBJC_CLASS_$_NGMPBP256Key [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d709dc48 (    0x28) OBJC_METACLASS_$_NGMPBP256Key [PEXT, NameNList, MangledNameNList, NList] 
            0x00000001d709dc70 (    0x38) __DATA_DIRTY __bss
                0x00000001d709dc70 (     0x8) SecMPFullIdentityGetTypeID.sSecMPFullIdentityGetTypeIDOnce [NameNList, MangledNameNList, NList] 
                0x00000001d709dc78 (     0x8) SecMPFullIdentityGetTypeID.sSecMPFullIdentityGetTypeIDSingleton [NameNList, MangledNameNList, NList] 
                0x00000001d709dc80 (     0x8) SecMPPublicIdentityGetTypeID.sSecMPPublicIdentityGetTypeIDOnce [NameNList, MangledNameNList, NList] 
                0x00000001d709dc88 (     0x8) SecMPPublicIdentityGetTypeID.sSecMPPublicIdentityGetTypeIDSingleton [NameNList, MangledNameNList, NList] 
                0x00000001d709dc90 (     0x8) MessageProtectionLog.log [NameNList, MangledNameNList, NList] 
                0x00000001d709dc98 (     0x8) MessageProtectionLog.onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d709dca0 (     0x8) sharedManager.sharedMyManager [NameNList, MangledNameNList, NList] 
        0x000000023a910000 (0x37bf0000) __LINKEDIT SEGMENT
