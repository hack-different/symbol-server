/usr/lib/libobjc.A.dylib [arm64e, 0.029224 seconds]:
    375F98A8-1D18-3DA7-92A3-B7964847B03A /usr/lib/libobjc.A.dylib [DYLIB, DYLDSHAREDCACHE, FaultedFromSelfDyldSharedCache, MMap64]  
        0x0000000180068000 ( 0x4efe1) __TEXT SEGMENT
            0x0000000180068000 (  0x1c00) MACH_HEADER
            0x0000000180069c00 ( 0x3cb24) __TEXT __text
                0x0000000180069c08 (   0x884) _objc_init [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018006a48c (    0xf4) map_images [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018006a580 (  0x1b70) map_images_nolock [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018006c0f0 (    0xc0) objc::SafeRanges::add(unsigned long, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018006c1b0 (    0x1c) std::__1::__function::__func<appendHeader::$_1, std::__1::allocator<appendHeader::$_1>, void (segment_command_64 const*, long)>::operator()(segment_command_64 const*&&, long&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018006c1cc (    0x10) std::__1::__function::__func<appendHeader::$_1, std::__1::allocator<appendHeader::$_1>, void (segment_command_64 const*, long)>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018006c1dc (   0x17c) __sel_registerName(char const*, bool, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018006c358 (    0x34) NXCreateMapTableFromZone [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018006c38c (    0x2c) NXCreateHashTableFromZone [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018006c3b8 (    0xd0) NXHashGet [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018006c488 (    0x34) hashPrototype(void const*, void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018006c4bc (    0x58) isEqualPrototype(void const*, void const*, void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018006c514 (   0x1a8) NXHashInsert [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018006c6bc (   0x10c) _NXHashRehashToCapacity [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018006c7c8 (    0x78) NXNextHashState [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018006c840 (    0x74) protocols() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018006c8b4 (    0xf0) getProtocol(char const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018006c9a4 (    0x64) _mapStrHash(_NXMapTable*, void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018006ca08 (   0x158) copySwiftV1MangledName(char const*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018006cb60 (    0x9c) getPreoptimizedProtocol [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018006cbfc (    0x24) __getPreoptimizedProtocol_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018006cc20 (    0xc0) remapClass(objc_class*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018006cce0 (   0x24c) objc::UnattachedCategories::addForClass(locstamped_category_t, objc_class*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018006cf2c (   0x14c) objc::DenseMap<objc_class*, objc::category_list, objc::DenseMapValueInfo<objc::category_list>, objc::DenseMapInfo<objc_class*>, objc::detail::DenseMapPair<objc_class*, objc::category_list>>::grow(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018006d078 (   0x124) addClassTableEntry(objc_class*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018006d19c (   0xdc0) realizeClassWithoutSwift(objc_class*, objc_class*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018006df5c (   0x1c4) addSubclass(objc_class*, objc_class*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018006e120 (   0x27c) addMethod(objc_class*, objc_selector*, void (*)(), char const*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018006e39c (   0x870) getMethodNoSuper_nolock(objc_class*, objc_selector*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018006ec0c (   0x158) objc::UnattachedCategories::attachToClass(objc_class*, objc_class*, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018006ed64 (    0xec) objc::DenseMapBase<objc::DenseMap<objc_class*, objc::category_list, objc::DenseMapValueInfo<objc::category_list>, objc::DenseMapInfo<objc_class*>, objc::detail::DenseMapPair<objc_class*, objc::category_list>>, objc_class*, objc::category_list, objc::DenseMapValueInfo<objc::category_list>, objc::DenseMapInfo<objc_class*>, objc::detail::DenseMapPair<objc_class*, objc::category_list>>::compact() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018006ee50 (   0x3dc) attachCategories(objc_class*, locstamped_category_t const*, unsigned int, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018006f22c (    0x7c) objc_class::setInstancesRequireRawIsaRecursively(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018006f2a8 (    0xb0) invocation function for block in objc_class::setInstancesRequireRawIsaRecursively(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018006f358 (   0x294) fixupMethodList(method_list_t*, bool, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018006f5ec (   0x158) _objc_registerTaggedPointerClass [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018006f744 (    0x70) classSlotForTagIndex(objc_tag_index_t) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018006f7b4 (   0x100) class_createInstance [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018006f8b4 (    0x34) (null) [FUNC, FunctionStarts] 
                0x000000018006f8e8 (    0x44) objc_retain [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018006f8e8 (    0x44) objc_retain_x0 [FUNC, EXT, ALIAS, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018006f92c (    0x44) objc_retain_x1 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018006f970 (    0x44) objc_retain_x2 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018006f9b4 (    0x44) objc_retain_x3 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018006f9f8 (    0x44) objc_retain_x4 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018006fa3c (    0x44) objc_retain_x5 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018006fa80 (    0x44) objc_retain_x6 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018006fac4 (    0x44) objc_retain_x7 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018006fb08 (    0x44) objc_retain_x8 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018006fb4c (    0x44) objc_retain_x9 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018006fb90 (    0x44) objc_retain_x10 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018006fbd4 (    0x44) objc_retain_x11 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018006fc18 (    0x44) objc_retain_x12 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018006fc5c (    0x44) objc_retain_x13 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018006fca0 (    0x44) objc_retain_x14 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018006fce4 (    0x44) objc_retain_x15 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018006fd28 (    0x44) objc_retain_x19 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018006fd6c (    0x44) objc_retain_x20 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018006fdb0 (    0x44) objc_retain_x21 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018006fdf4 (    0x44) objc_retain_x22 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018006fe38 (    0x44) objc_retain_x23 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018006fe7c (    0x44) objc_retain_x24 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018006fec0 (    0x44) objc_retain_x25 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018006ff04 (    0x44) objc_retain_x26 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018006ff48 (    0x44) objc_retain_x27 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018006ff8c (    0x54) objc_retain_x28 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018006ffe0 (    0x98) objc_release [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018006ffe0 (    0x98) objc_release_x0 [FUNC, EXT, ALIAS, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180070078 (    0x98) objc_release_x1 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180070110 (    0x98) objc_release_x2 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800701a8 (    0x98) objc_release_x3 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180070240 (    0x98) objc_release_x4 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800702d8 (    0x98) objc_release_x5 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180070370 (    0x98) objc_release_x6 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180070408 (    0x98) objc_release_x7 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800704a0 (    0x98) objc_release_x8 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180070538 (    0x98) objc_release_x9 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800705d0 (    0x98) objc_release_x10 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180070668 (    0x98) objc_release_x11 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180070700 (    0x98) objc_release_x12 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180070798 (    0x98) objc_release_x13 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180070830 (    0x98) objc_release_x14 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800708c8 (    0x98) objc_release_x15 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180070960 (    0x98) objc_release_x19 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800709f8 (    0x98) objc_release_x20 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180070a90 (    0x98) objc_release_x21 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180070b28 (    0x98) objc_release_x22 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180070bc0 (    0x98) objc_release_x23 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180070c58 (    0x98) objc_release_x24 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180070cf0 (    0x98) objc_release_x25 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180070d88 (    0x98) objc_release_x26 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180070e20 (    0x98) objc_release_x27 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180070eb8 (   0x148) objc_release_x28 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180071000 (   0x400) objc_msgSend_indirect_branch [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180071400 (    0xe0) objc_msgSend [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800714e0 (    0xe0) objc_msgLookup [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800715c0 (    0x20) _objc_msgNil [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800715e0 (    0x20) objc_msgSendSuper [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180071600 (    0x80) objc_msgSendSuper2 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180071680 (    0xa0) objc_msgLookupSuper2 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180071720 (    0xa0) _objc_msgSend_uncached [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800717c0 (    0xa0) _objc_msgLookup_uncached [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180071860 (    0xa0) cache_getImp [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180071900 (    0x20) _objc_msgForward_impcache [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180071920 (    0x20) _objc_msgForward [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180071940 (    0x20) objc_msgSend_noarg [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180071960 (    0x20) objc_msgSend_debug [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180071980 (    0x20) objc_msgSendSuper2_debug [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800719a0 (    0xa8) method_invoke [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180071a48 (   0x3c8) lookUpImpOrForward [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180071e10 (   0x344) getMaybeUnrealizedNonMetaClass(objc_class*, objc_object*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180072154 (   0x3c0) initializeNonMetaClass [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180072514 (   0x11c) _setThisThreadIsInitializingClass(objc_class*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180072630 (    0xb4) _fetchInitializingClassList(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800726e4 (    0x20) CALLING_SOME_+initialize_METHOD [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180072704 (    0x90) _thisThreadIsInitializingClass [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180072794 (     0x8) +[NSObject initialize] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007279c (   0x298) lockAndFinishInitializing(objc_class*, objc_class*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180072a34 (   0x340) _finishInitializing(objc_class*, objc_class*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180072d74 (     0x4) -[NSObject retain] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180072d78 (    0x58) _objc_rootRetain [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180072dd0 (     0x4) -[NSObject dealloc] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180072dd4 (    0x58) _objc_rootDealloc [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180072e2c (    0xac) objc_destructInstance [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180072ed8 (    0xf8) bool objc::DenseMapBase<objc::DenseMap<DisguisedPtr<objc_object>, objc::DenseMap<void const*, objc::ObjcAssociation, objc::DenseMapValueInfo<objc::ObjcAssociation>, objc::DenseMapInfo<void const*>, objc::detail::DenseMapPair<void const*, objc::ObjcAssociation>>, objc::DenseMapValueInfo<objc::DenseMap<void const*, objc::ObjcAssociation, objc::DenseMapValueInfo<objc::ObjcAssociation>, objc::DenseMapInfo<void const*>, objc::detail::DenseMapPair<void const*, objc::ObjcAssociation>>>, objc::DenseMapInfo<DisguisedPtr<objc_object>>, objc::detail::DenseMapPair<DisguisedPtr<objc_object>, objc::DenseMap<void const*, objc::ObjcAssociation, objc::DenseMapValueInfo<objc::ObjcAssociation>, objc::DenseMapInfo<void const*>, objc::detail::DenseMapPair<void const*, objc::ObjcAssociation>>>>, DisguisedPtr<objc_object>, objc::DenseMap<void const*, objc::ObjcAssociation, objc::DenseMapValueInfo<objc::ObjcAssociation>, objc::DenseMapInfo<void const*>, objc:...
                0x0000000180072fd0 (   0x13c) objc_object::sidetable_clearDeallocating() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007310c (     0x4) +[NSObject class] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180073110 (   0x610) load_images [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180073720 (   0x17c) schedule_class_load(objc_class*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007389c (     0x4) objc_autoreleasePoolPush [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800738a0 (   0x138) AutoreleasePoolPage::autoreleaseNoPage(objc_object*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800739d8 (   0x1a8) objc_autoreleasePoolPop [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180073b80 (    0x10) objc_lookUpClass [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180073b90 (   0x1c8) look_up_class [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180073d58 (    0x88) getClassExceptSomeSwift(char const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180073de0 (    0xa8) getPreoptimizedClass [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180073e88 (     0xc) _objc_setBadAllocHandler [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180073e94 (    0x18) objc_setExceptionPreprocessor [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180073eac (    0x14) objc_setExceptionMatcher [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180073ec0 (    0x18) objc_setUncaughtExceptionHandler [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180073ed8 (    0x18) objc_setForwardHandler [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180073ef0 (    0x18) objc_setEnumerationMutationHandler [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180073f08 (   0x2bc) objc_getFutureClass [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800741c4 (    0xb0) object_setClass [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180074274 (    0x34) objc_alloc [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800742a8 (     0x4) +[NSObject alloc] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800742ac (    0x24) _objc_rootAlloc [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800742d0 (     0x8) +[NSObject self] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800742d8 (   0x114) objc_initializeClassPair [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800743ec (    0x14) empty_getClass(char const*, objc_class**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180074400 (   0x690) objc_initializeClassPair_internal(objc_class*, char const*, objc_class*, objc_class*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180074a90 (   0x2f0) objc_registerClassPair [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180074d80 (   0x208) addNamedClass(objc_class*, char const*, objc_class*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180074f88 (    0x64) NXMapInsert [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180074fec (   0x258) class_setSuperclass [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180075244 (    0xbc) removeSubclass(objc_class*, objc_class*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180075300 (   0x150) class_setVersion [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180075450 (    0x64) _mapStrIsEqual(_NXMapTable*, void const*, void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800754b4 (    0x50) +[NSObject new] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180075504 (   0x104) _objc_rootAllocWithZone [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180075608 (    0x10) -[NSObject init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180075618 (    0x10) objc_getClass [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180075628 (   0x124) objc::DenseMap<objc_class*, PendingInitialize*, objc::DenseMapValueInfo<PendingInitialize*>, objc::DenseMapInfo<objc_class*>, objc::detail::DenseMapPair<objc_class*, PendingInitialize*>>::grow(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007574c (    0xd4) object_getClass [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180075820 (   0x20c) objc_autorelease [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180075a2c (    0x9c) objc_retainAutoreleasedReturnValue [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180075ac8 (    0x74) objc_storeStrong [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180075b3c (   0x168) objc_retainAutoreleaseReturnValue [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180075ca4 (   0x198) object_getMethodImplementation [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180075e3c (    0xb4) object_getIndexedIvars [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180075ef0 (    0x8c) objc_object::rootAutorelease2() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180075f7c (    0x38) objc_allocWithZone [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180075fb4 (     0x4) +[NSObject allocWithZone:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180075fb8 (     0x8) -[NSObject hash] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180075fc0 (   0x278) objc_storeWeak [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180076238 (   0x198) weak_register_no_lock [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800763d0 (    0xa0) weak_entry_for_referent(weak_table_t*, objc_object*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180076470 (    0xb0) weak_resize(weak_table_t*, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180076520 (    0xd0) weak_entry_insert(weak_table_t*, weak_entry_t*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800765f0 (   0x188) append_referrer(weak_entry_t*, objc_object**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180076778 (     0x4) -[NSObject autorelease] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007677c (   0x158) _objc_rootAutorelease [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800768d4 (    0x40) objc_loadWeak [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180076914 (   0x230) objc_loadWeakRetained [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180076b44 (   0x164) objc_autoreleaseReturnValue [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180076ca8 (    0x14) -[NSObject mutableCopy] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180076cbc (    0x10) -[NSObject isEqual:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180076ccc (     0x4) -[NSObject release] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180076cd0 (    0xa4) _objc_rootRelease [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180076d74 (     0xc) -[NSObject class] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180076d80 (    0xcc) class_getMethodImplementation [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180076e4c (    0x4c) -[NSObject respondsToSelector:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180076e98 (    0xd4) class_respondsToSelector_inst [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180076f6c (   0x3a4) resolveMethod_locked(objc_object*, objc_selector*, objc_class*, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180077310 (     0xc) +[NSObject resolveInstanceMethod:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007731c (   0x12c) AutoreleasePoolPage::releaseUntil(objc_object**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180077448 (    0x8c) -[NSObject isKindOfClass:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800774d4 (    0x1c) class_getName [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800774f0 (   0x148) copySwiftV1DemangledName(char const*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180077638 (    0x1c) class_isMetaClass [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180077654 (   0x278) objc_storeWeakOrNil [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800778cc (    0x10) -[NSObject isProxy] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800778dc (    0x30) object_isClass [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007790c (    0x38) -[NSObject isMemberOfClass:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180077944 (    0x2c) objc_retainAutoreleaseAndReturn(objc_object*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180077970 (    0x78) class_initialize [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800779e8 (     0xc) +[NSObject allowsWeakReference] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800779f4 (    0x38) +[NSObject superclass] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180077a2c (   0x4f0) class_copyPropertyList [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180077f1c (     0x8) property_getName [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180077f24 (    0x10) property_getAttributes [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180077f34 (    0x10) sel_registerName [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180077f44 (    0xf0) objc::detail::DenseSetPair<char const*>* objc::DenseMapBase<objc::DenseMap<char const*, objc::detail::DenseSetEmpty, objc::DenseMapValueInfo<objc::detail::DenseSetEmpty>, objc::DenseMapInfo<char const*>, objc::detail::DenseSetPair<char const*>>, char const*, objc::detail::DenseSetEmpty, objc::DenseMapValueInfo<objc::detail::DenseSetEmpty>, objc::DenseMapInfo<char const*>, objc::detail::DenseSetPair<char const*>>::InsertIntoBucketImpl<char const*>(char const* const&, char const* const&, objc::detail::DenseSetPair<char const*>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180078034 (    0xbc) objc::DenseMapBase<objc::DenseMap<char const*, objc::detail::DenseSetEmpty, objc::DenseMapValueInfo<objc::detail::DenseSetEmpty>, objc::DenseMapInfo<char const*>, objc::detail::DenseSetPair<char const*>>, char const*, objc::detail::DenseSetEmpty, objc::DenseMapValueInfo<objc::detail::DenseSetEmpty>, objc::DenseMapInfo<char const*>, objc::detail::DenseSetPair<char const*>>::moveFromOldBuckets(objc::detail::DenseSetPair<char const*>*, objc::detail::DenseSetPair<char const*>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800780f0 (    0xc0) objc::DenseMap<char const*, objc::detail::DenseSetEmpty, objc::DenseMapValueInfo<objc::detail::DenseSetEmpty>, objc::DenseMapInfo<char const*>, objc::detail::DenseSetPair<char const*>>::grow(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800781b0 (    0x54) objc::DenseMapInfo<char const*>::isEqual(char const* const&, char const* const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180078204 (    0x48) class_getClassMethod [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007824c (   0x12c) class_getInstanceMethod [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180078378 (    0x14) +[NSObject resolveClassMethod:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007838c (   0x260) class_getProperty [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800785ec (    0x40) class_getSuperclass [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007862c (    0x84) -[NSObject conformsToProtocol:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800786b0 (   0x268) class_conformsToProtocol [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180078918 (    0xe8) protocol_conformsToProtocol_nolock(protocol_t*, protocol_t*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180078a00 (    0x88) class_getVersion [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180078a88 (   0x100) grow_refs_and_insert(weak_entry_t*, objc_object**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180078b88 (    0x10) -[NSObject zone] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180078b98 (    0x1c) -[NSObject copy] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180078bb4 (    0x10) class_respondsToSelector [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180078bc4 (    0x10) +[NSObject isEqual:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180078bd4 (    0x70) +[NSObject conformsToProtocol:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180078c44 (    0x10) +[NSObject respondsToSelector:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180078c54 (    0x28) objc_sync_enter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180078c7c (    0xc0) fetch_cache(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180078d3c (    0x54) _objc_getClassForTag [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180078d90 (    0x84) objc_sync_exit [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180078e14 (    0x44) method_getImplementation [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180078e58 (    0xec) method_getArgumentType [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180078f44 (   0x1b4) encoding_getArgumentInfo [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800790f8 (    0xd8) SkipFirstType(char const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800791d0 (   0x124) objc_allocateClassPair [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800792f4 (    0xec) alloc_class_for_subclass(objc_class*, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800793e0 (   0x118) objc::DenseMap<objc_class*, objc::detail::DenseSetEmpty, objc::DenseMapValueInfo<objc::detail::DenseSetEmpty>, objc::DenseMapInfo<objc_class*>, objc::detail::DenseSetPair<objc_class*>>::grow(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800794f8 (    0x98) dataSegmentsContain(objc_class*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180079590 (    0xd8) objc::SafeRanges::find(unsigned long, unsigned int&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180079668 (    0x30) method_getTypeEncoding [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180079698 (    0xf8) class_addMethod [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180079790 (    0x14) class_getInstanceVariable [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800797a4 (   0x100) _class_getVariable [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800798a4 (    0xdc) getIvar(objc_class*, char const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180079980 (    0xc4) method_getNumberOfArguments [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180079a44 (    0xcc) method_getName [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180079b10 (    0x84) method_copyReturnType [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180079b94 (    0xa0) method_copyArgumentType [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180079c34 (    0x24) -[NSObject allowsWeakReference] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180079c58 (    0x10) -[NSObject retainWeakReference] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180079c68 (     0xc) +[NSObject zone] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180079c74 (     0xc) objc_retainBlock [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180079c80 (    0x28) objc_retainAutorelease [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180079ca8 (    0x18) protocol_getName [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180079cc0 (    0x88) protocol_t::demangledName() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180079d48 (   0x194) protocol_copyProtocolList [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180079edc (   0x26c) protocol_copyMethodDescriptionList [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007a148 (    0xec) fixupProtocolIfNeeded(protocol_t*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007a234 (    0xe4) _protocol_getMethodTypeEncoding [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007a318 (   0x164) protocol_getMethodTypeEncoding_nolock(protocol_t*, objc_selector*, bool, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007a47c (   0x6cc) search_method_list(method_list_t const*, objc_selector*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007ab48 (    0xa8) getExtendedTypesIndexesForMethod(protocol_t*, method_t const*, bool, bool, unsigned int&, unsigned int&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007abf0 (     0xc) +[NSObject hash] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007abfc (   0x100) protocol_getMethodDescription [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007acfc (   0x108) protocol_getMethod(protocol_t*, objc_selector*, bool, bool, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007ae04 (   0x110) protocol_getMethod_nolock(protocol_t*, objc_selector*, bool, bool, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007af14 (    0xfc) objc_setProperty_atomic [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007b010 (    0xe8) objc_getProperty [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007b0f8 (    0xd4) objc_setProperty_atomic_copy [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007b1cc (    0x20) sel_getName [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007b1ec (    0x2c) objc_removeAssociatedObjects [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007b218 (    0xd4) objc_copyStruct [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007b2ec (   0x168) object_cxxConstructFromClass [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007b454 (   0x130) lookupMethodInClassAndLoadCache [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007b584 (    0xe0) object_cxxDestructFromClass(objc_object*, objc_class*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007b664 (   0x22c) _collecting_in_critical() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007b890 (    0x90) objc_unsafeClaimAutoreleasedReturnValue [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007b920 (    0x50) class_getImageName [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007b970 (    0x30) internal_class_getImageName(objc_class*, char const**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007b9a0 (    0x64) -[NSObject performSelector:withObject:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007ba04 (    0x58) -[NSObject methodForSelector:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007ba5c (   0x190) objc_getAssociatedObject [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007bbec (    0x60) +[NSObject isSubclassOfClass:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007bc4c (    0x20) __getPreoptimizedClass_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007bc6c (    0x80) objc_setProperty_nonatomic_copy [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007bcec (    0xcc) AutoreleasePoolPage::kill() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007bdb8 (    0xc0) objc_getProtocol [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007be78 (   0x140) objc_object::rootRetain_overflow(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007bfb8 (    0x78) objc_object::sidetable_addExtraRC_nolock(unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007c030 (    0xe0) object_getClassName [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007c110 (    0x14) sel_getUid [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007c124 (    0x10) -[NSObject forwardingTargetForSelector:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007c134 (    0x14) +[NSObject isProxy] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007c148 (    0x34) objc_releaseAndReturn(objc_object*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007c17c (   0x11c) class_ro_t::duplicate() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007c298 (     0x4) gdb_objc_class_changed [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007c29c (   0x274) objc_initWeak [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007c510 (    0x4c) objc_copyWeak [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007c55c (    0xf4) objc_destroyWeak [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007c650 (   0x538) class_copyProtocolList [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007cb88 (    0x58) method_getDescription [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007cbe0 (    0x98) weak_entry_remove(weak_table_t*, weak_entry_t*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007cc78 (    0x3c) +[NSObject instanceMethodForSelector:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007ccb4 (   0x2cc) imp_implementationWithBlock [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007cf80 (   0x160) TrampolinePointerWrapper::Initialize() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007d0e0 (   0x118) TrampolinePointerWrapper::TrampolinePointers::TrampolineAddress::TrampolineAddress(void*, char const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007d1f8 (   0x308) _allocateTrampolinesAndData() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007d500 (    0x90) objc_setProperty_nonatomic [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007d590 (     0x4) +[NSObject copyWithZone:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007d594 (   0x5d0) objc_setAssociatedObject [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007db64 (   0x174) objc::DenseMap<DisguisedPtr<objc_object>, objc::DenseMap<void const*, objc::ObjcAssociation, objc::DenseMapValueInfo<objc::ObjcAssociation>, objc::DenseMapInfo<void const*>, objc::detail::DenseMapPair<void const*, objc::ObjcAssociation>>, objc::DenseMapValueInfo<objc::DenseMap<void const*, objc::ObjcAssociation, objc::DenseMapValueInfo<objc::ObjcAssociation>, objc::DenseMapInfo<void const*>, objc::detail::DenseMapPair<void const*, objc::ObjcAssociation>>>, objc::DenseMapInfo<DisguisedPtr<objc_object>>, objc::detail::DenseMapPair<DisguisedPtr<objc_object>, objc::DenseMap<void const*, objc::ObjcAssociation, objc::DenseMapValueInfo<objc::ObjcAssociation>, objc::DenseMapInfo<void const*>, objc::detail::DenseMapPair<void const*, objc::ObjcAssociation>>>>::grow(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007dcd8 (    0xe4) bool objc::DenseMapBase<objc::DenseMap<void const*, objc::ObjcAssociation, objc::DenseMapValueInfo<objc::ObjcAssociation>, objc::DenseMapInfo<void const*>, objc::detail::DenseMapPair<void const*, objc::ObjcAssociation>>, void const*, objc::ObjcAssociation, objc::DenseMapValueInfo<objc::ObjcAssociation>, objc::DenseMapInfo<void const*>, objc::detail::DenseMapPair<void const*, objc::ObjcAssociation>>::LookupBucketFor<void const*>(void const* const&, objc::detail::DenseMapPair<void const*, objc::ObjcAssociation> const*&) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007ddbc (   0x14c) objc::DenseMap<void const*, objc::ObjcAssociation, objc::DenseMapValueInfo<objc::ObjcAssociation>, objc::DenseMapInfo<void const*>, objc::detail::DenseMapPair<void const*, objc::ObjcAssociation>>::grow(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007df08 (    0x64) class_getInstanceSize [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007df6c (    0x64) objc_constructInstance [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007dfd0 (     0xc) +[NSObject retain] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007dfdc (    0x6c) +[NSObject isKindOfClass:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007e048 (   0x10c) objc_object::clearDeallocating_slow() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007e154 (   0x158) weak_clear_no_lock [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007e2ac (    0x54) +[NSObject performSelector:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007e300 (    0x5c) +[NSObject methodForSelector:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007e35c (  0x1420) class_copyMethodList [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007f77c (     0x4) -[NSObject retainCount] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007f780 (    0xe0) _objc_rootRetainCount [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007f860 (    0xc8) AutoreleasePoolPage::autoreleaseFullPage(objc_object*, AutoreleasePoolPage*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007f928 (    0x28) -[NSObject _isDeallocating] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007f950 (    0x54) -[NSObject performSelector:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007f9a4 (   0x254) objc_object::rootRelease_underflow(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007fbf8 (     0xc) -[NSObject self] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007fc04 (    0xa8) SubtypeUntil(char const*, char) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007fcac (    0xd0) object_setInstanceVariable [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018007fd7c (   0x3b8) _class_lookUpIvar(objc_class*, ivar_t*, long&, objc_ivar_memory_management_t&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180080134 (    0xd8) objc::DenseMapBase<objc::DenseMap<DisguisedPtr<objc_object>, objc::DenseMap<void const*, objc::ObjcAssociation, objc::DenseMapValueInfo<objc::ObjcAssociation>, objc::DenseMapInfo<void const*>, objc::detail::DenseMapPair<void const*, objc::ObjcAssociation>>, objc::DenseMapValueInfo<objc::DenseMap<void const*, objc::ObjcAssociation, objc::DenseMapValueInfo<objc::ObjcAssociation>, objc::DenseMapInfo<void const*>, objc::detail::DenseMapPair<void const*, objc::ObjcAssociation>>>, objc::DenseMapInfo<DisguisedPtr<objc_object>>, objc::detail::DenseMapPair<DisguisedPtr<objc_object>, objc::DenseMap<void const*, objc::ObjcAssociation, objc::DenseMapValueInfo<objc::ObjcAssociation>, objc::DenseMapInfo<void const*>, objc::detail::DenseMapPair<void const*, objc::ObjcAssociation>>>>, DisguisedPtr<objc_object>, objc::DenseMap<void const*, objc::ObjcAssociation, objc::DenseMapValueInfo<objc::ObjcAssociation>, objc::DenseMapInfo<void const*>, objc::deta...
                0x000000018008020c (    0x6c) +[NSObject performSelector:withObject:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180080278 (   0x180) imp_removeBlock [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800803f8 (   0x618) readClass(objc_class*, bool, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180080a10 (   0x130) objc_copyClassNamesForImageHeader [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180080b40 (    0xcc) copyClassNamesForImage_nolock(header_info*, unsigned int*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180080c0c (    0xe0) NXMapKeyCopyingInsert [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180080cec (   0x468) class_addIvar [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180081154 (    0x1c) ivar_getOffset [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180081170 (     0x4) -[NSObject _tryRetain] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180081174 (    0x9c) _objc_rootTryRetain [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180081210 (    0x8c) objc_object::sidetable_tryRetain() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008129c (    0xc4) method_getReturnType [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180081360 (     0x8) objc_sync_nil [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180081368 (    0x6c) -[NSObject performSelector:withObject:withObject:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800813d4 (     0x8) -[NSObject isFault] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800813dc (    0x70) protocol_isEqual [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008144c (    0xc8) protocol_conformsToProtocol [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180081514 (   0x3f4) object_copy [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180081908 (    0xf0) method_setImplementation [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800819f8 (   0x178) _method_setImplementation(objc_class*, method_t*, void (*)()) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180081b70 (   0x308) method_exchangeImplementations [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180081e78 (   0x230) objc_exception_throw [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800820a8 (   0x214) __objc_personality_v0 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800822bc (   0x1b8) _objc_exception_do_catch [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180082474 (    0x64) objc_begin_catch [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800824d8 (    0x48) objc_end_catch [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180082520 (    0x80) _objc_exception_destructor(void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800825a0 (   0x134) fixupProtocol(protocol_t*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800826d4 (   0x258) fixupProtocolMethodList(protocol_t*, method_list_t*, bool, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008292c (    0x10) +[NSObject release] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008293c (    0x2c) object_dispose [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180082968 (   0x1ac) class_copyIvarList [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180082b14 (     0xc) ivar_getName [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180082b20 (     0xc) ivar_getTypeEncoding [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180082b2c (   0x18c) property_copyAttributeList [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180082cb8 (   0x100) iteratePropertyAttributes(char const*, bool (*)(unsigned int, void*, void*, char const*, unsigned long, char const*, unsigned long), void*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180082db8 (    0xa4) copyOneAttribute(unsigned int, void*, void*, char const*, unsigned long, char const*, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180082e5c (    0x34) _objc_rootIsDeallocating [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180082e90 (     0x8) -[Protocol hash] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180082e98 (    0xc4) -[Protocol isEqual:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180082f5c (    0xe8) protocol_getProperty [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180083044 (   0x130) protocol_getProperty_nolock(protocol_t*, char const*, bool, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180083174 (    0x18) +[NSObject instancesRespondToSelector:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008318c (    0xa4) _objc_rootReleaseWasZero [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180083230 (    0x14) +[NSObject isMemberOfClass:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180083244 (    0x18) sel_isEqual [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008325c (   0x11c) objc_moveWeak [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180083378 (    0x94) objc_copyCppObjectAtomic [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008340c (   0x27c) objc_initWeakOrNil [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180083688 (    0x40) _class_getIvarMemoryManagement [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800836c8 (    0xc4) objc_copyClassList [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008378c (   0x1f4) realizeAllClasses() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180083980 (   0x11c) objc_copyRealizedClassList_nolock(unsigned int*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180083a9c (   0x1a8) foreach_realized_class(bool (objc_class*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180083c44 (    0x18) invocation function for block in objc_copyRealizedClassList_nolock(unsigned int*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180083c5c (    0x10) protocol_copyPropertyList [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180083c6c (   0x178) protocol_copyPropertyList2 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180083de4 (   0x140) class_addProtocol [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180083f24 (    0x84) object_getInstanceVariable [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180083fa8 (    0x80) object_getIvar [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180084028 (     0xc) +[NSObject autorelease] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180084034 (   0x110) _NXMapRehash(_NXMapTable*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180084144 (    0x3c) objc_setHook_getClass [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180084180 (   0x11c) objc_addLoadImageFunc [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008429c (    0xf8) class_replaceMethod [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180084394 (    0x28) objc_opt_self [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800843bc (    0x58) objc_getMetaClass [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180084414 (    0x48) objc_setHook_getImageName [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008445c (    0xdc) objc_opt_class [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180084538 (   0x15c) objc_readClassPair [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180084694 (   0x15c) _objc_realizeClassFromSwift [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800847f0 (   0x1f8) _objc_flush_caches [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800849e8 (   0x25c) objc_copyImageNames [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180084c44 (   0x188) bool std::__1::__insertion_sort_incomplete<objc::SafeRanges::find(unsigned long, unsigned int&)::$_0&, objc::SafeRanges::Range*>(objc::SafeRanges::Range*, objc::SafeRanges::Range*, objc::SafeRanges::find(unsigned long, unsigned int&)::$_0&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180084dcc (    0x9c) scanMangledField(char const*&, char const*, char const*&, int&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180084e68 (   0x310) _objc_atfork_prepare [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180085178 (   0x2a4) _objc_atfork_parent [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008541c (   0x104) property_copyAttributeValue [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180085520 (    0x9c) findOneAttribute(unsigned int, void*, void*, char const*, unsigned long, char const*, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800855bc (   0x134) objc_opt_isKindOfClass [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800856f0 (     0x8) +[NSObject retainWeakReference] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800856f8 (    0xa8) _headerForClass [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800857a0 (    0xb4) _objc_syslog(char const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180085854 (    0x74) nonMetaClasses() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800858c8 (    0x10) _mapPtrHash(_NXMapTable*, void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800858d8 (   0x180) objc_allocateProtocol [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180085a58 (   0x17c) protocol_addProtocol [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180085bd4 (   0x160) objc_registerProtocol [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180085d34 (   0x290) NXMapRemove [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180085fc4 (    0x44) NXFreeMapTable [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180086008 (    0x88) NXResetMapTable [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180086090 (   0x164) addRemappedClass(objc_class*, objc_class*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800861f4 (   0x138) objc::DenseMap<objc_class*, objc_class*, objc::DenseMapValueInfo<objc_class*>, objc::DenseMapInfo<objc_class*>, objc::detail::DenseMapPair<objc_class*, objc_class*>>::grow(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008632c (   0x138) class_addMethodsBulk [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180086464 (   0x2ac) addMethods(objc_class*, objc_selector* const*, void (* const*)(), char const**, unsigned int, bool, unsigned int*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180086710 (   0x110) class_replaceMethodsBulk [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180086820 (     0xc) -[NSObject debugDescription] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008682c (    0x58) getPreoptimizedHeaderRW [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180086884 (   0x144) NXCreateMapTable [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800869c8 (   0x198) NXCreateHashTable [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180086b60 (     0x8) NXPtrHash [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180086b68 (    0x64) NXMapGet [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180086bcc (    0xd4) NXHashMember [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180086ca0 (     0xc) NXCountMapTable [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180086cac (    0x10) _mapPtrIsEqual(_NXMapTable*, void const*, void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180086cbc (   0xe20) objc_class::getLoadMethod() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180087adc (   0x6f0) _category_getLoadMethod [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800881cc (   0x1b8) weak_unregister_no_lock [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180088384 (   0x350) objc_class::demangledName(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800886d4 (    0x14) NXPtrIsEqual [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800886e8 (    0x60) class_getIvarLayout [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180088748 (    0xbc) make_ro_writeable(class_rw_t*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180088804 (    0x90) +[NSObject isAncestorOfObject:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180088894 (    0x54) class_getWeakIvarLayout [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800888e8 (   0x73c) objc_addExceptionHandler [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180089024 (   0x1ac) read_address(unsigned long*, dwarf_eh_bases const*, unsigned char) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800891d0 (    0x58) read_sleb(unsigned long*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180089228 (    0xdc) fetch_handler_list(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180089304 (    0xc0) objc_getClassList [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800893c4 (   0x14c) objc_removeExceptionHandler [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180089510 (    0x60) -[NSObject superclass] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180089570 (     0x8) NXNoEffectFree [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180089578 (    0x64) NXStrIsEqual [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800895dc (    0x54) NXStrHash [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180089630 (     0x8) NXReallyFree [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180089638 (    0x14) isEqualPtrStructKey(void const*, void const*, void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008964c (     0xc) hashPtrStructKey(void const*, void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180089658 (     0xc) isEqualStrStructKey(void const*, void const*, void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180089664 (    0x14) hashStrStructKey(void const*, void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180089678 (    0xd8) freeBuckets(NXHashTable*, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180089750 (    0x44) NXFreeHashTable [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180089794 (    0x2c) NXEmptyHashTable [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800897c0 (    0x2c) NXResetHashTable [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800897ec (    0xbc) NXCompareHashTables [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800898a8 (     0x8) NXCountHashTable [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800898b0 (     0x8) NXInitHashState [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800898b8 (    0xb8) NXCopyHashTable [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180089970 (   0x190) NXHashInsertIfAbsent [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180089b00 (   0x268) NXHashRemove [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180089d68 (    0x10) _mapNoFree(_NXMapTable*, void*, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180089d78 (    0x4c) isEqualPrototype(void const*, void const*, void const*) (.7) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180089dc4 (    0x24) hashPrototype(void const*, void const*) (.8) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180089de8 (    0xd0) NXCompareMapTables [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180089eb8 (    0xe0) _NXMapMemberWithHash(_NXMapTable*, void const*, unsigned int, void**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180089f98 (     0xc) NXInitMapState [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180089fa4 (    0x50) NXNextMapState [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180089ff4 (    0x60) NXMapMember [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008a054 (    0x40) NXMapGetWithHash [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008a094 (   0x174) NXMapInsertWithHash [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008a208 (     0x4) objc_collect [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008a20c (     0x8) objc_collectingEnabled [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008a214 (     0x4) objc_setCollectionThreshold [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008a218 (     0x4) objc_setCollectionRatio [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008a21c (     0x4) objc_startCollectorThread [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008a220 (    0x14) objc_atomicCompareAndSwapPtr [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008a234 (    0x14) objc_atomicCompareAndSwapPtrBarrier [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008a248 (    0x14) objc_atomicCompareAndSwapGlobal [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008a25c (    0x14) objc_atomicCompareAndSwapGlobalBarrier [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008a270 (    0x14) objc_atomicCompareAndSwapInstanceVariable [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008a284 (    0x14) objc_atomicCompareAndSwapInstanceVariableBarrier [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008a298 (     0x8) objc_assign_strongCast [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008a2a0 (     0x8) objc_assign_global [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008a2a8 (     0x8) objc_assign_threadlocal [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008a2b0 (     0x8) objc_assign_ivar [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008a2b8 (     0x8) objc_read_weak [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008a2c0 (     0x8) objc_assign_weak [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008a2c8 (     0x4) objc_memmove_collectable [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008a2cc (     0x4) objc_finalizeOnMainThread [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008a2d0 (     0x8) objc_is_finalized [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008a2d8 (     0x4) objc_clear_stack [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008a2dc (     0x8) objc_collecting_enabled [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008a2e4 (     0x4) objc_set_collection_threshold [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008a2e8 (     0x4) objc_set_collection_ratio [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008a2ec (     0x4) objc_start_collector_thread [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008a2f0 (     0x8) objc_allocate_object [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008a2f8 (     0x4) objc_registerThreadWithCollector [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008a2fc (     0x4) objc_unregisterThreadWithCollector [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008a300 (     0x4) objc_assertRegisteredThreadWithCollector [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008a304 (     0x8) objc_collect_init [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008a30c (     0x8) objc_collectableZone [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008a314 (     0x8) objc_isAuto [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008a31c (     0x8) objc_dumpHeap [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008a324 (    0x74) cache_t::allocateBuckets(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008a398 (    0x90) cache_t::isConstantEmptyCache() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008a428 (   0x1f0) cache_t::insert(objc_selector*, void (*)(), objc_object*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008a618 (   0x120) cache_t::collect_free(bucket_t*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008a738 (   0x1f0) cache_t::collectNolock(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008a928 (     0xc) objc_cache_buckets [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008a934 (     0x8) objc_cache_bytesForCapacity [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008a93c (     0x8) objc_cache_occupied [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008a944 (    0x28) objc_cache_capacity [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008a96c (   0x1d8) objc_object::changeIsa(objc_class*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008ab44 (    0x94) class_rw_t::ro() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008abd8 (    0xa8) object_setIvar [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008ac80 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000018008ac90 (    0x98) object_setIvarWithStrongDefault [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008ad28 (    0x10) (null) [FUNC, FunctionStarts] 
                0x000000018008ad38 (    0xbc) object_setInstanceVariableWithStrongDefault [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008adf4 (    0x20) class_getClassVariable [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008ae14 (    0x6c) class_respondsToMethod [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008ae80 (    0xf8) class_lookupMethod [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008af78 (   0x270) logMessageSend [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008b1e8 (    0x5c) instrumentObjcMessageSends [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008b244 (   0x174) copyPropertyAttributeString [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008b3b8 (     0x4) _objc_warn_deprecated [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008b3bc (   0x180) _objc_crashlog(char const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008b53c (    0x24) _objc_exception_abort1 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008b560 (    0x24) _objc_exception_abort2 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008b584 (    0x24) _objc_exception_abort3 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008b5a8 (    0x24) _objc_exception_abort4 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008b5cc (     0x8) _objc_exception_false [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008b5d4 (     0x4) _objc_exception_noop [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008b5d8 (     0x4) objc_alt_handler_error [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008b5dc (   0x10c) _objc_default_exception_matcher(objc_class*, objc_object*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008b6e8 (     0xc) _objc_default_exception_preprocessor(objc_object*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008b6f4 (     0x4) _objc_default_uncaught_exception_handler(objc_object*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008b6f8 (    0x34) (null) [FUNC, FunctionStarts] 
                0x000000018008b72c (    0x1c) (null) [FUNC, FunctionStarts] 
                0x000000018008b748 (   0x1b4) alt_handler_error(unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008b8fc (    0xdc) _objc_terminate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008b9d8 (     0xc) __clang_call_terminate [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008b9e4 (    0x9c) WAITING_FOR_A_CLASS_+initialize_LOCK [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008ba80 (     0xc) objc_initializeAfterForkError [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008ba8c (   0x190) performForkChildInitialize(objc_class*, objc_class*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008bc1c (    0xe4) bool objc::DenseMapBase<objc::DenseMap<objc_class*, PendingInitialize*, objc::DenseMapValueInfo<PendingInitialize*>, objc::DenseMapInfo<objc_class*>, objc::detail::DenseMapPair<objc_class*, PendingInitialize*>>, objc_class*, PendingInitialize*, objc::DenseMapValueInfo<PendingInitialize*>, objc::DenseMapInfo<objc_class*>, objc::detail::DenseMapPair<objc_class*, PendingInitialize*>>::LookupBucketFor<objc_class*>(objc_class* const&, objc::detail::DenseMapPair<objc_class*, PendingInitialize*> const*&) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008bd00 (    0x3c) unlockClass(objc_class*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008bd3c (   0x1e4) _objc_addWillInitializeClassFunc [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008bf20 (    0x1c) invocation function for block in objc_copyRealizedClassList_nolock(unsigned int*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008bf3c (     0x4) __destroy_helper_block_e8_32 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008bf40 (     0xc) __copy_helper_block_e8_32c49_ZTSKZL33objc_copyRealizedClassList_nolockPjE3$_6 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008bf4c (     0xc) __copy_helper_block_e8_32c49_ZTSKZL33objc_copyRealizedClassList_nolockPjE3$_5 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008bf58 (    0xa0) method_t_remappedImp_nolock(method_t const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008bff8 (    0xe8) bool objc::DenseMapBase<objc::DenseMap<method_t const*, void*, objc::DenseMapValueInfo<void*>, objc::DenseMapInfo<method_t const*>, objc::detail::DenseMapPair<method_t const*, void*>>, method_t const*, void*, objc::DenseMapValueInfo<void*>, objc::DenseMapInfo<method_t const*>, objc::detail::DenseMapPair<method_t const*, void*>>::LookupBucketFor<method_t const*>(method_t const* const&, objc::detail::DenseMapPair<method_t const*, void*> const*&) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008c0e0 (   0x12c) objc::DenseMap<method_t const*, void*, objc::DenseMapValueInfo<void*>, objc::DenseMapInfo<method_t const*>, objc::detail::DenseMapPair<method_t const*, void*>>::grow(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008c20c (   0x274) method_t::getCachedDescription() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008c480 (    0x7c) method_t::types() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008c4fc (    0xe4) bool objc::DenseMapBase<objc::DenseMap<method_t const*, objc_method_description*, objc::DenseMapValueInfo<objc_method_description*>, objc::DenseMapInfo<method_t const*>, objc::detail::DenseMapPair<method_t const*, objc_method_description*>>, method_t const*, objc_method_description*, objc::DenseMapValueInfo<objc_method_description*>, objc::DenseMapInfo<method_t const*>, objc::detail::DenseMapPair<method_t const*, objc_method_description*>>::LookupBucketFor<method_t const*>(method_t const* const&, objc::detail::DenseMapPair<method_t const*, objc_method_description*> const*&) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008c5e0 (   0x130) objc::DenseMap<method_t const*, objc_method_description*, objc::DenseMapValueInfo<objc_method_description*>, objc::DenseMapInfo<method_t const*>, objc::detail::DenseMapPair<method_t const*, objc_method_description*>>::grow(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008c710 (    0xbc) list_array_tt<method_t, method_list_t, method_list_t_authed_ptr>::ListIterator::ListIterator(list_array_tt<method_t, method_list_t, method_list_t_authed_ptr>::ListIterator const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008c7cc (   0x11c) _objc_setClassCopyFixupHandler [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008c8e8 (   0x38c) class_rw_t::extAlloc(class_ro_t const*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008cc74 (   0xbcc) method_list_t::duplicate() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008d840 (   0x494) list_array_tt<method_t, method_list_t, method_list_t_authed_ptr>::attachLists(method_list_t* const*, unsigned int, bool, char const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008dcd4 (   0x3d4) list_array_tt<property_t, property_list_t, RawPtr>::attachLists(property_list_t* const*, unsigned int, bool, char const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008e0a8 (   0x3d4) list_array_tt<unsigned long, protocol_list_t, RawPtr>::attachLists(protocol_list_t* const*, unsigned int, bool, char const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008e47c (   0x284) list_array_tt<unsigned long, protocol_list_t, RawPtr>::validate() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008e700 (    0xd0) relative_list_list_t<protocol_list_t>::countLists() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008e7d0 (   0x284) list_array_tt<property_t, property_list_t, RawPtr>::validate() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008ea54 (    0xd0) relative_list_list_t<property_list_t>::countLists() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008eb24 (   0x404) list_array_tt<method_t, method_list_t, method_list_t_authed_ptr>::validate() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008ef28 (    0xd0) relative_list_list_t<method_list_t>::countLists() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008eff8 (    0x78) entsize_list_tt<method_t, method_list_t, 4294901763u, method_t::pointer_modifier>::signedEnd() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008f070 (    0x6c) method_list_t::allocateMethodList(unsigned int, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008f0dc (   0x138) method_t::imp(bool) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008f214 (    0x4c) objc_loadClassref [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008f260 (   0x154) initializeAndMaybeRelock(objc_class*, objc_object*, locker_mixin<lockdebug::lock_mixin<objc_lock_base_t>>&, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008f3b4 (   0x240) realizeClassMaybeSwiftMaybeRelock(objc_class*, locker_mixin<lockdebug::lock_mixin<objc_lock_base_t>>&, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008f5f4 (    0xac) class_ro_t const* class_data_bits_t::safe_ro<(Authentication)0>() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008f6a0 (   0x1a0) objc_class::nameForLogging() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008f840 (    0xf0) bool objc::DenseMapBase<objc::DenseMap<objc_class*, objc_class*, objc::DenseMapValueInfo<objc_class*>, objc::DenseMapInfo<objc_class*>, objc::detail::DenseMapPair<objc_class*, objc_class*>>, objc_class*, objc_class*, objc::DenseMapValueInfo<objc_class*>, objc::DenseMapInfo<objc_class*>, objc::detail::DenseMapPair<objc_class*, objc_class*>>::LookupBucketFor<objc_class*>(objc_class* const&, objc::detail::DenseMapPair<objc_class*, objc_class*> const*&) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008f930 (    0xc4) class_data_bits_t::setData(class_rw_t*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008f9f4 (    0x60) objc_class::mangledName() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008fa54 (    0x90) objc_class::setInstanceSize(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018008fae4 (   0x5b0) prepareMethodLists(objc_class*, method_list_t**, int, bool, bool, char const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180090094 (    0x74) class_rw_t::extAllocIfNeeded() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180090108 (    0xe8) bool objc::DenseMapBase<objc::DenseMap<objc_class*, objc::category_list, objc::DenseMapValueInfo<objc::category_list>, objc::DenseMapInfo<objc_class*>, objc::detail::DenseMapPair<objc_class*, objc::category_list>>, objc_class*, objc::category_list, objc::DenseMapValueInfo<objc::category_list>, objc::DenseMapInfo<objc_class*>, objc::detail::DenseMapPair<objc_class*, objc::category_list>>::LookupBucketFor<objc_class const*>(objc_class const* const&, objc::detail::DenseMapPair<objc_class*, objc::category_list> const*&) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800901f0 (    0xec) bool objc::DenseMapBase<objc::DenseMap<objc_class*, objc::category_list, objc::DenseMapValueInfo<objc::category_list>, objc::DenseMapInfo<objc_class*>, objc::detail::DenseMapPair<objc_class*, objc::category_list>>, objc_class*, objc::category_list, objc::DenseMapValueInfo<objc::category_list>, objc::DenseMapInfo<objc_class*>, objc::detail::DenseMapPair<objc_class*, objc::category_list>>::LookupBucketFor<objc_class*>(objc_class* const&, objc::detail::DenseMapPair<objc_class*, objc::category_list> const*&) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800902dc (    0xac) objc::DenseMap<objc_class*, objc::category_list, objc::DenseMapValueInfo<objc::category_list>, objc::DenseMapInfo<objc_class*>, objc::detail::DenseMapPair<objc_class*, objc::category_list>>::init(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180090388 (   0x164) attachCategories(objc_class*, locstamped_category_t const*, unsigned int, int)::$_11::operator()(attachCategories(objc_class*, locstamped_category_t const*, unsigned int, int)::Lists*, bool) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800904ec (     0x8) invocation function for block in attachCategories(objc_class*, locstamped_category_t const*, unsigned int, int)::$_11::operator()(attachCategories(objc_class*, locstamped_category_t const*, unsigned int, int)::Lists*, bool) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800904f4 (   0x200) flushCaches(objc_class*, char const*, bool (objc_class*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800906f4 (   0x16c) invocation function for block in flushCaches(objc_class*, char const*, bool (objc_class*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180090860 (   0x158) foreach_realized_class_and_subclass(objc_class*, bool (objc_class*) block_pointer) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800909b8 (     0xc) __destroy_helper_block_e8_32b [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800909c4 (    0x10) __copy_helper_block_e8_32b [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800909d4 (     0x4) __copy_helper_block_e8_32c122_ZTSKZZL16attachCategoriesP10objc_classPK21locstamped_category_tjiENK4$_11clEPZL16attachCategoriesS0_S3_jiE5ListsbEUlS0_E_ [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800909d8 (    0x6c) entsize_list_tt<method_t, method_list_t, 4294901763u, method_t::pointer_modifier>::end() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180090a44 (    0x88) method_t::impRaw() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180090acc (   0x130) class_rw_t::methods() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180090bfc (   0x238) list_array_tt<method_t, method_list_t, method_list_t_authed_ptr>::begin() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180090e34 (    0xf8) list_array_tt<method_t, method_list_t, method_list_t_authed_ptr>::end() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180090f2c (   0x1dc) list_array_tt<method_t, method_list_t, method_list_t_authed_ptr>::iteratorImpl<false>::operator==(list_array_tt<method_t, method_list_t, method_list_t_authed_ptr>::iteratorImpl<false> const&) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180091108 (   0x5b4) list_array_tt<method_t, method_list_t, method_list_t_authed_ptr>::iteratorImpl<false>::operator++() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800916bc (   0x318) list_array_tt<method_t, method_list_t, method_list_t_authed_ptr>::iteratorImpl<false>::skipEmptyLists() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800919d4 (   0x378) list_array_tt<method_t, method_list_t, method_list_t_authed_ptr>::iteratorImpl<false>::iteratorImpl(list_array_tt<method_t, method_list_t, method_list_t_authed_ptr>::ListIterator, list_array_tt<method_t, method_list_t, method_list_t_authed_ptr>::ListIterator) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180091d4c (    0xac) objc::detail::DenseSetImpl<objc_class*, objc::DenseMap<objc_class*, objc::detail::DenseSetEmpty, objc::DenseMapValueInfo<objc::detail::DenseSetEmpty>, objc::DenseMapInfo<objc_class*>, objc::detail::DenseSetPair<objc_class*>>, objc::DenseMapInfo<objc_class*>>::find(objc_class const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180091df8 (   0x11c) addMethods_finish(objc_class*, method_list_t*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180091f14 (   0x17c) method_list_t::sortBySELAddress() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180092090 (     0x8) invocation function for block in addMethods_finish(objc_class*, method_list_t*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180092098 (     0x4) __copy_helper_block_e8_32c61_ZTSKZL17addMethods_finishP10objc_classP13method_list_tE4$_16 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018009209c (   0x480) void std::__1::__stable_sort<std::__1::_ClassicAlgPolicy, method_t::SortBySELAddress&, method_t::big*>(method_t::big*, method_t::big*, method_t::SortBySELAddress&, std::__1::iterator_traits<method_t::big*>::difference_type, std::__1::iterator_traits<method_t::big*>::value_type*, long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018009251c (   0x8b8) void std::__1::__stable_sort<std::__1::_ClassicAlgPolicy, method_t::SortBySELAddress&, method_t::bigSigned*>(method_t::bigSigned*, method_t::bigSigned*, method_t::SortBySELAddress&, std::__1::iterator_traits<method_t::bigSigned*>::difference_type, std::__1::iterator_traits<method_t::bigSigned*>::value_type*, long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180092dd4 (   0x228) void std::__1::_IterOps<std::__1::_ClassicAlgPolicy>::iter_swap[abi:v160006]<method_t::bigSigned*&, method_t::bigSigned*&>(method_t::bigSigned*&, method_t::bigSigned*&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180092ffc (   0xc9c) void std::__1::__stable_sort_move<std::__1::_ClassicAlgPolicy, method_t::SortBySELAddress&, method_t::bigSigned*>(method_t::bigSigned*, method_t::bigSigned*, method_t::SortBySELAddress&, std::__1::iterator_traits<method_t::bigSigned*>::difference_type, std::__1::iterator_traits<method_t::bigSigned*>::value_type*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180093c98 (   0xbd8) void std::__1::__inplace_merge<std::__1::_ClassicAlgPolicy, method_t::SortBySELAddress&, method_t::bigSigned*>(method_t::bigSigned*, method_t::bigSigned*, method_t::bigSigned*, method_t::SortBySELAddress&, std::__1::iterator_traits<method_t::bigSigned*>::difference_type, std::__1::iterator_traits<method_t::bigSigned*>::difference_type, std::__1::iterator_traits<method_t::bigSigned*>::value_type*, long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180094870 (   0x474) void std::__1::__stable_sort_move<std::__1::_ClassicAlgPolicy, method_t::SortBySELAddress&, method_t::big*>(method_t::big*, method_t::big*, method_t::SortBySELAddress&, std::__1::iterator_traits<method_t::big*>::difference_type, std::__1::iterator_traits<method_t::big*>::value_type*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180094ce4 (   0x7ec) void std::__1::__inplace_merge<std::__1::_ClassicAlgPolicy, method_t::SortBySELAddress&, method_t::big*>(method_t::big*, method_t::big*, method_t::big*, method_t::SortBySELAddress&, std::__1::iterator_traits<method_t::big*>::difference_type, std::__1::iterator_traits<method_t::big*>::difference_type, std::__1::iterator_traits<method_t::big*>::value_type*, long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800954d0 (   0x18c) method_t::setImp(void (*)()) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018009565c (    0x38) invocation function for block in _method_setImplementation(objc_class*, method_t*, void (*)()) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180095694 (   0x3c8) objc::Scanner::scanChangedMethod(objc_class*, method_t const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180095a5c (    0x58) objc::Scanner::setNSObjectSwizzled(objc_class*, unsigned int, objc::Scanner::metaclass_t) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180095ab4 (    0x88) objc::Scanner::propagateCustomFlags(objc_class*, unsigned int, objc::Scanner::inherited_t) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180095b3c (   0x1ac) invocation function for block in objc::Scanner::propagateCustomFlags(objc_class*, unsigned int, objc::Scanner::inherited_t) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180095ce8 (    0x14) __copy_helper_block_e8_32c83_ZTSKZN4objc7Scanner20propagateCustomFlagsEP10objc_classjNS0_11inherited_tEEUlS2_E_ [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180095cfc (    0x80) objc::Scanner::printCustom(char const*, objc_class*, objc::Scanner::inherited_t) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180095d7c (     0xc) __copy_helper_block_e8_32c68_ZTSKZL25_method_setImplementationP10objc_classP8method_tPFvvEE4$_13 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180095d88 (   0x754) getMethodFromRelativeList(relative_list_list_t<method_list_t>*, objc_selector*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800964dc (   0x6d0) method_t* getMethodFromListArray<method_list_t**>(method_list_t**, unsigned int, objc_selector*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180096bac (   0x16c) objc_class::installMangledNameForLazilyNamedClass() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180096d18 (    0x94) namedClassTableHash(char const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180096dac (    0x94) getClassFromNamedClassTable(char const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180096e40 (     0x8) empty_lazyClassNamer(objc_class*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180096e48 (     0xc) __copy_helper_block_e8_32c65_ZTSKZN10objc_class36setInstancesRequireRawIsaRecursivelyEbE4$_10 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180096e54 (   0x110) std::__1::pair<objc::DenseMapIterator<objc_class*, objc::detail::DenseSetEmpty, objc::DenseMapValueInfo<objc::detail::DenseSetEmpty>, objc::DenseMapInfo<objc_class*>, objc::detail::DenseSetPair<objc_class*>, false>, bool> objc::DenseMapBase<objc::DenseMap<objc_class*, objc::detail::DenseSetEmpty, objc::DenseMapValueInfo<objc::detail::DenseSetEmpty>, objc::DenseMapInfo<objc_class*>, objc::detail::DenseSetPair<objc_class*>>, objc_class*, objc::detail::DenseSetEmpty, objc::DenseMapValueInfo<objc::detail::DenseSetEmpty>, objc::DenseMapInfo<objc_class*>, objc::detail::DenseSetPair<objc_class*>>::try_emplace<objc::detail::DenseSetEmpty&>(objc_class* const&, objc::detail::DenseSetEmpty&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180096f64 (    0xe4) bool objc::DenseMapBase<objc::DenseMap<objc_class*, objc::detail::DenseSetEmpty, objc::DenseMapValueInfo<objc::detail::DenseSetEmpty>, objc::DenseMapInfo<objc_class*>, objc::detail::DenseSetPair<objc_class*>>, objc_class*, objc::detail::DenseSetEmpty, objc::DenseMapValueInfo<objc::detail::DenseSetEmpty>, objc::DenseMapInfo<objc_class*>, objc::detail::DenseSetPair<objc_class*>>::LookupBucketFor<objc_class*>(objc_class* const&, objc::detail::DenseSetPair<objc_class*> const*&) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180097048 (    0x38) _class_isFutureClass [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180097080 (    0x14) _class_isSwift [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180097094 (     0x8) ___objc_flush_caches_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018009709c (     0x8) ___objc_flush_caches_block_invoke.6 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800970a4 (     0x4) __copy_helper_block_e8_32c31_ZTSKZ18_objc_flush_cachesE3$_1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800970a8 (     0xc) __copy_helper_block_e8_32c31_ZTSKZ18_objc_flush_cachesE3$_0 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800970b4 (   0x1b0) _objc_map_images [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180097264 (    0x10) std::__throw_bad_array_new_length[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180097274 (    0x8c) loadAllCategoriesIfNeeded [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180097300 (   0x1c4) load_categories_nolock(header_info*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800974c4 (   0x3c4) load_categories_nolock(header_info*)::$_12::operator()(category_t* const*, bool) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180097888 (    0x2c) _objc_load_image [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800978b4 (   0x7d4) unmap_image [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180098088 (   0x204) _read_images::$_3::operator()(objc_class*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018009828c (     0x8) namedClassTableHashCallback(_NXMapTable*, void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180098294 (   0x264) detach_class(objc_class*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800984f8 (   0x66c) free_class(objc_class*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180098b64 (   0x220) list_array_tt<property_t, property_list_t, RawPtr>::begin() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180098d84 (    0xf0) list_array_tt<property_t, property_list_t, RawPtr>::end() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180098e74 (    0xfc) list_array_tt<property_t, property_list_t, RawPtr>::iteratorImpl<false>::operator==(list_array_tt<property_t, property_list_t, RawPtr>::iteratorImpl<false> const&) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180098f70 (   0x36c) list_array_tt<property_t, property_list_t, RawPtr>::iteratorImpl<false>::operator++() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800992dc (   0x248) list_array_tt<property_t, property_list_t, RawPtr>::iteratorImpl<false>::skipEmptyLists() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180099524 (    0x50) entsize_list_tt<property_t, property_list_t, 0u, PointerModifierNop>::end() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180099574 (   0x1b8) list_array_tt<property_t, property_list_t, RawPtr>::iteratorImpl<false>::iteratorImpl(list_array_tt<property_t, property_list_t, RawPtr>::ListIterator, list_array_tt<property_t, property_list_t, RawPtr>::ListIterator) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018009972c (    0x74) list_array_tt<property_t, property_list_t, RawPtr>::ListIterator::ListIterator(list_array_tt<property_t, property_list_t, RawPtr>::ListIterator const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800997a0 (    0xf4) _method_getImplementationAndName [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180099894 (   0x108) _method_setImplementationRawUnsafe [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018009999c (    0x6c) __method_exchangeImplementations_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180099a08 (     0xc) __copy_helper_block_e8_32c43_ZTSKZ30method_exchangeImplementationsE3$_4 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180099a14 (    0x6c) entsize_list_tt<method_t, method_list_t, 4294901763u, method_t::pointer_modifier>::get(unsigned int) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180099a80 (   0x224) protocol_addMethodDescription [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180099ca4 (   0x24c) protocol_addProperty [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180099ef0 (    0x80) _objc_getRealizedClassList_trylock [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x0000000180099f70 (    0xdc) objc_getRealizedClassList_nolock(objc_class**, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018009a04c (    0x38) invocation function for block in objc_getRealizedClassList_nolock(objc_class**, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018009a084 (    0x18) invocation function for block in objc_getRealizedClassList_nolock(objc_class**, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018009a09c (     0xc) __copy_helper_block_e8_32c62_ZTSKZL32objc_getRealizedClassList_nolockPP10objc_classmE4$_15 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018009a0a8 (     0xc) __copy_helper_block_e8_32c62_ZTSKZL32objc_getRealizedClassList_nolockPP10objc_classmE4$_14 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018009a0b4 (    0xbc) objc_copyRealizedClassList [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018009a170 (   0x264) _objc_beginClassEnumeration [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018009a3d4 (    0xd4) class_rw_t::protocols() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018009a4a8 (   0x220) list_array_tt<unsigned long, protocol_list_t, RawPtr>::begin() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018009a6c8 (    0xf0) list_array_tt<unsigned long, protocol_list_t, RawPtr>::end() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018009a7b8 (    0xfc) list_array_tt<unsigned long, protocol_list_t, RawPtr>::iteratorImpl<false>::operator==(list_array_tt<unsigned long, protocol_list_t, RawPtr>::iteratorImpl<false> const&) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018009a8b4 (   0x304) list_array_tt<unsigned long, protocol_list_t, RawPtr>::iteratorImpl<false>::operator++() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018009abb8 (   0x248) list_array_tt<unsigned long, protocol_list_t, RawPtr>::iteratorImpl<false>::skipEmptyLists() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018009ae00 (   0x17c) list_array_tt<unsigned long, protocol_list_t, RawPtr>::iteratorImpl<false>::iteratorImpl(list_array_tt<unsigned long, protocol_list_t, RawPtr>::ListIterator, list_array_tt<unsigned long, protocol_list_t, RawPtr>::ListIterator) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018009af7c (    0x68) list_array_tt<unsigned long, protocol_list_t, RawPtr>::ListIterator::ListIterator(list_array_tt<unsigned long, protocol_list_t, RawPtr>::ListIterator const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018009afe4 (   0x59c) _objc_enumerateNextClass [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018009b580 (    0x88) std::__1::pair<objc::DenseMapIterator<char const*, objc::detail::DenseSetEmpty, objc::DenseMapValueInfo<objc::detail::DenseSetEmpty>, objc::DenseMapInfo<char const*>, objc::detail::DenseSetPair<char const*>, false>, bool> objc::DenseMapBase<objc::DenseMap<char const*, objc::detail::DenseSetEmpty, objc::DenseMapValueInfo<objc::detail::DenseSetEmpty>, objc::DenseMapInfo<char const*>, objc::detail::DenseSetPair<char const*>>, char const*, objc::detail::DenseSetEmpty, objc::DenseMapValueInfo<objc::detail::DenseSetEmpty>, objc::DenseMapInfo<char const*>, objc::detail::DenseSetPair<char const*>>::try_emplace<objc::detail::DenseSetEmpty&>(char const* const&, objc::detail::DenseSetEmpty&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018009b608 (   0x130) bool objc::DenseMapBase<objc::DenseMap<char const*, objc::detail::DenseSetEmpty, objc::DenseMapValueInfo<objc::detail::DenseSetEmpty>, objc::DenseMapInfo<char const*>, objc::detail::DenseSetPair<char const*>>, char const*, objc::detail::DenseSetEmpty, objc::DenseMapValueInfo<objc::detail::DenseSetEmpty>, objc::DenseMapInfo<char const*>, objc::detail::DenseSetPair<char const*>>::LookupBucketFor<char const*>(char const* const&, objc::detail::DenseSetPair<char const*> const*&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018009b738 (    0x18) _objc_endClassEnumeration [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018009b750 (   0x120) objc_enumerateClasses [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018009b870 (   0x104) _class_setCustomDeallocInitiation [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018009b974 (    0x14) ___class_setCustomDeallocInitiation_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018009b988 (     0x4) __copy_helper_block_e8_32c46_ZTSKZ33_class_setCustomDeallocInitiationE3$_7 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018009b98c (   0x16c) class_copyImpCache [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018009baf8 (   0x3ec) objc_copyProtocolList [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018009bee4 (    0x74) objc::DenseMapIterator<char const*, Protocol*, objc::DenseMapValueInfo<Protocol*>, objc::DenseMapInfo<char const*>, objc::detail::DenseMapPair<char const*, Protocol*>, false>::AdvancePastEmptyBuckets() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018009bf58 (    0x68) objc::DenseMapBase<objc::DenseMap<char const*, Protocol*, objc::DenseMapValueInfo<Protocol*>, objc::DenseMapInfo<char const*>, objc::detail::DenseMapPair<char const*, Protocol*>>, char const*, Protocol*, objc::DenseMapValueInfo<Protocol*>, objc::DenseMapInfo<char const*>, objc::detail::DenseMapPair<char const*, Protocol*>>::destroyAll() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018009bfc0 (   0x12c) bool objc::DenseMapBase<objc::DenseMap<char const*, Protocol*, objc::DenseMapValueInfo<Protocol*>, objc::DenseMapInfo<char const*>, objc::detail::DenseMapPair<char const*, Protocol*>>, char const*, Protocol*, objc::DenseMapValueInfo<Protocol*>, objc::DenseMapInfo<char const*>, objc::detail::DenseMapPair<char const*, Protocol*>>::LookupBucketFor<char const*>(char const* const&, objc::detail::DenseMapPair<char const*, Protocol*> const*&) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018009c0ec (   0x144) objc::DenseMap<char const*, Protocol*, objc::DenseMapValueInfo<Protocol*>, objc::DenseMapInfo<char const*>, objc::detail::DenseMapPair<char const*, Protocol*>>::grow(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018009c230 (   0x318) list_array_tt<method_t, method_list_t, method_list_t_authed_ptr>::iteratorImpl<true>::skipEmptyLists() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018009c548 (   0x404) list_array_tt<method_t, method_list_t, method_list_t_authed_ptr>::iteratorImpl<true>::iteratorImpl(list_array_tt<method_t, method_list_t, method_list_t_authed_ptr>::ListIterator, list_array_tt<method_t, method_list_t, method_list_t_authed_ptr>::ListIterator) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018009c94c (    0xd8) class_rw_t::properties() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018009ca24 (   0x418) objc_copyClassNamesForImage [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018009ce3c (   0x4c0) objc_copyClassesForImage [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018009d2fc (    0xa8) objc_debug_class_getNameRaw [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018009d3a4 (    0xd4) lookUpImpOrNilTryCache [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018009d478 (    0xdc) lookUpImpOrForwardTryCache [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018009d554 (    0x40) gdb_class_getClass [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018009d594 (    0xc4) gdb_object_getClass [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018009d658 (   0xa74) objc::Scanner::scanAddedClassImpl(objc_class*, objc::Scanner::metaclass_t) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018009e0cc (   0x81c) unsigned int objc::Scanner::scanMethodLists<list_array_tt<method_t, method_list_t, method_list_t_authed_ptr>::ListIterator>(list_array_tt<method_t, method_list_t, method_list_t_authed_ptr>::ListIterator, list_array_tt<method_t, method_list_t, method_list_t_authed_ptr>::ListIterator) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018009e8e8 (    0x74) objc::Scanner::isSwiftObject(objc_class*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018009e95c (    0x48) objc_setHook_lazyClassNamer [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018009e9a4 (   0x26c) class_setIvarLayout [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018009ec10 (   0x264) class_setWeakIvarLayout [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018009ee74 (     0x8) class_addProperty [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018009ee7c (   0x220) _class_addProperty(objc_class*, char const*, objc_property_attribute_t const*, unsigned int, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018009f09c (    0x14) class_replaceProperty [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018009f0b0 (   0x734) objc_duplicateClass [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018009f7e4 (    0x78) verifySuperclass(objc_class*, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018009f85c (   0x3a4) objc_disposeClassPair [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018009fc00 (   0x158) class_createInstances [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018009fd58 (   0x100) class_createInstanceFromZone [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018009fe58 (     0xc) object_copyFromZone [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018009fe64 (    0x14) _objc_getFreedObjectClass [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018009fe78 (     0x8) invocation function for block in setSuperclass(objc_class*, objc_class*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018009fe80 (     0x8) invocation function for block in setSuperclass(objc_class*, objc_class*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018009fe88 (     0x4) __copy_helper_block_e8_32c44_ZTSKZL13setSuperclassP10objc_classS0_E4$_18 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018009fe8c (     0xc) __copy_helper_block_e8_32c44_ZTSKZL13setSuperclassP10objc_classS0_E4$_17 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018009fe98 (   0x16c) tls_autoptr_direct_impl<_objc_pthread_data, (tls_key)0>::dtor_(void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a0004 (    0x10) objc_noop_imp [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a0014 (    0x54) objc_getRequiredClass [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a0068 (   0x62c) void std::__1::__introsort<std::__1::_ClassicAlgPolicy, objc::SafeRanges::find(unsigned long, unsigned int&)::$_0&, objc::SafeRanges::Range*>(objc::SafeRanges::Range*, objc::SafeRanges::Range*, objc::SafeRanges::find(unsigned long, unsigned int&)::$_0&, std::__1::iterator_traits<objc::SafeRanges::Range*>::difference_type) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a0694 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001800a06ac (    0xbc) unsigned int std::__1::__sort3[abi:v160006]<std::__1::_ClassicAlgPolicy, objc::SafeRanges::find(unsigned long, unsigned int&)::$_0&, objc::SafeRanges::Range*>(objc::SafeRanges::Range*, objc::SafeRanges::Range*, objc::SafeRanges::Range*, objc::SafeRanges::find(unsigned long, unsigned int&)::$_0&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a0768 (    0xb4) unsigned int std::__1::__sort4[abi:v160006]<std::__1::_ClassicAlgPolicy, objc::SafeRanges::find(unsigned long, unsigned int&)::$_0&, objc::SafeRanges::Range*>(objc::SafeRanges::Range*, objc::SafeRanges::Range*, objc::SafeRanges::Range*, objc::SafeRanges::Range*, objc::SafeRanges::find(unsigned long, unsigned int&)::$_0&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a081c (    0xec) unsigned int std::__1::__sort5_wrap_policy[abi:v160006]<std::__1::_ClassicAlgPolicy, objc::SafeRanges::find(unsigned long, unsigned int&)::$_0&, objc::SafeRanges::Range*>(objc::SafeRanges::Range*, objc::SafeRanges::Range*, objc::SafeRanges::Range*, objc::SafeRanges::Range*, objc::SafeRanges::Range*, objc::SafeRanges::find(unsigned long, unsigned int&)::$_0&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a0908 (    0x20) (null) [FUNC, FunctionStarts] 
                0x00000001800a0928 (    0x54) std::__1::function<void (segment_command_64 const*, long)>::operator()(segment_command_64 const*, long) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a097c (    0x84) std::__1::__function::__value_func<void (segment_command_64 const*, long)>::~__value_func[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a0a00 (    0x18) std::__1::__throw_bad_function_call[abi:v160006]() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a0a18 (     0x8) std::__1::__function::__func<appendHeader::$_1, std::__1::allocator<appendHeader::$_1>, void (segment_command_64 const*, long)>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a0a20 (    0x20) std::__1::__function::__func<appendHeader::$_1, std::__1::allocator<appendHeader::$_1>, void (segment_command_64 const*, long)>::__clone(std::__1::__function::__base<void (segment_command_64 const*, long)>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a0a40 (    0x38) std::__1::__function::__func<appendHeader::$_1, std::__1::allocator<appendHeader::$_1>, void (segment_command_64 const*, long)>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a0a78 (     0x4) std::__1::__function::__func<appendHeader::$_1, std::__1::allocator<appendHeader::$_1>, void (segment_command_64 const*, long)>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a0a7c (     0x4) std::__1::__function::__func<appendHeader::$_1, std::__1::allocator<appendHeader::$_1>, void (segment_command_64 const*, long)>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a0a80 (    0xa8) std::__1::__function::__func<removeHeader::$_2, std::__1::allocator<removeHeader::$_2>, void (segment_command_64 const*, long)>::operator()(segment_command_64 const*&&, long&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a0b28 (     0x4) std::__1::__function::__func<removeHeader::$_2, std::__1::allocator<removeHeader::$_2>, void (segment_command_64 const*, long)>::destroy_deallocate() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a0b2c (     0x4) std::__1::__function::__func<removeHeader::$_2, std::__1::allocator<removeHeader::$_2>, void (segment_command_64 const*, long)>::destroy() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a0b30 (    0x20) std::__1::__function::__func<removeHeader::$_2, std::__1::allocator<removeHeader::$_2>, void (segment_command_64 const*, long)>::__clone(std::__1::__function::__base<void (segment_command_64 const*, long)>*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a0b50 (    0x38) std::__1::__function::__func<removeHeader::$_2, std::__1::allocator<removeHeader::$_2>, void (segment_command_64 const*, long)>::__clone() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a0b88 (     0x4) std::__1::__function::__func<removeHeader::$_2, std::__1::allocator<removeHeader::$_2>, void (segment_command_64 const*, long)>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a0b8c (     0x4) std::__1::__function::__func<removeHeader::$_2, std::__1::allocator<removeHeader::$_2>, void (segment_command_64 const*, long)>::~__func() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a0b90 (   0x104) logReplacedMethod [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a0c94 (     0x4) _objcInit [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a0c98 (    0x48) objc_enumerationMutation [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a0ce0 (   0x158) objc_appRequiresGC [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a0e38 (    0xd8) sliceRequiresGC(FileSlice) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a0f10 (   0x430) int sliceRequiresGC<Arch32>(Arch32::mh_t, FileSlice) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a1340 (   0x414) int sliceRequiresGC<Arch64>(Arch64::mh_t, FileSlice) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a1754 (    0x70) Arch64::isObjCSegment(char const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a17c4 (    0x78) Arch64::countClasses(FileSlice, section_64&, int&, int&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a183c (   0x124) Arch32::countClasses(FileSlice, section&, int&, int&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a1960 (     0x4) sel_hash [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a1964 (   0x128) sel_isMapped [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a1a8c (   0x108) sel_lookUpByName [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a1b94 (    0x84) _objc_sync_enter_kind [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a1c18 (   0x320) id2data(objc_object*, SyncKind, usage) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a1f38 (    0x88) objc_sync_try_enter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a1fc0 (    0x40) _objc_sync_exit_kind [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a2000 (     0x4) -[Object autorelease] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a2004 (     0x4) -[Object release] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a2008 (     0x4) -[Object retain] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a200c (     0x4) +[Object autorelease] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a2010 (     0x4) +[Object release] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a2014 (     0x4) +[Object retain] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a2018 (     0x4) +[Object class] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a201c (    0x10) +[Object initialize] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a202c (    0x14) -[Protocol name] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a2040 (    0x34) -[Protocol descriptionForClassMethod:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a2074 (    0x34) -[Protocol descriptionForInstanceMethod:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a20a8 (    0x14) -[Protocol conformsTo:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a20bc (   0x154) objc_setProperty [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a2210 (    0xcc) locker_mixin<lockdebug::lock_mixin<objc_lock_base_t>>::lockWith(lockdebug::lock_mixin<objc_lock_base_t>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a22dc (    0x98) locker_mixin<lockdebug::lock_mixin<objc_lock_base_t>>::unlockWith(lockdebug::lock_mixin<objc_lock_base_t>&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a2374 (    0xc4) objc::detail::DenseMapPair<void const*, objc::ObjcAssociation>* objc::DenseMapBase<objc::DenseMap<void const*, objc::ObjcAssociation, objc::DenseMapValueInfo<objc::ObjcAssociation>, objc::DenseMapInfo<void const*>, objc::detail::DenseMapPair<void const*, objc::ObjcAssociation>>, void const*, objc::ObjcAssociation, objc::DenseMapValueInfo<objc::ObjcAssociation>, objc::DenseMapInfo<void const*>, objc::detail::DenseMapPair<void const*, objc::ObjcAssociation>>::InsertIntoBucketImpl<void const*>(void const* const&, void const* const&, objc::detail::DenseMapPair<void const*, objc::ObjcAssociation>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a2438 (   0x3c0) _object_remove_associations [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a27f8 (     0xc) __cxa_atexit [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a2804 (    0xbc) GlobalSmallVector<loadImageCallback, 4u>::append(loadImageCallback const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a28c0 (   0x174) objc_addLoadImageFunc2 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a2a34 (    0x84) hasSignedClassROPointers(header_info const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a2ab8 (     0xc) header_info::fname() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a2ac4 (   0x298) _objc_patch_root_of_class [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a2d5c (   0x1c4) _objc_atfork_child [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a2f20 (    0xe4) static_init() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a3004 (    0xb4) imp_getBlock [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a30b8 (   0x144) pageAndIndexContainingIMP(void (*)(), unsigned long*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a31fc (     0x8) objc_weak_error [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a3204 (    0x24) defaultBadAllocHandler(objc_class*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a3228 (    0x40) _initializeSwiftRefcountingThenCallRetain(objc_object*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a3268 (    0x70) _initializeSwiftRefcounting() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a32d8 (    0x40) _initializeSwiftRefcountingThenCallRelease(objc_object*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a3318 (     0x4) +[NSObject mutableCopyWithZone:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a331c (     0x8) +[NSObject mutableCopy] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a3324 (     0x8) +[NSObject copy] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a332c (     0x4) +[NSObject dealloc] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a3330 (    0x10) +[NSObject init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a3340 (    0x10) +[NSObject retainCount] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a3350 (     0x8) +[NSObject _isDeallocating] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a3358 (     0xc) +[NSObject _tryRetain] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a3364 (     0xc) +[NSObject debugDescription] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a3370 (     0x8) +[NSObject description] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a3378 (     0x8) +[NSObject forwardingTargetForSelector:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a3380 (    0x54) +[NSObject forwardInvocation:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a33d4 (    0x18) +[NSObject methodSignatureForSelector:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a33ec (    0x18) +[NSObject instanceMethodSignatureForSelector:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a3404 (    0x68) +[NSObject performSelector:withObject:withObject:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a346c (    0x50) +[NSObject doesNotRecognizeSelector:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a34bc (    0x10) +[NSObject isFault] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a34cc (    0x10) -[NSObject finalize] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a34dc (    0x3c) objc_object::sidetable_lock() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a3518 (    0x90) objc_object::sidetable_getExtraRC_nolock() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a35a8 (    0xe0) objc_object::sidetable_retainCount() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a3688 (    0xfc) bool objc::DenseMapBase<objc::DenseMap<DisguisedPtr<objc_object const>, unsigned long, (anonymous namespace)::RefcountMapValuePurgeable, objc::DenseMapInfo<DisguisedPtr<objc_object const>>, objc::detail::DenseMapPair<DisguisedPtr<objc_object const>, unsigned long>>, DisguisedPtr<objc_object const>, unsigned long, (anonymous namespace)::RefcountMapValuePurgeable, objc::DenseMapInfo<DisguisedPtr<objc_object const>>, objc::detail::DenseMapPair<DisguisedPtr<objc_object const>, unsigned long>>::LookupBucketFor<DisguisedPtr<objc_object const>>(DisguisedPtr<objc_object const> const&, objc::detail::DenseMapPair<DisguisedPtr<objc_object const>, unsigned long>*&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a3784 (    0x90) objc_object::sidetable_isDeallocating() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a3814 (    0xa4) moveTLSAutoreleaseToPool(ReturnAutoreleaseInfo) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a38b8 (   0x130) AutoreleasePoolPage::add(objc_object*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a39e8 (     0x4) objc_autoreleaseNoPool [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a39ec (   0x208) AutoreleasePoolPage::AutoreleasePoolPage(AutoreleasePoolPage*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a3bf4 (    0xc4) void AutoreleasePoolPage::busted<void (*)(char const*, ...)>(void (*)(char const*, ...)) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a3cb8 (   0x140) objc_object::sidetable_release(bool, bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a3df8 (    0x38) objc_object::sidetable_unlock() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a3e30 (    0xac) objc_object::sidetable_clearExtraRC_nolock() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a3edc (    0x60) objc::DenseMapBase<objc::DenseMap<DisguisedPtr<objc_object const>, unsigned long, (anonymous namespace)::RefcountMapValuePurgeable, objc::DenseMapInfo<DisguisedPtr<objc_object const>>, objc::detail::DenseMapPair<DisguisedPtr<objc_object const>, unsigned long>>, DisguisedPtr<objc_object const>, unsigned long, (anonymous namespace)::RefcountMapValuePurgeable, objc::DenseMapInfo<DisguisedPtr<objc_object const>>, objc::detail::DenseMapPair<DisguisedPtr<objc_object const>, unsigned long>>::operator[](DisguisedPtr<objc_object const>&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a3f3c (    0xc8) objc::detail::DenseMapPair<DisguisedPtr<objc_object const>, unsigned long>* objc::DenseMapBase<objc::DenseMap<DisguisedPtr<objc_object const>, unsigned long, (anonymous namespace)::RefcountMapValuePurgeable, objc::DenseMapInfo<DisguisedPtr<objc_object const>>, objc::detail::DenseMapPair<DisguisedPtr<objc_object const>, unsigned long>>, DisguisedPtr<objc_object const>, unsigned long, (anonymous namespace)::RefcountMapValuePurgeable, objc::DenseMapInfo<DisguisedPtr<objc_object const>>, objc::detail::DenseMapPair<DisguisedPtr<objc_object const>, unsigned long>>::InsertIntoBucketImpl<DisguisedPtr<objc_object const>>(DisguisedPtr<objc_object const> const&, DisguisedPtr<objc_object const> const&, objc::detail::DenseMapPair<DisguisedPtr<objc_object const>, unsigned long>*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a4004 (   0x114) objc::DenseMapBase<objc::DenseMap<DisguisedPtr<objc_object const>, unsigned long, (anonymous namespace)::RefcountMapValuePurgeable, objc::DenseMapInfo<DisguisedPtr<objc_object const>>, objc::detail::DenseMapPair<DisguisedPtr<objc_object const>, unsigned long>>, DisguisedPtr<objc_object const>, unsigned long, (anonymous namespace)::RefcountMapValuePurgeable, objc::DenseMapInfo<DisguisedPtr<objc_object const>>, objc::detail::DenseMapPair<DisguisedPtr<objc_object const>, unsigned long>>::grow(unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a4118 (    0x7c) objc::DenseMapBase<objc::DenseMap<DisguisedPtr<objc_object const>, unsigned long, (anonymous namespace)::RefcountMapValuePurgeable, objc::DenseMapInfo<DisguisedPtr<objc_object const>>, objc::detail::DenseMapPair<DisguisedPtr<objc_object const>, unsigned long>>, DisguisedPtr<objc_object const>, unsigned long, (anonymous namespace)::RefcountMapValuePurgeable, objc::DenseMapInfo<DisguisedPtr<objc_object const>>, objc::detail::DenseMapPair<DisguisedPtr<objc_object const>, unsigned long>>::compact() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a4194 (    0xa0) std::__1::pair<objc::DenseMapIterator<DisguisedPtr<objc_object const>, unsigned long, (anonymous namespace)::RefcountMapValuePurgeable, objc::DenseMapInfo<DisguisedPtr<objc_object const>>, objc::detail::DenseMapPair<DisguisedPtr<objc_object const>, unsigned long>, false>, bool> objc::DenseMapBase<objc::DenseMap<DisguisedPtr<objc_object const>, unsigned long, (anonymous namespace)::RefcountMapValuePurgeable, objc::DenseMapInfo<DisguisedPtr<objc_object const>>, objc::detail::DenseMapPair<DisguisedPtr<objc_object const>, unsigned long>>, DisguisedPtr<objc_object const>, unsigned long, (anonymous namespace)::RefcountMapValuePurgeable, objc::DenseMapInfo<DisguisedPtr<objc_object const>>, objc::detail::DenseMapPair<DisguisedPtr<objc_object const>, unsigned long>>::try_emplace<unsigned long>(DisguisedPtr<objc_object const>&&, unsigned long&&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a4234 (    0xb8) objc_object::sidetable_retain(bool) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a42ec (    0x10) -[NSObject description] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a42fc (    0x54) -[NSObject forwardInvocation:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a4350 (    0x20) -[NSObject methodSignatureForSelector:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a4370 (    0x4c) -[NSObject doesNotRecognizeSelector:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a43bc (     0x4) -[__NSUnrecognizedTaggedPointer autorelease] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a43c0 (     0x4) -[__NSUnrecognizedTaggedPointer release] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a43c4 (     0x4) -[__NSUnrecognizedTaggedPointer retain] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a43c8 (    0x10) objc_autoreleasePoolInvalid [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a43d8 (     0x8) objc_should_deallocate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a43e0 (    0x28) objc_retain_autorelease [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a4408 (   0x148) callSetWeaklyReferenced(objc_object*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a4550 (    0x8c) objc_retain_full [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a45dc (    0xd4) objc_release_full [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a46b0 (   0x104) objc_isUniquelyReferenced [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a47b4 (    0x34) objc_clear_deallocating [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a47e8 (    0x54) objc_alloc_init [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a483c (    0x68) objc_opt_new [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a48a4 (    0xd4) objc_opt_respondsToSelector [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a4978 (    0x18) _objc_rootFinalize [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a4990 (     0x4) _objc_rootInit [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a4994 (     0x4) _objc_rootZone [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a4998 (     0x8) _objc_rootHash [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a49a0 (   0x128) AutoreleasePoolPage::push() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a4ac8 (    0x78) AutoreleasePoolPage::autoreleaseNewPage(objc_object*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a4b40 (     0x4) _objc_autoreleasePoolPush [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a4b44 (     0x4) _objc_autoreleasePoolPop [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a4b48 (    0x10) _objc_autoreleasePoolPrint [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a4b58 (    0x90) objc_claimAutoreleasedReturnValue [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a4be8 (     0xc) _objc_deallocOnMainThreadHelper [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a4bf4 (     0x4) objc_retainedObject [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a4bf8 (     0x4) objc_unretainedObject [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a4bfc (     0x4) objc_unretainedPointer [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a4c00 (   0x188) weakTableScan(void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a4d88 (    0xe4) objc_tls_direct_base<AutoreleasePoolPage*, (tls_key)3, AutoreleasePoolPage::HotPageDealloc>::dtor_(void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a4e6c (    0x4c) objc_tls_direct_base<unsigned long, (tls_key)4, ReturnAutoreleaseInfo::TlsDealloc>::dtor_(void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a4eb8 (    0x8c) header_info::selrefs(unsigned long*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a4f44 (    0x8c) header_info::classrefs(unsigned long*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a4fd0 (    0x8c) header_info::classlist(unsigned long*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a505c (    0x8c) header_info::nlclslist(unsigned long*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a50e8 (    0x8c) header_info::catlist(unsigned long*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a5174 (    0x8c) header_info::protocollist(unsigned long*) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a5200 (    0x30) __getSharedCachePreoptimizedProtocol_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a5230 (     0x4) __destroy_helper_block_e8_32.690 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a5234 (    0x10) __copy_helper_block_e8_32c47_ZTSKZ34getSharedCachePreoptimizedProtocolE3$_0 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a5244 (    0x10) __copy_helper_block_e8_32c36_ZTSKZ23getPreoptimizedProtocolE3$_1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a5254 (     0xc) __copy_helper_block_e8_32c33_ZTSKZ20getPreoptimizedClassE3$_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a5260 (    0x30) __getPreoptimizedClassesWithMetaClass_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a5290 (    0x14) __copy_helper_block_e8_32c48_ZTSKZ35getPreoptimizedClassesWithMetaClassE3$_3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a52a4 (    0xe8) cache_t::bad_cache(objc_object*, objc_selector*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a538c (    0x4c) _objc_error(objc_object*, char const*, char*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a53d8 (    0x2c) _objc_fatal(char const*, ...) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a5404 (    0xac) _objc_fatalv(unsigned long long, unsigned long long, char const*, char*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a54b0 (    0x20) __objc_error(objc_object*, char const*, ...) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a54d0 (    0x28) _objc_fatal_with_reason(unsigned long long, unsigned long long, char const*, ...) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a54f8 (    0x70) _objc_inform(char const*, ...) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a5568 (    0x78) _objc_inform_now_and_on_crash(char const*, ...) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a55e0 (    0x54) _objc_inform_deprecated(char const*, char const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a5634 (    0x34) objc_exception_rethrow [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a5668 (    0x10) objc_terminate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a5678 (    0x64) objc::DenseMapBase<objc::DenseMap<objc_class*, PendingInitialize*, objc::DenseMapValueInfo<PendingInitialize*>, objc::DenseMapInfo<objc_class*>, objc::detail::DenseMapPair<objc_class*, PendingInitialize*>>, objc_class*, PendingInitialize*, objc::DenseMapValueInfo<PendingInitialize*>, objc::DenseMapInfo<objc_class*>, objc::detail::DenseMapPair<objc_class*, PendingInitialize*>>::FatalCorruptHashTables(objc::detail::DenseMapPair<objc_class*, PendingInitialize*> const*, unsigned int) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a56dc (    0x60) objc::DenseMapBase<objc::DenseMap<method_t const*, void*, objc::DenseMapValueInfo<void*>, objc::DenseMapInfo<method_t const*>, objc::detail::DenseMapPair<method_t const*, void*>>, method_t const*, void*, objc::DenseMapValueInfo<void*>, objc::DenseMapInfo<method_t const*>, objc::detail::DenseMapPair<method_t const*, void*>>::FatalCorruptHashTables(objc::detail::DenseMapPair<method_t const*, void*> const*, unsigned int) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a573c (    0x54) objc::DenseMapBase<objc::DenseMap<method_t const*, objc_method_description*, objc::DenseMapValueInfo<objc_method_description*>, objc::DenseMapInfo<method_t const*>, objc::detail::DenseMapPair<method_t const*, objc_method_description*>>, method_t const*, objc_method_description*, objc::DenseMapValueInfo<objc_method_description*>, objc::DenseMapInfo<method_t const*>, objc::detail::DenseMapPair<method_t const*, objc_method_description*>>::FatalCorruptHashTables(objc::detail::DenseMapPair<method_t const*, objc_method_description*> const*, unsigned int) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a5790 (    0x58) objc::DenseMapBase<objc::DenseMap<objc_class*, objc_class*, objc::DenseMapValueInfo<objc_class*>, objc::DenseMapInfo<objc_class*>, objc::detail::DenseMapPair<objc_class*, objc_class*>>, objc_class*, objc_class*, objc::DenseMapValueInfo<objc_class*>, objc::DenseMapInfo<objc_class*>, objc::detail::DenseMapPair<objc_class*, objc_class*>>::FatalCorruptHashTables(objc::detail::DenseMapPair<objc_class*, objc_class*> const*, unsigned int) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a57e8 (    0x54) objc::DenseMapBase<objc::DenseMap<objc_class*, objc::category_list, objc::DenseMapValueInfo<objc::category_list>, objc::DenseMapInfo<objc_class*>, objc::detail::DenseMapPair<objc_class*, objc::category_list>>, objc_class*, objc::category_list, objc::DenseMapValueInfo<objc::category_list>, objc::DenseMapInfo<objc_class*>, objc::detail::DenseMapPair<objc_class*, objc::category_list>>::FatalCorruptHashTables(objc::detail::DenseMapPair<objc_class*, objc::category_list> const*, unsigned int) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a583c (   0x4f4) printReplacements(objc_class*, locstamped_category_t const*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a5d30 (    0x60) objc::DenseMapBase<objc::DenseMap<objc_class*, objc::detail::DenseSetEmpty, objc::DenseMapValueInfo<objc::detail::DenseSetEmpty>, objc::DenseMapInfo<objc_class*>, objc::detail::DenseSetPair<objc_class*>>, objc_class*, objc::detail::DenseSetEmpty, objc::DenseMapValueInfo<objc::detail::DenseSetEmpty>, objc::DenseMapInfo<objc_class*>, objc::detail::DenseSetPair<objc_class*>>::FatalCorruptHashTables(objc::detail::DenseSetPair<objc_class*> const*, unsigned int) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a5d90 (    0x60) objc::DenseMapBase<objc::DenseMap<char const*, objc::detail::DenseSetEmpty, objc::DenseMapValueInfo<objc::detail::DenseSetEmpty>, objc::DenseMapInfo<char const*>, objc::detail::DenseSetPair<char const*>>, char const*, objc::detail::DenseSetEmpty, objc::DenseMapValueInfo<objc::detail::DenseSetEmpty>, objc::DenseMapInfo<char const*>, objc::detail::DenseSetPair<char const*>>::FatalCorruptHashTables(objc::detail::DenseSetPair<char const*> const*, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a5df0 (    0x60) objc::DenseMapBase<objc::DenseMap<char const*, Protocol*, objc::DenseMapValueInfo<Protocol*>, objc::DenseMapInfo<char const*>, objc::detail::DenseMapPair<char const*, Protocol*>>, char const*, Protocol*, objc::DenseMapValueInfo<Protocol*>, objc::DenseMapInfo<char const*>, objc::detail::DenseMapPair<char const*, Protocol*>>::FatalCorruptHashTables(objc::detail::DenseMapPair<char const*, Protocol*> const*, unsigned int) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a5e50 (    0x68) objc_defaultForwardHandler(objc_object*, objc_selector*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a5eb8 (    0x58) objc::DenseMapBase<objc::DenseMap<void const*, objc::ObjcAssociation, objc::DenseMapValueInfo<objc::ObjcAssociation>, objc::DenseMapInfo<void const*>, objc::detail::DenseMapPair<void const*, objc::ObjcAssociation>>, void const*, objc::ObjcAssociation, objc::DenseMapValueInfo<objc::ObjcAssociation>, objc::DenseMapInfo<void const*>, objc::detail::DenseMapPair<void const*, objc::ObjcAssociation>>::FatalCorruptHashTables(objc::detail::DenseMapPair<void const*, objc::ObjcAssociation> const*, unsigned int) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a5f10 (    0x60) objc::DenseMapBase<objc::DenseMap<DisguisedPtr<objc_object>, objc::DenseMap<void const*, objc::ObjcAssociation, objc::DenseMapValueInfo<objc::ObjcAssociation>, objc::DenseMapInfo<void const*>, objc::detail::DenseMapPair<void const*, objc::ObjcAssociation>>, objc::DenseMapValueInfo<objc::DenseMap<void const*, objc::ObjcAssociation, objc::DenseMapValueInfo<objc::ObjcAssociation>, objc::DenseMapInfo<void const*>, objc::detail::DenseMapPair<void const*, objc::ObjcAssociation>>>, objc::DenseMapInfo<DisguisedPtr<objc_object>>, objc::detail::DenseMapPair<DisguisedPtr<objc_object>, objc::DenseMap<void const*, objc::ObjcAssociation, objc::DenseMapValueInfo<objc::ObjcAssociation>, objc::DenseMapInfo<void const*>, objc::detail::DenseMapPair<void const*, objc::ObjcAssociation>>>>, DisguisedPtr<objc_object>, objc::DenseMap<void const*, objc::ObjcAssociation, objc::DenseMapValueInfo<objc::ObjcAssociation>, objc::DenseMapInfo<void const*>, objc::deta...
                0x00000001800a5f70 (    0x64) objc::DenseMapBase<objc::DenseMap<DisguisedPtr<objc_object const>, unsigned long, (anonymous namespace)::RefcountMapValuePurgeable, objc::DenseMapInfo<DisguisedPtr<objc_object const>>, objc::detail::DenseMapPair<DisguisedPtr<objc_object const>, unsigned long>>, DisguisedPtr<objc_object const>, unsigned long, (anonymous namespace)::RefcountMapValuePurgeable, objc::DenseMapInfo<DisguisedPtr<objc_object const>>, objc::detail::DenseMapPair<DisguisedPtr<objc_object const>, unsigned long>>::FatalCorruptHashTables(objc::detail::DenseMapPair<DisguisedPtr<objc_object const>, unsigned long> const*, unsigned int) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a5fd4 (    0x28) AutoreleasePoolPage::busted_die() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a5ffc (    0x10) _objc_callBadAllocHandler(objc_class*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a600c (   0x104) AutoreleasePoolPage::badPop(void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a6110 (   0x110) AutoreleasePoolPage::popPageDebug(void*, AutoreleasePoolPage*, objc_object**) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a6220 (   0x1a4) AutoreleasePoolPage::printHiwat() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a63c4 (    0x48) AutoreleasePoolPage::sumOfExtraReleases() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a640c (   0x150) AutoreleasePoolPage::printAll() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001800a655c (   0x1c8) AutoreleasePoolPage::print() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
            0x00000001800a6724 (   0x8b0) __TEXT __auth_stubs
                0x00000001800a6724 (    0x10) DYLD-STUB$$_Block_copy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6734 (    0x10) DYLD-STUB$$_Block_object_assign [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6744 (    0x10) DYLD-STUB$$_Block_object_dispose [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6754 (    0x10) DYLD-STUB$$_Block_release [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6764 (    0x10) DYLD-STUB$$_Exit [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6774 (    0x10) DYLD-STUB$$_NSGetEnviron [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6784 (    0x10) DYLD-STUB$$_NSGetMachExecuteHeader [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6794 (    0x10) DYLD-STUB$$_Unwind_GetCFA [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a67a4 (    0x10) DYLD-STUB$$_Unwind_GetIP [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a67b4 (    0x10) DYLD-STUB$$_Unwind_Resume [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a67c4 (    0x10) DYLD-STUB$$std::set_terminate(void (*)()) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a67d4 (    0x10) DYLD-STUB$$std::terminate() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a67e4 (    0x10) DYLD-STUB$$__cxa_allocate_exception [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a67f4 (    0x10) DYLD-STUB$$__cxa_begin_catch [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6804 (    0x10) DYLD-STUB$$__cxa_current_exception_type [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6814 (    0x10) DYLD-STUB$$__cxa_end_catch [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6824 (    0x10) DYLD-STUB$$__cxa_rethrow [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6834 (    0x10) DYLD-STUB$$__cxa_throw [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6844 (    0x10) DYLD-STUB$$__error [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6854 (    0x10) DYLD-STUB$$__gxx_personality_v0 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6864 (    0x10) DYLD-STUB$$__stack_chk_fail [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6874 (    0x10) DYLD-STUB$$_dyld_for_each_objc_class [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6884 (    0x10) DYLD-STUB$$_dyld_for_each_objc_protocol [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6894 (    0x10) DYLD-STUB$$_dyld_for_objc_header_opt_ro [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a68a4 (    0x10) DYLD-STUB$$_dyld_for_objc_header_opt_rw [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a68b4 (    0x10) DYLD-STUB$$_dyld_get_dlopen_image_header [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a68c4 (    0x10) DYLD-STUB$$_dyld_get_image_slide [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a68d4 (    0x10) DYLD-STUB$$_dyld_get_image_uuid [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a68e4 (    0x10) DYLD-STUB$$_dyld_get_objc_selector [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a68f4 (    0x10) DYLD-STUB$$_dyld_get_prog_image_header [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6904 (    0x10) DYLD-STUB$$_dyld_get_shared_cache_range [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6914 (    0x10) DYLD-STUB$$_dyld_get_shared_cache_uuid [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6924 (    0x10) DYLD-STUB$$_dyld_is_memory_immutable [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6934 (    0x10) DYLD-STUB$$_dyld_lookup_section_info [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6944 (    0x10) DYLD-STUB$$_dyld_objc_class_count [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6954 (    0x10) DYLD-STUB$$_dyld_objc_register_callbacks [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6964 (    0x10) DYLD-STUB$$_os_feature_enabled_simple_impl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6974 (    0x10) DYLD-STUB$$_os_log_simple [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6984 (    0x10) DYLD-STUB$$_simple_asl_log [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6994 (    0x10) DYLD-STUB$$abort [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a69a4 (    0x10) DYLD-STUB$$abort_with_reason [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a69b4 (    0x10) DYLD-STUB$$arc4random_buf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a69c4 (    0x10) DYLD-STUB$$arc4random_uniform [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a69d4 (    0x10) DYLD-STUB$$asprintf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a69e4 (    0x10) DYLD-STUB$$backtrace [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a69f4 (    0x10) DYLD-STUB$$backtrace_symbols [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6a04 (    0x10) DYLD-STUB$$backtrace_symbols_fd [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6a14 (    0x10) DYLD-STUB$$bzero [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6a24 (    0x10) DYLD-STUB$$calloc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6a34 (    0x10) DYLD-STUB$$close [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6a44 (    0x10) DYLD-STUB$$dispatch_queue_get_label [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6a54 (    0x10) DYLD-STUB$$dladdr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6a64 (    0x10) DYLD-STUB$$dlclose [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6a74 (    0x10) DYLD-STUB$$dlerror [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6a84 (    0x10) DYLD-STUB$$dlopen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6a94 (    0x10) DYLD-STUB$$dlsym [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6aa4 (    0x10) DYLD-STUB$$dyld_get_active_platform [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6ab4 (    0x10) DYLD-STUB$$dyld_image_header_containing_address [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6ac4 (    0x10) DYLD-STUB$$dyld_image_path_containing_address [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6ad4 (    0x10) DYLD-STUB$$dyld_program_sdk_at_least [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6ae4 (    0x10) DYLD-STUB$$dyld_shared_cache_some_image_overridden [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6af4 (    0x10) DYLD-STUB$$fileno [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6b04 (    0x10) DYLD-STUB$$free [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6b14 (    0x10) DYLD-STUB$$fstat [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6b24 (    0x10) DYLD-STUB$$fsync [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6b34 (    0x10) DYLD-STUB$$getenv [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6b44 (    0x10) DYLD-STUB$$geteuid [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6b54 (    0x10) DYLD-STUB$$getpid [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6b64 (    0x10) DYLD-STUB$$getsectdatafromheader_64 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6b74 (    0x10) DYLD-STUB$$getsegmentdata [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6b84 (    0x10) DYLD-STUB$$issetugid [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6b94 (    0x10) DYLD-STUB$$lstat [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6ba4 (    0x10) DYLD-STUB$$mach_error_string [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6bb4 (    0x10) DYLD-STUB$$mach_port_deallocate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6bc4 (    0x10) DYLD-STUB$$malloc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6bd4 (    0x10) DYLD-STUB$$malloc_default_zone [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6be4 (    0x10) DYLD-STUB$$malloc_size [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6bf4 (    0x10) DYLD-STUB$$memcmp [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6c04 (    0x10) DYLD-STUB$$memcpy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6c14 (    0x10) DYLD-STUB$$memmove [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6c24 (    0x10) DYLD-STUB$$memset [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6c34 (    0x10) DYLD-STUB$$nanosleep [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6c44 (    0x10) DYLD-STUB$$oah_is_current_process_translated [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6c54 (    0x10) DYLD-STUB$$objc_bp_assist_cfg_np [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6c64 (    0x10) DYLD-STUB$$objc_release_x1 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6c74 (    0x10) DYLD-STUB$$objc_thread_get_rip [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6c84 (    0x10) DYLD-STUB$$open [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6c94 (    0x10) DYLD-STUB$$os_fault_with_payload [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6ca4 (    0x10) DYLD-STUB$$os_unfair_lock_lock_with_options [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6cb4 (    0x10) DYLD-STUB$$os_unfair_lock_trylock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6cc4 (    0x10) DYLD-STUB$$os_unfair_lock_unlock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6cd4 (    0x10) DYLD-STUB$$os_unfair_recursive_lock_lock_with_options [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6ce4 (    0x10) DYLD-STUB$$os_unfair_recursive_lock_trylock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6cf4 (    0x10) DYLD-STUB$$os_unfair_recursive_lock_tryunlock4objc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6d04 (    0x10) DYLD-STUB$$os_unfair_recursive_lock_unlock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6d14 (    0x10) DYLD-STUB$$os_variant_allows_internal_security_policies [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6d24 (    0x10) DYLD-STUB$$os_variant_has_internal_diagnostics [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6d34 (    0x10) DYLD-STUB$$posix_memalign [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6d44 (    0x10) DYLD-STUB$$pread [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6d54 (    0x10) DYLD-STUB$$pthread_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6d64 (    0x10) DYLD-STUB$$pthread_detach [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6d74 (    0x10) DYLD-STUB$$pthread_getname_np [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6d84 (    0x10) DYLD-STUB$$pthread_is_threaded_np [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6d94 (    0x10) DYLD-STUB$$pthread_key_init_np [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6da4 (    0x10) DYLD-STUB$$pthread_mach_thread_np [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6db4 (    0x10) DYLD-STUB$$pthread_setname_np [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6dc4 (    0x10) DYLD-STUB$$realloc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6dd4 (    0x10) DYLD-STUB$$reallocf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6de4 (    0x10) DYLD-STUB$$sandbox_check [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6df4 (    0x10) DYLD-STUB$$snprintf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6e04 (    0x10) DYLD-STUB$$strcasecmp [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6e14 (    0x10) DYLD-STUB$$strcat [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6e24 (    0x10) DYLD-STUB$$strchr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6e34 (    0x10) DYLD-STUB$$strcmp [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6e44 (    0x10) DYLD-STUB$$strcspn [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6e54 (    0x10) DYLD-STUB$$strdup [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6e64 (    0x10) DYLD-STUB$$strerror [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6e74 (    0x10) DYLD-STUB$$strlcpy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6e84 (    0x10) DYLD-STUB$$strlen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6e94 (    0x10) DYLD-STUB$$strncmp [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6ea4 (    0x10) DYLD-STUB$$strncpy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6eb4 (    0x10) DYLD-STUB$$strstr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6ec4 (    0x10) DYLD-STUB$$strtol [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6ed4 (    0x10) DYLD-STUB$$strtoull [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6ee4 (    0x10) DYLD-STUB$$task_restartable_ranges_register [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6ef4 (    0x10) DYLD-STUB$$task_restartable_ranges_synchronize [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6f04 (    0x10) DYLD-STUB$$task_threads [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6f14 (    0x10) DYLD-STUB$$thread_get_state [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6f24 (    0x10) DYLD-STUB$$unw_get_proc_info [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6f34 (    0x10) DYLD-STUB$$unw_get_reg [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6f44 (    0x10) DYLD-STUB$$unw_getcontext [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6f54 (    0x10) DYLD-STUB$$unw_init_local [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6f64 (    0x10) DYLD-STUB$$unw_step [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6f74 (    0x10) DYLD-STUB$$uuid_clear [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6f84 (    0x10) DYLD-STUB$$vasprintf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6f94 (    0x10) DYLD-STUB$$vm_allocate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6fa4 (    0x10) DYLD-STUB$$vm_deallocate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6fb4 (    0x10) DYLD-STUB$$vm_remap [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001800a6fc4 (    0x10) DYLD-STUB$$write [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
            0x00000001800a6fd8 (   0x4e4) __TEXT __objc_methlist
                0x00000001800a6fd8 (   0x240) _OBJC_$_CLASS_METHODS_NSObject [NameNList, MangledNameNList, NList] 
                0x00000001800a7218 (    0x48) _OBJC_$_CLASS_METHODS_Object [NameNList, MangledNameNList, NList] 
                0x00000001800a7260 (   0x1b0) _OBJC_$_INSTANCE_METHODS_NSObject [NameNList, MangledNameNList, NList] 
                0x00000001800a7410 (    0x30) _OBJC_$_INSTANCE_METHODS_Object [NameNList, MangledNameNList, NList] 
                0x00000001800a7440 (    0x50) _OBJC_$_INSTANCE_METHODS_Protocol [NameNList, MangledNameNList, NList] 
                0x00000001800a7490 (    0x2c) _OBJC_$_INSTANCE_METHODS___NSUnrecognizedTaggedPointer [NameNList, MangledNameNList, NList] 
            0x00000001800a74c0 (  0x4108) __TEXT __const
                0x00000001800a74c0 (  0x4010) _objc_empty_cache [EXT, NameNList, MangledNameNList, NList] 
                0x00000001800ab4d0 (     0x8) objc_debug_class_rw_data_mask [EXT, NameNList, MangledNameNList, NList] 
                0x00000001800ab4d8 (     0x8) objc_debug_indexed_isa_magic_mask [EXT, NameNList, MangledNameNList, NList] 
                0x00000001800ab4e0 (     0x8) objc_debug_indexed_isa_magic_value [EXT, NameNList, MangledNameNList, NList] 
                0x00000001800ab4e8 (     0x8) objc_debug_indexed_isa_index_mask [EXT, NameNList, MangledNameNList, NList] 
                0x00000001800ab4f0 (     0x8) objc_debug_indexed_isa_index_shift [EXT, NameNList, MangledNameNList, NList] 
                0x00000001800ab4f8 (     0x8) objc_debug_isa_magic_mask [EXT, NameNList, MangledNameNList, NList] 
                0x00000001800ab500 (     0x8) objc_debug_isa_magic_value [EXT, NameNList, MangledNameNList, NList] 
                0x00000001800ab508 (     0x8) objc_debug_swift_stable_abi_bit [EXT, NameNList, MangledNameNList, NList] 
                0x00000001800ab510 (     0x4) UnsetLayout [NameNList, MangledNameNList, NList] 
                0x00000001800ab514 (     0x8) addHeader(mach_header_64 const*, char const*, _dyld_section_location_info_s*, int&, int&)::emptyInfo [NameNList, MangledNameNList, NList] 
                0x00000001800ab51c (     0x4) objc_debug_autoreleasepoolpage_magic_offset [EXT, NameNList, MangledNameNList, NList] 
                0x00000001800ab520 (     0x4) objc_debug_autoreleasepoolpage_next_offset [EXT, NameNList, MangledNameNList, NList] 
                0x00000001800ab524 (     0x4) objc_debug_autoreleasepoolpage_thread_offset [EXT, NameNList, MangledNameNList, NList] 
                0x00000001800ab528 (     0x4) objc_debug_autoreleasepoolpage_parent_offset [EXT, NameNList, MangledNameNList, NList] 
                0x00000001800ab52c (     0x4) objc_debug_autoreleasepoolpage_child_offset [EXT, NameNList, MangledNameNList, NList] 
                0x00000001800ab530 (     0x4) objc_debug_autoreleasepoolpage_depth_offset [EXT, NameNList, MangledNameNList, NList] 
                0x00000001800ab534 (     0x4) objc_debug_autoreleasepoolpage_hiwat_offset [EXT, NameNList, MangledNameNList, NList] 
                0x00000001800ab538 (     0x8) objc_debug_autoreleasepoolpage_ptr_mask [EXT, NameNList, MangledNameNList, NList] 
                0x00000001800ab540 (     0x8) objc_class_abi_version [EXT, NameNList, MangledNameNList, NList] 
                0x00000001800ab548 (     0x8) _objc_has_weak_formation_callout [EXT, NameNList, MangledNameNList, NList] 
                0x00000001800ab550 (    0x78) objc_debug_isa_class_mask [EXT, NameNList, MangledNameNList, NList] 
            0x00000001800ab5c8 (  0x4000) __TEXT __objc_opt_ro
                0x00000001800ab5c8 (  0x4000) _objc_opt_data [PEXT, NameNList, MangledNameNList, NList] 
            0x00000001800af5c8 (  0x4b6b) __TEXT __cstring
            0x00000001800b4134 (   0xab8) __TEXT __gcc_except_tab
                0x00000001800b4134 (    0x20) GCC_except_table106 [NameNList, MangledNameNList, NList] 
                0x00000001800b4154 (    0x18) GCC_except_table142 [NameNList, MangledNameNList, NList] 
                0x00000001800b416c (    0x10) GCC_except_table152 [NameNList, MangledNameNList, NList] 
                0x00000001800b417c (    0x18) GCC_except_table169 [NameNList, MangledNameNList, NList] 
                0x00000001800b4194 (    0x3c) GCC_except_table175 [NameNList, MangledNameNList, NList] 
                0x00000001800b41d0 (    0x10) GCC_except_table183 [NameNList, MangledNameNList, NList] 
                0x00000001800b41e0 (    0x10) GCC_except_table184 [NameNList, MangledNameNList, NList] 
                0x00000001800b41f0 (    0x58) GCC_except_table189 [NameNList, MangledNameNList, NList] 
                0x00000001800b4248 (    0x10) GCC_except_table191 [NameNList, MangledNameNList, NList] 
                0x00000001800b4258 (    0x10) GCC_except_table203 [NameNList, MangledNameNList, NList] 
                0x00000001800b4268 (    0x10) GCC_except_table224 [NameNList, MangledNameNList, NList] 
                0x00000001800b4278 (    0x1c) GCC_except_table231 [NameNList, MangledNameNList, NList] 
                0x00000001800b4294 (    0x18) GCC_except_table302 [NameNList, MangledNameNList, NList] 
                0x00000001800b42ac (    0x18) GCC_except_table304 [NameNList, MangledNameNList, NList] 
                0x00000001800b42c4 (    0x14) GCC_except_table314 [NameNList, MangledNameNList, NList] 
                0x00000001800b42d8 (    0x24) GCC_except_table320 [NameNList, MangledNameNList, NList] 
                0x00000001800b42fc (    0x1c) GCC_except_table325 [NameNList, MangledNameNList, NList] 
                0x00000001800b4318 (    0x10) GCC_except_table330 [NameNList, MangledNameNList, NList] 
                0x00000001800b4328 (    0x1c) GCC_except_table331 [NameNList, MangledNameNList, NList] 
                0x00000001800b4344 (    0x58) GCC_except_table337 [NameNList, MangledNameNList, NList] 
                0x00000001800b439c (    0x5c) GCC_except_table340 [NameNList, MangledNameNList, NList] 
                0x00000001800b43f8 (    0x10) GCC_except_table363 [NameNList, MangledNameNList, NList] 
                0x00000001800b4408 (    0x10) GCC_except_table364 [NameNList, MangledNameNList, NList] 
                0x00000001800b4418 (    0x28) GCC_except_table365 [NameNList, MangledNameNList, NList] 
                0x00000001800b4440 (    0x10) GCC_except_table373 [NameNList, MangledNameNList, NList] 
                0x00000001800b4450 (    0x10) GCC_except_table374 [NameNList, MangledNameNList, NList] 
                0x00000001800b4460 (    0x14) GCC_except_table375 [NameNList, MangledNameNList, NList] 
                0x00000001800b4474 (    0x10) GCC_except_table376 [NameNList, MangledNameNList, NList] 
                0x00000001800b4484 (    0x14) GCC_except_table384 [NameNList, MangledNameNList, NList] 
                0x00000001800b4498 (    0x10) GCC_except_table387 [NameNList, MangledNameNList, NList] 
                0x00000001800b44a8 (    0x1c) GCC_except_table390 [NameNList, MangledNameNList, NList] 
                0x00000001800b44c4 (    0x10) GCC_except_table391 [NameNList, MangledNameNList, NList] 
                0x00000001800b44d4 (    0x10) GCC_except_table393 [NameNList, MangledNameNList, NList] 
                0x00000001800b44e4 (    0x10) GCC_except_table395 [NameNList, MangledNameNList, NList] 
                0x00000001800b44f4 (    0x1c) GCC_except_table396 [NameNList, MangledNameNList, NList] 
                0x00000001800b4510 (    0x10) GCC_except_table397 [NameNList, MangledNameNList, NList] 
                0x00000001800b4520 (    0x18) GCC_except_table398 [NameNList, MangledNameNList, NList] 
                0x00000001800b4538 (    0x1c) GCC_except_table399 [NameNList, MangledNameNList, NList] 
                0x00000001800b4554 (    0x1c) GCC_except_table400 [NameNList, MangledNameNList, NList] 
                0x00000001800b4570 (    0x10) GCC_except_table407 [NameNList, MangledNameNList, NList] 
                0x00000001800b4580 (    0x10) GCC_except_table408 [NameNList, MangledNameNList, NList] 
                0x00000001800b4590 (    0x10) GCC_except_table409 [NameNList, MangledNameNList, NList] 
                0x00000001800b45a0 (    0x18) GCC_except_table410 [NameNList, MangledNameNList, NList] 
                0x00000001800b45b8 (    0x4c) GCC_except_table419 [NameNList, MangledNameNList, NList] 
                0x00000001800b4604 (    0x24) GCC_except_table420 [NameNList, MangledNameNList, NList] 
                0x00000001800b4628 (    0x10) GCC_except_table430 [NameNList, MangledNameNList, NList] 
                0x00000001800b4638 (    0x10) GCC_except_table433 [NameNList, MangledNameNList, NList] 
                0x00000001800b4648 (    0x34) GCC_except_table434 [NameNList, MangledNameNList, NList] 
                0x00000001800b467c (    0x10) GCC_except_table440 [NameNList, MangledNameNList, NList] 
                0x00000001800b468c (    0x38) GCC_except_table441 [NameNList, MangledNameNList, NList] 
                0x00000001800b46c4 (    0x18) GCC_except_table444 [NameNList, MangledNameNList, NList] 
                0x00000001800b46dc (    0x28) GCC_except_table445 [NameNList, MangledNameNList, NList] 
                0x00000001800b4704 (    0x28) GCC_except_table447 [NameNList, MangledNameNList, NList] 
                0x00000001800b472c (    0x1c) GCC_except_table448 [NameNList, MangledNameNList, NList] 
                0x00000001800b4748 (    0x24) GCC_except_table450 [NameNList, MangledNameNList, NList] 
                0x00000001800b476c (    0x28) GCC_except_table451 [NameNList, MangledNameNList, NList] 
                0x00000001800b4794 (    0x10) GCC_except_table452 [NameNList, MangledNameNList, NList] 
                0x00000001800b47a4 (    0x10) GCC_except_table456 [NameNList, MangledNameNList, NList] 
                0x00000001800b47b4 (    0x14) GCC_except_table459 [NameNList, MangledNameNList, NList] 
                0x00000001800b47c8 (    0x20) GCC_except_table461 [NameNList, MangledNameNList, NList] 
                0x00000001800b47e8 (    0x1c) GCC_except_table464 [NameNList, MangledNameNList, NList] 
                0x00000001800b4804 (    0x24) GCC_except_table465 [NameNList, MangledNameNList, NList] 
                0x00000001800b4828 (    0x24) GCC_except_table474 [NameNList, MangledNameNList, NList] 
                0x00000001800b484c (    0x24) GCC_except_table475 [NameNList, MangledNameNList, NList] 
                0x00000001800b4870 (    0x10) GCC_except_table476 [NameNList, MangledNameNList, NList] 
                0x00000001800b4880 (    0x28) GCC_except_table478 [NameNList, MangledNameNList, NList] 
                0x00000001800b48a8 (    0x10) GCC_except_table479 [NameNList, MangledNameNList, NList] 
                0x00000001800b48b8 (    0x10) GCC_except_table480 [NameNList, MangledNameNList, NList] 
                0x00000001800b48c8 (    0x10) GCC_except_table481 [NameNList, MangledNameNList, NList] 
                0x00000001800b48d8 (    0x10) GCC_except_table483 [NameNList, MangledNameNList, NList] 
                0x00000001800b48e8 (    0x60) GCC_except_table484 [NameNList, MangledNameNList, NList] 
                0x00000001800b4948 (    0x1c) GCC_except_table485 [NameNList, MangledNameNList, NList] 
                0x00000001800b4964 (    0x2c) GCC_except_table487 [NameNList, MangledNameNList, NList] 
                0x00000001800b4990 (    0x4c) GCC_except_table490 [NameNList, MangledNameNList, NList] 
                0x00000001800b49dc (    0x14) GCC_except_table493 [NameNList, MangledNameNList, NList] 
                0x00000001800b49f0 (    0x14) GCC_except_table495 [NameNList, MangledNameNList, NList] 
                0x00000001800b4a04 (    0x10) GCC_except_table496 [NameNList, MangledNameNList, NList] 
                0x00000001800b4a14 (    0x18) GCC_except_table497 [NameNList, MangledNameNList, NList] 
                0x00000001800b4a2c (    0x10) GCC_except_table498 [NameNList, MangledNameNList, NList] 
                0x00000001800b4a3c (    0x10) GCC_except_table512 [NameNList, MangledNameNList, NList] 
                0x00000001800b4a4c (    0x18) GCC_except_table556 [NameNList, MangledNameNList, NList] 
                0x00000001800b4a64 (    0x3c) GCC_except_table557 [NameNList, MangledNameNList, NList] 
                0x00000001800b4aa0 (    0x14) GCC_except_table566 [NameNList, MangledNameNList, NList] 
                0x00000001800b4ab4 (    0x14) GCC_except_table569 [NameNList, MangledNameNList, NList] 
                0x00000001800b4ac8 (    0x14) GCC_except_table572 [NameNList, MangledNameNList, NList] 
                0x00000001800b4adc (    0x28) GCC_except_table617 [NameNList, MangledNameNList, NList] 
                0x00000001800b4b04 (    0x10) GCC_except_table619 [NameNList, MangledNameNList, NList] 
                0x00000001800b4b14 (    0x10) GCC_except_table621 [NameNList, MangledNameNList, NList] 
                0x00000001800b4b24 (    0x34) GCC_except_table622 [NameNList, MangledNameNList, NList] 
                0x00000001800b4b58 (    0x10) GCC_except_table625 [NameNList, MangledNameNList, NList] 
                0x00000001800b4b68 (    0x14) GCC_except_table632 [NameNList, MangledNameNList, NList] 
                0x00000001800b4b7c (    0x18) GCC_except_table635 [NameNList, MangledNameNList, NList] 
                0x00000001800b4b94 (    0x14) GCC_except_table722 [NameNList, MangledNameNList, NList] 
                0x00000001800b4ba8 (    0x14) GCC_except_table723 [NameNList, MangledNameNList, NList] 
                0x00000001800b4bbc (    0x10) GCC_except_table725 [NameNList, MangledNameNList, NList] 
                0x00000001800b4bcc (    0x10) GCC_except_table726 [NameNList, MangledNameNList, NList] 
                0x00000001800b4bdc (    0x10) GCC_except_table818 [NameNList, MangledNameNList, NList] 
            0x00000001800b4bec (  0x111f) __TEXT __dof_objc_runt
            0x00000001800b5d0c (   0xd84) __TEXT __unwind_info
            0x00000001800b6a90 (    0x38) __TEXT __eh_frame
            0x00000001800b6ac8 (    0x4d) __TEXT __objc_classname
            0x00000001800b6b15 (   0x3ae) __TEXT __objc_methname
            0x00000001800b6ec3 (   0x11e) __TEXT __objc_methtype
        0x00000001dabac000 (   0xfb8) __DATA_CONST SEGMENT
            0x00000001dabac000 (    0x38) __DATA_CONST __got
            0x00000001dabac040 (   0x8a8) __DATA_CONST __const
                0x00000001dabac040 (     0x8) objc_debug_future_named_class_map [EXT, NameNList, MangledNameNList, NList] 
                0x00000001dabac048 (    0x78) objc::interestingSelectors [NameNList, MangledNameNList, NList] 
                0x00000001dabac0c0 (   0x820) Settings [NameNList, MangledNameNList, NList] 
                0x00000001dabac8e0 (     0x8) objc_debug_side_tables_map [EXT, NameNList, MangledNameNList, NList] 
            0x00000001dabac8e8 (    0x28) __DATA_CONST __objc_classlist
            0x00000001dabac910 (    0x20) __DATA_CONST __objc_nlclslist
            0x00000001dabac930 (     0x8) __DATA_CONST __objc_protolist
                0x00000001dabac930 (     0x8) _OBJC_LABEL_PROTOCOL_$_NSObject [PEXT, NameNList, MangledNameNList, NList] 
            0x00000001dabac938 (     0x8) __DATA_CONST __objc_imageinfo
            0x00000001dabac940 (   0x4a8) __DATA_CONST __objc_const
                0x00000001dabac940 (    0x28) _OBJC_$_INSTANCE_VARIABLES_Object [NameNList, MangledNameNList, NList] 
                0x00000001dabac968 (    0x48) _OBJC_METACLASS_RO_$___IncompleteProtocol [NameNList, MangledNameNList, NList] 
                0x00000001dabac9b0 (    0x48) _OBJC_CLASS_RO_$___IncompleteProtocol [NameNList, MangledNameNList, NList] 
                0x00000001dabac9f8 (    0x48) _OBJC_METACLASS_RO_$_Protocol [NameNList, MangledNameNList, NList] 
                0x00000001dabaca40 (    0x48) _OBJC_METACLASS_RO_$___NSUnrecognizedTaggedPointer [NameNList, MangledNameNList, NList] 
                0x00000001dabaca88 (   0x1d0) _OBJC_$_PROTOCOL_INSTANCE_METHODS_NSObject [NameNList, MangledNameNList, NList] 
                0x00000001dabacc58 (    0x20) _OBJC_$_PROTOCOL_INSTANCE_METHODS_OPT_NSObject [NameNList, MangledNameNList, NList] 
                0x00000001dabacc78 (    0x48) _OBJC_$_PROP_LIST_NSObject [NameNList, MangledNameNList, NList] 
                0x00000001dabaccc0 (    0xa0) _OBJC_$_PROTOCOL_METHOD_TYPES_NSObject [NameNList, MangledNameNList, NList] 
                0x00000001dabacd60 (    0x18) _OBJC_CLASS_PROTOCOLS_$_NSObject [NameNList, MangledNameNList, NList] 
                0x00000001dabacd78 (    0x28) _OBJC_$_INSTANCE_VARIABLES_NSObject [NameNList, MangledNameNList, NList] 
                0x00000001dabacda0 (    0x48) _OBJC_$_PROP_LIST_NSObject.101 [NameNList, MangledNameNList, NList] 
            0x00000001dabacde8 (   0x1d0) __DATA_CONST __objc_selrefs
        0x00000001dabacfc0 (   0xc10) __AUTH_CONST SEGMENT
            0x00000001dabacfc0 (   0x5e8) __AUTH_CONST __const
                0x00000001dabacfc0 (    0x18) OBJC_EHTYPE_id [EXT, NameNList, MangledNameNList, NList] 
                0x00000001dabacfd8 (    0x68) objc_ehtype_vtable [EXT, NameNList, MangledNameNList, NList] 
                0x00000001dabad040 (    0x20) NXPtrPrototype [EXT, NameNList, MangledNameNList, NList] 
                0x00000001dabad060 (    0x20) NXStrPrototype [EXT, NameNList, MangledNameNList, NList] 
                0x00000001dabad080 (    0x20) NXPtrStructKeyPrototype [EXT, NameNList, MangledNameNList, NList] 
                0x00000001dabad0a0 (    0x20) NXStrStructKeyPrototype [EXT, NameNList, MangledNameNList, NList] 
                0x00000001dabad0c0 (    0x28) protoPrototype (.2) [NameNList, MangledNameNList, NList] 
                0x00000001dabad0e8 (    0x30) __block_descriptor_33_e8_32c31_ZTSKZ18_objc_flush_cachesE3$_0_e8_B16?0#8l [NameNList, MangledNameNList, NList] 
                0x00000001dabad118 (    0x30) __block_descriptor_33_e8_32c31_ZTSKZ18_objc_flush_cachesE3$_1_e8_B16?0#8l [NameNList, MangledNameNList, NList] 
                0x00000001dabad148 (    0x20) NXStrValueMapPrototype [EXT, NameNList, MangledNameNList, NList] 
                0x00000001dabad168 (    0x30) __block_descriptor_64_e8_32c43_ZTSKZ30method_exchangeImplementationsE3$_4_e8_B16?0#8l [NameNList, MangledNameNList, NList] 
                0x00000001dabad198 (    0x30) __block_descriptor_40_e8_32c49_ZTSKZL33objc_copyRealizedClassList_nolockPjE3$_5_e8_B16?0#8l [NameNList, MangledNameNList, NList] 
                0x00000001dabad1c8 (    0x30) __block_descriptor_48_e8_32c49_ZTSKZL33objc_copyRealizedClassList_nolockPjE3$_6_e8_B16?0#8l [NameNList, MangledNameNList, NList] 
                0x00000001dabad1f8 (    0x30) __block_descriptor_33_e8_32c46_ZTSKZ33_class_setCustomDeallocInitiationE3$_7_e8_B16?0#8l [NameNList, MangledNameNList, NList] 
                0x00000001dabad228 (    0x30) __block_descriptor_48_e8_32c65_ZTSKZN10objc_class36setInstancesRequireRawIsaRecursivelyEbE4$_10_e8_B16?0#8l [NameNList, MangledNameNList, NList] 
                0x00000001dabad258 (    0x20) NXPtrValueMapPrototype [EXT, NameNList, MangledNameNList, NList] 
                0x00000001dabad278 (    0x30) __block_descriptor_48_e8_32c83_ZTSKZN4objc7Scanner20propagateCustomFlagsEP10objc_classjNS0_11inherited_tEEUlS2_E__e8_B16?0#8l [NameNList, MangledNameNList, NList] 
                0x00000001dabad2a8 (    0x30) __block_descriptor_33_e8_32c122_ZTSKZZL16attachCategoriesP10objc_classPK21locstamped_category_tjiENK4$_11clEPZL16attachCategoriesS0_S3_jiE5ListsbEUlS0_E__e8_B16?0#8l [NameNList, MangledNameNList, NList] 
                0x00000001dabad2d8 (    0x30) __block_descriptor_48_e8_32b_e8_B16?0#8l [NameNList, MangledNameNList, NList] 
                0x00000001dabad308 (    0x30) __block_descriptor_48_e8_32c68_ZTSKZL25_method_setImplementationP10objc_classP8method_tPFvvEE4$_13_e8_B16?0#8l [NameNList, MangledNameNList, NList] 
                0x00000001dabad338 (    0x30) __block_descriptor_64_e8_32c62_ZTSKZL32objc_getRealizedClassList_nolockPP10objc_classmE4$_14_e8_B16?0#8l [NameNList, MangledNameNList, NList] 
                0x00000001dabad368 (    0x30) __block_descriptor_40_e8_32c62_ZTSKZL32objc_getRealizedClassList_nolockPP10objc_classmE4$_15_e8_B16?0#8l [NameNList, MangledNameNList, NList] 
                0x00000001dabad398 (    0x30) __block_descriptor_33_e8_32c61_ZTSKZL17addMethods_finishP10objc_classP13method_list_tE4$_16_e8_B16?0#8l [NameNList, MangledNameNList, NList] 
                0x00000001dabad3c8 (    0x30) __block_descriptor_33_e8_32c44_ZTSKZL13setSuperclassP10objc_classS0_E4$_17_e8_B16?0#8l [NameNList, MangledNameNList, NList] 
                0x00000001dabad3f8 (    0x30) __block_descriptor_33_e8_32c44_ZTSKZL13setSuperclassP10objc_classS0_E4$_18_e8_B16?0#8l [NameNList, MangledNameNList, NList] 
                0x00000001dabad428 (    0x48) vtable for std::__1::__function::__func<appendHeader::$_1, std::__1::allocator<appendHeader::$_1>, void (segment_command_64 const*, long)> [NameNList, MangledNameNList, NList] 
                0x00000001dabad470 (    0x78) vtable for std::__1::__function::__func<removeHeader::$_2, std::__1::allocator<removeHeader::$_2>, void (segment_command_64 const*, long)> [NameNList, MangledNameNList, NList] 
                0x00000001dabad4e8 (    0x30) __block_descriptor_40_e8_32c47_ZTSKZ34getSharedCachePreoptimizedProtocolE3$_0_e16_v28?0^v8B16^B20l [NameNList, MangledNameNList, NList] 
                0x00000001dabad518 (    0x30) __block_descriptor_40_e8_32c36_ZTSKZ23getPreoptimizedProtocolE3$_1_e16_v28?0^v8B16^B20l [NameNList, MangledNameNList, NList] 
                0x00000001dabad548 (    0x30) __block_descriptor_40_e8_32c33_ZTSKZ20getPreoptimizedClassE3$_2_e16_v28?0^v8B16^B20l [NameNList, MangledNameNList, NList] 
                0x00000001dabad578 (    0x30) __block_descriptor_48_e8_32c48_ZTSKZ35getPreoptimizedClassesWithMetaClassE3$_3_e16_v28?0^v8B16^B20l [NameNList, MangledNameNList, NList] 
            0x00000001dabad5a8 (   0x1b0) __AUTH_CONST __objc_const
                0x00000001dabad5a8 (    0x48) _OBJC_METACLASS_RO_$_Object [NameNList, MangledNameNList, NList] 
                0x00000001dabad5f0 (    0x48) _OBJC_CLASS_RO_$_Object [NameNList, MangledNameNList, NList] 
                0x00000001dabad638 (    0x48) _OBJC_CLASS_RO_$_Protocol [NameNList, MangledNameNList, NList] 
                0x00000001dabad680 (    0x48) _OBJC_CLASS_RO_$___NSUnrecognizedTaggedPointer [NameNList, MangledNameNList, NList] 
                0x00000001dabad6c8 (    0x48) _OBJC_METACLASS_RO_$_NSObject [NameNList, MangledNameNList, NList] 
                0x00000001dabad710 (    0x48) _OBJC_CLASS_RO_$_NSObject [NameNList, MangledNameNList, NList] 
            0x00000001dabad758 (    0x10) __AUTH_CONST __auth_ptr
            0x00000001dabad768 (   0x468) __AUTH_CONST __auth_got
        0x00000001d71a7cd0 (    0x78) __AUTH SEGMENT
            0x00000001d71a7cd0 (    0x50) __AUTH __objc_data
                0x00000001d71a7cd0 (    0x28) OBJC_CLASS_$_Object [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d71a7cf8 (    0x28) OBJC_METACLASS_$_Object [EXT, NameNList, MangledNameNList, NList] 
            0x00000001d71a7d20 (     0x8) __AUTH __objc_opt_ptrs
            0x00000001d71a7d28 (    0x20) __AUTH __data
                0x00000001d71a7d28 (    0x20) protoPrototype [NameNList, MangledNameNList, NList] 
        0x00000001d5b7c000 (  0x35e0) __DATA SEGMENT
            0x00000001d5b7c000 (     0x8) __DATA __objc_ivar
                0x00000001d5b7c000 (     0x4) OBJC_IVAR_$_Object.isa [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5b7c004 (     0x4) OBJC_IVAR_$_NSObject.isa [EXT, NameNList, MangledNameNList, NList] 
            0x00000001d5b7c008 (    0xc0) __DATA __data
                0x00000001d5b7c008 (     0x8) objcMsgLogFD [NameNList, MangledNameNList, NList] 
                0x00000001d5b7c010 (     0x8) objc_debug_taggedpointer_mask [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5b7c018 (     0x8) objc_debug_taggedpointer_slot_mask [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5b7c020 (     0x4) objc_debug_taggedpointer_payload_lshift [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5b7c024 (     0x4) objc_debug_taggedpointer_payload_rshift [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5b7c028 (     0x8) objc_debug_taggedpointer_ext_mask [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5b7c030 (     0x8) objc_debug_taggedpointer_ext_slot_shift [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5b7c038 (     0x8) objc_debug_taggedpointer_ext_slot_mask [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5b7c040 (     0x4) objc_debug_taggedpointer_ext_payload_lshift [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5b7c044 (     0x4) objc_debug_taggedpointer_ext_payload_rshift [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5b7c048 (     0x8) objc_debug_constant_cfstring_tag_bits [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5b7c050 (     0x8) DebugDuplicateClasses [NameNList, MangledNameNList, NList] 
                0x00000001d5b7c058 (     0x8) DebugWeakErrors [NameNList, MangledNameNList, NList] 
                0x00000001d5b7c060 (    0x60) _OBJC_PROTOCOL_$_NSObject [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5b7c0c0 (     0x8) objc::PageCountWarning [NameNList, MangledNameNList, NList] 
            0x00000001d5b7c0c8 (    0x40) __DATA __crash_info
                0x00000001d5b7c0c8 (    0x40) gCRAnnotations [PEXT, NameNList, MangledNameNList, NList] 
            0x00000001d5b7c108 (    0x20) __DATA __common
                0x00000001d5b7c108 (     0x8) objc_indexed_classes [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5b7c110 (     0x8) objc_indexed_classes_count [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5b7c118 (     0x8) objc_debug_taggedpointer_slot_shift [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5b7c120 (     0x8) objc_debug_headerInfoRWs [EXT, NameNList, MangledNameNList, NList] 
            0x00000001d5b7c140 (  0x34a0) __DATA __bss
                0x00000001d5b7c150 (     0x8) cache_t::emptyBucketsForCapacity(unsigned int, bool)::emptyBucketsList [NameNList, MangledNameNList, NList] 
                0x00000001d5b7c158 (     0x4) cache_t::emptyBucketsForCapacity(unsigned int, bool)::emptyBucketsListCount [NameNList, MangledNameNList, NList] 
                0x00000001d5b7c15c (    0x1c) shouldUseRestartableRanges [NameNList, MangledNameNList, NList] 
                0x00000001d5b7c178 (     0x8) cache_collections [NameNList, MangledNameNList, NList] 
                0x00000001d5b7c180 (     0x8) cache_allocations [NameNList, MangledNameNList, NList] 
                0x00000001d5b7c188 (    0x50) cache_counts [NameNList, MangledNameNList, NList] 
                0x00000001d5b7c1d8 (     0x4) class_respondsToMethod::warned [NameNList, MangledNameNList, NList] 
                0x00000001d5b7c1dc (     0x4) class_lookupMethod::warned [NameNList, MangledNameNList, NList] 
                0x00000001d5b7c1e0 (     0x8) DebugLists [NameNList, MangledNameNList, NList] 
                0x00000001d5b7c1e8 (     0x8) DebugCounter [NameNList, MangledNameNList, NList] 
                0x00000001d5b7c1f0 (    0x10) objc_addExceptionHandler::warned [NameNList, MangledNameNList, NList] 
                0x00000001d5b7c200 (     0x8) pendingInitializeMap [NameNList, MangledNameNList, NList] 
                0x00000001d5b7c208 (    0x18) willInitializeFuncs [NameNList, MangledNameNList, NList] 
                0x00000001d5b7c220 (     0x4) loadable_classes_used [NameNList, MangledNameNList, NList] 
                0x00000001d5b7c224 (     0x4) loadable_classes_allocated [NameNList, MangledNameNList, NList] 
                0x00000001d5b7c228 (     0x8) loadable_classes [NameNList, MangledNameNList, NList] 
                0x00000001d5b7c230 (     0x4) loadable_categories_used [NameNList, MangledNameNList, NList] 
                0x00000001d5b7c234 (     0x4) loadable_categories_allocated [NameNList, MangledNameNList, NList] 
                0x00000001d5b7c238 (     0x8) loadable_categories [NameNList, MangledNameNList, NList] 
                0x00000001d5b7c240 (    0x28) call_load_methods::loading [NameNList, MangledNameNList, NList] 
                0x00000001d5b7c268 (    0x20) objc::methodDescriptionMap [NameNList, MangledNameNList, NList] 
                0x00000001d5b7c288 (     0x4) fixed_up_protocol [NameNList, MangledNameNList, NList] 
                0x00000001d5b7c28c (     0x4) canonical_protocol [NameNList, MangledNameNList, NList] 
                0x00000001d5b7c290 (    0x18) future_named_class_map [NameNList, MangledNameNList, NList] 
                0x00000001d5b7c2a8 (     0x4) _read_images::PreoptTotalMethodLists [NameNList, MangledNameNList, NList] 
                0x00000001d5b7c2ac (     0x4) _read_images::PreoptOptimizedMethodLists [NameNList, MangledNameNList, NList] 
                0x00000001d5b7c2b0 (     0x4) _read_images::PreoptTotalClasses [NameNList, MangledNameNList, NList] 
                0x00000001d5b7c2b4 (    0x3c) _read_images::PreoptOptimizedClasses [NameNList, MangledNameNList, NList] 
                0x00000001d5b7c2f0 (    0x18) DemangleCache [NameNList, MangledNameNList, NList] 
                0x00000001d5b7c308 (    0x28) remappedClasses(bool)::remapped_class_map [NameNList, MangledNameNList, NList] 
                0x00000001d5b7c330 (     0x4) getMaybeUnrealizedNonMetaClass(objc_class*, objc_object*)::secondary [NameNList, MangledNameNList, NList] 
                0x00000001d5b7c334 (     0x4) getMaybeUnrealizedNonMetaClass(objc_class*, objc_object*)::sharedcache [NameNList, MangledNameNList, NList] 
                0x00000001d5b7c338 (     0x8) getMaybeUnrealizedNonMetaClass(objc_class*, objc_object*)::dyld3 [NameNList, MangledNameNList, NList] 
                0x00000001d5b7c340 (    0x10) nonmeta_class_map [NameNList, MangledNameNList, NList] 
                0x00000001d5b7c350 (     0x8) objc::InterestingSelectorZeroes [NameNList, MangledNameNList, NList] 
                0x00000001d5b7c358 (    0x18) objc::InterestingSelectorOnes [NameNList, MangledNameNList, NList] 
                0x00000001d5b7c370 (     0x8) objcMsgLogEnabled [NameNList, MangledNameNList, NList] 
                0x00000001d5b7c378 (     0x8) objc::NSObjectSwizzledMask [NameNList, MangledNameNList, NList] 
                0x00000001d5b7c380 (     0x4) PrintLoading [NameNList, MangledNameNList, NList] 
                0x00000001d5b7c384 (     0x4) PrintResolving [NameNList, MangledNameNList, NList] 
                0x00000001d5b7c388 (     0x4) PrintProtocols [NameNList, MangledNameNList, NList] 
                0x00000001d5b7c38c (     0x4) PrintIvars [NameNList, MangledNameNList, NList] 
                0x00000001d5b7c390 (     0x4) PrintVtables [NameNList, MangledNameNList, NList] 
                0x00000001d5b7c394 (     0x4) PrintVtableImages [NameNList, MangledNameNList, NList] 
                0x00000001d5b7c398 (     0x4) PrintCaches [NameNList, MangledNameNList, NList] 
                0x00000001d5b7c39c (     0x4) PrintFuture [NameNList, MangledNameNList, NList] 
                0x00000001d5b7c3a0 (     0x4) PrintCxxCtors [NameNList, MangledNameNList, NList] 
                0x00000001d5b7c3a4 (     0x4) PrintExceptions [NameNList, MangledNameNList, NList] 
                0x00000001d5b7c3a8 (     0x4) PrintExceptionThrow [NameNList, MangledNameNList, NList] 
                0x00000001d5b7c3ac (     0x4) PrintAltHandlers [NameNList, MangledNameNList, NList] 
                0x00000001d5b7c3b0 (     0x4) PrintReplacedMethods [NameNList, MangledNameNList, NList] 
                0x00000001d5b7c3b4 (     0x4) PrintDeprecation [NameNList, MangledNameNList, NList] 
                0x00000001d5b7c3b8 (     0x4) PrintCustomCore [NameNList, MangledNameNList, NList] 
                0x00000001d5b7c3bc (     0x4) PrintCustomRR [NameNList, MangledNameNList, NList] 
                0x00000001d5b7c3c0 (     0x4) PrintCustomAWZ [NameNList, MangledNameNList, NList] 
                0x00000001d5b7c3c4 (     0x4) PrintRawIsa [NameNList, MangledNameNList, NList] 
                0x00000001d5b7c3c8 (     0x4) DebugUnload [NameNList, MangledNameNList, NList] 
                0x00000001d5b7c3cc (     0x4) DebugFragileSuperclasses [NameNList, MangledNameNList, NList] 
                0x00000001d5b7c3d0 (     0x4) DebugNonFragileIvars [NameNList, MangledNameNList, NList] 
                0x00000001d5b7c3d4 (     0x4) DebugAltHandlers [NameNList, MangledNameNList, NList] 
                0x00000001d5b7c3d8 (     0x4) DebugDontCrash [NameNList, MangledNameNList, NList] 
                0x00000001d5b7c3dc (     0x4) DebugPoolDepth [NameNList, MangledNameNList, NList] 
                0x00000001d5b7c3e0 (     0x4) DebugScribbleCaches [NameNList, MangledNameNList, NList] 
                0x00000001d5b7c3e4 (     0x4) DisableVtables [NameNList, MangledNameNList, NList] 
                0x00000001d5b7c3e8 (     0x4) DisablePreattachedCategories [NameNList, MangledNameNList, NList] 
                0x00000001d5b7c3ec (     0x4) DisableTaggedPointers [NameNList, MangledNameNList, NList] 
                0x00000001d5b7c3f0 (     0x8) DisableTaggedPointerObfuscation [NameNList, MangledNameNList, NList] 
                0x00000001d5b7c3f8 (     0x4) DisablePreoptCaches [NameNList, MangledNameNList, NList] 
                0x00000001d5b7c3fc (     0x4) DisableClassRXSigningEnforcement [NameNList, MangledNameNList, NList] 
                0x00000001d5b7c400 (    0x10) DisableClassROFaults [NameNList, MangledNameNList, NList] 
                0x00000001d5b7c410 (    0x30) LastHeaderRealizedAllClasses [NameNList, MangledNameNList, NList] 
                0x00000001d5b7c440 (     0x4) DebugSyncErrors [NameNList, MangledNameNList, NList] 
                0x00000001d5b7c444 (    0x25) DebugNilSync [NameNList, MangledNameNList, NList] 
                0x00000001d5b7c469 (     0x1) map_images_nolock::executableHasClassROSigning [NameNList, MangledNameNList, NList] 
                0x00000001d5b7c46a (     0x2) map_images_nolock::executableIsARM64e [NameNList, MangledNameNList, NList] 
                0x00000001d5b7c46c (     0x8) PrintImages [NameNList, MangledNameNList, NList] 
                0x00000001d5b7c474 (     0x4) PrintInitializing [NameNList, MangledNameNList, NList] 
                0x00000001d5b7c478 (     0x4) DebugClassRXSigning [NameNList, MangledNameNList, NList] 
                0x00000001d5b7c47c (     0x4) ForkIsMultithreaded [NameNList, MangledNameNList, NList] 
                0x00000001d5b7c480 (    0x40) loadMethodLock [NameNList, MangledNameNList, NList] 
                0x00000001d5b7c4c0 (  0x1000) PropertyLocks [NameNList, MangledNameNList, NList] 
                0x00000001d5b7d4c0 (  0x1000) CppObjectLocks [NameNList, MangledNameNList, NList] 
                0x00000001d5b7e4c0 (     0x8) AssociationsManagerLock [NameNList, MangledNameNList, NList] 
                0x00000001d5b7e4c8 (     0x4) pendingInitializeMapLock [NameNList, MangledNameNList, NList] 
                0x00000001d5b7e4cc (     0x4) DemangleCacheLock [NameNList, MangledNameNList, NList] 
                0x00000001d5b7e4d0 (     0x4) selLock [NameNList, MangledNameNList, NList] 
                0x00000001d5b7e4d4 (     0x4) objcMsgLogLock [NameNList, MangledNameNList, NList] 
                0x00000001d5b7e4d8 (    0x28) AltHandlerDebugLock [NameNList, MangledNameNList, NList] 
                0x00000001d5b7e500 (  0x1000) StructLocks [NameNList, MangledNameNList, NList] 
                0x00000001d5b7f500 (     0x4) crashlog_lock [NameNList, MangledNameNList, NList] 
                0x00000001d5b7f504 (     0x4) MultithreadedForkChild [NameNList, MangledNameNList, NList] 
                0x00000001d5b7f508 (    0x48) loadImageCallbacks [NameNList, MangledNameNList, NList] 
                0x00000001d5b7f550 (     0x4) PrintConnecting [NameNList, MangledNameNList, NList] 
                0x00000001d5b7f554 (    0x2c) runtimeLock [NameNList, MangledNameNList, NList] 
                0x00000001d5b7f580 (     0x4) DebugScanWeakTables [NameNList, MangledNameNList, NList] 
                0x00000001d5b7f584 (     0x4) DisableAutoreleaseCoalescing [NameNList, MangledNameNList, NList] 
                0x00000001d5b7f588 (     0x4) DisableAutoreleaseCoalescingLRU [NameNList, MangledNameNList, NList] 
                0x00000001d5b7f58c (     0x4) (anonymous namespace)::numFaults [NameNList, MangledNameNList, NList] 
                0x00000001d5b7f590 (     0x4) DisableFaults [NameNList, MangledNameNList, NList] 
                0x00000001d5b7f594 (     0x4) DebugMissingPools [NameNList, MangledNameNList, NList] 
                0x00000001d5b7f598 (     0x4) DebugPoolAllocation [NameNList, MangledNameNList, NList] 
                0x00000001d5b7f59c (     0x4) PrintPoolHiwat [NameNList, MangledNameNList, NList] 
                0x00000001d5b7f5a0 (     0x4) AutoreleasePoolPage::badPop(void*)::complained [NameNList, MangledNameNList, NList] 
                0x00000001d5b7f5a4 (     0x4) DisablePreopt [NameNList, MangledNameNList, NList] 
                0x00000001d5b7f5a8 (    0x28) headerInfoROs [NameNList, MangledNameNList, NList] 
                0x00000001d5b7f5d0 (     0x8) PrintPreopt [NameNList, MangledNameNList, NList] 
                0x00000001d5b7f5d8 (     0x8) objc::disableEnforceClassRXPtrAuth [NameNList, MangledNameNList, NList] 
        0x00000001d6d0ebc0 (  0x2e10) __DATA_DIRTY SEGMENT
            0x00000001d6d0ebc0 (   0x140) __DATA_DIRTY __objc_data
                0x00000001d6d0ebc0 (    0x28) OBJC_METACLASS_$___IncompleteProtocol [NameNList, MangledNameNList, NList] 
                0x00000001d6d0ebe8 (    0x28) OBJC_CLASS_$___IncompleteProtocol [NameNList, MangledNameNList, NList] 
                0x00000001d6d0ec10 (    0x28) OBJC_METACLASS_$_Protocol [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d6d0ec38 (    0x28) OBJC_CLASS_$_Protocol [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d6d0ec60 (    0x28) OBJC_METACLASS_$_NSObject [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d6d0ec88 (    0x28) OBJC_METACLASS_$___NSUnrecognizedTaggedPointer [NameNList, MangledNameNList, NList] 
                0x00000001d6d0ecb0 (    0x28) OBJC_CLASS_$_NSObject [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d6d0ecd8 (    0x28) OBJC_CLASS_$___NSUnrecognizedTaggedPointer [NameNList, MangledNameNList, NList] 
            0x00000001d6d0ed00 (   0x940) __DATA_DIRTY __data
                0x00000001d6d0ed00 (    0x60) objc_restartableRanges [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6d0ed60 (   0x800) objc_debug_taggedpointer_ext_classes [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d6d0f560 (    0x80) objc_debug_taggedpointer_classes [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d6d0f5e0 (     0x8) exception_preprocessor [NameNList, MangledNameNList, NList] 
                0x00000001d6d0f5e8 (     0x8) exception_matcher [NameNList, MangledNameNList, NList] 
                0x00000001d6d0f5f0 (     0x8) uncaught_handler [NameNList, MangledNameNList, NList] 
                0x00000001d6d0f5f8 (     0x8) objc_debug_tag60_permutations [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d6d0f600 (     0x8) LazyClassNamerHook [NameNList, MangledNameNList, NList] 
                0x00000001d6d0f608 (     0x8) GetClassHook [NameNList, MangledNameNList, NList] 
                0x00000001d6d0f610 (     0x8) _objc_forward_handler [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6d0f618 (     0x8) GetImageNameHook [NameNList, MangledNameNList, NList] 
                0x00000001d6d0f620 (     0x8) badAllocHandler [NameNList, MangledNameNList, NList] 
                0x00000001d6d0f628 (     0x8) swiftRetain [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6d0f630 (     0x8) swiftRelease [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6d0f638 (     0x8) opt [NameNList, MangledNameNList, NList] 
            0x00000001d6d0f640 (    0x18) __DATA_DIRTY __common
                0x00000001d6d0f640 (     0x8) gdb_objc_realized_classes [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d6d0f648 (     0x8) objc_debug_realized_class_generation_count [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d6d0f650 (     0x8) objc_debug_taggedpointer_obfuscator [EXT, NameNList, MangledNameNList, NList] 
            0x00000001d6d0f680 (  0x2350) __DATA_DIRTY __bss
                0x00000001d6d0f680 (     0x8) prototypes [NameNList, MangledNameNList, NList] 
                0x00000001d6d0f688 (    0x18) prototypes (.1) [NameNList, MangledNameNList, NList] 
                0x00000001d6d0f6a0 (     0x8) garbage_byte_size [NameNList, MangledNameNList, NList] 
                0x00000001d6d0f6a8 (     0x8) garbage_refs [NameNList, MangledNameNList, NList] 
                0x00000001d6d0f6b0 (    0x18) garbage_count [NameNList, MangledNameNList, NList] 
                0x00000001d6d0f6c8 (     0x8) _garbage_make_room()::first [NameNList, MangledNameNList, NList] 
                0x00000001d6d0f6d0 (    0x28) garbage_max [NameNList, MangledNameNList, NList] 
                0x00000001d6d0f6f8 (    0x10) old_terminate [NameNList, MangledNameNList, NList] 
                0x00000001d6d0f708 (    0x50) objc::smallMethodIMPMap [NameNList, MangledNameNList, NList] 
                0x00000001d6d0f758 (     0x1) didInitialAttachCategories [NameNList, MangledNameNList, NList] 
                0x00000001d6d0f759 (     0x7) _read_images::doneOnce [NameNList, MangledNameNList, NList] 
                0x00000001d6d0f760 (    0x18) _read_images::UnfixedSelectors [NameNList, MangledNameNList, NList] 
                0x00000001d6d0f778 (     0x8) UnfixedProtocolReferences [NameNList, MangledNameNList, NList] 
                0x00000001d6d0f780 (    0x18) objc::unattachedCategories [NameNList, MangledNameNList, NList] 
                0x00000001d6d0f798 (    0x20) objc::allocatedClasses [NameNList, MangledNameNList, NList] 
                0x00000001d6d0f7b8 (    0x30) classCopyFixupHandlers [NameNList, MangledNameNList, NList] 
                0x00000001d6d0f7e8 (     0x4) getMaybeUnrealizedNonMetaClass(objc_class*, objc_object*)::total [NameNList, MangledNameNList, NList] 
                0x00000001d6d0f7ec (    0x1c) getMaybeUnrealizedNonMetaClass(objc_class*, objc_object*)::named [NameNList, MangledNameNList, NList] 
                0x00000001d6d0f808 (    0x18) realizeClassWithoutSwift(objc_class*, objc_class*)::hackedDispatch [NameNList, MangledNameNList, NList] 
                0x00000001d6d0f820 (     0x8) _firstRealizedClass [NameNList, MangledNameNList, NList] 
                0x00000001d6d0f828 (     0xc) protocols()::protocol_map [NameNList, MangledNameNList, NList] 
                0x00000001d6d0f834 (    0x14) DisableNonpointerIsa [NameNList, MangledNameNList, NList] 
                0x00000001d6d0f848 (    0x10) LastHeader [NameNList, MangledNameNList, NList] 
                0x00000001d6d0f858 (     0x8) enumerationMutationHandler [NameNList, MangledNameNList, NList] 
                0x00000001d6d0f860 (    0x18) namedSelectors [NameNList, MangledNameNList, NList] 
                0x00000001d6d0f878 (     0x8) SEL_cxx_construct [NameNList, MangledNameNList, NList] 
                0x00000001d6d0f880 (    0x40) SEL_cxx_destruct [NameNList, MangledNameNList, NList] 
                0x00000001d6d0f8c0 (  0x1008) sDataLists [NameNList, MangledNameNList, NList] 
                0x00000001d6d108c8 (    0x18) objc::AssociationsManager::_mapStorage [NameNList, MangledNameNList, NList] 
                0x00000001d6d108e0 (     0x8) FirstHeader [NameNList, MangledNameNList, NList] 
                0x00000001d6d108e8 (     0x8) map_images_nolock::firstTime [NameNList, MangledNameNList, NList] 
                0x00000001d6d108f0 (    0x14) DisableInitializeForkSafety [NameNList, MangledNameNList, NList] 
                0x00000001d6d10904 (    0x41) classInitLock [NameNList, MangledNameNList, NList] 
                0x00000001d6d10945 (     0x1) _objc_init::initialized [NameNList, MangledNameNList, NList] 
                0x00000001d6d10946 (    0x12) didCallDyldNotifyRegister [NameNList, MangledNameNList, NList] 
                0x00000001d6d10958 (     0x8) HeadPageGroup [NameNList, MangledNameNList, NList] 
                0x00000001d6d10960 (    0x20) Trampolines [NameNList, MangledNameNList, NList] 
                0x00000001d6d10980 (  0x1021) (anonymous namespace)::SideTablesMap [NameNList, MangledNameNList, NList] 
                0x00000001d6d119a1 (     0xf) preoptimized [NameNList, MangledNameNList, NList] 
                0x00000001d6d119b0 (    0x20) dataSegmentsRanges [NameNList, MangledNameNList, NList] 
        0x00000001cf2d53f0 (0x472b6f8) __OBJC_RO SEGMENT
        0x00000001d6af0000 (0x21eba8) __OBJC_RW SEGMENT
        0x000000023a910000 (0x37bf0000) __LINKEDIT SEGMENT
