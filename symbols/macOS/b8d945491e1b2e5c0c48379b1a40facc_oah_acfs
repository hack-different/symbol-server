Unable to find file, pid, task or signature matching: -arch=x86_64
WARNING: You currently do not have task_read_for_pid() privileges.
Unable to find file, pid, task or signature matching: -wide
WARNING: You currently do not have task_read_for_pid() privileges.
/System/Library/PrivateFrameworks/acfs.framework/Versions/A/acfs [arm64e, 0.131823 seconds]:
    4996AD4E-9552-34FD-8BAC-91F1B848688C /System/Library/PrivateFrameworks/acfs.framework/Versions/A/acfs [DYLIB, DYLDSHAREDCACHE, FaultedFromDiskDyldSharedCache, MMap64]  
        0x000000021b2e6000 ( 0x10000) __TEXT SEGMENT
            0x000000021b2e6000 (  0x2678) MACH_HEADER
            0x000000021b2e8678 (  0x9b80) __TEXT __text
                0x000000021b2e8678 (   0x1a0) xs_sha1_fd [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2e8818 (   0x16c) xs_replace_file_get_src [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2e8984 (    0x60) _xs_replace_file_verify_path [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2e89e4 (    0x20) xs_replace_file_set_permissions [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2e8a04 (   0x1c4) xs_replace_file_get_dst [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2e8bc8 (    0xcc) _xs_replace_file_set_permissions [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2e8c94 (   0x2a4) xs_replace_file_commit [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2e8f38 (    0xd4) xs_replace_file_open [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2e900c (    0x68) xs_replace_file_close [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2e9074 (    0xdc) newXsanConfig [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2e9150 (    0x50) getXsanConfigForConfig [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2e91a0 (   0x1e4) getXsanConfig [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2e9384 (    0x4c) ldapSanConfNameForName [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2e93d0 (    0x60) createNewXsanConfigForConfig [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2e9430 (    0xa0) createNewXsanConfig [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2e94d0 (   0x414) doCreateOrSaveConfig [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2e98e4 (    0xe8) saveXsanConfig [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2e99cc (   0x194) destroyXsanConfig [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2e9b60 (    0xd0) redactXsanSecrets [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2e9c30 (    0xb0) cullXsanConfig [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2e9ce0 (    0x4c) ldapSanUserNameForName [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2e9d2c (   0x184) findAndZap [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2e9eb0 (   0x174) clearVolumeLockout [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2ea024 (    0x14) loadConfigPlist [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2ea038 (    0x10) saveConfigPlist [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2ea048 (   0x130) xsan_controller_from_ip [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2ea178 (    0x20) getOurUUID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2ea198 (    0xc0) fillInOurUUID [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2ea258 (    0x38) configPlistIsController [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2ea290 (     0x8) configPlistIsMaster [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2ea298 (    0x70) configPlistIsZombie [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2ea308 (    0x90) calculateMachineIPMap [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2ea398 (    0x58) __calculateMachineIPMap_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2ea3f0 (    0x10) __copy_helper_block_e8_32o [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2ea400 (     0xc) __destroy_helper_block_e8_32o [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2ea40c (   0x180) migrateComputersToControllers [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2ea58c (    0xc4) getHostedVolumeList [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2ea650 (   0x1b0) getLockoutRequests [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2ea800 (    0x30) __getLockoutRequests_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2ea830 (   0x128) clearLockoutRequests [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2ea958 (    0x54) buildRevisionStringFromConfig [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2ea9ac (    0x84) getLegacyHostname [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2eaa30 (    0x4c) ldapSanAccessNameForName [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2eaa7c (    0x80) ldapSanNameForName [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2eaafc (   0x120) redactXsanSecretsWithHash [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2eac1c (   0x118) sha512MeBaby [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2ead34 (     0xc) xsand_make_mount_for_dict [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2ead40 (    0x70) xsand_make_mount_for_dict_and_path [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2eadb0 (   0x12c) initNewConfigFile [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2eaedc (   0x288) xsand_make_mount_for_dict_and_node [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2eb164 (   0x110) closeNewConfigFile [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2eb274 (    0x14) xsan_migrate_automount [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2eb288 (   0x130) xsan_migrate_automount_with_paths [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2eb3b8 (    0x40) __xsan_migrate_automount_with_paths_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2eb3f8 (    0x10) __copy_helper_block_e8_32r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2eb408 (     0xc) __destroy_helper_block_e8_32r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2eb414 (   0x840) xsan_upgrade [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2ebc54 (    0x68) buildXsanDirs [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2ebcbc (    0xe8) buildAnXsanDir [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2ebda4 (   0x10c) __xsand_make_mount_for_dict_and_node_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2ebeb0 (    0x84) __newConfigUpdateLine_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2ebf34 (    0x60) __copy_helper_block_e8_32o40o48r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2ebf94 (    0x50) __destroy_helper_block_e8_32o40o48r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2ebfe4 (    0x78) __closeNewConfigFile_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2ec05c (   0x168) GetXsanConfigEssentials [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2ec1c4 (   0x238) xsanConfigProfileForPayload [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2ec3fc (   0x214) xsanProfileIsInstalled [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2ec610 (   0x100) xsand_wipe_configuration [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2ec710 (    0xdc) xsanHostFromURL [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2ec7ec (    0x4c) requestSanConfigCF [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2ec838 (   0x35c) requestSanConfig [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2ecb94 (    0xf0) requestSanConfigC [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2ecc84 (   0x220) requestSanConfig1 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2ecea4 (    0x90) read_xsan_cfg_file [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2ecf34 (    0x98) deleteControllerByUUID [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2ecfcc (    0x4c) __deleteControllerByUUID_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2ed018 (    0xdc) buildSanConfigC [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2ed0f4 (   0x930) buildSanConfig [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2eda24 (    0x40) buildSanConfigCF [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2eda64 (   0x2e0) buildGlobalConfig [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2edd44 (   0x588) buildVolumeConfig [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2ee2cc (    0xec) resetSanController [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2ee3b8 (    0x10) checkSanConfigChange [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2ee3c8 (   0xc60) checkSanConfigChangeWithServer [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2ef028 (   0x43c) updateFromVolumeConfig [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2ef464 (    0x9c) startXsanctlToUnloadProfile [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2ef500 (   0x11c) destroySanConfigC [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2ef61c (    0x40) destroySanConfigCF [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2ef65c (   0x1d4) destroySanConfig [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2ef830 (    0xe4) cullSanConfig [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2ef914 (   0x104) clearXsanVolumeLockout [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2efa18 (   0x2b8) changeXsanIPAddr [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2efcd0 (    0x84) loadLocalXsanConfig [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2efd54 (    0x90) __changeXsanIPAddr_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2efde4 (    0xa8) write_fsnameservers [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2efe8c (    0x60) __copy_helper_block_e8_32o40o48o [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2efeec (    0x50) __destroy_helper_block_e8_32o40o48o [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2eff3c (    0xa0) saveLocalXsanConfig [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2effdc (   0x120) loadControllerCerts [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2f00fc (   0x108) saveRemoteXsanConfig [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2f0204 (   0x518) send_xsand_requestCF [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2f071c (    0x6c) send_xsand_request [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2f0788 (    0x8c) copyValue [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2f0814 (    0xb4) update_from_file [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2f08c8 (   0x19c) read_fsnameservers [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2f0a64 (    0x74) NError [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2f0ad8 (    0x6c) log_message [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2f0b44 (    0x64) __buildVolumeConfig_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2f0ba8 (    0x30) __buildVolumeConfig_block_invoke.326 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2f0bd8 (    0x10) __Block_byref_object_copy_ [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2f0be8 (     0xc) __Block_byref_object_dispose_ [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2f0bf4 (   0x520) __buildVolumeConfig_block_invoke.346 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2f1114 (    0x50) __copy_helper_block_e8_32o40r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2f1164 (    0x44) __destroy_helper_block_e8_32o40r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2f11a8 (    0xdc) __buildVolumeConfig_block_invoke.378 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2f1284 (   0x1f8) __buildVolumeConfig_block_invoke.380 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2f147c (    0x90) __copy_helper_block_e8_32o40o48o56o64o72r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2f150c (    0x74) __destroy_helper_block_e8_32o40o48o56o64o72r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2f1580 (    0x98) __buildVolumeConfig_block_invoke.384 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2f1618 (   0x188) update_from_config [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2f17a0 (    0x6c) spotlightServerFlagsForConfig [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2f180c (    0x74) __updateFromGlobalConfig_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2f1880 (   0x128) __fsnameservers_without_uuids_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2f19a8 (    0x30) __updateFromVolumeConfig_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2f19d8 (   0x258) __updateFromVolumeConfig_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2f1c30 (    0xa0) __copy_helper_block_e8_32o40o48o56o64o72o80r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2f1cd0 (    0x80) __destroy_helper_block_e8_32o40o48o56o64o72o80r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2f1d50 (    0x70) __updateFromVolumeConfig_block_invoke.434 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2f1dc0 (   0x15c) __updateFromVolumeConfig_block_invoke_2.443 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2f1f1c (    0xb0) __write_fsnameservers_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2f1fcc (    0x2c) xs_replace_file_get_dst.cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2f1ff8 (    0x2c) _xs_replace_file_set_permissions.cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2f2024 (    0x2c) xs_replace_file_commit.cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2f2050 (    0x2c) xs_replace_file_commit.cold.2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2f207c (    0x2c) xs_replace_file_commit.cold.3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2f20a8 (    0x2c) ldapSanConfNameForName.cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2f20d4 (    0x2c) ldapSanUserNameForName.cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2f2100 (    0x2c) ldapSanAccessNameForName.cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2f212c (    0x2c) ldapSanNameForName.cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2f2158 (    0x2c) ldapSanNameForName.cold.2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2f2184 (    0x2c) ldapSanNameForName.cold.3 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2f21b0 (    0x2c) ldapSanNameForName.cold.4 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000021b2f21dc (    0x1c) send_xsand_requestCF.cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
            0x000000021b2f21f8 (   0x610) __TEXT __auth_stubs
                0x000000021b2f21f8 (    0x10) DYLD-STUB$$AuthorizationCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f2208 (    0x10) DYLD-STUB$$AuthorizationMakeExternalForm [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f2218 (    0x10) DYLD-STUB$$CC_SHA1 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f2228 (    0x10) DYLD-STUB$$CC_SHA1_Final [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f2238 (    0x10) DYLD-STUB$$CC_SHA1_Init [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f2248 (    0x10) DYLD-STUB$$CC_SHA1_Update [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f2258 (    0x10) DYLD-STUB$$CC_SHA512 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f2268 (    0x10) DYLD-STUB$$CFDataCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f2278 (    0x10) DYLD-STUB$$CFDataCreateWithBytesNoCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f2288 (    0x10) DYLD-STUB$$CFDataGetBytePtr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f2298 (    0x10) DYLD-STUB$$CFDataGetLength [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f22a8 (    0x10) DYLD-STUB$$CFDictionaryCreateMutableCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f22b8 (    0x10) DYLD-STUB$$CFDictionarySetValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f22c8 (    0x10) DYLD-STUB$$CFPropertyListCreateData [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f22d8 (    0x10) DYLD-STUB$$CFPropertyListCreateWithData [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f22e8 (    0x10) DYLD-STUB$$CFRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f22f8 (    0x10) DYLD-STUB$$CFRetain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f2308 (    0x10) DYLD-STUB$$NSLog [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f2318 (    0x10) DYLD-STUB$$SMJobCopyDictionary [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f2328 (    0x10) DYLD-STUB$$_Block_object_assign [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f2338 (    0x10) DYLD-STUB$$_Block_object_dispose [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f2348 (    0x10) DYLD-STUB$$_Unwind_Resume [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f2358 (    0x10) DYLD-STUB$$__assert_rtn [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f2368 (    0x10) DYLD-STUB$$__darwin_check_fd_set_overflow [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f2378 (    0x10) DYLD-STUB$$__error [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f2388 (    0x10) DYLD-STUB$$__stack_chk_fail [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f2398 (    0x10) DYLD-STUB$$__strcpy_chk [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f23a8 (    0x10) DYLD-STUB$$__strlcat_chk [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f23b8 (    0x10) DYLD-STUB$$__strlcpy_chk [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f23c8 (    0x10) DYLD-STUB$$__strncpy_chk [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f23d8 (    0x10) DYLD-STUB$$_vproc_send_signal_by_label [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f23e8 (    0x10) DYLD-STUB$$asprintf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f23f8 (    0x10) DYLD-STUB$$calloc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f2408 (    0x10) DYLD-STUB$$close [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f2418 (    0x10) DYLD-STUB$$connect [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f2428 (    0x10) DYLD-STUB$$errx [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f2438 (    0x10) DYLD-STUB$$fchflags [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f2448 (    0x10) DYLD-STUB$$fchmod [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f2458 (    0x10) DYLD-STUB$$fchown [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f2468 (    0x10) DYLD-STUB$$fcntl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f2478 (    0x10) DYLD-STUB$$fprintf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f2488 (    0x10) DYLD-STUB$$fputc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f2498 (    0x10) DYLD-STUB$$free [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f24a8 (    0x10) DYLD-STUB$$freeifaddrs [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f24b8 (    0x10) DYLD-STUB$$fstat [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f24c8 (    0x10) DYLD-STUB$$geteuid [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f24d8 (    0x10) DYLD-STUB$$getgid [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f24e8 (    0x10) DYLD-STUB$$gethostname [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f24f8 (    0x10) DYLD-STUB$$gethostuuid [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f2508 (    0x10) DYLD-STUB$$getifaddrs [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f2518 (    0x10) DYLD-STUB$$getnameinfo [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f2528 (    0x10) DYLD-STUB$$getpid [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f2538 (    0x10) DYLD-STUB$$getuid [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f2548 (    0x10) DYLD-STUB$$inet_addr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f2558 (    0x10) DYLD-STUB$$inet_ntoa [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f2568 (    0x10) DYLD-STUB$$kill [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f2578 (    0x10) DYLD-STUB$$link [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f2588 (    0x10) DYLD-STUB$$malloc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f2598 (    0x10) DYLD-STUB$$mkstemp [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f25a8 (    0x10) DYLD-STUB$$mmap [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f25b8 (    0x10) DYLD-STUB$$munmap [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f25c8 (    0x10) DYLD-STUB$$objc_alloc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f25d8 (    0x10) DYLD-STUB$$objc_alloc_init [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f25e8 (    0x10) DYLD-STUB$$objc_autorelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f25f8 (    0x10) DYLD-STUB$$objc_autoreleasePoolPop [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f2608 (    0x10) DYLD-STUB$$objc_autoreleasePoolPush [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f2618 (    0x10) DYLD-STUB$$objc_enumerationMutation [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f2628 (    0x10) DYLD-STUB$$objc_opt_class [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f2638 (    0x10) DYLD-STUB$$objc_opt_isKindOfClass [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f2648 (    0x10) DYLD-STUB$$objc_opt_respondsToSelector [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f2658 (    0x10) DYLD-STUB$$objc_release [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f2668 (    0x10) DYLD-STUB$$objc_retain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f2678 (    0x10) DYLD-STUB$$open [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f2688 (    0x10) DYLD-STUB$$read [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f2698 (    0x10) DYLD-STUB$$realloc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f26a8 (    0x10) DYLD-STUB$$realpath$DARWIN_EXTSN [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f26b8 (    0x10) DYLD-STUB$$rename [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f26c8 (    0x10) DYLD-STUB$$select [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f26d8 (    0x10) DYLD-STUB$$sleep [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f26e8 (    0x10) DYLD-STUB$$snprintf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f26f8 (    0x10) DYLD-STUB$$socket [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f2708 (    0x10) DYLD-STUB$$strcmp [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f2718 (    0x10) DYLD-STUB$$strdup [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f2728 (    0x10) DYLD-STUB$$strerror [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f2738 (    0x10) DYLD-STUB$$strlcpy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f2748 (    0x10) DYLD-STUB$$strlen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f2758 (    0x10) DYLD-STUB$$strncmp [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f2768 (    0x10) DYLD-STUB$$strrchr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f2778 (    0x10) DYLD-STUB$$syslog$DARWIN_EXTSN [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f2788 (    0x10) DYLD-STUB$$unlink [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f2798 (    0x10) DYLD-STUB$$usleep [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f27a8 (    0x10) DYLD-STUB$$uuid_generate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f27b8 (    0x10) DYLD-STUB$$uuid_unparse [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f27c8 (    0x10) DYLD-STUB$$uuid_unparse_upper [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f27d8 (    0x10) DYLD-STUB$$vfprintf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f27e8 (    0x10) DYLD-STUB$$vsyslog [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000021b2f27f8 (    0x10) DYLD-STUB$$write [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
            0x000000021b2f2808 (  0x1825) __TEXT __cstring
            0x000000021b2f4030 (    0x18) __TEXT __const
            0x000000021b2f4048 (    0x78) __TEXT __gcc_except_tab
                0x000000021b2f4048 (    0x28) GCC_except_table40 [NameNList, MangledNameNList, NList] 
                0x000000021b2f4070 (    0x14) GCC_except_table43 [NameNList, MangledNameNList, NList] 
                0x000000021b2f4084 (    0x24) GCC_except_table14 [NameNList, MangledNameNList, NList] 
                0x000000021b2f40a8 (    0x18) GCC_except_table18 [NameNList, MangledNameNList, NList] 
            0x000000021b2f40c0 (   0x220) __TEXT __unwind_info
            0x000000021b2f42e0 (   0xc1f) __TEXT __objc_methname
            0x000000021b2f4f00 (  0x1100) __TEXT __objc_stubs
                0x000000021b2f4f00 (    0x20) objc_msgSend$URLByResolvingSymlinksInPath [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f4f20 (    0x20) objc_msgSend$URLHostAllowedCharacterSet [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f4f40 (    0x20) objc_msgSend$UTF8String [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f4f60 (    0x20) objc_msgSend$UUID [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f4f80 (    0x20) objc_msgSend$UUIDString [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f4fa0 (    0x20) objc_msgSend$addEntriesFromDictionary: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f4fc0 (    0x20) objc_msgSend$addMemberRecord:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f4fe0 (    0x20) objc_msgSend$addObject: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5000 (    0x20) objc_msgSend$addObjectsFromArray: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5020 (    0x20) objc_msgSend$allKeys [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5040 (    0x20) objc_msgSend$appendFormat: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5060 (    0x20) objc_msgSend$appendString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5080 (    0x20) objc_msgSend$array [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f50a0 (    0x20) objc_msgSend$arrayWithArray: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f50c0 (    0x20) objc_msgSend$arrayWithCapacity: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f50e0 (    0x20) objc_msgSend$arrayWithObject: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5100 (    0x20) objc_msgSend$arrayWithObjects: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5120 (    0x20) objc_msgSend$arrayWithObjects:count: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5140 (    0x20) objc_msgSend$boolValue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5160 (    0x20) objc_msgSend$caseInsensitiveCompare: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5180 (    0x20) objc_msgSend$changePassword:toPassword:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f51a0 (    0x20) objc_msgSend$code [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f51c0 (    0x20) objc_msgSend$compare: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f51e0 (    0x20) objc_msgSend$componentsJoinedByString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5200 (    0x20) objc_msgSend$componentsSeparatedByCharactersInSet: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5220 (    0x20) objc_msgSend$componentsSeparatedByString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5240 (    0x20) objc_msgSend$configurationItems [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5260 (    0x20) objc_msgSend$containsObject: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5280 (    0x20) objc_msgSend$containsString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f52a0 (    0x20) objc_msgSend$count [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f52c0 (    0x20) objc_msgSend$countByEnumeratingWithState:objects:count: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f52e0 (    0x20) objc_msgSend$createDirectoryAtPath:withIntermediateDirectories:attributes:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5300 (    0x20) objc_msgSend$createRecordWithRecordType:name:attributes:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5320 (    0x20) objc_msgSend$currentHost [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5340 (    0x20) objc_msgSend$customCall:sendData:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5360 (    0x20) objc_msgSend$dataUsingEncoding: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5380 (    0x20) objc_msgSend$dataWithContentsOfFile: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f53a0 (    0x20) objc_msgSend$dataWithPropertyList:format:options:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f53c0 (    0x20) objc_msgSend$defaultManager [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f53e0 (    0x20) objc_msgSend$defaultSession [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5400 (    0x20) objc_msgSend$deleteRecordAndReturnError: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5420 (    0x20) objc_msgSend$description [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5440 (    0x20) objc_msgSend$dictionary [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5460 (    0x20) objc_msgSend$dictionaryWithCapacity: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5480 (    0x20) objc_msgSend$dictionaryWithContentsOfFile: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f54a0 (    0x20) objc_msgSend$dictionaryWithDictionary: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f54c0 (    0x20) objc_msgSend$dictionaryWithObjects:forKeys:count: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f54e0 (    0x20) objc_msgSend$dictionaryWithObjectsAndKeys: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5500 (    0x20) objc_msgSend$domain [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5520 (    0x20) objc_msgSend$enumerateKeysAndObjectsUsingBlock: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5540 (    0x20) objc_msgSend$enumerateObjectsUsingBlock: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5560 (    0x20) objc_msgSend$enumeratorAtPath: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5580 (    0x20) objc_msgSend$enumeratorAtURL:includingPropertiesForKeys:options:errorHandler: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f55a0 (    0x20) objc_msgSend$errorWithDomain:code:userInfo: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f55c0 (    0x20) objc_msgSend$fileExistsAtPath: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f55e0 (    0x20) objc_msgSend$fileHandleForReading [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5600 (    0x20) objc_msgSend$fileHandleForWritingAtPath: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5620 (    0x20) objc_msgSend$fileHandleWithNullDevice [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5640 (    0x20) objc_msgSend$fileURLWithPath:isDirectory: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5660 (    0x20) objc_msgSend$getResourceValue:forKey:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5680 (    0x20) objc_msgSend$hasPrefix: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f56a0 (    0x20) objc_msgSend$hasSuffix: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f56c0 (    0x20) objc_msgSend$hash [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f56e0 (    0x20) objc_msgSend$initWithData:encoding: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5700 (    0x20) objc_msgSend$initWithFileDescriptor: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5720 (    0x20) objc_msgSend$initWithFormat: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5740 (    0x20) objc_msgSend$initWithFormat:arguments: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5760 (    0x20) objc_msgSend$initWithUTF8String: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5780 (    0x20) objc_msgSend$initWithUUIDString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f57a0 (    0x20) objc_msgSend$insertObject:atIndex: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f57c0 (    0x20) objc_msgSend$intValue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f57e0 (    0x20) objc_msgSend$integerValue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5800 (    0x20) objc_msgSend$isEqual: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5820 (    0x20) objc_msgSend$isEqualTo: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5840 (    0x20) objc_msgSend$isEqualToString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5860 (    0x20) objc_msgSend$isSubclassOfClass: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5880 (    0x20) objc_msgSend$launch [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f58a0 (    0x20) objc_msgSend$length [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f58c0 (    0x20) objc_msgSend$moveItemAtPath:toPath:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f58e0 (    0x20) objc_msgSend$name [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5900 (    0x20) objc_msgSend$nextObject [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5920 (    0x20) objc_msgSend$nodeWithSession:name:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5940 (    0x20) objc_msgSend$numberWithBool: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5960 (    0x20) objc_msgSend$numberWithInt: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5980 (    0x20) objc_msgSend$objectAtIndex: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f59a0 (    0x20) objc_msgSend$objectAtIndexedSubscript: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f59c0 (    0x20) objc_msgSend$objectEnumerator [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f59e0 (    0x20) objc_msgSend$objectForKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5a00 (    0x20) objc_msgSend$objectForKeyedSubscript: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5a20 (    0x20) objc_msgSend$pipe [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5a40 (    0x20) objc_msgSend$profilesForUserRecord:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5a60 (    0x20) objc_msgSend$propertyListWithData:options:format:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5a80 (    0x20) objc_msgSend$queryWithNode:forRecordTypes:attribute:matchType:queryValues:returnAttributes:maximumResults:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5aa0 (    0x20) objc_msgSend$rangeOfString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5ac0 (    0x20) objc_msgSend$rangeOfString:options: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5ae0 (    0x20) objc_msgSend$readDataToEndOfFile [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5b00 (    0x20) objc_msgSend$removeItemAtPath:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5b20 (    0x20) objc_msgSend$removeObject: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5b40 (    0x20) objc_msgSend$removeObjectForKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5b60 (    0x20) objc_msgSend$resultsAllowingPartial:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5b80 (    0x20) objc_msgSend$sessionWithOptions:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5ba0 (    0x20) objc_msgSend$set [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5bc0 (    0x20) objc_msgSend$setAccountPolicies:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5be0 (    0x20) objc_msgSend$setArguments: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5c00 (    0x20) objc_msgSend$setAttributes:ofItemAtPath:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5c20 (    0x20) objc_msgSend$setCredentialsWithRecordType:recordName:password:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5c40 (    0x20) objc_msgSend$setLaunchPath: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5c60 (    0x20) objc_msgSend$setObject:atIndexedSubscript: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5c80 (    0x20) objc_msgSend$setObject:forKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5ca0 (    0x20) objc_msgSend$setObject:forKeyedSubscript: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5cc0 (    0x20) objc_msgSend$setStandardError: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5ce0 (    0x20) objc_msgSend$setStandardInput: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5d00 (    0x20) objc_msgSend$setStandardOutput: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5d20 (    0x20) objc_msgSend$setValue:forAttribute:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5d40 (    0x20) objc_msgSend$setValue:forKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5d60 (    0x20) objc_msgSend$setWithArray: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5d80 (    0x20) objc_msgSend$sharedProfileManager [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5da0 (    0x20) objc_msgSend$standardOutput [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5dc0 (    0x20) objc_msgSend$string [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5de0 (    0x20) objc_msgSend$stringByAddingPercentEncodingWithAllowedCharacters: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5e00 (    0x20) objc_msgSend$stringByReplacingOccurrencesOfString:withString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5e20 (    0x20) objc_msgSend$stringWithCString:encoding: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5e40 (    0x20) objc_msgSend$stringWithContentsOfFile:encoding:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5e60 (    0x20) objc_msgSend$stringWithFormat: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5e80 (    0x20) objc_msgSend$stringWithString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5ea0 (    0x20) objc_msgSend$stringWithUTF8String: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5ec0 (    0x20) objc_msgSend$substringFromIndex: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5ee0 (    0x20) objc_msgSend$substringToIndex: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5f00 (    0x20) objc_msgSend$synchronizeAndReturnError: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5f20 (    0x20) objc_msgSend$terminationStatus [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5f40 (    0x20) objc_msgSend$valueForKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5f60 (    0x20) objc_msgSend$valuesForAttribute:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5f80 (    0x20) objc_msgSend$waitUntilExit [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5fa0 (    0x20) objc_msgSend$whitespaceCharacterSet [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5fc0 (    0x20) objc_msgSend$writeToFile:atomically: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000021b2f5fe0 (    0x20) objc_msgSend$writeToFile:atomically:encoding:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
        0x000000022e7e9438 (   0x6c0) __DATA_CONST SEGMENT
            0x000000022e7e9438 (    0xb0) __DATA_CONST __got
            0x000000022e7e94e8 (    0x60) __DATA_CONST __const
                0x000000022e7e94e8 (    0x20) __block_descriptor_32_e27_B24?0"NSURL"8"NSError"16l [PEXT, NameNList, MangledNameNList, NList] 
                0x000000022e7e9508 (    0x20) __block_descriptor_32_e22_v24?0"NSString"8^B16l [PEXT, NameNList, MangledNameNList, NList] 
                0x000000022e7e9528 (    0x20) __block_descriptor_32_e12_v24?08^B16l [PEXT, NameNList, MangledNameNList, NList] 
            0x000000022e7e9548 (     0x8) __DATA_CONST __objc_imageinfo
            0x000000022e7e9550 (   0x440) __DATA_CONST __objc_selrefs
            0x000000022e7e9990 (   0x168) __DATA_CONST __objc_arraydata
                0x000000022e7e9990 (    0x10) _unnamed_array_storage [NameNList, MangledNameNList, NList] 
                0x000000022e7e99a0 (    0x10) _unnamed_array_storage.174 [NameNList, MangledNameNList, NList] 
                0x000000022e7e99b0 (    0x10) _unnamed_array_storage.179 [NameNList, MangledNameNList, NList] 
                0x000000022e7e99c0 (    0x10) _unnamed_array_storage.180 [NameNList, MangledNameNList, NList] 
                0x000000022e7e99d0 (    0x10) _unnamed_array_storage.182 [NameNList, MangledNameNList, NList] 
                0x000000022e7e99e0 (     0x8) _unnamed_array_storage.201 [NameNList, MangledNameNList, NList] 
                0x000000022e7e99e8 (     0x8) _unnamed_array_storage.202 [NameNList, MangledNameNList, NList] 
                0x000000022e7e99f0 (    0x18) _unnamed_array_storage.205 [NameNList, MangledNameNList, NList] 
                0x000000022e7e9a08 (    0x18) _unnamed_array_storage.206 [NameNList, MangledNameNList, NList] 
                0x000000022e7e9a20 (    0x10) _unnamed_array_storage.215 [NameNList, MangledNameNList, NList] 
                0x000000022e7e9a30 (    0x10) _unnamed_array_storage.216 [NameNList, MangledNameNList, NList] 
                0x000000022e7e9a40 (    0x10) _unnamed_array_storage.222 [NameNList, MangledNameNList, NList] 
                0x000000022e7e9a50 (    0x10) _unnamed_array_storage.223 [NameNList, MangledNameNList, NList] 
                0x000000022e7e9a60 (    0x10) _unnamed_array_storage.229 [NameNList, MangledNameNList, NList] 
                0x000000022e7e9a70 (    0x10) _unnamed_array_storage.230 [NameNList, MangledNameNList, NList] 
                0x000000022e7e9a80 (    0x10) _unnamed_array_storage.236 [NameNList, MangledNameNList, NList] 
                0x000000022e7e9a90 (    0x10) _unnamed_array_storage.237 [NameNList, MangledNameNList, NList] 
                0x000000022e7e9aa0 (    0x28) _unnamed_array_storage.240 [NameNList, MangledNameNList, NList] 
                0x000000022e7e9ac8 (    0x10) _unnamed_array_storage.243 [NameNList, MangledNameNList, NList] 
                0x000000022e7e9ad8 (    0x10) _unnamed_array_storage.244 [NameNList, MangledNameNList, NList] 
                0x000000022e7e9ae8 (     0x8) _unnamed_array_storage.280 [NameNList, MangledNameNList, NList] 
                0x000000022e7e9af0 (     0x8) _unnamed_array_storage [NameNList, MangledNameNList, NList] 
        0x0000000238171728 (  0x2858) __AUTH_CONST SEGMENT
            0x0000000238171728 (  0x2020) __AUTH_CONST __cfstring
            0x0000000238173748 (    0x78) __AUTH_CONST __objc_intobj
            0x00000002381737c0 (   0x2e0) __AUTH_CONST __const
                0x00000002381737c0 (    0x30) __block_descriptor_40_e8_32o_e15_v32?0816^B24l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002381737f0 (    0x20) __block_literal_global [NameNList, MangledNameNList, NList] 
                0x0000000238173810 (    0x30) __block_descriptor_48_e8_32r_e15_v32?0816^B24l [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000238173840 (    0x30) __block_descriptor_64_e8_32o40o48r_e15_v32?08Q16^B24l [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000238173870 (    0x30) __block_descriptor_48_e8_32o_e15_v32?08Q16^B24l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002381738a0 (    0x30) __block_descriptor_40_e8_32o_e46_v32?0"NSString"8"NSMutableDictionary"16^B24l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002381738d0 (    0x30) __block_descriptor_56_e8_32o40o48o_e15_v32?08Q16^B24l [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000238173900 (    0x20) __block_literal_global [NameNList, MangledNameNList, NList] 
                0x0000000238173920 (    0x30) __block_descriptor_48_e8_32o40r_e46_v32?0"NSString"8"NSMutableDictionary"16^B24l [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000238173950 (    0x30) __block_descriptor_40_e8_32r_e46_v32?0"NSString"8"NSMutableDictionary"16^B24l [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000238173980 (    0x30) __block_descriptor_80_e8_32o40o48o56o64o72r_e46_v32?0"NSString"8"NSMutableDictionary"16^B24l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002381739b0 (    0x30) __block_descriptor_64_e8_32o40o48r_e22_v24?0"NSString"8^B16l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000002381739e0 (    0x30) __block_descriptor_40_e8_32o_e15_v32?08Q16^B24l [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000238173a10 (    0x20) __block_literal_global.420 [NameNList, MangledNameNList, NList] 
                0x0000000238173a30 (    0x30) __block_descriptor_88_e8_32o40o48o56o64o72o80r_e46_v32?0"NSString"8"NSMutableDictionary"16^B24l [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000238173a60 (    0x20) __block_literal_global.436 [NameNList, MangledNameNList, NList] 
                0x0000000238173a80 (    0x20) __block_literal_global.446 [NameNList, MangledNameNList, NList] 
            0x0000000238173aa0 (   0x168) __AUTH_CONST __objc_dictobj
            0x0000000238173c08 (    0x60) __AUTH_CONST __objc_arrayobj
            0x0000000238173c68 (   0x318) __AUTH_CONST __auth_got
        0x0000000231995bf8 (   0x110) __DATA SEGMENT
            0x0000000231995bf8 (    0xc8) __DATA __objc_classrefs
            0x0000000231995cc0 (    0x40) __DATA __data
                0x0000000231995cc0 (     0x8) kXsanAttributeRevision [PEXT, NameNList, MangledNameNList, NList] 
                0x0000000231995cc8 (     0x8) CFXsanErrorDomain [EXT, NameNList, MangledNameNList, NList] 
                0x0000000231995cd0 (    0x10) rightSet [NameNList, MangledNameNList, NList] 
                0x0000000231995ce0 (    0x20) rights [NameNList, MangledNameNList, NList] 
            0x0000000231995d00 (     0x8) __DATA __bss
                0x0000000231995d00 (     0x8) ourUUID [NameNList, MangledNameNList, NList] 
        0x000000023a910000 (0x37bf0000) __LINKEDIT SEGMENT
