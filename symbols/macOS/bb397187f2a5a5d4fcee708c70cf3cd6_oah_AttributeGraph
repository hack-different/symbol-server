Unable to find file, pid, task or signature matching: -arch=x86_64
WARNING: You currently do not have task_read_for_pid() privileges.
Unable to find file, pid, task or signature matching: -wide
WARNING: You currently do not have task_read_for_pid() privileges.
/System/Library/PrivateFrameworks/AttributeGraph.framework/Versions/A/AttributeGraph [arm64e, 0.027609 seconds]:
    9188CA30-7FE7-37AC-AE5E-32843DBFF9E2 /System/Library/PrivateFrameworks/AttributeGraph.framework/Versions/A/AttributeGraph [DYLIB, DYLDSHAREDCACHE, FaultedFromDiskDyldSharedCache, MMap64]  
        0x00000001acf9d000 ( 0x44000) __TEXT SEGMENT
            0x00000001acf9d000 (  0x19b8) MACH_HEADER
            0x00000001acf9e9b8 ( 0x3a218) __TEXT __text
                0x00000001acf9e9b8 (   0x254) AG::Graph::TraceRecorder::TraceRecorder(AG::Graph const&, unsigned int, std::__1::span<char const*, 18446744073709551615ul>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acf9ec0c (     0x8) AG::(anonymous namespace)::uuid_hash(unsigned char*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acf9ec14 (    0x20) AG::(anonymous namespace)::uuid_equal(unsigned char*, unsigned char*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acf9ec34 (    0x34) util::InlineHeap<256ul>::~InlineHeap() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acf9ec68 (    0x68) AG::vector<std::__1::unique_ptr<char const, util::free_deleter>, 0ul, unsigned long>::~vector() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acf9ecd0 (    0x3c) AG::Encoder::~Encoder() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acf9ed0c (    0xc4) AG::Graph::TraceRecorder::~TraceRecorder() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acf9edd0 (     0xc) __clang_call_terminate [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acf9eddc (     0x4) AG::Graph::TraceRecorder::~TraceRecorder() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acf9ede0 (    0x28) AG::Graph::TraceRecorder::~TraceRecorder() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acf9ee08 (    0xd4) AG::Graph::TraceRecorder::field_timestamp(AG::Encoder&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acf9eedc (   0x3d8) AG::Graph::TraceRecorder::field_backtrace(AG::Encoder&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acf9f2b4 (    0x40) AG::Graph::TraceRecorder::field_backtrace(AG::Encoder&, unsigned long)::$_2::operator()() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acf9f2f4 (   0x154) AG::Graph::TraceRecorder::encode_stack() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acf9f448 (   0x19c) AG::Graph::TraceRecorder::encode_types() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acf9f5e4 (    0xdc) AG::Graph::TraceRecorder::encode_keys() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acf9f6c0 (   0x13c) AG::Graph::TraceRecorder::encode_snapshot() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acf9f7fc (   0x21c) AG::Graph::TraceRecorder::flush_encoder(AG::Encoder&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acf9fa18 (     0x8) non-virtual thunk to AG::Graph::TraceRecorder::flush_encoder(AG::Encoder&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acf9fa20 (    0x68) AG::Graph::TraceRecorder::begin_trace(AG::Graph&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acf9fa88 (    0x74) AG::Graph::TraceRecorder::end_trace(AG::Graph&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acf9fafc (    0x38) AG::Graph::TraceRecorder::sync_trace() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acf9fb34 (   0x120) AG::Graph::TraceRecorder::log_message_v(char const*, char*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acf9fc54 (    0xe0) AG::Graph::TraceRecorder::begin_update(AG::Subgraph&, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acf9fd34 (    0xb0) AG::Graph::TraceRecorder::end_update(AG::Subgraph&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acf9fde4 (    0xdc) AG::Graph::TraceRecorder::begin_update(AG::Graph::UpdateStack&, AG::data::ptr<AG::Node>, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acf9fec0 (    0xdc) AG::Graph::TraceRecorder::end_update(AG::Graph::UpdateStack&, AG::data::ptr<AG::Node>, AG::Graph::UpdateStatus) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acf9ff9c (    0xac) AG::Graph::TraceRecorder::begin_update(AG::data::ptr<AG::Node>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa0048 (    0xd8) AG::Graph::TraceRecorder::end_update(AG::data::ptr<AG::Node>, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa0120 (    0xac) AG::Graph::TraceRecorder::begin_update(AG::Graph::Context&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa01cc (    0xac) AG::Graph::TraceRecorder::end_update(AG::Graph::Context&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa0278 (    0xdc) AG::Graph::TraceRecorder::begin_invalidation(AG::Graph::Context&, AG::AttributeID) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa0354 (    0xdc) AG::Graph::TraceRecorder::end_invalidation(AG::Graph::Context&, AG::AttributeID) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa0430 (    0xac) AG::Graph::TraceRecorder::begin_modify(AG::data::ptr<AG::Node>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa04dc (    0xc0) AG::Graph::TraceRecorder::end_modify(AG::data::ptr<AG::Node>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa059c (    0xd0) AG::Graph::TraceRecorder::begin_event(AG::data::ptr<AG::Node>, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa066c (    0xd0) AG::Graph::TraceRecorder::end_event(AG::data::ptr<AG::Node>, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa073c (    0xb8) AG::Graph::TraceRecorder::created(AG::Graph::Context&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa07f4 (    0xb8) AG::Graph::TraceRecorder::destroy(AG::Graph::Context&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa08ac (    0xa4) AG::Graph::TraceRecorder::needs_update(AG::Graph::Context&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa0950 (    0xdc) AG::Graph::TraceRecorder::created(AG::Subgraph&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa0a2c (    0xe4) AG::Graph::TraceRecorder::invalidate(AG::Subgraph&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa0b10 (    0xbc) AG::Graph::TraceRecorder::destroy(AG::Subgraph&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa0bcc (    0xd0) AG::Graph::TraceRecorder::add_child(AG::Subgraph&, AG::Subgraph&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa0c9c (    0xd0) AG::Graph::TraceRecorder::remove_child(AG::Subgraph&, AG::Subgraph&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa0d6c (   0x128) AG::Graph::TraceRecorder::added(AG::data::ptr<AG::Node>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa0e94 (    0xdc) AG::Graph::TraceRecorder::add_edge(AG::data::ptr<AG::Node>, AG::AttributeID, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa0f70 (    0xf0) AG::Graph::TraceRecorder::remove_edge(AG::data::ptr<AG::Node>, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa1060 (   0x108) AG::Graph::TraceRecorder::set_edge_pending(AG::data::ptr<AG::Node>, unsigned long, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa1168 (    0xd0) AG::Graph::TraceRecorder::set_dirty(AG::data::ptr<AG::Node>, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa1238 (    0xd0) AG::Graph::TraceRecorder::set_pending(AG::data::ptr<AG::Node>, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa1308 (    0xa4) AG::Graph::TraceRecorder::set_value(AG::data::ptr<AG::Node>, void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa13ac (    0xa4) AG::Graph::TraceRecorder::mark_value(AG::data::ptr<AG::Node>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa1450 (    0xf0) AG::Graph::TraceRecorder::added(AG::data::ptr<AG::IndirectNode>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa1540 (   0x110) AG::Graph::TraceRecorder::set_source(AG::data::ptr<AG::IndirectNode>, AG::AttributeID) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa1650 (    0xe8) AG::Graph::TraceRecorder::set_dependency(AG::data::ptr<AG::IndirectNode>, AG::AttributeID) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa1738 (    0xa8) AG::Graph::TraceRecorder::mark_profile(AG::Graph&, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa17e0 (    0xb4) AG::Graph::TraceRecorder::custom_event(AG::Graph::Context&, char const*, void const*, AGSwiftMetadata const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa1894 (   0x1a0) AG::Graph::TraceRecorder::named_event(AG::Graph::Context&, unsigned int, unsigned long, unsigned int const*, __CFData const*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa1a34 (   0x22c) AG::Graph::TraceRecorder::named_event_enabled(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa1c60 (    0xe4) AG::Graph::start_tracing(unsigned int, std::__1::span<char const*, 18446744073709551615ul>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa1d44 (   0x4e4) AG::Graph::prepare_trace(AG::Trace&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa2228 (     0xc) invocation function for block in AG::Graph::start_tracing(unsigned int, std::__1::span<char const*, 18446744073709551615ul>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa2234 (    0x10) invocation function for block in AG::Graph::start_tracing(unsigned int, std::__1::span<char const*, 18446744073709551615ul>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa2244 (    0xf8) AG::Graph::trace_assertion_failure(bool, char const*, ...) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa233c (    0x34) AG::Graph::stop_tracing() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa2370 (    0x6c) AG::Graph::sync_tracing() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa23dc (    0x94) AG::Graph::all_start_tracing(unsigned int, std::__1::span<char const*, 18446744073709551615ul>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa2470 (    0x88) AG::Graph::all_stop_tracing() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa24f8 (    0xc0) AG::Graph::all_sync_tracing() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa25b8 (     0x4) AG::Trace::~Trace() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa25bc (     0x4) AG::Trace::~Trace() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa25c0 (     0x4) AG::Trace::begin_trace(AG::Graph&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa25c4 (     0x4) AG::Trace::end_trace(AG::Graph&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa25c8 (     0x4) AG::Trace::sync_trace() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa25cc (     0x4) AG::Trace::log_message_v(char const*, char*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa25d0 (     0x4) AG::Trace::begin_update(AG::Subgraph&, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa25d4 (     0x4) AG::Trace::end_update(AG::Subgraph&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa25d8 (     0x4) AG::Trace::begin_update(AG::Graph::UpdateStack&, AG::data::ptr<AG::Node>, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa25dc (     0x4) AG::Trace::end_update(AG::Graph::UpdateStack&, AG::data::ptr<AG::Node>, AG::Graph::UpdateStatus) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa25e0 (     0x4) AG::Trace::begin_update(AG::data::ptr<AG::Node>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa25e4 (     0x4) AG::Trace::end_update(AG::data::ptr<AG::Node>, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa25e8 (     0x4) AG::Trace::begin_update(AG::Graph::Context&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa25ec (     0x4) AG::Trace::end_update(AG::Graph::Context&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa25f0 (     0x4) AG::Trace::begin_invalidation(AG::Graph::Context&, AG::AttributeID) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa25f4 (     0x4) AG::Trace::end_invalidation(AG::Graph::Context&, AG::AttributeID) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa25f8 (     0x4) AG::Trace::begin_modify(AG::data::ptr<AG::Node>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa25fc (     0x4) AG::Trace::end_modify(AG::data::ptr<AG::Node>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa2600 (     0x4) AG::Trace::begin_event(AG::data::ptr<AG::Node>, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa2604 (     0x4) AG::Trace::end_event(AG::data::ptr<AG::Node>, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa2608 (     0x4) AG::Trace::created(AG::Graph::Context&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa260c (     0x4) AG::Trace::destroy(AG::Graph::Context&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa2610 (     0x4) AG::Trace::needs_update(AG::Graph::Context&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa2614 (     0x4) AG::Trace::created(AG::Subgraph&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa2618 (     0x4) AG::Trace::invalidate(AG::Subgraph&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa261c (     0x4) AG::Trace::destroy(AG::Subgraph&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa2620 (     0x4) AG::Trace::add_child(AG::Subgraph&, AG::Subgraph&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa2624 (     0x4) AG::Trace::remove_child(AG::Subgraph&, AG::Subgraph&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa2628 (     0x4) AG::Trace::added(AG::data::ptr<AG::Node>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa262c (     0x4) AG::Trace::add_edge(AG::data::ptr<AG::Node>, AG::AttributeID, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa2630 (     0x4) AG::Trace::remove_edge(AG::data::ptr<AG::Node>, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa2634 (     0x4) AG::Trace::set_edge_pending(AG::data::ptr<AG::Node>, unsigned long, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa2638 (     0x4) AG::Trace::set_dirty(AG::data::ptr<AG::Node>, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa263c (     0x4) AG::Trace::set_pending(AG::data::ptr<AG::Node>, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa2640 (     0x4) AG::Trace::set_value(AG::data::ptr<AG::Node>, void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa2644 (     0x4) AG::Trace::mark_value(AG::data::ptr<AG::Node>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa2648 (     0x4) AG::Trace::added(AG::data::ptr<AG::IndirectNode>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa264c (     0x4) AG::Trace::set_source(AG::data::ptr<AG::IndirectNode>, AG::AttributeID) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa2650 (     0x4) AG::Trace::set_dependency(AG::data::ptr<AG::IndirectNode>, AG::AttributeID) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa2654 (     0x4) AG::Trace::mark_profile(AG::Graph&, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa2658 (     0x4) AG::Trace::custom_event(AG::Graph::Context&, char const*, void const*, AGSwiftMetadata const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa265c (     0x4) AG::Trace::named_event(AG::Graph::Context&, unsigned int, unsigned long, unsigned int const*, __CFData const*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa2660 (     0x8) AG::Trace::named_event_enabled(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa2668 (    0x44) AG::vector<std::__1::unique_ptr<char const, util::free_deleter>, 0ul, unsigned long>::reserve_slow(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa26ac (    0x84) void* AG::details::realloc_vector<unsigned long, 8ul>(void*, unsigned long&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa2730 (    0x44) AG::vector<std::__1::pair<unsigned int, bool>, 0ul, unsigned int>::reserve_slow(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa2774 (    0x84) void* AG::details::realloc_vector<unsigned int, 8ul>(void*, unsigned int&, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa27f8 (    0x50) AG::data::table::ensure_shared() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa2848 (   0x110) AG::data::table::table() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa2958 (   0x13c) AG::data::table::grow_region() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa2a94 (    0xd4) AG::data::table::make_pages_reusable(unsigned int, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa2b68 (    0x30) AG::data::table::make_pages_reusable(unsigned int, bool)::$_1::operator()() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa2b98 (   0x2b4) AG::data::table::alloc_page(AG::data::zone&, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa2e4c (    0xd0) AG::data::table::dealloc_page_locked(AG::data::ptr<AG::data::page>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa2f1c (    0xbc) AG::data::table::raw_page_seed(AG::data::ptr<AG::data::page>) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa2fd8 (    0x88) AG::data::zone::clear() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa3060 (   0x168) AG::data::zone::alloc_slow(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa31c8 (    0x98) AG::data::zone::alloc_persistent(unsigned long, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa3260 (    0xf0) AG::data::zone::realloc_bytes(AG::data::ptr<void>&, unsigned int, unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa3350 (    0xe0) AG::data::zone::alloc_bytes_recycle(unsigned int, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa3430 (    0xa0) AG::data::table::print() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa34d0 (   0x12c) AG::data::zone::print() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa35fc (    0x7c) AG::data::zone::print_header() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa3678 (     0xc) AG::data::table::ensure_shared()::$_0::__invoke(void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa3684 (    0x44) AG::vector<std::__1::pair<unsigned char*, unsigned int>, 0ul, unsigned int>::reserve_slow(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa36c8 (    0x84) void* AG::details::realloc_vector<unsigned int, 16ul>(void*, unsigned int&, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa374c (    0x44) AG::vector<unsigned long, 0ul, unsigned int>::reserve_slow(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa3790 (    0x44) AG::vector<std::__1::unique_ptr<void, AG::data::table::malloc_zone_deleter>, 0ul, unsigned int>::reserve_slow(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa37d4 (    0x70) AG::swift::metadata::descriptor() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa3844 (    0x30) AG::swift::metadata::nominal_descriptor() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa3874 (    0xe0) AG::swift::metadata::equatable() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa3954 (    0x50) AG::swift::metadata::equatable() const::$_2::operator()() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa39a4 (   0x560) AG::swift::metadata::visit(AG::swift::metadata_visitor&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa3f04 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001acfa3f14 (   0x274) AG::swift::metadata::mangled_type_name_ref(char const*, bool, AG::swift::metadata::ref_kind*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa4188 (    0xe4) AG::swift::metadata::visit_heap(AG::swift::metadata_visitor&, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa426c (   0x36c) AG::swift::metadata::visit_heap_class(AG::swift::metadata_visitor&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa45d8 (   0x2ac) AG::swift::metadata::visit_heap_locals(AG::swift::metadata_visitor&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa4884 (    0xf4) AG::swift::metadata_visitor::visit_field(AG::swift::metadata const*, AG::swift::field_record const&, unsigned long, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa4978 (     0x4) AG::swift::metadata::name(bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa497c (   0x1b4) AG::swift::metadata::mangled_type_name_ref_cached(char const*, AG::swift::metadata::ref_kind*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa4b30 (    0x98) AG::swift::(anonymous namespace)::TypeCache::TypeCache() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa4bc8 (   0x5c4) AG::swift::metadata::append_description(__CFString*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa518c (   0x434) AG::swift::metadata::signature() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa55c0 (    0x64) AG::swift::(anonymous namespace)::TypeSignatureCache::TypeSignatureCache() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa5624 (   0x100) AG::swift::metadata::copy_on_write_heap_object(void*&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa5724 (    0x50) AG::swift::class_type_descriptor::immediate_members_offset() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa5774 (    0x1c) AG::swift::existential_type_metadata::representation() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa5790 (    0x78) AG::swift::existential_type_metadata::project_value(void const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa5808 (    0x3c) AG::swift::existential_type_metadata::dynamic_type(void const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa5844 (     0x8) AG::swift::metadata_visitor::unknown_result() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa584c (    0x24) AG::swift::metadata_visitor::visit_element(AG::swift::metadata const*, AG::swift::metadata::ref_kind, unsigned long, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa5870 (    0x24) AG::swift::metadata_visitor::visit_case(AG::swift::metadata const*, AG::swift::field_record const&, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa5894 (    0x24) AG::swift::metadata_visitor::visit_class(AG::swift::any_class_type_metadata const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa58b8 (    0x24) AG::swift::metadata_visitor::visit_existential(AG::swift::existential_type_metadata const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa58dc (    0x24) AG::swift::metadata_visitor::visit_function(AG::swift::function_type_metadata const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa5900 (    0x24) AG::swift::metadata_visitor::visit_native_object(AG::swift::metadata const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa5924 (    0x10) AG::swift::(anonymous namespace)::TypeCache::TypeCache()::$_5::__invoke(std::__1::pair<AG::swift::metadata const*, char const*> const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa5934 (    0x2c) AG::swift::(anonymous namespace)::TypeCache::TypeCache()::$_6::__invoke(std::__1::pair<AG::swift::metadata const*, char const*> const*, std::__1::pair<AG::swift::metadata const*, char const*> const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa5960 (    0x48) AG::vector<AG::swift::metadata const*, 8ul, unsigned long>::reserve_slow(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa59a8 (    0xc4) void* AG::details::realloc_vector<unsigned long, 8ul>(void*, void*, unsigned long, unsigned long&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa5a6c (    0x48) AG::vector<void const*, 8ul, unsigned long>::reserve_slow(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa5ab4 (    0x48) AG::vector<dyld_image_uuid_offset, 8ul, unsigned long>::reserve_slow(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa5afc (    0xc4) void* AG::details::realloc_vector<unsigned long, 32ul>(void*, void*, unsigned long, unsigned long&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa5bc0 (    0x48) AG::vector<std::__1::pair<char const*, unsigned long>, 8ul, unsigned long>::reserve_slow(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa5c08 (    0xc4) void* AG::details::realloc_vector<unsigned long, 16ul>(void*, void*, unsigned long, unsigned long&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa5ccc (    0x4c) AGNewTupleType [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa5d18 (    0x1c) AGTupleCount [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa5d34 (    0x18) AGTupleSize [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa5d4c (    0x54) AGTupleElementType [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa5da0 (    0x68) AGTupleElementSize [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa5e08 (    0x58) AGTupleElementOffset [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa5e60 (    0x78) AGTupleElementOffsetChecked [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa5ed8 (    0x8c) AGTupleSetElement [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa5f64 (   0x124) update(void*, void const*, AG::swift::metadata const*, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa6088 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001acfa6098 (    0x88) AGTupleGetElement [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa6120 (    0x54) AGTupleDestroy [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa6174 (    0xf8) AGTupleDestroyElement [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa626c (   0x128) AGTupleWithBuffer [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa6394 (   0x1c4) AG::Graph::mark_changed(AG::data::ptr<AG::Node>, AG::AttributeType const*, void const*, void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa6558 (   0x360) AG::Graph::mark_changed(AG::AttributeID, AG::AttributeType const*, void const*, void const*, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa68b8 (    0x34) util::InlineHeap<8192ul>::~InlineHeap() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa68ec (   0x4a8) AG::Graph::propagate_dirty(AG::AttributeID) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa6d94 (    0x28) AG::Subgraph::add_dirty_flags(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa6dbc (   0x170) AG::Graph::mark_pending(AG::data::ptr<AG::Node>, AG::Node&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa6f2c (   0x428) AG::Graph::update_main_refs(AG::AttributeID) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa7354 (    0x38) AG::Graph::UpdateStack::global_top() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa738c (   0x218) AG::Graph::UpdateStack::push_slow(AG::data::ptr<AG::Node>, AG::Node&, bool, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa75a4 (   0x844) AG::Graph::UpdateStack::update() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa7de8 (    0x50) AG::Graph::passed_deadline() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa7e38 (   0x3bc) AG::Graph::update_attribute(AG::data::ptr<AG::Node>, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa81f4 (    0xc4) AG::Graph::UpdateStack::~UpdateStack() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa82b8 (   0x13c) AG::Graph::with_update(AG::data::ptr<AG::Node>, AG::ClosureFunctionVV<void>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa83f4 (    0xd0) AG::Graph::with_update(AG::data::ptr<AG::Node>, AG::ClosureFunctionVV<void>)::scoped_update::~scoped_update() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa84c4 (    0x68) AG::Graph::reset_update(AG::data::ptr<AG::Node>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa852c (    0xc0) AG::Graph::collect_stack(AG::vector<AG::data::ptr<AG::Node>, 0ul, unsigned long>&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa85ec (    0x98) AG::Graph::is_context_updating(unsigned long) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa8684 (   0x158) AG::Graph::print_stack() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa87dc (    0x64) AG::Graph::update_attribute(AG::data::ptr<AG::Node>, unsigned int)::$_3::__invoke(void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa8840 (    0x48) AG::vector<AG::Graph::UpdateStack::Frame, 8ul, unsigned long>::reserve_slow(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa8888 (    0x48) AG::vector<AG::ConstOutputEdgeArrayRef, 64ul, unsigned long>::reserve_slow(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa88d0 (    0x44) AG::vector<AG::data::ptr<AG::Node>, 0ul, unsigned long>::reserve_slow(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa8914 (    0x84) void* AG::details::realloc_vector<unsigned long, 4ul>(void*, unsigned long&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa8998 (    0x78) AG::Graph::ProfileTrace::begin_update(AG::Graph::UpdateStack&, AG::data::ptr<AG::Node>, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa8a10 (    0xb4) AG::Graph::ProfileTrace::end_update(AG::Graph::UpdateStack&, AG::data::ptr<AG::Node>, AG::Graph::UpdateStatus) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa8ac4 (    0x78) AG::Graph::ProfileTrace::begin_update(AG::data::ptr<AG::Node>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa8b3c (    0xb4) AG::Graph::ProfileTrace::end_update(AG::data::ptr<AG::Node>, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa8bf0 (    0xac) AG::Graph::add_profile_update(AG::data::ptr<AG::Node>, unsigned long long, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa8c9c (   0x14c) AG::Graph::ProfileData::Item::operator+=(AG::Graph::ProfileData::Item const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa8de8 (    0x90) AG::Graph::ProfileData::Item::mark(unsigned int, unsigned long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa8e78 (    0xbc) AG::Graph::ProfileData::Category::add_update(AG::data::ptr<AG::Node>, unsigned long long, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa8f34 (   0x100) AG::Graph::ProfileData::ProfileData(AG::Graph const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa9034 (    0x40) AG::Graph::ProfileData::Category::~Category() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa9074 (    0x74) AG::Graph::ProfileData::Category::mark(unsigned int, unsigned long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa90e8 (   0x100) AG::Graph::ProfileData::remove_node(AG::data::ptr<AG::Node>, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa91e8 (   0x1e0) AG::Graph::start_profiling(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa93c8 (    0x3c) AG::Graph::stop_profiling() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa9404 (    0x14) AG::Graph::reset_profile() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa9418 (    0xe8) AG::Graph::mark_profile(unsigned int, unsigned long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa9500 (    0x7c) AG::Graph::all_start_profiling(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa957c (    0x8c) AG::Graph::all_stop_profiling() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa9608 (    0x6c) AG::Graph::all_reset_profile() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa9674 (    0x9c) AG::Graph::all_mark_profile(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa9710 (    0xcc) AG::Graph::begin_profile_event(AG::data::ptr<AG::Node>, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa97dc (   0x15c) AG::Graph::end_profile_event(AG::data::ptr<AG::Node>, char const*, unsigned long long, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa9938 (     0xc) +[AGAppObserver foreground:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa9944 (     0xc) +[AGAppObserver background:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa9950 (    0x44) AG::Graph::ProfileTrace::~ProfileTrace() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa9994 (    0x54) AG::Graph::ProfileTrace::~ProfileTrace() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa99e8 (    0x3c) std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, AG::Graph::ProfileData::Item>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, AG::Graph::ProfileData::Item>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, AG::Graph::ProfileData::Item>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, AG::Graph::ProfileData::Item>>>::~__hash_table() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa9a24 (    0x44) std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, AG::Graph::ProfileData::Item>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, AG::Graph::ProfileData::Item>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, AG::Graph::ProfileData::Item>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, AG::Graph::ProfileData::Item>>>::__deallocate_node(std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, AG::Graph::ProfileData::Item>, void*>*>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa9a68 (    0x3c) std::__1::__hash_table<std::__1::__hash_value_type<AG::data::ptr<AG::Node>, AG::Graph::ProfileData::Item>, std::__1::__unordered_map_hasher<AG::data::ptr<AG::Node>, std::__1::__hash_value_type<AG::data::ptr<AG::Node>, AG::Graph::ProfileData::Item>, std::__1::hash<AG::data::ptr<AG::Node>>, std::__1::equal_to<AG::data::ptr<AG::Node>>, true>, std::__1::__unordered_map_equal<AG::data::ptr<AG::Node>, std::__1::__hash_value_type<AG::data::ptr<AG::Node>, AG::Graph::ProfileData::Item>, std::__1::equal_to<AG::data::ptr<AG::Node>>, std::__1::hash<AG::data::ptr<AG::Node>>, true>, std::__1::allocator<std::__1::__hash_value_type<AG::data::ptr<AG::Node>, AG::Graph::ProfileData::Item>>>::~__hash_table() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa9aa4 (    0x44) std::__1::__hash_table<std::__1::__hash_value_type<AG::data::ptr<AG::Node>, AG::Graph::ProfileData::Item>, std::__1::__unordered_map_hasher<AG::data::ptr<AG::Node>, std::__1::__hash_value_type<AG::data::ptr<AG::Node>, AG::Graph::ProfileData::Item>, std::__1::hash<AG::data::ptr<AG::Node>>, std::__1::equal_to<AG::data::ptr<AG::Node>>, true>, std::__1::__unordered_map_equal<AG::data::ptr<AG::Node>, std::__1::__hash_value_type<AG::data::ptr<AG::Node>, AG::Graph::ProfileData::Item>, std::__1::equal_to<AG::data::ptr<AG::Node>>, std::__1::hash<AG::data::ptr<AG::Node>>, true>, std::__1::allocator<std::__1::__hash_value_type<AG::data::ptr<AG::Node>, AG::Graph::ProfileData::Item>>>::__deallocate_node(std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<AG::data::ptr<AG::Node>, AG::Graph::ProfileData::Item>, void*>*>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa9ae8 (    0xb4) std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<AG::data::ptr<AG::Node>, AG::Graph::ProfileData::Item>, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<AG::data::ptr<AG::Node>, AG::Graph::ProfileData::Item>, std::__1::__unordered_map_hasher<AG::data::ptr<AG::Node>, std::__1::__hash_value_type<AG::data::ptr<AG::Node>, AG::Graph::ProfileData::Item>, std::__1::hash<AG::data::ptr<AG::Node>>, std::__1::equal_to<AG::data::ptr<AG::Node>>, true>, std::__1::__unordered_map_equal<AG::data::ptr<AG::Node>, std::__1::__hash_value_type<AG::data::ptr<AG::Node>, AG::Graph::ProfileData::Item>, std::__1::equal_to<AG::data::ptr<AG::Node>>, std::__1::hash<AG::data::ptr<AG::Node>>, true>, std::__1::allocator<std::__1::__hash_value_type<AG::data::ptr<AG::Node>, AG::Graph::ProfileData::Item>>>::find<AG::data::ptr<AG::Node>>(AG::data::ptr<AG::Node> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, Functio...
                0x00000001acfa9b9c (   0x25c) std::__1::pair<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, AG::Graph::ProfileData::Item>, void*>*>, bool> std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, AG::Graph::ProfileData::Item>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, AG::Graph::ProfileData::Item>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, AG::Graph::ProfileData::Item>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, AG::Graph::ProfileData::Item>>>::__emplace_unique_key_args<unsigned int, std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned int const&>, std::__1::tuple<>>(unsigned int const&, std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned in...
                0x00000001acfa9df8 (    0x34) std::__throw_bad_array_new_length[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa9e2c (    0xf0) void std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, AG::Graph::ProfileData::Item>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, AG::Graph::ProfileData::Item>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, AG::Graph::ProfileData::Item>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, AG::Graph::ProfileData::Item>>>::__rehash<true>(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfa9f1c (   0x15c) void std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, AG::Graph::ProfileData::Item>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, AG::Graph::ProfileData::Item>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, AG::Graph::ProfileData::Item>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, AG::Graph::ProfileData::Item>>>::__do_rehash<true>(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfaa078 (    0x5c) std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, AG::Graph::ProfileData::Item>, void*>>>::operator()[abi:v160006](std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, AG::Graph::ProfileData::Item>, void*>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfaa0d4 (    0x4c) std::__1::__hash_table<std::__1::__hash_value_type<AG::data::ptr<AG::Node>, AG::Graph::ProfileData::Item>, std::__1::__unordered_map_hasher<AG::data::ptr<AG::Node>, std::__1::__hash_value_type<AG::data::ptr<AG::Node>, AG::Graph::ProfileData::Item>, std::__1::hash<AG::data::ptr<AG::Node>>, std::__1::equal_to<AG::data::ptr<AG::Node>>, true>, std::__1::__unordered_map_equal<AG::data::ptr<AG::Node>, std::__1::__hash_value_type<AG::data::ptr<AG::Node>, AG::Graph::ProfileData::Item>, std::__1::equal_to<AG::data::ptr<AG::Node>>, std::__1::hash<AG::data::ptr<AG::Node>>, true>, std::__1::allocator<std::__1::__hash_value_type<AG::data::ptr<AG::Node>, AG::Graph::ProfileData::Item>>>::erase(std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<AG::data::ptr<AG::Node>, AG::Graph::ProfileData::Item>, void*>*>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfaa120 (   0x134) std::__1::__hash_table<std::__1::__hash_value_type<AG::data::ptr<AG::Node>, AG::Graph::ProfileData::Item>, std::__1::__unordered_map_hasher<AG::data::ptr<AG::Node>, std::__1::__hash_value_type<AG::data::ptr<AG::Node>, AG::Graph::ProfileData::Item>, std::__1::hash<AG::data::ptr<AG::Node>>, std::__1::equal_to<AG::data::ptr<AG::Node>>, true>, std::__1::__unordered_map_equal<AG::data::ptr<AG::Node>, std::__1::__hash_value_type<AG::data::ptr<AG::Node>, AG::Graph::ProfileData::Item>, std::__1::equal_to<AG::data::ptr<AG::Node>>, std::__1::hash<AG::data::ptr<AG::Node>>, true>, std::__1::allocator<std::__1::__hash_value_type<AG::data::ptr<AG::Node>, AG::Graph::ProfileData::Item>>>::remove(std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<AG::data::ptr<AG::Node>, AG::Graph::ProfileData::Item>, void*>*>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfaa254 (    0x5c) std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<AG::data::ptr<AG::Node>, AG::Graph::ProfileData::Item>, void*>>>::operator()[abi:v160006](std::__1::__hash_node<std::__1::__hash_value_type<AG::data::ptr<AG::Node>, AG::Graph::ProfileData::Item>, void*>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfaa2b0 (     0xc) auto AG::Graph::start_profiling(unsigned int)::$_0::__invoke<__CFRunLoopObserver*, unsigned long, void*>(__CFRunLoopObserver*, unsigned long, void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfaa2bc (   0x284) std::__1::pair<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, AG::Graph::ProfileData::Category>, void*>*>, bool> std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, AG::Graph::ProfileData::Category>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, AG::Graph::ProfileData::Category>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, AG::Graph::ProfileData::Category>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, AG::Graph::ProfileData::Category>>>::__emplace_unique_key_args<unsigned int, std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned int const&>, std::__1::tuple<>>(unsigned int const&, std::__1::piecewise_construct_t const&, std::__...
                0x00000001acfaa540 (    0xf0) void std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, AG::Graph::ProfileData::Category>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, AG::Graph::ProfileData::Category>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, AG::Graph::ProfileData::Category>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, AG::Graph::ProfileData::Category>>>::__rehash<true>(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfaa630 (   0x15c) void std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, AG::Graph::ProfileData::Category>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, AG::Graph::ProfileData::Category>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, AG::Graph::ProfileData::Category>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, AG::Graph::ProfileData::Category>>>::__do_rehash<true>(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfaa78c (    0x58) std::__1::unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, AG::Graph::ProfileData::Category>, void*>, std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, AG::Graph::ProfileData::Category>, void*>>>>::reset[abi:v160006](std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, AG::Graph::ProfileData::Category>, void*>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfaa7e4 (    0x54) void std::__1::__destroy_at[abi:v160006]<std::__1::pair<unsigned int const, AG::Graph::ProfileData::Category>, 0>(std::__1::pair<unsigned int const, AG::Graph::ProfileData::Category>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfaa838 (    0x4c) std::__1::__hash_table<std::__1::__hash_value_type<unsigned long, AG::Graph::ProfileTrace::UpdateData>, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, AG::Graph::ProfileTrace::UpdateData>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, AG::Graph::ProfileTrace::UpdateData>, std::__1::equal_to<unsigned long>, std::__1::hash<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, AG::Graph::ProfileTrace::UpdateData>>>::~__hash_table() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfaa884 (   0x218) std::__1::pair<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, AG::Graph::ProfileTrace::UpdateData>, void*>*>, bool> std::__1::__hash_table<std::__1::__hash_value_type<unsigned long, AG::Graph::ProfileTrace::UpdateData>, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, AG::Graph::ProfileTrace::UpdateData>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, AG::Graph::ProfileTrace::UpdateData>, std::__1::equal_to<unsigned long>, std::__1::hash<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, AG::Graph::ProfileTrace::UpdateData>>>::__emplace_unique_key_args<unsigned long, std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned long&&>, std::__1::tuple<>>(unsigned long const&, std::__1::piecewise_con...
                0x00000001acfaaa9c (    0xf0) void std::__1::__hash_table<std::__1::__hash_value_type<unsigned long, AG::Graph::ProfileTrace::UpdateData>, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, AG::Graph::ProfileTrace::UpdateData>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, AG::Graph::ProfileTrace::UpdateData>, std::__1::equal_to<unsigned long>, std::__1::hash<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, AG::Graph::ProfileTrace::UpdateData>>>::__rehash<true>(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfaab8c (   0x15c) void std::__1::__hash_table<std::__1::__hash_value_type<unsigned long, AG::Graph::ProfileTrace::UpdateData>, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, AG::Graph::ProfileTrace::UpdateData>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, AG::Graph::ProfileTrace::UpdateData>, std::__1::equal_to<unsigned long>, std::__1::hash<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, AG::Graph::ProfileTrace::UpdateData>>>::__do_rehash<true>(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfaace8 (    0xb4) std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, AG::Graph::ProfileTrace::UpdateData>, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<unsigned long, AG::Graph::ProfileTrace::UpdateData>, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, AG::Graph::ProfileTrace::UpdateData>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, AG::Graph::ProfileTrace::UpdateData>, std::__1::equal_to<unsigned long>, std::__1::hash<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, AG::Graph::ProfileTrace::UpdateData>>>::find<unsigned long>(unsigned long const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfaad9c (    0x44) std::__1::__hash_table<std::__1::__hash_value_type<unsigned long, AG::Graph::ProfileTrace::UpdateData>, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, AG::Graph::ProfileTrace::UpdateData>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, AG::Graph::ProfileTrace::UpdateData>, std::__1::equal_to<unsigned long>, std::__1::hash<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, AG::Graph::ProfileTrace::UpdateData>>>::erase(std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, AG::Graph::ProfileTrace::UpdateData>, void*>*>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfaade0 (   0x134) std::__1::__hash_table<std::__1::__hash_value_type<unsigned long, AG::Graph::ProfileTrace::UpdateData>, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, AG::Graph::ProfileTrace::UpdateData>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, AG::Graph::ProfileTrace::UpdateData>, std::__1::equal_to<unsigned long>, std::__1::hash<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, AG::Graph::ProfileTrace::UpdateData>>>::remove(std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, AG::Graph::ProfileTrace::UpdateData>, void*>*>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfaaf14 (    0x44) AG::vector<AG::Graph::ProfileData::Mark, 0ul, unsigned long>::reserve_slow(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfaaf58 (    0x94) void* AG::details::realloc_vector<unsigned long, 48ul>(void*, unsigned long&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfaafec (   0x25c) std::__1::pair<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<AG::data::ptr<AG::Node>, AG::Graph::ProfileData::Item>, void*>*>, bool> std::__1::__hash_table<std::__1::__hash_value_type<AG::data::ptr<AG::Node>, AG::Graph::ProfileData::Item>, std::__1::__unordered_map_hasher<AG::data::ptr<AG::Node>, std::__1::__hash_value_type<AG::data::ptr<AG::Node>, AG::Graph::ProfileData::Item>, std::__1::hash<AG::data::ptr<AG::Node>>, std::__1::equal_to<AG::data::ptr<AG::Node>>, true>, std::__1::__unordered_map_equal<AG::data::ptr<AG::Node>, std::__1::__hash_value_type<AG::data::ptr<AG::Node>, AG::Graph::ProfileData::Item>, std::__1::equal_to<AG::data::ptr<AG::Node>>, std::__1::hash<AG::data::ptr<AG::Node>>, true>, std::__1::allocator<std::__1::__hash_value_type<AG::data::ptr<AG::Node>, AG::Graph::ProfileData::Item>>>::__emplace_unique_key_args<AG::data::ptr<AG::Node>, std::__1::piecewise_construct_t const&, std::__1::tup...
                0x00000001acfab248 (    0xf0) void std::__1::__hash_table<std::__1::__hash_value_type<AG::data::ptr<AG::Node>, AG::Graph::ProfileData::Item>, std::__1::__unordered_map_hasher<AG::data::ptr<AG::Node>, std::__1::__hash_value_type<AG::data::ptr<AG::Node>, AG::Graph::ProfileData::Item>, std::__1::hash<AG::data::ptr<AG::Node>>, std::__1::equal_to<AG::data::ptr<AG::Node>>, true>, std::__1::__unordered_map_equal<AG::data::ptr<AG::Node>, std::__1::__hash_value_type<AG::data::ptr<AG::Node>, AG::Graph::ProfileData::Item>, std::__1::equal_to<AG::data::ptr<AG::Node>>, std::__1::hash<AG::data::ptr<AG::Node>>, true>, std::__1::allocator<std::__1::__hash_value_type<AG::data::ptr<AG::Node>, AG::Graph::ProfileData::Item>>>::__rehash<true>(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfab338 (   0x15c) void std::__1::__hash_table<std::__1::__hash_value_type<AG::data::ptr<AG::Node>, AG::Graph::ProfileData::Item>, std::__1::__unordered_map_hasher<AG::data::ptr<AG::Node>, std::__1::__hash_value_type<AG::data::ptr<AG::Node>, AG::Graph::ProfileData::Item>, std::__1::hash<AG::data::ptr<AG::Node>>, std::__1::equal_to<AG::data::ptr<AG::Node>>, true>, std::__1::__unordered_map_equal<AG::data::ptr<AG::Node>, std::__1::__hash_value_type<AG::data::ptr<AG::Node>, AG::Graph::ProfileData::Item>, std::__1::equal_to<AG::data::ptr<AG::Node>>, std::__1::hash<AG::data::ptr<AG::Node>>, true>, std::__1::allocator<std::__1::__hash_value_type<AG::data::ptr<AG::Node>, AG::Graph::ProfileData::Item>>>::__do_rehash<true>(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfab494 (    0x3c) std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, AG::Graph::ProfileData::Category>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, AG::Graph::ProfileData::Category>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, AG::Graph::ProfileData::Category>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, AG::Graph::ProfileData::Category>>>::~__hash_table() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfab4d0 (    0x40) std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, AG::Graph::ProfileData::Category>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, AG::Graph::ProfileData::Category>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, AG::Graph::ProfileData::Category>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, AG::Graph::ProfileData::Category>>>::__deallocate_node(std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, AG::Graph::ProfileData::Category>, void*>*>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfab510 (    0x60) std::__1::default_delete<AG::Graph::ProfileData>::operator()[abi:v160006](AG::Graph::ProfileData*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfab570 (    0x30) AGRetainClosure [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfab5a0 (     0x8) AGReleaseClosure [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfab5a8 (    0xa4) AGTypeGetKind [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfab64c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001acfab65c (    0xa8) AGCompareValues [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfab704 (     0x4) AGPrefetchCompareValues [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfab708 (     0x4) AGOverrideComparisonForTypeDescriptor [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfab70c (    0x48) AGTypeApplyFields [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfab754 (    0xc4) AGTypeApplyFields2 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfab818 (    0xa4) AGTypeGetEnumTag [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfab8bc (    0xac) AGTypeProjectEnumData [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfab968 (    0xac) AGTypeInjectEnumTag [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfaba14 (   0x250) AGTypeApplyEnumData [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfabc64 (   0x25c) AGTypeApplyMutableEnumData [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfabec0 (    0x40) AGTypeDescription [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfabf00 (    0x44) AGTypeGetSignature [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfabf44 (     0x4) AGTypeGetDescriptor [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfabf48 (     0x4) AGTypeNominalDescriptor [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfabf4c (    0x2c) AGTypeNominalDescriptorName [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfabf78 (    0x14) AGMakeUniqueID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfabf8c (     0x8) AGTypeApplyFields::Visitor::unknown_result() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfabf94 (    0x8c) AGTypeApplyFields::Visitor::visit_field(AG::swift::metadata const*, AG::swift::field_record const&, unsigned long, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfac020 (     0xc) AGTypeApplyFields2::Visitor::unknown_result() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfac02c (    0xd4) AGTypeApplyFields2::Visitor::visit_field(AG::swift::metadata const*, AG::swift::field_record const&, unsigned long, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfac100 (    0xd4) AGTypeApplyFields2::Visitor::visit_case(AG::swift::metadata const*, AG::swift::field_record const&, unsigned int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfac1d4 (    0x68) util::UntypedTable::UntypedTable(unsigned long (*)(void const*), bool (*)(void const*, void const*), void (*)(void*), void (*)(void*), util::Heap*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfac23c (    0x34) util::pointer_hash(void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfac270 (     0xc) util::pointer_compare(void const*, void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfac27c (    0xd0) util::UntypedTable::~UntypedTable() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfac34c (    0xdc) util::UntypedTable::lookup(void*, void**) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfac428 (    0x74) util::UntypedTable::for_each(void (*)(void const*, void const*, void const*), void const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfac49c (    0xa0) util::UntypedTable::create_buckets() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfac53c (   0x14c) util::UntypedTable::grow_buckets() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfac688 (   0x16c) util::UntypedTable::insert(void*, void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfac7f4 (    0xb8) util::UntypedTable::remove_ptr(void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfac8ac (    0x30) util::string_hash(void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfac8dc (   0x154) AG::Graph::Context::Context(AG::Graph&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfaca30 (     0x4) AG::Graph::Context::Context(AG::Graph&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfaca34 (   0x208) AG::Graph::Context::~Context() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfacc3c (     0x4) AG::Graph::Context::~Context() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfacc40 (    0x40) AG::Graph::thread_is_updating() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfacc80 (    0x44) AG::Graph::Context::thread_is_updating() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfaccc4 (    0x94) AG::Graph::Context::set_needs_update() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfacd58 (   0x268) AG::Graph::Context::call_update() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfacfc0 (   0x150) AG::Graph::Context::call_invalidation(AG::AttributeID) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfad110 (    0x50) AG::Graph::Context::set_deadline(unsigned long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfad160 (   0x2e4) AG::Graph::Graph() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfad444 (   0x278) AG::Graph::Graph()::$_11::operator()() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfad6bc (    0x30) std::__1::tuple<unsigned int, unsigned int, AG::vector<char const*, 0ul, unsigned long>>::~tuple() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfad6ec (    0x6c) AG::vector<std::__1::unique_ptr<AG::AttributeType, AG::AttributeType::deleter>, 0ul, unsigned int>::~vector() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfad758 (     0x4) AG::Graph::Graph() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfad75c (   0x1c0) AG::Graph::~Graph() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfad91c (     0x4) AG::Graph::~Graph() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfad920 (    0x64) AG::Graph::context_by_id(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfad984 (    0x88) AG::Graph::add_trace(AG::Trace*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfada0c (    0xdc) AG::Graph::remove_trace(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfadae8 (    0x5c) AG::Graph::call_update() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfadb44 (    0x8c) AG::Graph::call_main_handler(void const*, void (*)(void const*)) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfadbd0 (     0x8) AG::Graph::call_main_handler(void const*, void (*)(void const*))::MainTrampoline::thunk(void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfadbd8 (   0x144) AG::Graph::intern_type(AG::swift::metadata const*, AG::ClosureFunctionVP<void*>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfadd1c (    0x9c) AG::Graph::add_input_dependencies(AG::AttributeID, AG::AttributeID) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfaddb8 (    0x88) void AG::Graph::add_output_edge<AG::Node>(AG::data::ptr<AG::Node>, AG::AttributeID) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfade40 (    0x88) void AG::Graph::add_output_edge<AG::MutableIndirectNode>(AG::data::ptr<AG::MutableIndirectNode>, AG::AttributeID) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfadec8 (    0x9c) AG::Graph::remove_input_dependencies(AG::AttributeID, AG::AttributeID) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfadf64 (    0x8c) void AG::Graph::remove_output_edge<AG::Node>(AG::data::ptr<AG::Node>, AG::AttributeID) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfadff0 (    0x68) void AG::Graph::remove_output_edge<AG::MutableIndirectNode>(AG::data::ptr<AG::MutableIndirectNode>, AG::AttributeID) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfae058 (   0x35c) AG::Graph::add_attribute(AG::Subgraph&, unsigned int, void const*, void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfae3b4 (   0x40c) AG::Graph::value_set_internal(AG::data::ptr<AG::Node>, AG::Node&, void const*, AGSwiftMetadata const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfae7c0 (   0x10c) AG::Graph::remove_removed_input(AG::AttributeID, AG::AttributeID) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfae8cc (   0x278) AG::Graph::remove_removed_output(AG::AttributeID, AG::AttributeID, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfaeb44 (   0x144) AG::Graph::remove_input_edge(AG::data::ptr<AG::Node>, AG::Node&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfaec88 (   0x114) AG::Graph::remove_node(AG::data::ptr<AG::Node>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfaed9c (   0x29c) AG::Graph::remove_indirect_node(AG::data::ptr<AG::IndirectNode>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfaf038 (    0x48) AG::Graph::attribute_ref(AG::data::ptr<AG::Node>, void const**) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfaf080 (   0x1ac) AG::Graph::attribute_modify(AG::data::ptr<AG::Node>, AGSwiftMetadata const*, AG::ClosureFunctionPV<void, void*>, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfaf22c (   0x288) AG::Graph::add_indirect_attribute(AG::Subgraph&, AG::AttributeID, unsigned long, std::__1::optional<unsigned long>, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfaf4b4 (   0x208) AG::Graph::indirect_attribute_set(AG::data::ptr<AG::IndirectNode>, AG::AttributeID) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfaf6bc (    0x4c) AG::Graph::indirect_attribute_dependency(AG::data::ptr<AG::IndirectNode>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfaf708 (   0x1c8) AG::Graph::indirect_attribute_set_dependency(AG::data::ptr<AG::IndirectNode>, AG::AttributeID) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfaf8d0 (   0x358) AG::Graph::add_input(AG::data::ptr<AG::Node>, AG::AttributeID, bool, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfafc28 (    0x78) AG::Graph::remove_input(AG::data::ptr<AG::Node>, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfafca0 (    0xb8) AG::Graph::remove_all_inputs(AG::data::ptr<AG::Node>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfafd58 (    0x48) AG::Graph::all_inputs_removed(AG::data::ptr<AG::Node>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfafda0 (   0x10c) AG::Graph::index_of_input_slow(AG::Node&, AG::InputEdge::Comparator) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfafeac (    0x18) AG::Graph::value_exists(AG::data::ptr<AG::Node>) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfafec4 (   0x260) AG::Graph::value_ref(AG::AttributeID, unsigned int, AGSwiftMetadata const*, unsigned char&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb0124 (    0xa4) AG::Graph::value_state(AG::AttributeID) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb01c8 (   0x214) AG::Graph::value_mark_all() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb03dc (   0x26c) AG::Graph::value_mark(AG::data::ptr<AG::Node>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb0648 (    0xe0) AG::Graph::value_set(AG::data::ptr<AG::Node>, AGSwiftMetadata const*, void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb0728 (   0x45c) AG::Graph::input_value_ref_slow(AG::data::ptr<AG::Node>, AG::AttributeID, unsigned int, unsigned int, AGSwiftMetadata const*, unsigned char&, long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb0b84 (    0x74) AG::Graph::index_of_input(AG::Node&, AG::InputEdge::Comparator) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb0bf8 (    0xa4) AG::Graph::any_inputs_changed(AG::data::ptr<AG::Node>, unsigned int const*, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb0c9c (    0xcc) AG::Graph::output_value_ref(AG::data::ptr<AG::Node>, AGSwiftMetadata const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb0d68 (   0x178) AG::Graph::intern_key(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb0ee0 (    0x48) AG::Graph::key_name(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb0f28 (    0x54) AG::Graph::TreeDataElement::sort_nodes() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb0f7c (    0x34) AG::Graph::Graph()::$_10::__invoke(void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb0fb0 (    0x44) AG::vector<char const*, 0ul, unsigned long>::reserve_slow(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb0ff4 (   0x750) void std::__1::__introsort<std::__1::_ClassicAlgPolicy, AG::Graph::index_of_input_slow(AG::Node&, AG::InputEdge::Comparator)::$_7&, AG::InputEdge*>(AG::InputEdge*, AG::InputEdge*, AG::Graph::index_of_input_slow(AG::Node&, AG::InputEdge::Comparator)::$_7&, std::__1::iterator_traits<AG::InputEdge*>::difference_type) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb1744 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001acfb175c (   0x128) unsigned int std::__1::__sort5_wrap_policy[abi:v160006]<std::__1::_ClassicAlgPolicy, AG::Graph::index_of_input_slow(AG::Node&, AG::InputEdge::Comparator)::$_7&, AG::InputEdge*>(AG::InputEdge*, AG::InputEdge*, AG::InputEdge*, AG::InputEdge*, AG::InputEdge*, AG::Graph::index_of_input_slow(AG::Node&, AG::InputEdge::Comparator)::$_7&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb1884 (   0x10c) unsigned int std::__1::__sort3[abi:v160006]<std::__1::_ClassicAlgPolicy, AG::Graph::index_of_input_slow(AG::Node&, AG::InputEdge::Comparator)::$_7&, AG::InputEdge*>(AG::InputEdge*, AG::InputEdge*, AG::InputEdge*, AG::Graph::index_of_input_slow(AG::Node&, AG::InputEdge::Comparator)::$_7&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb1990 (   0x1a8) bool std::__1::__insertion_sort_incomplete<AG::Graph::index_of_input_slow(AG::Node&, AG::InputEdge::Comparator)::$_7&, AG::InputEdge*>(AG::InputEdge*, AG::InputEdge*, AG::Graph::index_of_input_slow(AG::Node&, AG::InputEdge::Comparator)::$_7&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb1b38 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001acfb1b50 (    0xe4) unsigned int std::__1::__sort4[abi:v160006]<std::__1::_ClassicAlgPolicy, AG::Graph::index_of_input_slow(AG::Node&, AG::InputEdge::Comparator)::$_7&, AG::InputEdge*>(AG::InputEdge*, AG::InputEdge*, AG::InputEdge*, AG::InputEdge*, AG::Graph::index_of_input_slow(AG::Node&, AG::InputEdge::Comparator)::$_7&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb1c34 (     0x4) AG::Graph::KeyTable::KeyTable()::'lambda'(char const*)::__invoke(char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb1c38 (    0x20) AG::Graph::KeyTable::KeyTable()::'lambda'(char const*, char const*)::__invoke(char const*, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb1c58 (   0x630) void std::__1::__introsort<std::__1::_ClassicAlgPolicy, AG::Graph::TreeDataElement::sort_nodes()::$_9&, std::__1::pair<AG::data::ptr<AG::Graph::TreeElement>, AG::data::ptr<AG::Node>>*>(std::__1::pair<AG::data::ptr<AG::Graph::TreeElement>, AG::data::ptr<AG::Node>>*, std::__1::pair<AG::data::ptr<AG::Graph::TreeElement>, AG::data::ptr<AG::Node>>*, AG::Graph::TreeDataElement::sort_nodes()::$_9&, std::__1::iterator_traits<std::__1::pair<AG::data::ptr<AG::Graph::TreeElement>, AG::data::ptr<AG::Node>>*>::difference_type) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb2288 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001acfb22a0 (   0x100) unsigned int std::__1::__sort5_wrap_policy[abi:v160006]<std::__1::_ClassicAlgPolicy, AG::Graph::TreeDataElement::sort_nodes()::$_9&, std::__1::pair<AG::data::ptr<AG::Graph::TreeElement>, AG::data::ptr<AG::Node>>*>(std::__1::pair<AG::data::ptr<AG::Graph::TreeElement>, AG::data::ptr<AG::Node>>*, std::__1::pair<AG::data::ptr<AG::Graph::TreeElement>, AG::data::ptr<AG::Node>>*, std::__1::pair<AG::data::ptr<AG::Graph::TreeElement>, AG::data::ptr<AG::Node>>*, std::__1::pair<AG::data::ptr<AG::Graph::TreeElement>, AG::data::ptr<AG::Node>>*, std::__1::pair<AG::data::ptr<AG::Graph::TreeElement>, AG::data::ptr<AG::Node>>*, AG::Graph::TreeDataElement::sort_nodes()::$_9&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb23a0 (    0xd8) unsigned int std::__1::__sort3[abi:v160006]<std::__1::_ClassicAlgPolicy, AG::Graph::TreeDataElement::sort_nodes()::$_9&, std::__1::pair<AG::data::ptr<AG::Graph::TreeElement>, AG::data::ptr<AG::Node>>*>(std::__1::pair<AG::data::ptr<AG::Graph::TreeElement>, AG::data::ptr<AG::Node>>*, std::__1::pair<AG::data::ptr<AG::Graph::TreeElement>, AG::data::ptr<AG::Node>>*, std::__1::pair<AG::data::ptr<AG::Graph::TreeElement>, AG::data::ptr<AG::Node>>*, AG::Graph::TreeDataElement::sort_nodes()::$_9&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb2478 (   0x184) bool std::__1::__insertion_sort_incomplete<AG::Graph::TreeDataElement::sort_nodes()::$_9&, std::__1::pair<AG::data::ptr<AG::Graph::TreeElement>, AG::data::ptr<AG::Node>>*>(std::__1::pair<AG::data::ptr<AG::Graph::TreeElement>, AG::data::ptr<AG::Node>>*, std::__1::pair<AG::data::ptr<AG::Graph::TreeElement>, AG::data::ptr<AG::Node>>*, AG::Graph::TreeDataElement::sort_nodes()::$_9&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb25fc (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001acfb2614 (    0xc4) unsigned int std::__1::__sort4[abi:v160006]<std::__1::_ClassicAlgPolicy, AG::Graph::TreeDataElement::sort_nodes()::$_9&, std::__1::pair<AG::data::ptr<AG::Graph::TreeElement>, AG::data::ptr<AG::Node>>*>(std::__1::pair<AG::data::ptr<AG::Graph::TreeElement>, AG::data::ptr<AG::Node>>*, std::__1::pair<AG::data::ptr<AG::Graph::TreeElement>, AG::data::ptr<AG::Node>>*, std::__1::pair<AG::data::ptr<AG::Graph::TreeElement>, AG::data::ptr<AG::Node>>*, std::__1::pair<AG::data::ptr<AG::Graph::TreeElement>, AG::data::ptr<AG::Node>>*, AG::Graph::TreeDataElement::sort_nodes()::$_9&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb26d8 (    0x44) AG::vector<AG::Graph::Context*, 0ul, unsigned int>::reserve_slow(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb271c (    0x38) std::__1::unique_ptr<AG::AttributeType, AG::AttributeType::deleter>::reset[abi:v160006](AG::AttributeType*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb2754 (    0x40) std::__1::unique_ptr<std::__1::unordered_map<AG::Subgraph*, AG::Graph::TreeDataElement, std::__1::hash<AG::Subgraph*>, std::__1::equal_to<AG::Subgraph*>, std::__1::allocator<std::__1::pair<AG::Subgraph* const, AG::Graph::TreeDataElement>>>, std::__1::default_delete<std::__1::unordered_map<AG::Subgraph*, AG::Graph::TreeDataElement, std::__1::hash<AG::Subgraph*>, std::__1::equal_to<AG::Subgraph*>, std::__1::allocator<std::__1::pair<AG::Subgraph* const, AG::Graph::TreeDataElement>>>>>::reset[abi:v160006](std::__1::unordered_map<AG::Subgraph*, AG::Graph::TreeDataElement, std::__1::hash<AG::Subgraph*>, std::__1::equal_to<AG::Subgraph*>, std::__1::allocator<std::__1::pair<AG::Subgraph* const, AG::Graph::TreeDataElement>>>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb2794 (    0x3c) std::__1::__hash_table<std::__1::__hash_value_type<AG::Subgraph*, AG::Graph::TreeDataElement>, std::__1::__unordered_map_hasher<AG::Subgraph*, std::__1::__hash_value_type<AG::Subgraph*, AG::Graph::TreeDataElement>, std::__1::hash<AG::Subgraph*>, std::__1::equal_to<AG::Subgraph*>, true>, std::__1::__unordered_map_equal<AG::Subgraph*, std::__1::__hash_value_type<AG::Subgraph*, AG::Graph::TreeDataElement>, std::__1::equal_to<AG::Subgraph*>, std::__1::hash<AG::Subgraph*>, true>, std::__1::allocator<std::__1::__hash_value_type<AG::Subgraph*, AG::Graph::TreeDataElement>>>::~__hash_table() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb27d0 (    0x44) std::__1::__hash_table<std::__1::__hash_value_type<AG::Subgraph*, AG::Graph::TreeDataElement>, std::__1::__unordered_map_hasher<AG::Subgraph*, std::__1::__hash_value_type<AG::Subgraph*, AG::Graph::TreeDataElement>, std::__1::hash<AG::Subgraph*>, std::__1::equal_to<AG::Subgraph*>, true>, std::__1::__unordered_map_equal<AG::Subgraph*, std::__1::__hash_value_type<AG::Subgraph*, AG::Graph::TreeDataElement>, std::__1::equal_to<AG::Subgraph*>, std::__1::hash<AG::Subgraph*>, true>, std::__1::allocator<std::__1::__hash_value_type<AG::Subgraph*, AG::Graph::TreeDataElement>>>::__deallocate_node(std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<AG::Subgraph*, AG::Graph::TreeDataElement>, void*>*>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb2814 (    0x44) AG::vector<std::__1::unique_ptr<AG::AttributeType, AG::AttributeType::deleter>, 0ul, unsigned int>::reserve_slow(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb2858 (    0x44) AG::vector<AG::Trace*, 0ul, unsigned int>::reserve_slow(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb289c (    0x88) AG::data::vector<AG::OutputEdge>::reserve_slow(AG::data::zone&, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb2924 (    0x48) AG::vector<AG::AttributeID, 8ul, unsigned long>::reserve_slow(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb296c (    0xc4) void* AG::details::realloc_vector<unsigned long, 4ul>(void*, void*, unsigned long, unsigned long&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb2a30 (    0x88) AG::data::vector<AG::InputEdge>::reserve_slow(AG::data::zone&, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb2ab8 (    0x8c) std::__1::default_delete<AG::Graph::KeyTable>::operator()[abi:v160006](AG::Graph::KeyTable*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb2b44 (    0x44) AG::vector<std::__1::unique_ptr<char const, util::free_deleter>, 0ul, unsigned int>::reserve_slow(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb2b88 (    0x80) AG::DebugServer::start(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb2c08 (    0x34) AG::DebugServer::stop() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb2c3c (   0x33c) AG::DebugServer::DebugServer(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb2f78 (    0x5c) AG::DebugServer::shutdown() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb2fd4 (    0xfc) AG::DebugServer::accept_handler(void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb30d0 (    0x68) AG::vector<std::__1::unique_ptr<AG::DebugServer::Connection, std::__1::default_delete<AG::DebugServer::Connection>>, 0ul, unsigned long>::~vector() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb3138 (    0x30) util::objc_ptr<NSObject<OS_dispatch_source>*>::~objc_ptr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb3168 (    0x7c) AG::DebugServer::~DebugServer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb31e4 (    0xdc) AG::DebugServer::copy_url() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb32c0 (   0x240) AG::DebugServer::run(int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb3500 (   0x178) AG::DebugServer::Connection::handler(void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb3678 (    0x54) AG::DebugServer::close_connection(AG::DebugServer::Connection*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb36cc (   0x430) AG::DebugServer::receive(AG::DebugServer::Connection*, AGDebugServerMessageHeader&, __CFData*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb3afc (    0xa8) AG::DebugServer::Connection::Connection(AG::DebugServer*, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb3ba4 (    0x54) AG::DebugServer::Connection::~Connection() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb3bf8 (    0xc8) AG::(anonymous namespace)::blocking_read(int, void*, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb3cc0 (    0xc8) AG::(anonymous namespace)::blocking_write(int, void const*, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb3d88 (    0x34) util::cf_ptr<__CFData const*>::~cf_ptr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb3dbc (    0x34) util::cf_ptr<__CFData*>::~cf_ptr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb3df0 (    0x40) std::__1::unique_ptr<AG::DebugServer::Connection, std::__1::default_delete<AG::DebugServer::Connection>>::reset[abi:v160006](AG::DebugServer::Connection*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb3e30 (    0x44) AG::vector<std::__1::unique_ptr<AG::DebugServer::Connection, std::__1::default_delete<AG::DebugServer::Connection>>, 0ul, unsigned long>::reserve_slow(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb3e74 (    0x84) AG::Encoder::Encoder(AG::Encoder::Delegate*, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb3ef8 (     0x4) AG::Encoder::Encoder(AG::Encoder::Delegate*, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb3efc (    0x5c) AG::Encoder::flush() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb3f58 (    0xdc) AG::Encoder::encode_varint(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb4034 (    0x64) AG::Encoder::encode_fixed64(unsigned long long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb4098 (    0xa8) AG::Encoder::encode_data(void const*, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb4140 (    0x88) AG::Encoder::begin_length_delimited() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb41c8 (   0x158) AG::Encoder::end_length_delimited() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb4320 (    0x44) AG::vector<unsigned char, 0ul, unsigned long>::reserve_slow(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb4364 (    0x84) void* AG::details::realloc_vector<unsigned long, 1ul>(void*, unsigned long&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb43e8 (    0x44) AG::vector<unsigned long, 0ul, unsigned long>::reserve_slow(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb442c (    0xdc) AG::Graph::invalidate_subgraphs() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb4508 (    0x6c) AG::Subgraph::cache_collect() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb4574 (   0x638) AG::Subgraph::invalidate_now(AG::Graph&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb4bac (    0x10) AG::Subgraph::make_current_subgraph_key() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb4bbc (   0x294) AG::Subgraph::Subgraph(AG::SubgraphObject*, AG::Graph::Context&, AG::AttributeID) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb4e50 (   0x218) AG::Subgraph::print(int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb5068 (    0x48) AG::indirect_pointer_vector<AG::Subgraph, unsigned long>::~indirect_pointer_vector() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb50b0 (    0x74) AG::data::zone::~zone() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb5124 (     0x8) AG::Subgraph::Subgraph(AG::SubgraphObject*, AG::Graph::Context&, AG::AttributeID) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb512c (   0x16c) AG::Subgraph::graph_destroyed() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb5298 (    0x74) AG::Subgraph::notify_observers() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb530c (    0x48) AG::indirect_pointer_vector<AG::Subgraph, unsigned long>::clear() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb5354 (   0x100) AG::Subgraph::add_observer(AG::ClosureFunctionVV<void>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb5454 (    0xb0) AG::Subgraph::remove_observer(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb5504 (   0x1a4) AG::Subgraph::invalidate_and_delete_(bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb56a8 (   0x15c) AG::Subgraph::remove_child(AG::Subgraph&, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb5804 (   0x154) AG::Graph::remove_subgraph(AG::Subgraph&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb5958 (    0xb4) AG::indirect_pointer_vector<AG::Subgraph, unsigned long>::resize(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb5a0c (   0x150) AG::Subgraph::insert_attribute(AG::AttributeID, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb5b5c (    0xd0) AG::Subgraph::unlink_attribute(AG::AttributeID) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb5c2c (   0x15c) AG::Subgraph::add_node(AG::data::ptr<AG::Node>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb5d88 (    0x98) AG::Subgraph::add_indirect(AG::data::ptr<AG::IndirectNode>, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb5e20 (    0xb4) void AG::Subgraph::foreach_ancestor<AG::Subgraph::propagate_flags()::$_12>(AG::Subgraph::propagate_flags()::$_12 const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb5ed4 (    0x34) AG::Subgraph::propagate_dirty_flags() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb5f08 (    0xa0) void AG::Subgraph::foreach_ancestor<AG::Subgraph::propagate_dirty_flags()::$_13>(AG::Subgraph::propagate_dirty_flags()::$_13 const&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb5fa8 (    0xec) AG::Subgraph::set_flags(AG::data::ptr<AG::Node>, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb6094 (   0x1e0) AG::Subgraph::add_child(AG::Subgraph&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb6274 (    0xa8) AG::indirect_pointer_vector<AG::Subgraph, unsigned long>::push_back(AG::Subgraph*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb631c (   0x15c) AG::Subgraph::ancestor_of(AG::Subgraph const*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb6478 (    0x60) std::__1::stack<AG::Subgraph const*, AG::vector<AG::Subgraph const*, 32ul, unsigned long>>::push[abi:v160006](AG::Subgraph const* const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb64d8 (   0x5cc) AG::Subgraph::update(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb6aa4 (    0x64) decltype(auto) std::__1::stack<util::cf_ptr<AGSubgraphStorage*>, AG::vector<util::cf_ptr<AGSubgraphStorage*>, 32ul, unsigned long>>::emplace[abi:v160006]<util::cf_ptr<AGSubgraphStorage*>>(util::cf_ptr<AGSubgraphStorage*>&&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb6b08 (    0x34) util::cf_ptr<AGSubgraphStorage*>::~cf_ptr() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb6b3c (    0x38) std::__1::stack<util::cf_ptr<AGSubgraphStorage*>, AG::vector<util::cf_ptr<AGSubgraphStorage*>, 32ul, unsigned long>>::pop[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb6b74 (    0x70) std::__1::stack<util::cf_ptr<AGSubgraphStorage*>, AG::vector<util::cf_ptr<AGSubgraphStorage*>, 32ul, unsigned long>>::~stack() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb6be4 (   0x2a4) AG::Subgraph::apply(unsigned int, AG::ClosureFunctionAV<void, unsigned int>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb6e88 (    0x60) std::__1::stack<AG::Subgraph const*, AG::vector<AG::Subgraph const*, 32ul, unsigned long>>::push[abi:v160006](AG::Subgraph const*&&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb6ee8 (    0x40) AG::Graph::without_invalidating::~without_invalidating() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb6f28 (    0xec) AG::Subgraph::NodeCache::NodeCache() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb7014 (    0x34) util::Heap::~Heap() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb7048 (    0x7c) AG::Subgraph::NodeCache::~NodeCache() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb70c4 (   0x328) AG::Subgraph::cache_fetch(unsigned long, AG::swift::metadata const*, void const*, AG::ClosureFunctionCI<unsigned long, AGUnownedGraphContext*>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb73ec (   0x118) AG::Subgraph::cache_insert(AG::data::ptr<AG::Node>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb7504 (    0x44) AG::Subgraph::set_tree_owner(AG::AttributeID) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb7548 (    0xc8) AG::Subgraph::begin_tree(AG::AttributeID, AG::swift::metadata const*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb7610 (    0xc8) AG::Subgraph::add_tree_value(AG::AttributeID, AG::swift::metadata const*, char const*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb76d8 (    0x28) AG::Subgraph::end_tree(AG::AttributeID) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb7700 (   0x288) AG::Subgraph::tree_subgraph_child(AG::data::ptr<AG::Graph::TreeElement>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb7988 (    0xd4) AG::Subgraph::tree_node_at_index(AG::data::ptr<AG::Graph::TreeElement>, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb7a5c (    0xec) AG::Subgraph::~Subgraph() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb7b48 (   0x2fc) AG::Subgraph::encode(AG::Encoder&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb7e44 (    0x38) std::__1::unique_ptr<void, AG::data::table::malloc_zone_deleter>::reset[abi:v160006](void*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb7e7c (    0x44) AG::vector<AG::Subgraph*, 0ul, unsigned int>::reserve_slow(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb7ec0 (    0x60) std::__1::stack<AG::Subgraph*, AG::vector<AG::Subgraph*, 16ul, unsigned long>>::push[abi:v160006](AG::Subgraph* const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb7f20 (    0x4c) std::__1::__hash_table<std::__1::__hash_value_type<AG::Subgraph*, AG::Graph::TreeDataElement>, std::__1::__unordered_map_hasher<AG::Subgraph*, std::__1::__hash_value_type<AG::Subgraph*, AG::Graph::TreeDataElement>, std::__1::hash<AG::Subgraph*>, std::__1::equal_to<AG::Subgraph*>, true>, std::__1::__unordered_map_equal<AG::Subgraph*, std::__1::__hash_value_type<AG::Subgraph*, AG::Graph::TreeDataElement>, std::__1::equal_to<AG::Subgraph*>, std::__1::hash<AG::Subgraph*>, true>, std::__1::allocator<std::__1::__hash_value_type<AG::Subgraph*, AG::Graph::TreeDataElement>>>::erase(std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<AG::Subgraph*, AG::Graph::TreeDataElement>, void*>*>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb7f6c (   0x134) std::__1::__hash_table<std::__1::__hash_value_type<AG::Subgraph*, AG::Graph::TreeDataElement>, std::__1::__unordered_map_hasher<AG::Subgraph*, std::__1::__hash_value_type<AG::Subgraph*, AG::Graph::TreeDataElement>, std::__1::hash<AG::Subgraph*>, std::__1::equal_to<AG::Subgraph*>, true>, std::__1::__unordered_map_equal<AG::Subgraph*, std::__1::__hash_value_type<AG::Subgraph*, AG::Graph::TreeDataElement>, std::__1::equal_to<AG::Subgraph*>, std::__1::hash<AG::Subgraph*>, true>, std::__1::allocator<std::__1::__hash_value_type<AG::Subgraph*, AG::Graph::TreeDataElement>>>::remove(std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<AG::Subgraph*, AG::Graph::TreeDataElement>, void*>*>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb80a0 (    0x5c) std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<AG::Subgraph*, AG::Graph::TreeDataElement>, void*>>>::operator()[abi:v160006](std::__1::__hash_node<std::__1::__hash_value_type<AG::Subgraph*, AG::Graph::TreeDataElement>, void*>*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb80fc (    0x48) AG::vector<util::cf_ptr<AGSubgraphStorage*>, 32ul, unsigned long>::reserve_slow(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb8144 (     0xc) AG::Subgraph::NodeCache::NodeCache()::$_16::__invoke(AG::Subgraph::NodeCache::Item const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb8150 (   0x108) AG::Subgraph::NodeCache::NodeCache()::$_17::__invoke(AG::Subgraph::NodeCache::Item const*, AG::Subgraph::NodeCache::Item const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb8258 (   0x5ec) void std::__1::__introsort<std::__1::_ClassicAlgPolicy, AG::Subgraph::tree_subgraph_child(AG::data::ptr<AG::Graph::TreeElement>)::$_2&, AG::Subgraph**>(AG::Subgraph**, AG::Subgraph**, AG::Subgraph::tree_subgraph_child(AG::data::ptr<AG::Graph::TreeElement>)::$_2&, std::__1::iterator_traits<AG::Subgraph**>::difference_type) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb8844 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001acfb885c (    0xe0) unsigned int std::__1::__sort5_wrap_policy[abi:v160006]<std::__1::_ClassicAlgPolicy, AG::Subgraph::tree_subgraph_child(AG::data::ptr<AG::Graph::TreeElement>)::$_2&, AG::Subgraph**>(AG::Subgraph**, AG::Subgraph**, AG::Subgraph**, AG::Subgraph**, AG::Subgraph**, AG::Subgraph::tree_subgraph_child(AG::data::ptr<AG::Graph::TreeElement>)::$_2&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb893c (    0xa0) unsigned int std::__1::__sort3[abi:v160006]<std::__1::_ClassicAlgPolicy, AG::Subgraph::tree_subgraph_child(AG::data::ptr<AG::Graph::TreeElement>)::$_2&, AG::Subgraph**>(AG::Subgraph**, AG::Subgraph**, AG::Subgraph**, AG::Subgraph::tree_subgraph_child(AG::data::ptr<AG::Graph::TreeElement>)::$_2&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb89dc (   0x17c) bool std::__1::__insertion_sort_incomplete<AG::Subgraph::tree_subgraph_child(AG::data::ptr<AG::Graph::TreeElement>)::$_2&, AG::Subgraph**>(AG::Subgraph**, AG::Subgraph**, AG::Subgraph::tree_subgraph_child(AG::data::ptr<AG::Graph::TreeElement>)::$_2&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb8b58 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001acfb8b70 (    0xac) unsigned int std::__1::__sort4[abi:v160006]<std::__1::_ClassicAlgPolicy, AG::Subgraph::tree_subgraph_child(AG::data::ptr<AG::Graph::TreeElement>)::$_2&, AG::Subgraph**>(AG::Subgraph**, AG::Subgraph**, AG::Subgraph**, AG::Subgraph**, AG::Subgraph::tree_subgraph_child(AG::data::ptr<AG::Graph::TreeElement>)::$_2&) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb8c1c (    0xec) std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<AG::Subgraph*, AG::Graph::TreeDataElement>, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<AG::Subgraph*, AG::Graph::TreeDataElement>, std::__1::__unordered_map_hasher<AG::Subgraph*, std::__1::__hash_value_type<AG::Subgraph*, AG::Graph::TreeDataElement>, std::__1::hash<AG::Subgraph*>, std::__1::equal_to<AG::Subgraph*>, true>, std::__1::__unordered_map_equal<AG::Subgraph*, std::__1::__hash_value_type<AG::Subgraph*, AG::Graph::TreeDataElement>, std::__1::equal_to<AG::Subgraph*>, std::__1::hash<AG::Subgraph*>, true>, std::__1::allocator<std::__1::__hash_value_type<AG::Subgraph*, AG::Graph::TreeDataElement>>>::find<AG::Subgraph*>(AG::Subgraph* const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb8d08 (    0x44) AG::vector<std::__1::pair<AG::ClosureFunctionVV<void>, unsigned long>, 0ul, unsigned long>::reserve_slow(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb8d4c (    0x94) void* AG::details::realloc_vector<unsigned long, 24ul>(void*, unsigned long&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb8de0 (    0x48) AG::vector<AG::Subgraph*, 2ul, unsigned int>::reserve_slow(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb8e28 (    0xc4) void* AG::details::realloc_vector<unsigned int, 8ul>(void*, void*, unsigned int, unsigned int&, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb8eec (    0x48) AG::vector<AG::Subgraph*, 16ul, unsigned long>::reserve_slow(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb8f34 (    0x48) AG::vector<AG::Subgraph*, 4ul, unsigned long>::reserve_slow(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb8f7c (   0x288) std::__1::pair<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<AG::Subgraph*, AG::Graph::TreeDataElement>, void*>*>, bool> std::__1::__hash_table<std::__1::__hash_value_type<AG::Subgraph*, AG::Graph::TreeDataElement>, std::__1::__unordered_map_hasher<AG::Subgraph*, std::__1::__hash_value_type<AG::Subgraph*, AG::Graph::TreeDataElement>, std::__1::hash<AG::Subgraph*>, std::__1::equal_to<AG::Subgraph*>, true>, std::__1::__unordered_map_equal<AG::Subgraph*, std::__1::__hash_value_type<AG::Subgraph*, AG::Graph::TreeDataElement>, std::__1::equal_to<AG::Subgraph*>, std::__1::hash<AG::Subgraph*>, true>, std::__1::allocator<std::__1::__hash_value_type<AG::Subgraph*, AG::Graph::TreeDataElement>>>::__emplace_unique_key_args<AG::Subgraph*, std::__1::piecewise_construct_t const&, std::__1::tuple<AG::Subgraph*&&>, std::__1::tuple<>>(AG::Subgraph* const&, std::__1::piecewise_construct_t const&, std::__1::tuple<AG::Subgraph...
                0x00000001acfb9204 (    0xf0) void std::__1::__hash_table<std::__1::__hash_value_type<AG::Subgraph*, AG::Graph::TreeDataElement>, std::__1::__unordered_map_hasher<AG::Subgraph*, std::__1::__hash_value_type<AG::Subgraph*, AG::Graph::TreeDataElement>, std::__1::hash<AG::Subgraph*>, std::__1::equal_to<AG::Subgraph*>, true>, std::__1::__unordered_map_equal<AG::Subgraph*, std::__1::__hash_value_type<AG::Subgraph*, AG::Graph::TreeDataElement>, std::__1::equal_to<AG::Subgraph*>, std::__1::hash<AG::Subgraph*>, true>, std::__1::allocator<std::__1::__hash_value_type<AG::Subgraph*, AG::Graph::TreeDataElement>>>::__rehash<true>(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb92f4 (   0x15c) void std::__1::__hash_table<std::__1::__hash_value_type<AG::Subgraph*, AG::Graph::TreeDataElement>, std::__1::__unordered_map_hasher<AG::Subgraph*, std::__1::__hash_value_type<AG::Subgraph*, AG::Graph::TreeDataElement>, std::__1::hash<AG::Subgraph*>, std::__1::equal_to<AG::Subgraph*>, true>, std::__1::__unordered_map_equal<AG::Subgraph*, std::__1::__hash_value_type<AG::Subgraph*, AG::Graph::TreeDataElement>, std::__1::equal_to<AG::Subgraph*>, std::__1::hash<AG::Subgraph*>, true>, std::__1::allocator<std::__1::__hash_value_type<AG::Subgraph*, AG::Graph::TreeDataElement>>>::__do_rehash<true>(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb9450 (    0x44) AG::vector<std::__1::pair<AG::data::ptr<AG::Graph::TreeElement>, AG::data::ptr<AG::Node>>, 0ul, unsigned long>::reserve_slow(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb9494 (    0x48) AG::vector<AG::Subgraph const*, 32ul, unsigned long>::reserve_slow(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb94dc (    0x48) AG::vector<AG::data::ptr<AG::Node>, 256ul, unsigned long>::reserve_slow(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb9524 (    0x10) void util::Table<AG::data::ptr<AG::Node>, AG::Subgraph::NodeCache::Item*>::for_each<AG::Subgraph::NodeCache::~NodeCache()::$_18>(AG::Subgraph::NodeCache::~NodeCache()::$_18 const&) const::'lambda'(void const*, void const*, void const*)::__invoke(void const*, void const*, void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb9534 (    0xc8) void util::Table<AG::swift::metadata const*, AG::data::ptr<AG::Subgraph::NodeCache::Type>>::for_each<AG::Subgraph::cache_collect()::$_19>(AG::Subgraph::cache_collect()::$_19 const&) const::'lambda'(void const*, void const*, void const*)::__invoke(void const*, void const*, void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb95fc (    0x48) AG::vector<AG::Subgraph*, 32ul, unsigned long>::reserve_slow(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb9644 (   0x220) AG::LayoutDescriptor::find_partial(unsigned char const*, unsigned long, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb9864 (    0x5c) (null) [FUNC, FunctionStarts] 
                0x00000001acfb98c0 (    0x5c) (null) [FUNC, FunctionStarts] 
                0x00000001acfb991c (   0x2dc) AG::LayoutDescriptor::compare_indirect(AG::ValueLayout&, AG::swift::metadata const*, AG::swift::metadata const*, unsigned int, unsigned char const*, unsigned char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb9bf8 (   0x12c) AG::LayoutDescriptor::compare_existential_values(AG::swift::existential_type_metadata const*, unsigned char const*, unsigned char const*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb9d24 (    0xf8) AG::LayoutDescriptor::Compare::Enum::Enum(AG::swift::metadata const*, AG::LayoutDescriptor::Compare::Enum::Mode, unsigned int, unsigned long, unsigned char const*, unsigned char const*, unsigned char*, unsigned char*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb9e1c (   0x100) AG::LayoutDescriptor::Compare::Enum::~Enum() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfb9f1c (   0x708) AG::LayoutDescriptor::Compare::operator()(unsigned char const*, unsigned char const*, unsigned char const*, unsigned long, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfba624 (    0x5c) (null) [FUNC, FunctionStarts] 
                0x00000001acfba680 (    0x5c) (null) [FUNC, FunctionStarts] 
                0x00000001acfba6dc (    0x6c) AG::compare_bytes(void const*, void const*, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfba748 (   0x118) AG::LayoutDescriptor::compare_heap_objects(void const*, void const*, unsigned int, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfba860 (    0x5c) AG::LayoutDescriptor::Compare::Frame::~Frame() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfba8bc (    0xf4) AG::LayoutDescriptor::compare(unsigned char const*, unsigned char const*, unsigned char const*, unsigned long, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfba9b0 (    0x64) AG::LayoutDescriptor::Compare::~Compare() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfbaa14 (    0xe8) AG::LayoutDescriptor::compare_partial(unsigned char const*, unsigned char const*, unsigned char const*, unsigned long, unsigned long, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfbaafc (    0xb0) AG::LayoutDescriptor::length(unsigned char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfbabac (    0x5c) (null) [FUNC, FunctionStarts] 
                0x00000001acfbac08 (   0x420) AG::LayoutDescriptor::print(unsigned char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfbb028 (    0x5c) (null) [FUNC, FunctionStarts] 
                0x00000001acfbb084 (    0x38) AG::LayoutDescriptor::print(unsigned char const*)::$_5::operator()(char const*, ...) const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfbb0bc (    0xc8) AG::LayoutDescriptor::Builder::add_field(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfbb184 (   0x19c) AG::LayoutDescriptor::Builder::visit_element(AG::swift::metadata const*, AG::swift::metadata::ref_kind, unsigned long, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfbb320 (   0x1e0) AG::LayoutDescriptor::Builder::should_visit_fields(AG::swift::metadata const*, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfbb500 (    0xbc) AG::LayoutDescriptor::Builder::revert(std::__1::pair<unsigned long, AG::LayoutDescriptor::Builder::DataItem>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfbb5bc (   0x434) AG::LayoutDescriptor::Builder::visit_case(AG::swift::metadata const*, AG::swift::field_record const&, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfbb9f0 (    0xa8) AG::LayoutDescriptor::Builder::EnumItem::~EnumItem() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfbba98 (    0xd0) AG::LayoutDescriptor::Builder::visit_existential(AG::swift::existential_type_metadata const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfbbb68 (    0xc8) AG::LayoutDescriptor::Builder::visit_function(AG::swift::function_type_metadata const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfbbc30 (    0x9c) AG::LayoutDescriptor::Builder::visit_native_object(AG::swift::metadata const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfbbccc (   0x374) AG::LayoutDescriptor::Builder::commit(AG::swift::metadata const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfbc040 (    0x30) AG::LayoutDescriptor::Builder::commit(AG::swift::metadata const*)::$_6::operator()() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfbc070 (   0x2d8) AG::LayoutDescriptor::make_layout(AG::swift::metadata const*, AGComparisonMode, AG::LayoutDescriptor::HeapMode) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfbc348 (    0xd8) AG::LayoutDescriptor::mode_for_type(AG::swift::metadata const*, AGComparisonMode) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfbc420 (    0x74) AG::LayoutDescriptor::Builder::~Builder() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfbc494 (    0x8c) AG::LayoutDescriptor::fetch(AG::swift::metadata const*, unsigned int, int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfbc520 (   0x1f8) AG::(anonymous namespace)::TypeDescriptorCache::fetch(AG::swift::metadata const*, unsigned int, AG::LayoutDescriptor::HeapMode, int) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfbc718 (   0x174) AG::LayoutDescriptor::add_type_descriptor_override(void const*, AGComparisonMode) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfbc88c (    0x44) AG::vector<std::__1::variant<AG::LayoutDescriptor::Builder::DataItem, AG::LayoutDescriptor::Builder::EqualsItem, AG::LayoutDescriptor::Builder::IndirectItem, AG::LayoutDescriptor::Builder::ExistentialItem, AG::LayoutDescriptor::Builder::HeapRefItem, AG::LayoutDescriptor::Builder::NestedItem, AG::LayoutDescriptor::Builder::EnumItem>, 0ul, unsigned long>::reserve_slow(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfbc8d0 (    0x9c) void* AG::details::realloc_vector<unsigned long, 56ul>(void*, unsigned long&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfbc96c (    0x44) std::__1::variant<AG::LayoutDescriptor::Builder::DataItem, AG::LayoutDescriptor::Builder::EqualsItem, AG::LayoutDescriptor::Builder::IndirectItem, AG::LayoutDescriptor::Builder::ExistentialItem, AG::LayoutDescriptor::Builder::HeapRefItem, AG::LayoutDescriptor::Builder::NestedItem, AG::LayoutDescriptor::Builder::EnumItem>& std::__1::variant<AG::LayoutDescriptor::Builder::DataItem, AG::LayoutDescriptor::Builder::EqualsItem, AG::LayoutDescriptor::Builder::IndirectItem, AG::LayoutDescriptor::Builder::ExistentialItem, AG::LayoutDescriptor::Builder::HeapRefItem, AG::LayoutDescriptor::Builder::NestedItem, AG::LayoutDescriptor::Builder::EnumItem>::operator=[abi:v160006]<AG::LayoutDescriptor::Builder::DataItem&, 0, AG::LayoutDescriptor::Builder::DataItem, 0ul, 0>(AG::LayoutDescriptor::Builder::DataItem&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfbc9b0 (    0x6c) auto& std::__1::__variant_detail::__assignment<std::__1::__variant_detail::__traits<AG::LayoutDescriptor::Builder::DataItem, AG::LayoutDescriptor::Builder::EqualsItem, AG::LayoutDescriptor::Builder::IndirectItem, AG::LayoutDescriptor::Builder::ExistentialItem, AG::LayoutDescriptor::Builder::HeapRefItem, AG::LayoutDescriptor::Builder::NestedItem, AG::LayoutDescriptor::Builder::EnumItem>>::__emplace[abi:v160006]<0ul, AG::LayoutDescriptor::Builder::DataItem&>(AG::LayoutDescriptor::Builder::DataItem&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfbca1c (     0x4) decltype(auto) std::__1::__variant_detail::__visitation::__base::__dispatcher<0ul>::__dispatch[abi:v160006]<std::__1::__variant_detail::__dtor<std::__1::__variant_detail::__traits<AG::LayoutDescriptor::Builder::DataItem, AG::LayoutDescriptor::Builder::EqualsItem, AG::LayoutDescriptor::Builder::IndirectItem, AG::LayoutDescriptor::Builder::ExistentialItem, AG::LayoutDescriptor::Builder::HeapRefItem, AG::LayoutDescriptor::Builder::NestedItem, AG::LayoutDescriptor::Builder::EnumItem>, (std::__1::__variant_detail::_Trait)1>::__destroy[abi:v160006]()::'lambda'(auto&)&&, std::__1::__variant_detail::__base<(std::__1::__variant_detail::_Trait)1, AG::LayoutDescriptor::Builder::DataItem, AG::LayoutDescriptor::Builder::EqualsItem, AG::LayoutDescriptor::Builder::IndirectItem, AG::LayoutDescriptor::Builder::ExistentialItem, AG::LayoutDescriptor::Builder::HeapRefItem, AG::LayoutDescriptor::Builder::NestedItem, AG::LayoutDescriptor::Builder::EnumItem>...
                0x00000001acfbca20 (     0x4) decltype(auto) std::__1::__variant_detail::__visitation::__base::__dispatcher<1ul>::__dispatch[abi:v160006]<std::__1::__variant_detail::__dtor<std::__1::__variant_detail::__traits<AG::LayoutDescriptor::Builder::DataItem, AG::LayoutDescriptor::Builder::EqualsItem, AG::LayoutDescriptor::Builder::IndirectItem, AG::LayoutDescriptor::Builder::ExistentialItem, AG::LayoutDescriptor::Builder::HeapRefItem, AG::LayoutDescriptor::Builder::NestedItem, AG::LayoutDescriptor::Builder::EnumItem>, (std::__1::__variant_detail::_Trait)1>::__destroy[abi:v160006]()::'lambda'(auto&)&&, std::__1::__variant_detail::__base<(std::__1::__variant_detail::_Trait)1, AG::LayoutDescriptor::Builder::DataItem, AG::LayoutDescriptor::Builder::EqualsItem, AG::LayoutDescriptor::Builder::IndirectItem, AG::LayoutDescriptor::Builder::ExistentialItem, AG::LayoutDescriptor::Builder::HeapRefItem, AG::LayoutDescriptor::Builder::NestedItem, AG::LayoutDescriptor::Builder::EnumItem>...
                0x00000001acfbca24 (     0x4) decltype(auto) std::__1::__variant_detail::__visitation::__base::__dispatcher<2ul>::__dispatch[abi:v160006]<std::__1::__variant_detail::__dtor<std::__1::__variant_detail::__traits<AG::LayoutDescriptor::Builder::DataItem, AG::LayoutDescriptor::Builder::EqualsItem, AG::LayoutDescriptor::Builder::IndirectItem, AG::LayoutDescriptor::Builder::ExistentialItem, AG::LayoutDescriptor::Builder::HeapRefItem, AG::LayoutDescriptor::Builder::NestedItem, AG::LayoutDescriptor::Builder::EnumItem>, (std::__1::__variant_detail::_Trait)1>::__destroy[abi:v160006]()::'lambda'(auto&)&&, std::__1::__variant_detail::__base<(std::__1::__variant_detail::_Trait)1, AG::LayoutDescriptor::Builder::DataItem, AG::LayoutDescriptor::Builder::EqualsItem, AG::LayoutDescriptor::Builder::IndirectItem, AG::LayoutDescriptor::Builder::ExistentialItem, AG::LayoutDescriptor::Builder::HeapRefItem, AG::LayoutDescriptor::Builder::NestedItem, AG::LayoutDescriptor::Builder::EnumItem>...
                0x00000001acfbca28 (     0x4) decltype(auto) std::__1::__variant_detail::__visitation::__base::__dispatcher<3ul>::__dispatch[abi:v160006]<std::__1::__variant_detail::__dtor<std::__1::__variant_detail::__traits<AG::LayoutDescriptor::Builder::DataItem, AG::LayoutDescriptor::Builder::EqualsItem, AG::LayoutDescriptor::Builder::IndirectItem, AG::LayoutDescriptor::Builder::ExistentialItem, AG::LayoutDescriptor::Builder::HeapRefItem, AG::LayoutDescriptor::Builder::NestedItem, AG::LayoutDescriptor::Builder::EnumItem>, (std::__1::__variant_detail::_Trait)1>::__destroy[abi:v160006]()::'lambda'(auto&)&&, std::__1::__variant_detail::__base<(std::__1::__variant_detail::_Trait)1, AG::LayoutDescriptor::Builder::DataItem, AG::LayoutDescriptor::Builder::EqualsItem, AG::LayoutDescriptor::Builder::IndirectItem, AG::LayoutDescriptor::Builder::ExistentialItem, AG::LayoutDescriptor::Builder::HeapRefItem, AG::LayoutDescriptor::Builder::NestedItem, AG::LayoutDescriptor::Builder::EnumItem>...
                0x00000001acfbca2c (     0x4) decltype(auto) std::__1::__variant_detail::__visitation::__base::__dispatcher<4ul>::__dispatch[abi:v160006]<std::__1::__variant_detail::__dtor<std::__1::__variant_detail::__traits<AG::LayoutDescriptor::Builder::DataItem, AG::LayoutDescriptor::Builder::EqualsItem, AG::LayoutDescriptor::Builder::IndirectItem, AG::LayoutDescriptor::Builder::ExistentialItem, AG::LayoutDescriptor::Builder::HeapRefItem, AG::LayoutDescriptor::Builder::NestedItem, AG::LayoutDescriptor::Builder::EnumItem>, (std::__1::__variant_detail::_Trait)1>::__destroy[abi:v160006]()::'lambda'(auto&)&&, std::__1::__variant_detail::__base<(std::__1::__variant_detail::_Trait)1, AG::LayoutDescriptor::Builder::DataItem, AG::LayoutDescriptor::Builder::EqualsItem, AG::LayoutDescriptor::Builder::IndirectItem, AG::LayoutDescriptor::Builder::ExistentialItem, AG::LayoutDescriptor::Builder::HeapRefItem, AG::LayoutDescriptor::Builder::NestedItem, AG::LayoutDescriptor::Builder::EnumItem>...
                0x00000001acfbca30 (     0x4) decltype(auto) std::__1::__variant_detail::__visitation::__base::__dispatcher<5ul>::__dispatch[abi:v160006]<std::__1::__variant_detail::__dtor<std::__1::__variant_detail::__traits<AG::LayoutDescriptor::Builder::DataItem, AG::LayoutDescriptor::Builder::EqualsItem, AG::LayoutDescriptor::Builder::IndirectItem, AG::LayoutDescriptor::Builder::ExistentialItem, AG::LayoutDescriptor::Builder::HeapRefItem, AG::LayoutDescriptor::Builder::NestedItem, AG::LayoutDescriptor::Builder::EnumItem>, (std::__1::__variant_detail::_Trait)1>::__destroy[abi:v160006]()::'lambda'(auto&)&&, std::__1::__variant_detail::__base<(std::__1::__variant_detail::_Trait)1, AG::LayoutDescriptor::Builder::DataItem, AG::LayoutDescriptor::Builder::EqualsItem, AG::LayoutDescriptor::Builder::IndirectItem, AG::LayoutDescriptor::Builder::ExistentialItem, AG::LayoutDescriptor::Builder::HeapRefItem, AG::LayoutDescriptor::Builder::NestedItem, AG::LayoutDescriptor::Builder::EnumItem>...
                0x00000001acfbca34 (    0xc8) decltype(auto) std::__1::__variant_detail::__visitation::__base::__dispatcher<6ul>::__dispatch[abi:v160006]<std::__1::__variant_detail::__dtor<std::__1::__variant_detail::__traits<AG::LayoutDescriptor::Builder::DataItem, AG::LayoutDescriptor::Builder::EqualsItem, AG::LayoutDescriptor::Builder::IndirectItem, AG::LayoutDescriptor::Builder::ExistentialItem, AG::LayoutDescriptor::Builder::HeapRefItem, AG::LayoutDescriptor::Builder::NestedItem, AG::LayoutDescriptor::Builder::EnumItem>, (std::__1::__variant_detail::_Trait)1>::__destroy[abi:v160006]()::'lambda'(auto&)&&, std::__1::__variant_detail::__base<(std::__1::__variant_detail::_Trait)1, AG::LayoutDescriptor::Builder::DataItem, AG::LayoutDescriptor::Builder::EqualsItem, AG::LayoutDescriptor::Builder::IndirectItem, AG::LayoutDescriptor::Builder::ExistentialItem, AG::LayoutDescriptor::Builder::HeapRefItem, AG::LayoutDescriptor::Builder::NestedItem, AG::LayoutDescriptor::Builder::EnumItem>...
                0x00000001acfbcafc (    0x5c) std::__1::__variant_detail::__dtor<std::__1::__variant_detail::__traits<AG::LayoutDescriptor::Builder::DataItem, AG::LayoutDescriptor::Builder::EqualsItem, AG::LayoutDescriptor::Builder::IndirectItem, AG::LayoutDescriptor::Builder::ExistentialItem, AG::LayoutDescriptor::Builder::HeapRefItem, AG::LayoutDescriptor::Builder::NestedItem, AG::LayoutDescriptor::Builder::EnumItem>, (std::__1::__variant_detail::_Trait)1>::~__dtor() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfbcb58 (    0x4c) std::__1::__throw_bad_variant_access[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfbcba4 (     0x4) std::bad_variant_access::~bad_variant_access() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfbcba8 (     0x8) decltype(auto) std::__1::__variant_detail::__visitation::__base::__dispatcher<0ul>::__dispatch[abi:v160006]<std::__1::__variant_detail::__visitation::__variant::__value_visitor<AG::LayoutDescriptor::Builder::Emitter<AG::vector<unsigned char, 512ul, unsigned long>>&>&&, std::__1::__variant_detail::__base<(std::__1::__variant_detail::_Trait)1, AG::LayoutDescriptor::Builder::DataItem, AG::LayoutDescriptor::Builder::EqualsItem, AG::LayoutDescriptor::Builder::IndirectItem, AG::LayoutDescriptor::Builder::ExistentialItem, AG::LayoutDescriptor::Builder::HeapRefItem, AG::LayoutDescriptor::Builder::NestedItem, AG::LayoutDescriptor::Builder::EnumItem> const&>(std::__1::__variant_detail::__visitation::__variant::__value_visitor<AG::LayoutDescriptor::Builder::Emitter<AG::vector<unsigned char, 512ul, unsigned long>>&>&&, std::__1::__variant_detail::__base<(std::__1::__variant_detail::_Trait)1, AG::LayoutDescriptor::Builder::DataItem, AG::LayoutDescr...
                0x00000001acfbcbb0 (     0x8) decltype(auto) std::__1::__variant_detail::__visitation::__base::__dispatcher<1ul>::__dispatch[abi:v160006]<std::__1::__variant_detail::__visitation::__variant::__value_visitor<AG::LayoutDescriptor::Builder::Emitter<AG::vector<unsigned char, 512ul, unsigned long>>&>&&, std::__1::__variant_detail::__base<(std::__1::__variant_detail::_Trait)1, AG::LayoutDescriptor::Builder::DataItem, AG::LayoutDescriptor::Builder::EqualsItem, AG::LayoutDescriptor::Builder::IndirectItem, AG::LayoutDescriptor::Builder::ExistentialItem, AG::LayoutDescriptor::Builder::HeapRefItem, AG::LayoutDescriptor::Builder::NestedItem, AG::LayoutDescriptor::Builder::EnumItem> const&>(std::__1::__variant_detail::__visitation::__variant::__value_visitor<AG::LayoutDescriptor::Builder::Emitter<AG::vector<unsigned char, 512ul, unsigned long>>&>&&, std::__1::__variant_detail::__base<(std::__1::__variant_detail::_Trait)1, AG::LayoutDescriptor::Builder::DataItem, AG::LayoutDescr...
                0x00000001acfbcbb8 (     0x8) decltype(auto) std::__1::__variant_detail::__visitation::__base::__dispatcher<2ul>::__dispatch[abi:v160006]<std::__1::__variant_detail::__visitation::__variant::__value_visitor<AG::LayoutDescriptor::Builder::Emitter<AG::vector<unsigned char, 512ul, unsigned long>>&>&&, std::__1::__variant_detail::__base<(std::__1::__variant_detail::_Trait)1, AG::LayoutDescriptor::Builder::DataItem, AG::LayoutDescriptor::Builder::EqualsItem, AG::LayoutDescriptor::Builder::IndirectItem, AG::LayoutDescriptor::Builder::ExistentialItem, AG::LayoutDescriptor::Builder::HeapRefItem, AG::LayoutDescriptor::Builder::NestedItem, AG::LayoutDescriptor::Builder::EnumItem> const&>(std::__1::__variant_detail::__visitation::__variant::__value_visitor<AG::LayoutDescriptor::Builder::Emitter<AG::vector<unsigned char, 512ul, unsigned long>>&>&&, std::__1::__variant_detail::__base<(std::__1::__variant_detail::_Trait)1, AG::LayoutDescriptor::Builder::DataItem, AG::LayoutDescr...
                0x00000001acfbcbc0 (     0x8) decltype(auto) std::__1::__variant_detail::__visitation::__base::__dispatcher<3ul>::__dispatch[abi:v160006]<std::__1::__variant_detail::__visitation::__variant::__value_visitor<AG::LayoutDescriptor::Builder::Emitter<AG::vector<unsigned char, 512ul, unsigned long>>&>&&, std::__1::__variant_detail::__base<(std::__1::__variant_detail::_Trait)1, AG::LayoutDescriptor::Builder::DataItem, AG::LayoutDescriptor::Builder::EqualsItem, AG::LayoutDescriptor::Builder::IndirectItem, AG::LayoutDescriptor::Builder::ExistentialItem, AG::LayoutDescriptor::Builder::HeapRefItem, AG::LayoutDescriptor::Builder::NestedItem, AG::LayoutDescriptor::Builder::EnumItem> const&>(std::__1::__variant_detail::__visitation::__variant::__value_visitor<AG::LayoutDescriptor::Builder::Emitter<AG::vector<unsigned char, 512ul, unsigned long>>&>&&, std::__1::__variant_detail::__base<(std::__1::__variant_detail::_Trait)1, AG::LayoutDescriptor::Builder::DataItem, AG::LayoutDescr...
                0x00000001acfbcbc8 (     0x8) decltype(auto) std::__1::__variant_detail::__visitation::__base::__dispatcher<4ul>::__dispatch[abi:v160006]<std::__1::__variant_detail::__visitation::__variant::__value_visitor<AG::LayoutDescriptor::Builder::Emitter<AG::vector<unsigned char, 512ul, unsigned long>>&>&&, std::__1::__variant_detail::__base<(std::__1::__variant_detail::_Trait)1, AG::LayoutDescriptor::Builder::DataItem, AG::LayoutDescriptor::Builder::EqualsItem, AG::LayoutDescriptor::Builder::IndirectItem, AG::LayoutDescriptor::Builder::ExistentialItem, AG::LayoutDescriptor::Builder::HeapRefItem, AG::LayoutDescriptor::Builder::NestedItem, AG::LayoutDescriptor::Builder::EnumItem> const&>(std::__1::__variant_detail::__visitation::__variant::__value_visitor<AG::LayoutDescriptor::Builder::Emitter<AG::vector<unsigned char, 512ul, unsigned long>>&>&&, std::__1::__variant_detail::__base<(std::__1::__variant_detail::_Trait)1, AG::LayoutDescriptor::Builder::DataItem, AG::LayoutDescr...
                0x00000001acfbcbd0 (     0x8) decltype(auto) std::__1::__variant_detail::__visitation::__base::__dispatcher<5ul>::__dispatch[abi:v160006]<std::__1::__variant_detail::__visitation::__variant::__value_visitor<AG::LayoutDescriptor::Builder::Emitter<AG::vector<unsigned char, 512ul, unsigned long>>&>&&, std::__1::__variant_detail::__base<(std::__1::__variant_detail::_Trait)1, AG::LayoutDescriptor::Builder::DataItem, AG::LayoutDescriptor::Builder::EqualsItem, AG::LayoutDescriptor::Builder::IndirectItem, AG::LayoutDescriptor::Builder::ExistentialItem, AG::LayoutDescriptor::Builder::HeapRefItem, AG::LayoutDescriptor::Builder::NestedItem, AG::LayoutDescriptor::Builder::EnumItem> const&>(std::__1::__variant_detail::__visitation::__variant::__value_visitor<AG::LayoutDescriptor::Builder::Emitter<AG::vector<unsigned char, 512ul, unsigned long>>&>&&, std::__1::__variant_detail::__base<(std::__1::__variant_detail::_Trait)1, AG::LayoutDescriptor::Builder::DataItem, AG::LayoutDescr...
                0x00000001acfbcbd8 (     0x8) decltype(auto) std::__1::__variant_detail::__visitation::__base::__dispatcher<6ul>::__dispatch[abi:v160006]<std::__1::__variant_detail::__visitation::__variant::__value_visitor<AG::LayoutDescriptor::Builder::Emitter<AG::vector<unsigned char, 512ul, unsigned long>>&>&&, std::__1::__variant_detail::__base<(std::__1::__variant_detail::_Trait)1, AG::LayoutDescriptor::Builder::DataItem, AG::LayoutDescriptor::Builder::EqualsItem, AG::LayoutDescriptor::Builder::IndirectItem, AG::LayoutDescriptor::Builder::ExistentialItem, AG::LayoutDescriptor::Builder::HeapRefItem, AG::LayoutDescriptor::Builder::NestedItem, AG::LayoutDescriptor::Builder::EnumItem> const&>(std::__1::__variant_detail::__visitation::__variant::__value_visitor<AG::LayoutDescriptor::Builder::Emitter<AG::vector<unsigned char, 512ul, unsigned long>>&>&&, std::__1::__variant_detail::__base<(std::__1::__variant_detail::_Trait)1, AG::LayoutDescriptor::Builder::DataItem, AG::LayoutDescr...
                0x00000001acfbcbe0 (    0xf8) AG::LayoutDescriptor::Builder::Emitter<AG::vector<unsigned char, 512ul, unsigned long>>::operator()(AG::LayoutDescriptor::Builder::DataItem const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfbccd8 (   0x114) AG::LayoutDescriptor::Builder::Emitter<AG::vector<unsigned char, 512ul, unsigned long>>::enter(AG::LayoutDescriptor::Builder::RangeItem const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfbcdec (    0x48) AG::vector<unsigned char, 512ul, unsigned long>::reserve_slow(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfbce34 (    0xc0) void* AG::details::realloc_vector<unsigned long, 1ul>(void*, void*, unsigned long, unsigned long&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfbcef4 (   0x118) AG::LayoutDescriptor::Builder::Emitter<AG::vector<unsigned char, 512ul, unsigned long>>::operator()(AG::LayoutDescriptor::Builder::EqualsItem const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfbd00c (   0x114) AG::LayoutDescriptor::Builder::Emitter<AG::vector<unsigned char, 512ul, unsigned long>>::operator()(AG::LayoutDescriptor::Builder::IndirectItem const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfbd120 (    0xd4) AG::LayoutDescriptor::Builder::Emitter<AG::vector<unsigned char, 512ul, unsigned long>>::operator()(AG::LayoutDescriptor::Builder::ExistentialItem const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfbd1f4 (    0x94) AG::LayoutDescriptor::Builder::Emitter<AG::vector<unsigned char, 512ul, unsigned long>>::operator()(AG::LayoutDescriptor::Builder::HeapRefItem const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfbd288 (   0x2f0) AG::LayoutDescriptor::Builder::Emitter<AG::vector<unsigned char, 512ul, unsigned long>>::operator()(AG::LayoutDescriptor::Builder::NestedItem const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfbd578 (   0x374) AG::LayoutDescriptor::Builder::Emitter<AG::vector<unsigned char, 512ul, unsigned long>>::operator()(AG::LayoutDescriptor::Builder::EnumItem const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfbd8ec (    0x88) AG::(anonymous namespace)::TypeDescriptorCache::init_shared_cache(void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfbd974 (    0x38) AG::(anonymous namespace)::TypeDescriptorCache::fetch(AG::swift::metadata const*, unsigned int, AG::LayoutDescriptor::HeapMode, int)::$_7::operator()() const [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfbd9ac (   0x1f4) AG::(anonymous namespace)::TypeDescriptorCache::drain_queue(void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfbdba0 (    0x48) AG::vector<AG::(anonymous namespace)::TypeDescriptorCache::QueueEntry, 8ul, unsigned long>::reserve_slow(unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfbdbe8 (    0xb4) void std::__1::__sift_up[abi:v160006]<std::__1::_ClassicAlgPolicy, std::__1::less<AG::(anonymous namespace)::TypeDescriptorCache::QueueEntry>&, AG::(anonymous namespace)::TypeDescriptorCache::QueueEntry*>(AG::(anonymous namespace)::TypeDescriptorCache::QueueEntry*, AG::(anonymous namespace)::TypeDescriptorCache::QueueEntry*, std::__1::less<AG::(anonymous namespace)::TypeDescriptorCache::QueueEntry>&, std::__1::iterator_traits<AG::(anonymous namespace)::TypeDescriptorCache::QueueEntry*>::difference_type) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfbdc9c (    0x48) AG::vector<AG::LayoutDescriptor::Compare::Enum, 8ul, unsigned long>::reserve_slow(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfbdce4 (    0xc4) void* AG::details::realloc_vector<unsigned long, 64ul>(void*, void*, unsigned long, unsigned long&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfbdda8 (    0x44) AG::vector<AG::LayoutDescriptor::Builder::EnumItem::Case, 0ul, unsigned long>::reserve_slow(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfbddec (    0x94) void* AG::details::realloc_vector<unsigned long, 40ul>(void*, unsigned long&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfbde80 (    0x44) AG::vector<std::__1::pair<void const*, AGComparisonMode>, 0ul, unsigned long>::reserve_slow(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfbdec4 (    0x84) void* AG::details::realloc_vector<unsigned long, 16ul>(void*, unsigned long&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfbdf48 (   0x430) AG::Graph::breadth_first_search(AG::AttributeID, unsigned int, AG::ClosureFunctionAB<bool, unsigned int>) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfbe378 (    0xb4) std::__1::__hash_const_iterator<std::__1::__hash_node<AG::AttributeID, void*>*> std::__1::__hash_table<AG::AttributeID, std::__1::hash<AG::AttributeID>, std::__1::equal_to<AG::AttributeID>, std::__1::allocator<AG::AttributeID>>::find<AG::AttributeID>(AG::AttributeID const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfbe42c (    0xa8) std::__1::deque<AG::AttributeID, std::__1::allocator<AG::AttributeID>>::~deque[abi:v160006]() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfbe4d4 (    0x50) std::__1::__split_buffer<AG::AttributeID*, std::__1::allocator<AG::AttributeID*>>::~__split_buffer() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfbe524 (    0x4c) std::__1::__hash_table<AG::AttributeID, std::__1::hash<AG::AttributeID>, std::__1::equal_to<AG::AttributeID>, std::__1::allocator<AG::AttributeID>>::~__hash_table() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfbe570 (   0x214) std::__1::pair<std::__1::__hash_iterator<std::__1::__hash_node<AG::AttributeID, void*>*>, bool> std::__1::__hash_table<AG::AttributeID, std::__1::hash<AG::AttributeID>, std::__1::equal_to<AG::AttributeID>, std::__1::allocator<AG::AttributeID>>::__emplace_unique_key_args<AG::AttributeID, AG::AttributeID const&>(AG::AttributeID const&, AG::AttributeID const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfbe784 (    0xf0) void std::__1::__hash_table<AG::AttributeID, std::__1::hash<AG::AttributeID>, std::__1::equal_to<AG::AttributeID>, std::__1::allocator<AG::AttributeID>>::__rehash<true>(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfbe874 (   0x15c) void std::__1::__hash_table<AG::AttributeID, std::__1::hash<AG::AttributeID>, std::__1::equal_to<AG::AttributeID>, std::__1::allocator<AG::AttributeID>>::__do_rehash<true>(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfbe9d0 (    0x98) std::__1::deque<AG::AttributeID, std::__1::allocator<AG::AttributeID>>::push_back(AG::AttributeID const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfbea68 (   0x36c) std::__1::deque<AG::AttributeID, std::__1::allocator<AG::AttributeID>>::__add_back_capacity() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfbedd4 (   0x108) std::__1::__split_buffer<AG::AttributeID*, std::__1::allocator<AG::AttributeID*>>::push_back(AG::AttributeID*&&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfbeedc (   0x120) std::__1::__split_buffer<AG::AttributeID*, std::__1::allocator<AG::AttributeID*>>::push_front(AG::AttributeID*&&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfbeffc (   0x108) std::__1::__split_buffer<AG::AttributeID*, std::__1::allocator<AG::AttributeID*>&>::push_back(AG::AttributeID*&&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfbf104 (   0x11c) std::__1::__split_buffer<AG::AttributeID*, std::__1::allocator<AG::AttributeID*>&>::push_front(AG::AttributeID* const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfbf220 (    0x38) std::__1::__allocation_result<std::__1::allocator_traits<std::__1::allocator<AG::AttributeID*>>::pointer> std::__1::__allocate_at_least[abi:v160006]<std::__1::allocator<AG::AttributeID*>>(std::__1::allocator<AG::AttributeID*>&, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfbf258 (   0x198) AG::Node::destroy(AG::Graph&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfbf3f0 (   0x128) AG::Node::update_self(AG::Graph&, void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfbf518 (    0xec) AG::Node::destroy_self(AG::Graph&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfbf604 (    0x98) AG::Node::destroy_value(AG::Graph&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfbf69c (   0x140) AG::Node::allocate_value(AG::Graph&, AG::data::zone&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfbf7dc (   0x138) AG::Graph::compare_edge_values(AG::InputEdge, AG::AttributeType const*, void const*, void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfbf914 (    0x4c) AG::IndirectNode::modify(AG::AttributeID, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfbf960 (   0x41c) AG::Graph::encode_node(AG::Encoder&, AG::Node const&, bool) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfbfd7c (   0x15c) AG::Graph::encode_indirect_node(AG::Encoder&, AG::IndirectNode const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfbfed8 (   0x21c) AG::Graph::encode_tree(AG::Encoder&, AG::data::ptr<AG::Graph::TreeElement>) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc00f4 (   0x13c) AG::AttributeID::resolve_slow(unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc0230 (    0xa8) AG::AttributeID::size() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc02d8 (    0x50) AG::AttributeID::traverses(AG::AttributeID, unsigned int) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc0328 (     0x8) AG::Subgraph::from_cf(AGSubgraphStorage*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc0330 (     0x8) AG::Subgraph::to_cf() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc0338 (    0x3c) AG::Subgraph::clear_object() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc0374 (    0x7c) AGSubgraphGetTypeID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc03f0 (    0x10) AGSubgraphCreate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc0400 (    0x94) AGSubgraphCreate2 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc0494 (    0x28) AGSubgraphGetCurrent [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc04bc (    0x78) AGSubgraphSetCurrent [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc0534 (    0x28) AGSubgraphGetCurrentGraphContext [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc055c (    0x14) AGSubgraphInvalidate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc0570 (    0x20) AGSubgraphIsValid [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc0590 (    0x50) AGSubgraphGetGraph [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc05e0 (    0x38) AGSubgraphAddObserver [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc0618 (    0x10) AGSubgraphRemoveObserver [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc0628 (    0x48) AGSubgraphAddChild [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc0670 (    0x4c) AGSubgraphRemoveChild [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc06bc (    0x2c) AGSubgraphSetIndex [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc06e8 (    0x30) AGSubgraphGetParentCount [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc0718 (    0x78) AGSubgraphGetParent [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc0790 (    0x20) AGSubgraphIsAncestor [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc07b0 (    0x28) AGSubgraphIntersects [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc07d8 (    0x28) AGSubgraphIsDirty [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc0800 (    0x10) AGSubgraphUpdate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc0810 (    0x10) AGSubgraphApply [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc0820 (    0x50) AGSubgraphShouldRecordTree [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc0870 (    0x40) init_should_record_tree(void*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc08b0 (    0x54) AGSubgraphSetShouldRecordTree [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc0904 (    0x3c) AGSubgraphSetTreeOwner [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc0940 (    0x30) AGSubgraphBeginTreeElement [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc0970 (    0x34) AGSubgraphAddTreeValue [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc09a4 (    0x28) AGSubgraphEndTreeElement [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc09cc (    0x1c) AGSubgraphGetTreeRoot [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc09e8 (    0x18) AGTreeElementGetParent [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc0a00 (    0x14) AGTreeElementGetType [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc0a14 (    0x18) AGTreeElementGetValue [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc0a2c (    0x18) AGTreeElementGetFlags [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc0a44 (    0x24) AGTreeElementMakeChildIterator [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc0a68 (    0x84) AGTreeElementGetNextChild [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc0aec (    0x20) AGTreeElementMakeValueIterator [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc0b0c (    0x28) AGTreeElementGetNextValue [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc0b34 (     0x8) AGTreeElementMakeNodeIterator [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc0b3c (    0x64) AGTreeElementGetNextNode [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc0ba0 (    0x14) AGTreeValueGetType [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc0bb4 (    0x18) AGTreeValueGetValue [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc0bcc (    0x24) AGTreeValueGetKey [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc0bf0 (    0x18) AGTreeValueGetFlags [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc0c08 (    0x50) auto (anonymous namespace)::subgraph_type_id()::$_0::__invoke<void const*>(void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc0c58 (   0x144) AG::Graph::ProfileData::json_data(AG::Graph::ProfileData::Data const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc0d9c (   0x154) AG::Graph::ProfileData::json_data(AG::Graph::ProfileData::Item const&, AG::Graph const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc0ef0 (   0x168) AG::Graph::description(AG::Graph const*, NSDictionary*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc1058 (  0x1e78) AG::Graph::description_graph(AG::Graph const*, NSDictionary*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc2ed0 (   0x778) AG::Graph::description_graph_dot(NSDictionary*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc3648 (   0x300) AG::Graph::description_stack(NSDictionary*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc3948 (    0xf0) AG::Graph::description_stack_nodes(NSDictionary*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc3a38 (   0x394) AG::Graph::description_stack_frame(NSDictionary*) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc3dcc (    0x60) AG::Graph::print() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc3e2c (   0x2bc) AG::Graph::print_cycle(AG::data::ptr<AG::Node>) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc40e8 (    0x4c) AG::Trace::log_message(char const*, ...) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc4134 (    0x40) AG::(anonymous namespace)::cycle_verbosity() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc4174 (    0x30) AG::(anonymous namespace)::trap_cycles() [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc41a4 (   0x3a8) AG::Graph::description(AG::data::ptr<AG::Node>) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc454c (    0x84) AG::Graph::print_attribute(AG::data::ptr<AG::Node>) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc45d0 (   0x244) AG::Graph::write_to_file(AG::Graph const*, char const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc4814 (    0x50) AG::Graph::print_data() const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc4864 (    0xb4) std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, unsigned long>, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<unsigned long, unsigned long>, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, unsigned long>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, unsigned long>, std::__1::equal_to<unsigned long>, std::__1::hash<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, unsigned long>>>::find<unsigned long>(unsigned long const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc4918 (    0x44) AG::vector<AG::Graph const*, 0ul, unsigned long>::reserve_slow(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc495c (    0x44) AG::vector<unsigned int, 0ul, unsigned long>::reserve_slow(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc49a0 (   0x228) std::__1::pair<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned long>, void*>*>, bool> std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, unsigned long>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned long>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned long>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, unsigned long>>>::__emplace_unique_key_args<unsigned int, unsigned int&, unsigned long&>(unsigned int const&, unsigned int&, unsigned long&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc4bc8 (    0xf0) void std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, unsigned long>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned long>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned long>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, unsigned long>>>::__rehash<true>(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc4cb8 (   0x15c) void std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, unsigned long>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned long>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned long>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, unsigned long>>>::__do_rehash<true>(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc4e14 (    0x70) (anonymous namespace)::escaped_string(NSString*, unsigned long) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc4e84 (    0xec) std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<AG::Subgraph const*, unsigned long>, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<AG::Subgraph const*, unsigned long>, std::__1::__unordered_map_hasher<AG::Subgraph const*, std::__1::__hash_value_type<AG::Subgraph const*, unsigned long>, std::__1::hash<AG::Subgraph const*>, std::__1::equal_to<AG::Subgraph const*>, true>, std::__1::__unordered_map_equal<AG::Subgraph const*, std::__1::__hash_value_type<AG::Subgraph const*, unsigned long>, std::__1::equal_to<AG::Subgraph const*>, std::__1::hash<AG::Subgraph const*>, true>, std::__1::allocator<std::__1::__hash_value_type<AG::Subgraph const*, unsigned long>>>::find<AG::Subgraph const*>(AG::Subgraph const* const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc4f70 (    0x4c) std::__1::__hash_table<std::__1::__hash_value_type<unsigned long, unsigned long>, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, unsigned long>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, unsigned long>, std::__1::equal_to<unsigned long>, std::__1::hash<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, unsigned long>>>::~__hash_table() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc4fbc (   0x214) std::__1::pair<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, unsigned long>, void*>*>, bool> std::__1::__hash_table<std::__1::__hash_value_type<unsigned long, unsigned long>, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, unsigned long>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, unsigned long>, std::__1::equal_to<unsigned long>, std::__1::hash<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, unsigned long>>>::__emplace_unique_key_args<unsigned long, std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned long&&>, std::__1::tuple<>>(unsigned long const&, std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned long&&>&&, std::__1::tuple<>&&) [FUNC, PEXT, NameNList, MangledNameN...
                0x00000001acfc51d0 (    0xf0) void std::__1::__hash_table<std::__1::__hash_value_type<unsigned long, unsigned long>, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, unsigned long>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, unsigned long>, std::__1::equal_to<unsigned long>, std::__1::hash<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, unsigned long>>>::__rehash<true>(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc52c0 (   0x15c) void std::__1::__hash_table<std::__1::__hash_value_type<unsigned long, unsigned long>, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, unsigned long>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, unsigned long>, std::__1::equal_to<unsigned long>, std::__1::hash<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, unsigned long>>>::__do_rehash<true>(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc541c (    0x4c) std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, unsigned long>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned long>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned long>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, unsigned long>>>::~__hash_table() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc5468 (    0x4c) std::__1::__hash_table<std::__1::__hash_value_type<AG::data::ptr<AG::Node>, unsigned long>, std::__1::__unordered_map_hasher<AG::data::ptr<AG::Node>, std::__1::__hash_value_type<AG::data::ptr<AG::Node>, unsigned long>, std::__1::hash<AG::data::ptr<AG::Node>>, std::__1::equal_to<AG::data::ptr<AG::Node>>, true>, std::__1::__unordered_map_equal<AG::data::ptr<AG::Node>, std::__1::__hash_value_type<AG::data::ptr<AG::Node>, unsigned long>, std::__1::equal_to<AG::data::ptr<AG::Node>>, std::__1::hash<AG::data::ptr<AG::Node>>, true>, std::__1::allocator<std::__1::__hash_value_type<AG::data::ptr<AG::Node>, unsigned long>>>::~__hash_table() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc54b4 (    0xb4) std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned long>, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, unsigned long>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned long>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned long>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, unsigned long>>>::find<unsigned int>(unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc5568 (   0x21c) std::__1::pair<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<AG::data::ptr<AG::Node>, unsigned long>, void*>*>, bool> std::__1::__hash_table<std::__1::__hash_value_type<AG::data::ptr<AG::Node>, unsigned long>, std::__1::__unordered_map_hasher<AG::data::ptr<AG::Node>, std::__1::__hash_value_type<AG::data::ptr<AG::Node>, unsigned long>, std::__1::hash<AG::data::ptr<AG::Node>>, std::__1::equal_to<AG::data::ptr<AG::Node>>, true>, std::__1::__unordered_map_equal<AG::data::ptr<AG::Node>, std::__1::__hash_value_type<AG::data::ptr<AG::Node>, unsigned long>, std::__1::equal_to<AG::data::ptr<AG::Node>>, std::__1::hash<AG::data::ptr<AG::Node>>, true>, std::__1::allocator<std::__1::__hash_value_type<AG::data::ptr<AG::Node>, unsigned long>>>::__emplace_unique_key_args<AG::data::ptr<AG::Node>, std::__1::piecewise_construct_t const&, std::__1::tuple<AG::data::ptr<AG::Node> const&>, std::__1::tuple<>>(AG::data::ptr<AG::No...
                0x00000001acfc5784 (    0xf0) void std::__1::__hash_table<std::__1::__hash_value_type<AG::data::ptr<AG::Node>, unsigned long>, std::__1::__unordered_map_hasher<AG::data::ptr<AG::Node>, std::__1::__hash_value_type<AG::data::ptr<AG::Node>, unsigned long>, std::__1::hash<AG::data::ptr<AG::Node>>, std::__1::equal_to<AG::data::ptr<AG::Node>>, true>, std::__1::__unordered_map_equal<AG::data::ptr<AG::Node>, std::__1::__hash_value_type<AG::data::ptr<AG::Node>, unsigned long>, std::__1::equal_to<AG::data::ptr<AG::Node>>, std::__1::hash<AG::data::ptr<AG::Node>>, true>, std::__1::allocator<std::__1::__hash_value_type<AG::data::ptr<AG::Node>, unsigned long>>>::__rehash<true>(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc5874 (   0x15c) void std::__1::__hash_table<std::__1::__hash_value_type<AG::data::ptr<AG::Node>, unsigned long>, std::__1::__unordered_map_hasher<AG::data::ptr<AG::Node>, std::__1::__hash_value_type<AG::data::ptr<AG::Node>, unsigned long>, std::__1::hash<AG::data::ptr<AG::Node>>, std::__1::equal_to<AG::data::ptr<AG::Node>>, true>, std::__1::__unordered_map_equal<AG::data::ptr<AG::Node>, std::__1::__hash_value_type<AG::data::ptr<AG::Node>, unsigned long>, std::__1::equal_to<AG::data::ptr<AG::Node>>, std::__1::hash<AG::data::ptr<AG::Node>>, true>, std::__1::allocator<std::__1::__hash_value_type<AG::data::ptr<AG::Node>, unsigned long>>>::__do_rehash<true>(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc59d0 (    0xb4) std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<AG::data::ptr<AG::Node>, AG::Graph::ProfileData::Item>, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<AG::data::ptr<AG::Node>, AG::Graph::ProfileData::Item>, std::__1::__unordered_map_hasher<AG::data::ptr<AG::Node>, std::__1::__hash_value_type<AG::data::ptr<AG::Node>, AG::Graph::ProfileData::Item>, std::__1::hash<AG::data::ptr<AG::Node>>, std::__1::equal_to<AG::data::ptr<AG::Node>>, true>, std::__1::__unordered_map_equal<AG::data::ptr<AG::Node>, std::__1::__hash_value_type<AG::data::ptr<AG::Node>, AG::Graph::ProfileData::Item>, std::__1::equal_to<AG::data::ptr<AG::Node>>, std::__1::hash<AG::data::ptr<AG::Node>>, true>, std::__1::allocator<std::__1::__hash_value_type<AG::data::ptr<AG::Node>, AG::Graph::ProfileData::Item>>>::find<AG::data::ptr<AG::Node>>(AG::data::ptr<AG::Node> const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NL...
                0x00000001acfc5a84 (   0x21c) std::__1::pair<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<AG::data::ptr<AG::Node>, unsigned long>, void*>*>, bool> std::__1::__hash_table<std::__1::__hash_value_type<AG::data::ptr<AG::Node>, unsigned long>, std::__1::__unordered_map_hasher<AG::data::ptr<AG::Node>, std::__1::__hash_value_type<AG::data::ptr<AG::Node>, unsigned long>, std::__1::hash<AG::data::ptr<AG::Node>>, std::__1::equal_to<AG::data::ptr<AG::Node>>, true>, std::__1::__unordered_map_equal<AG::data::ptr<AG::Node>, std::__1::__hash_value_type<AG::data::ptr<AG::Node>, unsigned long>, std::__1::equal_to<AG::data::ptr<AG::Node>>, std::__1::hash<AG::data::ptr<AG::Node>>, true>, std::__1::allocator<std::__1::__hash_value_type<AG::data::ptr<AG::Node>, unsigned long>>>::__emplace_unique_key_args<AG::data::ptr<AG::Node>, std::__1::piecewise_construct_t const&, std::__1::tuple<AG::data::ptr<AG::Node>&&>, std::__1::tuple<>>(AG::data::ptr<AG::Node> c...
                0x00000001acfc5ca0 (    0xb4) std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, AG::Graph::ProfileData::Item>, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, AG::Graph::ProfileData::Item>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, AG::Graph::ProfileData::Item>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, AG::Graph::ProfileData::Item>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, AG::Graph::ProfileData::Item>>>::find<unsigned int>(unsigned int const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc5d54 (    0xb4) std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, AG::Graph::ProfileData::Item>, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, AG::Graph::ProfileData::Item>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, AG::Graph::ProfileData::Item>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, AG::Graph::ProfileData::Item>, std::__1::equal_to<unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, AG::Graph::ProfileData::Item>>>::find<unsigned int>(unsigned int const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc5e08 (    0x4c) std::__1::__hash_table<std::__1::__hash_value_type<AG::Subgraph const*, unsigned long>, std::__1::__unordered_map_hasher<AG::Subgraph const*, std::__1::__hash_value_type<AG::Subgraph const*, unsigned long>, std::__1::hash<AG::Subgraph const*>, std::__1::equal_to<AG::Subgraph const*>, true>, std::__1::__unordered_map_equal<AG::Subgraph const*, std::__1::__hash_value_type<AG::Subgraph const*, unsigned long>, std::__1::equal_to<AG::Subgraph const*>, std::__1::hash<AG::Subgraph const*>, true>, std::__1::allocator<std::__1::__hash_value_type<AG::Subgraph const*, unsigned long>>>::~__hash_table() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc5e54 (   0x24c) std::__1::pair<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<AG::Subgraph const*, unsigned long>, void*>*>, bool> std::__1::__hash_table<std::__1::__hash_value_type<AG::Subgraph const*, unsigned long>, std::__1::__unordered_map_hasher<AG::Subgraph const*, std::__1::__hash_value_type<AG::Subgraph const*, unsigned long>, std::__1::hash<AG::Subgraph const*>, std::__1::equal_to<AG::Subgraph const*>, true>, std::__1::__unordered_map_equal<AG::Subgraph const*, std::__1::__hash_value_type<AG::Subgraph const*, unsigned long>, std::__1::equal_to<AG::Subgraph const*>, std::__1::hash<AG::Subgraph const*>, true>, std::__1::allocator<std::__1::__hash_value_type<AG::Subgraph const*, unsigned long>>>::__emplace_unique_key_args<AG::Subgraph const*, std::__1::piecewise_construct_t const&, std::__1::tuple<AG::Subgraph const* const&>, std::__1::tuple<>>(AG::Subgraph const* const&, std::__1::piecewise_construct_t const&, std:...
                0x00000001acfc60a0 (    0xf0) void std::__1::__hash_table<std::__1::__hash_value_type<AG::Subgraph const*, unsigned long>, std::__1::__unordered_map_hasher<AG::Subgraph const*, std::__1::__hash_value_type<AG::Subgraph const*, unsigned long>, std::__1::hash<AG::Subgraph const*>, std::__1::equal_to<AG::Subgraph const*>, true>, std::__1::__unordered_map_equal<AG::Subgraph const*, std::__1::__hash_value_type<AG::Subgraph const*, unsigned long>, std::__1::equal_to<AG::Subgraph const*>, std::__1::hash<AG::Subgraph const*>, true>, std::__1::allocator<std::__1::__hash_value_type<AG::Subgraph const*, unsigned long>>>::__rehash<true>(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc6190 (   0x15c) void std::__1::__hash_table<std::__1::__hash_value_type<AG::Subgraph const*, unsigned long>, std::__1::__unordered_map_hasher<AG::Subgraph const*, std::__1::__hash_value_type<AG::Subgraph const*, unsigned long>, std::__1::hash<AG::Subgraph const*>, std::__1::equal_to<AG::Subgraph const*>, true>, std::__1::__unordered_map_equal<AG::Subgraph const*, std::__1::__hash_value_type<AG::Subgraph const*, unsigned long>, std::__1::equal_to<AG::Subgraph const*>, std::__1::hash<AG::Subgraph const*>, true>, std::__1::allocator<std::__1::__hash_value_type<AG::Subgraph const*, unsigned long>>>::__do_rehash<true>(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc62ec (    0xb4) std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<AG::data::ptr<AG::Node>, unsigned long>, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<AG::data::ptr<AG::Node>, unsigned long>, std::__1::__unordered_map_hasher<AG::data::ptr<AG::Node>, std::__1::__hash_value_type<AG::data::ptr<AG::Node>, unsigned long>, std::__1::hash<AG::data::ptr<AG::Node>>, std::__1::equal_to<AG::data::ptr<AG::Node>>, true>, std::__1::__unordered_map_equal<AG::data::ptr<AG::Node>, std::__1::__hash_value_type<AG::data::ptr<AG::Node>, unsigned long>, std::__1::equal_to<AG::data::ptr<AG::Node>>, std::__1::hash<AG::data::ptr<AG::Node>>, true>, std::__1::allocator<std::__1::__hash_value_type<AG::data::ptr<AG::Node>, unsigned long>>>::find<AG::data::ptr<AG::Node>>(AG::data::ptr<AG::Node> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc63a0 (    0x4c) std::__1::__hash_table<std::__1::__hash_value_type<AG::data::ptr<AG::Graph::TreeElement>, unsigned long>, std::__1::__unordered_map_hasher<AG::data::ptr<AG::Graph::TreeElement>, std::__1::__hash_value_type<AG::data::ptr<AG::Graph::TreeElement>, unsigned long>, std::__1::hash<AG::data::ptr<AG::Graph::TreeElement>>, std::__1::equal_to<AG::data::ptr<AG::Graph::TreeElement>>, true>, std::__1::__unordered_map_equal<AG::data::ptr<AG::Graph::TreeElement>, std::__1::__hash_value_type<AG::data::ptr<AG::Graph::TreeElement>, unsigned long>, std::__1::equal_to<AG::data::ptr<AG::Graph::TreeElement>>, std::__1::hash<AG::data::ptr<AG::Graph::TreeElement>>, true>, std::__1::allocator<std::__1::__hash_value_type<AG::data::ptr<AG::Graph::TreeElement>, unsigned long>>>::~__hash_table() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc63ec (    0x44) AG::vector<AG::data::ptr<AG::Graph::TreeElement>, 0ul, unsigned long>::reserve_slow(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc6430 (    0xb4) std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<AG::data::ptr<AG::Graph::TreeElement>, unsigned long>, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<AG::data::ptr<AG::Graph::TreeElement>, unsigned long>, std::__1::__unordered_map_hasher<AG::data::ptr<AG::Graph::TreeElement>, std::__1::__hash_value_type<AG::data::ptr<AG::Graph::TreeElement>, unsigned long>, std::__1::hash<AG::data::ptr<AG::Graph::TreeElement>>, std::__1::equal_to<AG::data::ptr<AG::Graph::TreeElement>>, true>, std::__1::__unordered_map_equal<AG::data::ptr<AG::Graph::TreeElement>, std::__1::__hash_value_type<AG::data::ptr<AG::Graph::TreeElement>, unsigned long>, std::__1::equal_to<AG::data::ptr<AG::Graph::TreeElement>>, std::__1::hash<AG::data::ptr<AG::Graph::TreeElement>>, true>, std::__1::allocator<std::__1::__hash_value_type<AG::data::ptr<AG::Graph::TreeElement>, unsigned long>>>::find<AG::data::ptr<AG::Graph::TreeElement>>(AG:...
                0x00000001acfc64e4 (   0x21c) std::__1::pair<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<AG::data::ptr<AG::Graph::TreeElement>, unsigned long>, void*>*>, bool> std::__1::__hash_table<std::__1::__hash_value_type<AG::data::ptr<AG::Graph::TreeElement>, unsigned long>, std::__1::__unordered_map_hasher<AG::data::ptr<AG::Graph::TreeElement>, std::__1::__hash_value_type<AG::data::ptr<AG::Graph::TreeElement>, unsigned long>, std::__1::hash<AG::data::ptr<AG::Graph::TreeElement>>, std::__1::equal_to<AG::data::ptr<AG::Graph::TreeElement>>, true>, std::__1::__unordered_map_equal<AG::data::ptr<AG::Graph::TreeElement>, std::__1::__hash_value_type<AG::data::ptr<AG::Graph::TreeElement>, unsigned long>, std::__1::equal_to<AG::data::ptr<AG::Graph::TreeElement>>, std::__1::hash<AG::data::ptr<AG::Graph::TreeElement>>, true>, std::__1::allocator<std::__1::__hash_value_type<AG::data::ptr<AG::Graph::TreeElement>, unsigned long>>>::__emplace_unique_key_args...
                0x00000001acfc6700 (    0xf0) void std::__1::__hash_table<std::__1::__hash_value_type<AG::data::ptr<AG::Graph::TreeElement>, unsigned long>, std::__1::__unordered_map_hasher<AG::data::ptr<AG::Graph::TreeElement>, std::__1::__hash_value_type<AG::data::ptr<AG::Graph::TreeElement>, unsigned long>, std::__1::hash<AG::data::ptr<AG::Graph::TreeElement>>, std::__1::equal_to<AG::data::ptr<AG::Graph::TreeElement>>, true>, std::__1::__unordered_map_equal<AG::data::ptr<AG::Graph::TreeElement>, std::__1::__hash_value_type<AG::data::ptr<AG::Graph::TreeElement>, unsigned long>, std::__1::equal_to<AG::data::ptr<AG::Graph::TreeElement>>, std::__1::hash<AG::data::ptr<AG::Graph::TreeElement>>, true>, std::__1::allocator<std::__1::__hash_value_type<AG::data::ptr<AG::Graph::TreeElement>, unsigned long>>>::__rehash<true>(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc67f0 (   0x15c) void std::__1::__hash_table<std::__1::__hash_value_type<AG::data::ptr<AG::Graph::TreeElement>, unsigned long>, std::__1::__unordered_map_hasher<AG::data::ptr<AG::Graph::TreeElement>, std::__1::__hash_value_type<AG::data::ptr<AG::Graph::TreeElement>, unsigned long>, std::__1::hash<AG::data::ptr<AG::Graph::TreeElement>>, std::__1::equal_to<AG::data::ptr<AG::Graph::TreeElement>>, true>, std::__1::__unordered_map_equal<AG::data::ptr<AG::Graph::TreeElement>, std::__1::__hash_value_type<AG::data::ptr<AG::Graph::TreeElement>, unsigned long>, std::__1::equal_to<AG::data::ptr<AG::Graph::TreeElement>>, std::__1::hash<AG::data::ptr<AG::Graph::TreeElement>>, true>, std::__1::allocator<std::__1::__hash_value_type<AG::data::ptr<AG::Graph::TreeElement>, unsigned long>>>::__do_rehash<true>(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc694c (   0x288) std::__1::pair<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<AG::Subgraph*, AG::Graph::TreeDataElement>, void*>*>, bool> std::__1::__hash_table<std::__1::__hash_value_type<AG::Subgraph*, AG::Graph::TreeDataElement>, std::__1::__unordered_map_hasher<AG::Subgraph*, std::__1::__hash_value_type<AG::Subgraph*, AG::Graph::TreeDataElement>, std::__1::hash<AG::Subgraph*>, std::__1::equal_to<AG::Subgraph*>, true>, std::__1::__unordered_map_equal<AG::Subgraph*, std::__1::__hash_value_type<AG::Subgraph*, AG::Graph::TreeDataElement>, std::__1::equal_to<AG::Subgraph*>, std::__1::hash<AG::Subgraph*>, true>, std::__1::allocator<std::__1::__hash_value_type<AG::Subgraph*, AG::Graph::TreeDataElement>>>::__emplace_unique_key_args<AG::Subgraph*, std::__1::piecewise_construct_t const&, std::__1::tuple<AG::Subgraph* const&>, std::__1::tuple<>>(AG::Subgraph* const&, std::__1::piecewise_construct_t const&, std::__1::tuple<AG::Sub...
                0x00000001acfc6bd4 (   0x21c) std::__1::pair<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<AG::data::ptr<AG::Graph::TreeElement>, unsigned long>, void*>*>, bool> std::__1::__hash_table<std::__1::__hash_value_type<AG::data::ptr<AG::Graph::TreeElement>, unsigned long>, std::__1::__unordered_map_hasher<AG::data::ptr<AG::Graph::TreeElement>, std::__1::__hash_value_type<AG::data::ptr<AG::Graph::TreeElement>, unsigned long>, std::__1::hash<AG::data::ptr<AG::Graph::TreeElement>>, std::__1::equal_to<AG::data::ptr<AG::Graph::TreeElement>>, true>, std::__1::__unordered_map_equal<AG::data::ptr<AG::Graph::TreeElement>, std::__1::__hash_value_type<AG::data::ptr<AG::Graph::TreeElement>, unsigned long>, std::__1::equal_to<AG::data::ptr<AG::Graph::TreeElement>>, std::__1::hash<AG::data::ptr<AG::Graph::TreeElement>>, true>, std::__1::allocator<std::__1::__hash_value_type<AG::data::ptr<AG::Graph::TreeElement>, unsigned long>>>::__emplace_unique_key_args...
                0x00000001acfc6df0 (    0x4c) std::__1::__hash_table<AG::data::ptr<AG::IndirectNode>, std::__1::hash<AG::data::ptr<AG::IndirectNode>>, std::__1::equal_to<AG::data::ptr<AG::IndirectNode>>, std::__1::allocator<AG::data::ptr<AG::IndirectNode>>>::~__hash_table() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc6e3c (    0xb4) std::__1::__hash_const_iterator<std::__1::__hash_node<AG::data::ptr<AG::IndirectNode>, void*>*> std::__1::__hash_table<AG::data::ptr<AG::IndirectNode>, std::__1::hash<AG::data::ptr<AG::IndirectNode>>, std::__1::equal_to<AG::data::ptr<AG::IndirectNode>>, std::__1::allocator<AG::data::ptr<AG::IndirectNode>>>::find<AG::data::ptr<AG::IndirectNode>>(AG::data::ptr<AG::IndirectNode> const&) const [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc6ef0 (   0x214) std::__1::pair<std::__1::__hash_iterator<std::__1::__hash_node<AG::data::ptr<AG::IndirectNode>, void*>*>, bool> std::__1::__hash_table<AG::data::ptr<AG::IndirectNode>, std::__1::hash<AG::data::ptr<AG::IndirectNode>>, std::__1::equal_to<AG::data::ptr<AG::IndirectNode>>, std::__1::allocator<AG::data::ptr<AG::IndirectNode>>>::__emplace_unique_key_args<AG::data::ptr<AG::IndirectNode>, AG::data::ptr<AG::IndirectNode> const&>(AG::data::ptr<AG::IndirectNode> const&, AG::data::ptr<AG::IndirectNode> const&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc7104 (    0xf0) void std::__1::__hash_table<AG::data::ptr<AG::IndirectNode>, std::__1::hash<AG::data::ptr<AG::IndirectNode>>, std::__1::equal_to<AG::data::ptr<AG::IndirectNode>>, std::__1::allocator<AG::data::ptr<AG::IndirectNode>>>::__rehash<true>(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc71f4 (   0x15c) void std::__1::__hash_table<AG::data::ptr<AG::IndirectNode>, std::__1::hash<AG::data::ptr<AG::IndirectNode>>, std::__1::equal_to<AG::data::ptr<AG::IndirectNode>>, std::__1::allocator<AG::data::ptr<AG::IndirectNode>>>::__do_rehash<true>(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc7350 (    0x2c) AG::Graph::Context::from_cf(AGGraphStorage*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc737c (     0x8) AG::Graph::Context::to_cf() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc7384 (    0x7c) AGGraphGetTypeID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc7400 (    0xcc) AGGraphCreateShared [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc74cc (     0x8) AGGraphCreate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc74d4 (    0x2c) AGGraphGetGraphContext [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc7500 (    0x38) AGGraphInvalidate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc7538 (    0x2c) AGGraphSetContext [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc7564 (    0x2c) AGGraphGetContext [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc7590 (    0xdc) AGGraphGetCounter [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc766c (    0x2c) (null) [FUNC, FunctionStarts] 
                0x00000001acfc7698 (    0x58) AGGraphSetUpdateCallback [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc76f0 (    0x58) AGGraphSetInvalidationCallback [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc7748 (    0x3c) AGGraphSetNeedsUpdate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc7784 (    0x38) AGGraphBeginDeferringSubgraphInvalidation [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc77bc (    0x40) AGGraphEndDeferringSubgraphInvalidation [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc77fc (     0x8) AGGraphContextGetGraph [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc7804 (    0x80) AGGraphGetAttributeGraph [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc7884 (    0x48) AGGraphGetAttributeSubgraph [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc78cc (    0x40) AGGraphGetCurrentAttribute [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc790c (    0x64) AGGraphCurrentAttributeWasModified [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc7970 (    0x68) AGGraphWithoutUpdate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc79d8 (    0x30) AGGraphClearUpdate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc7a08 (    0x18) AGGraphSetUpdate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc7a20 (   0x110) AGGraphWithUpdate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc7b30 (    0x6c) AGGraphWithMainThreadHandler [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc7b9c (    0x2c) AGGraphGetDeadline [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc7bc8 (    0x3c) AGGraphSetDeadline [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc7c04 (    0x7c) AGGraphHasDeadlinePassed [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc7c80 (    0x1c) AGGraphInternAttributeType [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc7c9c (    0x3c) AGCreateWeakAttribute [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc7cd8 (    0x60) AGWeakAttributeGetAttribute [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc7d38 (    0x58) AGGraphCreateAttribute [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc7d90 (    0x4c) AGGraphReadCachedAttribute [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc7ddc (   0x2d8) (anonymous namespace)::read_cached_attribute(unsigned long, AGSwiftMetadata const*, void const*, AGSwiftMetadata const*, unsigned int, unsigned int, unsigned char&, AG::ClosureFunctionCI<unsigned long, AGUnownedGraphContext*>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc80b4 (    0x48) AGGraphReadCachedAttributeIfExists [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc80fc (     0xc) AGGraphCreateOffsetAttribute [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc8108 (    0xd8) (anonymous namespace)::create_offset_attribute(unsigned int, unsigned long, std::__1::optional<unsigned long>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc81e0 (     0x8) AGGraphCreateOffsetAttribute2 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc81e8 (     0xc) AGGraphCreateIndirectAttribute [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc81f4 (    0x5c) (anonymous namespace)::create_indirect_attribute(unsigned int, std::__1::optional<unsigned long>) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc8250 (     0x8) AGGraphCreateIndirectAttribute2 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc8258 (    0x24) AGGraphGetIndirectAttribute [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc827c (    0x70) AGGraphSetIndirectAttribute [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc82ec (    0x68) AGGraphGetIndirectDependency [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc8354 (    0x70) AGGraphSetIndirectDependency [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc83c4 (    0x48) AGGraphGetFlags [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc840c (    0x60) AGGraphSetFlags [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc846c (    0x98) AGGraphGetAttributeInfo [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc8504 (    0xa4) AGGraphMutateAttribute [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc85a8 (   0x100) AGGraphVerifyType [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc86a8 (    0xe4) AGGraphAddInput [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc878c (    0x3c) AGGraphInvalidateAllValues [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc87c8 (    0x98) AGGraphInvalidateValue [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc8860 (    0x98) AGGraphHasValue [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc88f8 (   0x264) AGGraphGetInputValue [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc8b5c (   0x280) AGGraphGetValue [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc8ddc (   0x28c) AGGraphGetWeakValue [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc9068 (    0x9c) AGGraphUpdateValue [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc9104 (    0xd0) AGGraphPrefetchValue [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc91d4 (    0x80) AGGraphGetValueState [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc9254 (    0x9c) AGGraphSetValue [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc92f0 (   0x46c) AGGraphSetOutputValue [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc975c (    0x70) AGGraphGetOutputValue [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc97cc (    0x74) AGGraphAnyInputsChanged [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc9840 (    0x80) AGGraphSearch [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc98c0 (    0x60) AGGraphStartProfiling [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc9920 (    0x58) AGGraphStopProfiling [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc9978 (    0x6c) AGGraphIsProfilingEnabled [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc99e4 (    0x58) AGGraphResetProfile [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc9a3c (    0x7c) AGGraphMarkProfile [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc9ab8 (    0xa4) AGGraphBeginProfileEvent [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc9b5c (    0xbc) AGGraphEndProfileEvent [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc9c18 (     0x8) AGGraphStartTracing [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc9c20 (   0x14c) AGGraphStartTracing2 [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc9d6c (    0x58) AGGraphStopTracing [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc9dc4 (    0x58) AGGraphSyncTracing [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc9e1c (    0xac) AGGraphDescription [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc9ec8 (     0xc) AGGraphArchiveJSON [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc9ed4 (    0x14) auto (anonymous namespace)::graph_type_id()::$_0::__invoke<void const*>(void const*) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc9ee8 (    0x70) AG::misc_log() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc9f58 (    0x70) AG::error_log() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfc9fc8 (    0xd8) AG::precondition_failure(char const*, ...) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfca0a0 (    0x88) AG::non_fatal_precondition_failure(char const*, ...) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfca128 (    0x44) util::Heap::Heap(void*, unsigned long, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfca16c (    0x6c) util::Heap::reset(void*, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfca1d8 (    0x44) util::Heap::Heap(void*, unsigned long, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfca21c (    0xbc) util::Heap::alloc_(unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfca2d8 (    0x8c) AGGraphPrepareTrace [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfca364 (     0x4) ExternalTrace::~ExternalTrace() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfca368 (    0x28) AGGraphIsTracingActive [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfca390 (    0xb8) AGGraphSetTrace [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfca448 (    0x30) AGGraphResetTrace [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfca478 (    0xa4) AGGraphAddTrace [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfca51c (    0x3c) AGGraphRemoveTrace [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfca558 (    0xa8) AGGraphAddTraceEvent [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfca600 (   0x110) AGGraphRegisterNamedTraceEvent [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfca710 (    0x68) AGGraphGetTraceEventSubsystem [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfca778 (    0x68) AGGraphGetTraceEventName [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfca7e0 (    0x90) AGGraphTraceEventEnabled [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfca870 (    0xc0) AGGraphAddNamedTraceEvent [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfca930 (     0x4) ExternalTrace::~ExternalTrace() [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfca934 (    0x80) ExternalTrace::begin_trace(AG::Graph&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfca9b4 (    0x80) ExternalTrace::end_trace(AG::Graph&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfcaa34 (    0x74) ExternalTrace::begin_update(AG::Subgraph&, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfcaaa8 (    0x6c) ExternalTrace::end_update(AG::Subgraph&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfcab14 (    0x1c) ExternalTrace::begin_update(AG::Graph::UpdateStack&, AG::data::ptr<AG::Node>, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfcab30 (    0x28) ExternalTrace::end_update(AG::Graph::UpdateStack&, AG::data::ptr<AG::Node>, AG::Graph::UpdateStatus) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfcab58 (    0x18) ExternalTrace::begin_update(AG::data::ptr<AG::Node>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfcab70 (    0x18) ExternalTrace::end_update(AG::data::ptr<AG::Node>, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfcab88 (    0x6c) ExternalTrace::begin_update(AG::Graph::Context&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfcabf4 (    0x6c) ExternalTrace::end_update(AG::Graph::Context&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfcac60 (    0x74) ExternalTrace::begin_invalidation(AG::Graph::Context&, AG::AttributeID) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfcacd4 (    0x74) ExternalTrace::end_invalidation(AG::Graph::Context&, AG::AttributeID) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfcad48 (    0x18) ExternalTrace::begin_modify(AG::data::ptr<AG::Node>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfcad60 (    0x18) ExternalTrace::end_modify(AG::data::ptr<AG::Node>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfcad78 (    0x88) ExternalTrace::begin_event(AG::data::ptr<AG::Node>, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfcae00 (    0x88) ExternalTrace::end_event(AG::data::ptr<AG::Node>, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfcae88 (    0x6c) ExternalTrace::created(AG::Graph::Context&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfcaef4 (    0x6c) ExternalTrace::destroy(AG::Graph::Context&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfcaf60 (    0x6c) ExternalTrace::needs_update(AG::Graph::Context&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfcafcc (    0x6c) ExternalTrace::created(AG::Subgraph&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfcb038 (    0x6c) ExternalTrace::invalidate(AG::Subgraph&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfcb0a4 (    0x8c) ExternalTrace::add_child(AG::Subgraph&, AG::Subgraph&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfcb130 (    0x8c) ExternalTrace::remove_child(AG::Subgraph&, AG::Subgraph&) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfcb1bc (    0x18) ExternalTrace::added(AG::data::ptr<AG::Node>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfcb1d4 (    0x18) ExternalTrace::add_edge(AG::data::ptr<AG::Node>, AG::AttributeID, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfcb1ec (    0x44) ExternalTrace::remove_edge(AG::data::ptr<AG::Node>, unsigned long) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfcb230 (    0x44) ExternalTrace::set_edge_pending(AG::data::ptr<AG::Node>, unsigned long, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfcb274 (    0x18) ExternalTrace::set_dirty(AG::data::ptr<AG::Node>, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfcb28c (    0x18) ExternalTrace::set_pending(AG::data::ptr<AG::Node>, bool) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfcb2a4 (    0x18) ExternalTrace::set_value(AG::data::ptr<AG::Node>, void const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfcb2bc (    0x18) ExternalTrace::mark_value(AG::data::ptr<AG::Node>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfcb2d4 (    0x1c) ExternalTrace::added(AG::data::ptr<AG::IndirectNode>) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfcb2f0 (    0x1c) ExternalTrace::set_source(AG::data::ptr<AG::IndirectNode>, AG::AttributeID) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfcb30c (    0x1c) ExternalTrace::set_dependency(AG::data::ptr<AG::IndirectNode>, AG::AttributeID) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfcb328 (    0x68) ExternalTrace::mark_profile(AG::Graph&, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfcb390 (    0x98) ExternalTrace::custom_event(AG::Graph::Context&, char const*, void const*, AGSwiftMetadata const*) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfcb428 (    0xb8) ExternalTrace::named_event(AG::Graph::Context&, unsigned int, unsigned long, unsigned int const*, __CFData const*, unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfcb4e0 (    0x38) ExternalTrace::named_event_enabled(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfcb518 (    0x44) AG::vector<std::__1::pair<char const*, char const*>, 0ul, unsigned int>::reserve_slow(unsigned int) [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfcb55c (     0x4) AGDebugServerStart [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfcb560 (     0x4) AGDebugServerStop [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfcb564 (    0x18) AGDebugServerCopyURL [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfcb57c (    0x1c) AGDebugServerRun [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfcb598 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001acfcb5b0 (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001acfcb5b8 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfcb5bc (    0x44) (null) [FUNC, FunctionStarts] 
                0x00000001acfcb600 (    0x48) (null) [FUNC, FunctionStarts] 
                0x00000001acfcb648 (    0x40) (null) [FUNC, FunctionStarts] 
                0x00000001acfcb688 (    0x30) (null) [FUNC, FunctionStarts] 
                0x00000001acfcb6b8 (    0x6c) (null) [FUNC, FunctionStarts] 
                0x00000001acfcb724 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfcb728 (     0xc) (null) [FUNC, FunctionStarts] 
                0x00000001acfcb734 (    0x34) (null) [FUNC, FunctionStarts] 
                0x00000001acfcb768 (    0x44) (null) [FUNC, FunctionStarts] 
                0x00000001acfcb7ac (    0x60) (null) [FUNC, FunctionStarts] 
                0x00000001acfcb80c (    0x5c) (null) [FUNC, FunctionStarts] 
                0x00000001acfcb868 (    0x3c) (null) [FUNC, FunctionStarts] 
                0x00000001acfcb8a4 (    0x58) (null) [FUNC, FunctionStarts] 
                0x00000001acfcb8fc (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001acfcb904 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001acfcb91c (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfcb920 (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001acfcb928 (    0x20) (null) [FUNC, FunctionStarts] 
                0x00000001acfcb948 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfcb94c (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001acfcb954 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfcb958 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001acfcb970 (    0x44) (null) [FUNC, FunctionStarts] 
                0x00000001acfcb9b4 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfcb9b8 (    0x6c) (null) [FUNC, FunctionStarts] 
                0x00000001acfcba24 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfcba28 (   0x100) (null) [FUNC, FunctionStarts] 
                0x00000001acfcbb28 (   0x144) (null) [FUNC, FunctionStarts] 
                0x00000001acfcbc6c (   0x100) (null) [FUNC, FunctionStarts] 
                0x00000001acfcbd6c (    0x44) (null) [FUNC, FunctionStarts] 
                0x00000001acfcbdb0 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfcbdb4 (    0x30) (null) [FUNC, FunctionStarts] 
                0x00000001acfcbde4 (    0x6c) (null) [FUNC, FunctionStarts] 
                0x00000001acfcbe50 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfcbe54 (    0x40) (null) [FUNC, FunctionStarts] 
                0x00000001acfcbe94 (   0x1e8) (null) [FUNC, FunctionStarts] 
                0x00000001acfcc07c (    0x34) (null) [FUNC, FunctionStarts] 
                0x00000001acfcc0b0 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfcc0b4 (     0xc) (null) [FUNC, FunctionStarts] 
                0x00000001acfcc0c0 (    0x60) (null) [FUNC, FunctionStarts] 
                0x00000001acfcc120 (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001acfcc128 (    0x3c) (null) [FUNC, FunctionStarts] 
                0x00000001acfcc164 (    0x4c) (null) [FUNC, FunctionStarts] 
                0x00000001acfcc1b0 (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001acfcc1b8 (     0xc) (null) [FUNC, FunctionStarts] 
                0x00000001acfcc1c4 (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001acfcc1cc (    0x54) (null) [FUNC, FunctionStarts] 
                0x00000001acfcc220 (    0x58) (null) [FUNC, FunctionStarts] 
                0x00000001acfcc278 (    0x28) (null) [FUNC, FunctionStarts] 
                0x00000001acfcc2a0 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001acfcc2b4 (     0xc) (null) [FUNC, FunctionStarts] 
                0x00000001acfcc2c0 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001acfcc2d4 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001acfcc2e8 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001acfcc2fc (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001acfcc310 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001acfcc324 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001acfcc33c (    0x78) (null) [FUNC, FunctionStarts] 
                0x00000001acfcc3b4 (    0x80) (null) [FUNC, FunctionStarts] 
                0x00000001acfcc434 (    0x44) (null) [FUNC, FunctionStarts] 
                0x00000001acfcc478 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001acfcc490 (    0x44) (null) [FUNC, FunctionStarts] 
                0x00000001acfcc4d4 (    0x54) (null) [FUNC, FunctionStarts] 
                0x00000001acfcc528 (    0x74) (null) [FUNC, FunctionStarts] 
                0x00000001acfcc59c (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001acfcc5b0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001acfcc5c0 (     0xc) (null) [FUNC, FunctionStarts] 
                0x00000001acfcc5cc (    0xbc) (null) [FUNC, FunctionStarts] 
                0x00000001acfcc688 (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001acfcc690 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001acfcc6a4 (    0x30) (null) [FUNC, FunctionStarts] 
                0x00000001acfcc6d4 (    0x2c) (null) [FUNC, FunctionStarts] 
                0x00000001acfcc700 (    0x24) (null) [FUNC, FunctionStarts] 
                0x00000001acfcc724 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001acfcc738 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001acfcc74c (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001acfcc760 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001acfcc774 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001acfcc784 (    0x2c) (null) [FUNC, FunctionStarts] 
                0x00000001acfcc7b0 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001acfcc7c4 (    0x4c) (null) [FUNC, FunctionStarts] 
                0x00000001acfcc810 (    0x58) (null) [FUNC, FunctionStarts] 
                0x00000001acfcc868 (    0x68) (null) [FUNC, FunctionStarts] 
                0x00000001acfcc8d0 (    0x8c) (null) [FUNC, FunctionStarts] 
                0x00000001acfcc95c (     0xc) (null) [FUNC, FunctionStarts] 
                0x00000001acfcc968 (     0xc) (null) [FUNC, FunctionStarts] 
                0x00000001acfcc974 (    0xc8) (null) [FUNC, FunctionStarts] 
                0x00000001acfcca3c (    0x20) (null) [FUNC, FunctionStarts] 
                0x00000001acfcca5c (    0x48) (null) [FUNC, FunctionStarts] 
                0x00000001acfccaa4 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001acfccab8 (    0x1c) (null) [FUNC, FunctionStarts] 
                0x00000001acfccad4 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfccad8 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfccadc (     0xc) (null) [FUNC, FunctionStarts] 
                0x00000001acfccae8 (     0xc) (null) [FUNC, FunctionStarts] 
                0x00000001acfccaf4 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfccaf8 (    0x48) keypath_getTm [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfccb40 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfccb44 (    0x40) keypath_setTm [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfccb84 (     0xc) (null) [FUNC, FunctionStarts] 
                0x00000001acfccb90 (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001acfccb98 (     0xc) __swift_memcpy8_4 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfccba4 (     0x4) __swift_noop_void_return [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfccba8 (    0x20) (null) [FUNC, FunctionStarts] 
                0x00000001acfccbc8 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfccbcc (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001acfccbe4 (     0xc) __swift_memcpy16_8 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfccbf0 (    0x20) (null) [FUNC, FunctionStarts] 
                0x00000001acfccc10 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfccc14 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001acfccc28 (     0xc) __swift_memcpy8_8 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfccc34 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfccc38 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfccc3c (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001acfccc50 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfccc54 (    0x28) (null) [FUNC, FunctionStarts] 
                0x00000001acfccc7c (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001acfccc90 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfccc94 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfccc98 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001acfcccac (    0x14) __swift_memcpy24_8 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfcccc0 (    0x20) (null) [FUNC, FunctionStarts] 
                0x00000001acfccce0 (    0x2c) (null) [FUNC, FunctionStarts] 
                0x00000001acfccd0c (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001acfccd20 (    0x14) __swift_memcpy20_1 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfccd34 (    0x20) (null) [FUNC, FunctionStarts] 
                0x00000001acfccd54 (    0x2c) (null) [FUNC, FunctionStarts] 
                0x00000001acfccd80 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001acfccd94 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfccd98 (    0x44) (null) [FUNC, FunctionStarts] 
                0x00000001acfccddc (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfccde0 (    0x3c) (null) [FUNC, FunctionStarts] 
                0x00000001acfcce1c (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001acfcce30 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001acfcce44 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001acfcce58 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfcce5c (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001acfcce70 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001acfcce84 (    0x40) (null) [FUNC, FunctionStarts] 
                0x00000001acfccec4 (    0x48) (null) [FUNC, FunctionStarts] 
                0x00000001acfccf0c (    0x2c) (null) [FUNC, FunctionStarts] 
                0x00000001acfccf38 (    0xbc) (null) [FUNC, FunctionStarts] 
                0x00000001acfccff4 (    0x48) (null) [FUNC, FunctionStarts] 
                0x00000001acfcd03c (    0x48) (null) [FUNC, FunctionStarts] 
                0x00000001acfcd084 (    0x48) (null) [FUNC, FunctionStarts] 
                0x00000001acfcd0cc (    0x48) (null) [FUNC, FunctionStarts] 
                0x00000001acfcd114 (    0x48) (null) [FUNC, FunctionStarts] 
                0x00000001acfcd15c (    0x48) (null) [FUNC, FunctionStarts] 
                0x00000001acfcd1a4 (    0x48) (null) [FUNC, FunctionStarts] 
                0x00000001acfcd1ec (    0x48) (null) [FUNC, FunctionStarts] 
                0x00000001acfcd234 (    0x48) (null) [FUNC, FunctionStarts] 
                0x00000001acfcd27c (    0x48) (null) [FUNC, FunctionStarts] 
                0x00000001acfcd2c4 (    0x48) (null) [FUNC, FunctionStarts] 
                0x00000001acfcd30c (    0x48) (null) [FUNC, FunctionStarts] 
                0x00000001acfcd354 (    0x48) (null) [FUNC, FunctionStarts] 
                0x00000001acfcd39c (    0x48) (null) [FUNC, FunctionStarts] 
                0x00000001acfcd3e4 (    0x5c) (null) [FUNC, FunctionStarts] 
                0x00000001acfcd440 (    0x48) __swift_instantiateConcreteTypeFromMangledNameAbstract [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfcd488 (    0x38) (null) [FUNC, FunctionStarts] 
                0x00000001acfcd4c0 (    0x30) __swift_instantiateGenericMetadata [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfcd4f0 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001acfcd504 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfcd508 (    0x28) (null) [FUNC, FunctionStarts] 
                0x00000001acfcd530 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001acfcd544 (    0x14) __swift_memcpy48_8 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfcd558 (    0x5c) (null) [FUNC, FunctionStarts] 
                0x00000001acfcd5b4 (    0x60) (null) [FUNC, FunctionStarts] 
                0x00000001acfcd614 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001acfcd628 (    0x44) (null) [FUNC, FunctionStarts] 
                0x00000001acfcd66c (    0x3c) (null) [FUNC, FunctionStarts] 
                0x00000001acfcd6a8 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001acfcd6bc (    0x34) (null) [FUNC, FunctionStarts] 
                0x00000001acfcd6f0 (    0x1c) __swift_memcpy56_8 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfcd70c (    0x44) (null) [FUNC, FunctionStarts] 
                0x00000001acfcd750 (    0x4c) (null) [FUNC, FunctionStarts] 
                0x00000001acfcd79c (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001acfcd7b0 (    0x48) (null) [FUNC, FunctionStarts] 
                0x00000001acfcd7f8 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfcd7fc (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001acfcd814 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001acfcd82c (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfcd830 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfcd834 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfcd838 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfcd83c (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001acfcd854 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001acfcd86c (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfcd870 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfcd874 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfcd878 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfcd87c (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfcd880 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfcd884 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfcd888 (    0x80) (null) [FUNC, FunctionStarts] 
                0x00000001acfcd908 (    0x7c) (null) [FUNC, FunctionStarts] 
                0x00000001acfcd984 (    0xa8) (null) [FUNC, FunctionStarts] 
                0x00000001acfcda2c (    0x94) (null) [FUNC, FunctionStarts] 
                0x00000001acfcdac0 (    0x90) (null) [FUNC, FunctionStarts] 
                0x00000001acfcdb50 (   0x208) (null) [FUNC, FunctionStarts] 
                0x00000001acfcdd58 (    0xf0) (null) [FUNC, FunctionStarts] 
                0x00000001acfcde48 (   0x1e0) (null) [FUNC, FunctionStarts] 
                0x00000001acfce028 (    0x30) (null) [FUNC, FunctionStarts] 
                0x00000001acfce058 (    0x30) (null) [FUNC, FunctionStarts] 
                0x00000001acfce088 (   0x274) (null) [FUNC, FunctionStarts] 
                0x00000001acfce2fc (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001acfce314 (    0x80) (null) [FUNC, FunctionStarts] 
                0x00000001acfce394 (    0x98) (null) [FUNC, FunctionStarts] 
                0x00000001acfce42c (   0x118) (null) [FUNC, FunctionStarts] 
                0x00000001acfce544 (   0x210) (null) [FUNC, FunctionStarts] 
                0x00000001acfce754 (    0xdc) (null) [FUNC, FunctionStarts] 
                0x00000001acfce830 (    0xa0) (null) [FUNC, FunctionStarts] 
                0x00000001acfce8d0 (   0x180) (null) [FUNC, FunctionStarts] 
                0x00000001acfcea50 (    0xa0) (null) [FUNC, FunctionStarts] 
                0x00000001acfceaf0 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfceaf4 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfceaf8 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfceafc (    0x38) (null) [FUNC, FunctionStarts] 
                0x00000001acfceb34 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfceb38 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001acfceb50 (    0x40) (null) [FUNC, FunctionStarts] 
                0x00000001acfceb90 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001acfceba0 (    0x3c) (null) [FUNC, FunctionStarts] 
                0x00000001acfcebdc (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001acfcebf0 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001acfcec04 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001acfcec18 (    0x60) (null) [FUNC, FunctionStarts] 
                0x00000001acfcec78 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001acfcec88 (     0xc) (null) [FUNC, FunctionStarts] 
                0x00000001acfcec94 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001acfcecac (    0x98) (null) [FUNC, FunctionStarts] 
                0x00000001acfced44 (    0x60) (null) [FUNC, FunctionStarts] 
                0x00000001acfceda4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001acfcedb4 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001acfcedcc (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001acfcede4 (    0x60) (null) [FUNC, FunctionStarts] 
                0x00000001acfcee44 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001acfcee54 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001acfcee6c (    0x24) (null) [FUNC, FunctionStarts] 
                0x00000001acfcee90 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001acfceea8 (    0x50) (null) [FUNC, FunctionStarts] 
                0x00000001acfceef8 (    0x80) (null) [FUNC, FunctionStarts] 
                0x00000001acfcef78 (    0x7c) (null) [FUNC, FunctionStarts] 
                0x00000001acfceff4 (    0xa8) (null) [FUNC, FunctionStarts] 
                0x00000001acfcf09c (    0x90) (null) [FUNC, FunctionStarts] 
                0x00000001acfcf12c (    0x3c) (null) [FUNC, FunctionStarts] 
                0x00000001acfcf168 (    0xf0) (null) [FUNC, FunctionStarts] 
                0x00000001acfcf258 (    0x80) (null) [FUNC, FunctionStarts] 
                0x00000001acfcf2d8 (    0x30) (null) [FUNC, FunctionStarts] 
                0x00000001acfcf308 (    0x38) (null) [FUNC, FunctionStarts] 
                0x00000001acfcf340 (    0x88) (null) [FUNC, FunctionStarts] 
                0x00000001acfcf3c8 (    0x94) (null) [FUNC, FunctionStarts] 
                0x00000001acfcf45c (    0x38) (null) [FUNC, FunctionStarts] 
                0x00000001acfcf494 (    0xbc) (null) [FUNC, FunctionStarts] 
                0x00000001acfcf550 (   0x15c) (null) [FUNC, FunctionStarts] 
                0x00000001acfcf6ac (   0x188) (null) [FUNC, FunctionStarts] 
                0x00000001acfcf834 (    0x30) (null) [FUNC, FunctionStarts] 
                0x00000001acfcf864 (   0x274) (null) [FUNC, FunctionStarts] 
                0x00000001acfcfad8 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001acfcfaf0 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001acfcfb08 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001acfcfb20 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001acfcfb38 (     0xc) (null) [FUNC, FunctionStarts] 
                0x00000001acfcfb44 (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001acfcfb4c (     0xc) (null) [FUNC, FunctionStarts] 
                0x00000001acfcfb58 (     0xc) (null) [FUNC, FunctionStarts] 
                0x00000001acfcfb64 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001acfcfb78 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001acfcfb8c (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001acfcfb94 (   0x164) (null) [FUNC, FunctionStarts] 
                0x00000001acfcfcf8 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001acfcfd10 (    0x50) (null) [FUNC, FunctionStarts] 
                0x00000001acfcfd60 (    0x98) (null) [FUNC, FunctionStarts] 
                0x00000001acfcfdf8 (    0x60) (null) [FUNC, FunctionStarts] 
                0x00000001acfcfe58 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001acfcfe68 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfcfe6c (    0x60) (null) [FUNC, FunctionStarts] 
                0x00000001acfcfecc (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001acfcfedc (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfcfee0 (    0x3c) (null) [FUNC, FunctionStarts] 
                0x00000001acfcff1c (     0xc) (null) [FUNC, FunctionStarts] 
                0x00000001acfcff28 (    0x64) (null) [FUNC, FunctionStarts] 
                0x00000001acfcff8c (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001acfcff94 (   0x1dc) (null) [FUNC, FunctionStarts] 
                0x00000001acfd0170 (   0x164) (null) [FUNC, FunctionStarts] 
                0x00000001acfd02d4 (    0x44) (null) [FUNC, FunctionStarts] 
                0x00000001acfd0318 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd031c (    0x20) (null) [FUNC, FunctionStarts] 
                0x00000001acfd033c (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001acfd0354 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001acfd0364 (    0x58) (null) [FUNC, FunctionStarts] 
                0x00000001acfd03bc (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001acfd03d4 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd03d8 (    0x50) (null) [FUNC, FunctionStarts] 
                0x00000001acfd0428 (    0x50) (null) [FUNC, FunctionStarts] 
                0x00000001acfd0478 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001acfd0490 (    0x44) (null) [FUNC, FunctionStarts] 
                0x00000001acfd04d4 (    0x20) (null) [FUNC, FunctionStarts] 
                0x00000001acfd04f4 (    0x6c) (null) [FUNC, FunctionStarts] 
                0x00000001acfd0560 (    0x20) (null) [FUNC, FunctionStarts] 
                0x00000001acfd0580 (    0x1c) (null) [FUNC, FunctionStarts] 
                0x00000001acfd059c (    0x1c) (null) [FUNC, FunctionStarts] 
                0x00000001acfd05b8 (    0x1c) (null) [FUNC, FunctionStarts] 
                0x00000001acfd05d4 (    0x28) (null) [FUNC, FunctionStarts] 
                0x00000001acfd05fc (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001acfd0604 (    0x2c) (null) [FUNC, FunctionStarts] 
                0x00000001acfd0630 (     0xc) (null) [FUNC, FunctionStarts] 
                0x00000001acfd063c (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001acfd0644 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd0648 (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001acfd0650 (    0x20) (null) [FUNC, FunctionStarts] 
                0x00000001acfd0670 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd0674 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd0678 (    0x2c) (null) [FUNC, FunctionStarts] 
                0x00000001acfd06a4 (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001acfd06ac (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd06b0 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd06b4 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001acfd06c4 (    0x4c) (null) [FUNC, FunctionStarts] 
                0x00000001acfd0710 (     0xc) (null) [FUNC, FunctionStarts] 
                0x00000001acfd071c (    0x58) (null) [FUNC, FunctionStarts] 
                0x00000001acfd0774 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd0778 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd077c (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001acfd0794 (    0x60) (null) [FUNC, FunctionStarts] 
                0x00000001acfd07f4 (   0x138) (null) [FUNC, FunctionStarts] 
                0x00000001acfd092c (    0x2c) (null) [FUNC, FunctionStarts] 
                0x00000001acfd0958 (    0x78) (null) [FUNC, FunctionStarts] 
                0x00000001acfd09d0 (    0x78) (null) [FUNC, FunctionStarts] 
                0x00000001acfd0a48 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd0a4c (    0x70) (null) [FUNC, FunctionStarts] 
                0x00000001acfd0abc (     0xc) (null) [FUNC, FunctionStarts] 
                0x00000001acfd0ac8 (   0x138) (null) [FUNC, FunctionStarts] 
                0x00000001acfd0c00 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001acfd0c18 (    0x8c) (null) [FUNC, FunctionStarts] 
                0x00000001acfd0ca4 (   0x138) (null) [FUNC, FunctionStarts] 
                0x00000001acfd0ddc (    0x2c) (null) [FUNC, FunctionStarts] 
                0x00000001acfd0e08 (   0x170) (null) [FUNC, FunctionStarts] 
                0x00000001acfd0f78 (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001acfd0f80 (    0x2c) (null) [FUNC, FunctionStarts] 
                0x00000001acfd0fac (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001acfd0fbc (    0x24) (null) [FUNC, FunctionStarts] 
                0x00000001acfd0fe0 (   0x1dc) (null) [FUNC, FunctionStarts] 
                0x00000001acfd11bc (    0x24) (null) [FUNC, FunctionStarts] 
                0x00000001acfd11e0 (    0x90) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1270 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1288 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd128c (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001acfd12a4 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd12a8 (    0x3c) (null) [FUNC, FunctionStarts] 
                0x00000001acfd12e4 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001acfd12fc (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1300 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1304 (    0x2c) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1330 (    0x50) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1380 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1398 (    0x50) (null) [FUNC, FunctionStarts] 
                0x00000001acfd13e8 (     0xc) (null) [FUNC, FunctionStarts] 
                0x00000001acfd13f4 (    0x28) (null) [FUNC, FunctionStarts] 
                0x00000001acfd141c (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1420 (    0x48) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1468 (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1470 (    0x2c) (null) [FUNC, FunctionStarts] 
                0x00000001acfd149c (    0x40) (null) [FUNC, FunctionStarts] 
                0x00000001acfd14dc (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001acfd14e4 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001acfd14f8 (    0xa4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd159c (    0xac) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1648 (    0xa8) (null) [FUNC, FunctionStarts] 
                0x00000001acfd16f0 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1704 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1708 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1720 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1738 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1750 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1768 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1780 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1798 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001acfd17b0 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd17b4 (    0x28) (null) [FUNC, FunctionStarts] 
                0x00000001acfd17dc (    0x1c) (null) [FUNC, FunctionStarts] 
                0x00000001acfd17f8 (    0x8c) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1884 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1888 (    0x58) (null) [FUNC, FunctionStarts] 
                0x00000001acfd18e0 (    0x1c) (null) [FUNC, FunctionStarts] 
                0x00000001acfd18fc (    0x48) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1944 (    0x24) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1968 (    0x2c) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1994 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001acfd19a4 (     0xc) (null) [FUNC, FunctionStarts] 
                0x00000001acfd19b0 (     0xc) (null) [FUNC, FunctionStarts] 
                0x00000001acfd19bc (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd19c0 (    0x30) (null) [FUNC, FunctionStarts] 
                0x00000001acfd19f0 (     0xc) (null) [FUNC, FunctionStarts] 
                0x00000001acfd19fc (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1a00 (    0x74) keypath_get.12Tm [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfd1a74 (    0x30) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1aa4 (     0xc) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1ab0 (     0xc) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1abc (     0xc) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1ac8 (     0xc) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1ad4 (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1adc (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1af4 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1b0c (    0x3c) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1b48 (    0x50) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1b98 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1ba8 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1bac (    0x94) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1c40 (    0x50) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1c90 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1ca0 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1ca4 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1ca8 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1cac (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1cb0 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1cb4 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1cb8 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1cbc (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1cd4 (    0x44) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1d18 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1d1c (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1d20 (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1d28 (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1d30 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1d34 (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1d3c (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1d44 (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1d4c (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1d54 (    0x3c) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1d90 (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1d98 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1dac (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1dc0 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1dd4 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1de8 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1dfc (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1e10 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1e24 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1e28 (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1e30 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1e34 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1e38 (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1e40 (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1e48 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1e4c (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1e54 (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1e5c (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1e60 (    0x58) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1eb8 (    0x6c) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1f24 (    0x7c) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1fa0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1fb0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1fc0 (    0x1c) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1fdc (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1fe4 (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1fec (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001acfd1ff4 (     0xc) (null) [FUNC, FunctionStarts] 
                0x00000001acfd2000 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001acfd2014 (    0x60) (null) [FUNC, FunctionStarts] 
                0x00000001acfd2074 (    0x34) (null) [FUNC, FunctionStarts] 
                0x00000001acfd20a8 (    0x6c) (null) [FUNC, FunctionStarts] 
                0x00000001acfd2114 (    0x94) (null) [FUNC, FunctionStarts] 
                0x00000001acfd21a8 (    0x44) __swift_instantiateConcreteTypeFromMangledName [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfd21ec (   0x188) (null) [FUNC, FunctionStarts] 
                0x00000001acfd2374 (    0x8c) (null) [FUNC, FunctionStarts] 
                0x00000001acfd2400 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd2404 (   0x574) (null) [FUNC, FunctionStarts] 
                0x00000001acfd2978 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd297c (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001acfd2984 (    0x2c) (null) [FUNC, FunctionStarts] 
                0x00000001acfd29b0 (    0x2c) (null) [FUNC, FunctionStarts] 
                0x00000001acfd29dc (    0x2c) (null) [FUNC, FunctionStarts] 
                0x00000001acfd2a08 (    0x2c) (null) [FUNC, FunctionStarts] 
                0x00000001acfd2a34 (    0x94) (null) [FUNC, FunctionStarts] 
                0x00000001acfd2ac8 (   0x178) (null) [FUNC, FunctionStarts] 
                0x00000001acfd2c40 (   0x114) (null) [FUNC, FunctionStarts] 
                0x00000001acfd2d54 (    0x58) (null) [FUNC, FunctionStarts] 
                0x00000001acfd2dac (    0x68) (null) [FUNC, FunctionStarts] 
                0x00000001acfd2e14 (    0x60) (null) [FUNC, FunctionStarts] 
                0x00000001acfd2e74 (   0x188) (null) [FUNC, FunctionStarts] 
                0x00000001acfd2ffc (    0x58) (null) [FUNC, FunctionStarts] 
                0x00000001acfd3054 (    0x48) (null) [FUNC, FunctionStarts] 
                0x00000001acfd309c (    0x6c) (null) [FUNC, FunctionStarts] 
                0x00000001acfd3108 (    0x68) (null) [FUNC, FunctionStarts] 
                0x00000001acfd3170 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001acfd3180 (    0xbc) (null) [FUNC, FunctionStarts] 
                0x00000001acfd323c (    0x78) (null) [FUNC, FunctionStarts] 
                0x00000001acfd32b4 (     0xc) (null) [FUNC, FunctionStarts] 
                0x00000001acfd32c0 (    0x3c) (null) [FUNC, FunctionStarts] 
                0x00000001acfd32fc (    0x70) (null) [FUNC, FunctionStarts] 
                0x00000001acfd336c (    0x70) (null) [FUNC, FunctionStarts] 
                0x00000001acfd33dc (    0x3c) (null) [FUNC, FunctionStarts] 
                0x00000001acfd3418 (    0xac) (null) [FUNC, FunctionStarts] 
                0x00000001acfd34c4 (   0x150) (null) [FUNC, FunctionStarts] 
                0x00000001acfd3614 (   0x134) (null) [FUNC, FunctionStarts] 
                0x00000001acfd3748 (    0x54) (null) [FUNC, FunctionStarts] 
                0x00000001acfd379c (    0x60) (null) [FUNC, FunctionStarts] 
                0x00000001acfd37fc (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001acfd3814 (    0x44) __swift_project_boxed_opaque_existential_1 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfd3858 (    0x50) __swift_destroy_boxed_opaque_existential_1 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfd38a8 (    0x3c) (null) [FUNC, FunctionStarts] 
                0x00000001acfd38e4 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd38e8 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd38ec (    0x20) (null) [FUNC, FunctionStarts] 
                0x00000001acfd390c (    0x28) (null) [FUNC, FunctionStarts] 
                0x00000001acfd3934 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001acfd3944 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001acfd3954 (    0x20) (null) [FUNC, FunctionStarts] 
                0x00000001acfd3974 (    0x20) (null) [FUNC, FunctionStarts] 
                0x00000001acfd3994 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd3998 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd399c (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd39a0 (    0x20) (null) [FUNC, FunctionStarts] 
                0x00000001acfd39c0 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd39c4 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd39c8 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001acfd39dc (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd39e0 (    0x38) (null) [FUNC, FunctionStarts] 
                0x00000001acfd3a18 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd3a1c (    0x34) (null) [FUNC, FunctionStarts] 
                0x00000001acfd3a50 (    0x64) (null) [FUNC, FunctionStarts] 
                0x00000001acfd3ab4 (    0x38) (null) [FUNC, FunctionStarts] 
                0x00000001acfd3aec (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd3af0 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001acfd3b04 (    0x4c) (null) [FUNC, FunctionStarts] 
                0x00000001acfd3b50 (    0x28) (null) [FUNC, FunctionStarts] 
                0x00000001acfd3b78 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd3b7c (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001acfd3b90 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd3b94 (    0x34) (null) [FUNC, FunctionStarts] 
                0x00000001acfd3bc8 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd3bcc (    0x38) (null) [FUNC, FunctionStarts] 
                0x00000001acfd3c04 (    0x44) (null) [FUNC, FunctionStarts] 
                0x00000001acfd3c48 (    0x2c) (null) [FUNC, FunctionStarts] 
                0x00000001acfd3c74 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd3c78 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd3c7c (    0x84) (null) [FUNC, FunctionStarts] 
                0x00000001acfd3d00 (    0x7c) (null) [FUNC, FunctionStarts] 
                0x00000001acfd3d7c (    0x4c) (null) [FUNC, FunctionStarts] 
                0x00000001acfd3dc8 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd3dcc (    0x44) (null) [FUNC, FunctionStarts] 
                0x00000001acfd3e10 (    0x48) (null) [FUNC, FunctionStarts] 
                0x00000001acfd3e58 (     0xc) (null) [FUNC, FunctionStarts] 
                0x00000001acfd3e64 (     0xc) (null) [FUNC, FunctionStarts] 
                0x00000001acfd3e70 (    0x84) (null) [FUNC, FunctionStarts] 
                0x00000001acfd3ef4 (    0x84) (null) [FUNC, FunctionStarts] 
                0x00000001acfd3f78 (     0xc) (null) [FUNC, FunctionStarts] 
                0x00000001acfd3f84 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd3f88 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd3f8c (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd3f90 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd3f94 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd3f98 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd3f9c (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd3fa0 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd3fa4 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd3fa8 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd3fac (    0x48) (null) [FUNC, FunctionStarts] 
                0x00000001acfd3ff4 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001acfd400c (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd4010 (    0x40) (null) [FUNC, FunctionStarts] 
                0x00000001acfd4050 (    0x2c) (null) [FUNC, FunctionStarts] 
                0x00000001acfd407c (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001acfd4084 (    0x4c) (null) [FUNC, FunctionStarts] 
                0x00000001acfd40d0 (   0x160) (null) [FUNC, FunctionStarts] 
                0x00000001acfd4230 (    0x88) (null) [FUNC, FunctionStarts] 
                0x00000001acfd42b8 (    0x5c) (null) [FUNC, FunctionStarts] 
                0x00000001acfd4314 (    0x5c) (null) [FUNC, FunctionStarts] 
                0x00000001acfd4370 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001acfd4388 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001acfd43a0 (    0x54) (null) [FUNC, FunctionStarts] 
                0x00000001acfd43f4 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd43f8 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001acfd4410 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001acfd4428 (    0x28) AGDispatchEquatable [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfd4450 (    0xa0) AGSetTypeForKey [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfd44f0 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd44f4 (    0x58) (null) [FUNC, FunctionStarts] 
                0x00000001acfd454c (    0x40) (null) [FUNC, FunctionStarts] 
                0x00000001acfd458c (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd4590 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001acfd45a8 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd45ac (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001acfd45bc (    0x4c) (null) [FUNC, FunctionStarts] 
                0x00000001acfd4608 (     0xc) (null) [FUNC, FunctionStarts] 
                0x00000001acfd4614 (    0x44) (null) [FUNC, FunctionStarts] 
                0x00000001acfd4658 (    0x20) (null) [FUNC, FunctionStarts] 
                0x00000001acfd4678 (    0x6c) (null) [FUNC, FunctionStarts] 
                0x00000001acfd46e4 (    0x20) (null) [FUNC, FunctionStarts] 
                0x00000001acfd4704 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd4708 (    0x6c) (null) [FUNC, FunctionStarts] 
                0x00000001acfd4774 (   0x144) (null) [FUNC, FunctionStarts] 
                0x00000001acfd48b8 (    0x2c) (null) [FUNC, FunctionStarts] 
                0x00000001acfd48e4 (    0x78) (null) [FUNC, FunctionStarts] 
                0x00000001acfd495c (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd4960 (    0x70) (null) [FUNC, FunctionStarts] 
                0x00000001acfd49d0 (   0x188) (null) [FUNC, FunctionStarts] 
                0x00000001acfd4b58 (    0x6c) (null) [FUNC, FunctionStarts] 
                0x00000001acfd4bc4 (   0x14c) (null) [FUNC, FunctionStarts] 
                0x00000001acfd4d10 (   0x144) (null) [FUNC, FunctionStarts] 
                0x00000001acfd4e54 (    0x2c) (null) [FUNC, FunctionStarts] 
                0x00000001acfd4e80 (   0x198) (null) [FUNC, FunctionStarts] 
                0x00000001acfd5018 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd501c (   0x1dc) (null) [FUNC, FunctionStarts] 
                0x00000001acfd51f8 (     0xc) (null) [FUNC, FunctionStarts] 
                0x00000001acfd5204 (    0x28) (null) [FUNC, FunctionStarts] 
                0x00000001acfd522c (    0x48) (null) [FUNC, FunctionStarts] 
                0x00000001acfd5274 (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001acfd527c (    0x2c) (null) [FUNC, FunctionStarts] 
                0x00000001acfd52a8 (    0x40) (null) [FUNC, FunctionStarts] 
                0x00000001acfd52e8 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001acfd52fc (    0x20) (null) [FUNC, FunctionStarts] 
                0x00000001acfd531c (    0x20) (null) [FUNC, FunctionStarts] 
                0x00000001acfd533c (    0x1c) (null) [FUNC, FunctionStarts] 
                0x00000001acfd5358 (    0x2c) (null) [FUNC, FunctionStarts] 
                0x00000001acfd5384 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001acfd5394 (     0xc) (null) [FUNC, FunctionStarts] 
                0x00000001acfd53a0 (     0xc) (null) [FUNC, FunctionStarts] 
                0x00000001acfd53ac (    0x48) (null) [FUNC, FunctionStarts] 
                0x00000001acfd53f4 (    0x24) (null) [FUNC, FunctionStarts] 
                0x00000001acfd5418 (     0xc) (null) [FUNC, FunctionStarts] 
                0x00000001acfd5424 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd5428 (    0x30) (null) [FUNC, FunctionStarts] 
                0x00000001acfd5458 (     0xc) (null) [FUNC, FunctionStarts] 
                0x00000001acfd5464 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd5468 (    0x74) keypath_get.11Tm [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfd54dc (    0x30) (null) [FUNC, FunctionStarts] 
                0x00000001acfd550c (     0xc) (null) [FUNC, FunctionStarts] 
                0x00000001acfd5518 (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001acfd5520 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001acfd5538 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd553c (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd5540 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd5544 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001acfd555c (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001acfd5574 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001acfd558c (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001acfd55a4 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001acfd55bc (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001acfd55d4 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001acfd55ec (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd55f0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001acfd5600 (    0x8c) (null) [FUNC, FunctionStarts] 
                0x00000001acfd568c (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001acfd56a0 (    0x64) (null) [FUNC, FunctionStarts] 
                0x00000001acfd5704 (    0x6c) (null) [FUNC, FunctionStarts] 
                0x00000001acfd5770 (    0x48) (null) [FUNC, FunctionStarts] 
                0x00000001acfd57b8 (    0x44) (null) [FUNC, FunctionStarts] 
                0x00000001acfd57fc (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001acfd5810 (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001acfd5818 (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001acfd5820 (     0xc) (null) [FUNC, FunctionStarts] 
                0x00000001acfd582c (     0xc) (null) [FUNC, FunctionStarts] 
                0x00000001acfd5838 (    0xb0) (null) [FUNC, FunctionStarts] 
                0x00000001acfd58e8 (    0xa4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd598c (    0x24) (null) [FUNC, FunctionStarts] 
                0x00000001acfd59b0 (    0x2c) (null) [FUNC, FunctionStarts] 
                0x00000001acfd59dc (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001acfd59e4 (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001acfd59ec (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001acfd59f4 (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001acfd59fc (    0x2c) (null) [FUNC, FunctionStarts] 
                0x00000001acfd5a28 (    0x48) (null) [FUNC, FunctionStarts] 
                0x00000001acfd5a70 (     0xc) (null) [FUNC, FunctionStarts] 
                0x00000001acfd5a7c (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001acfd5a84 (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001acfd5a8c (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001acfd5a94 (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001acfd5a9c (    0x24) (null) [FUNC, FunctionStarts] 
                0x00000001acfd5ac0 (    0x48) (null) [FUNC, FunctionStarts] 
                0x00000001acfd5b08 (    0x48) (null) [FUNC, FunctionStarts] 
                0x00000001acfd5b50 (    0x48) (null) [FUNC, FunctionStarts] 
                0x00000001acfd5b98 (    0x48) (null) [FUNC, FunctionStarts] 
                0x00000001acfd5be0 (    0x48) (null) [FUNC, FunctionStarts] 
                0x00000001acfd5c28 (   0x188) (null) [FUNC, FunctionStarts] 
                0x00000001acfd5db0 (   0x178) (null) [FUNC, FunctionStarts] 
                0x00000001acfd5f28 (   0x174) (null) [FUNC, FunctionStarts] 
                0x00000001acfd609c (    0xd4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd6170 (     0x4) _swift_stdlib_malloc_size [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfd6174 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001acfd618c (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001acfd61a4 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd61a8 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd61ac (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001acfd61b4 (    0x20) (null) [FUNC, FunctionStarts] 
                0x00000001acfd61d4 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd61d8 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd61dc (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001acfd61e4 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001acfd61fc (    0x7c) (null) [FUNC, FunctionStarts] 
                0x00000001acfd6278 (    0xb4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd632c (    0xac) (null) [FUNC, FunctionStarts] 
                0x00000001acfd63d8 (    0x78) (null) [FUNC, FunctionStarts] 
                0x00000001acfd6450 (    0x78) (null) [FUNC, FunctionStarts] 
                0x00000001acfd64c8 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001acfd64dc (     0xc) (null) [FUNC, FunctionStarts] 
                0x00000001acfd64e8 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001acfd64fc (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd6500 (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001acfd6508 (    0x20) (null) [FUNC, FunctionStarts] 
                0x00000001acfd6528 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd652c (    0x24) (null) [FUNC, FunctionStarts] 
                0x00000001acfd6550 (    0x74) (null) [FUNC, FunctionStarts] 
                0x00000001acfd65c4 (    0x74) (null) [FUNC, FunctionStarts] 
                0x00000001acfd6638 (    0x24) (null) [FUNC, FunctionStarts] 
                0x00000001acfd665c (    0x98) (null) [FUNC, FunctionStarts] 
                0x00000001acfd66f4 (   0x130) (null) [FUNC, FunctionStarts] 
                0x00000001acfd6824 (   0x180) (null) [FUNC, FunctionStarts] 
                0x00000001acfd69a4 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001acfd69b8 (    0x78) (null) [FUNC, FunctionStarts] 
                0x00000001acfd6a30 (    0xc0) (null) [FUNC, FunctionStarts] 
                0x00000001acfd6af0 (    0xac) (null) [FUNC, FunctionStarts] 
                0x00000001acfd6b9c (    0x78) (null) [FUNC, FunctionStarts] 
                0x00000001acfd6c14 (    0x78) (null) [FUNC, FunctionStarts] 
                0x00000001acfd6c8c (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001acfd6ca0 (     0xc) (null) [FUNC, FunctionStarts] 
                0x00000001acfd6cac (     0xc) (null) [FUNC, FunctionStarts] 
                0x00000001acfd6cb8 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001acfd6cd0 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001acfd6ce8 (    0x80) (null) [FUNC, FunctionStarts] 
                0x00000001acfd6d68 (    0x2c) (null) [FUNC, FunctionStarts] 
                0x00000001acfd6d94 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001acfd6dac (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001acfd6dc4 (    0x80) (null) [FUNC, FunctionStarts] 
                0x00000001acfd6e44 (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001acfd6e4c (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001acfd6e54 (     0xc) (null) [FUNC, FunctionStarts] 
                0x00000001acfd6e60 (     0xc) (null) [FUNC, FunctionStarts] 
                0x00000001acfd6e6c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001acfd6e7c (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001acfd6e84 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001acfd6e9c (   0x134) (null) [FUNC, FunctionStarts] 
                0x00000001acfd6fd0 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001acfd6fe8 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001acfd7000 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001acfd7018 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd701c (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd7020 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd7024 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd7028 (    0x54) (null) [FUNC, FunctionStarts] 
                0x00000001acfd707c (    0x58) (null) [FUNC, FunctionStarts] 
                0x00000001acfd70d4 (    0x54) (null) [FUNC, FunctionStarts] 
                0x00000001acfd7128 (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001acfd7130 (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001acfd7138 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd713c (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd7140 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd7144 (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001acfd714c (    0x20) (null) [FUNC, FunctionStarts] 
                0x00000001acfd716c (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd7170 (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001acfd7178 (    0x2c) (null) [FUNC, FunctionStarts] 
                0x00000001acfd71a4 (    0x20) (null) [FUNC, FunctionStarts] 
                0x00000001acfd71c4 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd71c8 (    0xf4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd72bc (    0xfc) (null) [FUNC, FunctionStarts] 
                0x00000001acfd73b8 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd73bc (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd73c0 (    0x54) (null) [FUNC, FunctionStarts] 
                0x00000001acfd7414 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd7418 (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001acfd7420 (    0x20) (null) [FUNC, FunctionStarts] 
                0x00000001acfd7440 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd7444 (    0x34) (null) [FUNC, FunctionStarts] 
                0x00000001acfd7478 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd747c (    0xfc) (null) [FUNC, FunctionStarts] 
                0x00000001acfd7578 (    0xfc) (null) [FUNC, FunctionStarts] 
                0x00000001acfd7674 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd7678 (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001acfd7680 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001acfd7698 (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001acfd76a0 (    0x38) (null) [FUNC, FunctionStarts] 
                0x00000001acfd76d8 (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001acfd76e0 (    0x38) (null) [FUNC, FunctionStarts] 
                0x00000001acfd7718 (    0x44) (null) [FUNC, FunctionStarts] 
                0x00000001acfd775c (    0x3c) (null) [FUNC, FunctionStarts] 
                0x00000001acfd7798 (    0x48) (null) [FUNC, FunctionStarts] 
                0x00000001acfd77e0 (    0x3c) (null) [FUNC, FunctionStarts] 
                0x00000001acfd781c (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001acfd7834 (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001acfd783c (    0x38) (null) [FUNC, FunctionStarts] 
                0x00000001acfd7874 (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001acfd787c (    0x38) (null) [FUNC, FunctionStarts] 
                0x00000001acfd78b4 (    0x44) (null) [FUNC, FunctionStarts] 
                0x00000001acfd78f8 (    0x3c) (null) [FUNC, FunctionStarts] 
                0x00000001acfd7934 (    0x48) (null) [FUNC, FunctionStarts] 
                0x00000001acfd797c (    0x40) (null) [FUNC, FunctionStarts] 
                0x00000001acfd79bc (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001acfd79d4 (    0x68) (null) [FUNC, FunctionStarts] 
                0x00000001acfd7a3c (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd7a40 (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001acfd7a48 (    0x20) (null) [FUNC, FunctionStarts] 
                0x00000001acfd7a68 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd7a6c (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd7a70 (    0x20) (null) [FUNC, FunctionStarts] 
                0x00000001acfd7a90 (    0x74) (null) [FUNC, FunctionStarts] 
                0x00000001acfd7b04 (    0x2c) (null) [FUNC, FunctionStarts] 
                0x00000001acfd7b30 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001acfd7b48 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001acfd7b58 (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001acfd7b60 (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001acfd7b68 (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001acfd7b70 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd7b74 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd7b78 (    0x34) (null) [FUNC, FunctionStarts] 
                0x00000001acfd7bac (    0x38) (null) [FUNC, FunctionStarts] 
                0x00000001acfd7be4 (    0x20) (null) [FUNC, FunctionStarts] 
                0x00000001acfd7c04 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd7c08 (    0x40) (null) [FUNC, FunctionStarts] 
                0x00000001acfd7c48 (    0x48) (null) [FUNC, FunctionStarts] 
                0x00000001acfd7c90 (     0xc) (null) [FUNC, FunctionStarts] 
                0x00000001acfd7c9c (     0xc) (null) [FUNC, FunctionStarts] 
                0x00000001acfd7ca8 (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001acfd7cb0 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd7cb4 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd7cb8 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd7cbc (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd7cc0 (    0x30) (null) [FUNC, FunctionStarts] 
                0x00000001acfd7cf0 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001acfd7d08 (    0x30) (null) [FUNC, FunctionStarts] 
                0x00000001acfd7d38 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd7d3c (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001acfd7d44 (    0x20) (null) [FUNC, FunctionStarts] 
                0x00000001acfd7d64 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd7d68 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd7d6c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001acfd7d7c (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd7d80 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd7d84 (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001acfd7d8c (    0x1c) (null) [FUNC, FunctionStarts] 
                0x00000001acfd7da8 (    0x4c) (null) [FUNC, FunctionStarts] 
                0x00000001acfd7df4 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd7df8 (    0xa4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd7e9c (     0xc) (null) [FUNC, FunctionStarts] 
                0x00000001acfd7ea8 (    0x28) (null) [FUNC, FunctionStarts] 
                0x00000001acfd7ed0 (    0x40) (null) [FUNC, FunctionStarts] 
                0x00000001acfd7f10 (    0x48) (null) [FUNC, FunctionStarts] 
                0x00000001acfd7f58 (    0x48) (null) [FUNC, FunctionStarts] 
                0x00000001acfd7fa0 (    0x2c) (null) [FUNC, FunctionStarts] 
                0x00000001acfd7fcc (    0x44) (null) [FUNC, FunctionStarts] 
                0x00000001acfd8010 (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001acfd8018 (    0x14) (null) [FUNC, FunctionStarts] 
                0x00000001acfd802c (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd8030 (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001acfd8038 (    0x20) (null) [FUNC, FunctionStarts] 
                0x00000001acfd8058 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd805c (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001acfd806c (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd8070 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001acfd8088 (    0x1c) (null) [FUNC, FunctionStarts] 
                0x00000001acfd80a4 (    0x4c) (null) [FUNC, FunctionStarts] 
                0x00000001acfd80f0 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd80f4 (    0x24) (null) [FUNC, FunctionStarts] 
                0x00000001acfd8118 (   0x110) (null) [FUNC, FunctionStarts] 
                0x00000001acfd8228 (   0x118) (null) [FUNC, FunctionStarts] 
                0x00000001acfd8340 (    0xa4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd83e4 (   0x110) (null) [FUNC, FunctionStarts] 
                0x00000001acfd84f4 (    0x30) (null) [FUNC, FunctionStarts] 
                0x00000001acfd8524 (    0x1c) (null) [FUNC, FunctionStarts] 
                0x00000001acfd8540 (    0x4c) (null) [FUNC, FunctionStarts] 
                0x00000001acfd858c (    0x24) (null) [FUNC, FunctionStarts] 
                0x00000001acfd85b0 (   0x1e0) (null) [FUNC, FunctionStarts] 
                0x00000001acfd8790 (     0xc) (null) [FUNC, FunctionStarts] 
                0x00000001acfd879c (    0x28) (null) [FUNC, FunctionStarts] 
                0x00000001acfd87c4 (    0x40) (null) [FUNC, FunctionStarts] 
                0x00000001acfd8804 (    0x48) (null) [FUNC, FunctionStarts] 
                0x00000001acfd884c (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001acfd8854 (    0x2c) (null) [FUNC, FunctionStarts] 
                0x00000001acfd8880 (    0x40) (null) [FUNC, FunctionStarts] 
                0x00000001acfd88c0 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001acfd88d0 (    0x20) (null) [FUNC, FunctionStarts] 
                0x00000001acfd88f0 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd88f4 (    0x54) (null) [FUNC, FunctionStarts] 
                0x00000001acfd8948 (    0x1c) (null) [FUNC, FunctionStarts] 
                0x00000001acfd8964 (    0x28) (null) [FUNC, FunctionStarts] 
                0x00000001acfd898c (    0x20) (null) [FUNC, FunctionStarts] 
                0x00000001acfd89ac (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd89b0 (    0x20) (null) [FUNC, FunctionStarts] 
                0x00000001acfd89d0 (     0xc) (null) [FUNC, FunctionStarts] 
                0x00000001acfd89dc (     0xc) (null) [FUNC, FunctionStarts] 
                0x00000001acfd89e8 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd89ec (    0x28) keypath_get.2Tm [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfd8a14 (    0x20) (null) [FUNC, FunctionStarts] 
                0x00000001acfd8a34 (     0xc) (null) [FUNC, FunctionStarts] 
                0x00000001acfd8a40 (    0x10) (null) [FUNC, FunctionStarts] 
                0x00000001acfd8a50 (     0x8) (null) [FUNC, FunctionStarts] 
                0x00000001acfd8a58 (    0x18) (null) [FUNC, FunctionStarts] 
                0x00000001acfd8a70 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd8a74 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd8a78 (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd8a7c (     0x4) (null) [FUNC, FunctionStarts] 
                0x00000001acfd8a80 (    0x50) AG::data::table::table() (.cold.1) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfd8ad0 (    0x2c) util::UntypedTable::create_buckets() (.cold.1) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfd8afc (    0x2c) AG::(anonymous namespace)::blocking_read(int, void*, unsigned long) (.cold.1) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfd8b28 (    0x2c) AG::(anonymous namespace)::blocking_write(int, void const*, unsigned long) (.cold.1) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001acfd8b54 (    0x7c) AG::non_fatal_precondition_failure(char const*, ...) (.cold.1) [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
            0x00000001acfd8bd0 (   0xe80) __TEXT __auth_stubs
                0x00000001acfd8bd0 (    0x10) DYLD-STUB$$$$$indirect-absolute-symbol$$$ [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd8be0 (    0x10) DYLD-STUB$$$$$indirect-absolute-symbol$$$ [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd8bf0 (    0x10) DYLD-STUB$$$$$indirect-absolute-symbol$$$ [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd8c00 (    0x10) DYLD-STUB$$$$$indirect-absolute-symbol$$$ [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd8c10 (    0x10) DYLD-STUB$$$$$indirect-absolute-symbol$$$ [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd8c20 (    0x10) DYLD-STUB$$$$$indirect-absolute-symbol$$$ [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd8c30 (    0x10) DYLD-STUB$$$$$indirect-absolute-symbol$$$ [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd8c40 (    0x10) DYLD-STUB$$$$$indirect-absolute-symbol$$$ [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd8c50 (    0x10) DYLD-STUB$$$$$indirect-absolute-symbol$$$ [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd8c60 (    0x10) DYLD-STUB$$$$$indirect-absolute-symbol$$$ [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd8c70 (    0x10) DYLD-STUB$$$$$indirect-absolute-symbol$$$ [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd8c80 (    0x10) DYLD-STUB$$$$$indirect-absolute-symbol$$$ [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd8c90 (    0x10) DYLD-STUB$$$$$indirect-absolute-symbol$$$ [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd8ca0 (    0x10) DYLD-STUB$$$$$indirect-absolute-symbol$$$ [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd8cb0 (    0x10) DYLD-STUB$$$$$indirect-absolute-symbol$$$ [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd8cc0 (    0x10) DYLD-STUB$$$$$indirect-absolute-symbol$$$ [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd8cd0 (    0x10) DYLD-STUB$$$$$indirect-absolute-symbol$$$ [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd8ce0 (    0x10) DYLD-STUB$$$$$indirect-absolute-symbol$$$ [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd8cf0 (    0x10) DYLD-STUB$$$$$indirect-absolute-symbol$$$ [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd8d00 (    0x10) DYLD-STUB$$$$$indirect-absolute-symbol$$$ [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd8d10 (    0x10) DYLD-STUB$$$$$indirect-absolute-symbol$$$ [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd8d20 (    0x10) DYLD-STUB$$$$$indirect-absolute-symbol$$$ [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd8d30 (    0x10) DYLD-STUB$$$$$indirect-absolute-symbol$$$ [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd8d40 (    0x10) DYLD-STUB$$$$$indirect-absolute-symbol$$$ [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd8d50 (    0x10) DYLD-STUB$$$$$indirect-absolute-symbol$$$ [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd8d60 (    0x10) DYLD-STUB$$$$$indirect-absolute-symbol$$$ [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd8d70 (    0x10) DYLD-STUB$$$$$indirect-absolute-symbol$$$ [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd8d80 (    0x10) DYLD-STUB$$$$$indirect-absolute-symbol$$$ [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd8d90 (    0x10) DYLD-STUB$$$$$indirect-absolute-symbol$$$ [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd8da0 (    0x10) DYLD-STUB$$$$$indirect-absolute-symbol$$$ [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd8db0 (    0x10) DYLD-STUB$$$$$indirect-absolute-symbol$$$ [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd8dc0 (    0x10) DYLD-STUB$$$$$indirect-absolute-symbol$$$ [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd8dd0 (    0x10) DYLD-STUB$$$$$indirect-absolute-symbol$$$ [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd8de0 (    0x10) DYLD-STUB$$$$$indirect-absolute-symbol$$$ [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd8df0 (    0x10) DYLD-STUB$$$$$indirect-absolute-symbol$$$ [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd8e00 (    0x10) DYLD-STUB$$$$$indirect-absolute-symbol$$$ [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd8e10 (    0x10) DYLD-STUB$$$$$indirect-absolute-symbol$$$ [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd8e20 (    0x10) DYLD-STUB$$$$$indirect-absolute-symbol$$$ [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd8e30 (    0x10) DYLD-STUB$$$$$indirect-absolute-symbol$$$ [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd8e40 (    0x10) DYLD-STUB$$$$$indirect-absolute-symbol$$$ [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd8e50 (    0x10) DYLD-STUB$$$$$indirect-absolute-symbol$$$ [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd8e60 (    0x10) DYLD-STUB$$$$$indirect-absolute-symbol$$$ [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd8e70 (    0x10) DYLD-STUB$$$$$indirect-absolute-symbol$$$ [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd8e80 (    0x10) DYLD-STUB$$$$$indirect-absolute-symbol$$$ [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd8e90 (    0x10) DYLD-STUB$$$$$indirect-absolute-symbol$$$ [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd8ea0 (    0x10) DYLD-STUB$$$$$indirect-absolute-symbol$$$ [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd8eb0 (    0x10) DYLD-STUB$$$$$indirect-absolute-symbol$$$ [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd8ec0 (    0x10) DYLD-STUB$$$$$indirect-absolute-symbol$$$ [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd8ed0 (    0x10) DYLD-STUB$$$$$indirect-absolute-symbol$$$ [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd8ee0 (    0x10) DYLD-STUB$$CC_SHA1_Final [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd8ef0 (    0x10) DYLD-STUB$$CC_SHA1_Init [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd8f00 (    0x10) DYLD-STUB$$CC_SHA1_Update [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd8f10 (    0x10) DYLD-STUB$$CFArrayGetCount [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd8f20 (    0x10) DYLD-STUB$$CFArrayGetValueAtIndex [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd8f30 (    0x10) DYLD-STUB$$CFDataCreateMutable [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd8f40 (    0x10) DYLD-STUB$$CFDataGetBytePtr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd8f50 (    0x10) DYLD-STUB$$CFDataGetLength [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd8f60 (    0x10) DYLD-STUB$$CFDataGetMutableBytePtr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd8f70 (    0x10) DYLD-STUB$$CFDataSetLength [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd8f80 (    0x10) DYLD-STUB$$CFGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd8f90 (    0x10) DYLD-STUB$$CFRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd8fa0 (    0x10) DYLD-STUB$$CFRetain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd8fb0 (    0x10) DYLD-STUB$$CFRunLoopAddObserver [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd8fc0 (    0x10) DYLD-STUB$$CFRunLoopGetMain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd8fd0 (    0x10) DYLD-STUB$$CFRunLoopObserverCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd8fe0 (    0x10) DYLD-STUB$$CFStringAppendCString [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd8ff0 (    0x10) DYLD-STUB$$CFStringCreateMutable [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9000 (    0x10) DYLD-STUB$$CFStringGetBytes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9010 (    0x10) DYLD-STUB$$CFStringGetLength [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9020 (    0x10) DYLD-STUB$$CFStringGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9030 (    0x10) DYLD-STUB$$CFURLCreateWithBytes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9040 (    0x10) DYLD-STUB$$NSClassFromString [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9050 (    0x10) DYLD-STUB$$NSTemporaryDirectory [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9060 (    0x10) DYLD-STUB$$_CFRuntimeCreateInstance [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9070 (    0x10) DYLD-STUB$$_CFRuntimeRegisterClass [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9080 (    0x10) DYLD-STUB$$_Unwind_Resume [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9090 (    0x10) DYLD-STUB$$std::bad_array_new_length::bad_array_new_length() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd90a0 (    0x10) DYLD-STUB$$std::__1::__next_prime(unsigned long) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd90b0 (    0x10) DYLD-STUB$$std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::append(char const*, unsigned long) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd90c0 (    0x10) DYLD-STUB$$std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::push_back(char) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd90d0 (    0x10) DYLD-STUB$$std::exception::~exception() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd90e0 (    0x10) DYLD-STUB$$std::terminate() [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd90f0 (    0x10) DYLD-STUB$$operator delete(void*) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9100 (    0x10) DYLD-STUB$$operator new(unsigned long) [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9110 (    0x10) DYLD-STUB$$__assert_rtn [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9120 (    0x10) DYLD-STUB$$__cxa_allocate_exception [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9130 (    0x10) DYLD-STUB$$__cxa_atexit [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9140 (    0x10) DYLD-STUB$$__cxa_begin_catch [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9150 (    0x10) DYLD-STUB$$__cxa_guard_abort [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9160 (    0x10) DYLD-STUB$$__cxa_guard_acquire [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9170 (    0x10) DYLD-STUB$$__cxa_guard_release [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9180 (    0x10) DYLD-STUB$$__cxa_throw [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9190 (    0x10) DYLD-STUB$$__darwin_check_fd_set_overflow [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd91a0 (    0x10) DYLD-STUB$$__error [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd91b0 (    0x10) DYLD-STUB$$__stack_chk_fail [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd91c0 (    0x10) DYLD-STUB$$_dyld_images_for_addresses [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd91d0 (    0x10) DYLD-STUB$$_os_log_error_impl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd91e0 (    0x10) DYLD-STUB$$_os_log_fault_impl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd91f0 (    0x10) DYLD-STUB$$_os_log_impl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9200 (    0x10) DYLD-STUB$$abort [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9210 (    0x10) DYLD-STUB$$accept [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9220 (    0x10) DYLD-STUB$$arc4random [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9230 (    0x10) DYLD-STUB$$asprintf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9240 (    0x10) DYLD-STUB$$atexit_b [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9250 (    0x10) DYLD-STUB$$atoi [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9260 (    0x10) DYLD-STUB$$backtrace [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9270 (    0x10) DYLD-STUB$$backtrace_image_offsets [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9280 (    0x10) DYLD-STUB$$bind [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9290 (    0x10) DYLD-STUB$$bzero [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd92a0 (    0x10) DYLD-STUB$$class_copyIvarList [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd92b0 (    0x10) DYLD-STUB$$close [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd92c0 (    0x10) DYLD-STUB$$dispatch_async_f [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd92d0 (    0x10) DYLD-STUB$$dispatch_get_global_queue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd92e0 (    0x10) DYLD-STUB$$dispatch_once [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd92f0 (    0x10) DYLD-STUB$$dispatch_once_f [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9300 (    0x10) DYLD-STUB$$dispatch_resume [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9310 (    0x10) DYLD-STUB$$dispatch_set_context [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9320 (    0x10) DYLD-STUB$$dispatch_source_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9330 (    0x10) DYLD-STUB$$dispatch_source_set_event_handler_f [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9340 (    0x10) DYLD-STUB$$dladdr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9350 (    0x10) DYLD-STUB$$fcntl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9360 (    0x10) DYLD-STUB$$fprintf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9370 (    0x10) DYLD-STUB$$fputc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9380 (    0x10) DYLD-STUB$$fputs [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9390 (    0x10) DYLD-STUB$$free [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd93a0 (    0x10) DYLD-STUB$$freeifaddrs [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd93b0 (    0x10) DYLD-STUB$$fwrite [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd93c0 (    0x10) DYLD-STUB$$getenv [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd93d0 (    0x10) DYLD-STUB$$getifaddrs [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd93e0 (    0x10) DYLD-STUB$$getpid [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd93f0 (    0x10) DYLD-STUB$$getsockname [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9400 (    0x10) DYLD-STUB$$gzclose [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9410 (    0x10) DYLD-STUB$$gzopen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9420 (    0x10) DYLD-STUB$$gzwrite [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9430 (    0x10) DYLD-STUB$$inet_ntop [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9440 (    0x10) DYLD-STUB$$ivar_getOffset [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9450 (    0x10) DYLD-STUB$$listen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9460 (    0x10) DYLD-STUB$$mach_absolute_time [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9470 (    0x10) DYLD-STUB$$mach_port_deallocate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9480 (    0x10) DYLD-STUB$$mach_timebase_info [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9490 (    0x10) DYLD-STUB$$mach_vm_region [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd94a0 (    0x10) DYLD-STUB$$madvise [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd94b0 (    0x10) DYLD-STUB$$malloc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd94c0 (    0x10) DYLD-STUB$$malloc_create_zone [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd94d0 (    0x10) DYLD-STUB$$malloc_good_size [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd94e0 (    0x10) DYLD-STUB$$malloc_set_zone_name [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd94f0 (    0x10) DYLD-STUB$$malloc_size [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9500 (    0x10) DYLD-STUB$$malloc_zone_free [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9510 (    0x10) DYLD-STUB$$malloc_zone_malloc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9520 (    0x10) DYLD-STUB$$memcpy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9530 (    0x10) DYLD-STUB$$memmove [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9540 (    0x10) DYLD-STUB$$memset [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9550 (    0x10) DYLD-STUB$$mmap [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9560 (    0x10) DYLD-STUB$$mprotect [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9570 (    0x10) DYLD-STUB$$objc_autorelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9580 (    0x10) DYLD-STUB$$objc_autoreleasePoolPop [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9590 (    0x10) DYLD-STUB$$objc_autoreleasePoolPush [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd95a0 (    0x10) DYLD-STUB$$objc_autoreleaseReturnValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd95b0 (    0x10) DYLD-STUB$$objc_enumerationMutation [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd95c0 (    0x10) DYLD-STUB$$objc_getClass [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd95d0 (    0x10) DYLD-STUB$$objc_msgSend [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd95e0 (    0x10) DYLD-STUB$$objc_opt_class [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd95f0 (    0x10) DYLD-STUB$$objc_opt_isKindOfClass [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9600 (    0x10) DYLD-STUB$$objc_opt_self [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9610 (    0x10) DYLD-STUB$$objc_release [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9620 (    0x10) DYLD-STUB$$objc_retain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9630 (    0x10) DYLD-STUB$$objc_retainAutorelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9640 (    0x10) DYLD-STUB$$objc_retainAutoreleasedReturnValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9650 (    0x10) DYLD-STUB$$open [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9660 (    0x10) DYLD-STUB$$os_log_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9670 (    0x10) DYLD-STUB$$os_log_type_enabled [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9680 (    0x10) DYLD-STUB$$os_unfair_lock_lock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9690 (    0x10) DYLD-STUB$$os_unfair_lock_trylock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd96a0 (    0x10) DYLD-STUB$$os_unfair_lock_unlock [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd96b0 (    0x10) DYLD-STUB$$os_variant_has_internal_diagnostics [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd96c0 (    0x10) DYLD-STUB$$perror [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd96d0 (    0x10) DYLD-STUB$$pthread_key_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd96e0 (    0x10) DYLD-STUB$$read [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd96f0 (    0x10) DYLD-STUB$$realloc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9700 (    0x10) DYLD-STUB$$select [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9710 (    0x10) DYLD-STUB$$setsockopt [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9720 (    0x10) DYLD-STUB$$snprintf_l [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9730 (    0x10) DYLD-STUB$$socket [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9740 (    0x10) DYLD-STUB$$strcasecmp [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9750 (    0x10) DYLD-STUB$$strcmp [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9760 (    0x10) DYLD-STUB$$strcspn [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9770 (    0x10) DYLD-STUB$$strdup [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9780 (    0x10) DYLD-STUB$$strlen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9790 (    0x10) DYLD-STUB$$strspn [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd97a0 (    0x10) DYLD-STUB$$strtol [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd97b0 (    0x10) DYLD-STUB$$swift_allocObject [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd97c0 (    0x10) DYLD-STUB$$swift_allocateGenericValueMetadata [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd97d0 (    0x10) DYLD-STUB$$swift_bridgeObjectRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd97e0 (    0x10) DYLD-STUB$$swift_bridgeObjectRelease_n [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd97f0 (    0x10) DYLD-STUB$$swift_bridgeObjectRetain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9800 (    0x10) DYLD-STUB$$swift_checkMetadataState [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9810 (    0x10) DYLD-STUB$$swift_conformsToProtocol [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9820 (    0x10) DYLD-STUB$$swift_deallocObject [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9830 (    0x10) DYLD-STUB$$swift_dynamicCast [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9840 (    0x10) DYLD-STUB$$swift_errorRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9850 (    0x10) DYLD-STUB$$swift_getAssociatedTypeWitness [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9860 (    0x10) DYLD-STUB$$swift_getAtKeyPath [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9870 (    0x10) DYLD-STUB$$swift_getForeignTypeMetadata [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9880 (    0x10) DYLD-STUB$$swift_getGenericMetadata [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9890 (    0x10) DYLD-STUB$$swift_getObjCClassMetadata [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd98a0 (    0x10) DYLD-STUB$$swift_getObjectType [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd98b0 (    0x10) DYLD-STUB$$swift_getTupleTypeMetadata [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd98c0 (    0x10) DYLD-STUB$$swift_getTupleTypeMetadata2 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd98d0 (    0x10) DYLD-STUB$$swift_getTypeByMangledNameInContext [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd98e0 (    0x10) DYLD-STUB$$swift_getTypeByMangledNameInContext2 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd98f0 (    0x10) DYLD-STUB$$swift_getTypeByMangledNameInContextInMetadataState2 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9900 (    0x10) DYLD-STUB$$swift_getTypeName [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9910 (    0x10) DYLD-STUB$$swift_getWitnessTable [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9920 (    0x10) DYLD-STUB$$swift_initStackObject [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9930 (    0x10) DYLD-STUB$$swift_isUniquelyReferencedNonObjC [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9940 (    0x10) DYLD-STUB$$swift_once [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9950 (    0x10) DYLD-STUB$$swift_release [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9960 (    0x10) DYLD-STUB$$swift_retain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9970 (    0x10) DYLD-STUB$$swift_slowAlloc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9980 (    0x10) DYLD-STUB$$swift_slowDealloc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9990 (    0x10) DYLD-STUB$$swift_unknownObjectRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd99a0 (    0x10) DYLD-STUB$$swift_willThrow [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd99b0 (    0x10) DYLD-STUB$$unlink [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd99c0 (    0x10) DYLD-STUB$$uuid_compare [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd99d0 (    0x10) DYLD-STUB$$uuid_copy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd99e0 (    0x10) DYLD-STUB$$uuid_generate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd99f0 (    0x10) DYLD-STUB$$uuid_is_null [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9a00 (    0x10) DYLD-STUB$$uuid_unparse [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9a10 (    0x10) DYLD-STUB$$vasprintf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9a20 (    0x10) DYLD-STUB$$vfprintf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9a30 (    0x10) DYLD-STUB$$vm_remap [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001acfd9a40 (    0x10) DYLD-STUB$$write [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
            0x00000001acfd9a50 (    0x20) __TEXT __objc_methlist
                0x00000001acfd9a50 (    0x20) _OBJC_$_CLASS_METHODS_AGAppObserver [NameNList, MangledNameNList, NList] 
            0x00000001acfd9a70 (  0x13a0) __TEXT __const
                0x00000001acfd9a70 (    0x40) AttributeGraphVersionString [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfd9ab0 (    0x18) AttributeGraphVersionNumber [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfd9ac8 (     0x1) std::__1::piecewise_construct [NameNList, MangledNameNList, NList] 
                0x00000001acfd9ac9 (    0x19) typeinfo name for std::bad_array_new_length [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfd9ae2 (     0xd) typeinfo name for std::bad_alloc [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfd9aef (     0xd) typeinfo name for std::exception [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfd9afc (    0x24) AGVersion [EXT, NameNList, MangledNameNList, NList] 
                0x00000001acfd9b20 (    0x20) std::__1::piecewise_construct [NameNList, MangledNameNList, NList] 
                0x00000001acfd9b40 (    0x20) typeinfo name for std::bad_variant_access [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfd9b60 (     0x8) std::__1::piecewise_construct [NameNList, MangledNameNList, NList] 
                0x00000001acfd9b68 (     0x8) AGAttributeNil [EXT, NameNList, MangledNameNList, NList] 
                0x00000001acfd9b70 (    0x38) AGAttributeNullType [EXT, NameNList, MangledNameNList, NList] 
                0x00000001acfd9ba8 (   0x160) AGAttributeNullVTable [EXT, NameNList, MangledNameNList, NList] 
                0x00000001acfd9d08 (   0x930) __unnamed_1 [NameNList, MangledNameNList, NList] 
                0x00000001acfda638 (   0x268) __unnamed_1 [NameNList, MangledNameNList, NList] 
                0x00000001acfda8a0 (    0x40) __unnamed_1 [NameNList, MangledNameNList, NList] 
                0x00000001acfda8e0 (   0x248) __swift_reflection_version [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdab28 (    0xd0) __unnamed_2 [NameNList, MangledNameNList, NList] 
                0x00000001acfdabf8 (    0x28) __unnamed_2 [NameNList, MangledNameNList, NList] 
                0x00000001acfdac20 (    0x30) __unnamed_5 [NameNList, MangledNameNList, NList] 
                0x00000001acfdac50 (   0x188) __unnamed_1 [NameNList, MangledNameNList, NList] 
                0x00000001acfdadd8 (    0x38) __unnamed_2 [NameNList, MangledNameNList, NList] 
            0x00000001acfdae10 (   0xfb0) __TEXT __gcc_except_tab
                0x00000001acfdae10 (    0x28) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001acfdae38 (    0x10) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001acfdae48 (    0x18) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x00000001acfdae60 (    0x14) GCC_except_table11 [NameNList, MangledNameNList, NList] 
                0x00000001acfdae74 (    0x14) GCC_except_table61 [NameNList, MangledNameNList, NList] 
                0x00000001acfdae88 (     0xc) GCC_except_table68 [NameNList, MangledNameNList, NList] 
                0x00000001acfdae94 (     0xc) GCC_except_table69 [NameNList, MangledNameNList, NList] 
                0x00000001acfdaea0 (    0x10) GCC_except_table70 [NameNList, MangledNameNList, NList] 
                0x00000001acfdaeb0 (    0x10) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x00000001acfdaec0 (    0x24) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x00000001acfdaee4 (     0xc) GCC_except_table13 [NameNList, MangledNameNList, NList] 
                0x00000001acfdaef0 (    0x14) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x00000001acfdaf04 (    0x14) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x00000001acfdaf18 (    0x1c) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x00000001acfdaf34 (    0x18) GCC_except_table10 [NameNList, MangledNameNList, NList] 
                0x00000001acfdaf4c (    0x18) GCC_except_table11 [NameNList, MangledNameNList, NList] 
                0x00000001acfdaf64 (    0x2c) GCC_except_table14 [NameNList, MangledNameNList, NList] 
                0x00000001acfdaf90 (    0x20) GCC_except_table15 [NameNList, MangledNameNList, NList] 
                0x00000001acfdafb0 (    0x44) GCC_except_table16 [NameNList, MangledNameNList, NList] 
                0x00000001acfdaff4 (    0x54) GCC_except_table17 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb048 (    0x10) GCC_except_table18 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb058 (    0x18) GCC_except_table12 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb070 (    0x34) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb0a4 (    0x10) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb0b4 (    0x48) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb0fc (    0x24) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb120 (    0x3c) GCC_except_table11 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb15c (    0x14) GCC_except_table12 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb170 (    0x10) GCC_except_table13 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb180 (    0x14) GCC_except_table14 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb194 (     0xc) GCC_except_table20 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb1a0 (    0x14) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb1b4 (    0x1c) GCC_except_table11 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb1d0 (    0x24) GCC_except_table16 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb1f4 (     0xc) GCC_except_table20 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb200 (     0xc) GCC_except_table21 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb20c (    0x14) GCC_except_table23 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb220 (    0x14) GCC_except_table25 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb234 (    0x18) GCC_except_table72 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb24c (    0x18) GCC_except_table87 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb264 (    0x18) GCC_except_table93 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb27c (    0x18) GCC_except_table101 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb294 (    0x18) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb2ac (    0x14) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb2c0 (    0x14) GCC_except_table10 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb2d4 (    0x18) GCC_except_table11 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb2ec (    0x28) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb314 (    0x28) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb33c (    0x1c) GCC_except_table11 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb358 (    0x24) GCC_except_table13 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb37c (    0x18) GCC_except_table14 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb394 (    0x1c) GCC_except_table18 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb3b0 (     0xc) GCC_except_table24 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb3bc (    0x20) GCC_except_table39 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb3dc (    0x14) GCC_except_table61 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb3f0 (    0x10) GCC_except_table81 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb400 (    0x10) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb410 (    0x50) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb460 (    0x14) GCC_except_table6 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb474 (    0x10) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb484 (    0x14) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb498 (    0x38) GCC_except_table13 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb4d0 (    0x34) GCC_except_table16 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb504 (    0x10) GCC_except_table17 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb514 (    0x14) GCC_except_table18 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb528 (    0x10) GCC_except_table22 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb538 (    0x10) GCC_except_table23 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb548 (     0xc) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb554 (    0x44) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb598 (    0x28) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb5c0 (    0x10) GCC_except_table7 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb5d0 (    0x10) GCC_except_table31 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb5e0 (    0x7c) GCC_except_table33 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb65c (    0x10) GCC_except_table35 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb66c (    0x10) GCC_except_table36 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb67c (    0x10) GCC_except_table37 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb68c (    0x28) GCC_except_table38 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb6b4 (    0x10) GCC_except_table40 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb6c4 (    0x20) GCC_except_table41 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb6e4 (    0x10) GCC_except_table42 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb6f4 (    0x14) GCC_except_table44 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb708 (    0x1c) GCC_except_table53 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb724 (    0x18) GCC_except_table55 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb73c (    0x10) GCC_except_table57 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb74c (    0x18) GCC_except_table82 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb764 (    0x1c) GCC_except_table1 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb780 (    0x10) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb790 (    0x40) GCC_except_table8 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb7d0 (    0x10) GCC_except_table12 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb7e0 (    0x1c) GCC_except_table19 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb7fc (    0x34) GCC_except_table22 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb830 (    0x30) GCC_except_table27 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb860 (    0x18) GCC_except_table29 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb878 (    0x28) GCC_except_table33 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb8a0 (    0x14) GCC_except_table34 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb8b4 (    0x10) GCC_except_table39 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb8c4 (    0x10) GCC_except_table40 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb8d4 (    0x10) GCC_except_table48 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb8e4 (    0x10) GCC_except_table68 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb8f4 (    0x1c) GCC_except_table70 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb910 (    0x34) GCC_except_table0 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb944 (    0x18) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb95c (    0x24) GCC_except_table10 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb980 (     0xc) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb98c (    0x14) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x00000001acfdb9a0 (   0x1d8) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001acfdbb78 (    0x4c) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x00000001acfdbbc4 (    0x30) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x00000001acfdbbf4 (    0x18) GCC_except_table22 [NameNList, MangledNameNList, NList] 
                0x00000001acfdbc0c (    0x18) GCC_except_table29 [NameNList, MangledNameNList, NList] 
                0x00000001acfdbc24 (    0x18) GCC_except_table35 [NameNList, MangledNameNList, NList] 
                0x00000001acfdbc3c (    0x18) GCC_except_table40 [NameNList, MangledNameNList, NList] 
                0x00000001acfdbc54 (    0x18) GCC_except_table44 [NameNList, MangledNameNList, NList] 
                0x00000001acfdbc6c (    0x18) GCC_except_table51 [NameNList, MangledNameNList, NList] 
                0x00000001acfdbc84 (    0x18) GCC_except_table54 [NameNList, MangledNameNList, NList] 
                0x00000001acfdbc9c (    0x18) GCC_except_table58 [NameNList, MangledNameNList, NList] 
                0x00000001acfdbcb4 (    0x18) GCC_except_table61 [NameNList, MangledNameNList, NList] 
                0x00000001acfdbccc (     0xc) GCC_except_table2 [NameNList, MangledNameNList, NList] 
                0x00000001acfdbcd8 (    0x14) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001acfdbcec (    0x14) GCC_except_table14 [NameNList, MangledNameNList, NList] 
                0x00000001acfdbd00 (     0xc) GCC_except_table20 [NameNList, MangledNameNList, NList] 
                0x00000001acfdbd0c (    0x10) GCC_except_table23 [NameNList, MangledNameNList, NList] 
                0x00000001acfdbd1c (     0xc) GCC_except_table24 [NameNList, MangledNameNList, NList] 
                0x00000001acfdbd28 (    0x30) GCC_except_table73 [NameNList, MangledNameNList, NList] 
                0x00000001acfdbd58 (    0x24) GCC_except_table76 [NameNList, MangledNameNList, NList] 
                0x00000001acfdbd7c (    0x14) GCC_except_table3 [NameNList, MangledNameNList, NList] 
                0x00000001acfdbd90 (    0x14) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x00000001acfdbda4 (    0x1c) GCC_except_table8 [NameNList, MangledNameNList, NList] 
            0x00000001acfdbdc0 (  0x14d6) __TEXT __cstring
            0x00000001acfdd296 (    0x54) __TEXT __oslogstring
            0x00000001acfdd2ea (    0x38) __TEXT __ustring
            0x00000001acfdd322 (   0x3da) __TEXT __swift5_typeref
                0x00000001acfdd322 (     0x8) associated conformance So15AGWeakAttributeaSH0B5GraphSQ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd32a (     0x8) associated conformance 14AttributeGraph04WeakA0VyxGSHAASQ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd332 (     0x6) symbolic _____ 14AttributeGraph04WeakA0V [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd338 (     0x6) symbolic _____ So15AGWeakAttributea [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd33e (     0x6) symbolic _____ So19AGDescriptionOptiona [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd344 (     0xe) symbolic So8NSStringC [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd352 (     0x6) symbolic _____ So20AGAttributeTypeFlagsV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd358 (     0x6) symbolic _____ s6UInt32V [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd35e (     0x6) symbolic _____ So16_AGAttributeTypeV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd364 (     0x6) symbolic _____ So8AGTypeIDa [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd36a (     0x6) symbolic _____ So17_AGClosureStorageV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd370 (     0xa) symbolic SPy_____G So18_AGAttributeVTableV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd37a (     0xc) symbolic SPy_____GSg s5UInt8V [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd386 (     0x6) symbolic _____ So15AGWeakAttributea25__Unnamed_struct__detailsV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd38c (     0xa) symbolic SPy_____G So15AGSwiftMetadataV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd396 (     0x6) symbolic _____ So15AGTypeSignatureV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd39c (     0xc) symbolic ______A19At s5UInt8V [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd3a8 (     0x6) symbolic _____ So11AGAttributea [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd3ae (     0x6) symbolic _____ So25AGTreeElementNodeIteratora [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd3b4 (     0x4) symbolic Su [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd3b8 (     0x6) symbolic _____ So11AGTreeValuea [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd3be (     0x6) symbolic _____ s13OpaquePointerV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd3c4 (     0x6) symbolic _____ So26AGTreeElementValueIteratora [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd3ca (     0x6) symbolic _____ So13AGTreeElementa [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd3d0 (     0x6) symbolic _____ So26AGTreeElementChildIteratora [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd3d6 (     0x4) symbolic Si [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd3da (     0x4) symbolic SS [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd3de (     0x6) symbolic $sSY [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd3e4 (     0x8) associated conformance So19AGDescriptionOptionas20_SwiftNewtypeWrapperSCSY [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd3ec (     0x8) associated conformance So19AGDescriptionOptionas20_SwiftNewtypeWrapperSCs35_HasCustomAnyHashableRepresentation [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd3f4 (    0x1c) symbolic $ss21_ObjectiveCBridgeableP [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd410 (    0x20) symbolic $ss25ExpressibleByArrayLiteralP [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd430 (     0x8) associated conformance So20AGAttributeTypeFlagsVs10SetAlgebraSCSQ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd438 (     0x8) associated conformance So20AGAttributeTypeFlagsVs10SetAlgebraSCs25ExpressibleByArrayLiteral [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd440 (    0x12) symbolic $ss10SetAlgebraP [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd452 (     0x8) associated conformance So11AGAttributeas20_SwiftNewtypeWrapperSCSY [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd45a (     0x8) associated conformance So11AGAttributeas20_SwiftNewtypeWrapperSCs35_HasCustomAnyHashableRepresentation [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd462 (     0xe) symbolic So8NSNumberC [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd470 (     0x8) associated conformance So10AGGraphRefaSHSCSQ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd478 (     0x8) associated conformance So10AGGraphRefa14CoreFoundation9_CFObjectSCSH [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd480 (     0x8) associated conformance So8AGTypeIDas20_SwiftNewtypeWrapperSCSY [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd488 (     0x8) associated conformance So8AGTypeIDas20_SwiftNewtypeWrapperSCs35_HasCustomAnyHashableRepresentation [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd490 (     0x8) associated conformance So20AGAttributeTypeFlagsVs9OptionSetSCSY [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd498 (     0x8) associated conformance So20AGAttributeTypeFlagsVs9OptionSetSCs0E7Algebra [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd4a0 (    0x10) symbolic $ss9OptionSetP [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd4b0 (     0x8) associated conformance So19AGDescriptionOptionaSHSCSQ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd4b8 (     0x4) symbolic SV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd4bc (     0x6) symbolic SVSg [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd4c2 (     0x6) symbolic _____ So18_AGAttributeVTableV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd4c8 (    0x10) symbolic ySpy_____GXCSg So16_AGAttributeTypeV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd4d8 (    0x14) symbolic ySPy_____G_SvtXCSg So16_AGAttributeTypeV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd4ec (    0x16) symbolic ypSgSPy_____G_SVtXCSg So16_AGAttributeTypeV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd502 (     0x6) symbolic _____ So15AGSwiftMetadataV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd508 (    0x1a) symbolic $s14AttributeGraph4RuleP [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd522 (     0x2) symbolic x [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd524 (     0x6) symbolic xXMT [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd52a (     0x4) symbolic B0 [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd52e (     0x8) symbolic qd__XMT [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd536 (     0x6) symbolic qd__ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd53c (     0x4) symbolic B1 [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd540 (    0x22) symbolic $s14AttributeGraph12StatefulRuleP [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd562 (     0x8) associated conformance So11AGAttributeaSH14AttributeGraphSQ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd56a (     0x8) associated conformance 14AttributeGraph0A0VyxGSHAASQ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd572 (     0x6) symbolic _____ 14AttributeGraph0A0V [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd578 (    0x1e) symbolic $s14AttributeGraph01_A4BodyP [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd596 (    0x20) symbolic $s14AttributeGraph08ObservedA0P [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd5b6 (    0x24) symbolic $s14AttributeGraph0A11BodyVisitorP [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd5da (     0xa) symbolic _____yypG s23_ContiguousArrayStorageC [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd5e4 (    0x12) symbolic _____y______yptG s23_ContiguousArrayStorageC So19AGDescriptionOptiona [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd5f6 (     0x6) symbolic ypSg [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd5fc (     0xa) symbolic SDySSypG [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd606 (    0x10) symbolic _____y_____ypG s18_DictionaryStorageC So19AGDescriptionOptiona [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd616 (     0xa) symbolic ______ypt So19AGDescriptionOptiona [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd620 (     0x8) symbolic ______p s23CustomStringConvertibleP [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd628 (     0xa) symbolic ______pSg s23CustomStringConvertibleP [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd632 (     0x6) symbolic ypXp [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd638 (     0x8) associated conformance So8AGTypeIDaSH14AttributeGraphSQ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd640 (     0x8) associated conformance 14AttributeGraph08IndirectA0VyxGSHAASQ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd648 (     0x6) symbolic _____ 14AttributeGraph08IndirectA0V [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd64e (     0x8) associated conformance So26AGTreeElementChildIteratoraST14AttributeGraph0D0ST_St [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd656 (     0x6) symbolic $sST [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd65c (     0x6) symbolic $sSt [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd662 (     0x8) associated conformance So26AGTreeElementValueIteratoraST14AttributeGraph0D0ST_St [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd66a (     0x8) associated conformance So25AGTreeElementNodeIteratoraST14AttributeGraph0D0ST_St [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd672 (     0xe) symbolic _____y_____G s23_ContiguousArrayStorageC So11AGAttributea [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd680 (     0xe) symbolic _____y_____G s23_ContiguousArrayStorageC So11AGTreeValuea [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd68e (     0xe) symbolic _____y_____G s23_ContiguousArrayStorageC So13AGTreeElementa [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd69c (     0x6) symbolic _____ 14AttributeGraph14AnyRuleContextV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd6a2 (     0x6) symbolic _____ 14AttributeGraph11RuleContextV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd6a8 (     0xa) symbolic _____yxG 14AttributeGraph0A0V [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd6b2 (     0x4) symbolic q_ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd6b6 (     0x6) symbolic _____ 14AttributeGraph5FocusV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd6bc (     0x6) symbolic _____ 14AttributeGraph3MapV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd6c2 (     0x6) symbolic _____ 14AttributeGraph8ExternalV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd6c8 (     0xc) symbolic _____yxq_G s7KeyPathC [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd6d4 (     0x6) symbolic q_xc [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd6da (     0x6) symbolic _____ 14AttributeGraph13PointerOffsetV [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd6e0 (     0x8) associated conformance 14AttributeGraph011AnyOptionalA0VSHAASQ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd6e8 (     0x8) associated conformance 14AttributeGraph08OptionalA0VyxGSHAASQ [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd6f0 (     0x6) symbolic _____ 14AttributeGraph011AnyOptionalA0V [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfdd6f6 (     0x6) symbolic _____ 14AttributeGraph08OptionalA0V [PEXT, NameNList, MangledNameNList, NList] 
            0x00000001acfdd6fc (   0x54c) __TEXT __constg_swiftt
            0x00000001acfddc50 (   0x1c9) __TEXT __swift5_reflstr
            0x00000001acfdde1c (   0x410) __TEXT __swift5_fieldmd
            0x00000001acfde22c (   0x140) __TEXT __swift5_builtin
            0x00000001acfde36c (   0x1b0) __TEXT __swift5_assocty
            0x00000001acfde51c (    0xf4) __TEXT __swift5_proto
            0x00000001acfde610 (    0x70) __TEXT __swift5_types
            0x00000001acfde680 (    0xc0) __TEXT __swift5_capture
            0x00000001acfde740 (    0x14) __TEXT __swift5_protos
            0x00000001acfde754 (  0x19a8) __TEXT __unwind_info
            0x00000001acfe0100 (   0x4a8) __TEXT __eh_frame
            0x00000001acfe05a8 (     0xe) __TEXT __objc_classname
            0x00000001acfe05b6 (   0x3f9) __TEXT __objc_methname
            0x00000001acfe09af (     0xb) __TEXT __objc_methtype
            0x00000001acfe09c0 (   0x640) __TEXT __objc_stubs
                0x00000001acfe09c0 (    0x20) objc_msgSend$JSONObjectWithData:options:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfe09e0 (    0x20) objc_msgSend$UTF8String [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfe0a00 (    0x20) objc_msgSend$addEntriesFromDictionary: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfe0a20 (    0x20) objc_msgSend$addIndex: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfe0a40 (    0x20) objc_msgSend$addObject: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfe0a60 (    0x20) objc_msgSend$addObserver:selector:name:object: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfe0a80 (    0x20) objc_msgSend$appendFormat: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfe0aa0 (    0x20) objc_msgSend$appendString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfe0ac0 (    0x20) objc_msgSend$array [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfe0ae0 (    0x20) objc_msgSend$boolValue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfe0b00 (    0x20) objc_msgSend$bytes [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfe0b20 (    0x20) objc_msgSend$componentsJoinedByString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfe0b40 (    0x20) objc_msgSend$containsIndex: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfe0b60 (    0x20) objc_msgSend$containsObject: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfe0b80 (    0x20) objc_msgSend$count [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfe0ba0 (    0x20) objc_msgSend$countByEnumeratingWithState:objects:count: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfe0bc0 (    0x20) objc_msgSend$dataWithJSONObject:options:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfe0be0 (    0x20) objc_msgSend$defaultCenter [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfe0c00 (    0x20) objc_msgSend$description [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfe0c20 (    0x20) objc_msgSend$dictionary [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfe0c40 (    0x20) objc_msgSend$dictionaryWithDictionary: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfe0c60 (    0x20) objc_msgSend$dictionaryWithObjects:forKeys:count: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfe0c80 (    0x20) objc_msgSend$fileSystemRepresentation [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfe0ca0 (    0x20) objc_msgSend$hasPrefix: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfe0cc0 (    0x20) objc_msgSend$indexSet [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfe0ce0 (    0x20) objc_msgSend$isEqual: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfe0d00 (    0x20) objc_msgSend$isEqualToString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfe0d20 (    0x20) objc_msgSend$length [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfe0d40 (    0x20) objc_msgSend$mutableCopy [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfe0d60 (    0x20) objc_msgSend$null [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfe0d80 (    0x20) objc_msgSend$numberWithBool: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfe0da0 (    0x20) objc_msgSend$numberWithDouble: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfe0dc0 (    0x20) objc_msgSend$numberWithUnsignedChar: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfe0de0 (    0x20) objc_msgSend$numberWithUnsignedInt: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfe0e00 (    0x20) objc_msgSend$numberWithUnsignedLong: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfe0e20 (    0x20) objc_msgSend$objectAtIndexedSubscript: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfe0e40 (    0x20) objc_msgSend$objectForKeyedSubscript: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfe0e60 (    0x20) objc_msgSend$pathExtension [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfe0e80 (    0x20) objc_msgSend$setObject:atIndexedSubscript: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfe0ea0 (    0x20) objc_msgSend$setObject:forKeyedSubscript: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfe0ec0 (    0x20) objc_msgSend$string [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfe0ee0 (    0x20) objc_msgSend$stringByAppendingPathComponent: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfe0f00 (    0x20) objc_msgSend$stringByAppendingString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfe0f20 (    0x20) objc_msgSend$stringByReplacingOccurrencesOfString:withString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfe0f40 (    0x20) objc_msgSend$stringWithFormat: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfe0f60 (    0x20) objc_msgSend$stringWithUTF8String: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfe0f80 (    0x20) objc_msgSend$substringToIndex: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfe0fa0 (    0x20) objc_msgSend$unsignedIntValue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfe0fc0 (    0x20) objc_msgSend$unsignedLongValue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001acfe0fe0 (    0x20) objc_msgSend$writeToFile:options:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
        0x00000001d92103d8 (   0x590) __DATA_CONST SEGMENT
            0x00000001d92103d8 (    0xe8) __DATA_CONST __got
            0x00000001d92104c0 (   0x2b0) __DATA_CONST __const
                0x00000001d92104c0 (    0x20) __block_descriptor_tmp [NameNList, MangledNameNList, NList] 
                0x00000001d92104e0 (    0x20) __block_descriptor_tmp.9 [NameNList, MangledNameNList, NList] 
                0x00000001d9210500 (     0x8) AGDescriptionFormat [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d9210508 (     0x8) AGDescriptionIncludeValues [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d9210510 (     0x8) AGDescriptionTruncationLimit [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d9210518 (    0x50) AGDescriptionMaxFrames [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d9210568 (     0x8) _swift_FORCE_LOAD_$_swiftCoreFoundation_$_AttributeGraph [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d9210570 (     0x8) _swift_FORCE_LOAD_$_swiftDarwin_$_AttributeGraph [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d9210578 (     0x8) _swift_FORCE_LOAD_$_swiftDispatch_$_AttributeGraph [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d9210580 (     0x8) _swift_FORCE_LOAD_$_swiftObjectiveC_$_AttributeGraph [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d9210588 (     0x8) _swift_FORCE_LOAD_$_swiftFoundation_$_AttributeGraph [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d9210590 (     0x8) _swift_FORCE_LOAD_$_swiftXPC_$_AttributeGraph [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d9210598 (   0x1d8) _swift_FORCE_LOAD_$_swiftIOKit_$_AttributeGraph [PEXT, NameNList, MangledNameNList, NList] 
            0x00000001d9210770 (     0x8) __DATA_CONST __objc_classlist
            0x00000001d9210778 (     0x8) __DATA_CONST __objc_imageinfo
            0x00000001d9210780 (    0x48) __DATA_CONST __objc_const
                0x00000001d9210780 (    0x48) _OBJC_CLASS_RO_$_AGAppObserver [NameNList, MangledNameNList, NList] 
            0x00000001d92107c8 (   0x1a0) __DATA_CONST __objc_selrefs
        0x00000001d9210968 (  0x2e60) __AUTH_CONST SEGMENT
            0x00000001d9210968 (  0x16d8) __AUTH_CONST __const
                0x00000001d9210968 (   0x188) vtable for AG::Graph::TraceRecorder [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d9210af0 (    0x20) __block_literal_global [NameNList, MangledNameNList, NList] 
                0x00000001d9210b10 (    0x20) __block_literal_global.11 [NameNList, MangledNameNList, NList] 
                0x00000001d9210b30 (   0x168) vtable for AG::Trace [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d9210c98 (   0x168) vtable for AG::Graph::ProfileTrace [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d9210e00 (    0x10) typeinfo for std::exception [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d9210e10 (    0x18) typeinfo for std::bad_alloc [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d9210e28 (    0x18) typeinfo for std::bad_array_new_length [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d9210e40 (    0x50) vtable for AGTypeApplyFields::Visitor [NameNList, MangledNameNList, NList] 
                0x00000001d9210e90 (    0x50) vtable for AGTypeApplyFields2::Visitor [NameNList, MangledNameNList, NList] 
                0x00000001d9210ee0 (    0x88) vtable for AG::LayoutDescriptor::Builder [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d9210f68 (    0x50) typeinfo for std::bad_variant_access [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d9210fb8 (    0x60) (anonymous namespace)::subgraph_type_id()::klass [NameNList, MangledNameNList, NList] 
                0x00000001d9211018 (    0x60) (anonymous namespace)::graph_type_id()::klass [NameNList, MangledNameNList, NList] 
                0x00000001d9211078 (   0xfc8) vtable for ExternalTrace [PEXT, NameNList, MangledNameNList, NList] 
            0x00000001d9212040 (    0x78) __AUTH_CONST __auth_ptr
            0x00000001d92120b8 (   0xf60) __AUTH_CONST __cfstring
            0x00000001d9213018 (    0x48) __AUTH_CONST __objc_const
                0x00000001d9213018 (    0x48) _OBJC_METACLASS_RO_$_AGAppObserver [NameNList, MangledNameNList, NList] 
            0x00000001d9213060 (    0x18) __AUTH_CONST __objc_intobj
            0x00000001d9213078 (   0x750) __AUTH_CONST __auth_got
        0x00000001d776fcd8 (    0xa0) __AUTH SEGMENT
            0x00000001d776fcd8 (    0x50) __AUTH __objc_data
                0x00000001d776fcd8 (    0x28) OBJC_CLASS_$_AGAppObserver [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d776fd00 (    0x28) OBJC_METACLASS_$_AGAppObserver [PEXT, NameNList, MangledNameNList, NList] 
            0x00000001d776fd28 (    0x50) __AUTH __data
        0x00000001d62494e0 (  0x1f28) __DATA SEGMENT
            0x00000001d62494e0 (    0x68) __DATA __objc_classrefs
            0x00000001d6249548 (   0x2c0) __DATA __data
                0x00000001d6249548 (     0x8) AG::swift::metadata::visit_heap_locals(AG::swift::metadata_visitor&) const::pointer_type [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6249550 (   0x2b8) guard variable for AG::swift::metadata::visit_heap_locals(AG::swift::metadata_visitor&) const::pointer_type [PEXT, NameNList, MangledNameNList, NList] 
            0x00000001d6249808 (    0x40) __DATA __crash_info
                0x00000001d6249808 (    0x40) gCRAnnotations [PEXT, NameNList, MangledNameNList, NList] 
            0x00000001d6249850 (  0x1b80) __DATA __bss
                0x00000001d6249850 (     0x8) AG::Graph::TraceRecorder::field_timestamp(AG::Encoder&, unsigned long)::time_scale [NameNList, MangledNameNList, NList] 
                0x00000001d6249858 (     0x8) guard variable for AG::Graph::TraceRecorder::field_timestamp(AG::Encoder&, unsigned long)::time_scale [NameNList, MangledNameNList, NList] 
                0x00000001d6249860 (     0x8) AG::Graph::TraceRecorder::field_backtrace(AG::Encoder&, unsigned long)::n_stack_frames [NameNList, MangledNameNList, NList] 
                0x00000001d6249868 (     0x8) guard variable for AG::Graph::TraceRecorder::field_backtrace(AG::Encoder&, unsigned long)::n_stack_frames [NameNList, MangledNameNList, NList] 
                0x00000001d6249870 (     0x8) AG::Graph::start_tracing(unsigned int, std::__1::span<char const*, 18446744073709551615ul>)::cleanup [NameNList, MangledNameNList, NList] 
                0x00000001d6249878 (     0x8) AG::data::table::ensure_shared()::once [NameNList, MangledNameNList, NList] 
                0x00000001d6249880 (     0x8) AG::data::table::make_pages_reusable(unsigned int, bool)::unmap_reusable [NameNList, MangledNameNList, NList] 
                0x00000001d6249888 (     0x8) AG::swift::metadata::mangled_type_name_ref_cached(char const*, AG::swift::metadata::ref_kind*) const::cache [NameNList, MangledNameNList, NList] 
                0x00000001d6249890 (     0x8) guard variable for AG::swift::metadata::mangled_type_name_ref_cached(char const*, AG::swift::metadata::ref_kind*) const::cache [NameNList, MangledNameNList, NList] 
                0x00000001d6249898 (     0x8) AG::swift::metadata::signature() const::cache [NameNList, MangledNameNList, NList] 
                0x00000001d62498a0 (     0x8) guard variable for AG::swift::metadata::signature() const::cache [NameNList, MangledNameNList, NList] 
                0x00000001d62498a8 (    0x20) AG::Graph::Graph()::[profiler_flags, trace_flags, trace_subsystems] [NameNList, MangledNameNList, NList] 
                0x00000001d62498c8 (     0x8) guard variable for AG::Graph::Graph()::[profiler_flags, trace_flags, trace_subsystems] [NameNList, MangledNameNList, NList] 
                0x00000001d62498d0 (     0x8) AG::LayoutDescriptor::Builder::commit(AG::swift::metadata const*)::print_layouts [NameNList, MangledNameNList, NList] 
                0x00000001d62498d8 (     0x8) AG::(anonymous namespace)::TypeDescriptorCache::_shared_once [NameNList, MangledNameNList, NList] 
                0x00000001d62498e0 (     0x8) AG::(anonymous namespace)::TypeDescriptorCache::_shared_cache [NameNList, MangledNameNList, NList] 
                0x00000001d62498e8 (     0x8) AG::(anonymous namespace)::TypeDescriptorCache::fetch(AG::swift::metadata const*, unsigned int, AG::LayoutDescriptor::HeapMode, int)::async_layouts [NameNList, MangledNameNList, NList] 
                0x00000001d62498f0 (     0x8) guard variable for AG::(anonymous namespace)::TypeDescriptorCache::fetch(AG::swift::metadata const*, unsigned int, AG::LayoutDescriptor::HeapMode, int)::async_layouts [NameNList, MangledNameNList, NList] 
                0x00000001d62498f8 (     0x8) should_record_tree_once [NameNList, MangledNameNList, NList] 
                0x00000001d6249900 (     0x8) should_record_tree [NameNList, MangledNameNList, NList] 
                0x00000001d6249908 (     0x8) AG::Graph::print_cycle(AG::data::ptr<AG::Node>) const::verbosity [NameNList, MangledNameNList, NList] 
                0x00000001d6249910 (     0x8) guard variable for AG::Graph::print_cycle(AG::data::ptr<AG::Node>) const::verbosity [NameNList, MangledNameNList, NList] 
                0x00000001d6249918 (     0x8) AG::Graph::print_cycle(AG::data::ptr<AG::Node>) const::traps [NameNList, MangledNameNList, NList] 
                0x00000001d6249920 (     0x8) guard variable for AG::Graph::print_cycle(AG::data::ptr<AG::Node>) const::traps [NameNList, MangledNameNList, NList] 
                0x00000001d6249928 (     0x8) AG::misc_log()::log [NameNList, MangledNameNList, NList] 
                0x00000001d6249930 (     0x8) guard variable for AG::misc_log()::log [NameNList, MangledNameNList, NList] 
                0x00000001d6249938 (     0x8) AG::error_log()::log [NameNList, MangledNameNList, NList] 
                0x00000001d6249940 (  0x1a90) guard variable for AG::error_log()::log [NameNList, MangledNameNList, NList] 
            0x00000001d624b3d0 (    0x38) __DATA __common
                0x00000001d624b3d0 (     0x8) AGGraphVMRegionBaseAddress [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d624b3d8 (     0x8) AG::data::table::_malloc_zone [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d624b3e0 (     0x8) AG::Graph::_all_graphs_lock [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d624b3e8 (     0x8) AG::DebugServer::_shared_server [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d624b3f0 (     0x4) AG::LayoutDescriptor::base_address [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d624b3f4 (     0x4) AG::LayoutDescriptor::Builder::_lock [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d624b3f8 (     0x8) NamedEvents::lock [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d624b400 (     0x8) NamedEvents::names [PEXT, NameNList, MangledNameNList, NList] 
        0x00000001d6fda620 (   0x730) __DATA_DIRTY SEGMENT
            0x00000001d6fda620 (   0x3c0) __DATA_DIRTY __data
                0x00000001d6fda620 (   0x3c0) AGMakeUniqueID::counter [NameNList, MangledNameNList, NList] 
            0x00000001d6fda9e0 (    0x90) __DATA_DIRTY __common
                0x00000001d6fda9e0 (    0x60) AG::data::_shared_table_bytes [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6fdaa40 (     0x8) AG::Graph::_current_update_key [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6fdaa48 (     0x8) AG::Graph::_all_graphs [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6fdaa50 (     0x8) AG::Subgraph::_last_traversal_seed [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6fdaa58 (     0x8) AG::Subgraph::_current_subgraph_key [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6fdaa60 (     0x8) AG::LayoutDescriptor::Builder::_buffer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d6fdaa68 (     0x8) AG::LayoutDescriptor::Builder::_avail [PEXT, NameNList, MangledNameNList, NList] 
            0x00000001d6fdaa70 (   0x2e0) __DATA_DIRTY __bss
                0x00000001d6fdaa70 (     0x8) guard variable for AG::data::table::make_pages_reusable(unsigned int, bool)::unmap_reusable [NameNList, MangledNameNList, NList] 
                0x00000001d6fdaa78 (     0x8) AG::swift::metadata::equatable() const::nsobject_conformance [NameNList, MangledNameNList, NList] 
                0x00000001d6fdaa80 (     0x8) guard variable for AG::swift::metadata::equatable() const::nsobject_conformance [NameNList, MangledNameNList, NList] 
                0x00000001d6fdaa88 (     0x8) AG::swift::metadata::visit(AG::swift::metadata_visitor&) const::native_object [NameNList, MangledNameNList, NList] 
                0x00000001d6fdaa90 (     0x8) guard variable for AG::swift::metadata::visit(AG::swift::metadata_visitor&) const::native_object [NameNList, MangledNameNList, NList] 
                0x00000001d6fdaa98 (     0x8) AG::Graph::Graph()::make_keys [NameNList, MangledNameNList, NList] 
                0x00000001d6fdaaa0 (     0x8) guard variable for AG::LayoutDescriptor::Builder::commit(AG::swift::metadata const*)::print_layouts [NameNList, MangledNameNList, NList] 
                0x00000001d6fdaaa8 (     0x8) AGSubgraphGetTypeID::type [NameNList, MangledNameNList, NList] 
                0x00000001d6fdaab0 (     0x8) guard variable for AGSubgraphGetTypeID::type [NameNList, MangledNameNList, NList] 
                0x00000001d6fdaab8 (     0x8) AGGraphGetTypeID::type [NameNList, MangledNameNList, NList] 
                0x00000001d6fdaac0 (   0x290) guard variable for AGGraphGetTypeID::type [NameNList, MangledNameNList, NList] 
        0x000000023a910000 (0x37bf0000) __LINKEDIT SEGMENT
