/System/Library/PrivateFrameworks/BiometricSupport.framework/Versions/A/BiometricSupport [arm64e, 0.593446 seconds]:
    DA06995C-868C-3B80-A14A-3B39B333E884 /System/Library/PrivateFrameworks/BiometricSupport.framework/Versions/A/BiometricSupport [DYLIB, DYLDSHAREDCACHE, FaultedFromDiskDyldSharedCache, MMap64]  
        0x00000001b8c7b000 ( 0x50000) __TEXT SEGMENT
            0x00000001b8c7b000 (  0x4d40) MACH_HEADER
            0x00000001b8c7fd40 ( 0x36120) __TEXT __text
                0x00000001b8c7fd40 (   0x168) -[BiometricAutoBugCapture initWithDomain:process:dispatchQueue:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c7fea8 (    0x2c) -[BiometricAutoBugCapture getTypeForReason:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c7fed4 (    0x2c) -[BiometricAutoBugCapture getSubtypeForReason:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c7ff00 (    0x1c) -[BiometricAutoBugCapture getSignatureWithType:subtype:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c7ff1c (    0xa0) -[BiometricAutoBugCapture getSignatureForReason:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c7ffbc (    0x60) -[BiometricAutoBugCapture sendAutoBugCaptureEvent:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8001c (    0xe8) -[BiometricAutoBugCapture sendSignature:withDuration:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c80104 (   0x188) __54-[BiometricAutoBugCapture sendSignature:withDuration:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8028c (   0x204) __54-[BiometricAutoBugCapture sendSignature:withDuration:]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c80490 (     0x8) __copy_helper_block_e8_32s [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c80498 (     0x8) __destroy_helper_block_e8_32s [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c804a0 (    0x50) __copy_helper_block_e8_32s40s48r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c804f0 (    0x48) __destroy_helper_block_e8_32s40s48r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c80538 (     0x8) -[BiometricAutoBugCapture dispatchQueue] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c80540 (     0x8) -[BiometricAutoBugCapture domain] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c80548 (     0xc) -[BiometricAutoBugCapture setDomain:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c80554 (     0x8) -[BiometricAutoBugCapture process] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8055c (     0xc) -[BiometricAutoBugCapture setProcess:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c80568 (     0x8) -[BiometricAutoBugCapture reporter] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c80570 (     0x8) -[BiometricAutoBugCapture serialLogEnabled] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c80578 (    0x5c) -[BiometricAutoBugCapture .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c805d4 (    0x6c) -[BKCatacomb init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c80640 (    0x7c) +[BKCatacomb catacombWithDir:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c806bc (    0x10) -[BKCatacomb catacombPrepareDir] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c806cc (    0x10) -[BKCatacomb catacombCommitDir] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c806dc (    0x84) -[BKCatacomb syncDir:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c80760 (   0x310) -[BKCatacomb writeData:toFile:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c80a70 (   0x3ec) -[BKCatacomb commitWrite] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c80e5c (   0x40c) -[BKCatacomb readData:fromFile:logString:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c81268 (     0x8) -[BKCatacomb readData:fromFile:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c81270 (   0x19c) -[BKCatacomb deleteFile:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8140c (   0x3f0) -[BKCatacomb recover] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c817fc (    0xb0) -[BKCatacomb deleteAll] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c818ac (    0x78) -[BKCatacomb content] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c81924 (     0x8) -[BKCatacomb catacombDir] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8192c (    0x44) -[BKCatacomb .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c81970 (    0xd0) -[BiometricKitCoreAnalyticsEvent initWithName:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c81a40 (   0x260) -[BiometricKitCoreAnalyticsEvent initWithName:dictionary:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c81ca0 (    0xa8) -[BiometricKitCoreAnalyticsEvent initWithPersistedDataWithName:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c81d48 (    0xe4) -[BiometricKitCoreAnalyticsEvent valueForUndefinedKey:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c81e2c (    0xe0) -[BiometricKitCoreAnalyticsEvent setNilValueForKey:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c81f0c (   0x100) -[BiometricKitCoreAnalyticsEvent setValue:forUndefinedKey:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8200c (   0x238) -[BiometricKitCoreAnalyticsEvent postEvent] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c82244 (    0x40) __43-[BiometricKitCoreAnalyticsEvent postEvent]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c82284 (    0x3c) __copy_helper_block_e8_32s40s [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c822c0 (    0x3c) __destroy_helper_block_e8_32s40s [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c822fc (     0x4) -[BiometricKitCoreAnalyticsEvent getEventDictionary] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c82300 (   0x118) -[BiometricKitCoreAnalyticsEvent dictionaryRepresentationForClass:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c82418 (     0x8) -[BiometricKitCoreAnalyticsEvent dictionaryRepresentation] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c82420 (   0x200) -[BiometricKitCoreAnalyticsEvent dictionaryRepresentationArchiving:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c82620 (    0xbc) -[BiometricKitCoreAnalyticsEvent resetClass:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c826dc (   0x188) -[BiometricKitCoreAnalyticsEvent reset] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c82864 (    0xc0) -[BiometricKitCoreAnalyticsEvent incrementCountField:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c82924 (    0xc8) -[BiometricKitCoreAnalyticsEvent setTimeSinceLastEnrollment:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c829ec (   0x1e0) -[BiometricKitCoreAnalyticsEvent updateBoundedFieldValue] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c82bcc (    0x24) -[BiometricKitCoreAnalyticsEvent logAnalyticsDictionary:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c82bf0 (    0x84) -[BiometricKitCoreAnalyticsEvent persistData] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c82c74 (     0x8) -[BiometricKitCoreAnalyticsEvent eventCanceled] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c82c7c (     0xc) -[BiometricKitCoreAnalyticsEvent setEventCanceled:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c82c88 (     0x8) -[BiometricKitCoreAnalyticsEvent displayOn] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c82c90 (     0xc) -[BiometricKitCoreAnalyticsEvent setDisplayOn:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c82c9c (     0x8) -[BiometricKitCoreAnalyticsEvent deviceEnclosureColor] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c82ca4 (     0xc) -[BiometricKitCoreAnalyticsEvent setDeviceEnclosureColor:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c82cb0 (     0x8) -[BiometricKitCoreAnalyticsEvent timeSinceLastEnrollment] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c82cb8 (     0x8) -[BiometricKitCoreAnalyticsEvent timeSinceLastEnrollmentBinned] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c82cc0 (     0xc) -[BiometricKitCoreAnalyticsEvent setTimeSinceLastEnrollmentBinned:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c82ccc (     0x8) -[BiometricKitCoreAnalyticsEvent timeSinceLastEvent] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c82cd4 (     0xc) -[BiometricKitCoreAnalyticsEvent setTimeSinceLastEvent:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c82ce0 (     0x8) -[BiometricKitCoreAnalyticsEvent previousEventDate] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c82ce8 (     0xc) -[BiometricKitCoreAnalyticsEvent setPreviousEventDate:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c82cf4 (    0xa4) -[BiometricKitCoreAnalyticsEvent .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c82d98 (    0xb0) -[BiometricKitXPCExportedClientObject initWithClientID:clientInfo:exportedObject:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c82e48 (   0x10c) -[BiometricKitXPCExportedClientObject description] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c82f54 (     0x8) -[BiometricKitXPCExportedClientObject setDelegateRegistered:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c82f5c (     0x8) -[BiometricKitXPCExportedClientObject setClientAppIsBackground:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c82f64 (     0x8) -[BiometricKitXPCExportedClientObject setClientAppIsInactive:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c82f6c (    0x2c) -[BiometricKitXPCExportedClientObject exportedObject] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c82f98 (    0xd4) -[BiometricKitXPCExportedClientObject enrollResult:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8306c (    0xec) -[BiometricKitXPCExportedClientObject enrollResult:details:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c83158 (    0xd0) -[BiometricKitXPCExportedClientObject enrollUpdate:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c83228 (    0xd0) -[BiometricKitXPCExportedClientObject enrollFeedback:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c832f8 (    0xec) -[BiometricKitXPCExportedClientObject matchResult:details:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c833e4 (    0xd4) -[BiometricKitXPCExportedClientObject statusMessage:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c834b8 (    0xd8) -[BiometricKitXPCExportedClientObject statusMessage:details:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c83590 (    0xc0) -[BiometricKitXPCExportedClientObject homeButtonPressed] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c83650 (    0xd4) -[BiometricKitXPCExportedClientObject touchIDButtonPressed:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c83724 (    0xec) -[BiometricKitXPCExportedClientObject templateUpdate:details:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c83810 (    0xd4) -[BiometricKitXPCExportedClientObject taskResumeStatus:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c838e4 (     0x8) -[BiometricKitXPCExportedClientObject clientID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c838ec (     0x8) -[BiometricKitXPCExportedClientObject clientInfo] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c838f4 (     0x8) -[BiometricKitXPCExportedClientObject delegateRegistered] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c838fc (     0x8) -[BiometricKitXPCExportedClientObject clientAppIsBackground] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c83904 (     0x8) -[BiometricKitXPCExportedClientObject clientAppIsInactive] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8390c (    0x40) -[BiometricKitXPCExportedClientObject .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8394c (    0x24) -[BiometricKitXPCExportedObject entitlementsNeededForPermissionGroup:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c83970 (   0x244) -[BiometricKitXPCExportedObject clientEntitled:forSelector:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c83bb4 (    0x20) (null) [FUNC, FunctionStarts] 
                0x00000001b8c83bd4 (    0x70) -[BiometricKitXPCExportedObject init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c83c44 (    0x50) -[BiometricKitXPCExportedObject dealloc] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c83c94 (    0xac) -[BiometricKitXPCExportedObject client:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c83d40 (   0x140) -[BiometricKitXPCExportedObject terminate] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c83e80 (    0x74) -[BiometricKitXPCExportedObject clients] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c83ef4 (   0x1e4) -[BiometricKitXPCExportedObject connect:client:replyBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c840d8 (   0x204) -[BiometricKitXPCExportedObject disconnect:replyBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c842dc (    0x10) __Block_byref_object_copy_ [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c842ec (     0x8) __Block_byref_object_dispose_ [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c842f4 (    0x84) __55-[BiometricKitXPCExportedObject disconnect:replyBlock:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c84378 (    0x48) __copy_helper_block_e8_32s40r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c843c0 (    0x40) __destroy_helper_block_e8_32s40r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c84400 (    0xf8) -[BiometricKitXPCExportedObject registerDelegate:client:replyBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c844f8 (    0x9c) -[BiometricKitXPCExportedObject notifyAppIsBackground:client:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c84594 (    0xac) -[BiometricKitXPCExportedObject notifyAppIsInactive:client:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c84640 (   0x22c) -[BiometricKitXPCExportedObject enroll:user:options:async:client:replyBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8486c (    0x98) __77-[BiometricKitXPCExportedObject enroll:user:options:async:client:replyBlock:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c84904 (    0x60) __copy_helper_block_e8_32s40s48b56r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c84964 (    0x50) __destroy_helper_block_e8_32s40s48s56r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c849b4 (   0x24c) -[BiometricKitXPCExportedObject match:options:async:client:replyBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c84c00 (    0x98) __71-[BiometricKitXPCExportedObject match:options:async:client:replyBlock:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c84c98 (    0x68) __copy_helper_block_e8_32s40s48s56b64r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c84d00 (    0x58) __destroy_helper_block_e8_32s40s48s56s64r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c84d58 (   0x218) -[BiometricKitXPCExportedObject detectPresenceWithOptions:async:client:replyBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c84f70 (    0x94) __83-[BiometricKitXPCExportedObject detectPresenceWithOptions:async:client:replyBlock:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c85004 (   0x1a8) -[BiometricKitXPCExportedObject cancel:replyBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c851ac (    0x94) __51-[BiometricKitXPCExportedObject cancel:replyBlock:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c85240 (    0x58) __copy_helper_block_e8_32s40b48r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c85298 (   0x248) -[BiometricKitXPCExportedObject updateIdentity:options:async:client:replyBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c854e0 (    0x98) __80-[BiometricKitXPCExportedObject updateIdentity:options:async:client:replyBlock:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c85578 (   0x248) -[BiometricKitXPCExportedObject removeIdentity:options:async:client:replyBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c857c0 (    0x98) __80-[BiometricKitXPCExportedObject removeIdentity:options:async:client:replyBlock:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c85858 (   0x224) -[BiometricKitXPCExportedObject removeAllIdentitiesForUser:options:async:client:replyBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c85a7c (    0x98) __92-[BiometricKitXPCExportedObject removeAllIdentitiesForUser:options:async:client:replyBlock:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c85b14 (   0x108) -[BiometricKitXPCExportedObject getIdentityFromUUID:client:replyBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c85c1c (   0x108) -[BiometricKitXPCExportedObject identities:client:replyBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c85d24 (    0xe4) -[BiometricKitXPCExportedObject getMaxIdentityCount:client:replyBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c85e08 (    0xec) -[BiometricKitXPCExportedObject getFreeIdentityCount:user:client:replyBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c85ef4 (   0x100) -[BiometricKitXPCExportedObject registerDSID:options:client:replyBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c85ff4 (    0xf8) -[BiometricKitXPCExportedObject registerStoreToken:client:replyBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c860ec (   0x100) -[BiometricKitXPCExportedObject getCountersignedStoreToken:replyBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c861ec (   0x13c) -[BiometricKitXPCExportedObject diagnostics:options:client:replyBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c86328 (    0xe8) -[BiometricKitXPCExportedObject timestampEvent:absoluteTime:client:replyBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c86410 (   0x100) -[BiometricKitXPCExportedObject setUserDSID:options:client:replyBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c86510 (    0xd4) -[BiometricKitXPCExportedObject resetAppleConnectCounter:replyBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c865e4 (    0xf4) -[BiometricKitXPCExportedObject getIdentitiesDatabaseUUIDForUser:client:replyBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c866d8 (    0xf4) -[BiometricKitXPCExportedObject getIdentitiesDatabaseHashForUser:client:replyBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c867cc (    0xd4) -[BiometricKitXPCExportedObject dropUnlockToken:replyBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c868a0 (   0x100) -[BiometricKitXPCExportedObject forceBioLockoutForUser:options:client:replyBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c869a0 (    0xd0) -[BiometricKitXPCExportedObject enrollContinue:replyBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c86a70 (    0xe0) -[BiometricKitXPCExportedObject pullAlignmentData:replyBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c86b50 (    0xe0) -[BiometricKitXPCExportedObject pullMatchPolicyInfoData:replyBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c86c30 (   0x108) -[BiometricKitXPCExportedObject getNodeTopologyForIdentity:client:replyBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c86d38 (    0xf4) -[BiometricKitXPCExportedObject getProtectedConfigurationForUser:client:replyBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c86e2c (    0xe4) -[BiometricKitXPCExportedObject getSystemProtectedConfiguration:replyBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c86f10 (   0x250) -[BiometricKitXPCExportedObject setProtectedConfiguration:user:options:async:client:replyBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c87160 (    0x9c) __96-[BiometricKitXPCExportedObject setProtectedConfiguration:user:options:async:client:replyBlock:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c871fc (   0x248) -[BiometricKitXPCExportedObject setSystemProtectedConfiguration:options:async:client:replyBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c87444 (    0x98) __97-[BiometricKitXPCExportedObject setSystemProtectedConfiguration:options:async:client:replyBlock:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c874dc (    0xd4) -[BiometricKitXPCExportedObject getProvisioningState:replyBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c875b0 (   0x15c) -[BiometricKitXPCExportedObject getBioLockoutStateForUser:client:replyBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8770c (     0xc) __77-[BiometricKitXPCExportedObject getBioLockoutStateForUser:client:replyBlock:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c87718 (    0xf4) -[BiometricKitXPCExportedObject getExpressModeStateForUser:client:replyBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8780c (    0xd4) -[BiometricKitXPCExportedObject getSensorCalibrationStatus:replyBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c878e0 (    0xe4) -[BiometricKitXPCExportedObject getCalibrationDataInfo:replyBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c879c4 (    0xe4) -[BiometricKitXPCExportedObject getSensorInfo:replyBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c87aa8 (    0xe4) -[BiometricKitXPCExportedObject setDebugImages:client:replyBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c87b8c (    0xe4) -[BiometricKitXPCExportedObject pullCalibrationData:replyBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c87c70 (    0xe4) -[BiometricKitXPCExportedObject pullCaptureBuffer:replyBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c87d54 (   0x110) -[BiometricKitXPCExportedObject pullDebugImageData:rotated:client:replyBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c87e64 (   0x114) -[BiometricKitXPCExportedObject getLogs:client:replyBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c87f78 (   0x110) -[BiometricKitXPCExportedObject fileRadarWithLogs:description:client:replyBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c88088 (    0xd4) -[BiometricKitXPCExportedObject isFingerOn:replyBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8815c (   0x148) -[BiometricKitXPCExportedObject enableBackgroundFdet:client:replyBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c882a4 (     0xc) __72-[BiometricKitXPCExportedObject enableBackgroundFdet:client:replyBlock:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c882b0 (    0xd0) -[BiometricKitXPCExportedObject isAriadneSignpostsEnabled:replyBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c88380 (    0xd4) -[BiometricKitXPCExportedObject isXARTAvailable:replyBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c88454 (    0xd4) -[BiometricKitXPCExportedObject getDeviceState:replyBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c88528 (    0xd4) -[BiometricKitXPCExportedObject startNewMatchAttempt:replyBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c885fc (    0xf0) -[BiometricKitXPCExportedObject getBiometryAvailabilityForUser:client:replyBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c886ec (    0xd4) -[BiometricKitXPCExportedObject completeEnrollment:replyBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c887c0 (    0xe4) -[BiometricKitXPCExportedObject suspendEnrollment:client:replyBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c888a4 (   0x114) -[BiometricKitXPCExportedObject setTemplate:forIdentity:client:replyBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c889b8 (    0xe8) -[BiometricKitXPCExportedObject isPeriocularEnrollmentSupported:replyBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c88aa0 (    0xf0) -[BiometricKitXPCExportedObject getPeriocularMatchState:client:replyBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c88b90 (   0x214) -[BiometricKitXPCExportedObject removePeriocularTemplatesWithOptions:async:client:replyBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c88da4 (    0x94) __94-[BiometricKitXPCExportedObject removePeriocularTemplatesWithOptions:async:client:replyBlock:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c88e38 (   0x100) -[BiometricKitXPCExportedObject queryIdentityMigrationFailureForUser:clear:client:replyBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c88f38 (    0x50) -[BiometricKitXPCExportedObject logEventOrCode:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c88f88 (    0xe4) -[BiometricKitXPCExportedObject enableMatchAutoRetry:client:replyBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8906c (    0xe4) -[BiometricKitXPCExportedObject pauseFaceDetectTimer:client:replyBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c89150 (   0x100) -[BiometricKitXPCExportedObject getLastMatchEvent:replyBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c89250 (    0xd8) -[BiometricKitXPCExportedObject getDeviceHardwareState:replyBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c89328 (   0x100) -[BiometricKitXPCExportedObject listAccessories:replyBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c89428 (   0x10c) -[BiometricKitXPCExportedObject getFreeIdentityCountForUser:accessoryGroup:client:replyBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c89534 (   0x140) -[BiometricKitXPCExportedObject getPreferencesValueForKey:client:replyBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c89674 (   0x10c) -[BiometricKitXPCExportedObject setPreferencesValue:forKey:client:replyBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c89780 (     0x8) -[BiometricKitXPCExportedObject server] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c89788 (     0x8) -[BiometricKitXPCExportedObject setServer:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c89790 (     0x8) -[BiometricKitXPCExportedObject connection] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c89798 (     0xc) -[BiometricKitXPCExportedObject setConnection:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c897a4 (     0x8) -[BiometricKitXPCExportedObject clientEntitlement] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c897ac (     0x8) -[BiometricKitXPCExportedObject setClientEntitlement:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c897b4 (    0x44) -[BiometricKitXPCExportedObject .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c897f8 (     0x4) +[BiometricSupportUserNotification displayTouchIDIssueNotification] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c897fc (     0x4) +[BiometricSupportUserNotification displayPearlIssueNotification] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c89800 (     0x4) +[BiometricSupportUserNotification displayPearlInterlockIssueNotification:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c89804 (    0xfc) +[BiometricSupportUserNotification displayPearlGlassesBannerNotification] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c89900 (   0x114) +[BiometricSupportUserNotification didDisplayPearlGlassesBannerNotificationRecently:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c89a14 (     0x4) +[BiometricSupportUserNotification displaySensorIssueNotificationWithHeader:message:button:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c89a18 (    0x48) +[BiometricSupportUserNotification displayStopAlertWithHeader:andMessage:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c89a60 (    0xa0) +[BKLocalization getLocalizedString:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c89b00 (    0xb4) +[BKLocalization getLocalizedString:fromFile:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c89bb4 (   0x1ac) +[BKLocalization reportLocalizationABC] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c89d60 (   0x2a4) +[BKLocalization getLocalizedString:fromStringTable:withBundle:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8a004 (   0x4bc) +[BKLocalization getLocalizedStringOrNil:fromStringTable:withBundle:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8a4c0 (    0x40) -[BiometricOperation init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8a500 (    0xa8) -[BiometricOperation description] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8a5a8 (     0x8) -[BiometricOperation type] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8a5b0 (     0x8) -[BiometricOperation taskPausedMessage] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8a5b8 (     0x8) -[BiometricOperation taskResumedMessage] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8a5c0 (     0x8) -[BiometricOperation taskResumeFailedMessage] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8a5c8 (     0x8) -[BiometricOperation client] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8a5d0 (     0xc) -[BiometricOperation setClient:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8a5dc (     0x8) -[BiometricOperation status] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8a5e4 (     0x8) -[BiometricOperation setStatus:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8a5ec (     0x8) -[BiometricOperation priority] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8a5f4 (     0x8) -[BiometricOperation setPriority:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8a5fc (     0x8) -[BiometricOperation cancelledMessage] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8a604 (     0xc) -[BiometricOperation .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8a610 (    0x4c) -[BiometricEnrollOperation init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8a65c (     0x8) -[BiometricEnrollOperation type] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8a664 (    0x10) -[BiometricEnrollOperation authData] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8a674 (     0x8) -[BiometricEnrollOperation cancelledMessage] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8a67c (    0x10) -[BiometricEnrollOperation deviceGroup] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8a68c (    0x10) -[BiometricEnrollOperation userID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8a69c (    0x10) -[BiometricEnrollOperation setUserID:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8a6ac (    0x10) -[BiometricEnrollOperation processedFlags] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8a6bc (    0x10) -[BiometricEnrollOperation setProcessedFlags:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8a6cc (    0x58) -[BiometricMatchOperation init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8a724 (     0x8) -[BiometricMatchOperation type] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8a72c (    0x10) -[BiometricMatchOperation noBioLockoutAuthData] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8a73c (     0x8) -[BiometricMatchOperation cancelledMessage] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8a744 (    0x10) -[BiometricMatchOperation userID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8a754 (    0x10) -[BiometricMatchOperation setUserID:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8a764 (    0x10) -[BiometricMatchOperation selectedIdentitiesBlob] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8a774 (    0x14) -[BiometricMatchOperation setSelectedIdentitiesBlob:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8a788 (    0x10) -[BiometricMatchOperation forUnlock] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8a798 (    0x10) -[BiometricMatchOperation setForUnlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8a7a8 (    0x10) -[BiometricMatchOperation forCredentialSet] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8a7b8 (    0x10) -[BiometricMatchOperation setForCredentialSet:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8a7c8 (    0x10) -[BiometricMatchOperation forPreArm] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8a7d8 (    0x10) -[BiometricMatchOperation setForPreArm:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8a7e8 (    0x10) -[BiometricMatchOperation stopOnSuccess] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8a7f8 (    0x10) -[BiometricMatchOperation setStopOnSuccess:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8a808 (    0x10) -[BiometricMatchOperation noBioLockout] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8a818 (    0x10) -[BiometricMatchOperation setNoBioLockout:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8a828 (    0x10) -[BiometricMatchOperation acmContext] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8a838 (    0x14) -[BiometricMatchOperation setAcmContext:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8a84c (    0x10) -[BiometricMatchOperation useCase] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8a85c (    0x10) -[BiometricMatchOperation setUseCase:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8a86c (    0x10) -[BiometricMatchOperation noBioLockoutUserID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8a87c (    0x10) -[BiometricMatchOperation setNoBioLockoutUserID:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8a88c (    0x10) -[BiometricMatchOperation processedFlags] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8a89c (    0x10) -[BiometricMatchOperation setProcessedFlags:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8a8ac (    0x54) -[BiometricMatchOperation .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8a900 (     0x8) -[BiometricPresenceDetectOperation type] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8a908 (     0x8) -[BiometricPresenceDetectOperation cancelledMessage] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8a910 (    0x48) -[UserProtectedConfig init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8a958 (     0x8) -[UserProtectedConfig unlockEnabled] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8a960 (     0x8) -[UserProtectedConfig setUnlockEnabled:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8a968 (     0x8) -[UserProtectedConfig identificationEnabled] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8a970 (     0x8) -[UserProtectedConfig setIdentificationEnabled:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8a978 (     0x8) -[UserProtectedConfig loginEnabled] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8a980 (     0x8) -[UserProtectedConfig setLoginEnabled:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8a988 (     0x8) -[UserProtectedConfig applePayEnabled] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8a990 (     0x8) -[UserProtectedConfig setApplePayEnabled:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8a998 (     0x8) -[UserProtectedConfig attentionDetectionEnabled] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8a9a0 (     0x8) -[UserProtectedConfig setAttentionDetectionEnabled:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8a9a8 (     0x8) -[UserProtectedConfig periocularMatchEnabled] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8a9b0 (     0x8) -[UserProtectedConfig setPeriocularMatchEnabled:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8a9b8 (    0x48) -[SystemProtectedConfig init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8aa00 (     0x8) -[SystemProtectedConfig biometryEnabled] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8aa08 (     0x8) -[SystemProtectedConfig setBiometryEnabled:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8aa10 (     0x8) -[SystemProtectedConfig unlockEnabled] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8aa18 (     0x8) -[SystemProtectedConfig setUnlockEnabled:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8aa20 (     0x8) -[SystemProtectedConfig identificationEnabled] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8aa28 (     0x8) -[SystemProtectedConfig setIdentificationEnabled:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8aa30 (     0x8) -[SystemProtectedConfig loginEnabled] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8aa38 (     0x8) -[SystemProtectedConfig setLoginEnabled:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8aa40 (     0x8) -[SystemProtectedConfig unlockTokenMaxLifetime] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8aa48 (     0x8) -[SystemProtectedConfig setUnlockTokenMaxLifetime:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8aa50 (     0x8) -[SystemProtectedConfig bioMatchLifespan] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8aa58 (     0x8) -[SystemProtectedConfig setBioMatchLifespan:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8aa60 (     0x8) -[SystemProtectedConfig passcodeInputLifespan] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8aa68 (     0x8) -[SystemProtectedConfig setPasscodeInputLifespan:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8aa70 (     0x8) -[SystemProtectedConfig periocularMatchEnabled] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8aa78 (     0x8) -[SystemProtectedConfig setPeriocularMatchEnabled:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8aa80 (    0x98) -[ActivityTracker initWithDescription:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8ab18 (    0xcc) -[ActivityTracker setActive:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8abe4 (     0xc) -[ActivityTracker activityUpdateBlock] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8abf0 (     0x8) -[ActivityTracker setActivityUpdateBlock:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8abf8 (    0x50) -[ActivityTracker .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8ac48 (    0x10) +[CatacombComponent masterComponent] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8ac58 (    0x44) +[CatacombComponent componentForUserID:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8ac9c (     0x8) -[CatacombComponent component] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8aca4 (     0x8) -[CatacombComponent userID] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8acac (    0x64) -[CatacombComponent isEqualToComponent:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8ad10 (    0x10) -[CatacombComponent isMasterComponent] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8ad20 (    0x24) -[CatacombComponent isUserComponent] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8ad44 (   0x150) -[CatacombComponent description] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8ae94 (    0x40) -[CatacombComponent copyWithZone:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8aed4 (     0x8) -[CatacombComponent hash] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8aedc (    0x7c) -[CatacombComponent isEqual:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8af58 (    0x5c) +[CatacombComponent component:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8afb4 (     0x8) -[CatacombComponent group] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8afbc (    0x24) -[CatacombComponent isGroupComponent] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8afe0 (    0x70) -[CatacombStateCache init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8b050 (    0x60) -[CatacombStateCache reset] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8b0b0 (   0x13c) -[CatacombStateCache addUserStatesFromBuffer:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8b1ec (    0x74) -[CatacombStateCache cachedComponents] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8b260 (   0x178) -[CatacombStateCache cachedUserComponents] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8b3d8 (   0x154) -[CatacombStateCache removeUser:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8b52c (    0x9c) -[CatacombStateCache stateOfComponent:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8b5c8 (    0xa4) -[CatacombStateCache stateOfMasterComponent] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8b66c (    0xac) -[CatacombStateCache stateOfUserComponent:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8b718 (   0x17c) -[CatacombStateCache addGroupStatesFromBuffer:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8b894 (   0x19c) -[CatacombStateCache cachedGroupComponentsForUser:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8ba30 (     0xc) -[CatacombStateCache .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8ba3c (    0x88) +[BiometricKitXPCServer initialize] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8bac4 (   0x768) -[BiometricKitXPCServer init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8c22c (     0xc) __29-[BiometricKitXPCServer init]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8c238 (   0x168) __UserRemovedNotificationCallback [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8c3a0 (   0x114) __FSEventCallback [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8c4b4 (    0x44) __29-[BiometricKitXPCServer init]_block_invoke.351 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8c4f8 (   0x118) __PasscodeChangedNotificationCallback [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8c610 (    0x6c) -[BiometricKitXPCServer initAutoBugCapture] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8c67c (    0xd0) -[BiometricKitXPCServer dealloc] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8c74c (   0x988) -[BiometricKitXPCServer listener:shouldAcceptNewConnection:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8d0d4 (    0x84) __60-[BiometricKitXPCServer listener:shouldAcceptNewConnection:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8d158 (   0x160) __60-[BiometricKitXPCServer listener:shouldAcceptNewConnection:]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8d2b8 (   0x244) -[BiometricKitXPCServer suspendAllConnections:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8d4fc (   0x2b8) -[BiometricKitXPCServer osStateHandler:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8d7b4 (    0x74) -[BiometricKitXPCServer stateDictionaryWithHints:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8d828 (   0x274) -[BiometricKitXPCServer enroll:forUser:withOptions:withClient:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8da9c (    0x30) -[BiometricKitXPCServer createEnrollOperation] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8dacc (   0x17c) -[BiometricKitXPCServer initEnrollOperation:biometricType:userID:options:client:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8dc48 (   0x1d4) -[BiometricKitXPCServer startEnrollOperation:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8de1c (   0x278) -[BiometricKitXPCServer match:withOptions:withClient:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8e094 (    0x30) -[BiometricKitXPCServer createMatchOperation] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8e0c4 (   0x640) -[BiometricKitXPCServer initMatchOperation:filter:options:client:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8e704 (   0x230) -[BiometricKitXPCServer startMatchOperation:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8e934 (   0x230) -[BiometricKitXPCServer detectPresenceWithOptions:withClient:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8eb64 (    0x30) -[BiometricKitXPCServer createPresenceDetectOperation] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8eb94 (   0x124) -[BiometricKitXPCServer initPresenceDetectOperation:options:client:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8ecb8 (   0x178) -[BiometricKitXPCServer startPresenceDetectOperation:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8ee30 (   0x39c) -[BiometricKitXPCServer cancelWithClient:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8f1cc (    0xd8) -[BiometricKitXPCServer registerDelegate:withClient:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8f2a4 (    0xd8) -[BiometricKitXPCServer notifyAppIsInactive:withClient:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8f37c (   0x318) -[BiometricKitXPCServer startBioOperation:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8f694 (   0x1d4) -[BiometricKitXPCServer removeBioOperationOfClient:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8f868 (    0xc4) __52-[BiometricKitXPCServer removeBioOperationOfClient:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8f92c (   0x260) -[BiometricKitXPCServer pauseBioOperation:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8fb8c (    0x70) __43-[BiometricKitXPCServer pauseBioOperation:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8fbfc (   0x194) -[BiometricKitXPCServer resumeQueuedBioOperation] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c8fd90 (   0x35c) -[BiometricKitXPCServer processBioOperation:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c900ec (   0x2f8) -[BiometricKitXPCServer switchToNextBioOperation:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c903e4 (   0x320) -[BiometricKitXPCServer stopBioOperationsAfterReconnect] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c90704 (   0x1a4) -[BiometricKitXPCServer updateActiveOperationNotificationWithOverride:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c908a8 (     0x8) -[BiometricKitXPCServer updateActiveOperationNotification] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c908b0 (    0xe8) -[BiometricKitXPCServer sendStatusMessage:toClient:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c90998 (   0x100) -[BiometricKitXPCServer isClassCFileAccessible] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c90a98 (   0x100) -[BiometricKitXPCServer isCatacombAccessible] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c90b98 (   0x29c) -[BiometricKitXPCServer writeStringToPersistentLog:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c90e34 (    0x8c) -[BiometricKitXPCServer hexDumpData:size:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c90ec0 (   0x198) -[BiometricKitXPCServer logCatacombInfo:data:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c91058 (   0x1d8) -[BiometricKitXPCServer logCatacombUUIDForUser:catacombUUID:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c91230 (   0x200) -[BiometricKitXPCServer logCatacombHashForUser:catacombHash:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c91430 (  0x12b0) -[BiometricKitXPCServer filterIdentities:withFilter:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c926e0 (   0x348) -[BiometricKitXPCServer parseAuthDict:toAuthData:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c92a28 (    0x10) -[BiometricKitXPCServer lastDisplayState] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c92a38 (    0xfc) -[BiometricKitXPCServer isDisplayOn] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c92b34 (   0x1e4) -[BiometricKitXPCServer displayStateChanged:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c92d18 (    0x84) -[BiometricKitXPCServer postGeneralLockoutStateNotification] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c92d9c (   0x148) -[BiometricKitXPCServer updateEnrollmentChangedNotification:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c92ee4 (    0xc4) -[BiometricKitXPCServer disconnectingClient:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c92fa8 (   0x184) -[BiometricKitXPCServer allClients] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c9312c (   0x180) -[BiometricKitXPCServer createMatchEventDictionary:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c932ac (   0x130) -[BiometricKitXPCServer isFingerprintModificationRestricted] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c933dc (   0x200) -[BiometricKitXPCServer restoreAndSyncTemplates] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c935dc (   0x280) -[BiometricKitXPCServer clearTemplateList] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c9385c (   0x298) -[BiometricKitXPCServer clearTemplateListForUser:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c93af4 (   0x14c) -[BiometricKitXPCServer handleFirstUnlock] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c93c40 (   0x1ac) -[BiometricKitXPCServer handleCatacombUnlock] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c93dec (   0x12c) -[BiometricKitXPCServer loadCatacombAfterFirstUnlock] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c93f18 (   0x1b0) -[BiometricKitXPCServer checkCatacombForUser:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c940c8 (   0x1dc) -[BiometricKitXPCServer checkTemplatesValidityForUser:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c942a4 (   0x304) -[BiometricKitXPCServer removeUser:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c945a8 (   0x14c) -[BiometricKitXPCServer isValidUser:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c946f4 (   0x3c8) -[BiometricKitXPCServer validateAllUsers] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c94abc (   0x588) -[BiometricKitXPCServer syncTemplateListForUser:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c95044 (   0x324) -[BiometricKitXPCServer updatePropertiesOfIdentities] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c95368 (   0x2c0) -[BiometricKitXPCServer templatesExistAtBoot] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c95628 (   0x188) -[BiometricKitXPCServer cacheCatacombInfo] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c957b0 (   0x4a4) -[BiometricKitXPCServer readCatacombState] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c95c54 (   0x224) -[BiometricKitXPCServer catacombFileNameForComponent:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c95e78 (   0x294) -[BiometricKitXPCServer getIdentityObjectByUserID:UUID:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c9610c (   0x184) -[BiometricKitXPCServer getIdentityObject:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c96290 (    0x84) -[BiometricKitXPCServer identities] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c96314 (    0x64) -[BiometricKitXPCServer identitiesCount] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c96378 (   0x234) -[BiometricKitXPCServer identitiesOfUser:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c965ac (   0x3d4) -[BiometricKitXPCServer identitiesOfComponent:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c96980 (   0x28c) -[BiometricKitXPCServer catacombComponentForIdentity:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c96c0c (   0x1c0) -[BiometricKitXPCServer singleEnrolledUser] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c96dcc (   0x2f0) -[BiometricKitXPCServer removeIdentityObject:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c970bc (   0x1c0) -[BiometricKitXPCServer addIdentityObject:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c9727c (   0x26c) -[BiometricKitXPCServer addIdentityObjects:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c974e8 (   0x218) -[BiometricKitXPCServer saveCatacombIfDirtyWithInterval:andDelay:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c97700 (    0x60) __66-[BiometricKitXPCServer saveCatacombIfDirtyWithInterval:andDelay:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c97760 (   0x14c) -[BiometricKitXPCServer saveTemplateListAfterTemplateUpdate] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c978ac (   0x374) -[BiometricKitXPCServer deleteUnusedCatacombFiles] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c97c20 (   0x368) -[BiometricKitXPCServer getCatacombSaveListForComponents:list:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c97f88 (     0x8) -[BiometricKitXPCServer catacombVersion] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c97f90 (   0x57c) -[BiometricKitXPCServer archiveCatacombDataForComponent:toArchiver:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c9850c (   0x6cc) -[BiometricKitXPCServer unarchiveCatacombDataForComponent:fromUnarchiver:secureData:identities:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c98bd8 (    0x88) -[BiometricKitXPCServer saveCatacomb] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c98c60 (   0x410) -[BiometricKitXPCServer saveCatacombForComponents:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c99070 (   0x1e8) -[BiometricKitXPCServer saveCatacombForIdentity:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c99258 (   0x4fc) -[BiometricKitXPCServer loadCatacomb] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c99754 (   0x244) -[BiometricKitXPCServer loadCatacombForUser:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c99998 (   0x778) -[BiometricKitXPCServer loadCatacombForComponent:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c9a110 (   0x2d4) -[BiometricKitXPCServer writeBioLockoutData:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c9a3e4 (   0x27c) -[BiometricKitXPCServer readBioLockoutData:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c9a660 (   0x228) -[BiometricKitXPCServer saveBioLockoutRecord] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c9a888 (   0x51c) -[BiometricKitXPCServer loadBioLockoutRecord] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c9ada4 (     0x8) -[BiometricKitXPCServer supportsRemovableAccessories] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c9adac (   0x984) -[BiometricKitXPCServer cacheAccessories] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c9b730 (   0x2ac) -[BiometricKitXPCServer getAccessoryObject:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c9b9dc (     0x4) -[BiometricKitXPCServer accessoryAdded:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c9b9e0 (     0x4) -[BiometricKitXPCServer accessoryRemoved:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c9b9e4 (     0x4) -[BiometricKitXPCServer accessoryConnected:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c9b9e8 (     0x4) -[BiometricKitXPCServer accessoryDisconnected:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c9b9ec (     0x4) -[BiometricKitXPCServer accessoryMayHaveChanged] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c9b9f0 (    0x74) -[BiometricKitXPCServer pairedAccessories] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c9ba64 (   0x18c) -[BiometricKitXPCServer connectedAccessories] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c9bbf0 (   0x238) -[BiometricKitXPCServer listAccessories:client:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c9be28 (   0x2e8) -[BiometricKitXPCServer getFreeIdentityCount:forUser:accessoryGroup:client:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c9c110 (   0x204) -[BiometricKitXPCServer getPreferencesValue:forKey:withClient:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c9c314 (   0x1c8) -[BiometricKitXPCServer setPreferencesValue:forKey:withClient:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c9c4dc (   0x99c) -[BiometricKitXPCServer getUserUUIDsForUIDs:userUUIDs:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c9ce78 (   0x278) -[BiometricKitXPCServer getUserUUIDForUID:userUUID:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c9d0f0 (    0xf0) -[BiometricKitXPCServer getUserKeybagUUIDForUID:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c9d1e0 (   0x1d4) -[BiometricKitXPCServer validateUsersKeybagUUIDs] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c9d3b4 (   0x1ac) __49-[BiometricKitXPCServer validateUsersKeybagUUIDs]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c9d560 (   0x30c) -[BiometricKitXPCServer updateIdentity:withOptions:withClient:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c9d86c (   0x2d0) -[BiometricKitXPCServer removeIdentity:withOptions:withClient:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c9db3c (   0x3cc) -[BiometricKitXPCServer removeAllIdentitiesForUser:withOptions:withClient:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c9df08 (   0x2f8) -[BiometricKitXPCServer getIdentityFromUUID:withClient:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c9e200 (   0x218) -[BiometricKitXPCServer identities:withClient:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c9e418 (   0x198) -[BiometricKitXPCServer getMaxIdentityCount:withClient:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c9e5b0 (   0x1bc) -[BiometricKitXPCServer getFreeIdentityCount:forUser:withClient:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c9e76c (   0x234) -[BiometricKitXPCServer getIdentitiesDatabaseUUIDForUser:withClient:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c9e9a0 (   0x234) -[BiometricKitXPCServer getIdentitiesDatabaseHashForUser:withClient:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c9ebd4 (   0x174) -[BiometricKitXPCServer dropUnlockTokenWithClient:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c9ed48 (   0x230) -[BiometricKitXPCServer forceBioLockoutForUser:withOptions:withClient:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c9ef78 (   0x1ec) -[BiometricKitXPCServer getBioLockoutState:forUser:withClient:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c9f164 (   0x2f4) -[BiometricKitXPCServer getExpressModeState:forUser:withClient:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c9f458 (   0x228) -[BiometricKitXPCServer getBiometryAvailability:forUser:withClient:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c9f680 (   0x1a0) -[BiometricKitXPCServer isXARTAvailableWithClient:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c9f820 (   0x208) -[BiometricKitXPCServer getLastMatchEvent:withClient:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c9fa28 (   0x1d8) -[BiometricKitXPCServer getDeviceHardwareState:withClient:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8c9fc00 (   0x620) -[BiometricKitXPCServer getProtectedConfigurationForUser:withClient:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca0220 (   0x480) -[BiometricKitXPCServer getSystemProtectedConfigurationWithClient:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca06a0 (   0x6ec) -[BiometricKitXPCServer setProtectedConfiguration:forUser:withOptions:withClient:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca0d8c (   0x89c) -[BiometricKitXPCServer setSystemProtectedConfiguration:withOptions:withClient:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca1628 (     0x8) -[BiometricKitXPCServer performCancelCommand] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca1630 (     0x8) -[BiometricKitXPCServer performEnrollCommand:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca1638 (     0x8) -[BiometricKitXPCServer performMatchCommand:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca1640 (     0x8) -[BiometricKitXPCServer performPresenceDetectCommand:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca1648 (     0x8) -[BiometricKitXPCServer performDisplayStatusChangedCommand:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca1650 (     0x8) -[BiometricKitXPCServer performGetIdentitiesListCommand:outBuffer:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca1658 (     0x8) -[BiometricKitXPCServer performGetCatacombStateCommand:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca1660 (     0x8) -[BiometricKitXPCServer performGetTemplatesValidityCommand:isValid:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca1668 (     0x8) -[BiometricKitXPCServer performRemoveIdentityCommand:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca1670 (     0x8) -[BiometricKitXPCServer performGetBiometrickitdInfoCommand:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca1678 (     0x8) -[BiometricKitXPCServer performRemoveUserDataCommand:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca1680 (     0x8) -[BiometricKitXPCServer performPrepareSaveCatacombCommand:outDataSize:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca1688 (     0x8) -[BiometricKitXPCServer performCompleteSaveCatacombCommand:outBuffer:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca1690 (     0x8) -[BiometricKitXPCServer performConfirmSaveCatacombCommand:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca1698 (     0x8) -[BiometricKitXPCServer performNoCatacombCommand:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca16a0 (     0x8) -[BiometricKitXPCServer performLoadCatacombCommand:inData:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca16a8 (     0x8) -[BiometricKitXPCServer performSaveBioLockoutRecordCommand:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca16b0 (     0x8) -[BiometricKitXPCServer performLoadBioLockoutRecordCommand:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca16b8 (     0x8) -[BiometricKitXPCServer performRequestMaxIdentityCountCommand:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca16c0 (     0x8) -[BiometricKitXPCServer performGetFreeIdentityCountCommand:outCount:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca16c8 (     0x8) -[BiometricKitXPCServer performGetCatacombUUIDCommand:outUUID:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca16d0 (     0x8) -[BiometricKitXPCServer performGetCatacombHashCommand:outHash:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca16d8 (     0x8) -[BiometricKitXPCServer performDropUnlockTokenCommand] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca16e0 (     0x8) -[BiometricKitXPCServer performForceBioLockoutCommand:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca16e8 (     0x8) -[BiometricKitXPCServer performGetSKSLockStateCommand:outState:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca16f0 (     0x8) -[BiometricKitXPCServer performIsXARTAvailableCommand:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca16f8 (     0x8) -[BiometricKitXPCServer performGetLastMatchEventCommand:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca1700 (     0x8) -[BiometricKitXPCServer performGetDeviceHardwareStateCommand:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca1708 (     0x8) -[BiometricKitXPCServer performGetProtectedConfigCommand:outSetCfg:outEffectiveCfg:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca1710 (     0x8) -[BiometricKitXPCServer performGetSystemProtectedConfigCommand:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca1718 (     0x8) -[BiometricKitXPCServer performSetProtectedConfigCommand:cfg:authData:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca1720 (     0x8) -[BiometricKitXPCServer performSetSystemProtectedConfigCommand:authData:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca1728 (     0x8) -[BiometricKitXPCServer performRequestMessageDataCommand:size:outData:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca1730 (     0x8) -[BiometricKitXPCServer performGetCatacombGroupStateCommand:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca1738 (     0x8) -[BiometricKitXPCServer performGetIdentityRecordsCommand:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca1740 (     0x8) -[BiometricKitXPCServer performGetBioDeviceListCommand:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca1748 (     0x8) -[BiometricKitXPCServer performGetFreeIdentityCountCommand:group:outCount:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca1750 (     0x8) -[BiometricKitXPCServer serviceConnect] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca1758 (   0x36c) -[BiometricKitXPCServer doSharedMemoryTransfers] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca1ac4 (    0x78) -[BiometricKitXPCServer handleSharedMemoryTransfer:withHeader:data:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca1b3c (     0x8) -[BiometricKitXPCServer registerDSID:withOptions:withClient:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca1b44 (     0x8) -[BiometricKitXPCServer registerStoreToken:withClient:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca1b4c (     0x8) -[BiometricKitXPCServer getCountersignedStoreToken:withClient:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca1b54 (     0x8) -[BiometricKitXPCServer diagnostics:withOptions:passed:withDetails:withClient:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca1b5c (     0x4) -[BiometricKitXPCServer timestampEvent:absoluteTime:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca1b60 (     0x8) -[BiometricKitXPCServer setUserDSID:withOptions:withClient:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca1b68 (     0x8) -[BiometricKitXPCServer resetAppleConnectCounterWithClient:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca1b70 (     0x8) -[BiometricKitXPCServer enrollContinue] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca1b78 (     0x8) -[BiometricKitXPCServer pullAlignmentData] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca1b80 (     0x8) -[BiometricKitXPCServer pullMatchPolicyInfoData] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca1b88 (     0x8) -[BiometricKitXPCServer getNodeTopologyForIdentity:withClient:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca1b90 (     0x8) -[BiometricKitXPCServer getEnabledForUnlock] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca1b98 (     0x8) -[BiometricKitXPCServer setAppleMesaSEPLoggingLevel] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca1ba0 (     0x8) -[BiometricKitXPCServer getProvisioningStateWithClient:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca1ba8 (     0x8) -[BiometricKitXPCServer isFingerOnWithClient:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca1bb0 (     0x8) -[BiometricKitXPCServer enableBackgroundFdet:withClient:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca1bb8 (     0x8) -[BiometricKitXPCServer getDeviceStateWithClient:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca1bc0 (     0x8) -[BiometricKitXPCServer startNewMatchAttemptWithClient:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca1bc8 (     0x8) -[BiometricKitXPCServer completeEnrollmentWithClient:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca1bd0 (     0x8) -[BiometricKitXPCServer suspendEnrollment:withClient:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca1bd8 (     0x8) -[BiometricKitXPCServer setTemplate:forIdentity:withClient:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca1be0 (     0x8) -[BiometricKitXPCServer isPeriocularEnrollmentSupported:withClient:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca1be8 (     0x8) -[BiometricKitXPCServer getPeriocularMatchStateForUser:state:withClient:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca1bf0 (     0x8) -[BiometricKitXPCServer removePeriocularTemplatesWithOptions:withClient:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca1bf8 (     0x8) -[BiometricKitXPCServer queryIdentityMigrationFailureForUser:failed:clear:withClient:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca1c00 (     0x8) -[BiometricKitXPCServer enableMatchAutoRetry:withClient:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca1c08 (     0x8) -[BiometricKitXPCServer pauseFaceDetectTimer:withClient:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca1c10 (     0x8) -[BiometricKitXPCServer pullCalibrationDataWithClient:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca1c18 (     0x8) -[BiometricKitXPCServer pullCaptureBufferWithClient:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca1c20 (     0x8) -[BiometricKitXPCServer setDebugImages:withClient:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca1c28 (     0x8) -[BiometricKitXPCServer pullDebugImageData:rotated:hasWidth:hasHeight:withClient:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca1c30 (     0x8) -[BiometricKitXPCServer getSensorCalibrationStatusWithClient:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca1c38 (     0x8) -[BiometricKitXPCServer getCalibrationDataInfoWithClient:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca1c40 (     0x8) -[BiometricKitXPCServer getSensorInfoWithClient:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca1c48 (     0x8) -[BiometricKitXPCServer getLogs:withDetails:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca1c50 (     0x8) -[BiometricKitXPCServer fileRadarWithLogs:withDescription:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca1c58 (   0x244) -[BiometricKitXPCServer serviceStatus:type:inValue:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca1e9c (   0x208) -[BiometricKitXPCServer serviceStatus:version:ordinal:data:timestamp:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca20a4 (     0x4) -[BiometricKitXPCServer enrollResult:withTimestamp:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca20a8 (     0x4) -[BiometricKitXPCServer enrollUpdate:withTimestamp:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca20ac (     0x4) -[BiometricKitXPCServer enrollFeedback:withTimestamp:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca20b0 (     0x4) -[BiometricKitXPCServer matchResult:timestamp:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca20b4 (     0x4) -[BiometricKitXPCServer statusMessage:withData:timestamp:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca20b8 (     0x8) -[BiometricKitXPCServer notifyport] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca20c0 (     0x8) -[BiometricKitXPCServer cmdDispatchQueue] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca20c8 (     0x8) -[BiometricKitXPCServer ariadneSignposts] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca20d0 (     0x8) -[BiometricKitXPCServer setAriadneSignposts:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca20d8 (     0x8) -[BiometricKitXPCServer bioOpsQueue] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca20e0 (     0x8) -[BiometricKitXPCServer activeBioOpsQueue] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca20e8 (     0x8) -[BiometricKitXPCServer runningBioOp] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca20f0 (     0x8) -[BiometricKitXPCServer ongoingCatacombSaveTimer] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca20f8 (     0x8) -[BiometricKitXPCServer ongoingBiometricOperation] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca2100 (     0x8) -[BiometricKitXPCServer cachedIdentities] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca2108 (     0x8) -[BiometricKitXPCServer catacombLock] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca2110 (     0x8) -[BiometricKitXPCServer catacomb] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca2118 (     0x8) -[BiometricKitXPCServer templatesAtBoot] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca2120 (     0x8) -[BiometricKitXPCServer setTemplatesAtBoot:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca2128 (     0x8) -[BiometricKitXPCServer catacombFileAccessed] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca2130 (     0x8) -[BiometricKitXPCServer setCatacombFileAccessed:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca2138 (     0x8) -[BiometricKitXPCServer catacombRestored] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca2140 (     0x8) -[BiometricKitXPCServer setCatacombRestored:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca2148 (     0x8) -[BiometricKitXPCServer catacombStateCache] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca2150 (     0x8) -[BiometricKitXPCServer biometricABC] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca2158 (     0xc) -[BiometricKitXPCServer setBiometricABC:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca2164 (     0x8) -[BiometricKitXPCServer biometricABCDispatchQueue] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca216c (     0xc) -[BiometricKitXPCServer setBiometricABCDispatchQueue:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca2178 (     0x8) -[BiometricKitXPCServer accessories] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca2180 (   0x104) -[BiometricKitXPCServer .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca2284 (    0x64) -[BKEvent initWithEventOrCode:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca22e8 (    0x78) -[BKEvent initWithEncodedEventOrCode:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca2360 (    0x9c) -[BKEvent setProperties] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca23fc (   0x120) -[BKEvent description] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca251c (    0x48) -[BKEvent encodeEventValue:secondValue:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca2564 (     0x8) -[BKEvent cls] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca256c (     0x8) -[BKEvent event] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca2574 (     0xc) -[BKEvent isStart] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca2580 (     0xc) -[BKEvent isTerminal] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca258c (     0xc) -[BKEvent isMetadata] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca2598 (     0xc) -[BKEvent isSmartKeyboard] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca25a4 (     0xc) -[BKEvent isHigh] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca25b0 (     0xc) -[BKEvent isLow] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca25bc (    0xa0) +[BiometricKitEventLogger logger] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca265c (    0xc0) __33+[BiometricKitEventLogger logger]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca271c (   0x104) -[BiometricKitEventLogger init] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca2820 (     0x8) __31-[BiometricKitEventLogger init]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca2828 (    0xa8) -[BiometricKitEventLogger appendEventValue:isMetadata:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca28d0 (   0x124) -[BiometricKitEventLogger appendEvent:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca29f4 (    0x74) -[BiometricKitEventLogger logEventOrCode:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca2a68 (   0x110) __42-[BiometricKitEventLogger logEventOrCode:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca2b78 (   0x154) -[BiometricKitEventLogger logDeviceMetadata] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca2ccc (    0x10) -[BiometricKitEventLogger logSmartKeyboardStatus] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca2cdc (   0x254) -[BiometricKitEventLogger flushEvents] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca2f30 (    0x50) -[BiometricKitEventLogger .cxx_destruct] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca2f80 (    0x54) -[AWDBiometricKitEventLog dealloc] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca2fd4 (    0x24) -[AWDBiometricKitEventLog setTimestamp:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca2ff8 (    0x1c) -[AWDBiometricKitEventLog setHasTimestamp:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca3014 (    0x14) -[AWDBiometricKitEventLog hasTimestamp] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca3028 (    0x14) -[AWDBiometricKitEventLog eventsCount] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca303c (    0x10) -[AWDBiometricKitEventLog events] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca304c (    0x10) -[AWDBiometricKitEventLog clearEvents] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca305c (    0x14) -[AWDBiometricKitEventLog addEvent:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca3070 (    0xc4) -[AWDBiometricKitEventLog eventAtIndex:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca3134 (    0x18) -[AWDBiometricKitEventLog setEvents:count:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca314c (    0xb8) -[AWDBiometricKitEventLog description] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca3204 (    0xdc) -[AWDBiometricKitEventLog dictionaryRepresentation] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca32e0 (   0x3a4) AWDBiometricKitEventLogReadFrom [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca3684 (     0x8) -[AWDBiometricKitEventLog readFrom:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca368c (    0xac) -[AWDBiometricKitEventLog writeTo:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca3738 (    0xc0) -[AWDBiometricKitEventLog copyTo:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca37f8 (    0x7c) -[AWDBiometricKitEventLog copyWithZone:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca3874 (    0xb4) -[AWDBiometricKitEventLog isEqual:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca3928 (    0x60) -[AWDBiometricKitEventLog hash] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca3988 (    0xac) -[AWDBiometricKitEventLog mergeFrom:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca3a34 (    0x10) -[AWDBiometricKitEventLog timestamp] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca3a44 (    0xac) MCDMExtractMessageData [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca3af0 (    0x70) lib_platform_rng [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca3b60 (    0x68) lib_platform_read_random [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca3bc8 (   0x318) rfc3394_wrap [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca3ee0 (    0x6c) rfc3394_wrap_legacy [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca3f4c (   0x360) rfc3394_unwrap [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca42ac (    0x6c) rfc3394_unwrap_legacy [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca4318 (    0x2c) rfc3394_wrapped_size_legacy [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca4344 (    0x30) rfc3394_wrapped_size [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca4374 (    0x14) rfc3394_unwrapped_size_legacy [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca4388 (    0x14) rfc3394_unwrapped_size [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca439c (   0x228) aks_fv_new_vek [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca45c4 (    0x8c) get_aks_client_connection [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca4650 (    0xdc) _aks_save_file [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca472c (   0x108) _aks_load_file [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca4834 (    0x94) aks_delete_xart_leak [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca48c8 (   0x110) _iterate_path [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca49d8 (   0x118) aks_dump_path [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca4af0 (    0x5c) __aks_dump_path_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca4b4c (    0x5c) _get_path_class [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca4ba8 (    0x58) __aks_dump_path_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca4c00 (   0x184) aks_fs_supports_enhanced_apfs [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca4d84 (    0xd4) aks_fs_status [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca4e58 (   0x144) aks_fs_status_with_map [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca4f9c (    0x88) aks_user_fs_status [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca5024 (    0x68) aks_show_allowlist [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca508c (    0x68) aks_show_allowlist_with_map [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca50f4 (   0x1f4) aks_fv_new_kek [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca52e8 (   0x208) aks_fv_new_sibling_vek [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca54f0 (   0x228) aks_fv_rewrap_kek [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca5718 (   0x200) aks_fv_set_protection [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca5918 (   0x21c) aks_fv_unwrap_vek_with_acm [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca5b34 (     0xc) aks_fv_unwrap_vek_with_opts [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca5b40 (     0xc) aks_gather_stats [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca5b4c (    0x98) aks_kext_set_options [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca5be4 (    0xc0) aks_kext_get_options [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca5ca4 (    0x54) aks_internal_state [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca5cf8 (    0x94) aks_run_internal_test [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca5d8c (   0x180) aks_stash_escrow [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca5f0c (    0x40) __get_aks_client_connection_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca5f4c (    0x8c) get_akstest_client_connection [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca5fd8 (    0x40) __get_akstest_client_connection_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca6018 (   0x138) akstest_new_key [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca6150 (   0x15c) akstest_new_ekwk [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca62ac (    0xc0) akstest_new_ek [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca636c (   0x114) akstest_rewrap_ek [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca6480 (   0x13c) akstest_unwrap_key [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca65bc (   0x14c) akstest_unwrap_ek [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca6708 (    0x74) akstest_check_class [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca677c (    0xb0) akstest_last_user [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca682c (   0x158) aks_get_internal_info_for_key [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca6984 (    0x2c) __get_aks_client_dispatch_queue_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca69b0 (    0xf8) _copy_aks_client_connection [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca6aa8 (    0x84) sizeof_backup_bag [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca6b2c (    0xe4) encode_backup_bag [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca6c10 (    0xe0) decode_backup_bag [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca6cf0 (   0x138) wrap_backup_bag [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca6e28 (   0x13c) unwrap_backup_bag [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca6f64 (   0x154) aks_stash_create_for_bag_and_kek [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca70b8 (    0x34) aks_stash_create [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca70ec (     0xc) aks_stash_load [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca70f8 (    0xd0) _aks_stash_load [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca71c8 (    0x5c) aks_stash_verify [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca7224 (    0x54) aks_stash_destroy [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca7278 (    0x94) aks_stash_commit [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca730c (    0x94) aks_stash_enable [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca73a0 (    0x94) aks_stash_persist [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca7434 (    0x54) aks_prederived_free [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca7488 (   0x110) aks_prederived_create [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca7598 (    0xe0) _aks_prederived_create_ctx [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca7678 (    0x9c) _aks_prederive_passcode [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca7714 (   0x1d8) _set_prederived_configuration [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca78ec (   0x278) aks_prederived_is_enabled [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca7b64 (    0xcc) aks_prederived_unlock_keybag [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca7c30 (    0xac) aks_unlock_bag [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca7cdc (   0x15c) aks_prederived_change_secret [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca7e38 (    0x18) aks_create_bag [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca7e50 (   0x100) _create_bag [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca7f50 (    0x18) aks_create_escrow_bag [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca7f68 (    0x28) aks_create_escrow_bag_with_auth [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca7f90 (    0x1c) aks_create_sync_bag [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca7fac (    0x2c) aks_create_sync_bag_with_auth [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca7fd8 (    0x54) aks_invalidate_sync_bags [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca802c (    0xcc) aks_unlock_with_sync_bag [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca80f8 (    0xc4) aks_load_bag [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca81bc (    0x78) aks_invalidate_bag [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca8234 (    0x94) aks_unload_bag [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca82c8 (    0x94) aks_unload_session_bags [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca835c (   0x138) aks_save_bag [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca8494 (   0x120) aks_change_secret_opts [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca85b4 (    0x24) aks_change_secret_se [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca85d8 (    0x40) aks_change_secret [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca8618 (    0xd0) aks_get_bag_uuid [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca86e8 (    0x14) aks_copy_volume_cookie [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca86fc (   0x15c) aks_copy_volume_cookie_persona [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca8858 (    0x94) aks_lock_bag [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca88ec (    0xc4) aks_get_lock_state [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca89b0 (   0x114) aks_wrap_key [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca8ac4 (    0xf0) aks_unwrap_key [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca8bb4 (    0xec) aks_rewrap_key_for_backup [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca8ca0 (    0xc8) aks_get_system [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca8d68 (    0xb4) aks_set_system_with_passcode [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca8e1c (     0xc) aks_set_system [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca8e28 (    0x14) aks_set_keybag_for_volume [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca8e3c (     0xc) aks_set_keybag_for_volume_with_cookie [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca8e48 (   0x118) aks_set_keybag_for_volume_with_cookie_persona [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca8f60 (   0x160) aks_backup_enable_volume [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca90c0 (    0xb4) aks_backup_disable_volume [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca9174 (    0xc4) aks_backup_copy_current_bag_uuid [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca9238 (   0x130) aks_backup_rewrap_key [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca9368 (   0x144) aks_backup_rewrap_ek [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca94ac (    0xf0) aks_backup_unwrap_bag [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca959c (    0xac) aks_backup_copy_bag_uuid [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca9648 (    0xc0) aks_backup_unwrap_key [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca9708 (    0xc4) aks_kc_backup_unwrap_key [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca97cc (    0xc4) aks_kc_backup_wrap_key [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca9890 (    0xc4) aks_kc_backup_get_handle [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca9954 (    0xf0) aks_kc_backup_get_uuid [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca9a44 (   0x230) aks_kc_backup_open_keybag [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca9c74 (   0x100) aks_keybag_persona_create [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca9d74 (   0x110) aks_keybag_persona_create_with_flags [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca9e84 (   0x158) aks_keybag_persona_list [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8ca9fdc (    0xec) aks_keybag_persona_delete [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8caa0c8 (    0xdc) aks_auth_token_create [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8caa1a4 (   0x2bc) aks_set_configuration [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8caa460 (   0x108) _copy_cf_key [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8caa568 (   0x50c) aks_get_configuration [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8caaa74 (   0x148) _set_cf_key [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8caabbc (    0x90) aks_assert_hold [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8caac4c (    0x8c) aks_assert_drop [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8caacd8 (    0x9c) aks_assert_promote [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8caad74 (    0x88) aks_assert_consume [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8caadfc (   0x110) aks_recover_with_escrow_bag [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8caaf0c (   0x14c) aks_fdr_hmac_data [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cab058 (    0xc4) aks_generation [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cab11c (   0x138) _aks_verify_password [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cab254 (     0x8) aks_verify_password [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cab25c (     0x8) aks_verify_password_memento [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cab264 (    0x5c) aks_register_for_notifications [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cab2c0 (   0x140) aks_create_signing_key [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cab400 (   0x160) aks_create_signing_key_with_params [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cab560 (    0x18) aks_obliterate_signing_keys [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cab578 (   0x168) remote_session_operate [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cab6e0 (   0x1b0) aks_sign_signing_key [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cab890 (   0x120) aks_remote_session [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cab9b0 (   0x1d8) aks_validate_local_key [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cabb88 (    0x18) aks_remote_session_step [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cabba0 (    0x18) aks_remote_peer_setup [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cabbb8 (    0x18) aks_remote_peer_register [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cabbd0 (    0x18) aks_remote_peer_confirm [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cabbe8 (    0x18) aks_remote_session_token [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cabc00 (   0x148) aks_drain_backup_keys [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cabd48 (   0x1a4) aks_drain_backup_keys_info [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cabeec (    0x94) aks_clear_backup_bag [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cabf80 (   0x184) aks_set_backup_bag [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cac104 (    0xc4) aks_make_public_backup_bag [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cac1c8 (    0x18) aks_remote_session_reset [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cac1e0 (    0x1c) aks_remote_session_reset_all [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cac1fc (    0x18) aks_reset_session [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cac214 (     0xc) aks_get_device_state [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cac220 (   0x128) _get_device_state [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cac348 (     0xc) aks_get_extended_device_state [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cac354 (   0x21c) aks_remote_peer_get_state [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cac570 (    0x98) aks_remote_peer_drop [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cac608 (    0xa0) aks_lock_device [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cac6a8 (    0x88) aks_lock_cx [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cac730 (    0x90) aks_unlock_device [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cac7c0 (    0x54) aks_obliterate_class_d [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cac814 (    0xc4) aks_migrate_s_key [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cac8d8 (   0x144) aks_smartcard_register [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8caca1c (    0x88) aks_smartcard_unregister [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cacaa4 (   0x13c) aks_smartcard_request_unlock [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cacbe0 (   0x194) aks_smartcard_unlock [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cacd74 (    0x50) aks_smartcard_get_sc_usk [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cacdc4 (   0x130) aks_smartcard_get_foo [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cacef4 (    0x50) aks_smartcard_get_ec_pub [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cacf44 (    0x6c) aks_smartcard_get_mode [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cacfb0 (    0x6c) aks_smartcard_get_version [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cad01c (    0x88) aks_se_fail [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cad0a4 (    0x88) aks_se_set_healthy [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cad12c (     0x8) aks_se_set_secret [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cad134 (    0x98) __aks_se_set_secret [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cad1cc (     0x8) aks_se_set_secret_memento [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cad1d4 (    0x8c) aks_se_recover [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cad260 (    0x8c) aks_change_secret_epilogue [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cad2ec (   0x220) aks_se_get_reset_token_for_memento_secret [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cad50c (    0x14) aks_se_get_reset_token [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cad520 (    0x9c) aks_se_set_nonce [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cad5bc (   0x1c0) aks_se_get_reset_sig [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cad77c (   0x160) aks_se_get_reset_pubkey [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cad8dc (    0x88) aks_se_delete_reset_token [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cad964 (    0x88) aks_se_support_in_rm [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cad9ec (    0xb0) aks_se_support_in_rm_is_set [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cada9c (    0x54) aks_se_stage_stash [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cadaf0 (    0x20) aks_fv_lock_volume_bag [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cadb10 (    0x1c) aks_fv_unwrap_vek [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cadb2c (   0x188) aks_fv_get_blob_state [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cadcb4 (    0x6c) aks_fv_get_last_known_gp_state [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cadd20 (   0x158) aks_fv_get_size [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cade78 (   0x1f0) aks_fv_import [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cae068 (    0x10) aks_fv_get_verifier_size [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cae078 (    0x10) aks_fv_get_access_token_size [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cae088 (    0x18) aks_fv_new_verifier [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cae0a0 (    0x1c) aks_fv_rewrap_verifier [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cae0bc (    0x44) aks_fv_new_access_token [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cae100 (    0x50) aks_fv_new_unbound_access_token [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cae150 (    0x20) aks_fv_bind_access_token [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cae170 (    0xbc) aks_fv_is_access_token_unbound [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cae22c (    0x20) aks_fv_load_access_token_as_system_keychain [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cae24c (    0x24) aks_fv_verify_user_opts [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cae270 (   0x198) aks_fv_grant_ownership [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cae408 (    0x1c) aks_fv_owners_exist [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cae424 (    0x54) aks_fv_remove_external_kek_group [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cae478 (   0x15c) aks_fv_sidp_status [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cae5d4 (    0x20) aks_fv_stash_kek [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cae5f4 (    0x7c) aks_fv_stash_kek_with_secret [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cae670 (    0x60) aks_fv_commit_stashed_kek [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cae6d0 (    0x60) aks_fv_destroy_stashed_kek [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cae730 (    0x20) aks_fv_verify_user [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cae750 (    0x20) aks_fv_delete_verifier [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cae770 (   0x1ac) aks_absinthe_collection [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cae91c (   0x138) aks_absinthe_generate [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8caea54 (    0x88) aks_drop_auxiliary_auth_by_uid [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8caeadc (    0x8c) aks_drop_auxiliary_auth_by_handle [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8caeb68 (    0x54) aks_lower_iteration_count [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8caebbc (    0x88) aks_se_secret_drop [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8caec44 (    0xcc) aks_get_current_sep_measurement [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8caed10 (    0x10) aks_get_internal_info [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8caed20 (   0x124) aks_get_internal_state [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8caee44 (    0xd4) aks_fairplay_wrap [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8caef18 (    0xd4) aks_fairplay_generate_csk [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8caefec (   0x17c) aks_bak_get_beacon_internal [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8caf168 (   0x13c) aks_bak_get_beacon [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8caf2a4 (   0x200) aks_bak_get_swizzler_internal [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8caf4a4 (    0x18) aks_bak_get_swizzler [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8caf4bc (    0x5c) aks_test_stashed_kek [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8caf518 (    0x14) aks_bag_in_xart [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8caf52c (    0x54) aks_prewarm_sps [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8caf580 (   0x1b0) aks_sealed_hashes_set [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8caf730 (    0x8c) aks_lkgp_recover [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8caf7bc (    0x88) aks_memento_efface_blob [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8caf844 (   0x134) aks_memento_get_state [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8caf978 (    0x54) aks_set_jcop_supports_updated_kud_policy [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8caf9cc (     0x8) get_aks_log_pid [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8caf9d4 (     0x4) uuid_to_string [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8caf9d8 (    0x74) compress_uuid [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cafa4c (    0x54) time_seconds_to_abs_interval [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cafaa0 (    0x40) time_absolute_to_nanoseconds [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cafae0 (    0x50) get_usec_time [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cafb30 (    0x30) get_clock_time [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cafb60 (    0x50) get_ipc_usec_time [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cafbb0 (    0x30) get_ipc_clock_time [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cafbe0 (    0x10) ipc_seconds_to_microsecond_interval [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cafbf0 (    0x18) ipc_microseconds_to_seconds [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cafc08 (    0xe0) circular_queue_init [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cafce8 (    0x1c) circular_queue_size [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cafd04 (    0x6c) circular_queue_enqueue [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cafd70 (    0x8c) circular_queue_dequeue [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cafdfc (    0x48) circular_queue_peek [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cafe44 (   0x12c) circular_queue_dequeue_all [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8caff70 (    0x20) circular_queue_clear [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8caff90 (    0x7c) circular_queue_free [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb000c (     0x8) class_gen_get [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb0014 (    0x44) persona_uuid_is_valid [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb0058 (    0x2c) is_non_zero [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb0084 (    0x14) pfk_params_is_valid [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb0098 (     0x8) class_gen_set [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb00a0 (     0x8) class_persona_get [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb00a8 (     0x8) class_persona_unset [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb00b0 (     0x8) class_persona_set [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb00b8 (    0x2c) keychain_key [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb00e4 (    0x10) class_id_get [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb00f4 (    0x28) fs_class_key [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb011c (     0x8) keystore_type [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb0124 (    0x10) store_type_equal [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb0134 (    0x14) memcmp_c [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb0148 (   0x1e4) dump_bytes_internal [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb032c (    0x94) bytes_to_str_hint [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb03c0 (    0xcc) get_kcv [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb048c (    0x58) print_kcv [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb04e4 (    0x30) byte_swap_val [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb0514 (   0x108) ascii_hex_to_bytes [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb061c (    0x1c) err_sks_to_aks [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb0638 (    0x94) fv_init_cred_from_secret [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb06cc (    0x74) REQUIRE_func [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb0740 (    0xf8) generate_wrapping_key_curve25519 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb0838 (   0x37c) wrap_data [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb0bb4 (    0xc0) generate_unwrap_shared_key_curve25519 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb0c74 (   0x358) unwrap_data [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb0fcc (     0x8) firebloom_get_sized_len [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb0fd4 (    0x14) firebloom_get_sized_copy [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb0fe8 (    0xa8) firebloom_ipc_copy_out [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb1090 (     0x4) firebloom_cccurve25519 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb1094 (    0x80) firebloom_export_pub_key [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb1114 (    0x20) firebloom_cp_prime_size [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb1134 (     0x4) firebloom_cp_prime_bitlen [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb1138 (    0x28) firebloom_sign_max_size [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb1160 (    0x28) firebloom_ec_export_pub_size [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb1188 (    0x24) firebloom_ec_compact_export_pub_size [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb11ac (     0x8) firebloom_cbc_one_shot_f [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb11b4 (     0x8) firebloom_ecb_one_shot_f [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb11bc (     0x8) firebloom_cbc_update_f [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb11c4 (     0x4) firebloom_curve25519_make_key_pair [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb11c8 (     0x4) firebloom_ed25519_make_key_pair [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb11cc (    0x7c) firebloom_ec_import [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb1248 (    0x34) firebloom_ec_export [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb127c (    0x60) decode_implicit_raw_octet_string [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb12dc (    0x7c) decode_implicit_raw_octet_string_copy [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb1358 (    0x78) decode_implicit_uint64 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb13d0 (    0x5c) der_decode_any [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb142c (    0x48) encode_fv_data [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb1474 (    0x58) decode_fv_data [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb14cc (    0x48) encode_fv_key [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb1514 (    0x58) decode_fv_key [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb156c (    0x48) encode_fv_params [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb15b4 (    0x48) decode_fv_params [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb15fc (    0xe8) dict_find_params_cb [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb16e4 (    0x18) der_key_equal [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb16fc (    0x6c) der_equal [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb1768 (    0x68) der_get_sizeof [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb17d0 (    0xd8) der_dict_iterate [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb18a8 (    0x78) der_dict_find_value [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb1920 (    0x64) _dict_find_value_cb [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb1984 (    0x78) der_dict_get_number [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb19fc (    0x70) der_get_number [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb1a6c (    0x70) der_dict_get_bool [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb1adc (    0x5c) der_get_bool [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb1b38 (    0xa8) der_dict_get_data [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb1be0 (    0x70) der_utils_decode_implicit_raw_octet_string [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb1c50 (    0xb4) der_array_iterate [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb1d04 (    0x80) der_utils_decode_tl [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb1d84 (    0x7c) encode_list_free [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb1e00 (    0xf0) encode_list_sort [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb1ef0 (    0x98) encode_list_remove_key [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb1f88 (    0x84) _encode_list_find_key [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb200c (    0xe0) encode_list_get_data [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb20ec (    0x90) der_utils_decode_implicit_raw_octet_string_copy [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb217c (   0x12c) encode_list_cstr_get_data [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb22a8 (   0x100) der_key_validate [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb23a8 (    0x5c) encode_list_get_number [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb2404 (    0x5c) encode_list_get_bool [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb2460 (    0x48) encode_list_merge_dict [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb24a8 (    0xd0) _merge_dict_cb [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb2578 (    0xf8) encode_list_merge_list [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb2670 (   0x1cc) encode_list_dict [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb283c (   0x168) encode_list_add_der [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb29a4 (    0x10) encode_list_add_key [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb29b4 (   0x168) encode_list_add_data [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb2b1c (    0xf0) encode_list_cstr_add_data [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb2c0c (   0x158) encode_list_add_bool [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb2d64 (   0x210) encode_list_add_number [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb2f74 (   0x170) encode_list_add_string [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb30e4 (   0x194) encode_list_add_list [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb3278 (    0x38) encode_list_sizeof [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb32b0 (    0x10) encode_list_is_empty [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb32c0 (    0x28) ccder_sizeof_fv_data [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb32e8 (    0x48) ccder_sizeof_fv_key [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb3330 (    0xac) der_utils_encode_fv_key [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb33dc (   0x108) der_utils_decode_fv_key [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb34e4 (    0x9c) der_utils_decode_implicit_raw_octet_string_copy_len [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb3580 (    0x70) der_utils_encode_fv_data [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb35f0 (    0xb0) der_utils_decode_fv_data [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb36a0 (    0x74) der_utils_encode_fv_params [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb3714 (    0x84) der_utils_decode_fv_params [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb3798 (   0x19c) encode_extended_state [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb3934 (   0x23c) decode_extended_state [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb3b70 (   0x170) decode_memento_state [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb3ce0 (   0x188) decode_primary_identity_state [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb3e68 (   0x2f0) decode_fv_blob_state [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb4158 (    0x88) der_utils_decode_implicit_raw_octet_string_copy_partial [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb41e0 (    0xe0) encode_pfk_params_public [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb42c0 (    0xec) decode_pfk_params_internal [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb43ac (    0xd4) encode_fv_params_internal [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb4480 (    0xcc) decode_fv_params_internal [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb454c (   0x3bc) ref_key_op_der_to_enum [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb4908 (    0xbc) der_utils_decode_implicit_raw_octet_string_alloc [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb49c4 (    0x8c) der_utils_decode_implicit_uint64 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb4a50 (   0x12c) _qsort_compare [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb4b7c (   0x144) platform_get_measurement [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb4cc0 (    0xb8) platform_rng [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb4d78 (    0xd0) platform_read_random [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb4e48 (   0x118) platform_pka_get_pub_key [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb4f60 (   0x128) platform_pka_ecdh [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb5088 (   0x128) platform_pka_sign [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb51b0 (   0x130) platform_pka_sika_attest [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb52e0 (   0x130) platform_pka_shared_encrypt [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb5410 (    0xf8) platform_ref_key_hw_crypt [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb5508 (    0xb8) platform_ref_key_hw_crypt_clear_cache [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb55c0 (    0xd0) platform_get_device_id [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb5690 (    0xc8) platform_get_aon_security [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb5758 (    0xc8) platform_get_att_sep_chip_rev [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb5820 (    0xc8) platform_get_chip_id [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb58e8 (    0xc8) platform_get_ecid [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb59b0 (    0xc8) platform_get_board_id [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb5a78 (     0xc) aks_get_pad_size [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb5a84 (    0x90) aks_copy_packed_data [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb5b14 (    0xdc) aks_pack_data [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb5bf0 (   0x1e0) aks_unpack_data [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb5dd0 (    0x48) +[BiometricKitXPCServer initialize].cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x00000001b8cb5e18 (    0x48) __33+[BiometricKitEventLogger logger]_block_invoke.cold.1 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
            0x00000001b8cb5e60 (   0xdb0) __TEXT __auth_stubs
                0x00000001b8cb5e60 (    0x10) DYLD-STUB$$AWDPostMetric [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb5e70 (    0x10) DYLD-STUB$$AnalyticsSendEventLazy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb5e80 (    0x10) DYLD-STUB$$CCRandomCopyBytes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb5e90 (    0x10) DYLD-STUB$$CFBooleanGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb5ea0 (    0x10) DYLD-STUB$$CFBooleanGetValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb5eb0 (    0x10) DYLD-STUB$$CFDataCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb5ec0 (    0x10) DYLD-STUB$$CFDataGetBytePtr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb5ed0 (    0x10) DYLD-STUB$$CFDataGetLength [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb5ee0 (    0x10) DYLD-STUB$$CFDataGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb5ef0 (    0x10) DYLD-STUB$$CFDictionaryAddValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb5f00 (    0x10) DYLD-STUB$$CFDictionaryCreateMutable [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb5f10 (    0x10) DYLD-STUB$$CFDictionaryGetValueIfPresent [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb5f20 (    0x10) DYLD-STUB$$CFDictionarySetValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb5f30 (    0x10) DYLD-STUB$$CFGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb5f40 (    0x10) DYLD-STUB$$CFNotificationCenterAddObserver [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb5f50 (    0x10) DYLD-STUB$$CFNotificationCenterGetDarwinNotifyCenter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb5f60 (    0x10) DYLD-STUB$$CFNotificationCenterGetDistributedCenter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb5f70 (    0x10) DYLD-STUB$$CFNotificationCenterPostNotification [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb5f80 (    0x10) DYLD-STUB$$CFNumberCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb5f90 (    0x10) DYLD-STUB$$CFNumberGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb5fa0 (    0x10) DYLD-STUB$$CFNumberGetValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb5fb0 (    0x10) DYLD-STUB$$CFPreferencesCopyValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb5fc0 (    0x10) DYLD-STUB$$CFRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb5fd0 (    0x10) DYLD-STUB$$CFRunLoopGetCurrent [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb5fe0 (    0x10) DYLD-STUB$$CFUserNotificationDisplayAlert [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb5ff0 (    0x10) DYLD-STUB$$FSEventStreamCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6000 (    0x10) DYLD-STUB$$FSEventStreamInvalidate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6010 (    0x10) DYLD-STUB$$FSEventStreamRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6020 (    0x10) DYLD-STUB$$FSEventStreamScheduleWithRunLoop [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6030 (    0x10) DYLD-STUB$$FSEventStreamStart [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6040 (    0x10) DYLD-STUB$$FSEventStreamStop [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6050 (    0x10) DYLD-STUB$$FSEventStreamUnscheduleFromRunLoop [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6060 (    0x10) DYLD-STUB$$IOConnectCallMethod [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6070 (    0x10) DYLD-STUB$$IOConnectMapMemory [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6080 (    0x10) DYLD-STUB$$IOConnectSetNotificationPort [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6090 (    0x10) DYLD-STUB$$IOConnectUnmapMemory [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb60a0 (    0x10) DYLD-STUB$$IONotificationPortCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb60b0 (    0x10) DYLD-STUB$$IONotificationPortDestroy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb60c0 (    0x10) DYLD-STUB$$IONotificationPortSetDispatchQueue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb60d0 (    0x10) DYLD-STUB$$IOObjectRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb60e0 (    0x10) DYLD-STUB$$IORegistryEntryCreateCFProperty [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb60f0 (    0x10) DYLD-STUB$$IORegistryEntryFromPath [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6100 (    0x10) DYLD-STUB$$IOServiceClose [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6110 (    0x10) DYLD-STUB$$IOServiceGetMatchingService [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6120 (    0x10) DYLD-STUB$$IOServiceMatching [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6130 (    0x10) DYLD-STUB$$IOServiceOpen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6140 (    0x10) DYLD-STUB$$MGCopyAnswer [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6150 (    0x10) DYLD-STUB$$NSClassFromString [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6160 (    0x10) DYLD-STUB$$NSSelectorFromString [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6170 (    0x10) DYLD-STUB$$NSStringFromClass [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6180 (    0x10) DYLD-STUB$$NSStringFromSelector [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6190 (    0x10) DYLD-STUB$$PBDataWriterWriteUint32Field [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb61a0 (    0x10) DYLD-STUB$$PBDataWriterWriteUint64Field [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb61b0 (    0x10) DYLD-STUB$$PBReaderPlaceMark [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb61c0 (    0x10) DYLD-STUB$$PBReaderRecallMark [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb61d0 (    0x10) DYLD-STUB$$PBReaderSkipValueWithTag [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb61e0 (    0x10) DYLD-STUB$$PBRepeatedUInt32Add [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb61f0 (    0x10) DYLD-STUB$$PBRepeatedUInt32Clear [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6200 (    0x10) DYLD-STUB$$PBRepeatedUInt32Copy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6210 (    0x10) DYLD-STUB$$PBRepeatedUInt32Hash [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6220 (    0x10) DYLD-STUB$$PBRepeatedUInt32IsEqual [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6230 (    0x10) DYLD-STUB$$PBRepeatedUInt32NSArray [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6240 (    0x10) DYLD-STUB$$PBRepeatedUInt32Set [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6250 (    0x10) DYLD-STUB$$_BKLogEventOrCode [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6260 (    0x10) DYLD-STUB$$_Block_object_assign [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6270 (    0x10) DYLD-STUB$$_Block_object_dispose [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6280 (    0x10) DYLD-STUB$$_Unwind_Resume [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6290 (    0x10) DYLD-STUB$$__error [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb62a0 (    0x10) DYLD-STUB$$__memcpy_chk [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb62b0 (    0x10) DYLD-STUB$$__stack_chk_fail [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb62c0 (    0x10) DYLD-STUB$$__strlcpy_chk [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb62d0 (    0x10) DYLD-STUB$$_os_log_error_impl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb62e0 (    0x10) DYLD-STUB$$_os_log_impl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb62f0 (    0x10) DYLD-STUB$$abort [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6300 (    0x10) DYLD-STUB$$bzero [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6310 (    0x10) DYLD-STUB$$calloc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6320 (    0x10) DYLD-STUB$$cc_clear [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6330 (    0x10) DYLD-STUB$$cc_cmp_safe [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6340 (    0x10) DYLD-STUB$$ccaes_cbc_decrypt_mode [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6350 (    0x10) DYLD-STUB$$ccaes_cbc_encrypt_mode [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6360 (    0x10) DYLD-STUB$$cccbc_clear_iv [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6370 (    0x10) DYLD-STUB$$cccbc_init [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6380 (    0x10) DYLD-STUB$$cccbc_one_shot [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6390 (    0x10) DYLD-STUB$$cccbc_update [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb63a0 (    0x10) DYLD-STUB$$cccurve25519 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb63b0 (    0x10) DYLD-STUB$$cccurve25519_make_key_pair [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb63c0 (    0x10) DYLD-STUB$$cccurve25519_make_pub [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb63d0 (    0x10) DYLD-STUB$$ccder_blob_decode_len [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb63e0 (    0x10) DYLD-STUB$$ccder_blob_decode_range [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb63f0 (    0x10) DYLD-STUB$$ccder_blob_decode_sequence_tl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6400 (    0x10) DYLD-STUB$$ccder_blob_decode_tag [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6410 (    0x10) DYLD-STUB$$ccder_blob_decode_tl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6420 (    0x10) DYLD-STUB$$ccder_blob_encode_body [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6430 (    0x10) DYLD-STUB$$ccder_blob_encode_body_tl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6440 (    0x10) DYLD-STUB$$ccder_blob_encode_implicit_raw_octet_string [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6450 (    0x10) DYLD-STUB$$ccder_blob_encode_implicit_uint64 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6460 (    0x10) DYLD-STUB$$ccder_blob_encode_tl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6470 (    0x10) DYLD-STUB$$ccder_decode_sequence_tl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6480 (    0x10) DYLD-STUB$$ccder_decode_tl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6490 (    0x10) DYLD-STUB$$ccder_encode_body [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb64a0 (    0x10) DYLD-STUB$$ccder_encode_constructed_tl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb64b0 (    0x10) DYLD-STUB$$ccder_encode_raw_octet_string [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb64c0 (    0x10) DYLD-STUB$$ccder_encode_tl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb64d0 (    0x10) DYLD-STUB$$ccder_encode_uint64 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb64e0 (    0x10) DYLD-STUB$$ccder_sizeof [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb64f0 (    0x10) DYLD-STUB$$ccder_sizeof_implicit_uint64 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6500 (    0x10) DYLD-STUB$$ccder_sizeof_raw_octet_string [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6510 (    0x10) DYLD-STUB$$ccder_sizeof_uint64 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6520 (    0x10) DYLD-STUB$$ccdigest [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6530 (    0x10) DYLD-STUB$$ccec_export_pub [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6540 (    0x10) DYLD-STUB$$ccec_import_pub [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6550 (    0x10) DYLD-STUB$$ccecb_one_shot [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6560 (    0x10) DYLD-STUB$$cced25519_make_key_pair [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6570 (    0x10) DYLD-STUB$$cchkdf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6580 (    0x10) DYLD-STUB$$cchmac [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6590 (    0x10) DYLD-STUB$$ccn_read_uint [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb65a0 (    0x10) DYLD-STUB$$ccn_write_uint_padded [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb65b0 (    0x10) DYLD-STUB$$ccpbkdf2_hmac [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb65c0 (    0x10) DYLD-STUB$$ccrng [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb65d0 (    0x10) DYLD-STUB$$ccsha1_di [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb65e0 (    0x10) DYLD-STUB$$ccsha256_di [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb65f0 (    0x10) DYLD-STUB$$cczp_bitlen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6600 (    0x10) DYLD-STUB$$class_copyPropertyList [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6610 (    0x10) DYLD-STUB$$close [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6620 (    0x10) DYLD-STUB$$dictionaryGetBool [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6630 (    0x10) DYLD-STUB$$dictionaryGetData [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6640 (    0x10) DYLD-STUB$$dictionaryGetInteger [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6650 (    0x10) DYLD-STUB$$dispatch_assert_queue$V2 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6660 (    0x10) DYLD-STUB$$dispatch_async [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6670 (    0x10) DYLD-STUB$$dispatch_block_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6680 (    0x10) DYLD-STUB$$dispatch_get_global_queue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6690 (    0x10) DYLD-STUB$$dispatch_once [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb66a0 (    0x10) DYLD-STUB$$dispatch_queue_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb66b0 (    0x10) DYLD-STUB$$dispatch_resume [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb66c0 (    0x10) DYLD-STUB$$dispatch_source_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb66d0 (    0x10) DYLD-STUB$$dispatch_source_set_event_handler [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb66e0 (    0x10) DYLD-STUB$$dispatch_source_set_timer [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb66f0 (    0x10) DYLD-STUB$$dispatch_sync [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6700 (    0x10) DYLD-STUB$$dispatch_time [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6710 (    0x10) DYLD-STUB$$fcntl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6720 (    0x10) DYLD-STUB$$fprintf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6730 (    0x10) DYLD-STUB$$free [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6740 (    0x10) DYLD-STUB$$fstat [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6750 (    0x10) DYLD-STUB$$fts_close [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6760 (    0x10) DYLD-STUB$$fts_open [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6770 (    0x10) DYLD-STUB$$fts_read [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6780 (    0x10) DYLD-STUB$$fts_set [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6790 (    0x10) DYLD-STUB$$getBootArgs [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb67a0 (    0x10) DYLD-STUB$$gethostuuid [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb67b0 (    0x10) DYLD-STUB$$gettimeofday [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb67c0 (    0x10) DYLD-STUB$$isEphemeralMultiUser [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb67d0 (    0x10) DYLD-STUB$$isInternalBuild [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb67e0 (    0x10) DYLD-STUB$$kdebug_trace [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb67f0 (    0x10) DYLD-STUB$$mach_continuous_time [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6800 (    0x10) DYLD-STUB$$mach_timebase_info [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6810 (    0x10) DYLD-STUB$$memcmp [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6820 (    0x10) DYLD-STUB$$memcpy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6830 (    0x10) DYLD-STUB$$memset_s [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6840 (    0x10) DYLD-STUB$$notify_cancel [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6850 (    0x10) DYLD-STUB$$notify_get_state [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6860 (    0x10) DYLD-STUB$$notify_post [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6870 (    0x10) DYLD-STUB$$notify_register_check [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6880 (    0x10) DYLD-STUB$$notify_register_dispatch [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6890 (    0x10) DYLD-STUB$$notify_set_state [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb68a0 (    0x10) DYLD-STUB$$objc_alloc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb68b0 (    0x10) DYLD-STUB$$objc_alloc_init [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb68c0 (    0x10) DYLD-STUB$$objc_autorelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb68d0 (    0x10) DYLD-STUB$$objc_autoreleasePoolPop [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb68e0 (    0x10) DYLD-STUB$$objc_autoreleasePoolPush [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb68f0 (    0x10) DYLD-STUB$$objc_autoreleaseReturnValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6900 (    0x10) DYLD-STUB$$objc_begin_catch [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6910 (    0x10) DYLD-STUB$$objc_destroyWeak [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6920 (    0x10) DYLD-STUB$$objc_end_catch [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6930 (    0x10) DYLD-STUB$$objc_enumerationMutation [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6940 (    0x10) DYLD-STUB$$objc_exception_rethrow [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6950 (    0x10) DYLD-STUB$$objc_getProperty [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6960 (    0x10) DYLD-STUB$$objc_loadWeakRetained [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6970 (    0x10) DYLD-STUB$$objc_msgSendSuper2 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6980 (    0x10) DYLD-STUB$$objc_opt_class [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6990 (    0x10) DYLD-STUB$$objc_opt_isKindOfClass [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb69a0 (    0x10) DYLD-STUB$$objc_opt_respondsToSelector [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb69b0 (    0x10) DYLD-STUB$$objc_release [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb69c0 (    0x10) DYLD-STUB$$objc_retain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb69d0 (    0x10) DYLD-STUB$$objc_retainAutorelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb69e0 (    0x10) DYLD-STUB$$objc_retainAutoreleaseReturnValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb69f0 (    0x10) DYLD-STUB$$objc_retainAutoreleasedReturnValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6a00 (    0x10) DYLD-STUB$$objc_setProperty_atomic_copy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6a10 (    0x10) DYLD-STUB$$objc_storeStrong [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6a20 (    0x10) DYLD-STUB$$objc_storeWeak [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6a30 (    0x10) DYLD-STUB$$objc_sync_enter [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6a40 (    0x10) DYLD-STUB$$objc_sync_exit [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6a50 (    0x10) DYLD-STUB$$objc_terminate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6a60 (    0x10) DYLD-STUB$$open [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6a70 (    0x10) DYLD-STUB$$open_dprotected_np [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6a80 (    0x10) DYLD-STUB$$os_log_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6a90 (    0x10) DYLD-STUB$$os_log_type_enabled [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6aa0 (    0x10) DYLD-STUB$$os_state_add_handler [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6ab0 (    0x10) DYLD-STUB$$os_state_remove_handler [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6ac0 (    0x10) DYLD-STUB$$os_transaction_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6ad0 (    0x10) DYLD-STUB$$printf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6ae0 (    0x10) DYLD-STUB$$property_getName [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6af0 (    0x10) DYLD-STUB$$puts [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6b00 (    0x10) DYLD-STUB$$qsort [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6b10 (    0x10) DYLD-STUB$$read [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6b20 (    0x10) DYLD-STUB$$realpath$DARWIN_EXTSN [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6b30 (    0x10) DYLD-STUB$$snprintf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6b40 (    0x10) DYLD-STUB$$stat [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6b50 (    0x10) DYLD-STUB$$strerror [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6b60 (    0x10) DYLD-STUB$$strlen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6b70 (    0x10) DYLD-STUB$$strnstr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6b80 (    0x10) DYLD-STUB$$sysctlbyname [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6b90 (    0x10) DYLD-STUB$$syslog$DARWIN_EXTSN [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6ba0 (    0x10) DYLD-STUB$$usleep [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6bb0 (    0x10) DYLD-STUB$$uuid_clear [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6bc0 (    0x10) DYLD-STUB$$uuid_compare [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6bd0 (    0x10) DYLD-STUB$$uuid_copy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6be0 (    0x10) DYLD-STUB$$uuid_unparse [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6bf0 (    0x10) DYLD-STUB$$uuid_unparse_upper [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x00000001b8cb6c00 (    0x10) DYLD-STUB$$write [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
            0x00000001b8cb6c10 (  0x1c20) __TEXT __objc_methlist
                0x00000001b8cb6c10 (    0xc0) _OBJC_$_INSTANCE_METHODS_BiometricAutoBugCapture [NameNList, MangledNameNList, NList] 
                0x00000001b8cb6cd0 (    0x18) _OBJC_$_CLASS_METHODS_BKCatacomb [NameNList, MangledNameNList, NList] 
                0x00000001b8cb6ce8 (    0xb0) _OBJC_$_INSTANCE_METHODS_BKCatacomb [NameNList, MangledNameNList, NList] 
                0x00000001b8cb6d98 (   0x188) _OBJC_$_INSTANCE_METHODS_BiometricKitCoreAnalyticsEvent [NameNList, MangledNameNList, NList] 
                0x00000001b8cb6f20 (   0x120) _OBJC_$_INSTANCE_METHODS_BiometricKitXPCExportedClientObject [NameNList, MangledNameNList, NList] 
                0x00000001b8cb7040 (   0x3f8) _OBJC_$_INSTANCE_METHODS_BiometricKitXPCExportedObject [NameNList, MangledNameNList, NList] 
                0x00000001b8cb7438 (    0x48) _OBJC_$_CLASS_METHODS_BKLocalization [NameNList, MangledNameNList, NList] 
                0x00000001b8cb7480 (    0x60) _OBJC_$_CLASS_METHODS_BiometricSupportUserNotification [NameNList, MangledNameNList, NList] 
                0x00000001b8cb74e0 (    0x18) _OBJC_$_CLASS_METHODS_BiometricKitXPCServer [NameNList, MangledNameNList, NList] 
                0x00000001b8cb74f8 (    0x30) _OBJC_$_CLASS_METHODS_CatacombComponent [NameNList, MangledNameNList, NList] 
                0x00000001b8cb7528 (    0x48) _OBJC_$_INSTANCE_METHODS_ActivityTracker [NameNList, MangledNameNList, NList] 
                0x00000001b8cb7570 (    0x78) _OBJC_$_INSTANCE_METHODS_BiometricEnrollOperation [NameNList, MangledNameNList, NList] 
                0x00000001b8cb75e8 (   0xb60) _OBJC_$_INSTANCE_METHODS_BiometricKitXPCServer [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8148 (   0x150) _OBJC_$_INSTANCE_METHODS_BiometricMatchOperation [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8298 (    0xb0) _OBJC_$_INSTANCE_METHODS_BiometricOperation [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8348 (    0x20) _OBJC_$_INSTANCE_METHODS_BiometricPresenceDetectOperation [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8368 (    0x90) _OBJC_$_INSTANCE_METHODS_CatacombComponent [NameNList, MangledNameNList, NList] 
                0x00000001b8cb83f8 (    0x98) _OBJC_$_INSTANCE_METHODS_CatacombStateCache [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8490 (    0xd8) _OBJC_$_INSTANCE_METHODS_SystemProtectedConfig [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8568 (    0xa8) _OBJC_$_INSTANCE_METHODS_UserProtectedConfig [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8610 (    0x18) _OBJC_$_CLASS_METHODS_BiometricKitEventLogger [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8628 (    0xa8) _OBJC_$_INSTANCE_METHODS_BKEvent [NameNList, MangledNameNList, NList] 
                0x00000001b8cb86d0 (    0x68) _OBJC_$_INSTANCE_METHODS_BiometricKitEventLogger [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8738 (    0xf8) _OBJC_$_INSTANCE_METHODS_AWDBiometricKitEventLog [NameNList, MangledNameNList, NList] 
            0x00000001b8cb8830 (   0xf84) __TEXT __const
                0x00000001b8cb8830 (    0x38) BiometricSupportVersionString [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cb8868 (    0x48) BiometricSupportVersionNumber [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cb88b0 (    0x10) rfc3394_iv [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cb88c0 (     0x8) sharedPathMapCount [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cb88c8 (     0x8) userPathMapCount [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cb88d0 (    0x12) __der_key_op [NameNList, MangledNameNList, NList] 
                0x00000001b8cb88e2 (    0x12) __der_key_keybag_handle [NameNList, MangledNameNList, NList] 
                0x00000001b8cb88f4 (    0x12) __der_key_keybag_class [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8906 (    0x12) __der_key_data [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8918 (    0x12) __der_key_auth_data [NameNList, MangledNameNList, NList] 
                0x00000001b8cb892a (    0x12) __der_key_acl [NameNList, MangledNameNList, NList] 
                0x00000001b8cb893c (    0x12) __der_key_protected_data [NameNList, MangledNameNList, NList] 
                0x00000001b8cb894e (    0x12) __der_key_external_data [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8960 (    0x12) __der_key_pad [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8972 (    0x12) __der_key_tag [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8984 (    0x12) __der_key_wrapped_key [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8996 (    0x12) __der_key_acm_handle [NameNList, MangledNameNList, NList] 
                0x00000001b8cb89a8 (    0x12) __der_key_access_groups [NameNList, MangledNameNList, NList] 
                0x00000001b8cb89ba (    0x12) __der_key_passcode [NameNList, MangledNameNList, NList] 
                0x00000001b8cb89cc (    0x12) __der_key_salt [NameNList, MangledNameNList, NList] 
                0x00000001b8cb89de (    0x12) __der_key_iterations [NameNList, MangledNameNList, NList] 
                0x00000001b8cb89f0 (    0x12) __der_key_flags [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8a02 (    0x12) __der_key_id [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8a14 (    0x12) __der_key_public_key [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8a26 (    0x12) __der_key_type [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8a38 (    0x12) __der_key_version [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8a4a (    0x12) __der_key_uuid [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8a5c (    0x12) __der_key_bid [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8a6e (    0x12) __der_key_aon_sec_mask [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8a80 (    0x12) __der_key_ref_key [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8a92 (    0x12) __der_key_ref_key_mac [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8aa4 (    0x12) __der_key_acl_constraint_policy [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8ab6 (    0x12) __der_key_acl_constraint_kofn [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8ac8 (    0x12) __der_key_acl_constraint_user_passcode [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8ada (    0x12) __der_key_acl_constraint_bio [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8aec (    0x12) __der_key_acl_constraint_op_bool [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8afe (    0x12) __der_key_acl_constraint_access_groups [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8b10 (    0x12) __der_key_acl_param_credential_max_age [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8b22 (    0x12) __der_key_acl_param_kofn [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8b34 (    0x12) __der_key_acl_param_require_passcode [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8b46 (    0x12) __der_key_op_default_acl [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8b58 (    0x12) __der_key_op_encrypt [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8b6a (    0x12) __der_reserved [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8b7c (    0x12) __der_key_op_create_with_encrypt [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8b8e (    0x12) __der_key_op_decrypt [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8ba0 (    0x12) __der_key_op_sync [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8bb2 (    0x12) __der_key_op_delete [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8bc4 (    0x12) __der_key_op_create [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8bd6 (    0x12) __der_key_op_sign [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8be8 (    0x12) __der_key_op_set_key_class [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8bfa (    0x12) __der_key_op_wrap [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8c0c (    0x12) __der_key_op_unwrap [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8c1e (    0x12) __der_key_op_compute_key [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8c30 (    0x12) __der_key_op_attest [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8c42 (    0x12) __der_key_op_transcrypt [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8c54 (    0x12) __der_key_op_validate_key [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8c66 (    0x12) __der_key_op_ecies_encrypt [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8c78 (    0x12) __der_key_op_ecies_decrypt [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8c8a (    0x12) __der_key_op_ecies_transcode [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8c9c (    0x12) __der_key_op_enable_test_keys [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8cae (    0x12) __der_key_dst_keybag_handle [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8cc0 (    0x12) __der_key_config_graceperiod [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8cd2 (    0x12) __der_key_config_backoff_delay [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8ce4 (    0x12) __der_key_config_max_unlock_attempts [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8cf6 (    0x12) __der_key_config_escrow_passcode_period [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8d08 (    0x12) __der_key_config_escrow_token_period [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8d1a (    0x12) __der_key_config_flags [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8d2c (    0x12) __der_key_op_sik_collection [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8d3e (    0x12) __der_key_op_sik_attest [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8d50 (    0x12) __der_key_op_get_sik_status [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8d62 (    0x12) __der_key_op_gid_attest [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8d74 (    0x12) __der_key_op_system_key_attest [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8d86 (    0x12) __der_key_op_system_key_collect [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8d98 (    0x12) __der_key_op_system_key_get_public [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8daa (    0x12) __der_key_op_system_key_operate [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8dbc (    0x12) __der_key_op_system_key_sign [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8dce (    0x12) __der_key_system_key_type [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8de0 (    0x12) __der_key_sub_key_type [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8df2 (    0x12) __der_key_pka_flags [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8e04 (    0x12) __der_key_system_key_client_seed [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8e16 (    0x12) __der_key_system_key_generation [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8e28 (    0x12) __der_key_system_key_operation [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8e3a (    0x12) __der_key_system_key_options [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8e4c (    0x12) __der_key_gid_ref_key_options [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8e5e (    0x12) __der_key_system_key_no_img4 [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8e70 (    0x12) __der_key_remote_session_signing_key_type [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8e82 (    0x12) __der_key_remote_session_signing_key_certificate [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8e94 (    0x12) __der_key_sik_pub [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8ea6 (    0x12) __der_key_uik_pub [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8eb8 (    0x12) __der_key_gid_pub [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8eca (    0x12) __der_key_gid_attest_pub [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8edc (    0x12) __der_key_state_state [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8eee (    0x12) __der_key_state_lock_state [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8f00 (    0x12) __der_key_state_backoff [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8f12 (    0x12) __der_key_state_backoff_other [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8f24 (    0x12) __der_key_state_failed_attempts [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8f36 (    0x12) __der_key_state_failed_attempts_other [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8f48 (    0x12) __der_key_state_generation_state [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8f5a (    0x12) __der_key_state_assertion_set [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8f6c (    0x12) __der_key_state_grace_period_enabled [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8f7e (    0x12) __der_key_state_recovery_countdown [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8f90 (    0x12) __der_key_state_more_state [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8fa2 (    0x12) __der_key_peer_unlock_token_status [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8fb4 (    0x12) __der_key_peer_unwrapped_escrow_record_status [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8fc6 (    0x12) __der_key_peer_wrapped_escrow_record_status [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8fd8 (    0x12) __der_key_peer_flags [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8fea (    0x12) __der_key_state_reserved [NameNList, MangledNameNList, NList] 
                0x00000001b8cb8ffc (    0x12) __der_key_sc_enc_sc_usk [NameNList, MangledNameNList, NList] 
                0x00000001b8cb900e (    0x12) __der_key_sc_enc_usk_us [NameNList, MangledNameNList, NList] 
                0x00000001b8cb9020 (    0x12) __der_key_sc_auth_version [NameNList, MangledNameNList, NList] 
                0x00000001b8cb9032 (    0x12) __der_key_sc_auth_mode [NameNList, MangledNameNList, NList] 
                0x00000001b8cb9044 (    0x12) __der_key_sc_auth_counter [NameNList, MangledNameNList, NList] 
                0x00000001b8cb9056 (    0x12) __der_key_sc_auth_sc_pub [NameNList, MangledNameNList, NList] 
                0x00000001b8cb9068 (    0x12) __der_key_sc_auth_eph_pub [NameNList, MangledNameNList, NList] 
                0x00000001b8cb907a (    0x12) __der_key_sc_blob_auth [NameNList, MangledNameNList, NList] 
                0x00000001b8cb908c (    0x12) __der_key_sc_blob_enc [NameNList, MangledNameNList, NList] 
                0x00000001b8cb909e (    0x12) __der_key_sc_blob_tag [NameNList, MangledNameNList, NList] 
                0x00000001b8cb90b0 (    0x12) __der_key_sc_blob_dku_pk [NameNList, MangledNameNList, NList] 
                0x00000001b8cb90c2 (    0x12) __der_key_sc_blob_iv [NameNList, MangledNameNList, NList] 
                0x00000001b8cb90d4 (    0x12) __der_key_iv [NameNList, MangledNameNList, NList] 
                0x00000001b8cb90e6 (    0x12) __der_key_config_prederived_passcode [NameNList, MangledNameNList, NList] 
                0x00000001b8cb90f8 (    0x12) __der_key_config_prederived_salt [NameNList, MangledNameNList, NList] 
                0x00000001b8cb910a (    0x12) __der_key_config_prederived_iterations [NameNList, MangledNameNList, NList] 
                0x00000001b8cb911c (    0x12) __der_key_config_prederived_type [NameNList, MangledNameNList, NList] 
                0x00000001b8cb912e (    0x12) __der_key_config_se_reset_token [NameNList, MangledNameNList, NList] 
                0x00000001b8cb9140 (    0x12) __der_key_config_se_slot [NameNList, MangledNameNList, NList] 
                0x00000001b8cb9152 (    0x12) __der_key_config_user_uuid [NameNList, MangledNameNList, NList] 
                0x00000001b8cb9164 (    0x12) __der_key_ecdh_iv [NameNList, MangledNameNList, NList] 
                0x00000001b8cb9176 (    0x12) __der_key_ecdh_seed [NameNList, MangledNameNList, NList] 
                0x00000001b8cb9188 (    0x12) __der_key_persona_uuid [NameNList, MangledNameNList, NList] 
                0x00000001b8cb919a (    0x12) __der_key_raw_output [NameNList, MangledNameNList, NList] 
                0x00000001b8cb91ac (    0x12) __der_key_options [NameNList, MangledNameNList, NList] 
                0x00000001b8cb91be (    0x12) __der_key_test_flags [NameNList, MangledNameNList, NList] 
                0x00000001b8cb91d0 (    0x12) __der_key_config_group_uuid [NameNList, MangledNameNList, NList] 
                0x00000001b8cb91e2 (    0x12) __der_key_config_bind_kek [NameNList, MangledNameNList, NList] 
                0x00000001b8cb91f4 (    0x12) __der_key_config_recovery_iterations [NameNList, MangledNameNList, NList] 
                0x00000001b8cb9206 (    0x12) __der_key_config_recovery_flags [NameNList, MangledNameNList, NList] 
                0x00000001b8cb9218 (    0x12) __der_key_config_recovery_target_iterations [NameNList, MangledNameNList, NList] 
                0x00000001b8cb922a (    0x12) __der_key_ps_slots [NameNList, MangledNameNList, NList] 
                0x00000001b8cb923c (    0x12) __der_key_ps_mk_slot [NameNList, MangledNameNList, NList] 
                0x00000001b8cb924e (    0x12) __der_key_ps_cmk_slot [NameNList, MangledNameNList, NList] 
                0x00000001b8cb9260 (    0x12) __der_key_shared_info [NameNList, MangledNameNList, NList] 
                0x00000001b8cb9272 (    0x12) __der_key_shared_info2 [NameNList, MangledNameNList, NList] 
                0x00000001b8cb9284 (    0x12) __der_key_transcode_shared_info [NameNList, MangledNameNList, NList] 
                0x00000001b8cb9296 (    0x12) __der_key_transcode_shared_info2 [NameNList, MangledNameNList, NList] 
                0x00000001b8cb92a8 (    0x12) __der_key_transcode_ecdh_seed [NameNList, MangledNameNList, NList] 
                0x00000001b8cb92ba (    0x12) __der_key_sika_version [NameNList, MangledNameNList, NList] 
                0x00000001b8cb92cc (    0x12) __der_key_se_state [NameNList, MangledNameNList, NList] 
                0x00000001b8cb92de (    0x12) __der_key_se_stash_state [NameNList, MangledNameNList, NList] 
                0x00000001b8cb92f0 (    0x12) __der_key_se_rm_status [NameNList, MangledNameNList, NList] 
                0x00000001b8cb9302 (    0x12) __der_key_config_capabilities [NameNList, MangledNameNList, NList] 
                0x00000001b8cb9314 (    0x12) __der_key_platform_config_consumed_last_artm_otut [NameNList, MangledNameNList, NList] 
                0x00000001b8cb9326 (    0x12) __der_key_platform_config_d_key_migrated [NameNList, MangledNameNList, NList] 
                0x00000001b8cb9338 (    0x12) __der_key_platform_config_uik_migrated [NameNList, MangledNameNList, NList] 
                0x00000001b8cb934a (    0x12) __der_key_platform_config_uik_bumped [NameNList, MangledNameNList, NList] 
                0x00000001b8cb935c (    0x12) __der_key_platform_config_uik_committed [NameNList, MangledNameNList, NList] 
                0x00000001b8cb936e (    0x12) __der_key_platform_config_device_bag_migrated [NameNList, MangledNameNList, NList] 
                0x00000001b8cb9380 (    0x12) __der_key_platform_config_sandman_blob_migrated [NameNList, MangledNameNList, NList] 
                0x00000001b8cb9392 (    0x12) __der_key_platform_config_pre_v5_bags_disallowed [NameNList, MangledNameNList, NList] 
                0x00000001b8cb93a4 (    0x12) __der_key_platform_config_gk_cached_once [NameNList, MangledNameNList, NList] 
                0x00000001b8cb93b6 (    0x12) __der_key_platform_config_recovery_naming_fixed [NameNList, MangledNameNList, NList] 
                0x00000001b8cb93c8 (    0x12) __der_key_keybag_version [NameNList, MangledNameNList, NList] 
                0x00000001b8cb93da (    0x12) __der_key_sm_slots [NameNList, MangledNameNList, NList] 
                0x00000001b8cb93ec (    0x12) __der_key_dkey_kcv [NameNList, MangledNameNList, NList] 
                0x00000001b8cb93fe (    0x12) __der_key_state_refcount [NameNList, MangledNameNList, NList] 
                0x00000001b8cb9410 (    0x12) __der_key_mkey_kcv [NameNList, MangledNameNList, NList] 
                0x00000001b8cb9422 (    0x12) __der_key_platform_config_m_key_migrated [NameNList, MangledNameNList, NList] 
                0x00000001b8cb9434 (    0x12) __der_key_media_unwraps [NameNList, MangledNameNList, NList] 
                0x00000001b8cb9446 (    0x12) __der_key_oik_owners [NameNList, MangledNameNList, NList] 
                0x00000001b8cb9458 (    0x12) __der_key_dkey_flags [NameNList, MangledNameNList, NList] 
                0x00000001b8cb946a (    0x12) __der_key_mkey_flags [NameNList, MangledNameNList, NList] 
                0x00000001b8cb947c (    0x12) __der_key_volume_bag_status [NameNList, MangledNameNList, NList] 
                0x00000001b8cb948e (    0x12) __der_key_expert_ocelot_support [NameNList, MangledNameNList, NList] 
                0x00000001b8cb94a0 (    0x12) __der_key_xart_tracker_data [NameNList, MangledNameNList, NList] 
                0x00000001b8cb94b2 (    0x12) __der_key_sep_measurement [NameNList, MangledNameNList, NList] 
                0x00000001b8cb94c4 (    0x12) __der_key_avp_env [NameNList, MangledNameNList, NList] 
                0x00000001b8cb94d6 (    0x12) __der_key_op_create_with_wrap [NameNList, MangledNameNList, NList] 
                0x00000001b8cb94e8 (    0x12) __der_key_platform_config_dak_bumped [NameNList, MangledNameNList, NList] 
                0x00000001b8cb94fa (    0x12) __der_key_platform_config_dak_committed [NameNList, MangledNameNList, NList] 
                0x00000001b8cb950c (    0x12) __der_key_user_uuid [NameNList, MangledNameNList, NList] 
                0x00000001b8cb951e (    0x12) __der_key_group_uuid [NameNList, MangledNameNList, NList] 
                0x00000001b8cb9530 (    0x12) __der_key_pass_sm_recovery_ps_slots [NameNList, MangledNameNList, NList] 
                0x00000001b8cb9542 (    0x12) __der_key_supports_keybag_lkgp [NameNList, MangledNameNList, NList] 
                0x00000001b8cb9554 (    0x12) __der_key_volume_uuid [NameNList, MangledNameNList, NList] 
                0x00000001b8cb9566 (    0x12) __der_key_memento_supported [NameNList, MangledNameNList, NList] 
                0x00000001b8cb9578 (    0x12) __der_key_memento_blob_exists [NameNList, MangledNameNList, NList] 
                0x00000001b8cb958a (    0x12) __der_key_se_supports_updated_kud_policy [NameNList, MangledNameNList, NList] 
                0x00000001b8cb959c (    0x12) __der_key_ps_memento_slot [NameNList, MangledNameNList, NList] 
                0x00000001b8cb95ae (    0x12) __der_key_passcode_change_time [NameNList, MangledNameNList, NList] 
                0x00000001b8cb95c0 (    0x12) __der_key_lock_time [NameNList, MangledNameNList, NList] 
                0x00000001b8cb95d2 (    0x12) __der_key_config_passcode_generation [NameNList, MangledNameNList, NList] 
                0x00000001b8cb95e4 (    0x12) __der_key_config_memento_passcode_generation [NameNList, MangledNameNList, NList] 
                0x00000001b8cb95f6 (    0x12) __der_key_inactivity_reboot_enabled [NameNList, MangledNameNList, NList] 
                0x00000001b8cb9608 (    0x12) __der_key_heap_tracker [NameNList, MangledNameNList, NList] 
                0x00000001b8cb961a (    0x12) __der_key_pass_sm_state [NameNList, MangledNameNList, NList] 
                0x00000001b8cb962c (    0x12) __der_key_escrow_blobs [NameNList, MangledNameNList, NList] 
                0x00000001b8cb963e (    0x62) __der_key_seed [NameNList, MangledNameNList, NList] 
                0x00000001b8cb96a0 (    0xac) UUID_NULL [NameNList, MangledNameNList, NList] 
                0x00000001b8cb974c (     0xc) derived_key_label [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cb9758 (    0x38) sep_derived_key_label [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cb9790 (     0xd) PFK_ENCODE_KEY_PERSONA_UUID [NameNList, MangledNameNList, NList] 
                0x00000001b8cb979d (     0xc) PFK_ENCODE_KEY_VOLUME_UUID [NameNList, MangledNameNList, NList] 
                0x00000001b8cb97a9 (     0x8) FV_ENCODE_KEY_OPTIONS [NameNList, MangledNameNList, NList] 
                0x00000001b8cb97b1 (     0x3) FV_ENCODE_KEY_CLASS [NameNList, MangledNameNList, NList] 
            0x00000001b8cb97b4 (  0x26f7) __TEXT __cstring
            0x00000001b8cbbeab (  0x2cc4) __TEXT __oslogstring
            0x00000001b8cbeb70 (   0xaa4) __TEXT __gcc_except_tab
                0x00000001b8cbeb70 (    0x34) GCC_except_table5 [NameNList, MangledNameNList, NList] 
                0x00000001b8cbeba4 (    0x14) GCC_except_table27 [NameNList, MangledNameNList, NList] 
                0x00000001b8cbebb8 (    0x2c) GCC_except_table28 [NameNList, MangledNameNList, NList] 
                0x00000001b8cbebe4 (    0x10) GCC_except_table29 [NameNList, MangledNameNList, NList] 
                0x00000001b8cbebf4 (    0x2c) GCC_except_table30 [NameNList, MangledNameNList, NList] 
                0x00000001b8cbec20 (    0x40) GCC_except_table31 [NameNList, MangledNameNList, NList] 
                0x00000001b8cbec60 (    0x2c) GCC_except_table40 [NameNList, MangledNameNList, NList] 
                0x00000001b8cbec8c (    0x2c) GCC_except_table44 [NameNList, MangledNameNList, NList] 
                0x00000001b8cbecb8 (    0x2c) GCC_except_table48 [NameNList, MangledNameNList, NList] 
                0x00000001b8cbece4 (    0x2c) GCC_except_table50 [NameNList, MangledNameNList, NList] 
                0x00000001b8cbed10 (    0x20) GCC_except_table54 [NameNList, MangledNameNList, NList] 
                0x00000001b8cbed30 (    0x20) GCC_except_table56 [NameNList, MangledNameNList, NList] 
                0x00000001b8cbed50 (    0x20) GCC_except_table58 [NameNList, MangledNameNList, NList] 
                0x00000001b8cbed70 (    0x20) GCC_except_table81 [NameNList, MangledNameNList, NList] 
                0x00000001b8cbed90 (    0x20) GCC_except_table83 [NameNList, MangledNameNList, NList] 
                0x00000001b8cbedb0 (    0x20) GCC_except_table113 [NameNList, MangledNameNList, NList] 
                0x00000001b8cbedd0 (    0x1c) GCC_except_table83 [NameNList, MangledNameNList, NList] 
                0x00000001b8cbedec (    0x10) GCC_except_table102 [NameNList, MangledNameNList, NList] 
                0x00000001b8cbedfc (    0x14) GCC_except_table103 [NameNList, MangledNameNList, NList] 
                0x00000001b8cbee10 (    0x10) GCC_except_table104 [NameNList, MangledNameNList, NList] 
                0x00000001b8cbee20 (    0x20) GCC_except_table105 [NameNList, MangledNameNList, NList] 
                0x00000001b8cbee40 (    0x20) GCC_except_table106 [NameNList, MangledNameNList, NList] 
                0x00000001b8cbee60 (    0x14) GCC_except_table107 [NameNList, MangledNameNList, NList] 
                0x00000001b8cbee74 (    0x14) GCC_except_table108 [NameNList, MangledNameNList, NList] 
                0x00000001b8cbee88 (    0x14) GCC_except_table109 [NameNList, MangledNameNList, NList] 
                0x00000001b8cbee9c (    0x14) GCC_except_table110 [NameNList, MangledNameNList, NList] 
                0x00000001b8cbeeb0 (    0x24) GCC_except_table111 [NameNList, MangledNameNList, NList] 
                0x00000001b8cbeed4 (    0x18) GCC_except_table124 [NameNList, MangledNameNList, NList] 
                0x00000001b8cbeeec (    0x2c) GCC_except_table126 [NameNList, MangledNameNList, NList] 
                0x00000001b8cbef18 (    0x28) GCC_except_table129 [NameNList, MangledNameNList, NList] 
                0x00000001b8cbef40 (    0x50) GCC_except_table144 [NameNList, MangledNameNList, NList] 
                0x00000001b8cbef90 (    0x38) GCC_except_table147 [NameNList, MangledNameNList, NList] 
                0x00000001b8cbefc8 (    0x18) GCC_except_table148 [NameNList, MangledNameNList, NList] 
                0x00000001b8cbefe0 (    0x38) GCC_except_table153 [NameNList, MangledNameNList, NList] 
                0x00000001b8cbf018 (    0x58) GCC_except_table154 [NameNList, MangledNameNList, NList] 
                0x00000001b8cbf070 (    0x5c) GCC_except_table155 [NameNList, MangledNameNList, NList] 
                0x00000001b8cbf0cc (    0x14) GCC_except_table156 [NameNList, MangledNameNList, NList] 
                0x00000001b8cbf0e0 (    0x68) GCC_except_table161 [NameNList, MangledNameNList, NList] 
                0x00000001b8cbf148 (    0x24) GCC_except_table174 [NameNList, MangledNameNList, NList] 
                0x00000001b8cbf16c (    0x3c) GCC_except_table178 [NameNList, MangledNameNList, NList] 
                0x00000001b8cbf1a8 (    0x44) GCC_except_table179 [NameNList, MangledNameNList, NList] 
                0x00000001b8cbf1ec (    0x20) GCC_except_table185 [NameNList, MangledNameNList, NList] 
                0x00000001b8cbf20c (    0x24) GCC_except_table187 [NameNList, MangledNameNList, NList] 
                0x00000001b8cbf230 (    0x28) GCC_except_table194 [NameNList, MangledNameNList, NList] 
                0x00000001b8cbf258 (    0x10) GCC_except_table196 [NameNList, MangledNameNList, NList] 
                0x00000001b8cbf268 (    0x10) GCC_except_table197 [NameNList, MangledNameNList, NList] 
                0x00000001b8cbf278 (    0x24) GCC_except_table198 [NameNList, MangledNameNList, NList] 
                0x00000001b8cbf29c (    0x34) GCC_except_table199 [NameNList, MangledNameNList, NList] 
                0x00000001b8cbf2d0 (    0x20) GCC_except_table201 [NameNList, MangledNameNList, NList] 
                0x00000001b8cbf2f0 (    0x34) GCC_except_table202 [NameNList, MangledNameNList, NList] 
                0x00000001b8cbf324 (    0x18) GCC_except_table203 [NameNList, MangledNameNList, NList] 
                0x00000001b8cbf33c (    0x18) GCC_except_table204 [NameNList, MangledNameNList, NList] 
                0x00000001b8cbf354 (    0x38) GCC_except_table211 [NameNList, MangledNameNList, NList] 
                0x00000001b8cbf38c (    0x38) GCC_except_table212 [NameNList, MangledNameNList, NList] 
                0x00000001b8cbf3c4 (    0x60) GCC_except_table218 [NameNList, MangledNameNList, NList] 
                0x00000001b8cbf424 (    0x34) GCC_except_table219 [NameNList, MangledNameNList, NList] 
                0x00000001b8cbf458 (    0x34) GCC_except_table220 [NameNList, MangledNameNList, NList] 
                0x00000001b8cbf48c (    0x5c) GCC_except_table222 [NameNList, MangledNameNList, NList] 
                0x00000001b8cbf4e8 (    0x74) GCC_except_table224 [NameNList, MangledNameNList, NList] 
                0x00000001b8cbf55c (    0x28) GCC_except_table225 [NameNList, MangledNameNList, NList] 
                0x00000001b8cbf584 (    0x10) GCC_except_table231 [NameNList, MangledNameNList, NList] 
                0x00000001b8cbf594 (    0x20) GCC_except_table232 [NameNList, MangledNameNList, NList] 
                0x00000001b8cbf5b4 (    0x18) GCC_except_table233 [NameNList, MangledNameNList, NList] 
                0x00000001b8cbf5cc (    0x20) GCC_except_table240 [NameNList, MangledNameNList, NList] 
                0x00000001b8cbf5ec (    0x28) GCC_except_table247 [NameNList, MangledNameNList, NList] 
            0x00000001b8cbf614 (   0xbd0) __TEXT __unwind_info
            0x00000001b8cc01e4 (   0x249) __TEXT __objc_classname
            0x00000001b8cc042e (  0x57a7) __TEXT __objc_methname
            0x00000001b8cc5bd5 (  0x12a3) __TEXT __objc_methtype
            0x00000001b8cc6e80 (  0x4180) __TEXT __objc_stubs
                0x00000001b8cc6e80 (    0x20) objc_msgSend$UTF8String [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc6ea0 (    0x20) objc_msgSend$UUIDString [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc6ec0 (    0x20) objc_msgSend$accessory [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc6ee0 (    0x20) objc_msgSend$accessoryAdded: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc6f00 (    0x20) objc_msgSend$accessoryConnected: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc6f20 (    0x20) objc_msgSend$accessoryDisconnected: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc6f40 (    0x20) objc_msgSend$accessoryMayHaveChanged [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc6f60 (    0x20) objc_msgSend$accessoryRemoved: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc6f80 (    0x20) objc_msgSend$addEntriesFromDictionary: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc6fa0 (    0x20) objc_msgSend$addEvent: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc6fc0 (    0x20) objc_msgSend$addGroupStatesFromBuffer: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc6fe0 (    0x20) objc_msgSend$addIdentityObjects: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7000 (    0x20) objc_msgSend$addObject: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7020 (    0x20) objc_msgSend$addObjectsFromArray: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7040 (    0x20) objc_msgSend$addUserStatesFromBuffer: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7060 (    0x20) objc_msgSend$allKeys [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7080 (    0x20) objc_msgSend$allObjects [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc70a0 (    0x20) objc_msgSend$allValues [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc70c0 (    0x20) objc_msgSend$allocWithZone: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc70e0 (    0x20) objc_msgSend$analyticsOSLogNSDictionary:forEvent: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7100 (    0x20) objc_msgSend$analyticsOSLogNSDictionary:forEvent:toLogPath:withPrefix: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7120 (    0x20) objc_msgSend$appendEvent: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7140 (    0x20) objc_msgSend$appendEventValue:isMetadata: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7160 (    0x20) objc_msgSend$appendFormat: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7180 (    0x20) objc_msgSend$applePayEnabled [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc71a0 (    0x20) objc_msgSend$archiveCatacombDataForComponent:toArchiver: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc71c0 (    0x20) objc_msgSend$ariadneSignposts [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc71e0 (    0x20) objc_msgSend$array [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7200 (    0x20) objc_msgSend$arrayWithArray: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7220 (    0x20) objc_msgSend$arrayWithCapacity: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7240 (    0x20) objc_msgSend$arrayWithObject: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7260 (    0x20) objc_msgSend$arrayWithObjects:count: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7280 (    0x20) objc_msgSend$attentionDetectionEnabled [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc72a0 (    0x20) objc_msgSend$attribute [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc72c0 (    0x20) objc_msgSend$attributesOfItemAtPath:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc72e0 (    0x20) objc_msgSend$authData [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7300 (    0x20) objc_msgSend$bioMatchLifespan [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7320 (    0x20) objc_msgSend$biometricKitIdentity [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7340 (    0x20) objc_msgSend$biometryEnabled [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7360 (    0x20) objc_msgSend$boolForKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7380 (    0x20) objc_msgSend$boolValue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc73a0 (    0x20) objc_msgSend$bundleWithPath: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc73c0 (    0x20) objc_msgSend$bytes [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc73e0 (    0x20) objc_msgSend$cacheAccessories [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7400 (    0x20) objc_msgSend$cacheCatacombInfo [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7420 (    0x20) objc_msgSend$cachedComponents [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7440 (    0x20) objc_msgSend$cachedGroupComponentsForUser: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7460 (    0x20) objc_msgSend$cachedUserComponents [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7480 (    0x20) objc_msgSend$cancelPreviousPerformRequestsWithTarget:selector:object: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc74a0 (    0x20) objc_msgSend$cancelWithClient: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc74c0 (    0x20) objc_msgSend$cancelledMessage [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc74e0 (    0x20) objc_msgSend$catacombCommitDir [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7500 (    0x20) objc_msgSend$catacombComponentForIdentity: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7520 (    0x20) objc_msgSend$catacombDir [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7540 (    0x20) objc_msgSend$catacombFileAccessed [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7560 (    0x20) objc_msgSend$catacombFileNameForComponent: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7580 (    0x20) objc_msgSend$catacombPrepareDir [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc75a0 (    0x20) objc_msgSend$catacombVersion [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc75c0 (    0x20) objc_msgSend$catacombWithDir: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc75e0 (    0x20) objc_msgSend$checkCatacombForUser: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7600 (    0x20) objc_msgSend$checkTemplatesValidityForUser: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7620 (    0x20) objc_msgSend$clearEvents [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7640 (    0x20) objc_msgSend$clearTemplateList [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7660 (    0x20) objc_msgSend$clearTemplateListForUser: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7680 (    0x20) objc_msgSend$client [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc76a0 (    0x20) objc_msgSend$client: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc76c0 (    0x20) objc_msgSend$clientEntitled:forSelector: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc76e0 (    0x20) objc_msgSend$clientEntitlement [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7700 (    0x20) objc_msgSend$clientInfo [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7720 (    0x20) objc_msgSend$clients [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7740 (    0x20) objc_msgSend$closeFile [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7760 (    0x20) objc_msgSend$cmdDispatchQueue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7780 (    0x20) objc_msgSend$code [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc77a0 (    0x20) objc_msgSend$commitWrite [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc77c0 (    0x20) objc_msgSend$compare: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc77e0 (    0x20) objc_msgSend$completeEnrollmentWithClient: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7800 (    0x20) objc_msgSend$component [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7820 (    0x20) objc_msgSend$component: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7840 (    0x20) objc_msgSend$componentForUserID: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7860 (    0x20) objc_msgSend$componentsJoinedByString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7880 (    0x20) objc_msgSend$connection [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc78a0 (    0x20) objc_msgSend$containsObject: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc78c0 (    0x20) objc_msgSend$content [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc78e0 (    0x20) objc_msgSend$contentsOfDirectoryAtPath:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7900 (    0x20) objc_msgSend$copy [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7920 (    0x20) objc_msgSend$count [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7940 (    0x20) objc_msgSend$countByEnumeratingWithState:objects:count: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7960 (    0x20) objc_msgSend$createDirectoryAtPath:withIntermediateDirectories:attributes:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7980 (    0x20) objc_msgSend$createEnrollOperation [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc79a0 (    0x20) objc_msgSend$createFileAtPath:contents:attributes: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc79c0 (    0x20) objc_msgSend$createMatchEventDictionary: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc79e0 (    0x20) objc_msgSend$createMatchOperation [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7a00 (    0x20) objc_msgSend$createPresenceDetectOperation [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7a20 (    0x20) objc_msgSend$data [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7a40 (    0x20) objc_msgSend$dataUsingEncoding: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7a60 (    0x20) objc_msgSend$dataWithBytes:length: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7a80 (    0x20) objc_msgSend$dataWithBytesNoCopy:length:freeWhenDone: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7aa0 (    0x20) objc_msgSend$dataWithContentsOfFile: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7ac0 (    0x20) objc_msgSend$dataWithLength: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7ae0 (    0x20) objc_msgSend$dataWithPropertyList:format:options:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7b00 (    0x20) objc_msgSend$date [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7b20 (    0x20) objc_msgSend$debugDescription [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7b40 (    0x20) objc_msgSend$decodeInt32ForKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7b60 (    0x20) objc_msgSend$decodeObjectOfClass:forKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7b80 (    0x20) objc_msgSend$decodeObjectOfClasses:forKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7ba0 (    0x20) objc_msgSend$defaultManager [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7bc0 (    0x20) objc_msgSend$defaultSession [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7be0 (    0x20) objc_msgSend$deleteAll [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7c00 (    0x20) objc_msgSend$deleteFile: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7c20 (    0x20) objc_msgSend$deleteUnusedCatacombFiles [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7c40 (    0x20) objc_msgSend$detectPresenceWithOptions:withClient: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7c60 (    0x20) objc_msgSend$deviceGroup [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7c80 (    0x20) objc_msgSend$diagnostics:withOptions:passed:withDetails:withClient: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7ca0 (    0x20) objc_msgSend$dictionary [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7cc0 (    0x20) objc_msgSend$dictionaryRepresentation [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7ce0 (    0x20) objc_msgSend$dictionaryRepresentationArchiving: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7d00 (    0x20) objc_msgSend$dictionaryRepresentationForClass: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7d20 (    0x20) objc_msgSend$dictionaryWithDictionary: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7d40 (    0x20) objc_msgSend$dictionaryWithObjects:forKeys:count: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7d60 (    0x20) objc_msgSend$disconnectingClient: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7d80 (    0x20) objc_msgSend$dropUnlockTokenWithClient: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7da0 (    0x20) objc_msgSend$effectiveUserIdentifier [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7dc0 (    0x20) objc_msgSend$enableBackgroundFdet:withClient: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7de0 (    0x20) objc_msgSend$enableMatchAutoRetry:withClient: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7e00 (    0x20) objc_msgSend$encodeEventValue:secondValue: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7e20 (    0x20) objc_msgSend$encodeInt32:forKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7e40 (    0x20) objc_msgSend$encodeObject:forKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7e60 (    0x20) objc_msgSend$encodedData [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7e80 (    0x20) objc_msgSend$enroll:forUser:withOptions:withClient: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7ea0 (    0x20) objc_msgSend$enrollContinue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7ec0 (    0x20) objc_msgSend$enrollFeedback:client: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7ee0 (    0x20) objc_msgSend$enrollResult:details:client: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7f00 (    0x20) objc_msgSend$enrollUpdate:client: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7f20 (    0x20) objc_msgSend$entitlementsNeededForPermissionGroup: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7f40 (    0x20) objc_msgSend$entity [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7f60 (    0x20) objc_msgSend$enumerateKeysAndObjectsUsingBlock: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7f80 (    0x20) objc_msgSend$eventAtIndex: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7fa0 (    0x20) objc_msgSend$eventsCount [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7fc0 (    0x20) objc_msgSend$exceptionWithName:reason:userInfo: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc7fe0 (    0x20) objc_msgSend$exportedObject [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8000 (    0x20) objc_msgSend$fileDescriptor [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8020 (    0x20) objc_msgSend$fileExistsAtPath: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8040 (    0x20) objc_msgSend$fileHandleForReadingAtPath: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8060 (    0x20) objc_msgSend$fileHandleForReadingFromURL:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8080 (    0x20) objc_msgSend$fileHandleForWritingAtPath: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc80a0 (    0x20) objc_msgSend$fileRadarWithLogs:withDescription: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc80c0 (    0x20) objc_msgSend$fileURLWithPath: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc80e0 (    0x20) objc_msgSend$filterIdentities:withFilter: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8100 (    0x20) objc_msgSend$finishDecoding [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8120 (    0x20) objc_msgSend$finishEncoding [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8140 (    0x20) objc_msgSend$firstObject [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8160 (    0x20) objc_msgSend$flags [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8180 (    0x20) objc_msgSend$flushEvents [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc81a0 (    0x20) objc_msgSend$forPreArm [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc81c0 (    0x20) objc_msgSend$forceBioLockoutForUser:withOptions:withClient: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc81e0 (    0x20) objc_msgSend$getAccessoryObject: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8200 (    0x20) objc_msgSend$getBioLockoutState:forUser:withClient: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8220 (    0x20) objc_msgSend$getBiometryAvailability:forUser:withClient: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8240 (    0x20) objc_msgSend$getBytes:length: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8260 (    0x20) objc_msgSend$getCalibrationDataInfoWithClient: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8280 (    0x20) objc_msgSend$getCatacombSaveListForComponents:list: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc82a0 (    0x20) objc_msgSend$getCountersignedStoreToken:withClient: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc82c0 (    0x20) objc_msgSend$getDeviceHardwareState:withClient: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc82e0 (    0x20) objc_msgSend$getDeviceStateWithClient: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8300 (    0x20) objc_msgSend$getEventDictionary [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8320 (    0x20) objc_msgSend$getExpressModeState:forUser:withClient: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8340 (    0x20) objc_msgSend$getFreeIdentityCount:forUser:accessoryGroup:client: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8360 (    0x20) objc_msgSend$getFreeIdentityCount:forUser:withClient: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8380 (    0x20) objc_msgSend$getIdentitiesDatabaseHashForUser:withClient: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc83a0 (    0x20) objc_msgSend$getIdentitiesDatabaseUUIDForUser:withClient: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc83c0 (    0x20) objc_msgSend$getIdentityFromUUID:withClient: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc83e0 (    0x20) objc_msgSend$getIdentityObject: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8400 (    0x20) objc_msgSend$getIdentityObjectByUserID:UUID: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8420 (    0x20) objc_msgSend$getLastMatchEvent:withClient: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8440 (    0x20) objc_msgSend$getLocalizedString:fromStringTable:withBundle: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8460 (    0x20) objc_msgSend$getLocalizedStringOrNil:fromStringTable:withBundle: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8480 (    0x20) objc_msgSend$getLogs:withDetails: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc84a0 (    0x20) objc_msgSend$getMaxIdentityCount:withClient: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc84c0 (    0x20) objc_msgSend$getNodeTopologyForIdentity:withClient: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc84e0 (    0x20) objc_msgSend$getPeriocularMatchStateForUser:state:withClient: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8500 (    0x20) objc_msgSend$getPreferencesValue:forKey:withClient: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8520 (    0x20) objc_msgSend$getProtectedConfigurationForUser:withClient: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8540 (    0x20) objc_msgSend$getProvisioningStateWithClient: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8560 (    0x20) objc_msgSend$getSensorCalibrationStatusWithClient: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8580 (    0x20) objc_msgSend$getSensorInfoWithClient: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc85a0 (    0x20) objc_msgSend$getSignatureForReason: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc85c0 (    0x20) objc_msgSend$getSignatureWithType:subtype: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc85e0 (    0x20) objc_msgSend$getSubtypeForReason: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8600 (    0x20) objc_msgSend$getSystemProtectedConfigurationWithClient: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8620 (    0x20) objc_msgSend$getTypeForReason: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8640 (    0x20) objc_msgSend$getUUIDBytes: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8660 (    0x20) objc_msgSend$getUserKeybagUUIDForUID: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8680 (    0x20) objc_msgSend$getUserUUIDForUID:userUUID: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc86a0 (    0x20) objc_msgSend$getUserUUIDsForUIDs:userUUIDs: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc86c0 (    0x20) objc_msgSend$group [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc86e0 (    0x20) objc_msgSend$handleCatacombUnlock [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8700 (    0x20) objc_msgSend$handleSharedMemoryTransfer:withHeader:data: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8720 (    0x20) objc_msgSend$hasPrefix: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8740 (    0x20) objc_msgSend$hasSuffix: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8760 (    0x20) objc_msgSend$hexDumpData:size: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8780 (    0x20) objc_msgSend$homeButtonPressed: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc87a0 (    0x20) objc_msgSend$identificationEnabled [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc87c0 (    0x20) objc_msgSend$identities [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc87e0 (    0x20) objc_msgSend$identities:withClient: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8800 (    0x20) objc_msgSend$identitiesCount [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8820 (    0x20) objc_msgSend$identitiesOfComponent: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8840 (    0x20) objc_msgSend$identitiesOfUser: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8860 (    0x20) objc_msgSend$indexOfObjectPassingTest: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8880 (    0x20) objc_msgSend$init [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc88a0 (    0x20) objc_msgSend$initAutoBugCapture [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc88c0 (    0x20) objc_msgSend$initEnrollOperation:biometricType:userID:options:client: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc88e0 (    0x20) objc_msgSend$initForReadingFromData:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8900 (    0x20) objc_msgSend$initMatchOperation:filter:options:client: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8920 (    0x20) objc_msgSend$initPresenceDetectOperation:options:client: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8940 (    0x20) objc_msgSend$initRequiringSecureCoding: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8960 (    0x20) objc_msgSend$initWithCapacity: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8980 (    0x20) objc_msgSend$initWithClientID:clientInfo:exportedObject: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc89a0 (    0x20) objc_msgSend$initWithDescription: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc89c0 (    0x20) objc_msgSend$initWithDomain:process:dispatchQueue: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc89e0 (    0x20) objc_msgSend$initWithEncodedEventOrCode: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8a00 (    0x20) objc_msgSend$initWithEventOrCode: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8a20 (    0x20) objc_msgSend$initWithName: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8a40 (    0x20) objc_msgSend$initWithName:dictionary: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8a60 (    0x20) objc_msgSend$initWithString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8a80 (    0x20) objc_msgSend$initWithSuiteName: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8aa0 (    0x20) objc_msgSend$initWithUUIDBytes: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8ac0 (    0x20) objc_msgSend$initWithUUIDString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8ae0 (    0x20) objc_msgSend$insertObject:atIndex: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8b00 (    0x20) objc_msgSend$intValue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8b20 (    0x20) objc_msgSend$integerValue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8b40 (    0x20) objc_msgSend$interfaceWithProtocol: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8b60 (    0x20) objc_msgSend$isCatacombAccessible [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8b80 (    0x20) objc_msgSend$isEqual: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8ba0 (    0x20) objc_msgSend$isEqualToComponent: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8bc0 (    0x20) objc_msgSend$isEqualToData: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8be0 (    0x20) objc_msgSend$isEqualToDictionary: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8c00 (    0x20) objc_msgSend$isEqualToSet: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8c20 (    0x20) objc_msgSend$isEqualToString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8c40 (    0x20) objc_msgSend$isFingerOnWithClient: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8c60 (    0x20) objc_msgSend$isFingerprintModificationRestricted [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8c80 (    0x20) objc_msgSend$isGroupComponent [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8ca0 (    0x20) objc_msgSend$isMasterComponent [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8cc0 (    0x20) objc_msgSend$isMemberOfClass: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8ce0 (    0x20) objc_msgSend$isMetadata [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8d00 (    0x20) objc_msgSend$isPeriocularEnrollmentSupported:withClient: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8d20 (    0x20) objc_msgSend$isSmartKeyboard [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8d40 (    0x20) objc_msgSend$isStart [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8d60 (    0x20) objc_msgSend$isSubclassOfClass: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8d80 (    0x20) objc_msgSend$isTerminal [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8da0 (    0x20) objc_msgSend$isUserComponent [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8dc0 (    0x20) objc_msgSend$isValidUser: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8de0 (    0x20) objc_msgSend$isXARTAvailableWithClient: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8e00 (    0x20) objc_msgSend$length [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8e20 (    0x20) objc_msgSend$listAccessories:client: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8e40 (    0x20) objc_msgSend$loadCatacomb [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8e60 (    0x20) objc_msgSend$loadCatacombAfterFirstUnlock [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8e80 (    0x20) objc_msgSend$loadCatacombForComponent: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8ea0 (    0x20) objc_msgSend$loadCatacombForUser: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8ec0 (    0x20) objc_msgSend$localizations [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8ee0 (    0x20) objc_msgSend$localizedStringForKey:value:table:localization: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8f00 (    0x20) objc_msgSend$lock [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8f20 (    0x20) objc_msgSend$logAnalyticsDictionary: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8f40 (    0x20) objc_msgSend$logCatacombHashForUser:catacombHash: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8f60 (    0x20) objc_msgSend$logCatacombInfo:data: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8f80 (    0x20) objc_msgSend$logCatacombUUIDForUser:catacombUUID: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8fa0 (    0x20) objc_msgSend$logDeviceMetadata [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8fc0 (    0x20) objc_msgSend$logSmartKeyboardStatus [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc8fe0 (    0x20) objc_msgSend$loginEnabled [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9000 (    0x20) objc_msgSend$masterComponent [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9020 (    0x20) objc_msgSend$match:withOptions:withClient: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9040 (    0x20) objc_msgSend$matchResult:details:client: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9060 (    0x20) objc_msgSend$moveItemAtPath:toPath:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9080 (    0x20) objc_msgSend$mutableBytes [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc90a0 (    0x20) objc_msgSend$mutableCopy [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc90c0 (    0x20) objc_msgSend$name [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc90e0 (    0x20) objc_msgSend$noBioLockoutAuthData [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9100 (    0x20) objc_msgSend$nodeWithSession:type:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9120 (    0x20) objc_msgSend$notifyAppIsInactive:withClient: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9140 (    0x20) objc_msgSend$now [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9160 (    0x20) objc_msgSend$numberWithBool: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9180 (    0x20) objc_msgSend$numberWithInt: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc91a0 (    0x20) objc_msgSend$numberWithInteger: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc91c0 (    0x20) objc_msgSend$numberWithUnsignedChar: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc91e0 (    0x20) objc_msgSend$numberWithUnsignedInt: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9200 (    0x20) objc_msgSend$numberWithUnsignedInteger: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9220 (    0x20) objc_msgSend$numberWithUnsignedLongLong: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9240 (    0x20) objc_msgSend$objectAtIndex: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9260 (    0x20) objc_msgSend$objectAtIndexedSubscript: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9280 (    0x20) objc_msgSend$objectForKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc92a0 (    0x20) objc_msgSend$objectForKeyedSubscript: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc92c0 (    0x20) objc_msgSend$objectIsForcedForKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc92e0 (    0x20) objc_msgSend$objectOfClass:forKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9300 (    0x20) objc_msgSend$osStateHandler: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9320 (    0x20) objc_msgSend$parseAuthDict:toAuthData: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9340 (    0x20) objc_msgSend$passcodeInputLifespan [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9360 (    0x20) objc_msgSend$pathForResource:ofType: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9380 (    0x20) objc_msgSend$pauseBioOperation: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc93a0 (    0x20) objc_msgSend$pauseFaceDetectTimer:withClient: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc93c0 (    0x20) objc_msgSend$performCancelCommand [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc93e0 (    0x20) objc_msgSend$performCompleteSaveCatacombCommand:outBuffer: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9400 (    0x20) objc_msgSend$performConfirmSaveCatacombCommand: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9420 (    0x20) objc_msgSend$performDisplayStatusChangedCommand: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9440 (    0x20) objc_msgSend$performDropUnlockTokenCommand [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9460 (    0x20) objc_msgSend$performEnrollCommand: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9480 (    0x20) objc_msgSend$performForceBioLockoutCommand: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc94a0 (    0x20) objc_msgSend$performGetBioDeviceListCommand: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc94c0 (    0x20) objc_msgSend$performGetBiometrickitdInfoCommand: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc94e0 (    0x20) objc_msgSend$performGetCatacombGroupStateCommand: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9500 (    0x20) objc_msgSend$performGetCatacombHashCommand:outHash: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9520 (    0x20) objc_msgSend$performGetCatacombStateCommand: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9540 (    0x20) objc_msgSend$performGetCatacombUUIDCommand:outUUID: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9560 (    0x20) objc_msgSend$performGetDeviceHardwareStateCommand: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9580 (    0x20) objc_msgSend$performGetFreeIdentityCountCommand:group:outCount: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc95a0 (    0x20) objc_msgSend$performGetFreeIdentityCountCommand:outCount: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc95c0 (    0x20) objc_msgSend$performGetIdentitiesListCommand:outBuffer: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc95e0 (    0x20) objc_msgSend$performGetIdentityRecordsCommand: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9600 (    0x20) objc_msgSend$performGetLastMatchEventCommand: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9620 (    0x20) objc_msgSend$performGetProtectedConfigCommand:outSetCfg:outEffectiveCfg: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9640 (    0x20) objc_msgSend$performGetSKSLockStateCommand:outState: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9660 (    0x20) objc_msgSend$performGetSystemProtectedConfigCommand: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9680 (    0x20) objc_msgSend$performGetTemplatesValidityCommand:isValid: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc96a0 (    0x20) objc_msgSend$performIsXARTAvailableCommand: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc96c0 (    0x20) objc_msgSend$performLoadBioLockoutRecordCommand: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc96e0 (    0x20) objc_msgSend$performLoadCatacombCommand:inData: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9700 (    0x20) objc_msgSend$performMatchCommand: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9720 (    0x20) objc_msgSend$performNoCatacombCommand: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9740 (    0x20) objc_msgSend$performPrepareSaveCatacombCommand:outDataSize: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9760 (    0x20) objc_msgSend$performPresenceDetectCommand: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9780 (    0x20) objc_msgSend$performRemoveIdentityCommand: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc97a0 (    0x20) objc_msgSend$performRemoveUserDataCommand: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc97c0 (    0x20) objc_msgSend$performRequestMaxIdentityCountCommand: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc97e0 (    0x20) objc_msgSend$performRequestMessageDataCommand:size:outData: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9800 (    0x20) objc_msgSend$performSaveBioLockoutRecordCommand: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9820 (    0x20) objc_msgSend$performSelector:withObject:afterDelay: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9840 (    0x20) objc_msgSend$performSetProtectedConfigCommand:cfg:authData: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9860 (    0x20) objc_msgSend$performSetSystemProtectedConfigCommand:authData: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9880 (    0x20) objc_msgSend$periocularMatchEnabled [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc98a0 (    0x20) objc_msgSend$preferenceObjectForKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc98c0 (    0x20) objc_msgSend$preferredLocalizationsFromArray:forPreferences: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc98e0 (    0x20) objc_msgSend$priority [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9900 (    0x20) objc_msgSend$processBioOperation: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9920 (    0x20) objc_msgSend$processIdentifier [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9940 (    0x20) objc_msgSend$processedFlags [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9960 (    0x20) objc_msgSend$pullAlignmentData [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9980 (    0x20) objc_msgSend$pullCalibrationDataWithClient: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc99a0 (    0x20) objc_msgSend$pullCaptureBufferWithClient: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc99c0 (    0x20) objc_msgSend$pullDebugImageData:rotated:hasWidth:hasHeight:withClient: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc99e0 (    0x20) objc_msgSend$pullMatchPolicyInfoData [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9a00 (    0x20) objc_msgSend$queryIdentityMigrationFailureForUser:failed:clear:withClient: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9a20 (    0x20) objc_msgSend$queryWithNode:forRecordTypes:attribute:matchType:queryValues:returnAttributes:maximumResults:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9a40 (    0x20) objc_msgSend$raise [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9a60 (    0x20) objc_msgSend$rangeOfString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9a80 (    0x20) objc_msgSend$readBioLockoutData: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9aa0 (    0x20) objc_msgSend$readCatacombState [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9ac0 (    0x20) objc_msgSend$readData:fromFile:logString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9ae0 (    0x20) objc_msgSend$readDataToEndOfFile [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9b00 (    0x20) objc_msgSend$readDataToEndOfFileAndReturnError: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9b20 (    0x20) objc_msgSend$recover [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9b40 (    0x20) objc_msgSend$registerDSID:withOptions:withClient: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9b60 (    0x20) objc_msgSend$registerDelegate:withClient: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9b80 (    0x20) objc_msgSend$registerStoreToken:withClient: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9ba0 (    0x20) objc_msgSend$remoteObjectProxy [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9bc0 (    0x20) objc_msgSend$removeAllIdentitiesForUser:withOptions:withClient: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9be0 (    0x20) objc_msgSend$removeAllObjects [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9c00 (    0x20) objc_msgSend$removeBioOperationOfClient: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9c20 (    0x20) objc_msgSend$removeIdentity:withOptions:withClient: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9c40 (    0x20) objc_msgSend$removeIdentityObject: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9c60 (    0x20) objc_msgSend$removeItemAtPath:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9c80 (    0x20) objc_msgSend$removeObject: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9ca0 (    0x20) objc_msgSend$removeObjectAtIndex: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9cc0 (    0x20) objc_msgSend$removeObjectForKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9ce0 (    0x20) objc_msgSend$removeObjectsForKeys: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9d00 (    0x20) objc_msgSend$removePeriocularTemplatesWithOptions:withClient: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9d20 (    0x20) objc_msgSend$removeUser: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9d40 (    0x20) objc_msgSend$reportLocalizationABC [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9d60 (    0x20) objc_msgSend$reset [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9d80 (    0x20) objc_msgSend$resetAppleConnectCounterWithClient: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9da0 (    0x20) objc_msgSend$resetClass: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9dc0 (    0x20) objc_msgSend$restoreAndSyncTemplates [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9de0 (    0x20) objc_msgSend$resultsAllowingPartial:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9e00 (    0x20) objc_msgSend$resume [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9e20 (    0x20) objc_msgSend$resumeQueuedBioOperation [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9e40 (    0x20) objc_msgSend$saveBioLockoutRecord [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9e60 (    0x20) objc_msgSend$saveCatacomb [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9e80 (    0x20) objc_msgSend$saveCatacombForComponents: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9ea0 (    0x20) objc_msgSend$saveCatacombForIdentity: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9ec0 (    0x20) objc_msgSend$seekToEndOfFile [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9ee0 (    0x20) objc_msgSend$sendAutoBugCaptureEvent: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9f00 (    0x20) objc_msgSend$sendSignature:withDuration: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9f20 (    0x20) objc_msgSend$sendStatusMessage:toClient: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9f40 (    0x20) objc_msgSend$serviceConnect [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9f60 (    0x20) objc_msgSend$serviceStatus:version:ordinal:data:timestamp: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9f80 (    0x20) objc_msgSend$set [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9fa0 (    0x20) objc_msgSend$setAccessory: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9fc0 (    0x20) objc_msgSend$setAcmContext: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cc9fe0 (    0x20) objc_msgSend$setActive: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cca000 (    0x20) objc_msgSend$setApplePayEnabled: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cca020 (    0x20) objc_msgSend$setArray: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cca040 (    0x20) objc_msgSend$setAttentionDetectionEnabled: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cca060 (    0x20) objc_msgSend$setAttribute: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cca080 (    0x20) objc_msgSend$setBioMatchLifespan: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cca0a0 (    0x20) objc_msgSend$setBiometryEnabled: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cca0c0 (    0x20) objc_msgSend$setCatacombFileAccessed: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cca0e0 (    0x20) objc_msgSend$setCatacombRestored: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cca100 (    0x20) objc_msgSend$setClasses:forSelector:argumentIndex:ofReply: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cca120 (    0x20) objc_msgSend$setClient: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cca140 (    0x20) objc_msgSend$setClientAppIsBackground: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cca160 (    0x20) objc_msgSend$setClientAppIsInactive: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cca180 (    0x20) objc_msgSend$setClientEntitlement: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cca1a0 (    0x20) objc_msgSend$setConnection: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cca1c0 (    0x20) objc_msgSend$setDebugImages:withClient: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cca1e0 (    0x20) objc_msgSend$setDecodingFailurePolicy: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cca200 (    0x20) objc_msgSend$setDelegateRegistered: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cca220 (    0x20) objc_msgSend$setEntity: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cca240 (    0x20) objc_msgSend$setExportedInterface: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cca260 (    0x20) objc_msgSend$setExportedObject: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cca280 (    0x20) objc_msgSend$setFlags: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cca2a0 (    0x20) objc_msgSend$setForCredentialSet: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cca2c0 (    0x20) objc_msgSend$setForPreArm: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cca2e0 (    0x20) objc_msgSend$setForUnlock: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cca300 (    0x20) objc_msgSend$setGroup: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cca320 (    0x20) objc_msgSend$setIdentificationEnabled: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cca340 (    0x20) objc_msgSend$setInvalidationHandler: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cca360 (    0x20) objc_msgSend$setLoginEnabled: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cca380 (    0x20) objc_msgSend$setName: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cca3a0 (    0x20) objc_msgSend$setNoBioLockout: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cca3c0 (    0x20) objc_msgSend$setNoBioLockoutUserID: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cca3e0 (    0x20) objc_msgSend$setObject:forKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cca400 (    0x20) objc_msgSend$setObject:forKeyedSubscript: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cca420 (    0x20) objc_msgSend$setPasscodeInputLifespan: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cca440 (    0x20) objc_msgSend$setPeriocularMatchEnabled: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cca460 (    0x20) objc_msgSend$setPreferencesValue:forKey:withClient: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cca480 (    0x20) objc_msgSend$setPriority: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cca4a0 (    0x20) objc_msgSend$setProcessedFlags: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cca4c0 (    0x20) objc_msgSend$setProperties [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cca4e0 (    0x20) objc_msgSend$setProtectedConfiguration:forUser:withOptions:withClient: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cca500 (    0x20) objc_msgSend$setRemoteObjectInterface: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cca520 (    0x20) objc_msgSend$setSelectedIdentitiesBlob: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cca540 (    0x20) objc_msgSend$setServer: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cca560 (    0x20) objc_msgSend$setSet: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cca580 (    0x20) objc_msgSend$setStatus: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cca5a0 (    0x20) objc_msgSend$setStopOnSuccess: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cca5c0 (    0x20) objc_msgSend$setSystemProtectedConfiguration:withOptions:withClient: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cca5e0 (    0x20) objc_msgSend$setTemplate:forIdentity:withClient: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cca600 (    0x20) objc_msgSend$setTemplatesAtBoot: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cca620 (    0x20) objc_msgSend$setType: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cca640 (    0x20) objc_msgSend$setUnlockEnabled: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cca660 (    0x20) objc_msgSend$setUnlockTokenMaxLifetime: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cca680 (    0x20) objc_msgSend$setUseCase: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cca6a0 (    0x20) objc_msgSend$setUserDSID:withOptions:withClient: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cca6c0 (    0x20) objc_msgSend$setUserID: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cca6e0 (    0x20) objc_msgSend$setUuid: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cca700 (    0x20) objc_msgSend$setValue:forKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cca720 (    0x20) objc_msgSend$setWithObjects: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cca740 (    0x20) objc_msgSend$sharedInstance [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cca760 (    0x20) objc_msgSend$signatureWithDomain:type:subType:detectedProcess:triggerThresholdValues: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cca780 (    0x20) objc_msgSend$snapshotWithSignature:duration:event:payload:reply: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cca7a0 (    0x20) objc_msgSend$startBioOperation: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cca7c0 (    0x20) objc_msgSend$startEnrollOperation: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cca7e0 (    0x20) objc_msgSend$startMatchOperation: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cca800 (    0x20) objc_msgSend$startNewMatchAttemptWithClient: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cca820 (    0x20) objc_msgSend$startPresenceDetectOperation: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cca840 (    0x20) objc_msgSend$stateDictionary [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cca860 (    0x20) objc_msgSend$stateDictionaryWithHints: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cca880 (    0x20) objc_msgSend$stateOfComponent: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cca8a0 (    0x20) objc_msgSend$stateOfMasterComponent [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cca8c0 (    0x20) objc_msgSend$stateOfUserComponent: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cca8e0 (    0x20) objc_msgSend$status [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cca900 (    0x20) objc_msgSend$statusMessage: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cca920 (    0x20) objc_msgSend$statusMessage:client: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cca940 (    0x20) objc_msgSend$statusMessage:details:client: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cca960 (    0x20) objc_msgSend$statusMessage:withData:timestamp: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cca980 (    0x20) objc_msgSend$string [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cca9a0 (    0x20) objc_msgSend$stringByAppendingFormat: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cca9c0 (    0x20) objc_msgSend$stringByAppendingPathComponent: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8cca9e0 (    0x20) objc_msgSend$stringByAppendingString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8ccaa00 (    0x20) objc_msgSend$stringValue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8ccaa20 (    0x20) objc_msgSend$stringWithFormat: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8ccaa40 (    0x20) objc_msgSend$stringWithString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8ccaa60 (    0x20) objc_msgSend$stringWithUTF8String: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8ccaa80 (    0x20) objc_msgSend$subdataWithRange: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8ccaaa0 (    0x20) objc_msgSend$substringWithRange: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8ccaac0 (    0x20) objc_msgSend$superclass [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8ccaae0 (    0x20) objc_msgSend$supportsRemovableAccessories [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8ccab00 (    0x20) objc_msgSend$suspend [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8ccab20 (    0x20) objc_msgSend$suspendEnrollment:withClient: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8ccab40 (    0x20) objc_msgSend$syncDir: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8ccab60 (    0x20) objc_msgSend$syncTemplateListForUser: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8ccab80 (    0x20) objc_msgSend$taskPausedMessage [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8ccaba0 (    0x20) objc_msgSend$taskResumeFailedMessage [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8ccabc0 (    0x20) objc_msgSend$taskResumeStatus: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8ccabe0 (    0x20) objc_msgSend$taskResumeStatus:client: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8ccac00 (    0x20) objc_msgSend$taskResumedMessage [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8ccac20 (    0x20) objc_msgSend$templateUpdate:details:client: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8ccac40 (    0x20) objc_msgSend$terminate [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8ccac60 (    0x20) objc_msgSend$timeIntervalSince1970 [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8ccac80 (    0x20) objc_msgSend$timeIntervalSinceNow [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8ccaca0 (    0x20) objc_msgSend$timestampEvent:absoluteTime: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8ccacc0 (    0x20) objc_msgSend$touchIDButtonPressed:client: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8ccace0 (    0x20) objc_msgSend$type [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8ccad00 (    0x20) objc_msgSend$unarchiveCatacombDataForComponent:fromUnarchiver:secureData:identities: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8ccad20 (    0x20) objc_msgSend$unlock [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8ccad40 (    0x20) objc_msgSend$unlockEnabled [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8ccad60 (    0x20) objc_msgSend$unlockTokenMaxLifetime [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8ccad80 (    0x20) objc_msgSend$unsignedIntValue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8ccada0 (    0x20) objc_msgSend$unsignedIntegerValue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8ccadc0 (    0x20) objc_msgSend$updateActiveOperationNotification [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8ccade0 (    0x20) objc_msgSend$updateActiveOperationNotificationWithOverride: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8ccae00 (    0x20) objc_msgSend$updateBoundedFieldValue [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8ccae20 (    0x20) objc_msgSend$updateEnrollmentChangedNotification: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8ccae40 (    0x20) objc_msgSend$updateIdentity:withOptions:withClient: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8ccae60 (    0x20) objc_msgSend$updatePropertiesOfIdentities [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8ccae80 (    0x20) objc_msgSend$userID [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8ccaea0 (    0x20) objc_msgSend$uuid [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8ccaec0 (    0x20) objc_msgSend$validateAllUsers [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8ccaee0 (    0x20) objc_msgSend$validateUsersKeybagUUIDs [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8ccaf00 (    0x20) objc_msgSend$valueForEntitlement: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8ccaf20 (    0x20) objc_msgSend$valueForKey: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8ccaf40 (    0x20) objc_msgSend$valuesForAttribute:error: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8ccaf60 (    0x20) objc_msgSend$writeBioLockoutData: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8ccaf80 (    0x20) objc_msgSend$writeData: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8ccafa0 (    0x20) objc_msgSend$writeData:toFile: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8ccafc0 (    0x20) objc_msgSend$writeStringToPersistentLog: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x00000001b8ccafe0 (    0x20) objc_msgSend$writeToFile:atomically: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
        0x00000001def43ab8 (  0x63d0) __DATA_CONST SEGMENT
            0x00000001def43ab8 (   0x130) __DATA_CONST __got
            0x00000001def43be8 (  0x1648) __DATA_CONST __const
                0x00000001def43be8 (     0x8) kBiometricAbcDomain [EXT, NameNList, MangledNameNList, NList] 
                0x00000001def43bf0 (    0x38) kBiometricAbcProcess [EXT, NameNList, MangledNameNList, NList] 
                0x00000001def43c28 (     0x8) kBiometricKitCALogPrefix [EXT, NameNList, MangledNameNList, NList] 
                0x00000001def43c30 (     0x8) kBiometricKitCALogPath [EXT, NameNList, MangledNameNList, NList] 
                0x00000001def43c38 (     0x8) kBiometricKitCAEventCanceled [EXT, NameNList, MangledNameNList, NList] 
                0x00000001def43c40 (     0x8) kBiometricKitCADisplayOn [EXT, NameNList, MangledNameNList, NList] 
                0x00000001def43c48 (     0x8) kBiometricKitCADeviceEnclosureColor [EXT, NameNList, MangledNameNList, NList] 
                0x00000001def43c50 (     0x8) kBiometricKitCATimeSinceLastEnrollment [EXT, NameNList, MangledNameNList, NList] 
                0x00000001def43c58 (     0x8) kBiometricKitCATimeSinceLastEnrollmentBinned [EXT, NameNList, MangledNameNList, NList] 
                0x00000001def43c60 (     0x8) kBiometricKitCATimeSinceLastEvent [EXT, NameNList, MangledNameNList, NList] 
                0x00000001def43c68 (    0x48) kBiometricKitCAPreviousEventDate [EXT, NameNList, MangledNameNList, NList] 
                0x00000001def43cb0 (    0x20) __block_descriptor_32_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001def43cd0 (    0x20) __block_descriptor_40_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001def43cf0 (     0x8) g_pcb [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001def43cf8 (   0x690) sharedPathMap [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001def44388 (   0xd80) userPathMap [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001def45108 (     0x8) kAKSConfigEscrowPasscodePeriod [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001def45110 (     0x8) kAKSConfigEscrowTokenPeriod [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001def45118 (    0x20) __block_descriptor_tmp [NameNList, MangledNameNList, NList] 
                0x00000001def45138 (    0x20) __block_descriptor_tmp.124 [NameNList, MangledNameNList, NList] 
                0x00000001def45158 (    0x20) __block_descriptor_tmp.140 [NameNList, MangledNameNList, NList] 
                0x00000001def45178 (    0x20) __block_descriptor_tmp.143 [NameNList, MangledNameNList, NList] 
                0x00000001def45198 (    0x20) __block_descriptor_tmp.159 [NameNList, MangledNameNList, NList] 
                0x00000001def451b8 (     0x8) kAKSConfigGracePeriod [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001def451c0 (     0x8) kAKSConfigBackOffDelay [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001def451c8 (     0x8) kAKSConfigMaxUnlockAttempts [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001def451d0 (     0x8) kAKSConfigFlags [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001def451d8 (     0x8) kAKSConfigUserUUID [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001def451e0 (     0x8) kAKSConfigGroupUUID [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001def451e8 (     0x8) kAKSConfigBindKEKToKB [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001def451f0 (     0x8) kAKSConfigRecoveryIterations [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001def451f8 (     0x8) kAKSConfigRecoveryTargetIterations [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001def45200 (     0x8) kAKSConfigRecoveryFlags [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001def45208 (     0x8) kAKSConfigMementoSupported [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001def45210 (     0x8) kAKSConfigMementoBlobExists [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001def45218 (     0x8) kAKSConfigMementoPasscodeGeneration [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001def45220 (     0x8) kAKSConfigPasscodeGeneration [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001def45228 (     0x8) kAKSConfigInactivityRebootEnabled [PEXT, NameNList, MangledNameNList, NList] 
            0x00000001def45230 (    0xa0) __DATA_CONST __objc_classlist
            0x00000001def452d0 (    0x28) __DATA_CONST __objc_protolist
                0x00000001def452d0 (     0x8) _OBJC_LABEL_PROTOCOL_$_NSObject [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001def452d8 (     0x8) _OBJC_LABEL_PROTOCOL_$_BiometricKitXpcProtocol [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001def452e0 (     0x8) _OBJC_LABEL_PROTOCOL_$_NSCopying [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001def452e8 (     0x8) _OBJC_LABEL_PROTOCOL_$_BiometricKitDelegateXpcProtocol [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001def452f0 (     0x8) _OBJC_LABEL_PROTOCOL_$_NSXPCListenerDelegate [PEXT, NameNList, MangledNameNList, NList] 
            0x00000001def452f8 (     0x8) __DATA_CONST __objc_imageinfo
            0x00000001def45300 (  0x34f0) __DATA_CONST __objc_const
                0x00000001def45300 (    0x48) _OBJC_METACLASS_RO_$_BiometricAutoBugCapture [NameNList, MangledNameNList, NList] 
                0x00000001def45348 (    0xa8) _OBJC_$_INSTANCE_VARIABLES_BiometricAutoBugCapture [NameNList, MangledNameNList, NList] 
                0x00000001def453f0 (    0x58) _OBJC_$_PROP_LIST_BiometricAutoBugCapture [NameNList, MangledNameNList, NList] 
                0x00000001def45448 (    0x48) _OBJC_$_INSTANCE_VARIABLES_BKCatacomb [NameNList, MangledNameNList, NList] 
                0x00000001def45490 (    0x18) _OBJC_$_PROP_LIST_BKCatacomb [NameNList, MangledNameNList, NList] 
                0x00000001def454a8 (    0x48) _OBJC_METACLASS_RO_$_BiometricKitCoreAnalyticsEvent [NameNList, MangledNameNList, NList] 
                0x00000001def454f0 (   0x148) _OBJC_$_INSTANCE_VARIABLES_BiometricKitCoreAnalyticsEvent [NameNList, MangledNameNList, NList] 
                0x00000001def45638 (    0x78) _OBJC_$_PROP_LIST_BiometricKitCoreAnalyticsEvent [NameNList, MangledNameNList, NList] 
                0x00000001def456b0 (    0x48) _OBJC_METACLASS_RO_$_BiometricKitXPCExportedClientObject [NameNList, MangledNameNList, NList] 
                0x00000001def456f8 (    0xc8) _OBJC_$_INSTANCE_VARIABLES_BiometricKitXPCExportedClientObject [NameNList, MangledNameNList, NList] 
                0x00000001def457c0 (    0x68) _OBJC_$_PROP_LIST_BiometricKitXPCExportedClientObject [NameNList, MangledNameNList, NList] 
                0x00000001def45828 (   0x1d0) _OBJC_$_PROTOCOL_INSTANCE_METHODS_NSObject [NameNList, MangledNameNList, NList] 
                0x00000001def459f8 (    0x20) _OBJC_$_PROTOCOL_INSTANCE_METHODS_OPT_NSObject [NameNList, MangledNameNList, NList] 
                0x00000001def45a18 (    0x48) _OBJC_$_PROP_LIST_NSObject [NameNList, MangledNameNList, NList] 
                0x00000001def45a60 (    0xa0) _OBJC_$_PROTOCOL_METHOD_TYPES_NSObject [NameNList, MangledNameNList, NList] 
                0x00000001def45b00 (    0x18) _OBJC_$_PROTOCOL_REFS_BiometricKitXpcProtocol [NameNList, MangledNameNList, NList] 
                0x00000001def45b18 (   0x698) _OBJC_$_PROTOCOL_INSTANCE_METHODS_BiometricKitXpcProtocol [NameNList, MangledNameNList, NList] 
                0x00000001def461b0 (   0x230) _OBJC_$_PROTOCOL_METHOD_TYPES_BiometricKitXpcProtocol [NameNList, MangledNameNList, NList] 
                0x00000001def463e0 (    0x18) _OBJC_CLASS_PROTOCOLS_$_BiometricKitXPCExportedObject [NameNList, MangledNameNList, NList] 
                0x00000001def463f8 (    0x48) _OBJC_METACLASS_RO_$_BiometricKitXPCExportedObject [NameNList, MangledNameNList, NList] 
                0x00000001def46440 (    0x88) _OBJC_$_INSTANCE_VARIABLES_BiometricKitXPCExportedObject [NameNList, MangledNameNList, NList] 
                0x00000001def464c8 (    0x78) _OBJC_$_PROP_LIST_BiometricKitXPCExportedObject [NameNList, MangledNameNList, NList] 
                0x00000001def46540 (    0x48) _OBJC_CLASS_RO_$_BiometricSupportUserNotification [NameNList, MangledNameNList, NList] 
                0x00000001def46588 (    0x48) _OBJC_CLASS_RO_$_BKLocalization [NameNList, MangledNameNList, NList] 
                0x00000001def465d0 (    0x48) _OBJC_METACLASS_RO_$_BiometricOperation [NameNList, MangledNameNList, NList] 
                0x00000001def46618 (    0x88) _OBJC_$_INSTANCE_VARIABLES_BiometricOperation [NameNList, MangledNameNList, NList] 
                0x00000001def466a0 (    0x88) _OBJC_$_PROP_LIST_BiometricOperation [NameNList, MangledNameNList, NList] 
                0x00000001def46728 (    0x48) _OBJC_METACLASS_RO_$_BiometricEnrollOperation [NameNList, MangledNameNList, NList] 
                0x00000001def46770 (    0x88) _OBJC_$_INSTANCE_VARIABLES_BiometricEnrollOperation [NameNList, MangledNameNList, NList] 
                0x00000001def467f8 (    0x48) _OBJC_$_PROP_LIST_BiometricEnrollOperation [NameNList, MangledNameNList, NList] 
                0x00000001def46840 (    0x48) _OBJC_METACLASS_RO_$_BiometricMatchOperation [NameNList, MangledNameNList, NList] 
                0x00000001def46888 (   0x188) _OBJC_$_INSTANCE_VARIABLES_BiometricMatchOperation [NameNList, MangledNameNList, NList] 
                0x00000001def46a10 (    0xc8) _OBJC_$_PROP_LIST_BiometricMatchOperation [NameNList, MangledNameNList, NList] 
                0x00000001def46ad8 (    0x48) _OBJC_METACLASS_RO_$_BiometricPresenceDetectOperation [NameNList, MangledNameNList, NList] 
                0x00000001def46b20 (    0x48) _OBJC_METACLASS_RO_$_UserProtectedConfig [NameNList, MangledNameNList, NList] 
                0x00000001def46b68 (    0xc8) _OBJC_$_INSTANCE_VARIABLES_UserProtectedConfig [NameNList, MangledNameNList, NList] 
                0x00000001def46c30 (    0x68) _OBJC_$_PROP_LIST_UserProtectedConfig [NameNList, MangledNameNList, NList] 
                0x00000001def46c98 (    0x48) _OBJC_METACLASS_RO_$_SystemProtectedConfig [NameNList, MangledNameNList, NList] 
                0x00000001def46ce0 (   0x108) _OBJC_$_INSTANCE_VARIABLES_SystemProtectedConfig [NameNList, MangledNameNList, NList] 
                0x00000001def46de8 (    0x88) _OBJC_$_PROP_LIST_SystemProtectedConfig [NameNList, MangledNameNList, NList] 
                0x00000001def46e70 (    0x48) _OBJC_METACLASS_RO_$_ActivityTracker [NameNList, MangledNameNList, NList] 
                0x00000001def46eb8 (    0x68) _OBJC_$_INSTANCE_VARIABLES_ActivityTracker [NameNList, MangledNameNList, NList] 
                0x00000001def46f20 (    0x18) _OBJC_$_PROP_LIST_ActivityTracker [NameNList, MangledNameNList, NList] 
                0x00000001def46f38 (    0x20) _OBJC_$_PROTOCOL_INSTANCE_METHODS_NSCopying [NameNList, MangledNameNList, NList] 
                0x00000001def46f58 (     0x8) _OBJC_$_PROTOCOL_METHOD_TYPES_NSCopying [NameNList, MangledNameNList, NList] 
                0x00000001def46f60 (    0x18) _OBJC_CLASS_PROTOCOLS_$_CatacombComponent [NameNList, MangledNameNList, NList] 
                0x00000001def46f78 (    0x28) _OBJC_$_INSTANCE_VARIABLES_CatacombComponent [NameNList, MangledNameNList, NList] 
                0x00000001def46fa0 (    0x38) _OBJC_$_PROP_LIST_CatacombComponent [NameNList, MangledNameNList, NList] 
                0x00000001def46fd8 (    0x48) _OBJC_METACLASS_RO_$_CatacombStateCache [NameNList, MangledNameNList, NList] 
                0x00000001def47020 (    0x28) _OBJC_$_INSTANCE_VARIABLES_CatacombStateCache [NameNList, MangledNameNList, NList] 
                0x00000001def47048 (   0x1d0) _OBJC_$_PROTOCOL_INSTANCE_METHODS_NSObject [NameNList, MangledNameNList, NList] 
                0x00000001def47218 (    0x20) _OBJC_$_PROTOCOL_INSTANCE_METHODS_OPT_NSObject [NameNList, MangledNameNList, NList] 
                0x00000001def47238 (    0x48) _OBJC_$_PROP_LIST_NSObject [NameNList, MangledNameNList, NList] 
                0x00000001def47280 (    0xa0) _OBJC_$_PROTOCOL_METHOD_TYPES_NSObject [NameNList, MangledNameNList, NList] 
                0x00000001def47320 (    0x18) _OBJC_$_PROTOCOL_REFS_BiometricKitXpcProtocol [NameNList, MangledNameNList, NList] 
                0x00000001def47338 (   0x698) _OBJC_$_PROTOCOL_INSTANCE_METHODS_BiometricKitXpcProtocol [NameNList, MangledNameNList, NList] 
                0x00000001def479d0 (   0x230) _OBJC_$_PROTOCOL_METHOD_TYPES_BiometricKitXpcProtocol [NameNList, MangledNameNList, NList] 
                0x00000001def47c00 (    0x18) _OBJC_$_PROTOCOL_REFS_BiometricKitDelegateXpcProtocol [NameNList, MangledNameNList, NList] 
                0x00000001def47c18 (   0x110) _OBJC_$_PROTOCOL_INSTANCE_METHODS_BiometricKitDelegateXpcProtocol [NameNList, MangledNameNList, NList] 
                0x00000001def47d28 (    0x58) _OBJC_$_PROTOCOL_METHOD_TYPES_BiometricKitDelegateXpcProtocol [NameNList, MangledNameNList, NList] 
                0x00000001def47d80 (    0x18) _OBJC_$_PROTOCOL_REFS_NSXPCListenerDelegate [NameNList, MangledNameNList, NList] 
                0x00000001def47d98 (    0x20) _OBJC_$_PROTOCOL_INSTANCE_METHODS_OPT_NSXPCListenerDelegate [NameNList, MangledNameNList, NList] 
                0x00000001def47db8 (     0x8) _OBJC_$_PROTOCOL_METHOD_TYPES_NSXPCListenerDelegate [NameNList, MangledNameNList, NList] 
                0x00000001def47dc0 (    0x18) _OBJC_CLASS_PROTOCOLS_$_BiometricKitXPCServer [NameNList, MangledNameNList, NList] 
                0x00000001def47dd8 (   0x4a8) _OBJC_$_INSTANCE_VARIABLES_BiometricKitXPCServer [NameNList, MangledNameNList, NList] 
                0x00000001def48280 (   0x178) _OBJC_$_PROP_LIST_BiometricKitXPCServer [NameNList, MangledNameNList, NList] 
                0x00000001def483f8 (    0x48) _OBJC_METACLASS_RO_$_BKEvent [NameNList, MangledNameNList, NList] 
                0x00000001def48440 (   0x108) _OBJC_$_INSTANCE_VARIABLES_BKEvent [NameNList, MangledNameNList, NList] 
                0x00000001def48548 (    0x88) _OBJC_$_PROP_LIST_BKEvent [NameNList, MangledNameNList, NList] 
                0x00000001def485d0 (    0xe8) _OBJC_$_INSTANCE_VARIABLES_BiometricKitEventLogger [NameNList, MangledNameNList, NList] 
                0x00000001def486b8 (    0x20) _OBJC_$_PROTOCOL_INSTANCE_METHODS_NSCopying [NameNList, MangledNameNList, NList] 
                0x00000001def486d8 (     0x8) _OBJC_$_PROTOCOL_METHOD_TYPES_NSCopying [NameNList, MangledNameNList, NList] 
                0x00000001def486e0 (    0x18) _OBJC_CLASS_PROTOCOLS_$_AWDBiometricKitEventLog [NameNList, MangledNameNList, NList] 
                0x00000001def486f8 (    0x48) _OBJC_METACLASS_RO_$_AWDBiometricKitEventLog [NameNList, MangledNameNList, NList] 
                0x00000001def48740 (    0x68) _OBJC_$_INSTANCE_VARIABLES_AWDBiometricKitEventLog [NameNList, MangledNameNList, NList] 
                0x00000001def487a8 (    0x48) _OBJC_$_PROP_LIST_AWDBiometricKitEventLog [NameNList, MangledNameNList, NList] 
            0x00000001def487f0 (  0x1690) __DATA_CONST __objc_selrefs
            0x00000001def49e80 (     0x8) __DATA_CONST __objc_arraydata
                0x00000001def49e80 (     0x8) _unnamed_array_storage [NameNList, MangledNameNList, NList] 
        0x00000001def49e88 (  0x2900) __AUTH_CONST SEGMENT
            0x00000001def49e88 (  0x16c0) __AUTH_CONST __cfstring
            0x00000001def4b548 (   0x460) __AUTH_CONST __const
                0x00000001def4b548 (    0x30) __block_descriptor_40_e8_32s_e22_v16?0"NSDictionary"8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001def4b578 (    0x30) __block_descriptor_64_e8_32s40s48r_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001def4b5a8 (    0x30) __block_descriptor_48_e8_32s40s_e19_"NSDictionary"8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001def4b5d8 (    0x30) __block_descriptor_48_e8_32s40r_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001def4b608 (    0x30) __block_descriptor_72_e8_32s40s48bs56r_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001def4b638 (    0x30) __block_descriptor_72_e8_32s40s48s56bs64r_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001def4b668 (    0x30) __block_descriptor_64_e8_32s40s48bs56r_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001def4b698 (    0x30) __block_descriptor_56_e8_32s40bs48r_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001def4b6c8 (    0x30) __block_descriptor_68_e8_32s40s48bs56r_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001def4b6f8 (    0x30) __block_descriptor_76_e8_32s40s48s56bs64r_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001def4b728 (    0x30) __block_descriptor_40_e8_32s_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001def4b758 (    0x30) __block_descriptor_40_e8_32s_e103_^{os_state_data_s=I(?=b32I){os_state_data_decoder_s=[64c][64c]}[64c][0C]}16?0^{os_state_hints_s=I*II}8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001def4b788 (    0x30) __block_descriptor_40_e8_32s_e8_v12?0i8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001def4b7b8 (    0x20) __block_literal_global [NameNList, MangledNameNList, NList] 
                0x00000001def4b7d8 (    0x30) __block_descriptor_48_e8_32s40s_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001def4b808 (    0x30) __block_descriptor_48_e8_32s40s_e35_B32?0"BiometricOperation"8Q16^B24l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001def4b838 (    0x30) __block_descriptor_40_e8_32s_e35_B32?0"BiometricOperation"8Q16^B24l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001def4b868 (    0x30) __block_descriptor_48_e8_32s_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001def4b898 (    0x30) __block_descriptor_48_e8_32s40r_e15_v32?0816^B24l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001def4b8c8 (    0x80) lib_platform_callbacks [NameNList, MangledNameNList, NList] 
                0x00000001def4b948 (    0x20) __block_literal_global [NameNList, MangledNameNList, NList] 
                0x00000001def4b968 (    0x20) __block_literal_global.145 [NameNList, MangledNameNList, NList] 
                0x00000001def4b988 (    0x20) __block_literal_global.161 [NameNList, MangledNameNList, NList] 
            0x00000001def4b9a8 (   0x6c0) __AUTH_CONST __objc_const
                0x00000001def4b9a8 (    0x48) _OBJC_CLASS_RO_$_BiometricAutoBugCapture [NameNList, MangledNameNList, NList] 
                0x00000001def4b9f0 (    0x48) _OBJC_METACLASS_RO_$_BKCatacomb [NameNList, MangledNameNList, NList] 
                0x00000001def4ba38 (    0x48) _OBJC_CLASS_RO_$_BKCatacomb [NameNList, MangledNameNList, NList] 
                0x00000001def4ba80 (    0x48) _OBJC_CLASS_RO_$_BiometricKitCoreAnalyticsEvent [NameNList, MangledNameNList, NList] 
                0x00000001def4bac8 (    0x48) _OBJC_CLASS_RO_$_BiometricKitXPCExportedClientObject [NameNList, MangledNameNList, NList] 
                0x00000001def4bb10 (    0x48) _OBJC_CLASS_RO_$_BiometricKitXPCExportedObject [NameNList, MangledNameNList, NList] 
                0x00000001def4bb58 (    0x48) _OBJC_METACLASS_RO_$_BiometricSupportUserNotification [NameNList, MangledNameNList, NList] 
                0x00000001def4bba0 (    0x48) _OBJC_METACLASS_RO_$_BKLocalization [NameNList, MangledNameNList, NList] 
                0x00000001def4bbe8 (    0x48) _OBJC_CLASS_RO_$_BiometricOperation [NameNList, MangledNameNList, NList] 
                0x00000001def4bc30 (    0x48) _OBJC_CLASS_RO_$_BiometricEnrollOperation [NameNList, MangledNameNList, NList] 
                0x00000001def4bc78 (    0x48) _OBJC_CLASS_RO_$_BiometricMatchOperation [NameNList, MangledNameNList, NList] 
                0x00000001def4bcc0 (    0x48) _OBJC_CLASS_RO_$_BiometricPresenceDetectOperation [NameNList, MangledNameNList, NList] 
                0x00000001def4bd08 (    0x48) _OBJC_CLASS_RO_$_UserProtectedConfig [NameNList, MangledNameNList, NList] 
                0x00000001def4bd50 (    0x48) _OBJC_CLASS_RO_$_SystemProtectedConfig [NameNList, MangledNameNList, NList] 
                0x00000001def4bd98 (    0x48) _OBJC_CLASS_RO_$_ActivityTracker [NameNList, MangledNameNList, NList] 
                0x00000001def4bde0 (    0x48) _OBJC_METACLASS_RO_$_CatacombComponent [NameNList, MangledNameNList, NList] 
                0x00000001def4be28 (    0x48) _OBJC_CLASS_RO_$_CatacombComponent [NameNList, MangledNameNList, NList] 
                0x00000001def4be70 (    0x48) _OBJC_CLASS_RO_$_CatacombStateCache [NameNList, MangledNameNList, NList] 
                0x00000001def4beb8 (    0x48) _OBJC_METACLASS_RO_$_BiometricKitXPCServer [NameNList, MangledNameNList, NList] 
                0x00000001def4bf00 (    0x48) _OBJC_CLASS_RO_$_BiometricKitXPCServer [NameNList, MangledNameNList, NList] 
                0x00000001def4bf48 (    0x48) _OBJC_CLASS_RO_$_BKEvent [NameNList, MangledNameNList, NList] 
                0x00000001def4bf90 (    0x48) _OBJC_METACLASS_RO_$_BiometricKitEventLogger [NameNList, MangledNameNList, NList] 
                0x00000001def4bfd8 (    0x48) _OBJC_CLASS_RO_$_BiometricKitEventLogger [NameNList, MangledNameNList, NList] 
                0x00000001def4c020 (    0x48) _OBJC_CLASS_RO_$_AWDBiometricKitEventLog [NameNList, MangledNameNList, NList] 
            0x00000001def4c068 (    0x18) __AUTH_CONST __objc_arrayobj
            0x00000001def4c080 (    0x20) __AUTH_CONST __auth_ptr
            0x00000001def4c0a0 (   0x6e8) __AUTH_CONST __auth_got
        0x00000001d7aa6140 (   0x320) __AUTH SEGMENT
            0x00000001d7aa6140 (   0x320) __AUTH __objc_data
                0x00000001d7aa6140 (    0x28) OBJC_CLASS_$_BiometricKitCoreAnalyticsEvent [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7aa6168 (    0x28) OBJC_METACLASS_$_BiometricKitCoreAnalyticsEvent [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7aa6190 (    0x28) OBJC_METACLASS_$_BiometricSupportUserNotification [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7aa61b8 (    0x28) OBJC_CLASS_$_BiometricSupportUserNotification [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7aa61e0 (    0x28) OBJC_METACLASS_$_BKLocalization [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7aa6208 (    0x28) OBJC_CLASS_$_BKLocalization [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7aa6230 (    0x28) OBJC_CLASS_$_BiometricOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7aa6258 (    0x28) OBJC_METACLASS_$_BiometricOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7aa6280 (    0x28) OBJC_CLASS_$_BiometricEnrollOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7aa62a8 (    0x28) OBJC_METACLASS_$_BiometricEnrollOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7aa62d0 (    0x28) OBJC_CLASS_$_BiometricMatchOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7aa62f8 (    0x28) OBJC_METACLASS_$_BiometricMatchOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7aa6320 (    0x28) OBJC_METACLASS_$_BiometricPresenceDetectOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7aa6348 (    0x28) OBJC_CLASS_$_BiometricPresenceDetectOperation [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d7aa6370 (    0x28) OBJC_CLASS_$_BKEvent [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d7aa6398 (    0x28) OBJC_METACLASS_$_BKEvent [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d7aa63c0 (    0x28) OBJC_METACLASS_$_BiometricKitEventLogger [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d7aa63e8 (    0x28) OBJC_CLASS_$_BiometricKitEventLogger [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d7aa6410 (    0x28) OBJC_CLASS_$_AWDBiometricKitEventLog [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d7aa6438 (    0x28) OBJC_METACLASS_$_AWDBiometricKitEventLog [PEXT, NameNList, MangledNameNList, NList] 
        0x00000001d66d3d68 (   0xda9) __DATA SEGMENT
            0x00000001d66d3d68 (    0x10) __DATA __objc_protorefs
                0x00000001d66d3d68 (     0x8) _OBJC_PROTOCOL_REFERENCE_$_BiometricKitXpcProtocol [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d3d70 (     0x8) _OBJC_PROTOCOL_REFERENCE_$_BiometricKitDelegateXpcProtocol [PEXT, NameNList, MangledNameNList, NList] 
            0x00000001d66d3d78 (   0x170) __DATA __objc_classrefs
            0x00000001d66d3ee8 (    0x88) __DATA __objc_superrefs
            0x00000001d66d3f70 (   0x1e4) __DATA __objc_ivar
                0x00000001d66d3f70 (     0x4) OBJC_IVAR_$_BiometricAutoBugCapture._serialLogEnabled [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d3f74 (     0x4) OBJC_IVAR_$_BiometricAutoBugCapture._dispatchQueue [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d3f78 (     0x4) OBJC_IVAR_$_BiometricAutoBugCapture._domain [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d3f7c (     0x4) OBJC_IVAR_$_BiometricAutoBugCapture._process [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d3f80 (     0x4) OBJC_IVAR_$_BiometricAutoBugCapture._reporter [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d3f84 (     0x4) OBJC_IVAR_$_BKCatacomb._catacombDir [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d3f88 (     0x4) OBJC_IVAR_$_BKCatacomb._writeAttributes [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d3f8c (     0x4) OBJC_IVAR_$_BiometricKitCoreAnalyticsEvent._eventName [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d3f90 (     0x4) OBJC_IVAR_$_BiometricKitCoreAnalyticsEvent._privateProperties [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d3f94 (     0x4) OBJC_IVAR_$_BiometricKitCoreAnalyticsEvent._boundedFieldLimits [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d3f98 (     0x4) OBJC_IVAR_$_BiometricKitCoreAnalyticsEvent._eventCanceled [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d3f9c (     0x4) OBJC_IVAR_$_BiometricKitCoreAnalyticsEvent._displayOn [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d3fa0 (     0x4) OBJC_IVAR_$_BiometricKitCoreAnalyticsEvent._deviceEnclosureColor [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d3fa4 (     0x4) OBJC_IVAR_$_BiometricKitCoreAnalyticsEvent._timeSinceLastEnrollment [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d3fa8 (     0x4) OBJC_IVAR_$_BiometricKitCoreAnalyticsEvent._timeSinceLastEnrollmentBinned [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d3fac (     0x4) OBJC_IVAR_$_BiometricKitCoreAnalyticsEvent._timeSinceLastEvent [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d3fb0 (     0x4) OBJC_IVAR_$_BiometricKitCoreAnalyticsEvent._previousEventDate [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d3fb4 (     0x4) OBJC_IVAR_$_BiometricKitXPCExportedClientObject._clientID [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d3fb8 (     0x4) OBJC_IVAR_$_BiometricKitXPCExportedClientObject._clientInfo [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d3fbc (     0x4) OBJC_IVAR_$_BiometricKitXPCExportedClientObject._exportedObject [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d3fc0 (     0x4) OBJC_IVAR_$_BiometricKitXPCExportedClientObject._delegateRegistered [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d3fc4 (     0x4) OBJC_IVAR_$_BiometricKitXPCExportedClientObject._clientAppIsBackground [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d3fc8 (     0x4) OBJC_IVAR_$_BiometricKitXPCExportedClientObject._clientAppIsInactive [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d3fcc (     0x4) OBJC_IVAR_$_BiometricKitXPCExportedObject._clients [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d3fd0 (     0x4) OBJC_IVAR_$_BiometricKitXPCExportedObject._clientEntitlement [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d3fd4 (     0x4) OBJC_IVAR_$_BiometricKitXPCExportedObject._server [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d3fd8 (     0x4) OBJC_IVAR_$_BiometricKitXPCExportedObject._connection [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d3fdc (     0x4) OBJC_IVAR_$_BiometricOperation._status [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d3fe0 (     0x4) OBJC_IVAR_$_BiometricOperation._cancelledMessage [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d3fe4 (     0x4) OBJC_IVAR_$_BiometricOperation._client [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d3fe8 (     0x4) OBJC_IVAR_$_BiometricOperation._priority [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d3fec (     0x4) OBJC_IVAR_$_BiometricEnrollOperation._userID [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d3ff0 (     0x4) OBJC_IVAR_$_BiometricEnrollOperation._authData [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d3ff4 (     0x4) OBJC_IVAR_$_BiometricEnrollOperation._deviceGroup [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d3ff8 (     0x4) OBJC_IVAR_$_BiometricEnrollOperation._processedFlags [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d3ffc (     0x4) OBJC_IVAR_$_BiometricMatchOperation._userID [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4000 (     0x4) OBJC_IVAR_$_BiometricMatchOperation._noBioLockoutUserID [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4004 (     0x4) OBJC_IVAR_$_BiometricMatchOperation._noBioLockoutAuthData [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4008 (     0x4) OBJC_IVAR_$_BiometricMatchOperation._selectedIdentitiesBlob [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d400c (     0x4) OBJC_IVAR_$_BiometricMatchOperation._forUnlock [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4010 (     0x4) OBJC_IVAR_$_BiometricMatchOperation._forCredentialSet [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4014 (     0x4) OBJC_IVAR_$_BiometricMatchOperation._forPreArm [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4018 (     0x4) OBJC_IVAR_$_BiometricMatchOperation._stopOnSuccess [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d401c (     0x4) OBJC_IVAR_$_BiometricMatchOperation._noBioLockout [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4020 (     0x4) OBJC_IVAR_$_BiometricMatchOperation._acmContext [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4024 (     0x4) OBJC_IVAR_$_BiometricMatchOperation._useCase [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4028 (     0x4) OBJC_IVAR_$_BiometricMatchOperation._processedFlags [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d402c (     0x4) OBJC_IVAR_$_UserProtectedConfig._unlockEnabled [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4030 (     0x4) OBJC_IVAR_$_UserProtectedConfig._identificationEnabled [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4034 (     0x4) OBJC_IVAR_$_UserProtectedConfig._loginEnabled [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4038 (     0x4) OBJC_IVAR_$_UserProtectedConfig._applePayEnabled [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d403c (     0x4) OBJC_IVAR_$_UserProtectedConfig._attentionDetectionEnabled [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4040 (     0x4) OBJC_IVAR_$_UserProtectedConfig._periocularMatchEnabled [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4044 (     0x4) OBJC_IVAR_$_SystemProtectedConfig._biometryEnabled [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4048 (     0x4) OBJC_IVAR_$_SystemProtectedConfig._unlockEnabled [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d404c (     0x4) OBJC_IVAR_$_SystemProtectedConfig._identificationEnabled [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4050 (     0x4) OBJC_IVAR_$_SystemProtectedConfig._loginEnabled [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4054 (     0x4) OBJC_IVAR_$_SystemProtectedConfig._unlockTokenMaxLifetime [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4058 (     0x4) OBJC_IVAR_$_SystemProtectedConfig._bioMatchLifespan [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d405c (     0x4) OBJC_IVAR_$_SystemProtectedConfig._passcodeInputLifespan [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4060 (     0x4) OBJC_IVAR_$_SystemProtectedConfig._periocularMatchEnabled [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4064 (     0x4) OBJC_IVAR_$_ActivityTracker._description [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4068 (     0x4) OBJC_IVAR_$_ActivityTracker._transaction [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d406c (     0x4) OBJC_IVAR_$_ActivityTracker._activityUpdateBlock [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4070 (     0x4) OBJC_IVAR_$_CatacombComponent._component [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4074 (     0x4) OBJC_IVAR_$_CatacombStateCache._cachedStates [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4078 (     0x4) OBJC_IVAR_$_BiometricKitXPCServer._osStateHandle [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d407c (     0x4) OBJC_IVAR_$_BiometricKitXPCServer._exportedObjects [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4080 (     0x4) OBJC_IVAR_$_BiometricKitXPCServer._connectionsSuspended [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4084 (     0x4) OBJC_IVAR_$_BiometricKitXPCServer._maxTemplatesPerUser [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4088 (     0x4) OBJC_IVAR_$_BiometricKitXPCServer._maxSupportedUsers [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d408c (     0x4) OBJC_IVAR_$_BiometricKitXPCServer._activeOperationNtfToken [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4090 (     0x4) OBJC_IVAR_$_BiometricKitXPCServer._activeOperationNtfTokenValid [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4094 (     0x4) OBJC_IVAR_$_BiometricKitXPCServer._activeOperationNtfQueue [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4098 (     0x4) OBJC_IVAR_$_BiometricKitXPCServer._userListChangeDetected [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d409c (     0x4) OBJC_IVAR_$_BiometricKitXPCServer._lastDisplayState [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d40a0 (     0x4) OBJC_IVAR_$_BiometricKitXPCServer._enrollChgNtfToken [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d40a4 (     0x4) OBJC_IVAR_$_BiometricKitXPCServer._enrollChgNtfTokenValid [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d40a8 (     0x4) OBJC_IVAR_$_BiometricKitXPCServer._bioLockoutPath [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d40ac (     0x4) OBJC_IVAR_$_BiometricKitXPCServer._catacombUserUUIDs [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d40b0 (     0x4) OBJC_IVAR_$_BiometricKitXPCServer._catacombUserKeybagUUIDs [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d40b4 (     0x4) OBJC_IVAR_$_BiometricKitXPCServer._mkbLockStatusNtfToken [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d40b8 (     0x4) OBJC_IVAR_$_BiometricKitXPCServer._fsEventStream [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d40bc (     0x4) OBJC_IVAR_$_BiometricKitXPCServer._connectedAccessoriesChgNtfToken [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d40c0 (     0x4) OBJC_IVAR_$_BiometricKitXPCServer._connectedAccessoriesChgNtfTokenValid [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d40c4 (     0x4) OBJC_IVAR_$_BiometricKitXPCServer._ariadneSignposts [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d40c8 (     0x4) OBJC_IVAR_$_BiometricKitXPCServer._templatesAtBoot [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d40cc (     0x4) OBJC_IVAR_$_BiometricKitXPCServer._catacombFileAccessed [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d40d0 (     0x4) OBJC_IVAR_$_BiometricKitXPCServer._catacombRestored [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d40d4 (     0x4) OBJC_IVAR_$_BiometricKitXPCServer._notifyport [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d40d8 (     0x4) OBJC_IVAR_$_BiometricKitXPCServer._cmdDispatchQueue [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d40dc (     0x4) OBJC_IVAR_$_BiometricKitXPCServer._bioOpsQueue [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d40e0 (     0x4) OBJC_IVAR_$_BiometricKitXPCServer._activeBioOpsQueue [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d40e4 (     0x4) OBJC_IVAR_$_BiometricKitXPCServer._runningBioOp [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d40e8 (     0x4) OBJC_IVAR_$_BiometricKitXPCServer._ongoingCatacombSaveTimer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d40ec (     0x4) OBJC_IVAR_$_BiometricKitXPCServer._ongoingBiometricOperation [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d40f0 (     0x4) OBJC_IVAR_$_BiometricKitXPCServer._cachedIdentities [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d40f4 (     0x4) OBJC_IVAR_$_BiometricKitXPCServer._catacombLock [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d40f8 (     0x4) OBJC_IVAR_$_BiometricKitXPCServer._catacomb [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d40fc (     0x4) OBJC_IVAR_$_BiometricKitXPCServer._catacombStateCache [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4100 (     0x4) OBJC_IVAR_$_BiometricKitXPCServer._biometricABC [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4104 (     0x4) OBJC_IVAR_$_BiometricKitXPCServer._biometricABCDispatchQueue [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4108 (     0x4) OBJC_IVAR_$_BiometricKitXPCServer._accessories [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d410c (     0x4) OBJC_IVAR_$_BKEvent._cls [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4110 (     0x4) OBJC_IVAR_$_BKEvent._isStart [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4114 (     0x4) OBJC_IVAR_$_BKEvent._isTerminal [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4118 (     0x4) OBJC_IVAR_$_BKEvent._isMetadata [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d411c (     0x4) OBJC_IVAR_$_BKEvent._isSmartKeyboard [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4120 (     0x4) OBJC_IVAR_$_BKEvent._isHigh [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4124 (     0x4) OBJC_IVAR_$_BKEvent._isLow [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4128 (     0x4) OBJC_IVAR_$_BKEvent._event [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d412c (     0x4) OBJC_IVAR_$_BiometricKitEventLogger._queue [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4130 (     0x4) OBJC_IVAR_$_BiometricKitEventLogger._timer [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4134 (     0x4) OBJC_IVAR_$_BiometricKitEventLogger._eventList [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4138 (     0x4) OBJC_IVAR_$_BiometricKitEventLogger._eventListLength [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d413c (     0x4) OBJC_IVAR_$_BiometricKitEventLogger._terminalFlushPending [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4140 (     0x4) OBJC_IVAR_$_BiometricKitEventLogger._startEventFound [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4144 (     0x4) OBJC_IVAR_$_BiometricKitEventLogger._lastSmartKeyboardEvent [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4148 (     0x4) OBJC_IVAR_$_AWDBiometricKitEventLog._events [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d414c (     0x4) OBJC_IVAR_$_AWDBiometricKitEventLog._has [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4150 (     0x4) OBJC_IVAR_$_AWDBiometricKitEventLog._timestamp [PEXT, NameNList, MangledNameNList, NList] 
            0x00000001d66d4158 (   0x930) __DATA __data
                0x00000001d66d4158 (     0x8) DEFAULT_SNAPSHOT_TIME [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4160 (    0x60) _OBJC_PROTOCOL_$_NSObject [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d41c0 (    0x60) _OBJC_PROTOCOL_$_BiometricKitXpcProtocol [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4220 (    0x60) _OBJC_PROTOCOL_$_NSCopying [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4280 (    0x60) _OBJC_PROTOCOL_$_BiometricKitDelegateXpcProtocol [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d42e0 (    0x60) _OBJC_PROTOCOL_$_NSXPCListenerDelegate [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4340 (    0x28) class_names [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4368 (     0x8) der_key_op [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4370 (     0x8) der_key_keybag_handle [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4378 (     0x8) der_key_keybag_class [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4380 (     0x8) der_key_data [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4388 (     0x8) der_key_auth_data [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4390 (     0x8) der_key_acl [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4398 (     0x8) der_key_protected_data [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d43a0 (     0x8) der_key_external_data [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d43a8 (     0x8) der_key_pad [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d43b0 (     0x8) der_key_tag [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d43b8 (     0x8) der_key_wrapped_key [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d43c0 (     0x8) der_key_acm_handle [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d43c8 (     0x8) der_key_access_groups [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d43d0 (     0x8) der_key_passcode [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d43d8 (     0x8) der_key_salt [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d43e0 (     0x8) der_key_iterations [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d43e8 (     0x8) der_key_flags [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d43f0 (     0x8) der_key_id [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d43f8 (     0x8) der_key_public_key [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4400 (     0x8) der_key_type [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4408 (     0x8) der_key_version [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4410 (     0x8) der_key_uuid [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4418 (     0x8) der_key_bid [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4420 (     0x8) der_key_aon_sec_mask [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4428 (     0x8) der_key_ref_key [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4430 (     0x8) der_key_ref_key_mac [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4438 (     0x8) der_key_acl_constraint_policy [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4440 (     0x8) der_key_acl_constraint_kofn [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4448 (     0x8) der_key_acl_constraint_user_passcode [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4450 (     0x8) der_key_acl_constraint_bio [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4458 (     0x8) der_key_acl_constraint_op_bool [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4460 (     0x8) der_key_acl_constraint_access_groups [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4468 (     0x8) der_key_acl_param_credential_max_age [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4470 (     0x8) der_key_acl_param_kofn [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4478 (     0x8) der_key_acl_param_require_passcode [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4480 (     0x8) der_key_op_default_acl [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4488 (     0x8) der_key_op_encrypt [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4490 (     0x8) der_reserved [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4498 (     0x8) der_key_op_create_with_encrypt [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d44a0 (     0x8) der_key_op_decrypt [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d44a8 (     0x8) der_key_op_sync [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d44b0 (     0x8) der_key_op_delete [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d44b8 (     0x8) der_key_op_create [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d44c0 (     0x8) der_key_op_sign [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d44c8 (     0x8) der_key_op_set_key_class [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d44d0 (     0x8) der_key_op_wrap [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d44d8 (     0x8) der_key_op_unwrap [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d44e0 (     0x8) der_key_op_compute_key [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d44e8 (     0x8) der_key_op_attest [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d44f0 (     0x8) der_key_op_transcrypt [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d44f8 (     0x8) der_key_op_validate_key [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4500 (     0x8) der_key_op_ecies_encrypt [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4508 (     0x8) der_key_op_ecies_decrypt [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4510 (     0x8) der_key_op_ecies_transcode [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4518 (     0x8) der_key_op_enable_test_keys [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4520 (     0x8) der_key_dst_keybag_handle [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4528 (     0x8) der_key_config_graceperiod [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4530 (     0x8) der_key_config_backoff_delay [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4538 (     0x8) der_key_config_max_unlock_attempts [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4540 (     0x8) der_key_config_escrow_passcode_period [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4548 (     0x8) der_key_config_escrow_token_period [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4550 (     0x8) der_key_config_flags [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4558 (     0x8) der_key_op_sik_collection [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4560 (     0x8) der_key_op_sik_attest [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4568 (     0x8) der_key_op_get_sik_status [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4570 (     0x8) der_key_op_gid_attest [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4578 (     0x8) der_key_op_system_key_attest [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4580 (     0x8) der_key_op_system_key_collect [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4588 (     0x8) der_key_op_system_key_get_public [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4590 (     0x8) der_key_op_system_key_operate [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4598 (     0x8) der_key_op_system_key_sign [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d45a0 (     0x8) der_key_system_key_type [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d45a8 (     0x8) der_key_sub_key_type [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d45b0 (     0x8) der_key_pka_flags [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d45b8 (     0x8) der_key_system_key_client_seed [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d45c0 (     0x8) der_key_system_key_generation [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d45c8 (     0x8) der_key_system_key_operation [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d45d0 (     0x8) der_key_system_key_options [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d45d8 (     0x8) der_key_gid_ref_key_options [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d45e0 (     0x8) der_key_system_key_no_img4 [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d45e8 (     0x8) der_key_remote_session_signing_key_type [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d45f0 (     0x8) der_key_remote_session_signing_key_certificate [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d45f8 (     0x8) der_key_sik_pub [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4600 (     0x8) der_key_uik_pub [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4608 (     0x8) der_key_gid_pub [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4610 (     0x8) der_key_gid_attest_pub [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4618 (     0x8) der_key_state_state [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4620 (     0x8) der_key_state_lock_state [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4628 (     0x8) der_key_state_backoff [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4630 (     0x8) der_key_state_backoff_other [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4638 (     0x8) der_key_state_failed_attempts [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4640 (     0x8) der_key_state_failed_attempts_other [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4648 (     0x8) der_key_state_generation_state [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4650 (     0x8) der_key_state_assertion_set [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4658 (     0x8) der_key_state_grace_period_enabled [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4660 (     0x8) der_key_state_recovery_countdown [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4668 (     0x8) der_key_state_more_state [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4670 (     0x8) der_key_peer_unlock_token_status [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4678 (     0x8) der_key_peer_unwrapped_escrow_record_status [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4680 (     0x8) der_key_peer_wrapped_escrow_record_status [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4688 (     0x8) der_key_peer_flags [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4690 (     0x8) der_key_state_reserved [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4698 (     0x8) der_key_sc_enc_sc_usk [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d46a0 (     0x8) der_key_sc_enc_usk_us [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d46a8 (     0x8) der_key_sc_auth_version [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d46b0 (     0x8) der_key_sc_auth_mode [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d46b8 (     0x8) der_key_sc_auth_counter [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d46c0 (     0x8) der_key_sc_auth_sc_pub [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d46c8 (     0x8) der_key_sc_auth_eph_pub [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d46d0 (     0x8) der_key_sc_blob_auth [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d46d8 (     0x8) der_key_sc_blob_enc [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d46e0 (     0x8) der_key_sc_blob_tag [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d46e8 (     0x8) der_key_sc_blob_dku_pk [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d46f0 (     0x8) der_key_sc_blob_iv [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d46f8 (     0x8) der_key_iv [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4700 (     0x8) der_key_config_prederived_passcode [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4708 (     0x8) der_key_config_prederived_salt [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4710 (     0x8) der_key_config_prederived_iterations [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4718 (     0x8) der_key_config_prederived_type [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4720 (     0x8) der_key_config_se_reset_token [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4728 (     0x8) der_key_config_se_slot [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4730 (     0x8) der_key_config_user_uuid [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4738 (     0x8) der_key_ecdh_iv [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4740 (     0x8) der_key_ecdh_seed [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4748 (     0x8) der_key_persona_uuid [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4750 (     0x8) der_key_raw_output [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4758 (     0x8) der_key_options [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4760 (     0x8) der_key_test_flags [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4768 (     0x8) der_key_config_group_uuid [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4770 (     0x8) der_key_config_bind_kek [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4778 (     0x8) der_key_config_recovery_iterations [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4780 (     0x8) der_key_config_recovery_flags [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4788 (     0x8) der_key_config_recovery_target_iterations [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4790 (     0x8) der_key_ps_slots [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4798 (     0x8) der_key_ps_mk_slot [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d47a0 (     0x8) der_key_ps_cmk_slot [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d47a8 (     0x8) der_key_shared_info [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d47b0 (     0x8) der_key_shared_info2 [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d47b8 (     0x8) der_key_transcode_shared_info [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d47c0 (     0x8) der_key_transcode_shared_info2 [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d47c8 (     0x8) der_key_transcode_ecdh_seed [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d47d0 (     0x8) der_key_sika_version [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d47d8 (     0x8) der_key_se_state [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d47e0 (     0x8) der_key_se_stash_state [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d47e8 (     0x8) der_key_se_rm_status [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d47f0 (     0x8) der_key_config_capabilities [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d47f8 (     0x8) der_key_platform_config_consumed_last_artm_otut [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4800 (     0x8) der_key_platform_config_d_key_migrated [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4808 (     0x8) der_key_platform_config_uik_migrated [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4810 (     0x8) der_key_platform_config_uik_bumped [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4818 (     0x8) der_key_platform_config_uik_committed [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4820 (     0x8) der_key_platform_config_device_bag_migrated [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4828 (     0x8) der_key_platform_config_sandman_blob_migrated [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4830 (     0x8) der_key_platform_config_pre_v5_bags_disallowed [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4838 (     0x8) der_key_platform_config_gk_cached_once [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4840 (     0x8) der_key_platform_config_recovery_naming_fixed [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4848 (     0x8) der_key_keybag_version [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4850 (     0x8) der_key_sm_slots [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4858 (     0x8) der_key_dkey_kcv [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4860 (     0x8) der_key_state_refcount [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4868 (     0x8) der_key_mkey_kcv [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4870 (     0x8) der_key_platform_config_m_key_migrated [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4878 (     0x8) der_key_media_unwraps [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4880 (     0x8) der_key_oik_owners [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4888 (     0x8) der_key_dkey_flags [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4890 (     0x8) der_key_mkey_flags [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4898 (     0x8) der_key_volume_bag_status [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d48a0 (     0x8) der_key_expert_ocelot_support [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d48a8 (     0x8) der_key_xart_tracker_data [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d48b0 (     0x8) der_key_sep_measurement [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d48b8 (     0x8) der_key_avp_env [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d48c0 (     0x8) der_key_op_create_with_wrap [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d48c8 (     0x8) der_key_platform_config_dak_bumped [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d48d0 (     0x8) der_key_platform_config_dak_committed [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d48d8 (     0x8) der_key_user_uuid [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d48e0 (     0x8) der_key_group_uuid [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d48e8 (     0x8) der_key_pass_sm_recovery_ps_slots [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d48f0 (     0x8) der_key_supports_keybag_lkgp [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d48f8 (     0x8) der_key_volume_uuid [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4900 (     0x8) der_key_memento_supported [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4908 (     0x8) der_key_memento_blob_exists [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4910 (     0x8) der_key_se_supports_updated_kud_policy [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4918 (     0x8) der_key_ps_memento_slot [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4920 (     0x8) der_key_passcode_change_time [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4928 (     0x8) der_key_lock_time [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4930 (     0x8) der_key_config_passcode_generation [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4938 (     0x8) der_key_config_memento_passcode_generation [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4940 (     0x8) der_key_inactivity_reboot_enabled [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4948 (     0x8) der_key_heap_tracker [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4950 (     0x8) der_key_pass_sm_state [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4958 (     0x8) der_key_escrow_blobs [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4960 (     0x8) der_key_seed [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4968 (   0x120) pm_id_table [NameNList, MangledNameNList, NList] 
            0x00000001d66d4a88 (    0x28) __DATA __common
                0x00000001d66d4a88 (     0x8) __osLogLatency [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4a90 (     0x8) der_key_invalid [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4a98 (     0x8) _akslog_filter [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d66d4aa0 (    0x10) firebloom_null_iv [PEXT, NameNList, MangledNameNList, NList] 
            0x00000001d66d4ab0 (    0x61) __DATA __bss
                0x00000001d66d4ab0 (     0x8) logger.sharedInstance [NameNList, MangledNameNList, NList] 
                0x00000001d66d4ab8 (     0x8) logger.once [NameNList, MangledNameNList, NList] 
                0x00000001d66d4ac0 (     0x8) OSLogHandle [NameNList, MangledNameNList, NList] 
                0x00000001d66d4ac8 (     0x8) OSLogTraceHandle [NameNList, MangledNameNList, NList] 
                0x00000001d66d4ad0 (     0x4) get_aks_client_connection.connection [NameNList, MangledNameNList, NList] 
                0x00000001d66d4ad4 (     0x4) get_akstest_client_connection.connection [NameNList, MangledNameNList, NList] 
                0x00000001d66d4ad8 (     0x1) _aks_check_apfs_shared_datavolume_bootarg.init [NameNList, MangledNameNList, NList] 
                0x00000001d66d4ad9 (     0x7) _aks_check_apfs_shared_datavolume_bootarg.value [NameNList, MangledNameNList, NList] 
                0x00000001d66d4ae0 (     0x8) get_aks_client_dispatch_queue.onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d66d4ae8 (     0x8) get_aks_client_dispatch_queue.connection_queue [NameNList, MangledNameNList, NList] 
                0x00000001d66d4af0 (    0x21) bytes_to_str_hint.buf [NameNList, MangledNameNList, NList] 
        0x00000001d70a68f0 (   0x348) __DATA_DIRTY SEGMENT
            0x00000001d70a68f0 (   0x320) __DATA_DIRTY __objc_data
                0x00000001d70a68f0 (    0x28) OBJC_CLASS_$_BiometricAutoBugCapture [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d70a6918 (    0x28) OBJC_METACLASS_$_BiometricAutoBugCapture [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d70a6940 (    0x28) OBJC_CLASS_$_BKCatacomb [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d70a6968 (    0x28) OBJC_METACLASS_$_BKCatacomb [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d70a6990 (    0x28) OBJC_CLASS_$_BiometricKitXPCExportedClientObject [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d70a69b8 (    0x28) OBJC_METACLASS_$_BiometricKitXPCExportedClientObject [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d70a69e0 (    0x28) OBJC_CLASS_$_BiometricKitXPCExportedObject [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d70a6a08 (    0x28) OBJC_METACLASS_$_BiometricKitXPCExportedObject [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d70a6a30 (    0x28) OBJC_CLASS_$_UserProtectedConfig [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d70a6a58 (    0x28) OBJC_METACLASS_$_UserProtectedConfig [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d70a6a80 (    0x28) OBJC_CLASS_$_SystemProtectedConfig [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d70a6aa8 (    0x28) OBJC_METACLASS_$_SystemProtectedConfig [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d70a6ad0 (    0x28) OBJC_CLASS_$_ActivityTracker [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d70a6af8 (    0x28) OBJC_METACLASS_$_ActivityTracker [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d70a6b20 (    0x28) OBJC_CLASS_$_CatacombComponent [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d70a6b48 (    0x28) OBJC_METACLASS_$_CatacombComponent [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d70a6b70 (    0x28) OBJC_CLASS_$_CatacombStateCache [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d70a6b98 (    0x28) OBJC_METACLASS_$_CatacombStateCache [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d70a6bc0 (    0x28) OBJC_CLASS_$_BiometricKitXPCServer [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d70a6be8 (    0x28) OBJC_METACLASS_$_BiometricKitXPCServer [EXT, NameNList, MangledNameNList, NList] 
            0x00000001d70a6c10 (    0x10) __DATA_DIRTY __common
                0x00000001d70a6c10 (     0x8) __osLog [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d70a6c18 (     0x8) __osLogTrace [EXT, NameNList, MangledNameNList, NList] 
            0x00000001d70a6c20 (    0x18) __DATA_DIRTY __bss
                0x00000001d70a6c20 (     0x8) listener:shouldAcceptNewConnection:.ifc [NameNList, MangledNameNList, NList] 
                0x00000001d70a6c28 (     0x8) listener:shouldAcceptNewConnection:.delegateIfc [NameNList, MangledNameNList, NList] 
                0x00000001d70a6c30 (     0x8) listener:shouldAcceptNewConnection:.onceToken [NameNList, MangledNameNList, NList] 
        0x000000023a910000 (0x37bf0000) __LINKEDIT SEGMENT
