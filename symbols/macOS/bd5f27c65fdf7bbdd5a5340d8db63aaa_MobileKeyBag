/System/Library/PrivateFrameworks/MobileKeyBag.framework/Versions/A/MobileKeyBag [arm64e, 0.025925 seconds]:
    077C7392-F5C5-3CE0-BAF4-8A477045C1E0 /System/Library/PrivateFrameworks/MobileKeyBag.framework/Versions/A/MobileKeyBag [DYLIB, DYLDSHAREDCACHE, FaultedFromDiskDyldSharedCache, MMap64]  
        0x000000018c127000 ( 0x18000) __TEXT SEGMENT
            0x000000018c127000 (  0x19d0) MACH_HEADER
            0x000000018c1289d0 (  0xecf8) __TEXT __text
                0x000000018c1289d0 (    0xa0) MKBDeviceGetGracePeriod [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c128a70 (    0x64) MKBGetDeviceConfigurations [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c128ad4 (    0xac) _get_userid_from_options [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c128b80 (   0x1e4) convertAKSErrorToMKB [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c128d64 (   0x1a0) debuglog [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c128f04 (    0x28) __isInternalBuild_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c128f2c (    0x58) create_dict [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c128f84 (    0x3c) MKBGetDeviceLockState [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c128fc0 (    0xb8) _get_device_lock_state [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c129078 (   0x134) storeBlastableBytes [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c1291ac (   0x13c) loadBlastableBytes [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c1292e8 (   0x1ac) effaceBlastableBytes [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c129494 (    0x34) libkeybaglog [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c1294c8 (    0x44) _libkeybaglog [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12950c (     0xc) KBSetLogger [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c129518 (     0xc) KBSetLogger_v [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c129524 (    0x14) HealthPlistGetBuild [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c129538 (    0x40) HealthPlistSetBuild [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c129578 (    0x70) HealthPlistGetFailed [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c1295e8 (    0x80) HealthPlistSetFailed [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c129668 (    0xa8) HealthPlistSetTTR [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c129710 (    0x14) HealthPlistGetTTR [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c129724 (    0x98) HealthPlistConsumeTTR [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c1297bc (    0x14) HealthPlistGetVersion [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c1297d0 (    0x80) HealthPlistSetVersion [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c129850 (     0x8) HealthPlistSetCurrentVersion [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c129858 (    0x70) HealthPlistGetTime [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c1298c8 (    0x80) HealthPlistSetTime [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c129948 (    0x14) HealthPlistGetData [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12995c (    0x38) HealthPlistSetData [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c129994 (   0x118) HealthPlistAddToData [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c129aac (     0xc) _HealthPlistGetPlistPath [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c129ab8 (   0x3e0) HealthPlistCopyOrCreateNew [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c129e98 (    0x28) HealthPlistSerialize [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c129ec0 (   0x7c8) HealthPlistTest [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12a688 (    0x74) _create_plist_with_version [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12a6fc (    0xfc) KBLoadSystemKeyBag [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12a7f8 (   0x10c) KBLoadLoadKeyBagFile [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12a904 (   0x10c) KBCleanupSystemKeyBag [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12aa10 (   0x168) KBLoadUserKeybag [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12ab78 (    0xe0) KBSavePublicBackupBag [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12ac58 (   0x268) KBSaveKeyBag [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12aec0 (   0x240) KBSaveSystemBagHandle [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12b100 (   0x12c) MKBDeviceSupportsEnhancedAPFS [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12b22c (   0x384) KBSaveUserBagHandle [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12b5b0 (     0x8) seshat_supports_upgraded_jcop_kud_policy [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12b5b8 (    0x58) KBSystemKeyBagCopyOpaqueStuff [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12b610 (   0x1cc) getNVRam [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12b7dc (   0x110) setNVRam [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12b8ec (    0x10) removeNVRam [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12b8fc (   0x204) is_user_primary [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12bb00 (   0x2c0) KBChangeSystemSecret [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12bdc0 (    0xe4) KBChangeSystemSecretWithEscrow [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12bea4 (    0xe0) MKBDeviceTreeContainsKey [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12bf84 (    0x14) MKBDeviceSupportsContentProtection [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12bf98 (     0x8) MKBDeviceSupportsEffaceableStorage [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12bfa0 (   0x128) KBUpdateKeyBag [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12c0c8 (   0x190) KBSetCookie [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12c258 (   0x274) KBMapVolume [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12c4cc (   0x290) KBMapDeviceBag [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12c75c (    0xd0) KBisxARTBasedKeyBag [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12c82c (    0x1c) MKBSetLogFunction [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12c848 (    0xc0) MKBLockDevice [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12c908 (    0x44) MKBLockDeviceNow [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12c94c (     0x8) MKBSeshatDebug [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12c954 (   0x1cc) MKBUnlockDevice [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12cb20 (    0x74) should_use_memento [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12cb94 (   0x1ec) MKBVerifyPasswordWithContext [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12cd80 (    0xe4) MKBGetDeviceLockStateIndirect [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12ce64 (    0xb8) MKBGetDeviceLockStateInfo [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12cf1c (    0x70) set_longlongvalue_for_key [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12cf8c (    0xf4) MKBDeviceSetGracePeriod [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12d080 (    0x98) MKBSetDeviceConfigurations [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12d118 (    0x84) MKBScreenLockEnabled [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12d19c (   0x170) MKBGetPolicyStatus [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12d30c (    0x94) MKBDeviceUnlockedSinceBoot [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12d3a0 (    0x38) MKBKeyBagKeyStashSupport [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12d3d8 (   0x29c) MKBKeyBagKeyStashCreateWithOpts [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12d674 (    0xe8) log_blob [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12d75c (    0x74) quick_der_check [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12d7d0 (    0x14) MKBKeyBagKeyStashCreateWithMode [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12d7e4 (    0x14) MKBKeyBagKeyStashCreate [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12d7f8 (   0x134) MKBKeyBagSetUserUUID [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12d92c (    0x90) MKBKeyBagBindKEK [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12d9bc (    0x9c) MKBKeyBagKeyStashCreateWithManifest [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12da58 (    0xec) _MKBKeyBagKeyStashSetManifest [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12db44 (     0x8) MKBKeyBagKeyStashSetManifest [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12db4c (    0x80) MKBKeyBagKeyStashEnableWithManifest [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12dbcc (    0x94) MKBKeyBagKeyStashEnableWithOpts [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12dc60 (     0x8) MKBKeyBagKeyStashEnable [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12dc68 (    0x9c) MKBKeyBagKeyStashCommitWithOpts [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12dd04 (     0x8) MKBKeyBagKeyStashCommit [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12dd0c (    0x68) MKBKeyBagKeyStashDestroy [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12dd74 (    0x6c) MKBKeyBagKeyStashPersistWithOpts [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12dde0 (     0x8) MKBKeyBagKeyStashPersist [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12dde8 (   0x148) MKBKeyBagKeyStashVerifyWithOpts [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12df30 (     0x8) MKBKeyBagKeyStashVerify [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12df38 (    0xc4) MKBKeyBagKeyStashLoadWithOpts [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12dffc (     0x8) MKBKeyBagKeyStashLoad [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12e004 (    0x4c) MKBFilevaultStashKek [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12e050 (   0x120) MKBFilevaultStashKekWithACM [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12e170 (    0x58) MKBFilevaultStashKekCommit [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12e1c8 (    0x58) MKBFilevaultStashKekDestroy [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12e220 (    0x2c) MKBFilevaultSystemHasOwners [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12e24c (    0x6c) MKBKeyBagChangeSystemSecret [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12e2b8 (   0x154) MKBKeyBagChangeSystemSecretOpts [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12e40c (    0x40) MKBKeyBagEffaceMementoBlob [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12e44c (    0x8c) MKBKeyBagMementoIsSupported [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12e4d8 (   0x1a0) MKBKeyBagMementoGetBlobState [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12e678 (    0x5c) MKBKeyBagCopySytemSecretBlob [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12e6d4 (    0x30) MKBKeyBagCopySystemOpaqueBlob [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12e704 (    0x50) MKBKeyBagCleanupAfterMigration [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12e754 (    0x50) MKBKeyBagSetSystemSecretBlob [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12e7a4 (    0x38) MKBAssertionGetTypeID [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12e7dc (    0x28) __MKBAssertionnRegisterClass [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12e804 (   0x348) MKBDeviceLockAssertion [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12eb4c (    0xa4) MKBDeviceLockAssertionPromote [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12ebf0 (   0x160) MKBDeviceLockAssertionConsume [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12ed50 (    0x2c) MKBKeyBagUnload [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12ed7c (    0x20) MKBKeyBagGetAKSHandle [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12ed9c (    0x44) MKBKeyBagHandleGetTypeID [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12ede0 (    0x28) __MKBKeyBagHandleGetTypeID_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12ee08 (    0xa4) MKBVolumeBagLock [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12eeac (   0x1ac) MKBVolumeBagUnlockWithACM [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12f058 (   0x128) MKBKeyBagUnlock [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12f180 (    0xdc) MKBKeyBagCreateWithData [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12f25c (    0x1c) MKBKeyBagRelease [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12f278 (    0xb8) MKBDeviceFormattedForContentProtection [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12f330 (    0x28) MKBDeviceObliterateClassDKey [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12f358 (    0x90) MKBUserUnlockedSinceBoot [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12f3e8 (    0x58) MKBPrewarmSPS [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12f440 (    0x7c) __MKBAssertionFinalize [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12f4bc (    0xb8) __MKBAssertionCopyDescription [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12f574 (    0x40) __MKBKeyBagHandleFinalize [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12f5b4 (    0x90) KBPostAggdScalar [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12f644 (    0x98) KBPostAggdDistribution [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12f6dc (   0x3c4) analytics_persist_event [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12faa0 (    0x68) analytics_persistance_report_get_id [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12fb08 (   0x2e4) CopyPersistedReports [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12fdec (   0x1bc) analytics_submit_persisted_eventsWithBlock [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12ffa8 (     0xc) analytics_submit_persisted_events [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c12ffb4 (    0xa8) __analytics_submit_persisted_events_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c13005c (   0x248) analytics_persistance_test [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c1302a4 (    0x1c) __analytics_persistance_test_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c1302c0 (    0x10) __copy_helper_block_8_32r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c1302d0 (     0xc) __destroy_helper_block_8_32r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c1302dc (    0x1c) __analytics_persistance_test_block_invoke.63 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c1302f8 (    0x1c) __analytics_persistance_test_block_invoke.67 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c130314 (    0x78) MKBUserSessionCreatePersonaKeyForUser [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c13038c (    0xb4) MKBUserSessionRemovePersonaKeyForUser [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c130440 (    0xa8) fv_get_user_kek [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c1304e8 (   0x138) kb_set_user_uuid [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c130620 (   0x164) __kb_set_user_uuid_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c130784 (    0xa0) keybag_is_uuid_set [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c130824 (    0x50) __copy_helper_block_8_32r40r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c130874 (    0x44) __destroy_helper_block_8_32r40r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c1308b8 (    0xbc) fv_bind_keybag_to_kek [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c130974 (   0x19c) __fv_bind_keybag_to_kek_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c130b10 (    0xf8) keybag_get_uuid [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c130c08 (   0x424) fv_get_policy_status [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c13102c (    0x34) fv_init [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c131060 (    0xb8) fv_get_vek [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c131118 (    0x3c) _getData [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c131154 (    0x3c) _getArray [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c131190 (    0x6c) _getInt [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c1311fc (    0x6c) _getLongLongInt [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c131268 (    0x6c) _getSInt64 [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c1312d4 (    0x54) _getBool [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c131328 (    0x44) _getString [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c13136c (    0x50) _getCString [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c1313bc (    0x60) _getRetainedDict [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c13141c (    0xa8) convertObjectToBinary [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c1314c4 (    0xec) convertBinaryToObject [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c1315b0 (    0x7c) writen [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c13162c (   0x158) store_binary_dict_fd [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c131784 (     0x8) store_binary_dict [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c13178c (   0x124) load_binary_dict_from_buffer [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c1318b0 (   0x15c) load_binary_dict [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c131a0c (    0x4c) create_mutable_dict [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c131a58 (    0x50) create_array [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c131aa8 (    0x50) create_string [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c131af8 (    0x48) get_hostmultiuserconfig [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c131b40 (    0x38) set_hostmultiuserconfig [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c131b78 (    0x40) GetConfiguredForegroundUserID [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c131bb8 (    0x38) IsConfiguredMultiUser [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c131bf0 (    0x2c) (null) [FUNC, FunctionStarts] 
                0x000000018c131c1c (    0x44) get_port_type [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c131c60 (    0xec) log_port_type [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c131d4c (   0x198) _apfs_get_all_crypto_ids [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c131ee4 (    0x9c) _apfs_copy_wrapped_key_from_file [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c131f80 (    0x30) mkb_time_start [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c131fb0 (    0xc0) mkb_time_stop [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c132070 (    0xa0) +[MKBKeyStoreDevice sharedService] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c132110 (    0x40) __34+[MKBKeyStoreDevice sharedService]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c132150 (    0x88) -[MKBKeyStoreDevice _CreateMKBServerConnection] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c1321d8 (   0x154) -[MKBKeyStoreDevice getFileHandleForData:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c13232c (   0x23c) -[MKBKeyStoreDevice changeSystemSecretFromOldPasscode:ToNew:withOpaqueData:withParams:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c132568 (    0x34) __87-[MKBKeyStoreDevice changeSystemSecretFromOldPasscode:ToNew:withOpaqueData:withParams:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c13259c (    0x54) __87-[MKBKeyStoreDevice changeSystemSecretFromOldPasscode:ToNew:withOpaqueData:withParams:]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c1325f0 (    0x48) __copy_helper_block_e8_32s40r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c132638 (    0x40) __destroy_helper_block_e8_32s40r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c132678 (   0x1a0) -[MKBKeyStoreDevice changeClassKeysGenerationWithSecret:withGenerationOption:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c132818 (    0x34) __78-[MKBKeyStoreDevice changeClassKeysGenerationWithSecret:withGenerationOption:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c13284c (    0x54) __78-[MKBKeyStoreDevice changeClassKeysGenerationWithSecret:withGenerationOption:]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c1328a0 (   0x154) -[MKBKeyStoreDevice copySytemSecretBlob] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c1329f4 (    0x10) __Block_byref_object_copy_ [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c132a04 (     0x8) __Block_byref_object_dispose_ [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c132a0c (    0x3c) __40-[MKBKeyStoreDevice copySytemSecretBlob]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c132a48 (    0x9c) __40-[MKBKeyStoreDevice copySytemSecretBlob]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c132ae4 (   0x1e0) -[MKBKeyStoreDevice getBackupkeyForVolume:andCryptoID:withreturnValue:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c132cc4 (    0x3c) __71-[MKBKeyStoreDevice getBackupkeyForVolume:andCryptoID:withreturnValue:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c132d00 (    0xd0) __71-[MKBKeyStoreDevice getBackupkeyForVolume:andCryptoID:withreturnValue:]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c132dd0 (    0x58) __copy_helper_block_e8_32s40r48r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c132e28 (    0x4c) __destroy_helper_block_e8_32s40r48r [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c132e74 (   0x26c) -[MKBKeyStoreDevice ChangeSystemSecretWithEscrow:FromOldPasscode:ToNew:withOpaqueDats:withKeepState:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c1330e0 (    0x34) __101-[MKBKeyStoreDevice ChangeSystemSecretWithEscrow:FromOldPasscode:ToNew:withOpaqueDats:withKeepState:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c133114 (    0x54) __101-[MKBKeyStoreDevice ChangeSystemSecretWithEscrow:FromOldPasscode:ToNew:withOpaqueDats:withKeepState:]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c133168 (   0x144) -[MKBKeyStoreDevice SetSystemSecretBlob:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c1332ac (    0x3c) __41-[MKBKeyStoreDevice SetSystemSecretBlob:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c1332e8 (    0xa0) __41-[MKBKeyStoreDevice SetSystemSecretBlob:]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c133388 (   0x1b8) -[MKBKeyStoreDevice registerOTABackup:withSecret:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c133540 (    0x3c) __50-[MKBKeyStoreDevice registerOTABackup:withSecret:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c13357c (    0xa0) __50-[MKBKeyStoreDevice registerOTABackup:withSecret:]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c13361c (   0x144) -[MKBKeyStoreDevice startBackupSessionForVolume:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c133760 (    0x3c) __49-[MKBKeyStoreDevice startBackupSessionForVolume:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c13379c (    0xa0) __49-[MKBKeyStoreDevice startBackupSessionForVolume:]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c13383c (   0x144) -[MKBKeyStoreDevice stopBackupSessionForVolume:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c133980 (    0x3c) __48-[MKBKeyStoreDevice stopBackupSessionForVolume:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c1339bc (    0xa0) __48-[MKBKeyStoreDevice stopBackupSessionForVolume:]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c133a5c (   0x234) -[MKBKeyStoreDevice enableBackupForVolume:withSecret:bagData:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c133c90 (    0x3c) __62-[MKBKeyStoreDevice enableBackupForVolume:withSecret:bagData:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c133ccc (    0xd0) __62-[MKBKeyStoreDevice enableBackupForVolume:withSecret:bagData:]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c133d9c (   0x144) -[MKBKeyStoreDevice disableBackupForVolume:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c133ee0 (    0x3c) __44-[MKBKeyStoreDevice disableBackupForVolume:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c133f1c (    0xa0) __44-[MKBKeyStoreDevice disableBackupForVolume:]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c133fbc (   0x144) -[MKBKeyStoreDevice backupUUIDForVolume:bagUUID:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c134100 (    0x3c) __49-[MKBKeyStoreDevice backupUUIDForVolume:bagUUID:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c13413c (    0xa0) __49-[MKBKeyStoreDevice backupUUIDForVolume:bagUUID:]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c1341dc (   0x124) -[MKBKeyStoreDevice passcodeUnlockStart] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c134300 (    0x3c) __40-[MKBKeyStoreDevice passcodeUnlockStart]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c13433c (    0xa0) __40-[MKBKeyStoreDevice passcodeUnlockStart]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c1343dc (   0x124) -[MKBKeyStoreDevice passcodeUnlockSuccess] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c134500 (    0x3c) __42-[MKBKeyStoreDevice passcodeUnlockSuccess]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c13453c (    0xa0) __42-[MKBKeyStoreDevice passcodeUnlockSuccess]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c1345dc (   0x124) -[MKBKeyStoreDevice passcodeUnlockFailed] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c134700 (    0x3c) __41-[MKBKeyStoreDevice passcodeUnlockFailed]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c13473c (    0xa0) __41-[MKBKeyStoreDevice passcodeUnlockFailed]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c1347dc (   0x16c) -[MKBKeyStoreDevice getLockStateForUser:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c134948 (    0x3c) __41-[MKBKeyStoreDevice getLockStateForUser:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c134984 (    0x9c) __41-[MKBKeyStoreDevice getLockStateForUser:]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c134a20 (   0x13c) -[MKBKeyStoreDevice getDeviceLockStateForUser:extendedState:withLockStateInfo:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c134b5c (    0x3c) __79-[MKBKeyStoreDevice getDeviceLockStateForUser:extendedState:withLockStateInfo:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c134b98 (    0x80) __79-[MKBKeyStoreDevice getDeviceLockStateForUser:extendedState:withLockStateInfo:]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c134c18 (   0x1bc) -[MKBKeyStoreDevice stashCreateWithSecret:withMode:withUID:WithFlags:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c134dd4 (    0x3c) __70-[MKBKeyStoreDevice stashCreateWithSecret:withMode:withUID:WithFlags:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c134e10 (    0xa0) __70-[MKBKeyStoreDevice stashCreateWithSecret:withMode:withUID:WithFlags:]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c134eb0 (   0x1d0) -[MKBKeyStoreDevice setUserUUID:withUID:withUUID:withHandle:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c135080 (    0x3c) __61-[MKBKeyStoreDevice setUserUUID:withUID:withUUID:withHandle:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c1350bc (    0xa0) __61-[MKBKeyStoreDevice setUserUUID:withUID:withUUID:withHandle:]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c13515c (   0x1b4) -[MKBKeyStoreDevice bindToKEK:withUID:withHandle:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c135310 (    0x3c) __50-[MKBKeyStoreDevice bindToKEK:withUID:withHandle:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c13534c (    0xa0) __50-[MKBKeyStoreDevice bindToKEK:withUID:withHandle:]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c1353ec (   0x218) -[MKBKeyStoreDevice getPolicyStatus:withUUID:withreturnedError:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c135604 (    0x3c) __64-[MKBKeyStoreDevice getPolicyStatus:withUUID:withreturnedError:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c135640 (    0xd4) __64-[MKBKeyStoreDevice getPolicyStatus:withUUID:withreturnedError:]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c135714 (   0x134) -[MKBKeyStoreDevice stashCommit:WithFlags:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c135848 (    0x3c) __43-[MKBKeyStoreDevice stashCommit:WithFlags:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c135884 (    0xa0) __43-[MKBKeyStoreDevice stashCommit:WithFlags:]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c135924 (   0x124) -[MKBKeyStoreDevice stashDestroy] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c135a48 (    0x3c) __33-[MKBKeyStoreDevice stashDestroy]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c135a84 (    0xa0) __33-[MKBKeyStoreDevice stashDestroy]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c135b24 (   0x17c) -[MKBKeyStoreDevice stashVerifywithValidity:WithUID:WithFlags:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c135ca0 (    0x3c) __63-[MKBKeyStoreDevice stashVerifywithValidity:WithUID:WithFlags:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c135cdc (    0xac) __63-[MKBKeyStoreDevice stashVerifywithValidity:WithUID:WithFlags:]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c135d88 (   0x164) -[MKBKeyStoreDevice isKeyRollingWithKeyStatus:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c135eec (    0x3c) __47-[MKBKeyStoreDevice isKeyRollingWithKeyStatus:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c135f28 (    0xac) __47-[MKBKeyStoreDevice isKeyRollingWithKeyStatus:]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c135fd4 (   0x124) -[MKBKeyStoreDevice migrateFS] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c1360f8 (    0x3c) __30-[MKBKeyStoreDevice migrateFS]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c136134 (    0xa0) __30-[MKBKeyStoreDevice migrateFS]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c1361d4 (    0x74) -[MKBKeyStoreDevice Event:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c136248 (    0x3c) __27-[MKBKeyStoreDevice Event:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c136284 (   0x1e4) -[MKBKeyStoreDevice addPersonaKeyForUserSession:withSecret:withPersonaUUIDString:forPath:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c136468 (    0x3c) __90-[MKBKeyStoreDevice addPersonaKeyForUserSession:withSecret:withPersonaUUIDString:forPath:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c1364a4 (    0x54) __90-[MKBKeyStoreDevice addPersonaKeyForUserSession:withSecret:withPersonaUUIDString:forPath:]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c1364f8 (   0x170) -[MKBKeyStoreDevice removePersonaKeyForUserSession:withPersonaUUIDString:withVolumeUUIDString:] [FUNC, OBJC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c136668 (    0x3c) __95-[MKBKeyStoreDevice removePersonaKeyForUserSession:withPersonaUUIDString:withVolumeUUIDString:]_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c1366a4 (    0x54) __95-[MKBKeyStoreDevice removePersonaKeyForUserSession:withPersonaUUIDString:withVolumeUUIDString:]_block_invoke_2 [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c1366f8 (   0x1e4) MKBEventsRegister [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c1368dc (    0xc0) aksNotificationCB [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c13699c (    0x94) MKBEventsUnregister [FUNC, EXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c136a30 (    0x50) __MKBEventsUnregister_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c136a80 (    0x28) analytics_send_persisted_sidp_recovery [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c136aa8 (    0xa0) analytics_send_nfc_hardware_state [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c136b48 (    0x7c) __analytics_send_nfc_hardware_state_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c136bc4 (    0xe0) analytics_send_passcode_status [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c136ca4 (    0x7c) __analytics_send_passcode_status_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c136d20 (    0xe4) analytics_send_kek_stats [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c136e04 (    0x7c) __analytics_send_kek_stats_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c136e80 (    0xd8) analytics_send_seshat_debug [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c136f58 (    0x4c) __analytics_send_seshat_debug_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c136fa4 (   0x110) analytics_send_sidp_recovery [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c1370b4 (   0x114) __analytics_send_sidp_recovery_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c1371c8 (    0xd8) analytics_send_db_filekey_found [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c1372a0 (    0x4c) __analytics_send_db_filekey_found_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c1372ec (    0xd8) analytics_send_db_filekey_not_found [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c1373c4 (    0x4c) __analytics_send_db_filekey_not_found_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c137410 (    0xd8) analytics_send_passphrase_change [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c1374e8 (    0x4c) __analytics_send_passphrase_change_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c137534 (    0xa0) analytics_send_backup_key_drain [FUNC, PEXT, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
                0x000000018c1375d4 (    0xf4) __analytics_send_backup_key_drain_block_invoke [FUNC, NameNList, MangledNameNList, Merged, NList, FunctionStarts] 
            0x000000018c1376c8 (   0xd20) __TEXT __auth_stubs
                0x000000018c1376c8 (    0x10) DYLD-STUB$$ADClientAddValueForScalarKey [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c1376d8 (    0x10) DYLD-STUB$$ADClientPushValueForDistributionKey [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c1376e8 (    0x10) DYLD-STUB$$ADClientSetValueForDistributionKey [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c1376f8 (    0x10) DYLD-STUB$$ADClientSetValueForScalarKey [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137708 (    0x10) DYLD-STUB$$AKSIdentityGetPrimary [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137718 (    0x10) DYLD-STUB$$CFAbsoluteTimeGetCurrent [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137728 (    0x10) DYLD-STUB$$CFArrayAppendValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137738 (    0x10) DYLD-STUB$$CFArrayCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137748 (    0x10) DYLD-STUB$$CFArrayCreateMutable [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137758 (    0x10) DYLD-STUB$$CFArrayCreateMutableCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137768 (    0x10) DYLD-STUB$$CFArrayGetCount [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137778 (    0x10) DYLD-STUB$$CFArrayGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137788 (    0x10) DYLD-STUB$$CFArrayGetValueAtIndex [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137798 (    0x10) DYLD-STUB$$CFArrayRemoveValueAtIndex [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c1377a8 (    0x10) DYLD-STUB$$CFBooleanGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c1377b8 (    0x10) DYLD-STUB$$CFBooleanGetValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c1377c8 (    0x10) DYLD-STUB$$CFDataCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c1377d8 (    0x10) DYLD-STUB$$CFDataCreateCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c1377e8 (    0x10) DYLD-STUB$$CFDataCreateWithBytesNoCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c1377f8 (    0x10) DYLD-STUB$$CFDataGetBytePtr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137808 (    0x10) DYLD-STUB$$CFDataGetLength [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137818 (    0x10) DYLD-STUB$$CFDataGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137828 (    0x10) DYLD-STUB$$CFDateCompare [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137838 (    0x10) DYLD-STUB$$CFDateCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137848 (    0x10) DYLD-STUB$$CFDateGetAbsoluteTime [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137858 (    0x10) DYLD-STUB$$CFDictionaryAddValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137868 (    0x10) DYLD-STUB$$CFDictionaryContainsKey [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137878 (    0x10) DYLD-STUB$$CFDictionaryCreateMutable [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137888 (    0x10) DYLD-STUB$$CFDictionaryCreateMutableCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137898 (    0x10) DYLD-STUB$$CFDictionaryGetCount [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c1378a8 (    0x10) DYLD-STUB$$CFDictionaryGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c1378b8 (    0x10) DYLD-STUB$$CFDictionaryGetValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c1378c8 (    0x10) DYLD-STUB$$CFDictionaryRemoveValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c1378d8 (    0x10) DYLD-STUB$$CFDictionarySetValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c1378e8 (    0x10) DYLD-STUB$$CFEqual [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c1378f8 (    0x10) DYLD-STUB$$CFErrorCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137908 (    0x10) DYLD-STUB$$CFGetAllocator [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137918 (    0x10) DYLD-STUB$$CFGetRetainCount [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137928 (    0x10) DYLD-STUB$$CFGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137938 (    0x10) DYLD-STUB$$CFNumberCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137948 (    0x10) DYLD-STUB$$CFNumberGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137958 (    0x10) DYLD-STUB$$CFNumberGetValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137968 (    0x10) DYLD-STUB$$CFPropertyListCreateWithStream [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137978 (    0x10) DYLD-STUB$$CFPropertyListWrite [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137988 (    0x10) DYLD-STUB$$CFReadStreamClose [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137998 (    0x10) DYLD-STUB$$CFReadStreamCreateWithBytesNoCopy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c1379a8 (    0x10) DYLD-STUB$$CFReadStreamOpen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c1379b8 (    0x10) DYLD-STUB$$CFRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c1379c8 (    0x10) DYLD-STUB$$CFRetain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c1379d8 (    0x10) DYLD-STUB$$CFStringAppendFormat [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c1379e8 (    0x10) DYLD-STUB$$CFStringCompare [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c1379f8 (    0x10) DYLD-STUB$$CFStringCreateMutable [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137a08 (    0x10) DYLD-STUB$$CFStringCreateWithCString [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137a18 (    0x10) DYLD-STUB$$CFStringCreateWithFormat [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137a28 (    0x10) DYLD-STUB$$CFStringCreateWithFormatAndArguments [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137a38 (    0x10) DYLD-STUB$$CFStringGetCString [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137a48 (    0x10) DYLD-STUB$$CFStringGetCStringPtr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137a58 (    0x10) DYLD-STUB$$CFStringGetTypeID [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137a68 (    0x10) DYLD-STUB$$CFUUIDCreateFromUUIDBytes [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137a78 (    0x10) DYLD-STUB$$CFWriteStreamClose [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137a88 (    0x10) DYLD-STUB$$CFWriteStreamCopyProperty [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137a98 (    0x10) DYLD-STUB$$CFWriteStreamCreateWithAllocatedBuffers [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137aa8 (    0x10) DYLD-STUB$$CFWriteStreamOpen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137ab8 (    0x10) DYLD-STUB$$IOConnectCallMethod [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137ac8 (    0x10) DYLD-STUB$$IONotificationPortCreate [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137ad8 (    0x10) DYLD-STUB$$IONotificationPortDestroy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137ae8 (    0x10) DYLD-STUB$$IONotificationPortSetDispatchQueue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137af8 (    0x10) DYLD-STUB$$IOObjectRelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137b08 (    0x10) DYLD-STUB$$IORegistryEntryCreateCFProperty [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137b18 (    0x10) DYLD-STUB$$IORegistryEntryFromPath [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137b28 (    0x10) DYLD-STUB$$IORegistryEntrySetCFProperty [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137b38 (    0x10) DYLD-STUB$$IOServiceAddInterestNotification [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137b48 (    0x10) DYLD-STUB$$IOServiceClose [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137b58 (    0x10) DYLD-STUB$$IOServiceGetMatchingService [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137b68 (    0x10) DYLD-STUB$$IOServiceMatching [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137b78 (    0x10) DYLD-STUB$$IOServiceOpen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137b88 (    0x10) DYLD-STUB$$MGGetBoolAnswer [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137b98 (    0x10) DYLD-STUB$$_Block_copy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137ba8 (    0x10) DYLD-STUB$$_Block_object_assign [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137bb8 (    0x10) DYLD-STUB$$_Block_object_dispose [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137bc8 (    0x10) DYLD-STUB$$_Block_release [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137bd8 (    0x10) DYLD-STUB$$_CFRuntimeCreateInstance [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137be8 (    0x10) DYLD-STUB$$_CFRuntimeRegisterClass [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137bf8 (    0x10) DYLD-STUB$$_Unwind_Resume [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137c08 (    0x10) DYLD-STUB$$__error [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137c18 (    0x10) DYLD-STUB$$__stack_chk_fail [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137c28 (    0x10) DYLD-STUB$$_os_log_impl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137c38 (    0x10) DYLD-STUB$$abort [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137c48 (    0x10) DYLD-STUB$$aks_assert_consume [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137c58 (    0x10) DYLD-STUB$$aks_assert_drop [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137c68 (    0x10) DYLD-STUB$$aks_assert_hold [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137c78 (    0x10) DYLD-STUB$$aks_assert_promote [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137c88 (    0x10) DYLD-STUB$$aks_bag_in_xart [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137c98 (    0x10) DYLD-STUB$$aks_change_secret_epilogue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137ca8 (    0x10) DYLD-STUB$$aks_change_secret_opts [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137cb8 (    0x10) DYLD-STUB$$aks_copy_volume_cookie [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137cc8 (    0x10) DYLD-STUB$$aks_copy_volume_cookie_persona [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137cd8 (    0x10) DYLD-STUB$$aks_fv_apfs_device_parse [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137ce8 (    0x10) DYLD-STUB$$aks_fv_apfs_get_blob_by_uuid [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137cf8 (    0x10) DYLD-STUB$$aks_fv_apfs_get_default_disk [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137d08 (    0x10) DYLD-STUB$$aks_fv_apfs_get_vek [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137d18 (    0x10) DYLD-STUB$$aks_fv_commit_stashed_kek [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137d28 (    0x10) DYLD-STUB$$aks_fv_destroy_stashed_kek [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137d38 (    0x10) DYLD-STUB$$aks_fv_get_blob_state [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137d48 (    0x10) DYLD-STUB$$aks_fv_lock_volume_bag [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137d58 (    0x10) DYLD-STUB$$aks_fv_owners_exist [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137d68 (    0x10) DYLD-STUB$$aks_fv_stash_kek [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137d78 (    0x10) DYLD-STUB$$aks_fv_stash_kek_with_secret [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137d88 (    0x10) DYLD-STUB$$aks_fv_unwrap_vek [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137d98 (    0x10) DYLD-STUB$$aks_get_configuration [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137da8 (    0x10) DYLD-STUB$$aks_get_current_sep_measurement [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137db8 (    0x10) DYLD-STUB$$aks_get_device_state [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137dc8 (    0x10) DYLD-STUB$$aks_get_extended_device_state [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137dd8 (    0x10) DYLD-STUB$$aks_get_lock_state [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137de8 (    0x10) DYLD-STUB$$aks_get_system [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137df8 (    0x10) DYLD-STUB$$aks_load_bag [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137e08 (    0x10) DYLD-STUB$$aks_lock_device [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137e18 (    0x10) DYLD-STUB$$aks_memento_efface_blob [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137e28 (    0x10) DYLD-STUB$$aks_memento_get_state [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137e38 (    0x10) DYLD-STUB$$aks_migrate_s_key [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137e48 (    0x10) DYLD-STUB$$aks_obliterate_class_d [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137e58 (    0x10) DYLD-STUB$$aks_prederived_free [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137e68 (    0x10) DYLD-STUB$$aks_prederived_is_enabled [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137e78 (    0x10) DYLD-STUB$$aks_prederived_unlock_keybag [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137e88 (    0x10) DYLD-STUB$$aks_prewarm_sps [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137e98 (    0x10) DYLD-STUB$$aks_recover_with_escrow_bag [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137ea8 (    0x10) DYLD-STUB$$aks_save_bag [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137eb8 (    0x10) DYLD-STUB$$aks_set_configuration [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137ec8 (    0x10) DYLD-STUB$$aks_set_keybag_for_volume_with_cookie [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137ed8 (    0x10) DYLD-STUB$$aks_set_keybag_for_volume_with_cookie_persona [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137ee8 (    0x10) DYLD-STUB$$aks_set_system_with_passcode [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137ef8 (    0x10) DYLD-STUB$$aks_stash_enable [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137f08 (    0x10) DYLD-STUB$$aks_stash_load [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137f18 (    0x10) DYLD-STUB$$aks_stash_persist [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137f28 (    0x10) DYLD-STUB$$aks_unload_bag [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137f38 (    0x10) DYLD-STUB$$aks_unlock_bag [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137f48 (    0x10) DYLD-STUB$$aks_unlock_device [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137f58 (    0x10) DYLD-STUB$$aks_verify_password [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137f68 (    0x10) DYLD-STUB$$aks_verify_password_memento [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137f78 (    0x10) DYLD-STUB$$analytics_send_event_lazy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137f88 (    0x10) DYLD-STUB$$arc4random [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137f98 (    0x10) DYLD-STUB$$bzero [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137fa8 (    0x10) DYLD-STUB$$calloc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137fb8 (    0x10) DYLD-STUB$$ccder_decode_len [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137fc8 (    0x10) DYLD-STUB$$ccder_decode_tag [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137fd8 (    0x10) DYLD-STUB$$close [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137fe8 (    0x10) DYLD-STUB$$dispatch_async [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c137ff8 (    0x10) DYLD-STUB$$dispatch_barrier_async [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c138008 (    0x10) DYLD-STUB$$dispatch_once [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c138018 (    0x10) DYLD-STUB$$dispatch_queue_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c138028 (    0x10) DYLD-STUB$$dispatch_queue_create_with_target$V2 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c138038 (    0x10) DYLD-STUB$$dispatch_release [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c138048 (    0x10) DYLD-STUB$$dlopen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c138058 (    0x10) DYLD-STUB$$dlsym [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c138068 (    0x10) DYLD-STUB$$exit [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c138078 (    0x10) DYLD-STUB$$fcntl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c138088 (    0x10) DYLD-STUB$$ffsctl [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c138098 (    0x10) DYLD-STUB$$fprintf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c1380a8 (    0x10) DYLD-STUB$$free [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c1380b8 (    0x10) DYLD-STUB$$fstat [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c1380c8 (    0x10) DYLD-STUB$$getattrlist [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c1380d8 (    0x10) DYLD-STUB$$geteuid [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c1380e8 (    0x10) DYLD-STUB$$getpwuid [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c1380f8 (    0x10) DYLD-STUB$$host_get_multiuser_config_flags [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c138108 (    0x10) DYLD-STUB$$host_set_multiuser_config_flags [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c138118 (    0x10) DYLD-STUB$$mach_absolute_time [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c138128 (    0x10) DYLD-STUB$$mach_host_self [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c138138 (    0x10) DYLD-STUB$$mach_port_type [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c138148 (    0x10) DYLD-STUB$$mach_timebase_info [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c138158 (    0x10) DYLD-STUB$$malloc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c138168 (    0x10) DYLD-STUB$$mbr_uid_to_uuid [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c138178 (    0x10) DYLD-STUB$$memcpy [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c138188 (    0x10) DYLD-STUB$$memset_s [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c138198 (    0x10) DYLD-STUB$$mkdir [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c1381a8 (    0x10) DYLD-STUB$$objc_alloc [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c1381b8 (    0x10) DYLD-STUB$$objc_autoreleaseReturnValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c1381c8 (    0x10) DYLD-STUB$$objc_opt_class [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c1381d8 (    0x10) DYLD-STUB$$objc_opt_new [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c1381e8 (    0x10) DYLD-STUB$$objc_release [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c1381f8 (    0x10) DYLD-STUB$$objc_retain [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c138208 (    0x10) DYLD-STUB$$objc_retainAutorelease [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c138218 (    0x10) DYLD-STUB$$objc_retainAutoreleaseReturnValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c138228 (    0x10) DYLD-STUB$$objc_retainAutoreleasedReturnValue [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c138238 (    0x10) DYLD-STUB$$objc_storeStrong [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c138248 (    0x10) DYLD-STUB$$open [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c138258 (    0x10) DYLD-STUB$$open_dprotected_np [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c138268 (    0x10) DYLD-STUB$$os_log_type_enabled [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c138278 (    0x10) DYLD-STUB$$pipe [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c138288 (    0x10) DYLD-STUB$$pthread_once [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c138298 (    0x10) DYLD-STUB$$read [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c1382a8 (    0x10) DYLD-STUB$$reallocf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c1382b8 (    0x10) DYLD-STUB$$rename [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c1382c8 (    0x10) DYLD-STUB$$renamex_np [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c1382d8 (    0x10) DYLD-STUB$$snprintf [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c1382e8 (    0x10) DYLD-STUB$$statfs [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c1382f8 (    0x10) DYLD-STUB$$strdup [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c138308 (    0x10) DYLD-STUB$$strerror [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c138318 (    0x10) DYLD-STUB$$strlen [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c138328 (    0x10) DYLD-STUB$$strnstr [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c138338 (    0x10) DYLD-STUB$$sysctlbyname [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c138348 (    0x10) DYLD-STUB$$time [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c138358 (    0x10) DYLD-STUB$$unlink [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c138368 (    0x10) DYLD-STUB$$write [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c138378 (    0x10) DYLD-STUB$$xpc_bool_get_value [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c138388 (    0x10) DYLD-STUB$$xpc_copy_entitlement_for_token [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c138398 (    0x10) DYLD-STUB$$xpc_dictionary_create [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c1383a8 (    0x10) DYLD-STUB$$xpc_dictionary_set_bool [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c1383b8 (    0x10) DYLD-STUB$$xpc_dictionary_set_uint64 [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c1383c8 (    0x10) DYLD-STUB$$xpc_get_type [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
                0x000000018c1383d8 (    0x10) DYLD-STUB$$xpc_release [DYLD-STUB, LENGTH, NameNList, MangledNameNList, NList] 
            0x000000018c1383e8 (   0x194) __TEXT __objc_methlist
                0x000000018c1383e8 (    0x18) _OBJC_$_CLASS_METHODS_MKBKeyStoreDevice [NameNList, MangledNameNList, NList] 
                0x000000018c138400 (   0x17c) _OBJC_$_INSTANCE_METHODS_MKBKeyStoreDevice [NameNList, MangledNameNList, NList] 
            0x000000018c13857c (  0x42b1) __TEXT __cstring
            0x000000018c13c830 (   0x478) __TEXT __const
            0x000000018c13cca8 (    0x28) __TEXT __oslogstring
            0x000000018c13ccd0 (   0x3d8) __TEXT __gcc_except_tab
                0x000000018c13ccd0 (    0x28) GCC_except_table4 [NameNList, MangledNameNList, NList] 
                0x000000018c13ccf8 (    0x24) GCC_except_table9 [NameNList, MangledNameNList, NList] 
                0x000000018c13cd1c (    0x20) GCC_except_table12 [NameNList, MangledNameNList, NList] 
                0x000000018c13cd3c (    0x28) GCC_except_table17 [NameNList, MangledNameNList, NList] 
                0x000000018c13cd64 (    0x28) GCC_except_table22 [NameNList, MangledNameNList, NList] 
                0x000000018c13cd8c (    0x24) GCC_except_table25 [NameNList, MangledNameNList, NList] 
                0x000000018c13cdb0 (    0x24) GCC_except_table28 [NameNList, MangledNameNList, NList] 
                0x000000018c13cdd4 (    0x24) GCC_except_table31 [NameNList, MangledNameNList, NList] 
                0x000000018c13cdf8 (    0x24) GCC_except_table34 [NameNList, MangledNameNList, NList] 
                0x000000018c13ce1c (    0x28) GCC_except_table37 [NameNList, MangledNameNList, NList] 
                0x000000018c13ce44 (    0x24) GCC_except_table40 [NameNList, MangledNameNList, NList] 
                0x000000018c13ce68 (    0x24) GCC_except_table43 [NameNList, MangledNameNList, NList] 
                0x000000018c13ce8c (    0x20) GCC_except_table46 [NameNList, MangledNameNList, NList] 
                0x000000018c13ceac (    0x20) GCC_except_table49 [NameNList, MangledNameNList, NList] 
                0x000000018c13cecc (    0x20) GCC_except_table52 [NameNList, MangledNameNList, NList] 
                0x000000018c13ceec (    0x20) GCC_except_table55 [NameNList, MangledNameNList, NList] 
                0x000000018c13cf0c (    0x20) GCC_except_table58 [NameNList, MangledNameNList, NList] 
                0x000000018c13cf2c (    0x24) GCC_except_table61 [NameNList, MangledNameNList, NList] 
                0x000000018c13cf50 (    0x24) GCC_except_table64 [NameNList, MangledNameNList, NList] 
                0x000000018c13cf74 (    0x24) GCC_except_table67 [NameNList, MangledNameNList, NList] 
                0x000000018c13cf98 (    0x28) GCC_except_table70 [NameNList, MangledNameNList, NList] 
                0x000000018c13cfc0 (    0x20) GCC_except_table73 [NameNList, MangledNameNList, NList] 
                0x000000018c13cfe0 (    0x20) GCC_except_table76 [NameNList, MangledNameNList, NList] 
                0x000000018c13d000 (    0x20) GCC_except_table79 [NameNList, MangledNameNList, NList] 
                0x000000018c13d020 (    0x20) GCC_except_table82 [NameNList, MangledNameNList, NList] 
                0x000000018c13d040 (    0x20) GCC_except_table85 [NameNList, MangledNameNList, NList] 
                0x000000018c13d060 (    0x24) GCC_except_table90 [NameNList, MangledNameNList, NList] 
                0x000000018c13d084 (    0x24) GCC_except_table93 [NameNList, MangledNameNList, NList] 
            0x000000018c13d0a8 (   0x528) __TEXT __unwind_info
            0x000000018c13d5d0 (    0x2a) __TEXT __objc_classname
            0x000000018c13d5fa (   0xb67) __TEXT __objc_methname
            0x000000018c13e161 (   0x7b4) __TEXT __objc_methtype
            0x000000018c13e920 (   0x6e0) __TEXT __objc_stubs
                0x000000018c13e920 (    0x20) objc_msgSend$Event: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000018c13e940 (    0x20) objc_msgSend$SetSystemSecretBlob: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000018c13e960 (    0x20) objc_msgSend$_CreateMKBServerConnection [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000018c13e980 (    0x20) objc_msgSend$addPersonaKeyForUserSession:withSecret:withPersonaUUIDString:forPath: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000018c13e9a0 (    0x20) objc_msgSend$backupUUIDForVolume:reply: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000018c13e9c0 (    0x20) objc_msgSend$bindToKEK:secretSize:withUID:withHandle:reply: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000018c13e9e0 (    0x20) objc_msgSend$bindToKEK:withUID:withHandle: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000018c13ea00 (    0x20) objc_msgSend$bytes [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000018c13ea20 (    0x20) objc_msgSend$changeClassKeysGenerationWithSecret:secretSize:generationOption:reply: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000018c13ea40 (    0x20) objc_msgSend$changeSystemSecretFromOldPasscode:ToNew:withOpaqueData:withParams: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000018c13ea60 (    0x20) objc_msgSend$changeSystemSecretWithEscrow:fromOldSecret:oldSize:toNewSecret:newSize:opaqueData:keepstate:reply: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000018c13ea80 (    0x20) objc_msgSend$changeSystemSecretfromOldSecret:oldSize:toNewSecret:newSize:opaqueData:withParams:reply: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000018c13eaa0 (    0x20) objc_msgSend$code [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000018c13eac0 (    0x20) objc_msgSend$copySytemSecretBlob [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000018c13eae0 (    0x20) objc_msgSend$createPersonaKeyForUserSession:forPath:withUID:WithSecret:secretSize:withReply: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000018c13eb00 (    0x20) objc_msgSend$disableBackupForVolume:reply: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000018c13eb20 (    0x20) objc_msgSend$enableBackupForVolume:withSecret:secretSize:reply: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000018c13eb40 (    0x20) objc_msgSend$getBackupkeyForVolume:andCryptoID:withReply: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000018c13eb60 (    0x20) objc_msgSend$getDeviceLockState:needsExtended:withReply: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000018c13eb80 (    0x20) objc_msgSend$getDeviceLockStateForUser:extendedState:withLockStateInfo: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000018c13eba0 (    0x20) objc_msgSend$getFileHandleForData: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000018c13ebc0 (    0x20) objc_msgSend$getLockSateInfoforUser:WithReply: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000018c13ebe0 (    0x20) objc_msgSend$getPasscodeBlobWithReply: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000018c13ec00 (    0x20) objc_msgSend$getPolicyStatus:withUUID:reply: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000018c13ec20 (    0x20) objc_msgSend$getPolicyStatus:withUUID:withreturnedError: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000018c13ec40 (    0x20) objc_msgSend$initWithFileDescriptor:closeOnDealloc: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000018c13ec60 (    0x20) objc_msgSend$initWithMachServiceName:options: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000018c13ec80 (    0x20) objc_msgSend$interfaceWithProtocol: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000018c13eca0 (    0x20) objc_msgSend$invalidate [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000018c13ecc0 (    0x20) objc_msgSend$isKeyRollingInProgresswithreply: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000018c13ece0 (    0x20) objc_msgSend$length [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000018c13ed00 (    0x20) objc_msgSend$migrationWithReply: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000018c13ed20 (    0x20) objc_msgSend$passcodeUnlockFailedWithReply: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000018c13ed40 (    0x20) objc_msgSend$passcodeUnlockStartWithReply: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000018c13ed60 (    0x20) objc_msgSend$passcodeUnlockSuccessWithReply: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000018c13ed80 (    0x20) objc_msgSend$registerBackupBag:withSecret:secretSize:reply: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000018c13eda0 (    0x20) objc_msgSend$removePersonaKeyForUserSession:withPersonaUUIDString:withVolumeUUIDString: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000018c13edc0 (    0x20) objc_msgSend$removePersonaKeyForUserSession:withUID:withVolumeUUIDString:withReply: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000018c13ede0 (    0x20) objc_msgSend$resume [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000018c13ee00 (    0x20) objc_msgSend$setRemoteObjectInterface: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000018c13ee20 (    0x20) objc_msgSend$setSystemSecretBlob:reply: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000018c13ee40 (    0x20) objc_msgSend$setUserUUID:secretSize:withUID:withUUID:withHandle:reply: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000018c13ee60 (    0x20) objc_msgSend$setUserUUID:withUID:withUUID:withHandle: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000018c13ee80 (    0x20) objc_msgSend$sharedService [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000018c13eea0 (    0x20) objc_msgSend$startBackupSessionForVolume:withReply: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000018c13eec0 (    0x20) objc_msgSend$stashCommit:WithFlags: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000018c13eee0 (    0x20) objc_msgSend$stashCommitwithUID:WithFlags:WithReply: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000018c13ef00 (    0x20) objc_msgSend$stashCreateWithSecret:withMode:withUID:WithFlags: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000018c13ef20 (    0x20) objc_msgSend$stashCreatewithSecret:secrestSize:withMode:withUID:WithFlags:reply: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000018c13ef40 (    0x20) objc_msgSend$stashDestroy [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000018c13ef60 (    0x20) objc_msgSend$stashDestroywithReply: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000018c13ef80 (    0x20) objc_msgSend$stashVerifywithUID:WithFlags:WithReply: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000018c13efa0 (    0x20) objc_msgSend$stashVerifywithValidity:WithUID:WithFlags: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000018c13efc0 (    0x20) objc_msgSend$stopBackupSessionForVolume:withReply: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
                0x000000018c13efe0 (    0x20) objc_msgSend$synchronousRemoteObjectProxyWithErrorHandler: [FUNC, PEXT, NameNList, MangledNameNList, NList] 
        0x00000001db95ac98 (   0xc88) __DATA_CONST SEGMENT
            0x00000001db95ac98 (    0x98) __DATA_CONST __got
            0x00000001db95ad30 (   0x2e8) __DATA_CONST __const
                0x00000001db95ad30 (     0x8) kMKBInfoLockState [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db95ad38 (     0x8) kMKBInfoBackOff [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db95ad40 (     0x8) kMKBInfoFailedAttempts [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db95ad48 (     0x8) kMKBInfoBagState [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db95ad50 (     0x8) kMKBInfoRecoveryCountdown [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db95ad58 (     0x8) kMKBInfoPermanentlyBlocked [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db95ad60 (     0x8) kMKBInfoShouldWipe [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db95ad68 (     0x8) kMKBConfigGracePeriod [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db95ad70 (     0x8) kMKBConfigMaxUnlockAttempts [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db95ad78 (     0x8) kMKBConfigBackOffDelay [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db95ad80 (     0x8) kMKBConfigFlags [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db95ad88 (    0x20) __block_descriptor_32_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db95ada8 (    0x20) __AssertionTypes [NameNList, MangledNameNList, NList] 
                0x00000001db95adc8 (    0x20) __block_descriptor_tmp [NameNList, MangledNameNList, NList] 
                0x00000001db95ade8 (    0x20) __block_descriptor_tmp.14 [NameNList, MangledNameNList, NList] 
                0x00000001db95ae08 (     0x8) kMKBPolicyUID [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db95ae10 (     0x8) kMKBPolicyAuditToken [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db95ae18 (     0x8) kMKBPolicyFailedUnlockAttempts [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db95ae20 (     0x8) kMKBPolicyBackOffDelay [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db95ae28 (     0x8) kMKBPolicyMaxUnlockAttempts [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db95ae30 (     0x8) kMKBPolicyIndex [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db95ae38 (     0x8) kMobileKeyBagLockStatusNotification [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db95ae40 (     0x8) kMobileKeyBagLockStatusNotifyToken [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db95ae48 (     0x8) kMobileKeyBagPasscodeThresholdNotifyToken [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db95ae50 (     0x8) kMobileKeyBagUserChangedNotification [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db95ae58 (     0x8) kMobileKeyBagUserChangedNotificationToken [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db95ae60 (     0x8) kUMForegroundUserChangedNotificationToken [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db95ae68 (     0x8) kMobileKeyBagUserStartedNotificationToken [EXT, NameNList, MangledNameNList, NList] 
                0x00000001db95ae70 (     0x8) kMKBLockModelIsPermanentlyBlocked [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db95ae78 (     0x8) kMKBLockModelIsWipePending [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db95ae80 (     0x8) kMKBLockModelTimeUntilUnblockedSinceReferenceDate [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db95ae88 (     0x8) kMKBLockModelFailedPasscodeAttempts [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db95ae90 (     0x8) kMKBUserSessionHasSyncBagKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db95ae98 (    0x20) __block_descriptor_40_e5_v8?0l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db95aeb8 (    0x20) __block_descriptor_32_e17_v16?0"NSError"8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db95aed8 (    0x20) __block_descriptor_tmp [NameNList, MangledNameNList, NList] 
                0x00000001db95aef8 (    0x20) __block_descriptor_tmp [NameNList, MangledNameNList, NList] 
                0x00000001db95af18 (    0x20) __block_descriptor_tmp.16 [NameNList, MangledNameNList, NList] 
                0x00000001db95af38 (    0x20) __block_descriptor_tmp.24 [NameNList, MangledNameNList, NList] 
                0x00000001db95af58 (    0x20) __block_descriptor_tmp.30 [NameNList, MangledNameNList, NList] 
                0x00000001db95af78 (    0x20) __block_descriptor_tmp.45 [NameNList, MangledNameNList, NList] 
                0x00000001db95af98 (    0x20) __block_descriptor_tmp.51 [NameNList, MangledNameNList, NList] 
                0x00000001db95afb8 (    0x20) __block_descriptor_tmp.56 [NameNList, MangledNameNList, NList] 
                0x00000001db95afd8 (    0x20) __block_descriptor_tmp.65 [NameNList, MangledNameNList, NList] 
                0x00000001db95aff8 (    0x20) __block_descriptor_tmp.77 [NameNList, MangledNameNList, NList] 
            0x00000001db95b018 (     0x8) __DATA_CONST __objc_classlist
            0x00000001db95b020 (    0x10) __DATA_CONST __objc_protolist
                0x00000001db95b020 (     0x8) _OBJC_LABEL_PROTOCOL_$_NSObject [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db95b028 (     0x8) _OBJC_LABEL_PROTOCOL_$_KBXPCProtocol [PEXT, NameNList, MangledNameNList, NList] 
            0x00000001db95b030 (     0x8) __DATA_CONST __objc_imageinfo
            0x00000001db95b038 (   0x6b8) __DATA_CONST __objc_const
                0x00000001db95b038 (   0x1d0) _OBJC_$_PROTOCOL_INSTANCE_METHODS_NSObject [NameNList, MangledNameNList, NList] 
                0x00000001db95b208 (    0x20) _OBJC_$_PROTOCOL_INSTANCE_METHODS_OPT_NSObject [NameNList, MangledNameNList, NList] 
                0x00000001db95b228 (    0x48) _OBJC_$_PROP_LIST_NSObject [NameNList, MangledNameNList, NList] 
                0x00000001db95b270 (    0xa0) _OBJC_$_PROTOCOL_METHOD_TYPES_NSObject [NameNList, MangledNameNList, NList] 
                0x00000001db95b310 (    0x18) _OBJC_$_PROTOCOL_REFS_KBXPCProtocol [NameNList, MangledNameNList, NList] 
                0x00000001db95b328 (   0x2d8) _OBJC_$_PROTOCOL_INSTANCE_METHODS_KBXPCProtocol [NameNList, MangledNameNList, NList] 
                0x00000001db95b600 (    0xf0) _OBJC_$_PROTOCOL_METHOD_TYPES_KBXPCProtocol [NameNList, MangledNameNList, NList] 
            0x00000001db95b6f0 (   0x230) __DATA_CONST __objc_selrefs
        0x00000001db95b920 (  0x3a88) __AUTH_CONST SEGMENT
            0x00000001db95b920 (  0x2c60) __AUTH_CONST __cfstring
            0x00000001db95e580 (   0x6d0) __AUTH_CONST __const
                0x00000001db95e580 (    0x20) __block_literal_global [NameNList, MangledNameNList, NList] 
                0x00000001db95e5a0 (    0x60) __MKBKeyBagHandleClass [NameNList, MangledNameNList, NList] 
                0x00000001db95e600 (    0x20) __block_literal_global.198 [NameNList, MangledNameNList, NList] 
                0x00000001db95e620 (    0x60) __MKBAssertionClass [NameNList, MangledNameNList, NList] 
                0x00000001db95e680 (    0x20) __block_literal_global [NameNList, MangledNameNList, NList] 
                0x00000001db95e6a0 (    0x30) __block_descriptor_tmp.59 [NameNList, MangledNameNList, NList] 
                0x00000001db95e6d0 (    0x30) __block_descriptor_tmp.66 [NameNList, MangledNameNList, NList] 
                0x00000001db95e700 (    0x30) __block_descriptor_tmp.70 [NameNList, MangledNameNList, NList] 
                0x00000001db95e730 (    0x30) __block_descriptor_tmp [NameNList, MangledNameNList, NList] 
                0x00000001db95e760 (    0x20) __block_literal_global [NameNList, MangledNameNList, NList] 
                0x00000001db95e780 (    0x30) __block_descriptor_48_e8_32s40r_e17_v16?0"NSError"8l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db95e7b0 (    0x20) __block_literal_global.171 [NameNList, MangledNameNList, NList] 
                0x00000001db95e7d0 (    0x20) __block_literal_global.173 [NameNList, MangledNameNList, NList] 
                0x00000001db95e7f0 (    0x30) __block_descriptor_48_e8_32s40r_e28_v24?0"NSData"8"NSError"16l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db95e820 (    0x20) __block_literal_global.184 [NameNList, MangledNameNList, NList] 
                0x00000001db95e840 (    0x30) __block_descriptor_56_e8_32s40r48r_e28_v24?0"NSData"8"NSError"16l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db95e870 (    0x20) __block_literal_global.186 [NameNList, MangledNameNList, NList] 
                0x00000001db95e890 (    0x20) __block_literal_global.188 [NameNList, MangledNameNList, NList] 
                0x00000001db95e8b0 (    0x20) __block_literal_global.190 [NameNList, MangledNameNList, NList] 
                0x00000001db95e8d0 (    0x20) __block_literal_global.192 [NameNList, MangledNameNList, NList] 
                0x00000001db95e8f0 (    0x20) __block_literal_global.197 [NameNList, MangledNameNList, NList] 
                0x00000001db95e910 (    0x20) __block_literal_global.199 [NameNList, MangledNameNList, NList] 
                0x00000001db95e930 (    0x20) __block_literal_global.201 [NameNList, MangledNameNList, NList] 
                0x00000001db95e950 (    0x20) __block_literal_global.203 [NameNList, MangledNameNList, NList] 
                0x00000001db95e970 (    0x20) __block_literal_global.205 [NameNList, MangledNameNList, NList] 
                0x00000001db95e990 (    0x20) __block_literal_global.207 [NameNList, MangledNameNList, NList] 
                0x00000001db95e9b0 (    0x20) __block_literal_global.209 [NameNList, MangledNameNList, NList] 
                0x00000001db95e9d0 (    0x20) __block_literal_global.211 [NameNList, MangledNameNList, NList] 
                0x00000001db95e9f0 (    0x30) __block_descriptor_48_e8_32s40r_e34_v24?0"NSDictionary"8"NSError"16l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db95ea20 (    0x20) __block_literal_global.216 [NameNList, MangledNameNList, NList] 
                0x00000001db95ea40 (    0x30) __block_descriptor_56_e8_32s40r_e20_v20?0i8"NSError"12l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db95ea70 (    0x20) __block_literal_global.221 [NameNList, MangledNameNList, NList] 
                0x00000001db95ea90 (    0x20) __block_literal_global.223 [NameNList, MangledNameNList, NList] 
                0x00000001db95eab0 (    0x20) __block_literal_global.225 [NameNList, MangledNameNList, NList] 
                0x00000001db95ead0 (    0x20) __block_literal_global.227 [NameNList, MangledNameNList, NList] 
                0x00000001db95eaf0 (    0x30) __block_descriptor_56_e8_32s40r48r_e34_v24?0"NSDictionary"8"NSError"16l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db95eb20 (    0x20) __block_literal_global.231 [NameNList, MangledNameNList, NList] 
                0x00000001db95eb40 (    0x20) __block_literal_global.233 [NameNList, MangledNameNList, NList] 
                0x00000001db95eb60 (    0x20) __block_literal_global.235 [NameNList, MangledNameNList, NList] 
                0x00000001db95eb80 (    0x30) __block_descriptor_56_e8_32s40r48r_e20_v20?0i8"NSError"12l [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001db95ebb0 (    0x20) __block_literal_global.239 [NameNList, MangledNameNList, NList] 
                0x00000001db95ebd0 (    0x20) __block_literal_global.241 [NameNList, MangledNameNList, NList] 
                0x00000001db95ebf0 (    0x20) __block_literal_global.243 [NameNList, MangledNameNList, NList] 
                0x00000001db95ec10 (    0x20) __block_literal_global.245 [NameNList, MangledNameNList, NList] 
                0x00000001db95ec30 (    0x20) __block_literal_global.247 [NameNList, MangledNameNList, NList] 
            0x00000001db95ec50 (    0x28) __AUTH_CONST __auth_ptr
            0x00000001db95ec78 (    0x90) __AUTH_CONST __objc_const
                0x00000001db95ec78 (    0x48) _OBJC_METACLASS_RO_$_MKBKeyStoreDevice [NameNList, MangledNameNList, NList] 
                0x00000001db95ecc0 (    0x48) _OBJC_CLASS_RO_$_MKBKeyStoreDevice [NameNList, MangledNameNList, NList] 
            0x00000001db95ed08 (   0x6a0) __AUTH_CONST __auth_got
        0x00000001d73245f0 (    0x80) __AUTH SEGMENT
            0x00000001d73245f0 (    0x50) __AUTH __objc_data
                0x00000001d73245f0 (    0x28) OBJC_METACLASS_$_MKBKeyStoreDevice [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d7324618 (    0x28) OBJC_CLASS_$_MKBKeyStoreDevice [PEXT, NameNList, MangledNameNList, NList] 
            0x00000001d7324640 (    0x30) __AUTH __data
                0x00000001d7324640 (    0x30) persisted_keys_table [PEXT, NameNList, MangledNameNList, NList] 
        0x00000001d5d2b280 (   0x410) __DATA SEGMENT
            0x00000001d5d2b280 (     0x8) __DATA __objc_protorefs
                0x00000001d5d2b280 (     0x8) _OBJC_PROTOCOL_REFERENCE_$_KBXPCProtocol [PEXT, NameNList, MangledNameNList, NList] 
            0x00000001d5d2b288 (    0x20) __DATA __objc_classrefs
            0x00000001d5d2b2a8 (   0x308) __DATA __data
                0x00000001d5d2b2a8 (     0x9) gUserUnlockedSinceBoot [NameNList, MangledNameNList, NList] 
                0x00000001d5d2b2b1 (     0x7) isInternalBuild.bIsInternal [NameNList, MangledNameNList, NList] 
                0x00000001d5d2b2b8 (     0x8) isInternalBuild.onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d5d2b2c0 (     0x8) sharedService.service [NameNList, MangledNameNList, NList] 
                0x00000001d5d2b2c8 (     0x8) sharedService.onceToken [NameNList, MangledNameNList, NList] 
                0x00000001d5d2b2d0 (    0x10) MKBAssertionGetTypeID.typeIDInit [NameNList, MangledNameNList, NList] 
                0x00000001d5d2b2e0 (     0x8) kMKBUserSessionTypeKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d2b2e8 (     0x8) kMKBUserSessionManagedDevice [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d2b2f0 (     0x8) kMKBUserSessionOther [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d2b2f8 (     0x8) kMKBUserSessionIDKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d2b300 (     0x8) kMKBUserSessionGroupIDKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d2b308 (     0x8) kMKBUserSessionNameKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d2b310 (     0x8) kMKBUserSessionHomeDirKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d2b318 (     0x8) kMKBUserSessionLibinfoHomeDirKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d2b320 (     0x8) kMKBUserSessionForegroundKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d2b328 (     0x8) kMKBUserSessionDirtyKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d2b330 (     0x8) kMKBUserSessionDisabledKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d2b338 (     0x8) kMKBUserSessionLanguageKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d2b340 (     0x8) kMKBUserSessionQuotaUsedKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d2b348 (     0x8) kMKBUserSessionQuotaSoftLimitKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d2b350 (     0x8) kMKBUserSessionQuotaLimitKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d2b358 (     0x8) kMKBUserSessionUUIDKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d2b360 (     0x8) kMKBUserSessionAlternateUUIDKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d2b368 (     0x8) kMKBUserSessionOpaqueDataKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d2b370 (     0x8) kMKBUserSessionShortNameKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d2b378 (     0x8) kMKBUserSessionFirstNameKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d2b380 (     0x8) kMKBUserSessionLastNameKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d2b388 (     0x8) kMKBUserSessionDisplayNameKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d2b390 (     0x8) kMKBUserSessionFileInfoKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d2b398 (     0x8) kMKBUserSessionLoginTimeStampKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d2b3a0 (     0x8) kMKBUserSessionCreateTimeStampKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d2b3a8 (     0x8) kMKBUserSessionAPNSIDKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d2b3b0 (     0x8) kMKBUserSessionAuditorKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d2b3b8 (     0x8) kMKBUserSessionisTransientKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d2b3c0 (     0x8) kMKBUserSessionLoginUserKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d2b3c8 (     0x8) kMKBUserSessionCloudLoginTimeStampKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d2b3d0 (     0x8) kMKBUserSessionRequiresPasscodeKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d2b3d8 (     0x8) kMKBUserSessionFirstLoginStartTimeKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d2b3e0 (     0x8) kMKBUserSessionFirstLoginEndTimeKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d2b3e8 (     0x8) kMKBUserSessionCachedLoginStartTimeKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d2b3f0 (     0x8) kMKBUserSessionCachedLoginEndTimeKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d2b3f8 (     0x8) kMKBUserSessionLogoutStartTimeKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d2b400 (     0x8) kMKBUserSessionLogoutEndTimeKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d2b408 (     0x8) kMKBUserSessionTotalUsers [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d2b410 (     0x8) kMKBUserSessionReqTotalUsers [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d2b418 (     0x8) kMKBUserSessionEachUserSize [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d2b420 (     0x8) kMKBUserSessionTotalDataSize [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d2b428 (     0x8) kMKBUserSessionSystemLoginSize [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d2b430 (     0x8) kMKBUserSessionPreviousLoggedinIDKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d2b438 (     0x8) kMKBUserSessionSyncMachServicesKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d2b440 (     0x8) kMKBUserSessionSyncTasksKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d2b448 (     0x8) kMKBDeviceModeKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d2b450 (     0x8) kMKBDeviceModeSingleUser [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d2b458 (     0x8) kMKBDeviceModeMultiUser [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d2b460 (     0x8) kMKBDeviceModeSharedIPad [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d2b468 (     0x8) kMKBUserTypeKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d2b470 (     0x8) kMKBUserTypePermanent [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d2b478 (     0x8) kMKBUserTypeEphemeral [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d2b480 (     0x8) kMKBUserSwitchTaskMachServiceNameKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d2b488 (     0x8) kMKBUserSwitchTaskNameKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d2b490 (     0x8) kMKBUserSwitchTaskReasonKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d2b498 (     0x8) kMKBUserSwitchTaskBundleIDKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d2b4a0 (     0x8) kMKBUserSwitchTaskUUIDKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d2b4a8 (     0x8) kMKBUserSwitchTaskPIDKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d2b4b0 (     0x8) kMKBUserSessionDeviceNetworkBGKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d2b4b8 (     0x8) kMKBUserSessionVolumeDeviceNodeKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d2b4c0 (     0x8) kMKBUserSessionVolumeUUIDKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d2b4c8 (     0x8) kMKBUserSessionVolumeMountedKey [EXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d2b4d0 (     0x8) kMKBUserSessionUserVolumeTypeKey [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d2b4d8 (     0x8) kMKBUserSessionAPFSNativeVolume [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d2b4e0 (     0x8) kMKBUserSessionAPFSConvertedVolume [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d2b4e8 (     0x8) kMKBUserSessionHFSPlusVolume [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d2b4f0 (    0x60) _OBJC_PROTOCOL_$_NSObject [PEXT, NameNList, MangledNameNList, NList] 
                0x00000001d5d2b550 (    0x60) _OBJC_PROTOCOL_$_KBXPCProtocol [PEXT, NameNList, MangledNameNList, NList] 
            0x00000001d5d2b5b0 (    0xd8) __DATA __bss
                0x00000001d5d2b5b0 (     0x8) _logFunction [NameNList, MangledNameNList, NList] 
                0x00000001d5d2b5b8 (     0x8) _logFunction_v [NameNList, MangledNameNList, NList] 
                0x00000001d5d2b5c0 (     0x1) MKBDeviceSupportsEnhancedAPFS.once [NameNList, MangledNameNList, NList] 
                0x00000001d5d2b5c1 (     0x1) MKBDeviceSupportsEnhancedAPFS.answer [NameNList, MangledNameNList, NList] 
                0x00000001d5d2b5c2 (     0x1) check_apfs_shared_datavolume_bootarg.init [NameNList, MangledNameNList, NList] 
                0x00000001d5d2b5c3 (     0x5) check_apfs_shared_datavolume_bootarg.value [NameNList, MangledNameNList, NList] 
                0x00000001d5d2b5c8 (     0x8) _log_func [NameNList, MangledNameNList, NList] 
                0x00000001d5d2b5d0 (     0x8) __gMKBAssertionTypeID [NameNList, MangledNameNList, NList] 
                0x00000001d5d2b5d8 (     0x8) MKBKeyBagHandleGetTypeID.__MKBKeyBagHandleTypeID [NameNList, MangledNameNList, NList] 
                0x00000001d5d2b5e0 (     0x8) MKBKeyBagHandleGetTypeID.onlyOnce [NameNList, MangledNameNList, NList] 
                0x00000001d5d2b5e8 (     0x8) gSystemUnlockedSinceBoot [NameNList, MangledNameNList, NList] 
                0x00000001d5d2b5f0 (    0x88) log_blob.buf [NameNList, MangledNameNList, NList] 
                0x00000001d5d2b678 (     0x8) mkb_time_stop.time_overhead_measured [NameNList, MangledNameNList, NList] 
                0x00000001d5d2b680 (     0x8) mkb_time_stop.timebase_factor [NameNList, MangledNameNList, NList] 
            0x00000001d5d2b688 (     0x8) __DATA __common
                0x00000001d5d2b688 (     0x8) gMigrateQueue [PEXT, NameNList, MangledNameNList, NList] 
        0x000000023a910000 (0x37bf0000) __LINKEDIT SEGMENT
